import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest3 {

    public static boolean debug = false;

    @Test
    public void test1501() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1501");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str4 = python2Target1.encodeIntAsCharEscape(64);
        java.lang.String str5 = python2Target1.getLanguage();
        java.lang.String str7 = python2Target1.getListLabel("");
        java.lang.String str8 = python2Target1.getVersion();
        java.util.Set<java.lang.String> strSet9 = python2Target1.getBadWords();
        java.lang.String str12 = python2Target1.getTargetStringLiteralFromString("@", false);
        org.antlr.v4.codegen.CodeGenerator codeGenerator13 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target14 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator13);
        java.util.Set<java.lang.String> strSet15 = python2Target14.badWords;
        java.lang.String str18 = python2Target14.getTargetStringLiteralFromString("hi!", false);
        int int19 = python2Target14.getInlineTestSetWordSize();
        boolean boolean20 = python2Target14.wantsBaseListener();
        java.lang.String str22 = python2Target14.encodeIntAsCharEscape((int) (byte) 10);
        org.antlr.v4.codegen.CodeGenerator codeGenerator23 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target24 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator23);
        java.lang.String[] strArray25 = python2Target24.targetCharValueEscape;
        java.lang.String str26 = python2Target24.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup27 = python2Target24.getTemplates();
        java.lang.String[] strArray28 = python2Target24.targetCharValueEscape;
        python2Target14.targetCharValueEscape = strArray28;
        org.antlr.v4.codegen.target.Python2Target.python2Keywords = strArray28;
        python2Target1.targetCharValueEscape = strArray28;
        java.lang.String str33 = python2Target1.getAltLabelContextStructName("\"\\\\1Context\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator34 = null;
        python2Target1.gen = codeGenerator34;
        org.stringtemplate.v4.STGroup sTGroup36 = python2Target1.getTemplates();
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "@" + "'", str4, "@");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Python2" + "'", str5, "Python2");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "4.5.2.1" + "'", str8, "4.5.2.1");
        org.junit.Assert.assertNotNull(strSet9);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "@" + "'", str12, "@");
        org.junit.Assert.assertNotNull(strSet15);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 64 + "'", int19 == 64);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "\\n" + "'", str22, "\\n");
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "Python2" + "'", str26, "Python2");
        org.junit.Assert.assertNotNull(sTGroup27);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "\"\\\\1Context\"Context" + "'", str33, "\"\\\\1Context\"Context");
        org.junit.Assert.assertNotNull(sTGroup36);
    }

    @Test
    public void test1502() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1502");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str4 = python2Target1.encodeIntAsCharEscape(64);
        java.lang.String str5 = python2Target1.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target7 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator6);
        java.lang.String[] strArray8 = python2Target7.targetCharValueEscape;
        java.lang.String str9 = python2Target7.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup10 = python2Target7.getTemplates();
        python2Target1.templates = sTGroup10;
        java.lang.String str13 = python2Target1.getTargetStringLiteralFromString("_@");
        java.lang.String str14 = python2Target1.getVersion();
        boolean boolean15 = python2Target1.wantsBaseVisitor();
        org.stringtemplate.v4.STGroup sTGroup16 = python2Target1.templates;
        java.lang.String str17 = python2Target1.getVersion();
        int int18 = python2Target1.getInlineTestSetWordSize();
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "@" + "'", str4, "@");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Python2" + "'", str5, "Python2");
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Python2" + "'", str9, "Python2");
        org.junit.Assert.assertNotNull(sTGroup10);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "\"_@\"" + "'", str13, "\"_@\"");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "4.5.2.1" + "'", str14, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(sTGroup16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "4.5.2.1" + "'", str17, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 64 + "'", int18 == 64);
    }

    @Test
    public void test1503() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1503");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String[] strArray2 = python2Target1.targetCharValueEscape;
        java.lang.String str3 = python2Target1.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup4 = python2Target1.getTemplates();
        java.lang.String[] strArray5 = python2Target1.targetCharValueEscape;
        java.lang.String[] strArray6 = org.antlr.v4.codegen.target.Python2Target.python2Keywords;
        python2Target1.targetCharValueEscape = strArray6;
        boolean boolean8 = python2Target1.supportsOverloadedMethods();
        java.lang.String str11 = python2Target1.getTargetStringLiteralFromString("_AContext", true);
        java.lang.String[] strArray12 = python2Target1.targetCharValueEscape;
        org.antlr.v4.tool.Grammar grammar13 = null;
        org.stringtemplate.v4.ST sT14 = null;
        python2Target1.genRecognizerHeaderFile(grammar13, sT14, "\"\\\"\\\"Conte\"");
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Python2" + "'", str3, "Python2");
        org.junit.Assert.assertNotNull(sTGroup4);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "\"_AContext\"" + "'", str11, "\"_AContext\"");
        org.junit.Assert.assertNotNull(strArray12);
    }

    @Test
    public void test1504() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1504");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        python2Target1.language = "\"\\\"hi!\\\"\"";
        java.lang.String str5 = python2Target1.encodeIntAsCharEscape((int) '4');
        java.lang.String str6 = python2Target1.language;
        org.antlr.v4.tool.Grammar grammar7 = null;
        org.stringtemplate.v4.ST sT8 = null;
        python2Target1.genRecognizerHeaderFile(grammar7, sT8, "\"__tset\\\\64\"");
        java.lang.String[] strArray11 = python2Target1.targetCharValueEscape;
        java.lang.String[] strArray12 = python2Target1.targetCharValueEscape;
        boolean boolean13 = python2Target1.wantsBaseListener();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "\\64" + "'", str5, "\\64");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\"\\\"hi!\\\"\"" + "'", str6, "\"\\\"hi!\\\"\"");
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test1505() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1505");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str4 = python2Target1.encodeIntAsCharEscape(64);
        java.lang.String str5 = python2Target1.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target7 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator6);
        java.lang.String[] strArray8 = python2Target7.targetCharValueEscape;
        java.lang.String str9 = python2Target7.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup10 = python2Target7.getTemplates();
        python2Target1.templates = sTGroup10;
        java.util.Set<java.lang.String> strSet12 = python2Target1.getBadWords();
        java.lang.String str15 = python2Target1.getTargetStringLiteralFromString("\"hi!\"", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator16 = null;
        java.lang.String str19 = python2Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator16, "_tset\\64", false);
        int int20 = python2Target1.getInlineTestSetWordSize();
        org.stringtemplate.v4.STGroup sTGroup21 = python2Target1.loadTemplates();
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "@" + "'", str4, "@");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Python2" + "'", str5, "Python2");
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Python2" + "'", str9, "Python2");
        org.junit.Assert.assertNotNull(sTGroup10);
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "\"\\\"hi!\\\"\"" + "'", str15, "\"\\\"hi!\\\"\"");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "tset6" + "'", str19, "tset6");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 64 + "'", int20 == 64);
        org.junit.Assert.assertNotNull(sTGroup21);
    }

    @Test
    public void test1506() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1506");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str4 = python2Target1.encodeIntAsCharEscape(64);
        java.lang.String str5 = python2Target1.getLanguage();
        java.lang.String str7 = python2Target1.getListLabel("");
        java.lang.String str8 = python2Target1.getVersion();
        java.util.Set<java.lang.String> strSet9 = python2Target1.getBadWords();
        java.lang.String str11 = python2Target1.getImplicitRuleLabel("_tset6Context");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str13 = python2Target1.getElementName("\"_\\\"\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"Context\\\"\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "@" + "'", str4, "@");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Python2" + "'", str5, "Python2");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "4.5.2.1" + "'", str8, "4.5.2.1");
        org.junit.Assert.assertNotNull(strSet9);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "__tset6Context" + "'", str11, "__tset6Context");
    }

    @Test
    public void test1507() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1507");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str5 = python2Target1.getTargetStringLiteralFromString("hi!", false);
        boolean boolean6 = python2Target1.supportsOverloadedMethods();
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target8 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator7);
        java.lang.String str10 = python2Target8.getImplicitSetLabel("");
        java.lang.String str13 = python2Target8.getTargetStringLiteralFromString("_hi!", true);
        java.lang.String str14 = python2Target8.getLanguage();
        boolean boolean15 = python2Target8.templatesExist();
        java.lang.String[] strArray16 = python2Target8.targetCharValueEscape;
        python2Target1.targetCharValueEscape = strArray16;
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "_tset" + "'", str10, "_tset");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "\"_hi!\"" + "'", str13, "\"_hi!\"");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Python2" + "'", str14, "Python2");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(strArray16);
    }

    @Test
    public void test1508() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1508");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String str3 = python2Target1.getImplicitSetLabel("");
        org.antlr.v4.codegen.CodeGenerator codeGenerator4 = null;
        java.lang.String str7 = python2Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator4, "", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = python2Target1.gen;
        org.stringtemplate.v4.STGroup sTGroup9 = python2Target1.getTemplates();
        org.stringtemplate.v4.STGroup sTGroup10 = python2Target1.templates;
        java.util.Set<java.lang.String> strSet11 = python2Target1.getBadWords();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "_tset" + "'", str3, "_tset");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "\"\"" + "'", str7, "\"\"");
        org.junit.Assert.assertNull(codeGenerator8);
        org.junit.Assert.assertNotNull(sTGroup9);
        org.junit.Assert.assertNotNull(sTGroup10);
        org.junit.Assert.assertNotNull(strSet11);
    }

    @Test
    public void test1509() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1509");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str4 = python2Target1.encodeIntAsCharEscape(64);
        org.antlr.v4.codegen.CodeGenerator codeGenerator5 = python2Target1.gen;
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target7 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator6);
        java.util.Set<java.lang.String> strSet8 = python2Target7.badWords;
        boolean boolean9 = python2Target7.wantsBaseVisitor();
        boolean boolean10 = python2Target7.wantsBaseVisitor();
        org.antlr.v4.codegen.CodeGenerator codeGenerator11 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target12 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator11);
        boolean boolean13 = python2Target12.wantsBaseVisitor();
        java.util.Set<java.lang.String> strSet14 = python2Target12.badWords;
        python2Target7.badWords = strSet14;
        int int16 = python2Target7.getSerializedATNSegmentLimit();
        org.stringtemplate.v4.STGroup sTGroup17 = python2Target7.loadTemplates();
        python2Target1.templates = sTGroup17;
        java.util.Set<java.lang.String> strSet19 = python2Target1.getBadWords();
        java.lang.String str20 = python2Target1.getVersion();
        java.util.Set<java.lang.String> strSet21 = python2Target1.badWords;
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "@" + "'", str4, "@");
        org.junit.Assert.assertNull(codeGenerator5);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strSet14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 2147483647 + "'", int16 == 2147483647);
        org.junit.Assert.assertNotNull(sTGroup17);
        org.junit.Assert.assertNotNull(strSet19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "4.5.2.1" + "'", str20, "4.5.2.1");
        org.junit.Assert.assertNotNull(strSet21);
    }

    @Test
    public void test1510() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1510");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String str3 = python2Target1.getImplicitSetLabel("");
        org.antlr.v4.codegen.CodeGenerator codeGenerator4 = null;
        java.lang.String str7 = python2Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator4, "", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = null;
        java.lang.String str11 = python2Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator8, "\"\\\"\\\"\"", false);
        python2Target1.language = "\\\"\\\"Context";
        java.lang.String str15 = python2Target1.getAltLabelContextStructName("\"tset\\n\"");
        org.antlr.v4.codegen.model.RuleFunction ruleFunction16 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str17 = python2Target1.getRuleFunctionContextStructName(ruleFunction16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "_tset" + "'", str3, "_tset");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "\"\"" + "'", str7, "\"\"");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "\\\"\\\"" + "'", str11, "\\\"\\\"");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "\"tset\\n\"Context" + "'", str15, "\"tset\\n\"Context");
    }

    @Test
    public void test1511() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1511");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str5 = python2Target1.getTargetStringLiteralFromString("hi!", false);
        int int6 = python2Target1.getInlineTestSetWordSize();
        boolean boolean7 = python2Target1.wantsBaseListener();
        java.util.Set<java.lang.String> strSet8 = python2Target1.badWords;
        java.util.Set<java.lang.String> strSet9 = python2Target1.badWords;
        org.stringtemplate.v4.STGroup sTGroup10 = python2Target1.getTemplates();
        java.lang.String str12 = python2Target1.getImplicitSetLabel("\\\"a\\\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator13 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target14 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator13);
        java.util.Set<java.lang.String> strSet15 = python2Target14.badWords;
        java.lang.String str18 = python2Target14.getTargetStringLiteralFromString("hi!", false);
        java.lang.String str20 = python2Target14.getImplicitRuleLabel("@");
        java.lang.String str22 = python2Target14.getAltLabelContextStructName("a");
        java.lang.String str24 = python2Target14.getListLabel("\"\\\"hi!\\\"\"");
        python2Target14.addBadWords();
        int int26 = python2Target14.getSerializedATNSegmentLimit();
        java.lang.String str29 = python2Target14.getTargetStringLiteralFromString("_tset\"_tset\\\\64\"", false);
        java.lang.String[] strArray30 = python2Target14.targetCharValueEscape;
        python2Target1.targetCharValueEscape = strArray30;
        java.lang.String str33 = python2Target1.getImplicitSetLabel("");
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 64 + "'", int6 == 64);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertNotNull(strSet9);
        org.junit.Assert.assertNotNull(sTGroup10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "_tset\\\"a\\\"" + "'", str12, "_tset\\\"a\\\"");
        org.junit.Assert.assertNotNull(strSet15);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "_@" + "'", str20, "_@");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "AContext" + "'", str22, "AContext");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "\"\\\"hi!\\\"\"" + "'", str24, "\"\\\"hi!\\\"\"");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 2147483647 + "'", int26 == 2147483647);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "_tset\\\"_tset\\\\\\\\64\\\"" + "'", str29, "_tset\\\"_tset\\\\\\\\64\\\"");
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "_tset" + "'", str33, "_tset");
    }

    @Test
    public void test1512() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1512");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str4 = python2Target1.encodeIntAsCharEscape(64);
        java.lang.String str5 = python2Target1.getLanguage();
        java.lang.String str8 = python2Target1.getTargetStringLiteralFromString("_@", false);
        java.lang.String str10 = python2Target1.encodeIntAsCharEscape((int) 'a');
        org.antlr.v4.codegen.CodeGenerator codeGenerator11 = python2Target1.getCodeGenerator();
        org.antlr.v4.codegen.CodeGenerator codeGenerator12 = null;
        python2Target1.gen = codeGenerator12;
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "@" + "'", str4, "@");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Python2" + "'", str5, "Python2");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "_@" + "'", str8, "_@");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "a" + "'", str10, "a");
        org.junit.Assert.assertNull(codeGenerator11);
    }

    @Test
    public void test1513() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1513");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str5 = python2Target1.getTargetStringLiteralFromString("hi!", false);
        java.lang.String str7 = python2Target1.getImplicitRuleLabel("@");
        python2Target1.addBadWords();
        boolean boolean9 = python2Target1.wantsBaseListener();
        java.lang.String str11 = python2Target1.getImplicitSetLabel("_tset");
        org.antlr.v4.codegen.CodeGenerator codeGenerator12 = null;
        python2Target1.gen = codeGenerator12;
        java.lang.String str15 = python2Target1.getImplicitSetLabel("\"\\\"\\\\\\\"\\\\\\\"\\\"Context\"");
        org.stringtemplate.v4.STGroup sTGroup16 = python2Target1.getTemplates();
        java.lang.String str17 = python2Target1.language;
        java.lang.String str19 = python2Target1.getImplicitRuleLabel("\"tset_tset\\\\\\\"hi!\"");
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "_@" + "'", str7, "_@");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "_tset_tset" + "'", str11, "_tset_tset");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "_tset\"\\\"\\\\\\\"\\\\\\\"\\\"Context\"" + "'", str15, "_tset\"\\\"\\\\\\\"\\\\\\\"\\\"Context\"");
        org.junit.Assert.assertNotNull(sTGroup16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Python2" + "'", str17, "Python2");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "_\"tset_tset\\\\\\\"hi!\"" + "'", str19, "_\"tset_tset\\\\\\\"hi!\"");
    }

    @Test
    public void test1514() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1514");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        int int2 = python2Target1.getInlineTestSetWordSize();
        java.lang.String str4 = python2Target1.getListLabel("_@");
        org.antlr.v4.codegen.CodeGenerator codeGenerator5 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target6 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator5);
        java.util.Set<java.lang.String> strSet7 = python2Target6.badWords;
        java.lang.String str10 = python2Target6.getTargetStringLiteralFromString("hi!", false);
        java.lang.String str12 = python2Target6.getImplicitRuleLabel("@");
        java.lang.String str14 = python2Target6.getAltLabelContextStructName("a");
        java.lang.String str16 = python2Target6.getTargetStringLiteralFromString("4.5.2.1");
        java.lang.String[] strArray17 = python2Target6.targetCharValueEscape;
        python2Target1.targetCharValueEscape = strArray17;
        java.lang.String str20 = python2Target1.getAltLabelContextStructName("\"\\\\\\\"\\\\\\\"Context\"");
        org.stringtemplate.v4.STGroup sTGroup21 = python2Target1.templates;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "_@" + "'", str4, "_@");
        org.junit.Assert.assertNotNull(strSet7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "_@" + "'", str12, "_@");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "AContext" + "'", str14, "AContext");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "\"4.5.2.1\"" + "'", str16, "\"4.5.2.1\"");
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "\"\\\\\\\"\\\\\\\"Context\"Context" + "'", str20, "\"\\\\\\\"\\\\\\\"Context\"Context");
        org.junit.Assert.assertNotNull(sTGroup21);
    }

    @Test
    public void test1515() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1515");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str5 = python2Target1.getTargetStringLiteralFromString("hi!", false);
        java.lang.String str7 = python2Target1.getImplicitRuleLabel("@");
        python2Target1.addBadWords();
        int int9 = python2Target1.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet10 = python2Target1.getBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator11 = null;
        python2Target1.gen = codeGenerator11;
        org.antlr.v4.codegen.CodeGenerator codeGenerator13 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target14 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator13);
        java.lang.String str16 = python2Target14.getImplicitSetLabel("");
        org.antlr.v4.codegen.CodeGenerator codeGenerator17 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target18 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator17);
        java.util.Set<java.lang.String> strSet19 = python2Target18.badWords;
        java.lang.String str21 = python2Target18.encodeIntAsCharEscape(64);
        java.lang.String str22 = python2Target18.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator23 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target24 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator23);
        java.lang.String[] strArray25 = python2Target24.targetCharValueEscape;
        java.lang.String str26 = python2Target24.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup27 = python2Target24.getTemplates();
        python2Target18.templates = sTGroup27;
        python2Target14.templates = sTGroup27;
        org.stringtemplate.v4.STGroup sTGroup30 = python2Target14.loadTemplates();
        python2Target1.templates = sTGroup30;
        python2Target1.addBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator33 = null;
        python2Target1.gen = codeGenerator33;
        org.antlr.v4.codegen.CodeGenerator codeGenerator35 = python2Target1.getCodeGenerator();
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "_@" + "'", str7, "_@");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 64 + "'", int9 == 64);
        org.junit.Assert.assertNotNull(strSet10);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "_tset" + "'", str16, "_tset");
        org.junit.Assert.assertNotNull(strSet19);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "@" + "'", str21, "@");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "Python2" + "'", str22, "Python2");
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "Python2" + "'", str26, "Python2");
        org.junit.Assert.assertNotNull(sTGroup27);
        org.junit.Assert.assertNotNull(sTGroup30);
        org.junit.Assert.assertNull(codeGenerator35);
    }

    @Test
    public void test1516() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1516");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str4 = python2Target1.encodeIntAsCharEscape(64);
        org.antlr.v4.codegen.CodeGenerator codeGenerator5 = python2Target1.gen;
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target7 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator6);
        java.util.Set<java.lang.String> strSet8 = python2Target7.badWords;
        boolean boolean9 = python2Target7.wantsBaseVisitor();
        boolean boolean10 = python2Target7.wantsBaseVisitor();
        org.antlr.v4.codegen.CodeGenerator codeGenerator11 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target12 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator11);
        boolean boolean13 = python2Target12.wantsBaseVisitor();
        java.util.Set<java.lang.String> strSet14 = python2Target12.badWords;
        python2Target7.badWords = strSet14;
        int int16 = python2Target7.getSerializedATNSegmentLimit();
        org.stringtemplate.v4.STGroup sTGroup17 = python2Target7.loadTemplates();
        python2Target1.templates = sTGroup17;
        java.lang.String str20 = python2Target1.getImplicitRuleLabel("d");
        java.lang.String str21 = python2Target1.getLanguage();
        java.lang.String str22 = python2Target1.language;
        org.antlr.v4.tool.ast.GrammarAST grammarAST23 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str24 = python2Target1.getLoopLabel(grammarAST23);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "@" + "'", str4, "@");
        org.junit.Assert.assertNull(codeGenerator5);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strSet14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 2147483647 + "'", int16 == 2147483647);
        org.junit.Assert.assertNotNull(sTGroup17);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "_d" + "'", str20, "_d");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Python2" + "'", str21, "Python2");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "Python2" + "'", str22, "Python2");
    }

    @Test
    public void test1517() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1517");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str5 = python2Target1.getTargetStringLiteralFromString("hi!", false);
        java.lang.String str7 = python2Target1.getImplicitRuleLabel("@");
        python2Target1.addBadWords();
        int int9 = python2Target1.getInlineTestSetWordSize();
        python2Target1.addBadWords();
        java.lang.String str13 = python2Target1.getTargetStringLiteralFromString("\"\\\"\\\"\\\"\"", true);
        boolean boolean14 = python2Target1.wantsBaseVisitor();
        org.antlr.v4.tool.Grammar grammar15 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str17 = python2Target1.getTokenTypeAsTargetLabel(grammar15, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "_@" + "'", str7, "_@");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 64 + "'", int9 == 64);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "\"\\\"\\\\\\\"\\\\\\\"\\\\\\\"\\\"\"" + "'", str13, "\"\\\"\\\\\\\"\\\\\\\"\\\\\\\"\\\"\"");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test1518() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1518");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str4 = python2Target1.getAltLabelContextStructName("\\\"\\\"");
        boolean boolean5 = python2Target1.wantsBaseVisitor();
        java.util.Set<java.lang.String> strSet6 = python2Target1.getBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target8 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator7);
        boolean boolean9 = python2Target8.wantsBaseVisitor();
        java.util.Set<java.lang.String> strSet10 = python2Target8.badWords;
        java.util.Set<java.lang.String> strSet11 = python2Target8.getBadWords();
        python2Target1.badWords = strSet11;
        java.lang.String str14 = python2Target1.getImplicitRuleLabel("\\\"\\\"Context");
        int int15 = python2Target1.getSerializedATNSegmentLimit();
        java.lang.String str17 = python2Target1.getImplicitSetLabel("_\\\"\\\"Context");
        java.lang.String str18 = python2Target1.getLanguage();
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "\\\"\\\"Context" + "'", str4, "\\\"\\\"Context");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(strSet6);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(strSet10);
        org.junit.Assert.assertNotNull(strSet11);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "_\\\"\\\"Context" + "'", str14, "_\\\"\\\"Context");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 2147483647 + "'", int15 == 2147483647);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "_tset_\\\"\\\"Context" + "'", str17, "_tset_\\\"\\\"Context");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Python2" + "'", str18, "Python2");
    }

    @Test
    public void test1519() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1519");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String str3 = python2Target1.getImplicitSetLabel("");
        org.antlr.v4.codegen.CodeGenerator codeGenerator4 = null;
        java.lang.String str7 = python2Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator4, "", true);
        java.lang.String str8 = python2Target1.language;
        java.lang.String str9 = python2Target1.getVersion();
        boolean boolean10 = python2Target1.wantsBaseListener();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "_tset" + "'", str3, "_tset");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "\"\"" + "'", str7, "\"\"");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Python2" + "'", str8, "Python2");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "4.5.2.1" + "'", str9, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test1520() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1520");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str5 = python2Target1.getTargetStringLiteralFromString("hi!", false);
        java.lang.String str7 = python2Target1.getImplicitRuleLabel("@");
        python2Target1.addBadWords();
        int int9 = python2Target1.getInlineTestSetWordSize();
        java.lang.String[] strArray10 = python2Target1.targetCharValueEscape;
        java.lang.String str12 = python2Target1.getListLabel("i");
        org.stringtemplate.v4.STGroup sTGroup13 = python2Target1.templates;
        java.lang.String str14 = python2Target1.language;
        org.stringtemplate.v4.STGroup sTGroup15 = python2Target1.getTemplates();
        python2Target1.language = "Python2Context\\\"Contex";
        org.antlr.v4.codegen.CodeGenerator codeGenerator18 = python2Target1.getCodeGenerator();
        java.lang.String str19 = python2Target1.language;
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "_@" + "'", str7, "_@");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 64 + "'", int9 == 64);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "i" + "'", str12, "i");
        org.junit.Assert.assertNotNull(sTGroup13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Python2" + "'", str14, "Python2");
        org.junit.Assert.assertNotNull(sTGroup15);
        org.junit.Assert.assertNull(codeGenerator18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Python2Context\\\"Contex" + "'", str19, "Python2Context\\\"Contex");
    }

    @Test
    public void test1521() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1521");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str4 = python2Target1.getAltLabelContextStructName("\\\"\\\"");
        boolean boolean5 = python2Target1.wantsBaseVisitor();
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target7 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator6);
        java.util.Set<java.lang.String> strSet8 = python2Target7.badWords;
        boolean boolean9 = python2Target7.wantsBaseVisitor();
        java.lang.String str11 = python2Target7.getListLabel("Python2Context");
        org.antlr.v4.codegen.CodeGenerator codeGenerator12 = null;
        java.lang.String str15 = python2Target7.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator12, "\"_@\"", true);
        java.lang.String[] strArray16 = python2Target7.targetCharValueEscape;
        python2Target1.targetCharValueEscape = strArray16;
        boolean boolean18 = python2Target1.templatesExist();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str20 = python2Target1.getElementListName("__\"\\\\\\\"\\\\\\\"Context\"Context");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "\\\"\\\"Context" + "'", str4, "\\\"\\\"Context");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Python2Context" + "'", str11, "Python2Context");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "\"_@\"" + "'", str15, "\"_@\"");
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
    }

    @Test
    public void test1522() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1522");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String str3 = python2Target1.getImplicitSetLabel("");
        org.antlr.v4.codegen.CodeGenerator codeGenerator4 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target5 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator4);
        java.util.Set<java.lang.String> strSet6 = python2Target5.badWords;
        java.lang.String str8 = python2Target5.encodeIntAsCharEscape(64);
        java.lang.String str9 = python2Target5.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target11 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator10);
        java.lang.String[] strArray12 = python2Target11.targetCharValueEscape;
        java.lang.String str13 = python2Target11.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup14 = python2Target11.getTemplates();
        python2Target5.templates = sTGroup14;
        python2Target1.templates = sTGroup14;
        java.lang.String str18 = python2Target1.getAltLabelContextStructName("Python2");
        java.lang.String str20 = python2Target1.getImplicitRuleLabel("_tset\\64");
        java.lang.String[] strArray21 = python2Target1.targetCharValueEscape;
        org.antlr.v4.codegen.CodeGenerator codeGenerator22 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target23 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator22);
        java.lang.String str25 = python2Target23.getImplicitSetLabel("");
        org.antlr.v4.codegen.CodeGenerator codeGenerator26 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target27 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator26);
        java.util.Set<java.lang.String> strSet28 = python2Target27.badWords;
        java.lang.String str30 = python2Target27.encodeIntAsCharEscape(64);
        java.lang.String str31 = python2Target27.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator32 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target33 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator32);
        java.lang.String[] strArray34 = python2Target33.targetCharValueEscape;
        java.lang.String str35 = python2Target33.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup36 = python2Target33.getTemplates();
        python2Target27.templates = sTGroup36;
        python2Target23.templates = sTGroup36;
        java.lang.String str40 = python2Target23.getAltLabelContextStructName("Python2");
        java.lang.String str42 = python2Target23.getImplicitRuleLabel("_tset\\64");
        java.lang.String[] strArray43 = python2Target23.targetCharValueEscape;
        python2Target1.targetCharValueEscape = strArray43;
        java.lang.String str46 = python2Target1.encodeIntAsCharEscape((int) (short) 0);
        java.lang.String str49 = python2Target1.getTargetStringLiteralFromString("_tsethi!", true);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "_tset" + "'", str3, "_tset");
        org.junit.Assert.assertNotNull(strSet6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "@" + "'", str8, "@");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Python2" + "'", str9, "Python2");
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Python2" + "'", str13, "Python2");
        org.junit.Assert.assertNotNull(sTGroup14);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Python2Context" + "'", str18, "Python2Context");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "__tset\\64" + "'", str20, "__tset\\64");
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "_tset" + "'", str25, "_tset");
        org.junit.Assert.assertNotNull(strSet28);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "@" + "'", str30, "@");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "Python2" + "'", str31, "Python2");
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "Python2" + "'", str35, "Python2");
        org.junit.Assert.assertNotNull(sTGroup36);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "Python2Context" + "'", str40, "Python2Context");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "__tset\\64" + "'", str42, "__tset\\64");
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "\\0" + "'", str46, "\\0");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "\"_tsethi!\"" + "'", str49, "\"_tsethi!\"");
    }

    @Test
    public void test1523() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1523");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String[] strArray2 = python2Target1.targetCharValueEscape;
        java.lang.String str3 = python2Target1.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup4 = python2Target1.getTemplates();
        java.lang.String[] strArray5 = python2Target1.targetCharValueEscape;
        java.lang.String[] strArray6 = org.antlr.v4.codegen.target.Python2Target.python2Keywords;
        python2Target1.targetCharValueEscape = strArray6;
        boolean boolean8 = python2Target1.supportsOverloadedMethods();
        boolean boolean9 = python2Target1.wantsBaseListener();
        python2Target1.addBadWords();
        python2Target1.language = "\"\\\"__\\\\\\\"\\\\\\\"Context\\\"\"";
        boolean boolean13 = python2Target1.wantsBaseVisitor();
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Python2" + "'", str3, "Python2");
        org.junit.Assert.assertNotNull(sTGroup4);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test1524() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1524");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        org.stringtemplate.v4.STGroup sTGroup2 = python2Target1.templates;
        int int3 = python2Target1.getInlineTestSetWordSize();
        boolean boolean4 = python2Target1.wantsBaseVisitor();
        python2Target1.addBadWords();
        org.antlr.v4.tool.Grammar grammar6 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str8 = python2Target1.getTokenTypeAsTargetLabel(grammar6, (int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 64 + "'", int3 == 64);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    }

    @Test
    public void test1525() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1525");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        org.stringtemplate.v4.STGroup sTGroup2 = python2Target1.templates;
        int int3 = python2Target1.getInlineTestSetWordSize();
        java.lang.String str5 = python2Target1.encodeIntAsCharEscape(10);
        java.lang.String str7 = python2Target1.getImplicitRuleLabel("");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str9 = python2Target1.getElementListName("");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 64 + "'", int3 == 64);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "\\n" + "'", str5, "\\n");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "_" + "'", str7, "_");
    }

    @Test
    public void test1526() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1526");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str4 = python2Target1.getAltLabelContextStructName("\\\"\\\"");
        boolean boolean5 = python2Target1.wantsBaseVisitor();
        java.util.Set<java.lang.String> strSet6 = python2Target1.getBadWords();
        org.stringtemplate.v4.STGroup sTGroup7 = python2Target1.loadTemplates();
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target9 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator8);
        org.stringtemplate.v4.STGroup sTGroup10 = python2Target9.templates;
        int int11 = python2Target9.getInlineTestSetWordSize();
        boolean boolean12 = python2Target9.templatesExist();
        org.stringtemplate.v4.STGroup sTGroup13 = python2Target9.getTemplates();
        org.stringtemplate.v4.STGroup sTGroup14 = python2Target9.loadTemplates();
        python2Target1.templates = sTGroup14;
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "\\\"\\\"Context" + "'", str4, "\\\"\\\"Context");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(strSet6);
        org.junit.Assert.assertNotNull(sTGroup7);
        org.junit.Assert.assertNull(sTGroup10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 64 + "'", int11 == 64);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(sTGroup13);
        org.junit.Assert.assertNotNull(sTGroup14);
    }

    @Test
    public void test1527() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1527");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str4 = python2Target1.getImplicitRuleLabel("\"\\\"\\\"\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator5 = null;
        python2Target1.gen = codeGenerator5;
        boolean boolean7 = python2Target1.wantsBaseVisitor();
        java.lang.String[] strArray8 = python2Target1.targetCharValueEscape;
        boolean boolean9 = python2Target1.templatesExist();
        org.stringtemplate.v4.STGroup sTGroup10 = python2Target1.templates;
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "_\"\\\"\\\"\"" + "'", str4, "_\"\\\"\\\"\"");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(sTGroup10);
    }

    @Test
    public void test1528() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1528");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String str3 = python2Target1.getImplicitSetLabel("");
        org.antlr.v4.codegen.CodeGenerator codeGenerator4 = null;
        java.lang.String str7 = python2Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator4, "", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = null;
        java.lang.String str11 = python2Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator8, "\"\\\"\\\"\"", false);
        java.util.Set<java.lang.String> strSet12 = python2Target1.badWords;
        java.lang.String str14 = python2Target1.getAltLabelContextStructName("\\64");
        java.lang.String[] strArray15 = org.antlr.v4.codegen.target.Python2Target.python2Keywords;
        org.antlr.v4.codegen.target.Python2Target.python2Keywords = strArray15;
        org.antlr.v4.codegen.target.Python2Target.python2Keywords = strArray15;
        python2Target1.targetCharValueEscape = strArray15;
        java.lang.String str19 = python2Target1.getVersion();
        boolean boolean20 = python2Target1.supportsOverloadedMethods();
        org.antlr.v4.codegen.CodeGenerator codeGenerator21 = python2Target1.gen;
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "_tset" + "'", str3, "_tset");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "\"\"" + "'", str7, "\"\"");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "\\\"\\\"" + "'", str11, "\\\"\\\"");
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "\\64Context" + "'", str14, "\\64Context");
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "4.5.2.1" + "'", str19, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(codeGenerator21);
    }

    @Test
    public void test1529() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1529");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        boolean boolean3 = python2Target1.wantsBaseVisitor();
        boolean boolean4 = python2Target1.wantsBaseVisitor();
        org.antlr.v4.codegen.CodeGenerator codeGenerator5 = null;
        python2Target1.gen = codeGenerator5;
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target8 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator7);
        java.util.Set<java.lang.String> strSet9 = python2Target8.badWords;
        java.lang.String str11 = python2Target8.encodeIntAsCharEscape(64);
        java.lang.String str12 = python2Target8.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator13 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target14 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator13);
        java.lang.String[] strArray15 = python2Target14.targetCharValueEscape;
        java.lang.String str16 = python2Target14.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup17 = python2Target14.getTemplates();
        python2Target8.templates = sTGroup17;
        python2Target1.templates = sTGroup17;
        int int20 = python2Target1.getInlineTestSetWordSize();
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(strSet9);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "@" + "'", str11, "@");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Python2" + "'", str12, "Python2");
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Python2" + "'", str16, "Python2");
        org.junit.Assert.assertNotNull(sTGroup17);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 64 + "'", int20 == 64);
    }

    @Test
    public void test1530() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1530");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        boolean boolean3 = python2Target1.wantsBaseVisitor();
        org.antlr.v4.tool.Grammar grammar4 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str6 = python2Target1.getTokenTypeAsTargetLabel(grammar4, (int) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    }

    @Test
    public void test1531() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1531");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String[] strArray2 = python2Target1.targetCharValueEscape;
        java.lang.String str4 = python2Target1.getImplicitSetLabel("\\64");
        java.lang.String str6 = python2Target1.getListLabel("_tset_\"Python2Context\"");
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "_tset\\64" + "'", str4, "_tset\\64");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "_tset_\"Python2Context\"" + "'", str6, "_tset_\"Python2Context\"");
    }

    @Test
    public void test1532() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1532");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String[] strArray2 = python2Target1.targetCharValueEscape;
        java.lang.String str3 = python2Target1.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup4 = python2Target1.getTemplates();
        java.lang.String[] strArray5 = python2Target1.targetCharValueEscape;
        org.stringtemplate.v4.STGroup sTGroup6 = python2Target1.getTemplates();
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target8 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator7);
        java.util.Set<java.lang.String> strSet9 = python2Target8.badWords;
        java.lang.String str11 = python2Target8.getImplicitRuleLabel("\"\\\"\\\"\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator12 = null;
        python2Target8.gen = codeGenerator12;
        python2Target8.addBadWords();
        java.lang.String str16 = python2Target8.getListLabel("\"_\\\"\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"Context\\\"\"");
        org.stringtemplate.v4.STGroup sTGroup17 = python2Target8.templates;
        python2Target1.templates = sTGroup17;
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Python2" + "'", str3, "Python2");
        org.junit.Assert.assertNotNull(sTGroup4);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(sTGroup6);
        org.junit.Assert.assertNotNull(strSet9);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "_\"\\\"\\\"\"" + "'", str11, "_\"\\\"\\\"\"");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "\"_\\\"\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"Context\\\"\"" + "'", str16, "\"_\\\"\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"Context\\\"\"");
        org.junit.Assert.assertNotNull(sTGroup17);
    }

    @Test
    public void test1533() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1533");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String[] strArray2 = python2Target1.targetCharValueEscape;
        java.lang.String str3 = python2Target1.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup4 = python2Target1.getTemplates();
        java.util.Set<java.lang.String> strSet5 = python2Target1.badWords;
        java.lang.String str6 = python2Target1.language;
        boolean boolean7 = python2Target1.supportsOverloadedMethods();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str9 = python2Target1.getElementName("__tset6ContextContext");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Python2" + "'", str3, "Python2");
        org.junit.Assert.assertNotNull(sTGroup4);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Python2" + "'", str6, "Python2");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    public void test1534() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1534");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str5 = python2Target1.getTargetStringLiteralFromString("hi!", false);
        boolean boolean6 = python2Target1.supportsOverloadedMethods();
        java.util.Set<java.lang.String> strSet7 = python2Target1.getBadWords();
        java.lang.String str9 = python2Target1.encodeIntAsCharEscape(0);
        java.lang.String[] strArray10 = python2Target1.targetCharValueEscape;
        org.antlr.v4.tool.Rule rule11 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str12 = python2Target1.getRuleFunctionContextStructName(rule11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(strSet7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\\0" + "'", str9, "\\0");
        org.junit.Assert.assertNotNull(strArray10);
    }

    @Test
    public void test1535() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1535");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str5 = python2Target1.getTargetStringLiteralFromString("hi!", false);
        int int6 = python2Target1.getInlineTestSetWordSize();
        boolean boolean7 = python2Target1.wantsBaseListener();
        python2Target1.language = "a";
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = python2Target1.getCodeGenerator();
        java.util.Set<java.lang.String> strSet11 = null;
        python2Target1.badWords = strSet11;
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 64 + "'", int6 == 64);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(codeGenerator10);
    }

    @Test
    public void test1536() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1536");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str4 = python2Target1.encodeIntAsCharEscape(64);
        java.lang.String str5 = python2Target1.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target7 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator6);
        java.lang.String[] strArray8 = python2Target7.targetCharValueEscape;
        java.lang.String str9 = python2Target7.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup10 = python2Target7.getTemplates();
        python2Target1.templates = sTGroup10;
        java.util.Set<java.lang.String> strSet12 = python2Target1.getBadWords();
        java.lang.String str15 = python2Target1.getTargetStringLiteralFromString("\"hi!\"", true);
        java.lang.String str17 = python2Target1.getAltLabelContextStructName("\\1");
        java.lang.String str19 = python2Target1.getTargetStringLiteralFromString("\\64");
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "@" + "'", str4, "@");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Python2" + "'", str5, "Python2");
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Python2" + "'", str9, "Python2");
        org.junit.Assert.assertNotNull(sTGroup10);
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "\"\\\"hi!\\\"\"" + "'", str15, "\"\\\"hi!\\\"\"");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "\\1Context" + "'", str17, "\\1Context");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "\"\\\\64\"" + "'", str19, "\"\\\\64\"");
    }

    @Test
    public void test1537() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1537");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str4 = python2Target1.encodeIntAsCharEscape(64);
        java.lang.String str5 = python2Target1.getLanguage();
        java.lang.String[] strArray11 = new java.lang.String[] { "\"hi!\"", "Python2", "Python2", "@", "_@" };
        java.util.LinkedHashSet<java.lang.String> strSet12 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet12, strArray11);
        python2Target1.badWords = strSet12;
        boolean boolean15 = python2Target1.wantsBaseVisitor();
        boolean boolean16 = python2Target1.templatesExist();
        org.antlr.v4.codegen.CodeGenerator codeGenerator17 = python2Target1.getCodeGenerator();
        org.antlr.v4.tool.ast.GrammarAST grammarAST18 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean19 = python2Target1.grammarSymbolCausesIssueInGeneratedCode(grammarAST18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "@" + "'", str4, "@");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Python2" + "'", str5, "Python2");
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNull(codeGenerator17);
    }

    @Test
    public void test1538() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1538");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str4 = python2Target1.encodeIntAsCharEscape(64);
        java.lang.String str5 = python2Target1.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target7 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator6);
        java.lang.String[] strArray8 = python2Target7.targetCharValueEscape;
        java.lang.String str9 = python2Target7.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup10 = python2Target7.getTemplates();
        python2Target1.templates = sTGroup10;
        java.util.Set<java.lang.String> strSet12 = python2Target1.getBadWords();
        java.lang.String str15 = python2Target1.getTargetStringLiteralFromString("\"hi!\"", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator16 = null;
        java.lang.String str19 = python2Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator16, "_tset\\64", false);
        int int20 = python2Target1.getInlineTestSetWordSize();
        org.stringtemplate.v4.STGroup sTGroup21 = python2Target1.getTemplates();
        java.lang.String str22 = python2Target1.language;
        org.antlr.v4.codegen.CodeGenerator codeGenerator23 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target24 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator23);
        java.util.Set<java.lang.String> strSet25 = python2Target24.badWords;
        java.lang.String str27 = python2Target24.encodeIntAsCharEscape(64);
        java.lang.String str28 = python2Target24.getLanguage();
        java.lang.String str30 = python2Target24.getListLabel("");
        java.lang.String str33 = python2Target24.getTargetStringLiteralFromString(" ", true);
        org.stringtemplate.v4.STGroup sTGroup34 = python2Target24.getTemplates();
        python2Target1.templates = sTGroup34;
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "@" + "'", str4, "@");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Python2" + "'", str5, "Python2");
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Python2" + "'", str9, "Python2");
        org.junit.Assert.assertNotNull(sTGroup10);
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "\"\\\"hi!\\\"\"" + "'", str15, "\"\\\"hi!\\\"\"");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "tset6" + "'", str19, "tset6");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 64 + "'", int20 == 64);
        org.junit.Assert.assertNotNull(sTGroup21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "Python2" + "'", str22, "Python2");
        org.junit.Assert.assertNotNull(strSet25);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "@" + "'", str27, "@");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "Python2" + "'", str28, "Python2");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "\" \"" + "'", str33, "\" \"");
        org.junit.Assert.assertNotNull(sTGroup34);
    }

    @Test
    public void test1539() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1539");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str5 = python2Target1.getTargetStringLiteralFromString("hi!", false);
        java.lang.String str7 = python2Target1.getImplicitRuleLabel("@");
        python2Target1.addBadWords();
        int int9 = python2Target1.getInlineTestSetWordSize();
        java.lang.String[] strArray10 = python2Target1.targetCharValueEscape;
        java.lang.String str12 = python2Target1.getListLabel("\"_@\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator13 = python2Target1.gen;
        org.antlr.v4.codegen.CodeGenerator codeGenerator14 = null;
        java.lang.String str17 = python2Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator14, "\"_hi!\"", false);
        java.util.Set<java.lang.String> strSet18 = python2Target1.getBadWords();
        int int19 = python2Target1.getInlineTestSetWordSize();
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "_@" + "'", str7, "_@");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 64 + "'", int9 == 64);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "\"_@\"" + "'", str12, "\"_@\"");
        org.junit.Assert.assertNull(codeGenerator13);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "_hi!" + "'", str17, "_hi!");
        org.junit.Assert.assertNotNull(strSet18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 64 + "'", int19 == 64);
    }

    @Test
    public void test1540() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1540");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str5 = python2Target1.getTargetStringLiteralFromString("hi!", false);
        java.lang.String str7 = python2Target1.getImplicitRuleLabel("@");
        python2Target1.addBadWords();
        int int9 = python2Target1.getInlineTestSetWordSize();
        java.lang.String[] strArray10 = python2Target1.targetCharValueEscape;
        java.lang.String str12 = python2Target1.getListLabel("\"_@\"");
        org.antlr.v4.codegen.model.RuleFunction ruleFunction13 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str14 = python2Target1.getRuleFunctionContextStructName(ruleFunction13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "_@" + "'", str7, "_@");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 64 + "'", int9 == 64);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "\"_@\"" + "'", str12, "\"_@\"");
    }

    @Test
    public void test1541() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1541");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String str3 = python2Target1.getImplicitSetLabel("");
        org.antlr.v4.codegen.CodeGenerator codeGenerator4 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target5 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator4);
        java.util.Set<java.lang.String> strSet6 = python2Target5.badWords;
        java.lang.String str8 = python2Target5.encodeIntAsCharEscape(64);
        java.lang.String str9 = python2Target5.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target11 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator10);
        java.lang.String[] strArray12 = python2Target11.targetCharValueEscape;
        java.lang.String str13 = python2Target11.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup14 = python2Target11.getTemplates();
        python2Target5.templates = sTGroup14;
        python2Target1.templates = sTGroup14;
        java.lang.String str18 = python2Target1.getAltLabelContextStructName("Python2");
        org.stringtemplate.v4.STGroup sTGroup19 = python2Target1.loadTemplates();
        java.lang.String str21 = python2Target1.getImplicitRuleLabel("\"\\\"Python2Context\\\"\"");
        java.lang.String str22 = python2Target1.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator23 = python2Target1.gen;
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "_tset" + "'", str3, "_tset");
        org.junit.Assert.assertNotNull(strSet6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "@" + "'", str8, "@");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Python2" + "'", str9, "Python2");
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Python2" + "'", str13, "Python2");
        org.junit.Assert.assertNotNull(sTGroup14);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Python2Context" + "'", str18, "Python2Context");
        org.junit.Assert.assertNotNull(sTGroup19);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "_\"\\\"Python2Context\\\"\"" + "'", str21, "_\"\\\"Python2Context\\\"\"");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "4.5.2.1" + "'", str22, "4.5.2.1");
        org.junit.Assert.assertNull(codeGenerator23);
    }

    @Test
    public void test1542() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1542");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String str3 = python2Target1.getImplicitSetLabel("");
        org.antlr.v4.codegen.CodeGenerator codeGenerator4 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target5 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator4);
        java.util.Set<java.lang.String> strSet6 = python2Target5.badWords;
        java.lang.String str8 = python2Target5.encodeIntAsCharEscape(64);
        java.lang.String str9 = python2Target5.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target11 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator10);
        java.lang.String[] strArray12 = python2Target11.targetCharValueEscape;
        java.lang.String str13 = python2Target11.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup14 = python2Target11.getTemplates();
        python2Target5.templates = sTGroup14;
        python2Target1.templates = sTGroup14;
        java.lang.String str18 = python2Target1.getAltLabelContextStructName("Python2");
        org.stringtemplate.v4.STGroup sTGroup19 = python2Target1.loadTemplates();
        java.lang.String str21 = python2Target1.getImplicitRuleLabel("\"\\\"Python2Context\\\"\"");
        org.antlr.v4.tool.Grammar grammar22 = null;
        org.stringtemplate.v4.ST sT23 = null;
        python2Target1.genRecognizerHeaderFile(grammar22, sT23, "_tset\\64");
        org.antlr.v4.codegen.CodeGenerator codeGenerator26 = null;
        java.lang.String str29 = python2Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator26, "\"\\\"_@\\\"\"Context", true);
        java.lang.String str30 = python2Target1.language;
        java.lang.String str31 = python2Target1.getLanguage();
        java.util.Set<java.lang.String> strSet32 = python2Target1.badWords;
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "_tset" + "'", str3, "_tset");
        org.junit.Assert.assertNotNull(strSet6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "@" + "'", str8, "@");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Python2" + "'", str9, "Python2");
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Python2" + "'", str13, "Python2");
        org.junit.Assert.assertNotNull(sTGroup14);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Python2Context" + "'", str18, "Python2Context");
        org.junit.Assert.assertNotNull(sTGroup19);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "_\"\\\"Python2Context\\\"\"" + "'", str21, "_\"\\\"Python2Context\\\"\"");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "\"\\\"_@\\\"\\\"Contex\"" + "'", str29, "\"\\\"_@\\\"\\\"Contex\"");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "Python2" + "'", str30, "Python2");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "Python2" + "'", str31, "Python2");
        org.junit.Assert.assertNotNull(strSet32);
    }

    @Test
    public void test1543() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1543");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str5 = python2Target1.getTargetStringLiteralFromString("hi!", false);
        int int6 = python2Target1.getInlineTestSetWordSize();
        boolean boolean7 = python2Target1.wantsBaseListener();
        python2Target1.language = "a";
        java.lang.String[] strArray10 = python2Target1.targetCharValueEscape;
        org.antlr.v4.tool.Grammar grammar11 = null;
        org.stringtemplate.v4.ST sT12 = null;
        python2Target1.genRecognizerHeaderFile(grammar11, sT12, "\"4.5.2.1\"");
        python2Target1.addBadWords();
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 64 + "'", int6 == 64);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(strArray10);
    }

    @Test
    public void test1544() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1544");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str4 = python2Target1.getAltLabelContextStructName("\\\"\\\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator5 = null;
        java.lang.String str8 = python2Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator5, "hi!", false);
        java.lang.String str9 = python2Target1.getLanguage();
        java.util.Set<java.lang.String> strSet10 = python2Target1.badWords;
        java.lang.String str12 = python2Target1.getImplicitRuleLabel("");
        org.antlr.v4.tool.ast.GrammarAST grammarAST13 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str14 = python2Target1.getLoopCounter(grammarAST13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "\\\"\\\"Context" + "'", str4, "\\\"\\\"Context");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "i" + "'", str8, "i");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Python2" + "'", str9, "Python2");
        org.junit.Assert.assertNotNull(strSet10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "_" + "'", str12, "_");
    }

    @Test
    public void test1545() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1545");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String str3 = python2Target1.getImplicitSetLabel("");
        org.antlr.v4.codegen.CodeGenerator codeGenerator4 = null;
        java.lang.String str7 = python2Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator4, "", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = null;
        java.lang.String str11 = python2Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator8, "\"\\\"\\\"\"", false);
        int int12 = python2Target1.getSerializedATNSegmentLimit();
        org.antlr.v4.tool.Grammar grammar13 = null;
        int[] intArray14 = new int[] {};
        java.lang.String[] strArray15 = python2Target1.getTokenTypesAsTargetLabels(grammar13, intArray14);
        python2Target1.addBadWords();
        java.lang.String str18 = python2Target1.getTargetStringLiteralFromString("\"\\\"\\\\\\\"\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"\\\\\\\"\\\"\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator19 = null;
        python2Target1.gen = codeGenerator19;
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "_tset" + "'", str3, "_tset");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "\"\"" + "'", str7, "\"\"");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "\\\"\\\"" + "'", str11, "\\\"\\\"");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 2147483647 + "'", int12 == 2147483647);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[]");
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "\"\\\"\\\\\\\"\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"\\\\\\\"\\\"\"" + "'", str18, "\"\\\"\\\\\\\"\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"\\\\\\\"\\\"\"");
    }

    @Test
    public void test1546() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1546");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.util.Set<java.lang.String> strSet3 = python2Target1.badWords;
        org.antlr.v4.tool.Grammar grammar4 = null;
        org.stringtemplate.v4.ST sT5 = null;
        python2Target1.genRecognizerHeaderFile(grammar4, sT5, "\"\\\"_tset\\\"\"");
        org.stringtemplate.v4.STGroup sTGroup8 = python2Target1.loadTemplates();
        boolean boolean9 = python2Target1.templatesExist();
        boolean boolean10 = python2Target1.templatesExist();
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNotNull(sTGroup8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
    }

    @Test
    public void test1547() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1547");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str4 = python2Target1.encodeIntAsCharEscape(64);
        java.lang.String str5 = python2Target1.getLanguage();
        java.lang.String str8 = python2Target1.getTargetStringLiteralFromString("_@", false);
        java.lang.String str10 = python2Target1.encodeIntAsCharEscape((int) 'a');
        java.lang.String str12 = python2Target1.getListLabel("\"\\\"\\\\\\\"_@\\\\\\\"\\\\\\\"Contex\\\"\"");
        java.lang.String str14 = python2Target1.getImplicitSetLabel("\"\\\"\\\"\\\"\"");
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "@" + "'", str4, "@");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Python2" + "'", str5, "Python2");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "_@" + "'", str8, "_@");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "a" + "'", str10, "a");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "\"\\\"\\\\\\\"_@\\\\\\\"\\\\\\\"Contex\\\"\"" + "'", str12, "\"\\\"\\\\\\\"_@\\\\\\\"\\\\\\\"Contex\\\"\"");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "_tset\"\\\"\\\"\\\"\"" + "'", str14, "_tset\"\\\"\\\"\\\"\"");
    }

    @Test
    public void test1548() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1548");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        org.stringtemplate.v4.STGroup sTGroup2 = python2Target1.templates;
        int int3 = python2Target1.getInlineTestSetWordSize();
        java.lang.String str4 = python2Target1.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator5 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target6 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator5);
        java.lang.String[] strArray7 = python2Target6.targetCharValueEscape;
        boolean boolean8 = python2Target6.supportsOverloadedMethods();
        java.lang.String str9 = python2Target6.getLanguage();
        java.util.Set<java.lang.String> strSet10 = python2Target6.badWords;
        python2Target1.badWords = strSet10;
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 64 + "'", int3 == 64);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "4.5.2.1" + "'", str4, "4.5.2.1");
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Python2" + "'", str9, "Python2");
        org.junit.Assert.assertNotNull(strSet10);
    }

    @Test
    public void test1549() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1549");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        boolean boolean2 = python2Target1.wantsBaseVisitor();
        java.util.Set<java.lang.String> strSet3 = python2Target1.badWords;
        java.util.Set<java.lang.String> strSet4 = python2Target1.getBadWords();
        java.util.Set<java.lang.String> strSet5 = python2Target1.badWords;
        java.lang.String str7 = python2Target1.getImplicitSetLabel("\\\\1Context");
        java.lang.String str9 = python2Target1.getAltLabelContextStructName("_tset\"_AContext\"");
        org.antlr.v4.tool.Grammar grammar10 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str12 = python2Target1.getTokenTypeAsTargetLabel(grammar10, (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "_tset\\\\1Context" + "'", str7, "_tset\\\\1Context");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "_tset\"_AContext\"Context" + "'", str9, "_tset\"_AContext\"Context");
    }

    @Test
    public void test1550() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1550");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str4 = python2Target1.encodeIntAsCharEscape(64);
        java.lang.String str5 = python2Target1.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target7 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator6);
        java.lang.String[] strArray8 = python2Target7.targetCharValueEscape;
        java.lang.String str9 = python2Target7.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup10 = python2Target7.getTemplates();
        python2Target1.templates = sTGroup10;
        java.lang.String str13 = python2Target1.getTargetStringLiteralFromString("_@");
        java.lang.String str15 = python2Target1.getTargetStringLiteralFromString("\\\"\\\"Context");
        boolean boolean16 = python2Target1.templatesExist();
        java.util.Set<java.lang.String> strSet17 = python2Target1.getBadWords();
        org.antlr.v4.tool.Grammar grammar18 = null;
        org.stringtemplate.v4.ST sT19 = null;
        python2Target1.genRecognizerHeaderFile(grammar18, sT19, "\"tset\\n\"");
        java.lang.String str22 = python2Target1.getVersion();
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "@" + "'", str4, "@");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Python2" + "'", str5, "Python2");
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Python2" + "'", str9, "Python2");
        org.junit.Assert.assertNotNull(sTGroup10);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "\"_@\"" + "'", str13, "\"_@\"");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "\"\\\\\\\"\\\\\\\"Context\"" + "'", str15, "\"\\\\\\\"\\\\\\\"Context\"");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(strSet17);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "4.5.2.1" + "'", str22, "4.5.2.1");
    }

    @Test
    public void test1551() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1551");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String[] strArray2 = python2Target1.targetCharValueEscape;
        java.lang.String str3 = python2Target1.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup4 = python2Target1.getTemplates();
        java.lang.String[] strArray5 = python2Target1.targetCharValueEscape;
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = null;
        python2Target1.gen = codeGenerator6;
        java.lang.String str9 = python2Target1.getImplicitSetLabel("\\\"\\\"ContextContext");
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = null;
        python2Target1.gen = codeGenerator10;
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Python2" + "'", str3, "Python2");
        org.junit.Assert.assertNotNull(sTGroup4);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "_tset\\\"\\\"ContextContext" + "'", str9, "_tset\\\"\\\"ContextContext");
    }

    @Test
    public void test1552() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1552");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String str3 = python2Target1.getImplicitSetLabel("");
        org.antlr.v4.codegen.CodeGenerator codeGenerator4 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target5 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator4);
        java.util.Set<java.lang.String> strSet6 = python2Target5.badWords;
        java.lang.String str8 = python2Target5.encodeIntAsCharEscape(64);
        java.lang.String str9 = python2Target5.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target11 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator10);
        java.lang.String[] strArray12 = python2Target11.targetCharValueEscape;
        java.lang.String str13 = python2Target11.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup14 = python2Target11.getTemplates();
        python2Target5.templates = sTGroup14;
        python2Target1.templates = sTGroup14;
        org.antlr.v4.tool.Grammar grammar17 = null;
        org.stringtemplate.v4.ST sT18 = null;
        python2Target1.genRecognizerHeaderFile(grammar17, sT18, "\\0");
        boolean boolean21 = python2Target1.wantsBaseListener();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str23 = python2Target1.getImplicitTokenLabel("_tset_tset\\nContext");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "_tset" + "'", str3, "_tset");
        org.junit.Assert.assertNotNull(strSet6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "@" + "'", str8, "@");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Python2" + "'", str9, "Python2");
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Python2" + "'", str13, "Python2");
        org.junit.Assert.assertNotNull(sTGroup14);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
    }

    @Test
    public void test1553() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1553");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str4 = python2Target1.encodeIntAsCharEscape(64);
        java.lang.String str5 = python2Target1.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target7 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator6);
        java.lang.String[] strArray8 = python2Target7.targetCharValueEscape;
        java.lang.String str9 = python2Target7.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup10 = python2Target7.getTemplates();
        python2Target1.templates = sTGroup10;
        java.lang.String str13 = python2Target1.getTargetStringLiteralFromString("_@");
        java.lang.String str15 = python2Target1.getTargetStringLiteralFromString("\\\"\\\"Context");
        boolean boolean16 = python2Target1.templatesExist();
        java.util.Set<java.lang.String> strSet17 = python2Target1.getBadWords();
        org.antlr.v4.tool.Grammar grammar18 = null;
        org.stringtemplate.v4.ST sT19 = null;
        python2Target1.genRecognizerHeaderFile(grammar18, sT19, "\"tset\\n\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator22 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target23 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator22);
        java.util.Set<java.lang.String> strSet24 = python2Target23.badWords;
        java.lang.String str26 = python2Target23.encodeIntAsCharEscape(64);
        java.lang.String str27 = python2Target23.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator28 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target29 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator28);
        java.lang.String[] strArray30 = python2Target29.targetCharValueEscape;
        java.lang.String str31 = python2Target29.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup32 = python2Target29.getTemplates();
        python2Target23.templates = sTGroup32;
        java.util.Set<java.lang.String> strSet34 = python2Target23.getBadWords();
        boolean boolean35 = python2Target23.wantsBaseVisitor();
        org.antlr.v4.codegen.CodeGenerator codeGenerator36 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target37 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator36);
        java.lang.String str39 = python2Target37.getImplicitSetLabel("");
        org.antlr.v4.codegen.CodeGenerator codeGenerator40 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target41 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator40);
        java.util.Set<java.lang.String> strSet42 = python2Target41.badWords;
        java.lang.String str44 = python2Target41.encodeIntAsCharEscape(64);
        java.lang.String str45 = python2Target41.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator46 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target47 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator46);
        java.lang.String[] strArray48 = python2Target47.targetCharValueEscape;
        java.lang.String str49 = python2Target47.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup50 = python2Target47.getTemplates();
        python2Target41.templates = sTGroup50;
        python2Target37.templates = sTGroup50;
        org.stringtemplate.v4.STGroup sTGroup53 = python2Target37.templates;
        python2Target23.templates = sTGroup53;
        java.util.Set<java.lang.String> strSet55 = python2Target23.badWords;
        org.antlr.v4.codegen.target.Python2Target python2Target56 = new org.antlr.v4.codegen.target.Python2Target();
        java.lang.String str59 = python2Target56.getTargetStringLiteralFromString("hi!", true);
        java.lang.String str60 = python2Target56.getVersion();
        java.lang.String str61 = python2Target56.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator62 = null;
        python2Target56.gen = codeGenerator62;
        java.util.Set<java.lang.String> strSet64 = python2Target56.getBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator65 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target66 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator65);
        java.lang.String[] strArray67 = python2Target66.targetCharValueEscape;
        java.lang.String str68 = python2Target66.getLanguage();
        int int69 = python2Target66.getInlineTestSetWordSize();
        org.antlr.v4.codegen.CodeGenerator codeGenerator70 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target71 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator70);
        java.util.Set<java.lang.String> strSet72 = python2Target71.badWords;
        java.lang.String str74 = python2Target71.encodeIntAsCharEscape(64);
        java.lang.String str75 = python2Target71.getLanguage();
        java.lang.String str77 = python2Target71.getListLabel("");
        java.lang.String str78 = python2Target71.getVersion();
        java.util.Set<java.lang.String> strSet79 = python2Target71.getBadWords();
        python2Target66.badWords = strSet79;
        python2Target56.badWords = strSet79;
        python2Target23.badWords = strSet79;
        org.stringtemplate.v4.STGroup sTGroup83 = python2Target23.getTemplates();
        org.stringtemplate.v4.STGroup sTGroup84 = python2Target23.getTemplates();
        python2Target1.templates = sTGroup84;
        java.lang.String str87 = python2Target1.getImplicitRuleLabel("_tset\\\\1Context");
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "@" + "'", str4, "@");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Python2" + "'", str5, "Python2");
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Python2" + "'", str9, "Python2");
        org.junit.Assert.assertNotNull(sTGroup10);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "\"_@\"" + "'", str13, "\"_@\"");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "\"\\\\\\\"\\\\\\\"Context\"" + "'", str15, "\"\\\\\\\"\\\\\\\"Context\"");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(strSet17);
        org.junit.Assert.assertNotNull(strSet24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "@" + "'", str26, "@");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "Python2" + "'", str27, "Python2");
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "Python2" + "'", str31, "Python2");
        org.junit.Assert.assertNotNull(sTGroup32);
        org.junit.Assert.assertNotNull(strSet34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "_tset" + "'", str39, "_tset");
        org.junit.Assert.assertNotNull(strSet42);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "@" + "'", str44, "@");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "Python2" + "'", str45, "Python2");
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "Python2" + "'", str49, "Python2");
        org.junit.Assert.assertNotNull(sTGroup50);
        org.junit.Assert.assertNotNull(sTGroup53);
        org.junit.Assert.assertNotNull(strSet55);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "\"hi!\"" + "'", str59, "\"hi!\"");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "4.5.2.1" + "'", str60, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "4.5.2.1" + "'", str61, "4.5.2.1");
        org.junit.Assert.assertNotNull(strSet64);
        org.junit.Assert.assertNotNull(strArray67);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "Python2" + "'", str68, "Python2");
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 64 + "'", int69 == 64);
        org.junit.Assert.assertNotNull(strSet72);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "@" + "'", str74, "@");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "Python2" + "'", str75, "Python2");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "" + "'", str77, "");
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "4.5.2.1" + "'", str78, "4.5.2.1");
        org.junit.Assert.assertNotNull(strSet79);
        org.junit.Assert.assertNotNull(sTGroup83);
        org.junit.Assert.assertNotNull(sTGroup84);
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "__tset\\\\1Context" + "'", str87, "__tset\\\\1Context");
    }

    @Test
    public void test1554() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1554");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        boolean boolean3 = python2Target1.wantsBaseVisitor();
        java.lang.String str5 = python2Target1.getListLabel("Python2Context");
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = null;
        java.lang.String str9 = python2Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator6, "\"_@\"", true);
        java.lang.String[] strArray10 = python2Target1.targetCharValueEscape;
        java.lang.String str13 = python2Target1.getTargetStringLiteralFromString("@", true);
        org.stringtemplate.v4.STGroup sTGroup14 = python2Target1.loadTemplates();
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Python2Context" + "'", str5, "Python2Context");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\"_@\"" + "'", str9, "\"_@\"");
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "\"@\"" + "'", str13, "\"@\"");
        org.junit.Assert.assertNotNull(sTGroup14);
    }

    @Test
    public void test1555() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1555");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        org.stringtemplate.v4.STGroup sTGroup2 = python2Target1.templates;
        java.util.Set<java.lang.String> strSet3 = python2Target1.badWords;
        java.lang.String[] strArray4 = python2Target1.targetCharValueEscape;
        java.lang.String str7 = python2Target1.getTargetStringLiteralFromString("\\64", false);
        java.lang.String str8 = python2Target1.getLanguage();
        java.lang.String[] strArray9 = python2Target1.targetCharValueEscape;
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "\\\\64" + "'", str7, "\\\\64");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Python2" + "'", str8, "Python2");
        org.junit.Assert.assertNotNull(strArray9);
    }

    @Test
    public void test1556() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1556");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str5 = python2Target1.getTargetStringLiteralFromString("hi!", false);
        java.lang.String str7 = python2Target1.getImplicitRuleLabel("@");
        java.lang.String str9 = python2Target1.getAltLabelContextStructName("a");
        java.lang.String str11 = python2Target1.getTargetStringLiteralFromString("4.5.2.1");
        boolean boolean12 = python2Target1.wantsBaseListener();
        boolean boolean13 = python2Target1.templatesExist();
        java.lang.String str15 = python2Target1.encodeIntAsCharEscape((int) (byte) 100);
        org.antlr.v4.codegen.model.RuleFunction ruleFunction16 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str17 = python2Target1.getRuleFunctionContextStructName(ruleFunction16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "_@" + "'", str7, "_@");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "AContext" + "'", str9, "AContext");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "\"4.5.2.1\"" + "'", str11, "\"4.5.2.1\"");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "d" + "'", str15, "d");
    }

    @Test
    public void test1557() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1557");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        boolean boolean3 = python2Target1.wantsBaseVisitor();
        java.lang.String str5 = python2Target1.getListLabel("Python2Context");
        java.lang.String str6 = python2Target1.getLanguage();
        python2Target1.addBadWords();
        boolean boolean8 = python2Target1.templatesExist();
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Python2Context" + "'", str5, "Python2Context");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Python2" + "'", str6, "Python2");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
    }

    @Test
    public void test1558() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1558");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str4 = python2Target1.encodeIntAsCharEscape(64);
        java.lang.String str5 = python2Target1.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target7 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator6);
        java.lang.String[] strArray8 = python2Target7.targetCharValueEscape;
        java.lang.String str9 = python2Target7.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup10 = python2Target7.getTemplates();
        python2Target1.templates = sTGroup10;
        java.util.Set<java.lang.String> strSet12 = python2Target1.getBadWords();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str14 = python2Target1.getImplicitTokenLabel("_\"\\\"\\\"\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "@" + "'", str4, "@");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Python2" + "'", str5, "Python2");
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Python2" + "'", str9, "Python2");
        org.junit.Assert.assertNotNull(sTGroup10);
        org.junit.Assert.assertNotNull(strSet12);
    }

    @Test
    public void test1559() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1559");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        boolean boolean2 = python2Target1.wantsBaseVisitor();
        java.util.Set<java.lang.String> strSet3 = python2Target1.badWords;
        boolean boolean4 = python2Target1.supportsOverloadedMethods();
        java.lang.String str6 = python2Target1.getAltLabelContextStructName("_tsettset6");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "_tsettset6Context" + "'", str6, "_tsettset6Context");
    }

    @Test
    public void test1560() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1560");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        org.stringtemplate.v4.STGroup sTGroup2 = python2Target1.templates;
        int int3 = python2Target1.getInlineTestSetWordSize();
        int int4 = python2Target1.getSerializedATNSegmentLimit();
        java.lang.String str7 = python2Target1.getTargetStringLiteralFromString("_\"\\\"a\\\"\"", false);
        java.lang.String str10 = python2Target1.getTargetStringLiteralFromString("_\"Python2Context\"Context", false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 64 + "'", int3 == 64);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 2147483647 + "'", int4 == 2147483647);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "_\\\"\\\\\\\"a\\\\\\\"\\\"" + "'", str7, "_\\\"\\\\\\\"a\\\\\\\"\\\"");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "_\\\"Python2Context\\\"Context" + "'", str10, "_\\\"Python2Context\\\"Context");
    }

    @Test
    public void test1561() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1561");
        org.antlr.v4.codegen.target.Python2Target.PythonStringRenderer pythonStringRenderer0 = new org.antlr.v4.codegen.target.Python2Target.PythonStringRenderer();
        org.antlr.v4.codegen.CodeGenerator codeGenerator1 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target2 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator1);
        java.lang.String str4 = python2Target2.getImplicitSetLabel("");
        java.util.Locale locale6 = null;
        java.lang.String str7 = pythonStringRenderer0.toString((java.lang.Object) "", "\"\"", locale6);
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target9 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator8);
        java.util.Set<java.lang.String> strSet10 = python2Target9.badWords;
        java.lang.String str13 = python2Target9.getTargetStringLiteralFromString("hi!", false);
        java.lang.String str15 = python2Target9.getImplicitRuleLabel("@");
        java.lang.String str17 = python2Target9.getAltLabelContextStructName("a");
        java.lang.String str19 = python2Target9.getTargetStringLiteralFromString("4.5.2.1");
        java.util.Locale locale21 = null;
        java.lang.String str22 = pythonStringRenderer0.toString((java.lang.Object) str19, "_@", locale21);
        org.antlr.v4.codegen.CodeGenerator codeGenerator23 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target24 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator23);
        java.lang.String str26 = python2Target24.getImplicitSetLabel("");
        org.antlr.v4.codegen.CodeGenerator codeGenerator27 = null;
        java.lang.String str30 = python2Target24.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator27, "", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator31 = python2Target24.gen;
        org.stringtemplate.v4.STGroup sTGroup32 = python2Target24.getTemplates();
        org.stringtemplate.v4.STGroup sTGroup33 = python2Target24.getTemplates();
        java.util.Locale locale35 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str36 = pythonStringRenderer0.toString((java.lang.Object) sTGroup33, "_\"hi!\"", locale35);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: null");
        } catch (java.lang.ClassCastException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "_tset" + "'", str4, "_tset");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "\"\"" + "'", str7, "\"\"");
        org.junit.Assert.assertNotNull(strSet10);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "_@" + "'", str15, "_@");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "AContext" + "'", str17, "AContext");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "\"4.5.2.1\"" + "'", str19, "\"4.5.2.1\"");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "_@" + "'", str22, "_@");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "_tset" + "'", str26, "_tset");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "\"\"" + "'", str30, "\"\"");
        org.junit.Assert.assertNull(codeGenerator31);
        org.junit.Assert.assertNotNull(sTGroup32);
        org.junit.Assert.assertNotNull(sTGroup33);
    }

    @Test
    public void test1562() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1562");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        boolean boolean3 = python2Target1.wantsBaseVisitor();
        java.lang.String str5 = python2Target1.getListLabel("Python2Context");
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = null;
        java.lang.String str9 = python2Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator6, "\"_@\"", true);
        java.lang.String[] strArray10 = python2Target1.targetCharValueEscape;
        java.lang.String str13 = python2Target1.getTargetStringLiteralFromString("@", true);
        java.lang.String str15 = python2Target1.getTargetStringLiteralFromString("__tset\"\\\"\\\\\\\"\\\\\\\"\\\"Context\"");
        java.lang.String str17 = python2Target1.getTargetStringLiteralFromString("\"__tset\\\\64\"");
        java.lang.String str19 = python2Target1.encodeIntAsCharEscape((int) (short) 10);
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Python2Context" + "'", str5, "Python2Context");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\"_@\"" + "'", str9, "\"_@\"");
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "\"@\"" + "'", str13, "\"@\"");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "\"__tset\\\"\\\\\\\"\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"\\\\\\\"Context\\\"\"" + "'", str15, "\"__tset\\\"\\\\\\\"\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"\\\\\\\"Context\\\"\"");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "\"\\\"__tset\\\\\\\\64\\\"\"" + "'", str17, "\"\\\"__tset\\\\\\\\64\\\"\"");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "\\n" + "'", str19, "\\n");
    }

    @Test
    public void test1563() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1563");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str5 = python2Target1.getTargetStringLiteralFromString("hi!", false);
        java.lang.String str7 = python2Target1.getImplicitRuleLabel("@");
        python2Target1.addBadWords();
        int int9 = python2Target1.getInlineTestSetWordSize();
        java.lang.String[] strArray10 = python2Target1.targetCharValueEscape;
        java.lang.String str12 = python2Target1.getListLabel("\"_@\"");
        java.lang.String str15 = python2Target1.getTargetStringLiteralFromString("\"hi!\"", false);
        java.lang.String str17 = python2Target1.encodeIntAsCharEscape(1);
        org.stringtemplate.v4.STGroup sTGroup18 = python2Target1.loadTemplates();
        org.antlr.v4.codegen.CodeGenerator codeGenerator19 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target20 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator19);
        java.util.Set<java.lang.String> strSet21 = python2Target20.badWords;
        java.lang.String str24 = python2Target20.getTargetStringLiteralFromString("hi!", false);
        java.lang.String str26 = python2Target20.getImplicitRuleLabel("@");
        python2Target20.addBadWords();
        boolean boolean28 = python2Target20.wantsBaseListener();
        boolean boolean29 = python2Target20.supportsOverloadedMethods();
        java.lang.String str31 = python2Target20.getImplicitRuleLabel("AContext");
        java.lang.String str33 = python2Target20.getImplicitRuleLabel("tset6");
        org.antlr.v4.codegen.CodeGenerator codeGenerator34 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target35 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator34);
        java.util.Set<java.lang.String> strSet36 = python2Target35.badWords;
        java.lang.String str38 = python2Target35.encodeIntAsCharEscape(64);
        java.lang.String str39 = python2Target35.getLanguage();
        java.lang.String[] strArray45 = new java.lang.String[] { "\"hi!\"", "Python2", "Python2", "@", "_@" };
        java.util.LinkedHashSet<java.lang.String> strSet46 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet46, strArray45);
        python2Target35.badWords = strSet46;
        boolean boolean49 = python2Target35.wantsBaseVisitor();
        org.stringtemplate.v4.STGroup sTGroup50 = python2Target35.getTemplates();
        python2Target20.templates = sTGroup50;
        python2Target1.templates = sTGroup50;
        org.antlr.v4.codegen.CodeGenerator codeGenerator53 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target54 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator53);
        java.util.Set<java.lang.String> strSet55 = python2Target54.badWords;
        java.lang.String str58 = python2Target54.getTargetStringLiteralFromString("hi!", false);
        java.lang.String str60 = python2Target54.getImplicitRuleLabel("@");
        python2Target54.addBadWords();
        int int62 = python2Target54.getInlineTestSetWordSize();
        java.lang.String[] strArray63 = python2Target54.targetCharValueEscape;
        java.lang.String str65 = python2Target54.getListLabel("\"_@\"");
        java.lang.String str68 = python2Target54.getTargetStringLiteralFromString("\"hi!\"", false);
        java.lang.String str69 = python2Target54.getVersion();
        org.stringtemplate.v4.STGroup sTGroup70 = python2Target54.getTemplates();
        python2Target1.templates = sTGroup70;
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "_@" + "'", str7, "_@");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 64 + "'", int9 == 64);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "\"_@\"" + "'", str12, "\"_@\"");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "\\\"hi!\\\"" + "'", str15, "\\\"hi!\\\"");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "\\1" + "'", str17, "\\1");
        org.junit.Assert.assertNotNull(sTGroup18);
        org.junit.Assert.assertNotNull(strSet21);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "hi!" + "'", str24, "hi!");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "_@" + "'", str26, "_@");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "_AContext" + "'", str31, "_AContext");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "_tset6" + "'", str33, "_tset6");
        org.junit.Assert.assertNotNull(strSet36);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "@" + "'", str38, "@");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "Python2" + "'", str39, "Python2");
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(sTGroup50);
        org.junit.Assert.assertNotNull(strSet55);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "hi!" + "'", str58, "hi!");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "_@" + "'", str60, "_@");
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 64 + "'", int62 == 64);
        org.junit.Assert.assertNotNull(strArray63);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "\"_@\"" + "'", str65, "\"_@\"");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "\\\"hi!\\\"" + "'", str68, "\\\"hi!\\\"");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "4.5.2.1" + "'", str69, "4.5.2.1");
        org.junit.Assert.assertNotNull(sTGroup70);
    }

    @Test
    public void test1564() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1564");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String[] strArray2 = python2Target1.targetCharValueEscape;
        java.lang.String str3 = python2Target1.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup4 = python2Target1.getTemplates();
        java.lang.String[] strArray5 = python2Target1.targetCharValueEscape;
        java.lang.String[] strArray6 = org.antlr.v4.codegen.target.Python2Target.python2Keywords;
        python2Target1.targetCharValueEscape = strArray6;
        boolean boolean8 = python2Target1.supportsOverloadedMethods();
        java.lang.String str11 = python2Target1.getTargetStringLiteralFromString("_AContext", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator12 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target13 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator12);
        java.util.Set<java.lang.String> strSet14 = python2Target13.badWords;
        java.lang.String str16 = python2Target13.getAltLabelContextStructName("\\\"\\\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator17 = null;
        java.lang.String str20 = python2Target13.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator17, "hi!", false);
        java.lang.String str21 = python2Target13.getLanguage();
        java.util.Set<java.lang.String> strSet22 = python2Target13.badWords;
        python2Target1.badWords = strSet22;
        org.antlr.v4.tool.Grammar grammar24 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator25 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target26 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator25);
        java.util.Set<java.lang.String> strSet27 = python2Target26.badWords;
        java.lang.String str30 = python2Target26.getTargetStringLiteralFromString("hi!", false);
        java.lang.String str32 = python2Target26.getImplicitRuleLabel("@");
        python2Target26.addBadWords();
        boolean boolean34 = python2Target26.wantsBaseListener();
        java.lang.String str36 = python2Target26.getImplicitSetLabel("_tset");
        org.antlr.v4.codegen.CodeGenerator codeGenerator37 = null;
        python2Target26.gen = codeGenerator37;
        org.antlr.v4.codegen.CodeGenerator codeGenerator39 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target40 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator39);
        java.lang.String[] strArray41 = python2Target40.targetCharValueEscape;
        java.lang.String str42 = python2Target40.getLanguage();
        int int43 = python2Target40.getInlineTestSetWordSize();
        org.antlr.v4.codegen.CodeGenerator codeGenerator44 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target45 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator44);
        java.util.Set<java.lang.String> strSet46 = python2Target45.badWords;
        java.lang.String str48 = python2Target45.encodeIntAsCharEscape(64);
        java.lang.String str49 = python2Target45.getLanguage();
        java.lang.String str51 = python2Target45.getListLabel("");
        java.lang.String str52 = python2Target45.getVersion();
        java.util.Set<java.lang.String> strSet53 = python2Target45.getBadWords();
        python2Target40.badWords = strSet53;
        python2Target26.badWords = strSet53;
        org.antlr.v4.codegen.CodeGenerator codeGenerator56 = null;
        python2Target26.gen = codeGenerator56;
        boolean boolean58 = python2Target26.supportsOverloadedMethods();
        org.antlr.v4.tool.Grammar grammar59 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator60 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target61 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator60);
        java.util.Set<java.lang.String> strSet62 = python2Target61.badWords;
        boolean boolean63 = python2Target61.wantsBaseVisitor();
        boolean boolean64 = python2Target61.wantsBaseVisitor();
        org.antlr.v4.codegen.CodeGenerator codeGenerator65 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target66 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator65);
        boolean boolean67 = python2Target66.wantsBaseVisitor();
        java.util.Set<java.lang.String> strSet68 = python2Target66.badWords;
        python2Target61.badWords = strSet68;
        org.antlr.v4.tool.Grammar grammar70 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator71 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target72 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator71);
        java.lang.String str74 = python2Target72.getImplicitSetLabel("");
        org.antlr.v4.codegen.CodeGenerator codeGenerator75 = null;
        java.lang.String str78 = python2Target72.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator75, "", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator79 = null;
        java.lang.String str82 = python2Target72.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator79, "\"\\\"\\\"\"", false);
        int int83 = python2Target72.getSerializedATNSegmentLimit();
        org.antlr.v4.tool.Grammar grammar84 = null;
        int[] intArray85 = new int[] {};
        java.lang.String[] strArray86 = python2Target72.getTokenTypesAsTargetLabels(grammar84, intArray85);
        java.lang.String[] strArray87 = python2Target61.getTokenTypesAsTargetLabels(grammar70, intArray85);
        java.lang.String[] strArray88 = python2Target26.getTokenTypesAsTargetLabels(grammar59, intArray85);
        java.lang.String[] strArray89 = python2Target1.getTokenTypesAsTargetLabels(grammar24, intArray85);
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Python2" + "'", str3, "Python2");
        org.junit.Assert.assertNotNull(sTGroup4);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "\"_AContext\"" + "'", str11, "\"_AContext\"");
        org.junit.Assert.assertNotNull(strSet14);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "\\\"\\\"Context" + "'", str16, "\\\"\\\"Context");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "i" + "'", str20, "i");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Python2" + "'", str21, "Python2");
        org.junit.Assert.assertNotNull(strSet22);
        org.junit.Assert.assertNotNull(strSet27);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "hi!" + "'", str30, "hi!");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "_@" + "'", str32, "_@");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "_tset_tset" + "'", str36, "_tset_tset");
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "Python2" + "'", str42, "Python2");
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 64 + "'", int43 == 64);
        org.junit.Assert.assertNotNull(strSet46);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "@" + "'", str48, "@");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "Python2" + "'", str49, "Python2");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "" + "'", str51, "");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "4.5.2.1" + "'", str52, "4.5.2.1");
        org.junit.Assert.assertNotNull(strSet53);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(strSet62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(strSet68);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "_tset" + "'", str74, "_tset");
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "\"\"" + "'", str78, "\"\"");
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "\\\"\\\"" + "'", str82, "\\\"\\\"");
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 2147483647 + "'", int83 == 2147483647);
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[]");
        org.junit.Assert.assertNotNull(strArray86);
        org.junit.Assert.assertNotNull(strArray87);
        org.junit.Assert.assertNotNull(strArray88);
        org.junit.Assert.assertNotNull(strArray89);
    }

    @Test
    public void test1565() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1565");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str4 = python2Target1.getAltLabelContextStructName("\\\"\\\"");
        boolean boolean5 = python2Target1.wantsBaseVisitor();
        java.util.Set<java.lang.String> strSet6 = python2Target1.getBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target8 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator7);
        boolean boolean9 = python2Target8.wantsBaseVisitor();
        java.util.Set<java.lang.String> strSet10 = python2Target8.badWords;
        java.util.Set<java.lang.String> strSet11 = python2Target8.getBadWords();
        python2Target1.badWords = strSet11;
        java.lang.String str14 = python2Target1.getImplicitRuleLabel("\\\"\\\"Context");
        int int15 = python2Target1.getSerializedATNSegmentLimit();
        python2Target1.language = "tset6";
        java.lang.String str19 = python2Target1.getAltLabelContextStructName("_tset\"\"ContextContextContext");
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "\\\"\\\"Context" + "'", str4, "\\\"\\\"Context");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(strSet6);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(strSet10);
        org.junit.Assert.assertNotNull(strSet11);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "_\\\"\\\"Context" + "'", str14, "_\\\"\\\"Context");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 2147483647 + "'", int15 == 2147483647);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "_tset\"\"ContextContextContextContext" + "'", str19, "_tset\"\"ContextContextContextContext");
    }

    @Test
    public void test1566() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1566");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str5 = python2Target1.getTargetStringLiteralFromString("hi!", false);
        java.lang.String str7 = python2Target1.getImplicitRuleLabel("@");
        python2Target1.addBadWords();
        int int9 = python2Target1.getInlineTestSetWordSize();
        java.lang.String[] strArray10 = python2Target1.targetCharValueEscape;
        java.lang.String str12 = python2Target1.getListLabel("\"_@\"");
        java.lang.String str15 = python2Target1.getTargetStringLiteralFromString("\"hi!\"", false);
        java.lang.String str17 = python2Target1.encodeIntAsCharEscape(1);
        java.lang.String str19 = python2Target1.getListLabel("\"\"");
        java.lang.String str21 = python2Target1.getAltLabelContextStructName("\\\"\\\"Context");
        org.antlr.v4.tool.ast.GrammarAST grammarAST22 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean23 = python2Target1.visibleGrammarSymbolCausesIssueInGeneratedCode(grammarAST22);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "_@" + "'", str7, "_@");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 64 + "'", int9 == 64);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "\"_@\"" + "'", str12, "\"_@\"");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "\\\"hi!\\\"" + "'", str15, "\\\"hi!\\\"");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "\\1" + "'", str17, "\\1");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "\"\"" + "'", str19, "\"\"");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "\\\"\\\"ContextContext" + "'", str21, "\\\"\\\"ContextContext");
    }

    @Test
    public void test1567() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1567");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        boolean boolean2 = python2Target1.wantsBaseVisitor();
        java.util.Set<java.lang.String> strSet3 = python2Target1.badWords;
        java.util.Set<java.lang.String> strSet4 = python2Target1.getBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator5 = python2Target1.gen;
        boolean boolean6 = python2Target1.wantsBaseVisitor();
        int int7 = python2Target1.getInlineTestSetWordSize();
        org.stringtemplate.v4.STGroup sTGroup8 = python2Target1.getTemplates();
        java.lang.String str10 = python2Target1.getListLabel("\"\\\\0\"");
        org.stringtemplate.v4.STGroup sTGroup11 = python2Target1.getTemplates();
        java.lang.Class<?> wildcardClass12 = sTGroup11.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertNull(codeGenerator5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 64 + "'", int7 == 64);
        org.junit.Assert.assertNotNull(sTGroup8);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\"\\\\0\"" + "'", str10, "\"\\\\0\"");
        org.junit.Assert.assertNotNull(sTGroup11);
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test1568() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1568");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String str3 = python2Target1.getImplicitSetLabel("");
        org.antlr.v4.codegen.CodeGenerator codeGenerator4 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target5 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator4);
        java.util.Set<java.lang.String> strSet6 = python2Target5.badWords;
        java.lang.String str8 = python2Target5.encodeIntAsCharEscape(64);
        java.lang.String str9 = python2Target5.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target11 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator10);
        java.lang.String[] strArray12 = python2Target11.targetCharValueEscape;
        java.lang.String str13 = python2Target11.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup14 = python2Target11.getTemplates();
        python2Target5.templates = sTGroup14;
        python2Target1.templates = sTGroup14;
        java.lang.String str18 = python2Target1.getAltLabelContextStructName("Python2");
        org.stringtemplate.v4.STGroup sTGroup19 = python2Target1.loadTemplates();
        boolean boolean20 = python2Target1.templatesExist();
        org.stringtemplate.v4.STGroup sTGroup21 = python2Target1.loadTemplates();
        java.lang.String str23 = python2Target1.getTargetStringLiteralFromString("\"tset\\n\"");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "_tset" + "'", str3, "_tset");
        org.junit.Assert.assertNotNull(strSet6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "@" + "'", str8, "@");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Python2" + "'", str9, "Python2");
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Python2" + "'", str13, "Python2");
        org.junit.Assert.assertNotNull(sTGroup14);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Python2Context" + "'", str18, "Python2Context");
        org.junit.Assert.assertNotNull(sTGroup19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(sTGroup21);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "\"\\\"tset\\\\n\\\"\"" + "'", str23, "\"\\\"tset\\\\n\\\"\"");
    }

    @Test
    public void test1569() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1569");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String str3 = python2Target1.getImplicitSetLabel("");
        org.antlr.v4.codegen.CodeGenerator codeGenerator4 = null;
        java.lang.String str7 = python2Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator4, "", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = null;
        java.lang.String str11 = python2Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator8, "\"\\\"\\\"\"", false);
        java.util.Set<java.lang.String> strSet12 = python2Target1.badWords;
        java.lang.String str14 = python2Target1.getAltLabelContextStructName("\\64");
        org.antlr.v4.codegen.CodeGenerator codeGenerator15 = python2Target1.gen;
        java.lang.String str18 = python2Target1.getTargetStringLiteralFromString("_tset6Context", false);
        org.stringtemplate.v4.STGroup sTGroup19 = python2Target1.templates;
        org.stringtemplate.v4.STGroup sTGroup20 = python2Target1.templates;
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "_tset" + "'", str3, "_tset");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "\"\"" + "'", str7, "\"\"");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "\\\"\\\"" + "'", str11, "\\\"\\\"");
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "\\64Context" + "'", str14, "\\64Context");
        org.junit.Assert.assertNull(codeGenerator15);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "_tset6Context" + "'", str18, "_tset6Context");
        org.junit.Assert.assertNotNull(sTGroup19);
        org.junit.Assert.assertNotNull(sTGroup20);
    }

    @Test
    public void test1570() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1570");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str5 = python2Target1.getTargetStringLiteralFromString("hi!", false);
        java.lang.String str7 = python2Target1.getImplicitRuleLabel("@");
        python2Target1.addBadWords();
        int int9 = python2Target1.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet10 = python2Target1.getBadWords();
        boolean boolean11 = python2Target1.supportsOverloadedMethods();
        java.lang.String str13 = python2Target1.getImplicitRuleLabel("\"\\\\\\\"\\\\\\\"Context\"");
        java.util.Set<java.lang.String> strSet14 = python2Target1.badWords;
        java.lang.String[] strArray15 = python2Target1.targetCharValueEscape;
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "_@" + "'", str7, "_@");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 64 + "'", int9 == 64);
        org.junit.Assert.assertNotNull(strSet10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "_\"\\\\\\\"\\\\\\\"Context\"" + "'", str13, "_\"\\\\\\\"\\\\\\\"Context\"");
        org.junit.Assert.assertNotNull(strSet14);
        org.junit.Assert.assertNotNull(strArray15);
    }

    @Test
    public void test1571() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1571");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str4 = python2Target1.encodeIntAsCharEscape(64);
        java.lang.String str5 = python2Target1.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target7 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator6);
        java.lang.String[] strArray8 = python2Target7.targetCharValueEscape;
        java.lang.String str9 = python2Target7.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup10 = python2Target7.getTemplates();
        python2Target1.templates = sTGroup10;
        java.util.Set<java.lang.String> strSet12 = python2Target1.getBadWords();
        java.lang.String str15 = python2Target1.getTargetStringLiteralFromString("\"hi!\"", true);
        org.stringtemplate.v4.STGroup sTGroup16 = python2Target1.templates;
        org.antlr.v4.codegen.CodeGenerator codeGenerator17 = python2Target1.getCodeGenerator();
        java.lang.String str18 = python2Target1.getLanguage();
        java.lang.String str20 = python2Target1.getTargetStringLiteralFromString("__tset\\64");
        java.lang.String str22 = python2Target1.getTargetStringLiteralFromString("\"__\"");
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "@" + "'", str4, "@");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Python2" + "'", str5, "Python2");
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Python2" + "'", str9, "Python2");
        org.junit.Assert.assertNotNull(sTGroup10);
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "\"\\\"hi!\\\"\"" + "'", str15, "\"\\\"hi!\\\"\"");
        org.junit.Assert.assertNotNull(sTGroup16);
        org.junit.Assert.assertNull(codeGenerator17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Python2" + "'", str18, "Python2");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "\"__tset\\\\64\"" + "'", str20, "\"__tset\\\\64\"");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "\"\\\"__\\\"\"" + "'", str22, "\"\\\"__\\\"\"");
    }

    @Test
    public void test1572() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1572");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str4 = python2Target1.encodeIntAsCharEscape(64);
        java.lang.String str5 = python2Target1.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target7 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator6);
        java.lang.String[] strArray8 = python2Target7.targetCharValueEscape;
        java.lang.String str9 = python2Target7.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup10 = python2Target7.getTemplates();
        python2Target1.templates = sTGroup10;
        java.util.Set<java.lang.String> strSet12 = python2Target1.getBadWords();
        java.lang.String str15 = python2Target1.getTargetStringLiteralFromString("\"hi!\"", true);
        java.lang.String str17 = python2Target1.getAltLabelContextStructName("\\1");
        java.lang.String str18 = python2Target1.language;
        python2Target1.addBadWords();
        org.antlr.v4.tool.Grammar grammar20 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator21 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target22 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator21);
        org.stringtemplate.v4.STGroup sTGroup23 = python2Target22.templates;
        int int24 = python2Target22.getInlineTestSetWordSize();
        int int25 = python2Target22.getSerializedATNSegmentLimit();
        org.antlr.v4.tool.Grammar grammar26 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator27 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target28 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator27);
        java.lang.String str30 = python2Target28.getImplicitSetLabel("");
        org.antlr.v4.codegen.CodeGenerator codeGenerator31 = null;
        java.lang.String str34 = python2Target28.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator31, "", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator35 = null;
        java.lang.String str38 = python2Target28.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator35, "\"\\\"\\\"\"", false);
        int int39 = python2Target28.getSerializedATNSegmentLimit();
        org.antlr.v4.tool.Grammar grammar40 = null;
        int[] intArray41 = new int[] {};
        java.lang.String[] strArray42 = python2Target28.getTokenTypesAsTargetLabels(grammar40, intArray41);
        java.lang.String[] strArray43 = python2Target22.getTokenTypesAsTargetLabels(grammar26, intArray41);
        java.lang.String[] strArray44 = python2Target1.getTokenTypesAsTargetLabels(grammar20, intArray41);
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "@" + "'", str4, "@");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Python2" + "'", str5, "Python2");
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Python2" + "'", str9, "Python2");
        org.junit.Assert.assertNotNull(sTGroup10);
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "\"\\\"hi!\\\"\"" + "'", str15, "\"\\\"hi!\\\"\"");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "\\1Context" + "'", str17, "\\1Context");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Python2" + "'", str18, "Python2");
        org.junit.Assert.assertNull(sTGroup23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 64 + "'", int24 == 64);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 2147483647 + "'", int25 == 2147483647);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "_tset" + "'", str30, "_tset");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "\"\"" + "'", str34, "\"\"");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "\\\"\\\"" + "'", str38, "\\\"\\\"");
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 2147483647 + "'", int39 == 2147483647);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[]");
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertNotNull(strArray44);
    }

    @Test
    public void test1573() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1573");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        boolean boolean2 = python2Target1.wantsBaseVisitor();
        java.util.Set<java.lang.String> strSet3 = python2Target1.badWords;
        java.lang.String str5 = python2Target1.getTargetStringLiteralFromString("");
        org.stringtemplate.v4.STGroup sTGroup6 = python2Target1.getTemplates();
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = python2Target1.getCodeGenerator();
        java.lang.String str8 = python2Target1.getVersion();
        java.lang.String str10 = python2Target1.getListLabel("\\\"\\\\\\\\0\\\"");
        org.antlr.v4.tool.ast.GrammarAST grammarAST11 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean12 = python2Target1.grammarSymbolCausesIssueInGeneratedCode(grammarAST11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "\"\"" + "'", str5, "\"\"");
        org.junit.Assert.assertNotNull(sTGroup6);
        org.junit.Assert.assertNull(codeGenerator7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "4.5.2.1" + "'", str8, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\\\"\\\\\\\\0\\\"" + "'", str10, "\\\"\\\\\\\\0\\\"");
    }

    @Test
    public void test1574() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1574");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String str3 = python2Target1.getImplicitSetLabel("");
        org.antlr.v4.codegen.CodeGenerator codeGenerator4 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target5 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator4);
        java.util.Set<java.lang.String> strSet6 = python2Target5.badWords;
        java.lang.String str8 = python2Target5.encodeIntAsCharEscape(64);
        java.lang.String str9 = python2Target5.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target11 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator10);
        java.lang.String[] strArray12 = python2Target11.targetCharValueEscape;
        java.lang.String str13 = python2Target11.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup14 = python2Target11.getTemplates();
        python2Target5.templates = sTGroup14;
        python2Target1.templates = sTGroup14;
        java.lang.String str18 = python2Target1.getAltLabelContextStructName("Python2");
        org.stringtemplate.v4.STGroup sTGroup19 = python2Target1.loadTemplates();
        java.lang.String str22 = python2Target1.getTargetStringLiteralFromString("\"_tset\"", true);
        java.lang.String str24 = python2Target1.getImplicitSetLabel("\"\"ContextContext");
        java.lang.String str26 = python2Target1.getTargetStringLiteralFromString("4.5.2.1");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "_tset" + "'", str3, "_tset");
        org.junit.Assert.assertNotNull(strSet6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "@" + "'", str8, "@");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Python2" + "'", str9, "Python2");
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Python2" + "'", str13, "Python2");
        org.junit.Assert.assertNotNull(sTGroup14);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Python2Context" + "'", str18, "Python2Context");
        org.junit.Assert.assertNotNull(sTGroup19);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "\"\\\"_tset\\\"\"" + "'", str22, "\"\\\"_tset\\\"\"");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "_tset\"\"ContextContext" + "'", str24, "_tset\"\"ContextContext");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "\"4.5.2.1\"" + "'", str26, "\"4.5.2.1\"");
    }

    @Test
    public void test1575() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1575");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str4 = python2Target1.encodeIntAsCharEscape(64);
        java.lang.String str7 = python2Target1.getTargetStringLiteralFromString("\"\"", true);
        java.lang.String str9 = python2Target1.getImplicitRuleLabel("hi!");
        java.lang.String str12 = python2Target1.getTargetStringLiteralFromString("_hi!", true);
        org.stringtemplate.v4.STGroup sTGroup13 = python2Target1.loadTemplates();
        java.lang.String str14 = python2Target1.getVersion();
        org.stringtemplate.v4.STGroup sTGroup15 = python2Target1.loadTemplates();
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "@" + "'", str4, "@");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "\"\\\"\\\"\"" + "'", str7, "\"\\\"\\\"\"");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "_hi!" + "'", str9, "_hi!");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "\"_hi!\"" + "'", str12, "\"_hi!\"");
        org.junit.Assert.assertNotNull(sTGroup13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "4.5.2.1" + "'", str14, "4.5.2.1");
        org.junit.Assert.assertNotNull(sTGroup15);
    }

    @Test
    public void test1576() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1576");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str4 = python2Target1.getImplicitRuleLabel("\"\\\"a\\\"\"");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str6 = python2Target1.getElementListName("_tset6");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "_\"\\\"a\\\"\"" + "'", str4, "_\"\\\"a\\\"\"");
    }

    @Test
    public void test1577() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1577");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str4 = python2Target1.encodeIntAsCharEscape(64);
        java.lang.String str7 = python2Target1.getTargetStringLiteralFromString("\"\"", true);
        java.lang.String str9 = python2Target1.getImplicitSetLabel("a");
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target11 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator10);
        java.util.Set<java.lang.String> strSet12 = python2Target11.badWords;
        java.lang.String str14 = python2Target11.encodeIntAsCharEscape(64);
        java.lang.String str15 = python2Target11.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator16 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target17 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator16);
        java.lang.String[] strArray18 = python2Target17.targetCharValueEscape;
        java.lang.String str19 = python2Target17.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup20 = python2Target17.getTemplates();
        python2Target11.templates = sTGroup20;
        java.util.Set<java.lang.String> strSet22 = python2Target11.getBadWords();
        boolean boolean23 = python2Target11.wantsBaseVisitor();
        org.antlr.v4.codegen.CodeGenerator codeGenerator24 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target25 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator24);
        java.lang.String str27 = python2Target25.getImplicitSetLabel("");
        org.antlr.v4.codegen.CodeGenerator codeGenerator28 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target29 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator28);
        java.util.Set<java.lang.String> strSet30 = python2Target29.badWords;
        java.lang.String str32 = python2Target29.encodeIntAsCharEscape(64);
        java.lang.String str33 = python2Target29.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator34 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target35 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator34);
        java.lang.String[] strArray36 = python2Target35.targetCharValueEscape;
        java.lang.String str37 = python2Target35.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup38 = python2Target35.getTemplates();
        python2Target29.templates = sTGroup38;
        python2Target25.templates = sTGroup38;
        org.stringtemplate.v4.STGroup sTGroup41 = python2Target25.templates;
        python2Target11.templates = sTGroup41;
        python2Target1.templates = sTGroup41;
        java.util.Set<java.lang.String> strSet44 = python2Target1.getBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator45 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target46 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator45);
        org.stringtemplate.v4.STGroup sTGroup47 = python2Target46.templates;
        int int48 = python2Target46.getInlineTestSetWordSize();
        boolean boolean49 = python2Target46.templatesExist();
        boolean boolean50 = python2Target46.templatesExist();
        org.stringtemplate.v4.STGroup sTGroup51 = python2Target46.getTemplates();
        python2Target1.templates = sTGroup51;
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "@" + "'", str4, "@");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "\"\\\"\\\"\"" + "'", str7, "\"\\\"\\\"\"");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "_tseta" + "'", str9, "_tseta");
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "@" + "'", str14, "@");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Python2" + "'", str15, "Python2");
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Python2" + "'", str19, "Python2");
        org.junit.Assert.assertNotNull(sTGroup20);
        org.junit.Assert.assertNotNull(strSet22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "_tset" + "'", str27, "_tset");
        org.junit.Assert.assertNotNull(strSet30);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "@" + "'", str32, "@");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "Python2" + "'", str33, "Python2");
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "Python2" + "'", str37, "Python2");
        org.junit.Assert.assertNotNull(sTGroup38);
        org.junit.Assert.assertNotNull(sTGroup41);
        org.junit.Assert.assertNotNull(strSet44);
        org.junit.Assert.assertNull(sTGroup47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 64 + "'", int48 == 64);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(sTGroup51);
    }

    @Test
    public void test1578() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1578");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str5 = python2Target1.getTargetStringLiteralFromString("hi!", false);
        int int6 = python2Target1.getInlineTestSetWordSize();
        boolean boolean7 = python2Target1.wantsBaseListener();
        java.lang.String str9 = python2Target1.encodeIntAsCharEscape((int) (byte) 10);
        java.lang.String str11 = python2Target1.getListLabel("_tset\\64");
        java.lang.String[] strArray12 = python2Target1.targetCharValueEscape;
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 64 + "'", int6 == 64);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\\n" + "'", str9, "\\n");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "_tset\\64" + "'", str11, "_tset\\64");
        org.junit.Assert.assertNotNull(strArray12);
    }

    @Test
    public void test1579() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1579");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str5 = python2Target1.getTargetStringLiteralFromString("hi!", false);
        java.lang.String str7 = python2Target1.getImplicitRuleLabel("@");
        python2Target1.addBadWords();
        int int9 = python2Target1.getInlineTestSetWordSize();
        java.lang.String[] strArray10 = python2Target1.targetCharValueEscape;
        java.lang.String str12 = python2Target1.getListLabel("\"_@\"");
        java.lang.String str15 = python2Target1.getTargetStringLiteralFromString("\"hi!\"", false);
        java.lang.String str17 = python2Target1.encodeIntAsCharEscape(1);
        org.stringtemplate.v4.STGroup sTGroup18 = python2Target1.loadTemplates();
        org.antlr.v4.codegen.CodeGenerator codeGenerator19 = null;
        java.lang.String str22 = python2Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator19, "_\"\\\"Python2Context\\\"\"", true);
        boolean boolean23 = python2Target1.wantsBaseVisitor();
        org.antlr.v4.codegen.CodeGenerator codeGenerator24 = python2Target1.gen;
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "_@" + "'", str7, "_@");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 64 + "'", int9 == 64);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "\"_@\"" + "'", str12, "\"_@\"");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "\\\"hi!\\\"" + "'", str15, "\\\"hi!\\\"");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "\\1" + "'", str17, "\\1");
        org.junit.Assert.assertNotNull(sTGroup18);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "\"\\\"\\\"Python2Context\\\"\"" + "'", str22, "\"\\\"\\\"Python2Context\\\"\"");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNull(codeGenerator24);
    }

    @Test
    public void test1580() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1580");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        python2Target1.language = "\"\\\"hi!\\\"\"";
        java.lang.String str5 = python2Target1.encodeIntAsCharEscape((int) '4');
        java.lang.String str6 = python2Target1.language;
        java.lang.String str8 = python2Target1.getTargetStringLiteralFromString("\"_@\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator9 = python2Target1.gen;
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = null;
        python2Target1.gen = codeGenerator10;
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "\\64" + "'", str5, "\\64");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\"\\\"hi!\\\"\"" + "'", str6, "\"\\\"hi!\\\"\"");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\"\\\"_@\\\"\"" + "'", str8, "\"\\\"_@\\\"\"");
        org.junit.Assert.assertNull(codeGenerator9);
    }

    @Test
    public void test1581() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1581");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str5 = python2Target1.getTargetStringLiteralFromString("hi!", false);
        java.lang.String str7 = python2Target1.getImplicitRuleLabel("@");
        python2Target1.addBadWords();
        int int9 = python2Target1.getInlineTestSetWordSize();
        java.lang.String[] strArray10 = python2Target1.targetCharValueEscape;
        java.lang.String str12 = python2Target1.getListLabel("\"_@\"");
        java.lang.String str15 = python2Target1.getTargetStringLiteralFromString("\"hi!\"", false);
        java.lang.String str17 = python2Target1.encodeIntAsCharEscape(1);
        org.stringtemplate.v4.STGroup sTGroup18 = python2Target1.loadTemplates();
        org.antlr.v4.codegen.CodeGenerator codeGenerator19 = null;
        java.lang.String str22 = python2Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator19, "_\"\\\"Python2Context\\\"\"", true);
        org.antlr.v4.tool.ast.GrammarAST grammarAST23 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean24 = python2Target1.visibleGrammarSymbolCausesIssueInGeneratedCode(grammarAST23);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "_@" + "'", str7, "_@");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 64 + "'", int9 == 64);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "\"_@\"" + "'", str12, "\"_@\"");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "\\\"hi!\\\"" + "'", str15, "\\\"hi!\\\"");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "\\1" + "'", str17, "\\1");
        org.junit.Assert.assertNotNull(sTGroup18);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "\"\\\"\\\"Python2Context\\\"\"" + "'", str22, "\"\\\"\\\"Python2Context\\\"\"");
    }

    @Test
    public void test1582() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1582");
        org.antlr.v4.codegen.target.Python2Target python2Target0 = new org.antlr.v4.codegen.target.Python2Target();
        java.lang.String str3 = python2Target0.getTargetStringLiteralFromString("@", false);
        org.antlr.v4.codegen.CodeGenerator codeGenerator4 = null;
        java.lang.String str7 = python2Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator4, "_\"\\\"\\\"\"", true);
        java.lang.String[] strArray8 = python2Target0.targetCharValueEscape;
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "@" + "'", str3, "@");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "\"\\\"\\\"\\\"\"" + "'", str7, "\"\\\"\\\"\\\"\"");
        org.junit.Assert.assertNotNull(strArray8);
    }

    @Test
    public void test1583() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1583");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str5 = python2Target1.getTargetStringLiteralFromString("hi!", false);
        int int6 = python2Target1.getInlineTestSetWordSize();
        boolean boolean7 = python2Target1.wantsBaseListener();
        java.util.Set<java.lang.String> strSet8 = python2Target1.badWords;
        java.util.Set<java.lang.String> strSet9 = python2Target1.badWords;
        int int10 = python2Target1.getSerializedATNSegmentLimit();
        org.antlr.v4.codegen.CodeGenerator codeGenerator11 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target12 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator11);
        org.stringtemplate.v4.STGroup sTGroup13 = python2Target12.templates;
        int int14 = python2Target12.getInlineTestSetWordSize();
        boolean boolean15 = python2Target12.templatesExist();
        org.stringtemplate.v4.STGroup sTGroup16 = python2Target12.getTemplates();
        python2Target1.templates = sTGroup16;
        boolean boolean18 = python2Target1.supportsOverloadedMethods();
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 64 + "'", int6 == 64);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertNotNull(strSet9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 2147483647 + "'", int10 == 2147483647);
        org.junit.Assert.assertNull(sTGroup13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 64 + "'", int14 == 64);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(sTGroup16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    }

    @Test
    public void test1584() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1584");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String str3 = python2Target1.getImplicitSetLabel("");
        org.antlr.v4.codegen.CodeGenerator codeGenerator4 = null;
        java.lang.String str7 = python2Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator4, "", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = null;
        java.lang.String str11 = python2Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator8, "\"\\\"\\\"\"", false);
        java.lang.String[] strArray12 = python2Target1.targetCharValueEscape;
        java.lang.String str14 = python2Target1.getImplicitRuleLabel("\"\\\"\\\\\\\\0\\\"\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator15 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target16 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator15);
        java.util.Set<java.lang.String> strSet17 = python2Target16.badWords;
        java.lang.String str20 = python2Target16.getTargetStringLiteralFromString("hi!", false);
        java.lang.String str22 = python2Target16.getImplicitRuleLabel("@");
        python2Target16.addBadWords();
        int int24 = python2Target16.getInlineTestSetWordSize();
        java.lang.String[] strArray25 = python2Target16.targetCharValueEscape;
        java.lang.String str27 = python2Target16.encodeIntAsCharEscape((int) ' ');
        java.util.Set<java.lang.String> strSet28 = python2Target16.getBadWords();
        org.stringtemplate.v4.STGroup sTGroup29 = python2Target16.loadTemplates();
        java.util.Set<java.lang.String> strSet30 = python2Target16.getBadWords();
        python2Target1.badWords = strSet30;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str33 = python2Target1.encodeIntAsCharEscape((int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot encode the specified value: -1");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "_tset" + "'", str3, "_tset");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "\"\"" + "'", str7, "\"\"");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "\\\"\\\"" + "'", str11, "\\\"\\\"");
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "_\"\\\"\\\\\\\\0\\\"\"" + "'", str14, "_\"\\\"\\\\\\\\0\\\"\"");
        org.junit.Assert.assertNotNull(strSet17);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "hi!" + "'", str20, "hi!");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "_@" + "'", str22, "_@");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 64 + "'", int24 == 64);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + " " + "'", str27, " ");
        org.junit.Assert.assertNotNull(strSet28);
        org.junit.Assert.assertNotNull(sTGroup29);
        org.junit.Assert.assertNotNull(strSet30);
    }

    @Test
    public void test1585() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1585");
        org.antlr.v4.codegen.target.Python2Target python2Target0 = new org.antlr.v4.codegen.target.Python2Target();
        java.lang.String str3 = python2Target0.getTargetStringLiteralFromString("hi!", true);
        java.lang.String str5 = python2Target0.encodeIntAsCharEscape(0);
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = python2Target0.getCodeGenerator();
        python2Target0.addBadWords();
        java.util.Set<java.lang.String> strSet8 = python2Target0.badWords;
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "\"hi!\"" + "'", str3, "\"hi!\"");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "\\0" + "'", str5, "\\0");
        org.junit.Assert.assertNull(codeGenerator6);
        org.junit.Assert.assertNotNull(strSet8);
    }

    @Test
    public void test1586() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1586");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String[] strArray2 = python2Target1.targetCharValueEscape;
        java.lang.String str4 = python2Target1.getImplicitSetLabel("\\64");
        java.lang.String[] strArray5 = python2Target1.targetCharValueEscape;
        org.stringtemplate.v4.STGroup sTGroup6 = python2Target1.getTemplates();
        python2Target1.addBadWords();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str9 = python2Target1.getImplicitTokenLabel("__tsetAContext");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "_tset\\64" + "'", str4, "_tset\\64");
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(sTGroup6);
    }

    @Test
    public void test1587() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1587");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str4 = python2Target1.encodeIntAsCharEscape(64);
        java.lang.String str5 = python2Target1.getLanguage();
        java.lang.String[] strArray11 = new java.lang.String[] { "\"hi!\"", "Python2", "Python2", "@", "_@" };
        java.util.LinkedHashSet<java.lang.String> strSet12 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet12, strArray11);
        python2Target1.badWords = strSet12;
        boolean boolean15 = python2Target1.wantsBaseVisitor();
        boolean boolean16 = python2Target1.templatesExist();
        org.antlr.v4.tool.Grammar grammar17 = null;
        org.stringtemplate.v4.ST sT18 = null;
        python2Target1.genRecognizerHeaderFile(grammar17, sT18, "_tset\\n");
        java.lang.String str22 = python2Target1.getListLabel("_\"a\"ContextContext");
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "@" + "'", str4, "@");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Python2" + "'", str5, "Python2");
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "_\"a\"ContextContext" + "'", str22, "_\"a\"ContextContext");
    }

    @Test
    public void test1588() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1588");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str4 = python2Target1.encodeIntAsCharEscape(64);
        java.lang.String str5 = python2Target1.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target7 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator6);
        java.lang.String[] strArray8 = python2Target7.targetCharValueEscape;
        java.lang.String str9 = python2Target7.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup10 = python2Target7.getTemplates();
        python2Target1.templates = sTGroup10;
        java.util.Set<java.lang.String> strSet12 = python2Target1.getBadWords();
        java.lang.String str15 = python2Target1.getTargetStringLiteralFromString("\"hi!\"", true);
        org.stringtemplate.v4.STGroup sTGroup16 = python2Target1.templates;
        org.antlr.v4.codegen.CodeGenerator codeGenerator17 = python2Target1.getCodeGenerator();
        java.lang.String str18 = python2Target1.getLanguage();
        java.lang.String str20 = python2Target1.getTargetStringLiteralFromString("__tset\\64");
        java.lang.String str22 = python2Target1.getAltLabelContextStructName("\"Python2Context\"");
        org.antlr.v4.tool.ast.GrammarAST grammarAST23 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean24 = python2Target1.visibleGrammarSymbolCausesIssueInGeneratedCode(grammarAST23);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "@" + "'", str4, "@");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Python2" + "'", str5, "Python2");
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Python2" + "'", str9, "Python2");
        org.junit.Assert.assertNotNull(sTGroup10);
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "\"\\\"hi!\\\"\"" + "'", str15, "\"\\\"hi!\\\"\"");
        org.junit.Assert.assertNotNull(sTGroup16);
        org.junit.Assert.assertNull(codeGenerator17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Python2" + "'", str18, "Python2");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "\"__tset\\\\64\"" + "'", str20, "\"__tset\\\\64\"");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "\"Python2Context\"Context" + "'", str22, "\"Python2Context\"Context");
    }

    @Test
    public void test1589() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1589");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        org.stringtemplate.v4.STGroup sTGroup2 = python2Target1.templates;
        int int3 = python2Target1.getInlineTestSetWordSize();
        boolean boolean4 = python2Target1.wantsBaseVisitor();
        org.antlr.v4.codegen.CodeGenerator codeGenerator5 = null;
        python2Target1.gen = codeGenerator5;
        java.util.Set<java.lang.String> strSet7 = python2Target1.getBadWords();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str9 = python2Target1.encodeIntAsCharEscape((int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot encode the specified value: -1");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 64 + "'", int3 == 64);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(strSet7);
    }

    @Test
    public void test1590() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1590");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str5 = python2Target1.getTargetStringLiteralFromString("hi!", false);
        int int6 = python2Target1.getInlineTestSetWordSize();
        boolean boolean7 = python2Target1.wantsBaseListener();
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = null;
        python2Target1.gen = codeGenerator8;
        java.lang.String str10 = python2Target1.getLanguage();
        org.antlr.v4.codegen.model.RuleFunction ruleFunction11 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str12 = python2Target1.getRuleFunctionContextStructName(ruleFunction11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 64 + "'", int6 == 64);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Python2" + "'", str10, "Python2");
    }

    @Test
    public void test1591() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1591");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str4 = python2Target1.encodeIntAsCharEscape(64);
        java.util.Set<java.lang.String> strSet5 = python2Target1.badWords;
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = null;
        java.lang.String str9 = python2Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator6, "\"\\\"a\\\"\"", false);
        org.antlr.v4.tool.ast.GrammarAST grammarAST10 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str11 = python2Target1.getLoopLabel(grammarAST10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "@" + "'", str4, "@");
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\\\"a\\\"" + "'", str9, "\\\"a\\\"");
    }

    @Test
    public void test1592() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1592");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str5 = python2Target1.getTargetStringLiteralFromString("hi!", false);
        java.lang.String str7 = python2Target1.getImplicitRuleLabel("@");
        java.lang.String str9 = python2Target1.getAltLabelContextStructName("a");
        java.lang.String str11 = python2Target1.getTargetStringLiteralFromString("4.5.2.1");
        java.lang.String str12 = python2Target1.language;
        org.antlr.v4.tool.ast.GrammarAST grammarAST13 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str14 = python2Target1.getLoopLabel(grammarAST13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "_@" + "'", str7, "_@");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "AContext" + "'", str9, "AContext");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "\"4.5.2.1\"" + "'", str11, "\"4.5.2.1\"");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Python2" + "'", str12, "Python2");
    }

    @Test
    public void test1593() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1593");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str5 = python2Target1.getTargetStringLiteralFromString("hi!", false);
        int int6 = python2Target1.getInlineTestSetWordSize();
        boolean boolean7 = python2Target1.wantsBaseListener();
        java.util.Set<java.lang.String> strSet8 = python2Target1.badWords;
        boolean boolean9 = python2Target1.templatesExist();
        java.lang.String str11 = python2Target1.getImplicitSetLabel("_tset\\n");
        org.antlr.v4.codegen.CodeGenerator codeGenerator12 = python2Target1.getCodeGenerator();
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 64 + "'", int6 == 64);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "_tset_tset\\n" + "'", str11, "_tset_tset\\n");
        org.junit.Assert.assertNull(codeGenerator12);
    }

    @Test
    public void test1594() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1594");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        python2Target1.language = "\"\\\"hi!\\\"\"";
        java.lang.String str5 = python2Target1.encodeIntAsCharEscape((int) '4');
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = python2Target1.gen;
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = python2Target1.getCodeGenerator();
        java.lang.String[] strArray8 = python2Target1.targetCharValueEscape;
        org.antlr.v4.tool.Grammar grammar9 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target10 = new org.antlr.v4.codegen.target.Python2Target();
        python2Target10.addBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator12 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target13 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator12);
        java.util.Set<java.lang.String> strSet14 = python2Target13.badWords;
        java.lang.String str16 = python2Target13.getAltLabelContextStructName("\\\"\\\"");
        boolean boolean17 = python2Target13.wantsBaseVisitor();
        java.util.Set<java.lang.String> strSet18 = python2Target13.getBadWords();
        org.stringtemplate.v4.STGroup sTGroup19 = python2Target13.loadTemplates();
        python2Target10.templates = sTGroup19;
        org.antlr.v4.tool.Grammar grammar21 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator22 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target23 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator22);
        java.util.Set<java.lang.String> strSet24 = python2Target23.badWords;
        boolean boolean25 = python2Target23.wantsBaseVisitor();
        boolean boolean26 = python2Target23.wantsBaseVisitor();
        org.antlr.v4.codegen.CodeGenerator codeGenerator27 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target28 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator27);
        boolean boolean29 = python2Target28.wantsBaseVisitor();
        java.util.Set<java.lang.String> strSet30 = python2Target28.badWords;
        python2Target23.badWords = strSet30;
        org.antlr.v4.tool.Grammar grammar32 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator33 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target34 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator33);
        java.lang.String str36 = python2Target34.getImplicitSetLabel("");
        org.antlr.v4.codegen.CodeGenerator codeGenerator37 = null;
        java.lang.String str40 = python2Target34.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator37, "", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator41 = null;
        java.lang.String str44 = python2Target34.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator41, "\"\\\"\\\"\"", false);
        int int45 = python2Target34.getSerializedATNSegmentLimit();
        org.antlr.v4.tool.Grammar grammar46 = null;
        int[] intArray47 = new int[] {};
        java.lang.String[] strArray48 = python2Target34.getTokenTypesAsTargetLabels(grammar46, intArray47);
        java.lang.String[] strArray49 = python2Target23.getTokenTypesAsTargetLabels(grammar32, intArray47);
        java.lang.String[] strArray50 = python2Target10.getTokenTypesAsTargetLabels(grammar21, intArray47);
        java.lang.String[] strArray51 = python2Target1.getTokenTypesAsTargetLabels(grammar9, intArray47);
        org.antlr.v4.tool.ast.GrammarAST grammarAST52 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean53 = python2Target1.visibleGrammarSymbolCausesIssueInGeneratedCode(grammarAST52);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "\\64" + "'", str5, "\\64");
        org.junit.Assert.assertNull(codeGenerator6);
        org.junit.Assert.assertNull(codeGenerator7);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(strSet14);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "\\\"\\\"Context" + "'", str16, "\\\"\\\"Context");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(strSet18);
        org.junit.Assert.assertNotNull(sTGroup19);
        org.junit.Assert.assertNotNull(strSet24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(strSet30);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "_tset" + "'", str36, "_tset");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "\"\"" + "'", str40, "\"\"");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "\\\"\\\"" + "'", str44, "\\\"\\\"");
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 2147483647 + "'", int45 == 2147483647);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[]");
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertNotNull(strArray49);
        org.junit.Assert.assertNotNull(strArray50);
        org.junit.Assert.assertNotNull(strArray51);
    }

    @Test
    public void test1595() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1595");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str5 = python2Target1.getTargetStringLiteralFromString("hi!", false);
        java.lang.String str7 = python2Target1.getImplicitRuleLabel("@");
        java.lang.String str9 = python2Target1.getAltLabelContextStructName("a");
        java.lang.String[] strArray10 = python2Target1.targetCharValueEscape;
        org.stringtemplate.v4.STGroup sTGroup11 = python2Target1.loadTemplates();
        org.stringtemplate.v4.STGroup sTGroup12 = python2Target1.getTemplates();
        org.antlr.v4.tool.Rule rule13 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str14 = python2Target1.getRuleFunctionContextStructName(rule13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "_@" + "'", str7, "_@");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "AContext" + "'", str9, "AContext");
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(sTGroup11);
        org.junit.Assert.assertNotNull(sTGroup12);
    }

    @Test
    public void test1596() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1596");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str5 = python2Target1.getTargetStringLiteralFromString("hi!", false);
        java.lang.String str7 = python2Target1.getImplicitRuleLabel("@");
        python2Target1.addBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator9 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target10 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator9);
        java.lang.String str12 = python2Target10.getImplicitSetLabel("");
        org.antlr.v4.codegen.CodeGenerator codeGenerator13 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target14 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator13);
        java.util.Set<java.lang.String> strSet15 = python2Target14.badWords;
        java.lang.String str17 = python2Target14.encodeIntAsCharEscape(64);
        java.lang.String str18 = python2Target14.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator19 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target20 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator19);
        java.lang.String[] strArray21 = python2Target20.targetCharValueEscape;
        java.lang.String str22 = python2Target20.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup23 = python2Target20.getTemplates();
        python2Target14.templates = sTGroup23;
        python2Target10.templates = sTGroup23;
        java.lang.String str27 = python2Target10.getAltLabelContextStructName("Python2");
        org.stringtemplate.v4.STGroup sTGroup28 = python2Target10.loadTemplates();
        python2Target1.templates = sTGroup28;
        java.lang.String str32 = python2Target1.getTargetStringLiteralFromString("\"\\\"__\\\\\\\"\\\\\\\"Context\\\"\"", false);
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "_@" + "'", str7, "_@");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "_tset" + "'", str12, "_tset");
        org.junit.Assert.assertNotNull(strSet15);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "@" + "'", str17, "@");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Python2" + "'", str18, "Python2");
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "Python2" + "'", str22, "Python2");
        org.junit.Assert.assertNotNull(sTGroup23);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "Python2Context" + "'", str27, "Python2Context");
        org.junit.Assert.assertNotNull(sTGroup28);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "\\\"\\\\\\\"__\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"Context\\\\\\\"\\\"" + "'", str32, "\\\"\\\\\\\"__\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"Context\\\\\\\"\\\"");
    }

    @Test
    public void test1597() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1597");
        org.antlr.v4.codegen.target.Python2Target.PythonStringRenderer pythonStringRenderer0 = new org.antlr.v4.codegen.target.Python2Target.PythonStringRenderer();
        java.lang.Object obj1 = null;
        java.util.Locale locale3 = null;
        java.lang.String str4 = pythonStringRenderer0.toString(obj1, "_@", locale3);
        java.util.Locale locale7 = null;
        java.lang.String str8 = pythonStringRenderer0.toString((java.lang.Object) "\\n", "\"\\\"\\\"\"", locale7);
        org.antlr.v4.codegen.target.Python2Target python2Target9 = new org.antlr.v4.codegen.target.Python2Target();
        java.lang.String str12 = python2Target9.getTargetStringLiteralFromString("hi!", true);
        java.lang.String str13 = python2Target9.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator14 = python2Target9.gen;
        boolean boolean15 = python2Target9.supportsOverloadedMethods();
        python2Target9.language = "\\\"\\\\\\\"\\\\\\\"\\\\\\\"\\\"";
        java.util.Locale locale19 = null;
        java.lang.String str20 = pythonStringRenderer0.toString((java.lang.Object) "\\\"\\\\\\\"\\\\\\\"\\\\\\\"\\\"", "_\"\\\\\\\"\\\\\\\"Context\"", locale19);
        java.util.Locale locale23 = null;
        java.lang.String str24 = pythonStringRenderer0.toString((java.lang.Object) "\"_hi!\"", "AContextContext", locale23);
        org.antlr.v4.codegen.CodeGenerator codeGenerator25 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target26 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator25);
        java.util.Set<java.lang.String> strSet27 = python2Target26.badWords;
        java.lang.String str30 = python2Target26.getTargetStringLiteralFromString("hi!", false);
        boolean boolean31 = python2Target26.supportsOverloadedMethods();
        java.lang.Class<?> wildcardClass32 = python2Target26.getClass();
        java.util.Locale locale34 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str35 = pythonStringRenderer0.toString((java.lang.Object) python2Target26, "", locale34);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: null");
        } catch (java.lang.ClassCastException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "_@" + "'", str4, "_@");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\"\\\"\\\"\"" + "'", str8, "\"\\\"\\\"\"");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "\"hi!\"" + "'", str12, "\"hi!\"");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "4.5.2.1" + "'", str13, "4.5.2.1");
        org.junit.Assert.assertNull(codeGenerator14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "_\"\\\\\\\"\\\\\\\"Context\"" + "'", str20, "_\"\\\\\\\"\\\\\\\"Context\"");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "AContextContext" + "'", str24, "AContextContext");
        org.junit.Assert.assertNotNull(strSet27);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "hi!" + "'", str30, "hi!");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(wildcardClass32);
    }

    @Test
    public void test1598() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1598");
        org.antlr.v4.codegen.target.Python2Target python2Target0 = new org.antlr.v4.codegen.target.Python2Target();
        python2Target0.addBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator2 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target3 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator2);
        java.util.Set<java.lang.String> strSet4 = python2Target3.badWords;
        java.lang.String str6 = python2Target3.getAltLabelContextStructName("\\\"\\\"");
        boolean boolean7 = python2Target3.wantsBaseVisitor();
        java.util.Set<java.lang.String> strSet8 = python2Target3.getBadWords();
        org.stringtemplate.v4.STGroup sTGroup9 = python2Target3.loadTemplates();
        python2Target0.templates = sTGroup9;
        java.lang.String[] strArray11 = python2Target0.targetCharValueEscape;
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\\\"\\\"Context" + "'", str6, "\\\"\\\"Context");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertNotNull(sTGroup9);
        org.junit.Assert.assertNotNull(strArray11);
    }

    @Test
    public void test1599() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1599");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str4 = python2Target1.encodeIntAsCharEscape(64);
        java.lang.String str7 = python2Target1.getTargetStringLiteralFromString("\"\"", true);
        java.lang.String str9 = python2Target1.getImplicitRuleLabel("hi!");
        java.lang.String str12 = python2Target1.getTargetStringLiteralFromString("_hi!", true);
        org.stringtemplate.v4.STGroup sTGroup13 = python2Target1.loadTemplates();
        java.lang.String str14 = python2Target1.getVersion();
        java.lang.String str16 = python2Target1.getImplicitSetLabel("AContext");
        org.antlr.v4.codegen.CodeGenerator codeGenerator17 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target18 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator17);
        java.lang.String[] strArray19 = python2Target18.targetCharValueEscape;
        boolean boolean20 = python2Target18.supportsOverloadedMethods();
        java.lang.String str21 = python2Target18.getLanguage();
        java.util.Set<java.lang.String> strSet22 = python2Target18.badWords;
        python2Target1.badWords = strSet22;
        java.lang.String str25 = python2Target1.getImplicitRuleLabel("_tset_\"Python2Context\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator26 = python2Target1.getCodeGenerator();
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "@" + "'", str4, "@");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "\"\\\"\\\"\"" + "'", str7, "\"\\\"\\\"\"");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "_hi!" + "'", str9, "_hi!");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "\"_hi!\"" + "'", str12, "\"_hi!\"");
        org.junit.Assert.assertNotNull(sTGroup13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "4.5.2.1" + "'", str14, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "_tsetAContext" + "'", str16, "_tsetAContext");
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Python2" + "'", str21, "Python2");
        org.junit.Assert.assertNotNull(strSet22);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "__tset_\"Python2Context\"" + "'", str25, "__tset_\"Python2Context\"");
        org.junit.Assert.assertNull(codeGenerator26);
    }

    @Test
    public void test1600() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1600");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String str3 = python2Target1.getImplicitSetLabel("");
        org.antlr.v4.codegen.CodeGenerator codeGenerator4 = python2Target1.gen;
        int int5 = python2Target1.getInlineTestSetWordSize();
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target7 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator6);
        boolean boolean8 = python2Target7.wantsBaseVisitor();
        java.util.Set<java.lang.String> strSet9 = python2Target7.badWords;
        org.stringtemplate.v4.STGroup sTGroup10 = python2Target7.getTemplates();
        python2Target1.templates = sTGroup10;
        python2Target1.language = "\\64";
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "_tset" + "'", str3, "_tset");
        org.junit.Assert.assertNull(codeGenerator4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 64 + "'", int5 == 64);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(strSet9);
        org.junit.Assert.assertNotNull(sTGroup10);
    }

    @Test
    public void test1601() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1601");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str5 = python2Target1.getTargetStringLiteralFromString("hi!", false);
        java.lang.String str7 = python2Target1.getImplicitRuleLabel("@");
        python2Target1.addBadWords();
        boolean boolean9 = python2Target1.wantsBaseListener();
        java.lang.String str11 = python2Target1.getImplicitSetLabel("_tset");
        org.antlr.v4.codegen.CodeGenerator codeGenerator12 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target13 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator12);
        java.lang.String[] strArray14 = python2Target13.targetCharValueEscape;
        java.lang.String str15 = python2Target13.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup16 = python2Target13.getTemplates();
        python2Target1.templates = sTGroup16;
        boolean boolean18 = python2Target1.wantsBaseListener();
        java.lang.String[] strArray19 = org.antlr.v4.codegen.target.Python2Target.python2Keywords;
        org.antlr.v4.codegen.target.Python2Target.python2Keywords = strArray19;
        org.antlr.v4.codegen.target.Python2Target.python2Keywords = strArray19;
        org.antlr.v4.codegen.target.Python2Target.python2Keywords = strArray19;
        org.antlr.v4.codegen.target.Python2Target.python2Keywords = strArray19;
        python2Target1.targetCharValueEscape = strArray19;
        org.antlr.v4.tool.ast.GrammarAST grammarAST25 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean26 = python2Target1.visibleGrammarSymbolCausesIssueInGeneratedCode(grammarAST25);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "_@" + "'", str7, "_@");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "_tset_tset" + "'", str11, "_tset_tset");
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Python2" + "'", str15, "Python2");
        org.junit.Assert.assertNotNull(sTGroup16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(strArray19);
    }

    @Test
    public void test1602() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1602");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str4 = python2Target1.encodeIntAsCharEscape(64);
        java.lang.String str5 = python2Target1.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target7 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator6);
        java.lang.String[] strArray8 = python2Target7.targetCharValueEscape;
        java.lang.String str9 = python2Target7.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup10 = python2Target7.getTemplates();
        python2Target1.templates = sTGroup10;
        java.util.Set<java.lang.String> strSet12 = python2Target1.getBadWords();
        java.lang.String str15 = python2Target1.getTargetStringLiteralFromString("\"hi!\"", true);
        org.stringtemplate.v4.STGroup sTGroup16 = python2Target1.templates;
        int int17 = python2Target1.getSerializedATNSegmentLimit();
        org.antlr.v4.codegen.CodeGenerator codeGenerator18 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target19 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator18);
        java.lang.String[] strArray20 = python2Target19.targetCharValueEscape;
        java.lang.String str22 = python2Target19.getImplicitSetLabel("\\64");
        java.lang.String[] strArray23 = python2Target19.targetCharValueEscape;
        org.antlr.v4.codegen.target.Python2Target.python2Keywords = strArray23;
        python2Target1.targetCharValueEscape = strArray23;
        java.lang.Class<?> wildcardClass26 = strArray23.getClass();
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "@" + "'", str4, "@");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Python2" + "'", str5, "Python2");
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Python2" + "'", str9, "Python2");
        org.junit.Assert.assertNotNull(sTGroup10);
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "\"\\\"hi!\\\"\"" + "'", str15, "\"\\\"hi!\\\"\"");
        org.junit.Assert.assertNotNull(sTGroup16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 2147483647 + "'", int17 == 2147483647);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "_tset\\64" + "'", str22, "_tset\\64");
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertNotNull(wildcardClass26);
    }

    @Test
    public void test1603() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1603");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str4 = python2Target1.encodeIntAsCharEscape(64);
        java.lang.String str7 = python2Target1.getTargetStringLiteralFromString("\"\"", true);
        java.lang.String[] strArray8 = python2Target1.targetCharValueEscape;
        java.lang.String str10 = python2Target1.getAltLabelContextStructName("\\\"\\\"Context");
        org.antlr.v4.codegen.CodeGenerator codeGenerator11 = python2Target1.gen;
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "@" + "'", str4, "@");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "\"\\\"\\\"\"" + "'", str7, "\"\\\"\\\"\"");
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\\\"\\\"ContextContext" + "'", str10, "\\\"\\\"ContextContext");
        org.junit.Assert.assertNull(codeGenerator11);
    }

    @Test
    public void test1604() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1604");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str4 = python2Target1.encodeIntAsCharEscape(64);
        java.lang.String str7 = python2Target1.getTargetStringLiteralFromString("\"\"", true);
        java.lang.String str9 = python2Target1.getImplicitRuleLabel("hi!");
        java.lang.String str12 = python2Target1.getTargetStringLiteralFromString("_hi!", true);
        org.stringtemplate.v4.STGroup sTGroup13 = python2Target1.templates;
        java.lang.String str14 = python2Target1.language;
        org.stringtemplate.v4.STGroup sTGroup15 = python2Target1.getTemplates();
        org.antlr.v4.tool.Grammar grammar16 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target17 = new org.antlr.v4.codegen.target.Python2Target();
        python2Target17.addBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator19 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target20 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator19);
        java.util.Set<java.lang.String> strSet21 = python2Target20.badWords;
        java.lang.String str23 = python2Target20.getAltLabelContextStructName("\\\"\\\"");
        boolean boolean24 = python2Target20.wantsBaseVisitor();
        java.util.Set<java.lang.String> strSet25 = python2Target20.getBadWords();
        org.stringtemplate.v4.STGroup sTGroup26 = python2Target20.loadTemplates();
        python2Target17.templates = sTGroup26;
        org.antlr.v4.tool.Grammar grammar28 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator29 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target30 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator29);
        java.util.Set<java.lang.String> strSet31 = python2Target30.badWords;
        boolean boolean32 = python2Target30.wantsBaseVisitor();
        boolean boolean33 = python2Target30.wantsBaseVisitor();
        org.antlr.v4.codegen.CodeGenerator codeGenerator34 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target35 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator34);
        boolean boolean36 = python2Target35.wantsBaseVisitor();
        java.util.Set<java.lang.String> strSet37 = python2Target35.badWords;
        python2Target30.badWords = strSet37;
        org.antlr.v4.tool.Grammar grammar39 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator40 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target41 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator40);
        java.lang.String str43 = python2Target41.getImplicitSetLabel("");
        org.antlr.v4.codegen.CodeGenerator codeGenerator44 = null;
        java.lang.String str47 = python2Target41.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator44, "", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator48 = null;
        java.lang.String str51 = python2Target41.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator48, "\"\\\"\\\"\"", false);
        int int52 = python2Target41.getSerializedATNSegmentLimit();
        org.antlr.v4.tool.Grammar grammar53 = null;
        int[] intArray54 = new int[] {};
        java.lang.String[] strArray55 = python2Target41.getTokenTypesAsTargetLabels(grammar53, intArray54);
        java.lang.String[] strArray56 = python2Target30.getTokenTypesAsTargetLabels(grammar39, intArray54);
        java.lang.String[] strArray57 = python2Target17.getTokenTypesAsTargetLabels(grammar28, intArray54);
        java.lang.String[] strArray58 = python2Target1.getTokenTypesAsTargetLabels(grammar16, intArray54);
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "@" + "'", str4, "@");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "\"\\\"\\\"\"" + "'", str7, "\"\\\"\\\"\"");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "_hi!" + "'", str9, "_hi!");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "\"_hi!\"" + "'", str12, "\"_hi!\"");
        org.junit.Assert.assertNotNull(sTGroup13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Python2" + "'", str14, "Python2");
        org.junit.Assert.assertNotNull(sTGroup15);
        org.junit.Assert.assertNotNull(strSet21);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "\\\"\\\"Context" + "'", str23, "\\\"\\\"Context");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(strSet25);
        org.junit.Assert.assertNotNull(sTGroup26);
        org.junit.Assert.assertNotNull(strSet31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(strSet37);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "_tset" + "'", str43, "_tset");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "\"\"" + "'", str47, "\"\"");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "\\\"\\\"" + "'", str51, "\\\"\\\"");
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 2147483647 + "'", int52 == 2147483647);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[]");
        org.junit.Assert.assertNotNull(strArray55);
        org.junit.Assert.assertNotNull(strArray56);
        org.junit.Assert.assertNotNull(strArray57);
        org.junit.Assert.assertNotNull(strArray58);
    }

    @Test
    public void test1605() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1605");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str4 = python2Target1.getAltLabelContextStructName("\\\"\\\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator5 = null;
        python2Target1.gen = codeGenerator5;
        org.antlr.v4.tool.Grammar grammar7 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target9 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator8);
        org.stringtemplate.v4.STGroup sTGroup10 = python2Target9.templates;
        int int11 = python2Target9.getInlineTestSetWordSize();
        boolean boolean12 = python2Target9.templatesExist();
        org.stringtemplate.v4.STGroup sTGroup13 = python2Target9.getTemplates();
        java.lang.String str15 = python2Target9.getListLabel("\"\\\"\\\\\\\"\\\\\\\"\\\"Context\"");
        org.antlr.v4.tool.Grammar grammar16 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator17 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target18 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator17);
        java.util.Set<java.lang.String> strSet19 = python2Target18.badWords;
        java.lang.String str21 = python2Target18.encodeIntAsCharEscape(64);
        java.lang.String str22 = python2Target18.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator23 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target24 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator23);
        java.lang.String[] strArray25 = python2Target24.targetCharValueEscape;
        java.lang.String str26 = python2Target24.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup27 = python2Target24.getTemplates();
        python2Target18.templates = sTGroup27;
        java.util.Set<java.lang.String> strSet29 = python2Target18.getBadWords();
        java.lang.String str32 = python2Target18.getTargetStringLiteralFromString("\"hi!\"", true);
        int int33 = python2Target18.getInlineTestSetWordSize();
        java.lang.String str35 = python2Target18.getTargetStringLiteralFromString("_");
        java.lang.String str37 = python2Target18.getTargetStringLiteralFromString("_tset_tset\"hi!\"");
        org.antlr.v4.tool.Grammar grammar38 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator39 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target40 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator39);
        java.lang.String str42 = python2Target40.getImplicitSetLabel("");
        org.antlr.v4.codegen.CodeGenerator codeGenerator43 = null;
        java.lang.String str46 = python2Target40.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator43, "", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator47 = null;
        java.lang.String str50 = python2Target40.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator47, "\"\\\"\\\"\"", false);
        int int51 = python2Target40.getSerializedATNSegmentLimit();
        org.antlr.v4.tool.Grammar grammar52 = null;
        int[] intArray53 = new int[] {};
        java.lang.String[] strArray54 = python2Target40.getTokenTypesAsTargetLabels(grammar52, intArray53);
        java.lang.String[] strArray55 = python2Target18.getTokenTypesAsTargetLabels(grammar38, intArray53);
        java.lang.String[] strArray56 = python2Target9.getTokenTypesAsTargetLabels(grammar16, intArray53);
        java.lang.String[] strArray57 = python2Target1.getTokenTypesAsTargetLabels(grammar7, intArray53);
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "\\\"\\\"Context" + "'", str4, "\\\"\\\"Context");
        org.junit.Assert.assertNull(sTGroup10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 64 + "'", int11 == 64);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(sTGroup13);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "\"\\\"\\\\\\\"\\\\\\\"\\\"Context\"" + "'", str15, "\"\\\"\\\\\\\"\\\\\\\"\\\"Context\"");
        org.junit.Assert.assertNotNull(strSet19);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "@" + "'", str21, "@");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "Python2" + "'", str22, "Python2");
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "Python2" + "'", str26, "Python2");
        org.junit.Assert.assertNotNull(sTGroup27);
        org.junit.Assert.assertNotNull(strSet29);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "\"\\\"hi!\\\"\"" + "'", str32, "\"\\\"hi!\\\"\"");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 64 + "'", int33 == 64);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "\"_\"" + "'", str35, "\"_\"");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "\"_tset_tset\\\"hi!\\\"\"" + "'", str37, "\"_tset_tset\\\"hi!\\\"\"");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "_tset" + "'", str42, "_tset");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "\"\"" + "'", str46, "\"\"");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "\\\"\\\"" + "'", str50, "\\\"\\\"");
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 2147483647 + "'", int51 == 2147483647);
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[]");
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertNotNull(strArray55);
        org.junit.Assert.assertNotNull(strArray56);
        org.junit.Assert.assertNotNull(strArray57);
    }

    @Test
    public void test1606() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1606");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str5 = python2Target1.getTargetStringLiteralFromString("hi!", false);
        java.lang.String str7 = python2Target1.getImplicitRuleLabel("@");
        python2Target1.addBadWords();
        int int9 = python2Target1.getInlineTestSetWordSize();
        java.lang.String[] strArray10 = python2Target1.targetCharValueEscape;
        java.lang.String str12 = python2Target1.getListLabel("\"_@\"");
        java.lang.String str15 = python2Target1.getTargetStringLiteralFromString("\"hi!\"", false);
        java.lang.String str17 = python2Target1.encodeIntAsCharEscape(1);
        org.stringtemplate.v4.STGroup sTGroup18 = python2Target1.loadTemplates();
        org.antlr.v4.codegen.CodeGenerator codeGenerator19 = null;
        java.lang.String str22 = python2Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator19, "_\"\\\"Python2Context\\\"\"", true);
        org.stringtemplate.v4.STGroup sTGroup23 = python2Target1.getTemplates();
        org.antlr.v4.codegen.CodeGenerator codeGenerator24 = null;
        python2Target1.gen = codeGenerator24;
        boolean boolean26 = python2Target1.templatesExist();
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "_@" + "'", str7, "_@");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 64 + "'", int9 == 64);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "\"_@\"" + "'", str12, "\"_@\"");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "\\\"hi!\\\"" + "'", str15, "\\\"hi!\\\"");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "\\1" + "'", str17, "\\1");
        org.junit.Assert.assertNotNull(sTGroup18);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "\"\\\"\\\"Python2Context\\\"\"" + "'", str22, "\"\\\"\\\"Python2Context\\\"\"");
        org.junit.Assert.assertNotNull(sTGroup23);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
    }

    @Test
    public void test1607() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1607");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String str3 = python2Target1.getImplicitSetLabel("");
        org.antlr.v4.codegen.CodeGenerator codeGenerator4 = null;
        java.lang.String str7 = python2Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator4, "", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = null;
        java.lang.String str11 = python2Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator8, "\"\\\"\\\"\"", false);
        python2Target1.language = "\\\"\\\"Context";
        java.lang.String str15 = python2Target1.getAltLabelContextStructName("\"tset\\n\"");
        java.lang.String str17 = python2Target1.getImplicitSetLabel("_tset_tset\"\\\"\\\\\\\"\\\\\\\"\\\"Context\"");
        java.lang.Class<?> wildcardClass18 = python2Target1.getClass();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "_tset" + "'", str3, "_tset");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "\"\"" + "'", str7, "\"\"");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "\\\"\\\"" + "'", str11, "\\\"\\\"");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "\"tset\\n\"Context" + "'", str15, "\"tset\\n\"Context");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "_tset_tset_tset\"\\\"\\\\\\\"\\\\\\\"\\\"Context\"" + "'", str17, "_tset_tset_tset\"\\\"\\\\\\\"\\\\\\\"\\\"Context\"");
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test1608() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1608");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String[] strArray2 = python2Target1.targetCharValueEscape;
        java.lang.String str3 = python2Target1.getLanguage();
        org.antlr.v4.tool.Grammar grammar4 = null;
        org.stringtemplate.v4.ST sT5 = null;
        python2Target1.genRecognizerHeaderFile(grammar4, sT5, "_tseti");
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = python2Target1.getCodeGenerator();
        python2Target1.addBadWords();
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Python2" + "'", str3, "Python2");
        org.junit.Assert.assertNull(codeGenerator8);
    }

    @Test
    public void test1609() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1609");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String[] strArray2 = python2Target1.targetCharValueEscape;
        java.lang.String str3 = python2Target1.getLanguage();
        int int4 = python2Target1.getInlineTestSetWordSize();
        org.antlr.v4.codegen.CodeGenerator codeGenerator5 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target6 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator5);
        java.util.Set<java.lang.String> strSet7 = python2Target6.badWords;
        java.lang.String str9 = python2Target6.encodeIntAsCharEscape(64);
        java.lang.String str10 = python2Target6.getLanguage();
        java.lang.String str12 = python2Target6.getListLabel("");
        java.lang.String str13 = python2Target6.getVersion();
        java.util.Set<java.lang.String> strSet14 = python2Target6.getBadWords();
        python2Target1.badWords = strSet14;
        org.antlr.v4.codegen.CodeGenerator codeGenerator16 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target17 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator16);
        java.util.Set<java.lang.String> strSet18 = python2Target17.badWords;
        java.lang.String str21 = python2Target17.getTargetStringLiteralFromString("hi!", false);
        java.lang.String str23 = python2Target17.getImplicitRuleLabel("@");
        python2Target17.addBadWords();
        int int25 = python2Target17.getInlineTestSetWordSize();
        java.lang.String[] strArray26 = python2Target17.targetCharValueEscape;
        java.lang.String str28 = python2Target17.getListLabel("\"_@\"");
        java.lang.String str31 = python2Target17.getTargetStringLiteralFromString("\"hi!\"", false);
        java.lang.String str32 = python2Target17.getVersion();
        org.stringtemplate.v4.STGroup sTGroup33 = python2Target17.getTemplates();
        python2Target1.templates = sTGroup33;
        org.antlr.v4.codegen.CodeGenerator codeGenerator35 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target36 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator35);
        java.util.Set<java.lang.String> strSet37 = python2Target36.badWords;
        java.lang.String str39 = python2Target36.encodeIntAsCharEscape(64);
        java.lang.String str40 = python2Target36.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator41 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target42 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator41);
        java.lang.String[] strArray43 = python2Target42.targetCharValueEscape;
        java.lang.String str44 = python2Target42.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup45 = python2Target42.getTemplates();
        python2Target36.templates = sTGroup45;
        java.util.Set<java.lang.String> strSet47 = python2Target36.getBadWords();
        java.lang.String str50 = python2Target36.getTargetStringLiteralFromString("\"hi!\"", true);
        org.stringtemplate.v4.STGroup sTGroup51 = python2Target36.templates;
        org.antlr.v4.codegen.CodeGenerator codeGenerator52 = python2Target36.getCodeGenerator();
        org.stringtemplate.v4.STGroup sTGroup53 = python2Target36.loadTemplates();
        python2Target1.templates = sTGroup53;
        java.lang.String str55 = python2Target1.language;
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Python2" + "'", str3, "Python2");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 64 + "'", int4 == 64);
        org.junit.Assert.assertNotNull(strSet7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "@" + "'", str9, "@");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Python2" + "'", str10, "Python2");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "4.5.2.1" + "'", str13, "4.5.2.1");
        org.junit.Assert.assertNotNull(strSet14);
        org.junit.Assert.assertNotNull(strSet18);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "hi!" + "'", str21, "hi!");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "_@" + "'", str23, "_@");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 64 + "'", int25 == 64);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "\"_@\"" + "'", str28, "\"_@\"");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "\\\"hi!\\\"" + "'", str31, "\\\"hi!\\\"");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "4.5.2.1" + "'", str32, "4.5.2.1");
        org.junit.Assert.assertNotNull(sTGroup33);
        org.junit.Assert.assertNotNull(strSet37);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "@" + "'", str39, "@");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "Python2" + "'", str40, "Python2");
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "Python2" + "'", str44, "Python2");
        org.junit.Assert.assertNotNull(sTGroup45);
        org.junit.Assert.assertNotNull(strSet47);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "\"\\\"hi!\\\"\"" + "'", str50, "\"\\\"hi!\\\"\"");
        org.junit.Assert.assertNotNull(sTGroup51);
        org.junit.Assert.assertNull(codeGenerator52);
        org.junit.Assert.assertNotNull(sTGroup53);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "Python2" + "'", str55, "Python2");
    }

    @Test
    public void test1610() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1610");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str4 = python2Target1.encodeIntAsCharEscape(64);
        java.lang.String str5 = python2Target1.getLanguage();
        java.lang.String str7 = python2Target1.getListLabel("");
        java.lang.String str8 = python2Target1.getVersion();
        java.util.Set<java.lang.String> strSet9 = python2Target1.getBadWords();
        java.lang.String str10 = python2Target1.getLanguage();
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "@" + "'", str4, "@");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Python2" + "'", str5, "Python2");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "4.5.2.1" + "'", str8, "4.5.2.1");
        org.junit.Assert.assertNotNull(strSet9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Python2" + "'", str10, "Python2");
    }

    @Test
    public void test1611() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1611");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        org.stringtemplate.v4.STGroup sTGroup2 = python2Target1.templates;
        int int3 = python2Target1.getInlineTestSetWordSize();
        boolean boolean4 = python2Target1.templatesExist();
        org.stringtemplate.v4.STGroup sTGroup5 = python2Target1.getTemplates();
        boolean boolean6 = python2Target1.supportsOverloadedMethods();
        java.lang.String str7 = python2Target1.language;
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target9 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator8);
        java.util.Set<java.lang.String> strSet10 = python2Target9.badWords;
        java.lang.String str13 = python2Target9.getTargetStringLiteralFromString("hi!", false);
        int int14 = python2Target9.getInlineTestSetWordSize();
        boolean boolean15 = python2Target9.wantsBaseListener();
        python2Target9.language = "a";
        java.lang.String[] strArray18 = python2Target9.targetCharValueEscape;
        org.antlr.v4.codegen.target.Python2Target.python2Keywords = strArray18;
        python2Target1.targetCharValueEscape = strArray18;
        java.lang.String str21 = python2Target1.language;
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 64 + "'", int3 == 64);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(sTGroup5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Python2" + "'", str7, "Python2");
        org.junit.Assert.assertNotNull(strSet10);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 64 + "'", int14 == 64);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Python2" + "'", str21, "Python2");
    }

    @Test
    public void test1612() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1612");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str5 = python2Target1.getTargetStringLiteralFromString("hi!", false);
        java.lang.String str7 = python2Target1.getImplicitRuleLabel("@");
        python2Target1.addBadWords();
        boolean boolean9 = python2Target1.wantsBaseListener();
        int int10 = python2Target1.getInlineTestSetWordSize();
        java.lang.String str11 = python2Target1.getVersion();
        java.lang.String str13 = python2Target1.getTargetStringLiteralFromString("");
        java.util.Set<java.lang.String> strSet14 = python2Target1.getBadWords();
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "_@" + "'", str7, "_@");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 64 + "'", int10 == 64);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "4.5.2.1" + "'", str11, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "\"\"" + "'", str13, "\"\"");
        org.junit.Assert.assertNotNull(strSet14);
    }

    @Test
    public void test1613() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1613");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String str3 = python2Target1.getImplicitSetLabel("");
        org.antlr.v4.codegen.CodeGenerator codeGenerator4 = null;
        java.lang.String str7 = python2Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator4, "", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = null;
        python2Target1.gen = codeGenerator8;
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target11 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator10);
        java.util.Set<java.lang.String> strSet12 = python2Target11.badWords;
        java.lang.String str14 = python2Target11.encodeIntAsCharEscape(64);
        java.lang.String str15 = python2Target11.getLanguage();
        java.lang.String[] strArray21 = new java.lang.String[] { "\"hi!\"", "Python2", "Python2", "@", "_@" };
        java.util.LinkedHashSet<java.lang.String> strSet22 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet22, strArray21);
        python2Target11.badWords = strSet22;
        python2Target1.badWords = strSet22;
        int int26 = python2Target1.getInlineTestSetWordSize();
        java.lang.String str28 = python2Target1.getAltLabelContextStructName("\"\\\"\\\"\"");
        org.antlr.v4.tool.ast.GrammarAST grammarAST29 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean30 = python2Target1.grammarSymbolCausesIssueInGeneratedCode(grammarAST29);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "_tset" + "'", str3, "_tset");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "\"\"" + "'", str7, "\"\"");
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "@" + "'", str14, "@");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Python2" + "'", str15, "Python2");
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 64 + "'", int26 == 64);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "\"\\\"\\\"\"Context" + "'", str28, "\"\\\"\\\"\"Context");
    }

    @Test
    public void test1614() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1614");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str5 = python2Target1.getTargetStringLiteralFromString("hi!", false);
        java.lang.String str7 = python2Target1.getImplicitRuleLabel("@");
        python2Target1.addBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator9 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target10 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator9);
        java.lang.String str12 = python2Target10.getImplicitSetLabel("");
        org.antlr.v4.codegen.CodeGenerator codeGenerator13 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target14 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator13);
        java.util.Set<java.lang.String> strSet15 = python2Target14.badWords;
        java.lang.String str17 = python2Target14.encodeIntAsCharEscape(64);
        java.lang.String str18 = python2Target14.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator19 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target20 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator19);
        java.lang.String[] strArray21 = python2Target20.targetCharValueEscape;
        java.lang.String str22 = python2Target20.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup23 = python2Target20.getTemplates();
        python2Target14.templates = sTGroup23;
        python2Target10.templates = sTGroup23;
        java.lang.String str27 = python2Target10.getAltLabelContextStructName("Python2");
        org.stringtemplate.v4.STGroup sTGroup28 = python2Target10.loadTemplates();
        python2Target1.templates = sTGroup28;
        java.util.Set<java.lang.String> strSet30 = python2Target1.badWords;
        java.lang.String str32 = python2Target1.getImplicitSetLabel("\"\\\"\\\\\\\"\\\\\\\"\\\\\\\"\\\"\"");
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "_@" + "'", str7, "_@");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "_tset" + "'", str12, "_tset");
        org.junit.Assert.assertNotNull(strSet15);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "@" + "'", str17, "@");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Python2" + "'", str18, "Python2");
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "Python2" + "'", str22, "Python2");
        org.junit.Assert.assertNotNull(sTGroup23);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "Python2Context" + "'", str27, "Python2Context");
        org.junit.Assert.assertNotNull(sTGroup28);
        org.junit.Assert.assertNotNull(strSet30);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "_tset\"\\\"\\\\\\\"\\\\\\\"\\\\\\\"\\\"\"" + "'", str32, "_tset\"\\\"\\\\\\\"\\\\\\\"\\\\\\\"\\\"\"");
    }

    @Test
    public void test1615() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1615");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str5 = python2Target1.getTargetStringLiteralFromString("hi!", false);
        java.lang.String str7 = python2Target1.getImplicitRuleLabel("@");
        python2Target1.addBadWords();
        boolean boolean9 = python2Target1.wantsBaseListener();
        java.lang.String str11 = python2Target1.getImplicitSetLabel("_tset");
        org.antlr.v4.codegen.CodeGenerator codeGenerator12 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target13 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator12);
        java.lang.String[] strArray14 = python2Target13.targetCharValueEscape;
        java.lang.String str15 = python2Target13.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup16 = python2Target13.getTemplates();
        python2Target1.templates = sTGroup16;
        boolean boolean18 = python2Target1.wantsBaseListener();
        java.lang.String[] strArray19 = org.antlr.v4.codegen.target.Python2Target.python2Keywords;
        org.antlr.v4.codegen.target.Python2Target.python2Keywords = strArray19;
        org.antlr.v4.codegen.target.Python2Target.python2Keywords = strArray19;
        org.antlr.v4.codegen.target.Python2Target.python2Keywords = strArray19;
        org.antlr.v4.codegen.target.Python2Target.python2Keywords = strArray19;
        python2Target1.targetCharValueEscape = strArray19;
        boolean boolean25 = python2Target1.templatesExist();
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "_@" + "'", str7, "_@");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "_tset_tset" + "'", str11, "_tset_tset");
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Python2" + "'", str15, "Python2");
        org.junit.Assert.assertNotNull(sTGroup16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
    }

    @Test
    public void test1616() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1616");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        python2Target1.language = "\"\\\"hi!\\\"\"";
        java.lang.String str5 = python2Target1.encodeIntAsCharEscape((int) '4');
        java.lang.String str6 = python2Target1.language;
        org.antlr.v4.tool.Grammar grammar7 = null;
        org.stringtemplate.v4.ST sT8 = null;
        python2Target1.genRecognizerHeaderFile(grammar7, sT8, "\"__tset\\\\64\"");
        java.lang.String[] strArray11 = python2Target1.targetCharValueEscape;
        org.antlr.v4.codegen.CodeGenerator codeGenerator12 = null;
        java.lang.String str15 = python2Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator12, "_tset6Context", false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "\\64" + "'", str5, "\\64");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\"\\\"hi!\\\"\"" + "'", str6, "\"\\\"hi!\\\"\"");
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "tset6Contex" + "'", str15, "tset6Contex");
    }

    @Test
    public void test1617() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1617");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str4 = python2Target1.encodeIntAsCharEscape(64);
        java.lang.String str5 = python2Target1.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target7 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator6);
        java.lang.String[] strArray8 = python2Target7.targetCharValueEscape;
        java.lang.String str9 = python2Target7.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup10 = python2Target7.getTemplates();
        python2Target1.templates = sTGroup10;
        java.lang.String str13 = python2Target1.getTargetStringLiteralFromString("_@");
        java.lang.String str15 = python2Target1.getListLabel("_tset6Context");
        java.lang.String str17 = python2Target1.getTargetStringLiteralFromString("");
        java.lang.String[] strArray18 = python2Target1.targetCharValueEscape;
        java.lang.String str20 = python2Target1.getImplicitRuleLabel("\"_hi!\"");
        org.antlr.v4.tool.ast.GrammarAST grammarAST21 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean22 = python2Target1.visibleGrammarSymbolCausesIssueInGeneratedCode(grammarAST21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "@" + "'", str4, "@");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Python2" + "'", str5, "Python2");
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Python2" + "'", str9, "Python2");
        org.junit.Assert.assertNotNull(sTGroup10);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "\"_@\"" + "'", str13, "\"_@\"");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "_tset6Context" + "'", str15, "_tset6Context");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "\"\"" + "'", str17, "\"\"");
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "_\"_hi!\"" + "'", str20, "_\"_hi!\"");
    }

    @Test
    public void test1618() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1618");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str4 = python2Target1.encodeIntAsCharEscape(64);
        java.lang.String str5 = python2Target1.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target7 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator6);
        java.lang.String[] strArray8 = python2Target7.targetCharValueEscape;
        java.lang.String str9 = python2Target7.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup10 = python2Target7.getTemplates();
        python2Target1.templates = sTGroup10;
        java.lang.String str13 = python2Target1.getTargetStringLiteralFromString("_@");
        java.lang.String str15 = python2Target1.getTargetStringLiteralFromString("\\\"\\\"Context");
        boolean boolean16 = python2Target1.templatesExist();
        java.util.Set<java.lang.String> strSet17 = python2Target1.getBadWords();
        org.antlr.v4.tool.Grammar grammar18 = null;
        org.stringtemplate.v4.ST sT19 = null;
        python2Target1.genRecognizerHeaderFile(grammar18, sT19, "\"tset\\n\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator22 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target23 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator22);
        java.util.Set<java.lang.String> strSet24 = python2Target23.badWords;
        java.lang.String str26 = python2Target23.encodeIntAsCharEscape(64);
        java.lang.String str27 = python2Target23.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator28 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target29 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator28);
        java.lang.String[] strArray30 = python2Target29.targetCharValueEscape;
        java.lang.String str31 = python2Target29.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup32 = python2Target29.getTemplates();
        python2Target23.templates = sTGroup32;
        java.util.Set<java.lang.String> strSet34 = python2Target23.getBadWords();
        boolean boolean35 = python2Target23.wantsBaseVisitor();
        org.antlr.v4.codegen.CodeGenerator codeGenerator36 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target37 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator36);
        java.lang.String str39 = python2Target37.getImplicitSetLabel("");
        org.antlr.v4.codegen.CodeGenerator codeGenerator40 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target41 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator40);
        java.util.Set<java.lang.String> strSet42 = python2Target41.badWords;
        java.lang.String str44 = python2Target41.encodeIntAsCharEscape(64);
        java.lang.String str45 = python2Target41.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator46 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target47 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator46);
        java.lang.String[] strArray48 = python2Target47.targetCharValueEscape;
        java.lang.String str49 = python2Target47.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup50 = python2Target47.getTemplates();
        python2Target41.templates = sTGroup50;
        python2Target37.templates = sTGroup50;
        org.stringtemplate.v4.STGroup sTGroup53 = python2Target37.templates;
        python2Target23.templates = sTGroup53;
        java.util.Set<java.lang.String> strSet55 = python2Target23.badWords;
        org.antlr.v4.codegen.target.Python2Target python2Target56 = new org.antlr.v4.codegen.target.Python2Target();
        java.lang.String str59 = python2Target56.getTargetStringLiteralFromString("hi!", true);
        java.lang.String str60 = python2Target56.getVersion();
        java.lang.String str61 = python2Target56.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator62 = null;
        python2Target56.gen = codeGenerator62;
        java.util.Set<java.lang.String> strSet64 = python2Target56.getBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator65 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target66 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator65);
        java.lang.String[] strArray67 = python2Target66.targetCharValueEscape;
        java.lang.String str68 = python2Target66.getLanguage();
        int int69 = python2Target66.getInlineTestSetWordSize();
        org.antlr.v4.codegen.CodeGenerator codeGenerator70 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target71 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator70);
        java.util.Set<java.lang.String> strSet72 = python2Target71.badWords;
        java.lang.String str74 = python2Target71.encodeIntAsCharEscape(64);
        java.lang.String str75 = python2Target71.getLanguage();
        java.lang.String str77 = python2Target71.getListLabel("");
        java.lang.String str78 = python2Target71.getVersion();
        java.util.Set<java.lang.String> strSet79 = python2Target71.getBadWords();
        python2Target66.badWords = strSet79;
        python2Target56.badWords = strSet79;
        python2Target23.badWords = strSet79;
        org.stringtemplate.v4.STGroup sTGroup83 = python2Target23.getTemplates();
        org.stringtemplate.v4.STGroup sTGroup84 = python2Target23.getTemplates();
        python2Target1.templates = sTGroup84;
        java.lang.String[] strArray86 = new java.lang.String[] {};
        python2Target1.targetCharValueEscape = strArray86;
        org.antlr.v4.tool.Grammar grammar88 = null;
        org.stringtemplate.v4.ST sT89 = null;
        // The following exception was thrown during execution in test generation
        try {
            python2Target1.genFile(grammar88, sT89, "__tset\"\\\"\\\\\\\"\\\\\\\"\\\"Context\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "@" + "'", str4, "@");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Python2" + "'", str5, "Python2");
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Python2" + "'", str9, "Python2");
        org.junit.Assert.assertNotNull(sTGroup10);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "\"_@\"" + "'", str13, "\"_@\"");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "\"\\\\\\\"\\\\\\\"Context\"" + "'", str15, "\"\\\\\\\"\\\\\\\"Context\"");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(strSet17);
        org.junit.Assert.assertNotNull(strSet24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "@" + "'", str26, "@");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "Python2" + "'", str27, "Python2");
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "Python2" + "'", str31, "Python2");
        org.junit.Assert.assertNotNull(sTGroup32);
        org.junit.Assert.assertNotNull(strSet34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "_tset" + "'", str39, "_tset");
        org.junit.Assert.assertNotNull(strSet42);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "@" + "'", str44, "@");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "Python2" + "'", str45, "Python2");
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "Python2" + "'", str49, "Python2");
        org.junit.Assert.assertNotNull(sTGroup50);
        org.junit.Assert.assertNotNull(sTGroup53);
        org.junit.Assert.assertNotNull(strSet55);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "\"hi!\"" + "'", str59, "\"hi!\"");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "4.5.2.1" + "'", str60, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "4.5.2.1" + "'", str61, "4.5.2.1");
        org.junit.Assert.assertNotNull(strSet64);
        org.junit.Assert.assertNotNull(strArray67);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "Python2" + "'", str68, "Python2");
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 64 + "'", int69 == 64);
        org.junit.Assert.assertNotNull(strSet72);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "@" + "'", str74, "@");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "Python2" + "'", str75, "Python2");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "" + "'", str77, "");
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "4.5.2.1" + "'", str78, "4.5.2.1");
        org.junit.Assert.assertNotNull(strSet79);
        org.junit.Assert.assertNotNull(sTGroup83);
        org.junit.Assert.assertNotNull(sTGroup84);
        org.junit.Assert.assertNotNull(strArray86);
    }

    @Test
    public void test1619() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1619");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str4 = python2Target1.encodeIntAsCharEscape(64);
        java.lang.String str5 = python2Target1.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target7 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator6);
        java.lang.String[] strArray8 = python2Target7.targetCharValueEscape;
        java.lang.String str9 = python2Target7.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup10 = python2Target7.getTemplates();
        python2Target1.templates = sTGroup10;
        java.lang.String str13 = python2Target1.getTargetStringLiteralFromString("_@");
        org.antlr.v4.codegen.CodeGenerator codeGenerator14 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target15 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator14);
        java.util.Set<java.lang.String> strSet16 = python2Target15.badWords;
        java.lang.String str18 = python2Target15.encodeIntAsCharEscape(64);
        org.antlr.v4.codegen.CodeGenerator codeGenerator19 = python2Target15.gen;
        org.antlr.v4.codegen.CodeGenerator codeGenerator20 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target21 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator20);
        java.util.Set<java.lang.String> strSet22 = python2Target21.badWords;
        boolean boolean23 = python2Target21.wantsBaseVisitor();
        boolean boolean24 = python2Target21.wantsBaseVisitor();
        org.antlr.v4.codegen.CodeGenerator codeGenerator25 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target26 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator25);
        boolean boolean27 = python2Target26.wantsBaseVisitor();
        java.util.Set<java.lang.String> strSet28 = python2Target26.badWords;
        python2Target21.badWords = strSet28;
        int int30 = python2Target21.getSerializedATNSegmentLimit();
        org.stringtemplate.v4.STGroup sTGroup31 = python2Target21.loadTemplates();
        python2Target15.templates = sTGroup31;
        python2Target1.templates = sTGroup31;
        java.util.Set<java.lang.String> strSet34 = python2Target1.badWords;
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "@" + "'", str4, "@");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Python2" + "'", str5, "Python2");
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Python2" + "'", str9, "Python2");
        org.junit.Assert.assertNotNull(sTGroup10);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "\"_@\"" + "'", str13, "\"_@\"");
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "@" + "'", str18, "@");
        org.junit.Assert.assertNull(codeGenerator19);
        org.junit.Assert.assertNotNull(strSet22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(strSet28);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 2147483647 + "'", int30 == 2147483647);
        org.junit.Assert.assertNotNull(sTGroup31);
        org.junit.Assert.assertNotNull(strSet34);
    }

    @Test
    public void test1620() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1620");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str5 = python2Target1.getTargetStringLiteralFromString("hi!", false);
        int int6 = python2Target1.getInlineTestSetWordSize();
        boolean boolean7 = python2Target1.wantsBaseListener();
        java.util.Set<java.lang.String> strSet8 = python2Target1.badWords;
        java.util.Set<java.lang.String> strSet9 = python2Target1.badWords;
        int int10 = python2Target1.getSerializedATNSegmentLimit();
        java.lang.String[] strArray11 = python2Target1.targetCharValueEscape;
        org.antlr.v4.codegen.CodeGenerator codeGenerator12 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target13 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator12);
        java.util.Set<java.lang.String> strSet14 = python2Target13.badWords;
        java.lang.String str17 = python2Target13.getTargetStringLiteralFromString("hi!", false);
        java.lang.String str19 = python2Target13.getImplicitRuleLabel("@");
        python2Target13.addBadWords();
        int int21 = python2Target13.getInlineTestSetWordSize();
        java.lang.String[] strArray22 = python2Target13.targetCharValueEscape;
        java.lang.String str24 = python2Target13.getListLabel("\"_@\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator25 = python2Target13.gen;
        org.antlr.v4.codegen.CodeGenerator codeGenerator26 = null;
        java.lang.String str29 = python2Target13.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator26, "_\\\"\\\"Context", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator30 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target31 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator30);
        java.util.Set<java.lang.String> strSet32 = python2Target31.badWords;
        java.lang.String str35 = python2Target31.getTargetStringLiteralFromString("hi!", false);
        java.lang.String str37 = python2Target31.getImplicitRuleLabel("@");
        java.lang.String str39 = python2Target31.getAltLabelContextStructName("a");
        java.lang.String str41 = python2Target31.getTargetStringLiteralFromString("4.5.2.1");
        boolean boolean42 = python2Target31.wantsBaseListener();
        boolean boolean43 = python2Target31.templatesExist();
        java.lang.String str45 = python2Target31.encodeIntAsCharEscape((int) (byte) 100);
        java.util.Set<java.lang.String> strSet46 = python2Target31.getBadWords();
        python2Target13.badWords = strSet46;
        python2Target1.badWords = strSet46;
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 64 + "'", int6 == 64);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertNotNull(strSet9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 2147483647 + "'", int10 == 2147483647);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(strSet14);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "_@" + "'", str19, "_@");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 64 + "'", int21 == 64);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "\"_@\"" + "'", str24, "\"_@\"");
        org.junit.Assert.assertNull(codeGenerator25);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "\"\\\"\\\"Contex\"" + "'", str29, "\"\\\"\\\"Contex\"");
        org.junit.Assert.assertNotNull(strSet32);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!" + "'", str35, "hi!");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "_@" + "'", str37, "_@");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "AContext" + "'", str39, "AContext");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "\"4.5.2.1\"" + "'", str41, "\"4.5.2.1\"");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "d" + "'", str45, "d");
        org.junit.Assert.assertNotNull(strSet46);
    }

    @Test
    public void test1621() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1621");
        org.antlr.v4.codegen.target.Python2Target.PythonStringRenderer pythonStringRenderer0 = new org.antlr.v4.codegen.target.Python2Target.PythonStringRenderer();
        java.lang.Object obj1 = null;
        java.util.Locale locale3 = null;
        java.lang.String str4 = pythonStringRenderer0.toString(obj1, "_@", locale3);
        java.util.Locale locale7 = null;
        java.lang.String str8 = pythonStringRenderer0.toString((java.lang.Object) "\\n", "\"\\\"\\\"\"", locale7);
        org.antlr.v4.codegen.target.Python2Target python2Target9 = new org.antlr.v4.codegen.target.Python2Target();
        java.lang.String str12 = python2Target9.getTargetStringLiteralFromString("hi!", true);
        java.lang.String str13 = python2Target9.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator14 = python2Target9.gen;
        boolean boolean15 = python2Target9.supportsOverloadedMethods();
        python2Target9.language = "\\\"\\\\\\\"\\\\\\\"\\\\\\\"\\\"";
        java.util.Locale locale19 = null;
        java.lang.String str20 = pythonStringRenderer0.toString((java.lang.Object) "\\\"\\\\\\\"\\\\\\\"\\\\\\\"\\\"", "_\"\\\\\\\"\\\\\\\"Context\"", locale19);
        java.util.Locale locale23 = null;
        java.lang.String str24 = pythonStringRenderer0.toString((java.lang.Object) "@", "\"_AContext\"", locale23);
        org.antlr.v4.codegen.CodeGenerator codeGenerator25 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target26 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator25);
        java.util.Set<java.lang.String> strSet27 = python2Target26.badWords;
        java.lang.String str30 = python2Target26.getTargetStringLiteralFromString("hi!", false);
        java.lang.String str32 = python2Target26.getImplicitRuleLabel("@");
        python2Target26.addBadWords();
        int int34 = python2Target26.getInlineTestSetWordSize();
        java.lang.String[] strArray35 = python2Target26.targetCharValueEscape;
        java.lang.String str37 = python2Target26.getListLabel("i");
        java.lang.String[] strArray38 = python2Target26.targetCharValueEscape;
        org.antlr.v4.codegen.CodeGenerator codeGenerator39 = null;
        java.lang.String str42 = python2Target26.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator39, "\"hi!\"", false);
        java.util.Locale locale44 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str45 = pythonStringRenderer0.toString((java.lang.Object) python2Target26, "\"_tset_\"Python2Context\"Context\"", locale44);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: null");
        } catch (java.lang.ClassCastException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "_@" + "'", str4, "_@");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\"\\\"\\\"\"" + "'", str8, "\"\\\"\\\"\"");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "\"hi!\"" + "'", str12, "\"hi!\"");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "4.5.2.1" + "'", str13, "4.5.2.1");
        org.junit.Assert.assertNull(codeGenerator14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "_\"\\\\\\\"\\\\\\\"Context\"" + "'", str20, "_\"\\\\\\\"\\\\\\\"Context\"");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "\"_AContext\"" + "'", str24, "\"_AContext\"");
        org.junit.Assert.assertNotNull(strSet27);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "hi!" + "'", str30, "hi!");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "_@" + "'", str32, "_@");
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 64 + "'", int34 == 64);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "i" + "'", str37, "i");
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "hi!" + "'", str42, "hi!");
    }

    @Test
    public void test1622() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1622");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str5 = python2Target1.getTargetStringLiteralFromString("hi!", false);
        java.lang.String str7 = python2Target1.getImplicitRuleLabel("@");
        python2Target1.addBadWords();
        boolean boolean9 = python2Target1.wantsBaseListener();
        int int10 = python2Target1.getInlineTestSetWordSize();
        java.lang.String str11 = python2Target1.getVersion();
        java.lang.String str13 = python2Target1.getTargetStringLiteralFromString("");
        java.lang.String str16 = python2Target1.getTargetStringLiteralFromString("\\\"Python2Context\\\"", false);
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "_@" + "'", str7, "_@");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 64 + "'", int10 == 64);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "4.5.2.1" + "'", str11, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "\"\"" + "'", str13, "\"\"");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "\\\\\\\"Python2Context\\\\\\\"" + "'", str16, "\\\\\\\"Python2Context\\\\\\\"");
    }

    @Test
    public void test1623() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1623");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str4 = python2Target1.encodeIntAsCharEscape(64);
        java.lang.String str5 = python2Target1.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target7 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator6);
        java.lang.String[] strArray8 = python2Target7.targetCharValueEscape;
        java.lang.String str9 = python2Target7.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup10 = python2Target7.getTemplates();
        python2Target1.templates = sTGroup10;
        java.util.Set<java.lang.String> strSet12 = python2Target1.getBadWords();
        org.stringtemplate.v4.STGroup sTGroup13 = python2Target1.templates;
        org.antlr.v4.tool.ast.GrammarAST grammarAST14 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str15 = python2Target1.getLoopCounter(grammarAST14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "@" + "'", str4, "@");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Python2" + "'", str5, "Python2");
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Python2" + "'", str9, "Python2");
        org.junit.Assert.assertNotNull(sTGroup10);
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertNotNull(sTGroup13);
    }

    @Test
    public void test1624() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1624");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str4 = python2Target1.encodeIntAsCharEscape(64);
        java.lang.String str5 = python2Target1.getLanguage();
        java.lang.String str8 = python2Target1.getTargetStringLiteralFromString("_@", false);
        java.lang.String str10 = python2Target1.encodeIntAsCharEscape((int) 'a');
        org.antlr.v4.tool.Grammar grammar11 = null;
        org.stringtemplate.v4.ST sT12 = null;
        python2Target1.genRecognizerHeaderFile(grammar11, sT12, "\\\"\\\"");
        python2Target1.language = "_\"\\\\0\"Context";
        org.stringtemplate.v4.STGroup sTGroup17 = python2Target1.templates;
        org.antlr.v4.tool.Grammar grammar18 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator19 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target20 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator19);
        org.stringtemplate.v4.STGroup sTGroup21 = python2Target20.templates;
        int int22 = python2Target20.getInlineTestSetWordSize();
        boolean boolean23 = python2Target20.templatesExist();
        org.stringtemplate.v4.STGroup sTGroup24 = python2Target20.getTemplates();
        java.lang.String str26 = python2Target20.getListLabel("\"\\\"\\\\\\\"\\\\\\\"\\\"Context\"");
        org.antlr.v4.tool.Grammar grammar27 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator28 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target29 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator28);
        java.util.Set<java.lang.String> strSet30 = python2Target29.badWords;
        java.lang.String str32 = python2Target29.encodeIntAsCharEscape(64);
        java.lang.String str33 = python2Target29.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator34 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target35 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator34);
        java.lang.String[] strArray36 = python2Target35.targetCharValueEscape;
        java.lang.String str37 = python2Target35.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup38 = python2Target35.getTemplates();
        python2Target29.templates = sTGroup38;
        java.util.Set<java.lang.String> strSet40 = python2Target29.getBadWords();
        java.lang.String str43 = python2Target29.getTargetStringLiteralFromString("\"hi!\"", true);
        int int44 = python2Target29.getInlineTestSetWordSize();
        java.lang.String str46 = python2Target29.getTargetStringLiteralFromString("_");
        java.lang.String str48 = python2Target29.getTargetStringLiteralFromString("_tset_tset\"hi!\"");
        org.antlr.v4.tool.Grammar grammar49 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator50 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target51 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator50);
        java.lang.String str53 = python2Target51.getImplicitSetLabel("");
        org.antlr.v4.codegen.CodeGenerator codeGenerator54 = null;
        java.lang.String str57 = python2Target51.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator54, "", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator58 = null;
        java.lang.String str61 = python2Target51.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator58, "\"\\\"\\\"\"", false);
        int int62 = python2Target51.getSerializedATNSegmentLimit();
        org.antlr.v4.tool.Grammar grammar63 = null;
        int[] intArray64 = new int[] {};
        java.lang.String[] strArray65 = python2Target51.getTokenTypesAsTargetLabels(grammar63, intArray64);
        java.lang.String[] strArray66 = python2Target29.getTokenTypesAsTargetLabels(grammar49, intArray64);
        java.lang.String[] strArray67 = python2Target20.getTokenTypesAsTargetLabels(grammar27, intArray64);
        java.lang.String[] strArray68 = python2Target1.getTokenTypesAsTargetLabels(grammar18, intArray64);
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "@" + "'", str4, "@");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Python2" + "'", str5, "Python2");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "_@" + "'", str8, "_@");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "a" + "'", str10, "a");
        org.junit.Assert.assertNull(sTGroup17);
        org.junit.Assert.assertNull(sTGroup21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 64 + "'", int22 == 64);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(sTGroup24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "\"\\\"\\\\\\\"\\\\\\\"\\\"Context\"" + "'", str26, "\"\\\"\\\\\\\"\\\\\\\"\\\"Context\"");
        org.junit.Assert.assertNotNull(strSet30);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "@" + "'", str32, "@");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "Python2" + "'", str33, "Python2");
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "Python2" + "'", str37, "Python2");
        org.junit.Assert.assertNotNull(sTGroup38);
        org.junit.Assert.assertNotNull(strSet40);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "\"\\\"hi!\\\"\"" + "'", str43, "\"\\\"hi!\\\"\"");
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 64 + "'", int44 == 64);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "\"_\"" + "'", str46, "\"_\"");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "\"_tset_tset\\\"hi!\\\"\"" + "'", str48, "\"_tset_tset\\\"hi!\\\"\"");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "_tset" + "'", str53, "_tset");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "\"\"" + "'", str57, "\"\"");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "\\\"\\\"" + "'", str61, "\\\"\\\"");
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 2147483647 + "'", int62 == 2147483647);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[]");
        org.junit.Assert.assertNotNull(strArray65);
        org.junit.Assert.assertNotNull(strArray66);
        org.junit.Assert.assertNotNull(strArray67);
        org.junit.Assert.assertNotNull(strArray68);
    }

    @Test
    public void test1625() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1625");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        org.stringtemplate.v4.STGroup sTGroup2 = python2Target1.templates;
        int int3 = python2Target1.getInlineTestSetWordSize();
        boolean boolean4 = python2Target1.templatesExist();
        org.stringtemplate.v4.STGroup sTGroup5 = python2Target1.getTemplates();
        boolean boolean6 = python2Target1.supportsOverloadedMethods();
        org.antlr.v4.tool.ast.GrammarAST grammarAST7 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean8 = python2Target1.grammarSymbolCausesIssueInGeneratedCode(grammarAST7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 64 + "'", int3 == 64);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(sTGroup5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    }

    @Test
    public void test1626() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1626");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        python2Target1.language = "\"\\\"hi!\\\"\"";
        java.lang.String str5 = python2Target1.encodeIntAsCharEscape((int) '4');
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = python2Target1.gen;
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = python2Target1.getCodeGenerator();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass8 = codeGenerator7.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "\\64" + "'", str5, "\\64");
        org.junit.Assert.assertNull(codeGenerator6);
        org.junit.Assert.assertNull(codeGenerator7);
    }

    @Test
    public void test1627() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1627");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        org.stringtemplate.v4.STGroup sTGroup2 = python2Target1.templates;
        int int3 = python2Target1.getInlineTestSetWordSize();
        java.lang.String str4 = python2Target1.getVersion();
        boolean boolean5 = python2Target1.templatesExist();
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = null;
        java.lang.String str9 = python2Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator6, "__\"\\\\\\\"\\\\\\\"Context\"", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target11 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator10);
        python2Target11.language = "\"\\\"hi!\\\"\"";
        java.lang.String str15 = python2Target11.encodeIntAsCharEscape((int) '4');
        org.antlr.v4.codegen.CodeGenerator codeGenerator16 = python2Target11.gen;
        java.util.Set<java.lang.String> strSet17 = python2Target11.getBadWords();
        python2Target1.badWords = strSet17;
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 64 + "'", int3 == 64);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "4.5.2.1" + "'", str4, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\"_\\\"\\\\\\\"\\\\\\\"Context\"" + "'", str9, "\"_\\\"\\\\\\\"\\\\\\\"Context\"");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "\\64" + "'", str15, "\\64");
        org.junit.Assert.assertNull(codeGenerator16);
        org.junit.Assert.assertNotNull(strSet17);
    }

    @Test
    public void test1628() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1628");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str5 = python2Target1.getTargetStringLiteralFromString("hi!", false);
        int int6 = python2Target1.getInlineTestSetWordSize();
        boolean boolean7 = python2Target1.wantsBaseListener();
        java.util.Set<java.lang.String> strSet8 = python2Target1.badWords;
        boolean boolean9 = python2Target1.templatesExist();
        python2Target1.language = "AContext";
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str13 = python2Target1.getListLabel("4.5.2.1");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 64 + "'", int6 == 64);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
    }

    @Test
    public void test1629() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1629");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String str3 = python2Target1.getImplicitSetLabel("");
        org.antlr.v4.codegen.CodeGenerator codeGenerator4 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target5 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator4);
        java.util.Set<java.lang.String> strSet6 = python2Target5.badWords;
        java.lang.String str8 = python2Target5.encodeIntAsCharEscape(64);
        java.lang.String str9 = python2Target5.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target11 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator10);
        java.lang.String[] strArray12 = python2Target11.targetCharValueEscape;
        java.lang.String str13 = python2Target11.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup14 = python2Target11.getTemplates();
        python2Target5.templates = sTGroup14;
        python2Target1.templates = sTGroup14;
        java.lang.String str18 = python2Target1.getAltLabelContextStructName("Python2");
        org.stringtemplate.v4.STGroup sTGroup19 = python2Target1.loadTemplates();
        java.lang.String str21 = python2Target1.getImplicitRuleLabel("\"\\\"Python2Context\\\"\"");
        org.antlr.v4.tool.Grammar grammar22 = null;
        org.stringtemplate.v4.ST sT23 = null;
        python2Target1.genRecognizerHeaderFile(grammar22, sT23, "_tset\\64");
        org.antlr.v4.tool.Grammar grammar26 = null;
        org.stringtemplate.v4.ST sT27 = null;
        // The following exception was thrown during execution in test generation
        try {
            python2Target1.genFile(grammar26, sT27, "_d");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "_tset" + "'", str3, "_tset");
        org.junit.Assert.assertNotNull(strSet6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "@" + "'", str8, "@");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Python2" + "'", str9, "Python2");
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Python2" + "'", str13, "Python2");
        org.junit.Assert.assertNotNull(sTGroup14);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Python2Context" + "'", str18, "Python2Context");
        org.junit.Assert.assertNotNull(sTGroup19);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "_\"\\\"Python2Context\\\"\"" + "'", str21, "_\"\\\"Python2Context\\\"\"");
    }

    @Test
    public void test1630() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1630");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        org.antlr.v4.codegen.CodeGenerator codeGenerator2 = null;
        java.lang.String str5 = python2Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator2, "_@", false);
        python2Target1.addBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = null;
        python2Target1.gen = codeGenerator7;
        org.antlr.v4.codegen.CodeGenerator codeGenerator9 = python2Target1.getCodeGenerator();
        org.stringtemplate.v4.STGroup sTGroup10 = python2Target1.getTemplates();
        java.lang.String str11 = python2Target1.getVersion();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNull(codeGenerator9);
        org.junit.Assert.assertNotNull(sTGroup10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "4.5.2.1" + "'", str11, "4.5.2.1");
    }

    @Test
    public void test1631() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1631");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str5 = python2Target1.getTargetStringLiteralFromString("hi!", false);
        java.lang.String str7 = python2Target1.getImplicitRuleLabel("@");
        python2Target1.addBadWords();
        int int9 = python2Target1.getInlineTestSetWordSize();
        python2Target1.addBadWords();
        java.lang.String str13 = python2Target1.getTargetStringLiteralFromString("\"\\\"\\\"\\\"\"", true);
        java.lang.String[] strArray14 = python2Target1.targetCharValueEscape;
        int int15 = python2Target1.getInlineTestSetWordSize();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str17 = python2Target1.getElementListName("_tset\"_tset\\\\64\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "_@" + "'", str7, "_@");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 64 + "'", int9 == 64);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "\"\\\"\\\\\\\"\\\\\\\"\\\\\\\"\\\"\"" + "'", str13, "\"\\\"\\\\\\\"\\\\\\\"\\\\\\\"\\\"\"");
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 64 + "'", int15 == 64);
    }

    @Test
    public void test1632() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1632");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String str3 = python2Target1.getImplicitSetLabel("");
        org.antlr.v4.codegen.CodeGenerator codeGenerator4 = null;
        java.lang.String str7 = python2Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator4, "", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = null;
        java.lang.String str11 = python2Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator8, "\"\\\"\\\"\"", false);
        python2Target1.language = "\\\"\\\"Context";
        java.lang.String str15 = python2Target1.getAltLabelContextStructName("\"tset\\n\"");
        java.lang.String str16 = python2Target1.getVersion();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "_tset" + "'", str3, "_tset");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "\"\"" + "'", str7, "\"\"");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "\\\"\\\"" + "'", str11, "\\\"\\\"");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "\"tset\\n\"Context" + "'", str15, "\"tset\\n\"Context");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "4.5.2.1" + "'", str16, "4.5.2.1");
    }

    @Test
    public void test1633() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1633");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str4 = python2Target1.encodeIntAsCharEscape(64);
        java.lang.String str7 = python2Target1.getTargetStringLiteralFromString("\"\"", true);
        java.lang.String str9 = python2Target1.getImplicitRuleLabel("hi!");
        java.lang.String str10 = python2Target1.getLanguage();
        python2Target1.addBadWords();
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "@" + "'", str4, "@");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "\"\\\"\\\"\"" + "'", str7, "\"\\\"\\\"\"");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "_hi!" + "'", str9, "_hi!");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Python2" + "'", str10, "Python2");
    }

    @Test
    public void test1634() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1634");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        org.antlr.v4.codegen.CodeGenerator codeGenerator2 = null;
        java.lang.String str5 = python2Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator2, "_@", false);
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = python2Target1.gen;
        python2Target1.language = "_tset_tset\\n";
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNull(codeGenerator6);
    }

    @Test
    public void test1635() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1635");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str4 = python2Target1.encodeIntAsCharEscape(64);
        java.lang.String str7 = python2Target1.getTargetStringLiteralFromString("\"\"", true);
        java.lang.String str9 = python2Target1.getImplicitRuleLabel("hi!");
        boolean boolean10 = python2Target1.supportsOverloadedMethods();
        java.lang.String str12 = python2Target1.getImplicitRuleLabel("\"hi!\"");
        java.lang.String str14 = python2Target1.getListLabel("_tset");
        java.lang.String[] strArray15 = python2Target1.targetCharValueEscape;
        org.antlr.v4.codegen.target.Python2Target.python2Keywords = strArray15;
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "@" + "'", str4, "@");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "\"\\\"\\\"\"" + "'", str7, "\"\\\"\\\"\"");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "_hi!" + "'", str9, "_hi!");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "_\"hi!\"" + "'", str12, "_\"hi!\"");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "_tset" + "'", str14, "_tset");
        org.junit.Assert.assertNotNull(strArray15);
    }

    @Test
    public void test1636() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1636");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str4 = python2Target1.encodeIntAsCharEscape(64);
        org.antlr.v4.codegen.CodeGenerator codeGenerator5 = python2Target1.gen;
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target7 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator6);
        java.util.Set<java.lang.String> strSet8 = python2Target7.badWords;
        boolean boolean9 = python2Target7.wantsBaseVisitor();
        boolean boolean10 = python2Target7.wantsBaseVisitor();
        org.antlr.v4.codegen.CodeGenerator codeGenerator11 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target12 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator11);
        boolean boolean13 = python2Target12.wantsBaseVisitor();
        java.util.Set<java.lang.String> strSet14 = python2Target12.badWords;
        python2Target7.badWords = strSet14;
        int int16 = python2Target7.getSerializedATNSegmentLimit();
        org.stringtemplate.v4.STGroup sTGroup17 = python2Target7.loadTemplates();
        python2Target1.templates = sTGroup17;
        java.lang.String str20 = python2Target1.getImplicitRuleLabel("d");
        java.lang.String str21 = python2Target1.getLanguage();
        java.lang.String str23 = python2Target1.getAltLabelContextStructName("_tset\\64");
        org.antlr.v4.tool.Grammar grammar24 = null;
        org.stringtemplate.v4.ST sT25 = null;
        python2Target1.genRecognizerHeaderFile(grammar24, sT25, "_tset\"\"ContextContextContextContext");
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "@" + "'", str4, "@");
        org.junit.Assert.assertNull(codeGenerator5);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strSet14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 2147483647 + "'", int16 == 2147483647);
        org.junit.Assert.assertNotNull(sTGroup17);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "_d" + "'", str20, "_d");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Python2" + "'", str21, "Python2");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "_tset\\64Context" + "'", str23, "_tset\\64Context");
    }

    @Test
    public void test1637() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1637");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String str3 = python2Target1.getImplicitSetLabel("");
        org.antlr.v4.codegen.CodeGenerator codeGenerator4 = null;
        java.lang.String str7 = python2Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator4, "", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = null;
        java.lang.String str11 = python2Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator8, "\"\\\"\\\"\"", false);
        java.util.Set<java.lang.String> strSet12 = python2Target1.badWords;
        java.lang.String str14 = python2Target1.getAltLabelContextStructName("\\64");
        org.antlr.v4.tool.Rule rule15 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str16 = python2Target1.getRuleFunctionContextStructName(rule15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "_tset" + "'", str3, "_tset");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "\"\"" + "'", str7, "\"\"");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "\\\"\\\"" + "'", str11, "\\\"\\\"");
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "\\64Context" + "'", str14, "\\64Context");
    }

    @Test
    public void test1638() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1638");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str4 = python2Target1.encodeIntAsCharEscape(64);
        org.antlr.v4.codegen.CodeGenerator codeGenerator5 = python2Target1.gen;
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target7 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator6);
        java.util.Set<java.lang.String> strSet8 = python2Target7.badWords;
        boolean boolean9 = python2Target7.wantsBaseVisitor();
        boolean boolean10 = python2Target7.wantsBaseVisitor();
        org.antlr.v4.codegen.CodeGenerator codeGenerator11 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target12 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator11);
        boolean boolean13 = python2Target12.wantsBaseVisitor();
        java.util.Set<java.lang.String> strSet14 = python2Target12.badWords;
        python2Target7.badWords = strSet14;
        int int16 = python2Target7.getSerializedATNSegmentLimit();
        org.stringtemplate.v4.STGroup sTGroup17 = python2Target7.loadTemplates();
        python2Target1.templates = sTGroup17;
        org.antlr.v4.codegen.CodeGenerator codeGenerator19 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target20 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator19);
        python2Target20.language = "\"\\\"hi!\\\"\"";
        java.lang.String str24 = python2Target20.encodeIntAsCharEscape((int) '4');
        org.antlr.v4.codegen.CodeGenerator codeGenerator25 = python2Target20.gen;
        org.antlr.v4.codegen.CodeGenerator codeGenerator26 = python2Target20.getCodeGenerator();
        java.lang.String[] strArray27 = python2Target20.targetCharValueEscape;
        org.antlr.v4.tool.Grammar grammar28 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target29 = new org.antlr.v4.codegen.target.Python2Target();
        python2Target29.addBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator31 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target32 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator31);
        java.util.Set<java.lang.String> strSet33 = python2Target32.badWords;
        java.lang.String str35 = python2Target32.getAltLabelContextStructName("\\\"\\\"");
        boolean boolean36 = python2Target32.wantsBaseVisitor();
        java.util.Set<java.lang.String> strSet37 = python2Target32.getBadWords();
        org.stringtemplate.v4.STGroup sTGroup38 = python2Target32.loadTemplates();
        python2Target29.templates = sTGroup38;
        org.antlr.v4.tool.Grammar grammar40 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator41 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target42 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator41);
        java.util.Set<java.lang.String> strSet43 = python2Target42.badWords;
        boolean boolean44 = python2Target42.wantsBaseVisitor();
        boolean boolean45 = python2Target42.wantsBaseVisitor();
        org.antlr.v4.codegen.CodeGenerator codeGenerator46 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target47 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator46);
        boolean boolean48 = python2Target47.wantsBaseVisitor();
        java.util.Set<java.lang.String> strSet49 = python2Target47.badWords;
        python2Target42.badWords = strSet49;
        org.antlr.v4.tool.Grammar grammar51 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator52 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target53 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator52);
        java.lang.String str55 = python2Target53.getImplicitSetLabel("");
        org.antlr.v4.codegen.CodeGenerator codeGenerator56 = null;
        java.lang.String str59 = python2Target53.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator56, "", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator60 = null;
        java.lang.String str63 = python2Target53.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator60, "\"\\\"\\\"\"", false);
        int int64 = python2Target53.getSerializedATNSegmentLimit();
        org.antlr.v4.tool.Grammar grammar65 = null;
        int[] intArray66 = new int[] {};
        java.lang.String[] strArray67 = python2Target53.getTokenTypesAsTargetLabels(grammar65, intArray66);
        java.lang.String[] strArray68 = python2Target42.getTokenTypesAsTargetLabels(grammar51, intArray66);
        java.lang.String[] strArray69 = python2Target29.getTokenTypesAsTargetLabels(grammar40, intArray66);
        java.lang.String[] strArray70 = python2Target20.getTokenTypesAsTargetLabels(grammar28, intArray66);
        python2Target1.targetCharValueEscape = strArray70;
        org.stringtemplate.v4.STGroup sTGroup72 = python2Target1.loadTemplates();
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "@" + "'", str4, "@");
        org.junit.Assert.assertNull(codeGenerator5);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strSet14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 2147483647 + "'", int16 == 2147483647);
        org.junit.Assert.assertNotNull(sTGroup17);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "\\64" + "'", str24, "\\64");
        org.junit.Assert.assertNull(codeGenerator25);
        org.junit.Assert.assertNull(codeGenerator26);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertNotNull(strSet33);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "\\\"\\\"Context" + "'", str35, "\\\"\\\"Context");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(strSet37);
        org.junit.Assert.assertNotNull(sTGroup38);
        org.junit.Assert.assertNotNull(strSet43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(strSet49);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "_tset" + "'", str55, "_tset");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "\"\"" + "'", str59, "\"\"");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "\\\"\\\"" + "'", str63, "\\\"\\\"");
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 2147483647 + "'", int64 == 2147483647);
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[]");
        org.junit.Assert.assertNotNull(strArray67);
        org.junit.Assert.assertNotNull(strArray68);
        org.junit.Assert.assertNotNull(strArray69);
        org.junit.Assert.assertNotNull(strArray70);
        org.junit.Assert.assertNotNull(sTGroup72);
    }

    @Test
    public void test1639() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1639");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str5 = python2Target1.getTargetStringLiteralFromString("hi!", false);
        java.lang.String str7 = python2Target1.getImplicitRuleLabel("@");
        python2Target1.addBadWords();
        boolean boolean9 = python2Target1.wantsBaseListener();
        java.lang.String str11 = python2Target1.getImplicitSetLabel("_tset");
        org.antlr.v4.codegen.CodeGenerator codeGenerator12 = null;
        python2Target1.gen = codeGenerator12;
        java.lang.String str15 = python2Target1.getImplicitSetLabel("\"\\\"\\\\\\\"\\\\\\\"\\\"Context\"");
        org.stringtemplate.v4.STGroup sTGroup16 = python2Target1.getTemplates();
        org.antlr.v4.codegen.CodeGenerator codeGenerator17 = python2Target1.gen;
        org.antlr.v4.tool.ast.GrammarAST grammarAST18 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean19 = python2Target1.visibleGrammarSymbolCausesIssueInGeneratedCode(grammarAST18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "_@" + "'", str7, "_@");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "_tset_tset" + "'", str11, "_tset_tset");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "_tset\"\\\"\\\\\\\"\\\\\\\"\\\"Context\"" + "'", str15, "_tset\"\\\"\\\\\\\"\\\\\\\"\\\"Context\"");
        org.junit.Assert.assertNotNull(sTGroup16);
        org.junit.Assert.assertNull(codeGenerator17);
    }

    @Test
    public void test1640() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1640");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String str3 = python2Target1.getImplicitSetLabel("");
        org.antlr.v4.codegen.CodeGenerator codeGenerator4 = null;
        java.lang.String str7 = python2Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator4, "", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = python2Target1.gen;
        org.stringtemplate.v4.STGroup sTGroup9 = python2Target1.getTemplates();
        boolean boolean10 = python2Target1.wantsBaseVisitor();
        org.antlr.v4.codegen.CodeGenerator codeGenerator11 = python2Target1.gen;
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "_tset" + "'", str3, "_tset");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "\"\"" + "'", str7, "\"\"");
        org.junit.Assert.assertNull(codeGenerator8);
        org.junit.Assert.assertNotNull(sTGroup9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(codeGenerator11);
    }

    @Test
    public void test1641() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1641");
        java.lang.String str1 = org.stringtemplate.v4.StringRenderer.escapeHTML("_tset\\\"_tset\\\\\\\\64\\\"Context");
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "_tset\\\"_tset\\\\\\\\64\\\"Context" + "'", str1, "_tset\\\"_tset\\\\\\\\64\\\"Context");
    }

    @Test
    public void test1642() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1642");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str5 = python2Target1.getTargetStringLiteralFromString("hi!", false);
        int int6 = python2Target1.getInlineTestSetWordSize();
        boolean boolean7 = python2Target1.wantsBaseListener();
        java.util.Set<java.lang.String> strSet8 = python2Target1.badWords;
        java.lang.String str9 = python2Target1.getLanguage();
        java.lang.String str10 = python2Target1.language;
        org.stringtemplate.v4.STGroup sTGroup11 = python2Target1.loadTemplates();
        org.antlr.v4.codegen.CodeGenerator codeGenerator12 = null;
        java.lang.String str15 = python2Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator12, "\\1Context", false);
        boolean boolean16 = python2Target1.templatesExist();
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 64 + "'", int6 == 64);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Python2" + "'", str9, "Python2");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Python2" + "'", str10, "Python2");
        org.junit.Assert.assertNotNull(sTGroup11);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "1Contex" + "'", str15, "1Contex");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
    }

    @Test
    public void test1643() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1643");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str5 = python2Target1.getTargetStringLiteralFromString("hi!", false);
        java.lang.String str7 = python2Target1.getImplicitRuleLabel("@");
        python2Target1.addBadWords();
        int int9 = python2Target1.getInlineTestSetWordSize();
        java.lang.String[] strArray10 = python2Target1.targetCharValueEscape;
        java.lang.String str12 = python2Target1.getListLabel("\"_@\"");
        java.lang.String str15 = python2Target1.getTargetStringLiteralFromString("\"hi!\"", false);
        java.lang.String str17 = python2Target1.encodeIntAsCharEscape(1);
        org.stringtemplate.v4.STGroup sTGroup18 = python2Target1.loadTemplates();
        org.antlr.v4.codegen.CodeGenerator codeGenerator19 = null;
        java.lang.String str22 = python2Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator19, "_\"\\\"Python2Context\\\"\"", true);
        boolean boolean23 = python2Target1.wantsBaseVisitor();
        org.antlr.v4.codegen.CodeGenerator codeGenerator24 = python2Target1.getCodeGenerator();
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "_@" + "'", str7, "_@");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 64 + "'", int9 == 64);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "\"_@\"" + "'", str12, "\"_@\"");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "\\\"hi!\\\"" + "'", str15, "\\\"hi!\\\"");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "\\1" + "'", str17, "\\1");
        org.junit.Assert.assertNotNull(sTGroup18);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "\"\\\"\\\"Python2Context\\\"\"" + "'", str22, "\"\\\"\\\"Python2Context\\\"\"");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNull(codeGenerator24);
    }

    @Test
    public void test1644() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1644");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String str3 = python2Target1.getImplicitSetLabel("");
        org.antlr.v4.codegen.CodeGenerator codeGenerator4 = null;
        java.lang.String str7 = python2Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator4, "", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = null;
        java.lang.String str11 = python2Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator8, "\"\\\"\\\"\"", false);
        java.lang.String[] strArray12 = python2Target1.targetCharValueEscape;
        java.lang.String str14 = python2Target1.getImplicitRuleLabel("\"\\\"\\\\\\\\0\\\"\"");
        org.antlr.v4.tool.ast.GrammarAST grammarAST15 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean16 = python2Target1.visibleGrammarSymbolCausesIssueInGeneratedCode(grammarAST15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "_tset" + "'", str3, "_tset");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "\"\"" + "'", str7, "\"\"");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "\\\"\\\"" + "'", str11, "\\\"\\\"");
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "_\"\\\"\\\\\\\\0\\\"\"" + "'", str14, "_\"\\\"\\\\\\\\0\\\"\"");
    }

    @Test
    public void test1645() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1645");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        org.stringtemplate.v4.STGroup sTGroup2 = python2Target1.templates;
        int int3 = python2Target1.getInlineTestSetWordSize();
        boolean boolean4 = python2Target1.templatesExist();
        org.stringtemplate.v4.STGroup sTGroup5 = python2Target1.getTemplates();
        python2Target1.language = "_\\\"\\\"ContextContext";
        java.lang.String str9 = python2Target1.getTargetStringLiteralFromString("_tset_tset");
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 64 + "'", int3 == 64);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(sTGroup5);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\"_tset_tset\"" + "'", str9, "\"_tset_tset\"");
    }

    @Test
    public void test1646() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1646");
        org.antlr.v4.codegen.target.Python2Target python2Target0 = new org.antlr.v4.codegen.target.Python2Target();
        python2Target0.addBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator2 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target3 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator2);
        java.util.Set<java.lang.String> strSet4 = python2Target3.badWords;
        java.lang.String str6 = python2Target3.getAltLabelContextStructName("\\\"\\\"");
        boolean boolean7 = python2Target3.wantsBaseVisitor();
        java.util.Set<java.lang.String> strSet8 = python2Target3.getBadWords();
        org.stringtemplate.v4.STGroup sTGroup9 = python2Target3.loadTemplates();
        python2Target0.templates = sTGroup9;
        org.antlr.v4.codegen.CodeGenerator codeGenerator11 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target12 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator11);
        java.util.Set<java.lang.String> strSet13 = python2Target12.badWords;
        java.lang.String str15 = python2Target12.getAltLabelContextStructName("\\\"\\\"");
        boolean boolean16 = python2Target12.templatesExist();
        java.util.Set<java.lang.String> strSet17 = python2Target12.getBadWords();
        python2Target0.badWords = strSet17;
        org.antlr.v4.tool.Grammar grammar19 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str21 = python2Target0.getTokenTypeAsTargetLabel(grammar19, (int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\\\"\\\"Context" + "'", str6, "\\\"\\\"Context");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertNotNull(sTGroup9);
        org.junit.Assert.assertNotNull(strSet13);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "\\\"\\\"Context" + "'", str15, "\\\"\\\"Context");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(strSet17);
    }

    @Test
    public void test1647() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1647");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String str3 = python2Target1.getImplicitSetLabel("");
        org.antlr.v4.codegen.CodeGenerator codeGenerator4 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target5 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator4);
        java.util.Set<java.lang.String> strSet6 = python2Target5.badWords;
        java.lang.String str8 = python2Target5.encodeIntAsCharEscape(64);
        java.lang.String str9 = python2Target5.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target11 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator10);
        java.lang.String[] strArray12 = python2Target11.targetCharValueEscape;
        java.lang.String str13 = python2Target11.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup14 = python2Target11.getTemplates();
        python2Target5.templates = sTGroup14;
        python2Target1.templates = sTGroup14;
        java.lang.String str18 = python2Target1.getAltLabelContextStructName("Python2");
        org.stringtemplate.v4.STGroup sTGroup19 = python2Target1.loadTemplates();
        java.lang.String str21 = python2Target1.getImplicitRuleLabel("\"\\\"Python2Context\\\"\"");
        org.antlr.v4.tool.Grammar grammar22 = null;
        org.stringtemplate.v4.ST sT23 = null;
        python2Target1.genRecognizerHeaderFile(grammar22, sT23, "_tset\\64");
        org.antlr.v4.codegen.CodeGenerator codeGenerator26 = null;
        java.lang.String str29 = python2Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator26, "\"\\\"_@\\\"\"Context", true);
        java.lang.String str30 = python2Target1.language;
        java.lang.String str31 = python2Target1.getVersion();
        org.antlr.v4.tool.ast.GrammarAST grammarAST32 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean33 = python2Target1.grammarSymbolCausesIssueInGeneratedCode(grammarAST32);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "_tset" + "'", str3, "_tset");
        org.junit.Assert.assertNotNull(strSet6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "@" + "'", str8, "@");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Python2" + "'", str9, "Python2");
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Python2" + "'", str13, "Python2");
        org.junit.Assert.assertNotNull(sTGroup14);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Python2Context" + "'", str18, "Python2Context");
        org.junit.Assert.assertNotNull(sTGroup19);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "_\"\\\"Python2Context\\\"\"" + "'", str21, "_\"\\\"Python2Context\\\"\"");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "\"\\\"_@\\\"\\\"Contex\"" + "'", str29, "\"\\\"_@\\\"\\\"Contex\"");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "Python2" + "'", str30, "Python2");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "4.5.2.1" + "'", str31, "4.5.2.1");
    }

    @Test
    public void test1648() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1648");
        java.lang.String str1 = org.stringtemplate.v4.StringRenderer.escapeHTML("_tsettset6Context");
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "_tsettset6Context" + "'", str1, "_tsettset6Context");
    }

    @Test
    public void test1649() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1649");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str4 = python2Target1.encodeIntAsCharEscape(64);
        java.lang.String str5 = python2Target1.getLanguage();
        java.lang.String str7 = python2Target1.getListLabel("");
        java.lang.String str8 = python2Target1.getVersion();
        boolean boolean9 = python2Target1.wantsBaseVisitor();
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "@" + "'", str4, "@");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Python2" + "'", str5, "Python2");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "4.5.2.1" + "'", str8, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test1650() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1650");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        boolean boolean2 = python2Target1.wantsBaseVisitor();
        java.util.Set<java.lang.String> strSet3 = python2Target1.badWords;
        python2Target1.language = "_\"hi!\"";
        org.antlr.v4.tool.Grammar grammar6 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target8 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator7);
        python2Target8.language = "\"\\\"hi!\\\"\"";
        java.lang.String str12 = python2Target8.encodeIntAsCharEscape((int) '4');
        java.lang.String str13 = python2Target8.language;
        org.antlr.v4.tool.Grammar grammar14 = null;
        org.stringtemplate.v4.ST sT15 = null;
        python2Target8.genRecognizerHeaderFile(grammar14, sT15, "\"__tset\\\\64\"");
        java.lang.String[] strArray18 = python2Target8.targetCharValueEscape;
        java.lang.String[] strArray19 = python2Target8.targetCharValueEscape;
        org.antlr.v4.tool.Grammar grammar20 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator21 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target22 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator21);
        java.util.Set<java.lang.String> strSet23 = python2Target22.badWords;
        boolean boolean24 = python2Target22.wantsBaseVisitor();
        boolean boolean25 = python2Target22.wantsBaseVisitor();
        java.lang.String str27 = python2Target22.getImplicitRuleLabel("_");
        org.antlr.v4.tool.Grammar grammar28 = null;
        org.stringtemplate.v4.ST sT29 = null;
        python2Target22.genRecognizerHeaderFile(grammar28, sT29, "_AContext");
        org.antlr.v4.tool.Grammar grammar32 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator33 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target34 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator33);
        java.util.Set<java.lang.String> strSet35 = python2Target34.badWords;
        java.lang.String str38 = python2Target34.getTargetStringLiteralFromString("hi!", false);
        java.lang.String str40 = python2Target34.getImplicitRuleLabel("@");
        python2Target34.addBadWords();
        boolean boolean42 = python2Target34.wantsBaseListener();
        java.lang.String str44 = python2Target34.getImplicitSetLabel("_tset");
        org.antlr.v4.codegen.CodeGenerator codeGenerator45 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target46 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator45);
        java.lang.String[] strArray47 = python2Target46.targetCharValueEscape;
        java.lang.String str48 = python2Target46.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup49 = python2Target46.getTemplates();
        python2Target34.templates = sTGroup49;
        boolean boolean51 = python2Target34.wantsBaseListener();
        boolean boolean52 = python2Target34.wantsBaseVisitor();
        org.antlr.v4.tool.Grammar grammar53 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator54 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target55 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator54);
        org.stringtemplate.v4.STGroup sTGroup56 = python2Target55.templates;
        int int57 = python2Target55.getInlineTestSetWordSize();
        int int58 = python2Target55.getSerializedATNSegmentLimit();
        org.antlr.v4.tool.Grammar grammar59 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator60 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target61 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator60);
        java.lang.String str63 = python2Target61.getImplicitSetLabel("");
        org.antlr.v4.codegen.CodeGenerator codeGenerator64 = null;
        java.lang.String str67 = python2Target61.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator64, "", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator68 = null;
        java.lang.String str71 = python2Target61.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator68, "\"\\\"\\\"\"", false);
        int int72 = python2Target61.getSerializedATNSegmentLimit();
        org.antlr.v4.tool.Grammar grammar73 = null;
        int[] intArray74 = new int[] {};
        java.lang.String[] strArray75 = python2Target61.getTokenTypesAsTargetLabels(grammar73, intArray74);
        java.lang.String[] strArray76 = python2Target55.getTokenTypesAsTargetLabels(grammar59, intArray74);
        java.lang.String[] strArray77 = python2Target34.getTokenTypesAsTargetLabels(grammar53, intArray74);
        java.lang.String[] strArray78 = python2Target22.getTokenTypesAsTargetLabels(grammar32, intArray74);
        java.lang.String[] strArray79 = python2Target8.getTokenTypesAsTargetLabels(grammar20, intArray74);
        java.lang.String[] strArray80 = python2Target1.getTokenTypesAsTargetLabels(grammar6, intArray74);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "\\64" + "'", str12, "\\64");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "\"\\\"hi!\\\"\"" + "'", str13, "\"\\\"hi!\\\"\"");
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertNotNull(strSet23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "__" + "'", str27, "__");
        org.junit.Assert.assertNotNull(strSet35);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "hi!" + "'", str38, "hi!");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "_@" + "'", str40, "_@");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "_tset_tset" + "'", str44, "_tset_tset");
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "Python2" + "'", str48, "Python2");
        org.junit.Assert.assertNotNull(sTGroup49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNull(sTGroup56);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 64 + "'", int57 == 64);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 2147483647 + "'", int58 == 2147483647);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "_tset" + "'", str63, "_tset");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "\"\"" + "'", str67, "\"\"");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "\\\"\\\"" + "'", str71, "\\\"\\\"");
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 2147483647 + "'", int72 == 2147483647);
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[]");
        org.junit.Assert.assertNotNull(strArray75);
        org.junit.Assert.assertNotNull(strArray76);
        org.junit.Assert.assertNotNull(strArray77);
        org.junit.Assert.assertNotNull(strArray78);
        org.junit.Assert.assertNotNull(strArray79);
        org.junit.Assert.assertNotNull(strArray80);
    }

    @Test
    public void test1651() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1651");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str4 = python2Target1.encodeIntAsCharEscape(64);
        java.lang.String str5 = python2Target1.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target7 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator6);
        java.lang.String[] strArray8 = python2Target7.targetCharValueEscape;
        java.lang.String str9 = python2Target7.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup10 = python2Target7.getTemplates();
        python2Target1.templates = sTGroup10;
        java.util.Set<java.lang.String> strSet12 = python2Target1.getBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator13 = null;
        python2Target1.gen = codeGenerator13;
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "@" + "'", str4, "@");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Python2" + "'", str5, "Python2");
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Python2" + "'", str9, "Python2");
        org.junit.Assert.assertNotNull(sTGroup10);
        org.junit.Assert.assertNotNull(strSet12);
    }

    @Test
    public void test1652() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1652");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str4 = python2Target1.encodeIntAsCharEscape(64);
        java.lang.String str5 = python2Target1.getLanguage();
        java.lang.String[] strArray11 = new java.lang.String[] { "\"hi!\"", "Python2", "Python2", "@", "_@" };
        java.util.LinkedHashSet<java.lang.String> strSet12 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet12, strArray11);
        python2Target1.badWords = strSet12;
        boolean boolean15 = python2Target1.wantsBaseVisitor();
        org.stringtemplate.v4.STGroup sTGroup16 = python2Target1.getTemplates();
        java.lang.String str18 = python2Target1.getTargetStringLiteralFromString("\"\\\\0\"");
        int int19 = python2Target1.getSerializedATNSegmentLimit();
        java.util.Set<java.lang.String> strSet20 = python2Target1.getBadWords();
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "@" + "'", str4, "@");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Python2" + "'", str5, "Python2");
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(sTGroup16);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "\"\\\"\\\\\\\\0\\\"\"" + "'", str18, "\"\\\"\\\\\\\\0\\\"\"");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 2147483647 + "'", int19 == 2147483647);
        org.junit.Assert.assertNotNull(strSet20);
    }

    @Test
    public void test1653() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1653");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str5 = python2Target1.getTargetStringLiteralFromString("hi!", false);
        int int6 = python2Target1.getInlineTestSetWordSize();
        boolean boolean7 = python2Target1.wantsBaseListener();
        java.util.Set<java.lang.String> strSet8 = python2Target1.badWords;
        java.lang.String str9 = python2Target1.getLanguage();
        java.lang.String str10 = python2Target1.getVersion();
        int int11 = python2Target1.getSerializedATNSegmentLimit();
        boolean boolean12 = python2Target1.wantsBaseListener();
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 64 + "'", int6 == 64);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Python2" + "'", str9, "Python2");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "4.5.2.1" + "'", str10, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2147483647 + "'", int11 == 2147483647);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test1654() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1654");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String str3 = python2Target1.getImplicitSetLabel("");
        org.antlr.v4.codegen.CodeGenerator codeGenerator4 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target5 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator4);
        java.util.Set<java.lang.String> strSet6 = python2Target5.badWords;
        java.lang.String str8 = python2Target5.encodeIntAsCharEscape(64);
        java.lang.String str9 = python2Target5.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target11 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator10);
        java.lang.String[] strArray12 = python2Target11.targetCharValueEscape;
        java.lang.String str13 = python2Target11.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup14 = python2Target11.getTemplates();
        python2Target5.templates = sTGroup14;
        python2Target1.templates = sTGroup14;
        org.antlr.v4.tool.Grammar grammar17 = null;
        org.stringtemplate.v4.ST sT18 = null;
        python2Target1.genRecognizerHeaderFile(grammar17, sT18, "\\0");
        boolean boolean21 = python2Target1.wantsBaseListener();
        java.util.Set<java.lang.String> strSet22 = python2Target1.getBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator23 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target24 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator23);
        java.lang.String[] strArray25 = python2Target24.targetCharValueEscape;
        java.lang.String str26 = python2Target24.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup27 = python2Target24.getTemplates();
        java.lang.String[] strArray28 = python2Target24.targetCharValueEscape;
        java.lang.String[] strArray29 = org.antlr.v4.codegen.target.Python2Target.python2Keywords;
        python2Target24.targetCharValueEscape = strArray29;
        python2Target1.targetCharValueEscape = strArray29;
        org.stringtemplate.v4.STGroup sTGroup32 = python2Target1.getTemplates();
        org.antlr.v4.codegen.CodeGenerator codeGenerator33 = null;
        python2Target1.gen = codeGenerator33;
        org.antlr.v4.tool.ast.GrammarAST grammarAST35 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str36 = python2Target1.getLoopCounter(grammarAST35);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "_tset" + "'", str3, "_tset");
        org.junit.Assert.assertNotNull(strSet6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "@" + "'", str8, "@");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Python2" + "'", str9, "Python2");
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Python2" + "'", str13, "Python2");
        org.junit.Assert.assertNotNull(sTGroup14);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(strSet22);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "Python2" + "'", str26, "Python2");
        org.junit.Assert.assertNotNull(sTGroup27);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertNotNull(sTGroup32);
    }

    @Test
    public void test1655() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1655");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String str3 = python2Target1.getImplicitSetLabel("");
        org.antlr.v4.codegen.CodeGenerator codeGenerator4 = null;
        java.lang.String str7 = python2Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator4, "", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = null;
        java.lang.String str11 = python2Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator8, "\"\\\"\\\"\"", false);
        python2Target1.language = "\\\"\\\"Context";
        java.lang.String str15 = python2Target1.getAltLabelContextStructName("\"tset\\n\"");
        org.stringtemplate.v4.STGroup sTGroup16 = python2Target1.getTemplates();
        org.antlr.v4.codegen.CodeGenerator codeGenerator17 = null;
        python2Target1.gen = codeGenerator17;
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "_tset" + "'", str3, "_tset");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "\"\"" + "'", str7, "\"\"");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "\\\"\\\"" + "'", str11, "\\\"\\\"");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "\"tset\\n\"Context" + "'", str15, "\"tset\\n\"Context");
        org.junit.Assert.assertNotNull(sTGroup16);
    }

    @Test
    public void test1656() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1656");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str4 = python2Target1.encodeIntAsCharEscape(64);
        java.lang.String str5 = python2Target1.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target7 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator6);
        java.lang.String[] strArray8 = python2Target7.targetCharValueEscape;
        java.lang.String str9 = python2Target7.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup10 = python2Target7.getTemplates();
        python2Target1.templates = sTGroup10;
        java.lang.String str13 = python2Target1.getTargetStringLiteralFromString("_@");
        java.lang.String str15 = python2Target1.getTargetStringLiteralFromString("\\\"\\\"Context");
        org.antlr.v4.codegen.CodeGenerator codeGenerator16 = python2Target1.getCodeGenerator();
        boolean boolean17 = python2Target1.templatesExist();
        java.lang.String str18 = python2Target1.language;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str20 = python2Target1.getElementListName("\"__\\\\\\\"\\\\\\\"ContextContext\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "@" + "'", str4, "@");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Python2" + "'", str5, "Python2");
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Python2" + "'", str9, "Python2");
        org.junit.Assert.assertNotNull(sTGroup10);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "\"_@\"" + "'", str13, "\"_@\"");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "\"\\\\\\\"\\\\\\\"Context\"" + "'", str15, "\"\\\\\\\"\\\\\\\"Context\"");
        org.junit.Assert.assertNull(codeGenerator16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Python2" + "'", str18, "Python2");
    }

    @Test
    public void test1657() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1657");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String str3 = python2Target1.getImplicitSetLabel("");
        org.antlr.v4.codegen.CodeGenerator codeGenerator4 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target5 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator4);
        java.util.Set<java.lang.String> strSet6 = python2Target5.badWords;
        java.lang.String str8 = python2Target5.encodeIntAsCharEscape(64);
        java.lang.String str9 = python2Target5.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target11 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator10);
        java.lang.String[] strArray12 = python2Target11.targetCharValueEscape;
        java.lang.String str13 = python2Target11.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup14 = python2Target11.getTemplates();
        python2Target5.templates = sTGroup14;
        python2Target1.templates = sTGroup14;
        java.lang.String str18 = python2Target1.getAltLabelContextStructName("Python2");
        org.stringtemplate.v4.STGroup sTGroup19 = python2Target1.loadTemplates();
        java.lang.String str22 = python2Target1.getTargetStringLiteralFromString("\"_tset\"", true);
        python2Target1.addBadWords();
        org.stringtemplate.v4.STGroup sTGroup24 = python2Target1.templates;
        java.util.Set<java.lang.String> strSet25 = python2Target1.getBadWords();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "_tset" + "'", str3, "_tset");
        org.junit.Assert.assertNotNull(strSet6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "@" + "'", str8, "@");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Python2" + "'", str9, "Python2");
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Python2" + "'", str13, "Python2");
        org.junit.Assert.assertNotNull(sTGroup14);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Python2Context" + "'", str18, "Python2Context");
        org.junit.Assert.assertNotNull(sTGroup19);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "\"\\\"_tset\\\"\"" + "'", str22, "\"\\\"_tset\\\"\"");
        org.junit.Assert.assertNotNull(sTGroup24);
        org.junit.Assert.assertNotNull(strSet25);
    }

    @Test
    public void test1658() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1658");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        boolean boolean3 = python2Target1.wantsBaseVisitor();
        boolean boolean4 = python2Target1.wantsBaseVisitor();
        org.antlr.v4.codegen.CodeGenerator codeGenerator5 = null;
        python2Target1.gen = codeGenerator5;
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = null;
        python2Target1.gen = codeGenerator7;
        python2Target1.language = "__tset6ContextContext";
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    }

    @Test
    public void test1659() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1659");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        org.stringtemplate.v4.STGroup sTGroup2 = python2Target1.templates;
        java.util.Set<java.lang.String> strSet3 = python2Target1.getBadWords();
        java.lang.String str5 = python2Target1.getListLabel("\\\"\\\"\\\"\\\"");
        org.antlr.v4.codegen.target.Python2Target python2Target6 = new org.antlr.v4.codegen.target.Python2Target();
        python2Target6.addBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target9 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator8);
        java.util.Set<java.lang.String> strSet10 = python2Target9.badWords;
        java.lang.String str12 = python2Target9.getAltLabelContextStructName("\\\"\\\"");
        boolean boolean13 = python2Target9.wantsBaseVisitor();
        java.util.Set<java.lang.String> strSet14 = python2Target9.getBadWords();
        org.stringtemplate.v4.STGroup sTGroup15 = python2Target9.loadTemplates();
        python2Target6.templates = sTGroup15;
        python2Target1.templates = sTGroup15;
        java.lang.String str19 = python2Target1.getImplicitRuleLabel("\"\\\"\\\\\\\"\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"\\\\\\\"\\\"\"");
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "\\\"\\\"\\\"\\\"" + "'", str5, "\\\"\\\"\\\"\\\"");
        org.junit.Assert.assertNotNull(strSet10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "\\\"\\\"Context" + "'", str12, "\\\"\\\"Context");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strSet14);
        org.junit.Assert.assertNotNull(sTGroup15);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "_\"\\\"\\\\\\\"\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"\\\\\\\"\\\"\"" + "'", str19, "_\"\\\"\\\\\\\"\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"\\\\\\\"\\\"\"");
    }

    @Test
    public void test1660() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1660");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        org.stringtemplate.v4.STGroup sTGroup2 = python2Target1.templates;
        int int3 = python2Target1.getInlineTestSetWordSize();
        boolean boolean4 = python2Target1.wantsBaseVisitor();
        org.antlr.v4.codegen.CodeGenerator codeGenerator5 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target6 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator5);
        boolean boolean7 = python2Target6.wantsBaseVisitor();
        java.util.Set<java.lang.String> strSet8 = python2Target6.badWords;
        org.antlr.v4.codegen.CodeGenerator codeGenerator9 = python2Target6.getCodeGenerator();
        org.antlr.v4.tool.Grammar grammar10 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator11 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target12 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator11);
        python2Target12.language = "\"\\\"hi!\\\"\"";
        java.lang.String str16 = python2Target12.encodeIntAsCharEscape((int) '4');
        org.antlr.v4.codegen.CodeGenerator codeGenerator17 = python2Target12.gen;
        org.antlr.v4.codegen.CodeGenerator codeGenerator18 = python2Target12.getCodeGenerator();
        java.lang.String[] strArray19 = python2Target12.targetCharValueEscape;
        org.antlr.v4.tool.Grammar grammar20 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target21 = new org.antlr.v4.codegen.target.Python2Target();
        python2Target21.addBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator23 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target24 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator23);
        java.util.Set<java.lang.String> strSet25 = python2Target24.badWords;
        java.lang.String str27 = python2Target24.getAltLabelContextStructName("\\\"\\\"");
        boolean boolean28 = python2Target24.wantsBaseVisitor();
        java.util.Set<java.lang.String> strSet29 = python2Target24.getBadWords();
        org.stringtemplate.v4.STGroup sTGroup30 = python2Target24.loadTemplates();
        python2Target21.templates = sTGroup30;
        org.antlr.v4.tool.Grammar grammar32 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator33 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target34 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator33);
        java.util.Set<java.lang.String> strSet35 = python2Target34.badWords;
        boolean boolean36 = python2Target34.wantsBaseVisitor();
        boolean boolean37 = python2Target34.wantsBaseVisitor();
        org.antlr.v4.codegen.CodeGenerator codeGenerator38 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target39 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator38);
        boolean boolean40 = python2Target39.wantsBaseVisitor();
        java.util.Set<java.lang.String> strSet41 = python2Target39.badWords;
        python2Target34.badWords = strSet41;
        org.antlr.v4.tool.Grammar grammar43 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator44 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target45 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator44);
        java.lang.String str47 = python2Target45.getImplicitSetLabel("");
        org.antlr.v4.codegen.CodeGenerator codeGenerator48 = null;
        java.lang.String str51 = python2Target45.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator48, "", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator52 = null;
        java.lang.String str55 = python2Target45.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator52, "\"\\\"\\\"\"", false);
        int int56 = python2Target45.getSerializedATNSegmentLimit();
        org.antlr.v4.tool.Grammar grammar57 = null;
        int[] intArray58 = new int[] {};
        java.lang.String[] strArray59 = python2Target45.getTokenTypesAsTargetLabels(grammar57, intArray58);
        java.lang.String[] strArray60 = python2Target34.getTokenTypesAsTargetLabels(grammar43, intArray58);
        java.lang.String[] strArray61 = python2Target21.getTokenTypesAsTargetLabels(grammar32, intArray58);
        java.lang.String[] strArray62 = python2Target12.getTokenTypesAsTargetLabels(grammar20, intArray58);
        java.lang.String[] strArray63 = python2Target6.getTokenTypesAsTargetLabels(grammar10, intArray58);
        python2Target1.targetCharValueEscape = strArray63;
        org.stringtemplate.v4.STGroup sTGroup65 = python2Target1.templates;
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 64 + "'", int3 == 64);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertNull(codeGenerator9);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "\\64" + "'", str16, "\\64");
        org.junit.Assert.assertNull(codeGenerator17);
        org.junit.Assert.assertNull(codeGenerator18);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertNotNull(strSet25);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "\\\"\\\"Context" + "'", str27, "\\\"\\\"Context");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(strSet29);
        org.junit.Assert.assertNotNull(sTGroup30);
        org.junit.Assert.assertNotNull(strSet35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(strSet41);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "_tset" + "'", str47, "_tset");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "\"\"" + "'", str51, "\"\"");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "\\\"\\\"" + "'", str55, "\\\"\\\"");
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 2147483647 + "'", int56 == 2147483647);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[]");
        org.junit.Assert.assertNotNull(strArray59);
        org.junit.Assert.assertNotNull(strArray60);
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertNotNull(strArray62);
        org.junit.Assert.assertNotNull(strArray63);
        org.junit.Assert.assertNull(sTGroup65);
    }

    @Test
    public void test1661() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1661");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str5 = python2Target1.getTargetStringLiteralFromString("hi!", false);
        int int6 = python2Target1.getInlineTestSetWordSize();
        boolean boolean7 = python2Target1.wantsBaseListener();
        java.util.Set<java.lang.String> strSet8 = python2Target1.badWords;
        boolean boolean9 = python2Target1.templatesExist();
        int int10 = python2Target1.getSerializedATNSegmentLimit();
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 64 + "'", int6 == 64);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 2147483647 + "'", int10 == 2147483647);
    }

    @Test
    public void test1662() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1662");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str4 = python2Target1.encodeIntAsCharEscape(64);
        java.lang.String str5 = python2Target1.getLanguage();
        java.lang.String str8 = python2Target1.getTargetStringLiteralFromString("_@", false);
        java.lang.String str10 = python2Target1.encodeIntAsCharEscape((int) 'a');
        java.util.Set<java.lang.String> strSet11 = python2Target1.getBadWords();
        java.lang.String str13 = python2Target1.getTargetStringLiteralFromString("__\\\"\\\"Context");
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "@" + "'", str4, "@");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Python2" + "'", str5, "Python2");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "_@" + "'", str8, "_@");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "a" + "'", str10, "a");
        org.junit.Assert.assertNotNull(strSet11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "\"__\\\\\\\"\\\\\\\"Context\"" + "'", str13, "\"__\\\\\\\"\\\\\\\"Context\"");
    }

    @Test
    public void test1663() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1663");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str4 = python2Target1.getAltLabelContextStructName("\\\"\\\"");
        boolean boolean5 = python2Target1.wantsBaseVisitor();
        java.util.Set<java.lang.String> strSet6 = python2Target1.getBadWords();
        org.stringtemplate.v4.STGroup sTGroup7 = python2Target1.loadTemplates();
        int int8 = python2Target1.getSerializedATNSegmentLimit();
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "\\\"\\\"Context" + "'", str4, "\\\"\\\"Context");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(strSet6);
        org.junit.Assert.assertNotNull(sTGroup7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 2147483647 + "'", int8 == 2147483647);
    }

    @Test
    public void test1664() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1664");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str5 = python2Target1.getTargetStringLiteralFromString("hi!", false);
        java.lang.String str7 = python2Target1.getImplicitRuleLabel("@");
        python2Target1.addBadWords();
        boolean boolean9 = python2Target1.wantsBaseListener();
        int int10 = python2Target1.getInlineTestSetWordSize();
        java.lang.String str11 = python2Target1.getVersion();
        java.lang.String str13 = python2Target1.getTargetStringLiteralFromString("");
        java.lang.String str14 = python2Target1.getVersion();
        org.stringtemplate.v4.STGroup sTGroup15 = python2Target1.getTemplates();
        java.lang.String str17 = python2Target1.getImplicitSetLabel("_tset_tset\\n");
        python2Target1.addBadWords();
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "_@" + "'", str7, "_@");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 64 + "'", int10 == 64);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "4.5.2.1" + "'", str11, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "\"\"" + "'", str13, "\"\"");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "4.5.2.1" + "'", str14, "4.5.2.1");
        org.junit.Assert.assertNotNull(sTGroup15);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "_tset_tset_tset\\n" + "'", str17, "_tset_tset_tset\\n");
    }

    @Test
    public void test1665() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1665");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        boolean boolean2 = python2Target1.wantsBaseVisitor();
        int int3 = python2Target1.getInlineTestSetWordSize();
        org.antlr.v4.codegen.CodeGenerator codeGenerator4 = null;
        java.lang.String str7 = python2Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator4, "hi!", true);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str9 = python2Target1.getImplicitTokenLabel("\"\\\"\\\"Context\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 64 + "'", int3 == 64);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "\"i\"" + "'", str7, "\"i\"");
    }

    @Test
    public void test1666() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1666");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str5 = python2Target1.getTargetStringLiteralFromString("hi!", false);
        java.lang.String str7 = python2Target1.getImplicitRuleLabel("@");
        python2Target1.addBadWords();
        boolean boolean9 = python2Target1.wantsBaseListener();
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = python2Target1.getCodeGenerator();
        java.lang.String str12 = python2Target1.getImplicitSetLabel("_tset_\"Python2Context\"Context");
        org.antlr.v4.codegen.CodeGenerator codeGenerator13 = null;
        python2Target1.gen = codeGenerator13;
        org.antlr.v4.codegen.CodeGenerator codeGenerator15 = python2Target1.gen;
        int int16 = python2Target1.getSerializedATNSegmentLimit();
        python2Target1.addBadWords();
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "_@" + "'", str7, "_@");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(codeGenerator10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "_tset_tset_\"Python2Context\"Context" + "'", str12, "_tset_tset_\"Python2Context\"Context");
        org.junit.Assert.assertNull(codeGenerator15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 2147483647 + "'", int16 == 2147483647);
    }

    @Test
    public void test1667() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1667");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str5 = python2Target1.getTargetStringLiteralFromString("hi!", false);
        java.lang.String str7 = python2Target1.getImplicitRuleLabel("@");
        python2Target1.addBadWords();
        int int9 = python2Target1.getInlineTestSetWordSize();
        python2Target1.addBadWords();
        java.lang.String[] strArray11 = python2Target1.targetCharValueEscape;
        boolean boolean12 = python2Target1.templatesExist();
        org.stringtemplate.v4.STGroup sTGroup13 = python2Target1.loadTemplates();
        boolean boolean14 = python2Target1.wantsBaseVisitor();
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "_@" + "'", str7, "_@");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 64 + "'", int9 == 64);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(sTGroup13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test1668() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1668");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str4 = python2Target1.encodeIntAsCharEscape(64);
        java.lang.String str5 = python2Target1.getLanguage();
        java.lang.String[] strArray11 = new java.lang.String[] { "\"hi!\"", "Python2", "Python2", "@", "_@" };
        java.util.LinkedHashSet<java.lang.String> strSet12 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet12, strArray11);
        python2Target1.badWords = strSet12;
        boolean boolean15 = python2Target1.wantsBaseVisitor();
        org.stringtemplate.v4.STGroup sTGroup16 = python2Target1.getTemplates();
        java.lang.String str18 = python2Target1.getTargetStringLiteralFromString("\"\\\\0\"");
        int int19 = python2Target1.getSerializedATNSegmentLimit();
        org.antlr.v4.tool.ast.GrammarAST grammarAST20 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean21 = python2Target1.grammarSymbolCausesIssueInGeneratedCode(grammarAST20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "@" + "'", str4, "@");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Python2" + "'", str5, "Python2");
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(sTGroup16);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "\"\\\"\\\\\\\\0\\\"\"" + "'", str18, "\"\\\"\\\\\\\\0\\\"\"");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 2147483647 + "'", int19 == 2147483647);
    }

    @Test
    public void test1669() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1669");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str5 = python2Target1.getTargetStringLiteralFromString("hi!", false);
        java.lang.String str7 = python2Target1.getImplicitRuleLabel("@");
        python2Target1.addBadWords();
        int int9 = python2Target1.getInlineTestSetWordSize();
        python2Target1.addBadWords();
        java.lang.String str13 = python2Target1.getTargetStringLiteralFromString("\"\\\"\\\"\\\"\"", true);
        boolean boolean14 = python2Target1.wantsBaseVisitor();
        org.antlr.v4.tool.Grammar grammar15 = null;
        org.stringtemplate.v4.ST sT16 = null;
        python2Target1.genRecognizerHeaderFile(grammar15, sT16, "\"\\\"_hi!\\\"\"");
        java.lang.String[] strArray19 = org.antlr.v4.codegen.target.Python2Target.python2Keywords;
        org.antlr.v4.codegen.target.Python2Target.python2Keywords = strArray19;
        org.antlr.v4.codegen.target.Python2Target.python2Keywords = strArray19;
        org.antlr.v4.codegen.target.Python2Target.python2Keywords = strArray19;
        python2Target1.targetCharValueEscape = strArray19;
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "_@" + "'", str7, "_@");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 64 + "'", int9 == 64);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "\"\\\"\\\\\\\"\\\\\\\"\\\\\\\"\\\"\"" + "'", str13, "\"\\\"\\\\\\\"\\\\\\\"\\\\\\\"\\\"\"");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(strArray19);
    }

    @Test
    public void test1670() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1670");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str5 = python2Target1.getTargetStringLiteralFromString("hi!", false);
        java.lang.String str7 = python2Target1.getImplicitRuleLabel("@");
        python2Target1.addBadWords();
        boolean boolean9 = python2Target1.wantsBaseListener();
        boolean boolean10 = python2Target1.supportsOverloadedMethods();
        java.lang.String str12 = python2Target1.getImplicitRuleLabel("AContext");
        java.lang.String str14 = python2Target1.getImplicitRuleLabel("tset6");
        org.antlr.v4.codegen.CodeGenerator codeGenerator15 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target16 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator15);
        java.util.Set<java.lang.String> strSet17 = python2Target16.badWords;
        java.lang.String str19 = python2Target16.encodeIntAsCharEscape(64);
        java.lang.String str20 = python2Target16.getLanguage();
        java.lang.String[] strArray26 = new java.lang.String[] { "\"hi!\"", "Python2", "Python2", "@", "_@" };
        java.util.LinkedHashSet<java.lang.String> strSet27 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet27, strArray26);
        python2Target16.badWords = strSet27;
        boolean boolean30 = python2Target16.wantsBaseVisitor();
        org.stringtemplate.v4.STGroup sTGroup31 = python2Target16.getTemplates();
        python2Target1.templates = sTGroup31;
        boolean boolean33 = python2Target1.wantsBaseVisitor();
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "_@" + "'", str7, "_@");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "_AContext" + "'", str12, "_AContext");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "_tset6" + "'", str14, "_tset6");
        org.junit.Assert.assertNotNull(strSet17);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "@" + "'", str19, "@");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "Python2" + "'", str20, "Python2");
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(sTGroup31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
    }

    @Test
    public void test1671() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1671");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str4 = python2Target1.encodeIntAsCharEscape(64);
        java.lang.String str7 = python2Target1.getTargetStringLiteralFromString("\"\"", true);
        java.lang.String str9 = python2Target1.getImplicitRuleLabel("hi!");
        java.lang.String str12 = python2Target1.getTargetStringLiteralFromString("_hi!", true);
        org.stringtemplate.v4.STGroup sTGroup13 = python2Target1.loadTemplates();
        boolean boolean14 = python2Target1.wantsBaseListener();
        java.lang.String str15 = python2Target1.language;
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "@" + "'", str4, "@");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "\"\\\"\\\"\"" + "'", str7, "\"\\\"\\\"\"");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "_hi!" + "'", str9, "_hi!");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "\"_hi!\"" + "'", str12, "\"_hi!\"");
        org.junit.Assert.assertNotNull(sTGroup13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Python2" + "'", str15, "Python2");
    }

    @Test
    public void test1672() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1672");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String str3 = python2Target1.getImplicitSetLabel("");
        org.antlr.v4.codegen.CodeGenerator codeGenerator4 = null;
        java.lang.String str7 = python2Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator4, "", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = null;
        java.lang.String str11 = python2Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator8, "\"\\\"\\\"\"", false);
        python2Target1.language = "\"\\\"\\\\\\\"_@\\\\\\\"\\\"Context\"";
        int int14 = python2Target1.getSerializedATNSegmentLimit();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "_tset" + "'", str3, "_tset");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "\"\"" + "'", str7, "\"\"");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "\\\"\\\"" + "'", str11, "\\\"\\\"");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2147483647 + "'", int14 == 2147483647);
    }

    @Test
    public void test1673() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1673");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String str3 = python2Target1.getImplicitSetLabel("");
        org.antlr.v4.codegen.CodeGenerator codeGenerator4 = null;
        java.lang.String str7 = python2Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator4, "", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = python2Target1.gen;
        org.antlr.v4.codegen.CodeGenerator codeGenerator9 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target10 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator9);
        java.lang.String[] strArray11 = python2Target10.targetCharValueEscape;
        java.lang.String str12 = python2Target10.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup13 = python2Target10.getTemplates();
        java.lang.String[] strArray14 = python2Target10.targetCharValueEscape;
        java.lang.String[] strArray15 = org.antlr.v4.codegen.target.Python2Target.python2Keywords;
        python2Target10.targetCharValueEscape = strArray15;
        java.util.Set<java.lang.String> strSet17 = python2Target10.getBadWords();
        python2Target1.badWords = strSet17;
        org.antlr.v4.tool.ast.GrammarAST grammarAST19 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean20 = python2Target1.grammarSymbolCausesIssueInGeneratedCode(grammarAST19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "_tset" + "'", str3, "_tset");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "\"\"" + "'", str7, "\"\"");
        org.junit.Assert.assertNull(codeGenerator8);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Python2" + "'", str12, "Python2");
        org.junit.Assert.assertNotNull(sTGroup13);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(strSet17);
    }

    @Test
    public void test1674() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1674");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String[] strArray2 = python2Target1.targetCharValueEscape;
        java.lang.String str3 = python2Target1.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup4 = python2Target1.getTemplates();
        java.lang.String[] strArray5 = python2Target1.targetCharValueEscape;
        org.stringtemplate.v4.STGroup sTGroup6 = python2Target1.templates;
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Python2" + "'", str3, "Python2");
        org.junit.Assert.assertNotNull(sTGroup4);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(sTGroup6);
    }

    @Test
    public void test1675() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1675");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        boolean boolean3 = python2Target1.wantsBaseVisitor();
        java.lang.String str5 = python2Target1.getListLabel("Python2Context");
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = null;
        java.lang.String str9 = python2Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator6, "\"_@\"", true);
        java.lang.String[] strArray10 = python2Target1.targetCharValueEscape;
        java.lang.String str12 = python2Target1.getImplicitRuleLabel("\\\"\\\\\\\\0\\\"");
        java.lang.String str14 = python2Target1.getTargetStringLiteralFromString("_AContextContext");
        int int15 = python2Target1.getSerializedATNSegmentLimit();
        java.lang.String str17 = python2Target1.getImplicitSetLabel("");
        org.antlr.v4.tool.Grammar grammar18 = null;
        org.stringtemplate.v4.ST sT19 = null;
        python2Target1.genRecognizerHeaderFile(grammar18, sT19, "_\\\"\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"Context\\\"");
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Python2Context" + "'", str5, "Python2Context");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\"_@\"" + "'", str9, "\"_@\"");
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "_\\\"\\\\\\\\0\\\"" + "'", str12, "_\\\"\\\\\\\\0\\\"");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "\"_AContextContext\"" + "'", str14, "\"_AContextContext\"");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 2147483647 + "'", int15 == 2147483647);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "_tset" + "'", str17, "_tset");
    }

    @Test
    public void test1676() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1676");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str4 = python2Target1.encodeIntAsCharEscape(64);
        java.lang.String str5 = python2Target1.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target7 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator6);
        java.lang.String[] strArray8 = python2Target7.targetCharValueEscape;
        java.lang.String str9 = python2Target7.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup10 = python2Target7.getTemplates();
        python2Target1.templates = sTGroup10;
        java.util.Set<java.lang.String> strSet12 = python2Target1.getBadWords();
        java.lang.String str15 = python2Target1.getTargetStringLiteralFromString("\"hi!\"", true);
        int int16 = python2Target1.getInlineTestSetWordSize();
        int int17 = python2Target1.getSerializedATNSegmentLimit();
        java.lang.String str19 = python2Target1.encodeIntAsCharEscape(0);
        org.antlr.v4.tool.Grammar grammar20 = null;
        org.stringtemplate.v4.ST sT21 = null;
        python2Target1.genRecognizerHeaderFile(grammar20, sT21, "\"_AContext\"");
        python2Target1.addBadWords();
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "@" + "'", str4, "@");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Python2" + "'", str5, "Python2");
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Python2" + "'", str9, "Python2");
        org.junit.Assert.assertNotNull(sTGroup10);
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "\"\\\"hi!\\\"\"" + "'", str15, "\"\\\"hi!\\\"\"");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 64 + "'", int16 == 64);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 2147483647 + "'", int17 == 2147483647);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "\\0" + "'", str19, "\\0");
    }

    @Test
    public void test1677() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1677");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str5 = python2Target1.getTargetStringLiteralFromString("hi!", false);
        java.lang.String str7 = python2Target1.getImplicitRuleLabel("@");
        python2Target1.addBadWords();
        boolean boolean9 = python2Target1.wantsBaseListener();
        java.lang.String str11 = python2Target1.getImplicitSetLabel("_tset");
        org.antlr.v4.codegen.CodeGenerator codeGenerator12 = null;
        python2Target1.gen = codeGenerator12;
        org.antlr.v4.codegen.CodeGenerator codeGenerator14 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target15 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator14);
        java.lang.String[] strArray16 = python2Target15.targetCharValueEscape;
        java.lang.String str17 = python2Target15.getLanguage();
        int int18 = python2Target15.getInlineTestSetWordSize();
        org.antlr.v4.codegen.CodeGenerator codeGenerator19 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target20 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator19);
        java.util.Set<java.lang.String> strSet21 = python2Target20.badWords;
        java.lang.String str23 = python2Target20.encodeIntAsCharEscape(64);
        java.lang.String str24 = python2Target20.getLanguage();
        java.lang.String str26 = python2Target20.getListLabel("");
        java.lang.String str27 = python2Target20.getVersion();
        java.util.Set<java.lang.String> strSet28 = python2Target20.getBadWords();
        python2Target15.badWords = strSet28;
        python2Target1.badWords = strSet28;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str32 = python2Target1.getImplicitTokenLabel("_tset_tset\\nContext");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "_@" + "'", str7, "_@");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "_tset_tset" + "'", str11, "_tset_tset");
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Python2" + "'", str17, "Python2");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 64 + "'", int18 == 64);
        org.junit.Assert.assertNotNull(strSet21);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "@" + "'", str23, "@");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "Python2" + "'", str24, "Python2");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "4.5.2.1" + "'", str27, "4.5.2.1");
        org.junit.Assert.assertNotNull(strSet28);
    }

    @Test
    public void test1678() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1678");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str4 = python2Target1.getAltLabelContextStructName("\\\"\\\"");
        boolean boolean5 = python2Target1.wantsBaseVisitor();
        java.util.Set<java.lang.String> strSet6 = python2Target1.getBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target8 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator7);
        boolean boolean9 = python2Target8.wantsBaseVisitor();
        java.util.Set<java.lang.String> strSet10 = python2Target8.badWords;
        java.util.Set<java.lang.String> strSet11 = python2Target8.getBadWords();
        python2Target1.badWords = strSet11;
        java.lang.String str14 = python2Target1.getImplicitRuleLabel("\\\"\\\"Context");
        int int15 = python2Target1.getSerializedATNSegmentLimit();
        org.antlr.v4.tool.Grammar grammar16 = null;
        org.stringtemplate.v4.ST sT17 = null;
        // The following exception was thrown during execution in test generation
        try {
            python2Target1.genListenerFile(grammar16, sT17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "\\\"\\\"Context" + "'", str4, "\\\"\\\"Context");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(strSet6);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(strSet10);
        org.junit.Assert.assertNotNull(strSet11);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "_\\\"\\\"Context" + "'", str14, "_\\\"\\\"Context");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 2147483647 + "'", int15 == 2147483647);
    }

    @Test
    public void test1679() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1679");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str5 = python2Target1.getTargetStringLiteralFromString("hi!", false);
        java.lang.String str7 = python2Target1.getImplicitRuleLabel("@");
        python2Target1.addBadWords();
        int int9 = python2Target1.getInlineTestSetWordSize();
        java.lang.String[] strArray10 = python2Target1.targetCharValueEscape;
        java.lang.String str12 = python2Target1.getListLabel("\"_@\"");
        java.lang.String str15 = python2Target1.getTargetStringLiteralFromString("\"hi!\"", false);
        java.lang.String str16 = python2Target1.getVersion();
        org.stringtemplate.v4.STGroup sTGroup17 = python2Target1.getTemplates();
        java.lang.String str19 = python2Target1.encodeIntAsCharEscape((int) '4');
        java.lang.String[] strArray20 = python2Target1.targetCharValueEscape;
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "_@" + "'", str7, "_@");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 64 + "'", int9 == 64);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "\"_@\"" + "'", str12, "\"_@\"");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "\\\"hi!\\\"" + "'", str15, "\\\"hi!\\\"");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "4.5.2.1" + "'", str16, "4.5.2.1");
        org.junit.Assert.assertNotNull(sTGroup17);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "\\64" + "'", str19, "\\64");
        org.junit.Assert.assertNotNull(strArray20);
    }

    @Test
    public void test1680() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1680");
        org.antlr.v4.codegen.target.Python2Target python2Target0 = new org.antlr.v4.codegen.target.Python2Target();
        java.lang.String str3 = python2Target0.getTargetStringLiteralFromString("hi!", true);
        java.lang.String str4 = python2Target0.getVersion();
        java.lang.String str5 = python2Target0.getVersion();
        java.lang.String str6 = python2Target0.getLanguage();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "\"hi!\"" + "'", str3, "\"hi!\"");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "4.5.2.1" + "'", str4, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "4.5.2.1" + "'", str5, "4.5.2.1");
        org.junit.Assert.assertNull(str6);
    }

    @Test
    public void test1681() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1681");
        org.antlr.v4.codegen.target.Python2Target.PythonStringRenderer pythonStringRenderer0 = new org.antlr.v4.codegen.target.Python2Target.PythonStringRenderer();
        java.lang.Object obj1 = null;
        java.util.Locale locale3 = null;
        java.lang.String str4 = pythonStringRenderer0.toString(obj1, "_@", locale3);
        java.util.Locale locale7 = null;
        java.lang.String str8 = pythonStringRenderer0.toString((java.lang.Object) "\\n", "\"\\\"\\\"\"", locale7);
        org.antlr.v4.codegen.target.Python2Target python2Target9 = new org.antlr.v4.codegen.target.Python2Target();
        java.lang.String str12 = python2Target9.getTargetStringLiteralFromString("hi!", true);
        java.lang.String str13 = python2Target9.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator14 = python2Target9.gen;
        boolean boolean15 = python2Target9.supportsOverloadedMethods();
        python2Target9.language = "\\\"\\\\\\\"\\\\\\\"\\\\\\\"\\\"";
        java.util.Locale locale19 = null;
        java.lang.String str20 = pythonStringRenderer0.toString((java.lang.Object) "\\\"\\\\\\\"\\\\\\\"\\\\\\\"\\\"", "_\"\\\\\\\"\\\\\\\"Context\"", locale19);
        java.util.Locale locale23 = null;
        java.lang.String str24 = pythonStringRenderer0.toString((java.lang.Object) "\"_hi!\"", "AContextContext", locale23);
        org.antlr.v4.codegen.CodeGenerator codeGenerator25 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target26 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator25);
        java.util.Set<java.lang.String> strSet27 = python2Target26.badWords;
        java.lang.String str30 = python2Target26.getTargetStringLiteralFromString("hi!", false);
        java.lang.String str32 = python2Target26.getImplicitRuleLabel("@");
        python2Target26.addBadWords();
        int int34 = python2Target26.getInlineTestSetWordSize();
        java.lang.String[] strArray35 = python2Target26.targetCharValueEscape;
        java.lang.String str37 = python2Target26.getListLabel("\"_@\"");
        java.lang.String str40 = python2Target26.getTargetStringLiteralFromString("\"hi!\"", false);
        java.lang.String str41 = python2Target26.getVersion();
        java.lang.String str42 = python2Target26.language;
        org.stringtemplate.v4.STGroup sTGroup43 = python2Target26.getTemplates();
        java.util.Locale locale45 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str46 = pythonStringRenderer0.toString((java.lang.Object) sTGroup43, "_Python2", locale45);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: null");
        } catch (java.lang.ClassCastException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "_@" + "'", str4, "_@");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\"\\\"\\\"\"" + "'", str8, "\"\\\"\\\"\"");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "\"hi!\"" + "'", str12, "\"hi!\"");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "4.5.2.1" + "'", str13, "4.5.2.1");
        org.junit.Assert.assertNull(codeGenerator14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "_\"\\\\\\\"\\\\\\\"Context\"" + "'", str20, "_\"\\\\\\\"\\\\\\\"Context\"");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "AContextContext" + "'", str24, "AContextContext");
        org.junit.Assert.assertNotNull(strSet27);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "hi!" + "'", str30, "hi!");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "_@" + "'", str32, "_@");
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 64 + "'", int34 == 64);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "\"_@\"" + "'", str37, "\"_@\"");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "\\\"hi!\\\"" + "'", str40, "\\\"hi!\\\"");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "4.5.2.1" + "'", str41, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "Python2" + "'", str42, "Python2");
        org.junit.Assert.assertNotNull(sTGroup43);
    }

    @Test
    public void test1682() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1682");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String str3 = python2Target1.getImplicitSetLabel("");
        org.antlr.v4.codegen.CodeGenerator codeGenerator4 = null;
        java.lang.String str7 = python2Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator4, "", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = python2Target1.gen;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass9 = codeGenerator8.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "_tset" + "'", str3, "_tset");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "\"\"" + "'", str7, "\"\"");
        org.junit.Assert.assertNull(codeGenerator8);
    }

    @Test
    public void test1683() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1683");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        org.stringtemplate.v4.STGroup sTGroup2 = python2Target1.templates;
        int int3 = python2Target1.getInlineTestSetWordSize();
        int int4 = python2Target1.getSerializedATNSegmentLimit();
        org.stringtemplate.v4.STGroup sTGroup5 = python2Target1.loadTemplates();
        boolean boolean6 = python2Target1.wantsBaseVisitor();
        org.stringtemplate.v4.STGroup sTGroup7 = python2Target1.loadTemplates();
        org.stringtemplate.v4.STGroup sTGroup8 = python2Target1.templates;
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 64 + "'", int3 == 64);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 2147483647 + "'", int4 == 2147483647);
        org.junit.Assert.assertNotNull(sTGroup5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(sTGroup7);
        org.junit.Assert.assertNull(sTGroup8);
    }

    @Test
    public void test1684() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1684");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String[] strArray2 = python2Target1.targetCharValueEscape;
        java.lang.String str3 = python2Target1.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup4 = python2Target1.getTemplates();
        java.lang.String[] strArray5 = python2Target1.targetCharValueEscape;
        java.lang.String str7 = python2Target1.getImplicitRuleLabel("Python2");
        java.lang.String str9 = python2Target1.getListLabel("__\\\"\\\"Context");
        java.lang.Class<?> wildcardClass10 = python2Target1.getClass();
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Python2" + "'", str3, "Python2");
        org.junit.Assert.assertNotNull(sTGroup4);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "_Python2" + "'", str7, "_Python2");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "__\\\"\\\"Context" + "'", str9, "__\\\"\\\"Context");
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test1685() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1685");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        org.stringtemplate.v4.STGroup sTGroup2 = python2Target1.templates;
        java.util.Set<java.lang.String> strSet3 = python2Target1.badWords;
        java.lang.String[] strArray4 = python2Target1.targetCharValueEscape;
        java.lang.String str7 = python2Target1.getTargetStringLiteralFromString("\\64", false);
        org.antlr.v4.tool.Grammar grammar8 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str10 = python2Target1.getTokenTypeAsTargetLabel(grammar8, (int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "\\\\64" + "'", str7, "\\\\64");
    }

    @Test
    public void test1686() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1686");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str5 = python2Target1.getTargetStringLiteralFromString("hi!", false);
        java.lang.String str7 = python2Target1.getImplicitRuleLabel("@");
        python2Target1.addBadWords();
        int int9 = python2Target1.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet10 = python2Target1.getBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator11 = null;
        python2Target1.gen = codeGenerator11;
        org.stringtemplate.v4.STGroup sTGroup13 = python2Target1.loadTemplates();
        org.stringtemplate.v4.STGroup sTGroup14 = python2Target1.loadTemplates();
        java.lang.String str15 = python2Target1.getVersion();
        int int16 = python2Target1.getSerializedATNSegmentLimit();
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "_@" + "'", str7, "_@");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 64 + "'", int9 == 64);
        org.junit.Assert.assertNotNull(strSet10);
        org.junit.Assert.assertNotNull(sTGroup13);
        org.junit.Assert.assertNotNull(sTGroup14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "4.5.2.1" + "'", str15, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 2147483647 + "'", int16 == 2147483647);
    }

    @Test
    public void test1687() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1687");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str5 = python2Target1.getTargetStringLiteralFromString("hi!", false);
        java.lang.String str7 = python2Target1.getImplicitRuleLabel("@");
        python2Target1.addBadWords();
        boolean boolean9 = python2Target1.wantsBaseListener();
        java.lang.String str11 = python2Target1.getImplicitSetLabel("_tset");
        org.antlr.v4.codegen.CodeGenerator codeGenerator12 = null;
        python2Target1.gen = codeGenerator12;
        org.antlr.v4.codegen.CodeGenerator codeGenerator14 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target15 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator14);
        java.lang.String[] strArray16 = python2Target15.targetCharValueEscape;
        java.lang.String str17 = python2Target15.getLanguage();
        int int18 = python2Target15.getInlineTestSetWordSize();
        org.antlr.v4.codegen.CodeGenerator codeGenerator19 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target20 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator19);
        java.util.Set<java.lang.String> strSet21 = python2Target20.badWords;
        java.lang.String str23 = python2Target20.encodeIntAsCharEscape(64);
        java.lang.String str24 = python2Target20.getLanguage();
        java.lang.String str26 = python2Target20.getListLabel("");
        java.lang.String str27 = python2Target20.getVersion();
        java.util.Set<java.lang.String> strSet28 = python2Target20.getBadWords();
        python2Target15.badWords = strSet28;
        python2Target1.badWords = strSet28;
        java.lang.String str32 = python2Target1.getListLabel("\" \"");
        java.lang.String str33 = python2Target1.language;
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "_@" + "'", str7, "_@");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "_tset_tset" + "'", str11, "_tset_tset");
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Python2" + "'", str17, "Python2");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 64 + "'", int18 == 64);
        org.junit.Assert.assertNotNull(strSet21);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "@" + "'", str23, "@");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "Python2" + "'", str24, "Python2");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "4.5.2.1" + "'", str27, "4.5.2.1");
        org.junit.Assert.assertNotNull(strSet28);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "\" \"" + "'", str32, "\" \"");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "Python2" + "'", str33, "Python2");
    }

    @Test
    public void test1688() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1688");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String str3 = python2Target1.getImplicitSetLabel("");
        org.antlr.v4.codegen.CodeGenerator codeGenerator4 = null;
        java.lang.String str7 = python2Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator4, "", true);
        java.lang.String str9 = python2Target1.getTargetStringLiteralFromString("\\64");
        org.antlr.v4.tool.ast.GrammarAST grammarAST10 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean11 = python2Target1.grammarSymbolCausesIssueInGeneratedCode(grammarAST10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "_tset" + "'", str3, "_tset");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "\"\"" + "'", str7, "\"\"");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\"\\\\64\"" + "'", str9, "\"\\\\64\"");
    }

    @Test
    public void test1689() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1689");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str5 = python2Target1.getTargetStringLiteralFromString("hi!", false);
        int int6 = python2Target1.getInlineTestSetWordSize();
        boolean boolean7 = python2Target1.wantsBaseListener();
        java.util.Set<java.lang.String> strSet8 = python2Target1.badWords;
        java.util.Set<java.lang.String> strSet9 = python2Target1.badWords;
        int int10 = python2Target1.getSerializedATNSegmentLimit();
        org.antlr.v4.codegen.CodeGenerator codeGenerator11 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target12 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator11);
        org.stringtemplate.v4.STGroup sTGroup13 = python2Target12.templates;
        int int14 = python2Target12.getInlineTestSetWordSize();
        boolean boolean15 = python2Target12.templatesExist();
        org.stringtemplate.v4.STGroup sTGroup16 = python2Target12.getTemplates();
        python2Target1.templates = sTGroup16;
        java.lang.String str19 = python2Target1.encodeIntAsCharEscape((int) (byte) 10);
        java.lang.String str21 = python2Target1.getListLabel("_\\\"\\\\\\\\0\\\"");
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 64 + "'", int6 == 64);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertNotNull(strSet9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 2147483647 + "'", int10 == 2147483647);
        org.junit.Assert.assertNull(sTGroup13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 64 + "'", int14 == 64);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(sTGroup16);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "\\n" + "'", str19, "\\n");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "_\\\"\\\\\\\\0\\\"" + "'", str21, "_\\\"\\\\\\\\0\\\"");
    }

    @Test
    public void test1690() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1690");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str4 = python2Target1.encodeIntAsCharEscape(64);
        java.lang.String str5 = python2Target1.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target7 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator6);
        java.lang.String[] strArray8 = python2Target7.targetCharValueEscape;
        java.lang.String str9 = python2Target7.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup10 = python2Target7.getTemplates();
        python2Target1.templates = sTGroup10;
        java.lang.String str13 = python2Target1.getTargetStringLiteralFromString("_@");
        java.lang.String str15 = python2Target1.getListLabel("_tset6Context");
        java.lang.String str17 = python2Target1.getTargetStringLiteralFromString("");
        java.lang.String[] strArray18 = python2Target1.targetCharValueEscape;
        java.lang.String str20 = python2Target1.getImplicitRuleLabel("\"_hi!\"");
        boolean boolean21 = python2Target1.wantsBaseListener();
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "@" + "'", str4, "@");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Python2" + "'", str5, "Python2");
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Python2" + "'", str9, "Python2");
        org.junit.Assert.assertNotNull(sTGroup10);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "\"_@\"" + "'", str13, "\"_@\"");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "_tset6Context" + "'", str15, "_tset6Context");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "\"\"" + "'", str17, "\"\"");
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "_\"_hi!\"" + "'", str20, "_\"_hi!\"");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
    }

    @Test
    public void test1691() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1691");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str5 = python2Target1.getTargetStringLiteralFromString("hi!", false);
        java.lang.String str7 = python2Target1.getImplicitRuleLabel("@");
        java.lang.String str9 = python2Target1.getAltLabelContextStructName("a");
        java.lang.String str11 = python2Target1.getTargetStringLiteralFromString("4.5.2.1");
        boolean boolean12 = python2Target1.wantsBaseListener();
        boolean boolean13 = python2Target1.templatesExist();
        java.lang.String str15 = python2Target1.getListLabel("_tset\\n");
        org.antlr.v4.tool.Grammar grammar16 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator17 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target18 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator17);
        java.util.Set<java.lang.String> strSet19 = python2Target18.badWords;
        java.lang.String str22 = python2Target18.getTargetStringLiteralFromString("hi!", false);
        java.lang.String str24 = python2Target18.getImplicitRuleLabel("@");
        python2Target18.addBadWords();
        boolean boolean26 = python2Target18.wantsBaseListener();
        int int27 = python2Target18.getInlineTestSetWordSize();
        java.lang.String str28 = python2Target18.getVersion();
        java.lang.String str30 = python2Target18.getTargetStringLiteralFromString("");
        java.lang.String str31 = python2Target18.getVersion();
        org.stringtemplate.v4.STGroup sTGroup32 = python2Target18.getTemplates();
        java.lang.String str34 = python2Target18.getImplicitSetLabel("_tset_tset\\n");
        org.antlr.v4.tool.Grammar grammar35 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator36 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target37 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator36);
        java.util.Set<java.lang.String> strSet38 = python2Target37.badWords;
        boolean boolean39 = python2Target37.wantsBaseVisitor();
        boolean boolean40 = python2Target37.wantsBaseVisitor();
        java.lang.String str42 = python2Target37.getImplicitRuleLabel("_");
        org.antlr.v4.tool.Grammar grammar43 = null;
        org.stringtemplate.v4.ST sT44 = null;
        python2Target37.genRecognizerHeaderFile(grammar43, sT44, "_AContext");
        org.antlr.v4.tool.Grammar grammar47 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator48 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target49 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator48);
        java.util.Set<java.lang.String> strSet50 = python2Target49.badWords;
        java.lang.String str53 = python2Target49.getTargetStringLiteralFromString("hi!", false);
        java.lang.String str55 = python2Target49.getImplicitRuleLabel("@");
        python2Target49.addBadWords();
        boolean boolean57 = python2Target49.wantsBaseListener();
        java.lang.String str59 = python2Target49.getImplicitSetLabel("_tset");
        org.antlr.v4.codegen.CodeGenerator codeGenerator60 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target61 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator60);
        java.lang.String[] strArray62 = python2Target61.targetCharValueEscape;
        java.lang.String str63 = python2Target61.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup64 = python2Target61.getTemplates();
        python2Target49.templates = sTGroup64;
        boolean boolean66 = python2Target49.wantsBaseListener();
        boolean boolean67 = python2Target49.wantsBaseVisitor();
        org.antlr.v4.tool.Grammar grammar68 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator69 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target70 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator69);
        org.stringtemplate.v4.STGroup sTGroup71 = python2Target70.templates;
        int int72 = python2Target70.getInlineTestSetWordSize();
        int int73 = python2Target70.getSerializedATNSegmentLimit();
        org.antlr.v4.tool.Grammar grammar74 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator75 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target76 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator75);
        java.lang.String str78 = python2Target76.getImplicitSetLabel("");
        org.antlr.v4.codegen.CodeGenerator codeGenerator79 = null;
        java.lang.String str82 = python2Target76.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator79, "", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator83 = null;
        java.lang.String str86 = python2Target76.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator83, "\"\\\"\\\"\"", false);
        int int87 = python2Target76.getSerializedATNSegmentLimit();
        org.antlr.v4.tool.Grammar grammar88 = null;
        int[] intArray89 = new int[] {};
        java.lang.String[] strArray90 = python2Target76.getTokenTypesAsTargetLabels(grammar88, intArray89);
        java.lang.String[] strArray91 = python2Target70.getTokenTypesAsTargetLabels(grammar74, intArray89);
        java.lang.String[] strArray92 = python2Target49.getTokenTypesAsTargetLabels(grammar68, intArray89);
        java.lang.String[] strArray93 = python2Target37.getTokenTypesAsTargetLabels(grammar47, intArray89);
        java.lang.String[] strArray94 = python2Target18.getTokenTypesAsTargetLabels(grammar35, intArray89);
        java.lang.String[] strArray95 = python2Target1.getTokenTypesAsTargetLabels(grammar16, intArray89);
        java.lang.String str96 = python2Target1.language;
        org.stringtemplate.v4.STGroup sTGroup97 = python2Target1.getTemplates();
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "_@" + "'", str7, "_@");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "AContext" + "'", str9, "AContext");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "\"4.5.2.1\"" + "'", str11, "\"4.5.2.1\"");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "_tset\\n" + "'", str15, "_tset\\n");
        org.junit.Assert.assertNotNull(strSet19);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "hi!" + "'", str22, "hi!");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "_@" + "'", str24, "_@");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 64 + "'", int27 == 64);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "4.5.2.1" + "'", str28, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "\"\"" + "'", str30, "\"\"");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "4.5.2.1" + "'", str31, "4.5.2.1");
        org.junit.Assert.assertNotNull(sTGroup32);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "_tset_tset_tset\\n" + "'", str34, "_tset_tset_tset\\n");
        org.junit.Assert.assertNotNull(strSet38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "__" + "'", str42, "__");
        org.junit.Assert.assertNotNull(strSet50);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "hi!" + "'", str53, "hi!");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "_@" + "'", str55, "_@");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "_tset_tset" + "'", str59, "_tset_tset");
        org.junit.Assert.assertNotNull(strArray62);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "Python2" + "'", str63, "Python2");
        org.junit.Assert.assertNotNull(sTGroup64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNull(sTGroup71);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 64 + "'", int72 == 64);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 2147483647 + "'", int73 == 2147483647);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "_tset" + "'", str78, "_tset");
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "\"\"" + "'", str82, "\"\"");
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "\\\"\\\"" + "'", str86, "\\\"\\\"");
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 2147483647 + "'", int87 == 2147483647);
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[]");
        org.junit.Assert.assertNotNull(strArray90);
        org.junit.Assert.assertNotNull(strArray91);
        org.junit.Assert.assertNotNull(strArray92);
        org.junit.Assert.assertNotNull(strArray93);
        org.junit.Assert.assertNotNull(strArray94);
        org.junit.Assert.assertNotNull(strArray95);
        org.junit.Assert.assertEquals("'" + str96 + "' != '" + "Python2" + "'", str96, "Python2");
        org.junit.Assert.assertNotNull(sTGroup97);
    }

    @Test
    public void test1692() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1692");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str5 = python2Target1.getTargetStringLiteralFromString("hi!", false);
        boolean boolean6 = python2Target1.supportsOverloadedMethods();
        java.util.Set<java.lang.String> strSet7 = python2Target1.getBadWords();
        boolean boolean8 = python2Target1.supportsOverloadedMethods();
        java.util.Set<java.lang.String> strSet9 = python2Target1.getBadWords();
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(strSet7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(strSet9);
    }

    @Test
    public void test1693() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1693");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str4 = python2Target1.getAltLabelContextStructName("\\\"\\\"");
        boolean boolean5 = python2Target1.templatesExist();
        org.antlr.v4.tool.ast.GrammarAST grammarAST6 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean7 = python2Target1.visibleGrammarSymbolCausesIssueInGeneratedCode(grammarAST6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "\\\"\\\"Context" + "'", str4, "\\\"\\\"Context");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
    }

    @Test
    public void test1694() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1694");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.util.Set<java.lang.String> strSet3 = python2Target1.badWords;
        org.antlr.v4.tool.Grammar grammar4 = null;
        org.stringtemplate.v4.ST sT5 = null;
        python2Target1.genRecognizerHeaderFile(grammar4, sT5, "\"\\\"_tset\\\"\"");
        java.util.Set<java.lang.String> strSet8 = python2Target1.getBadWords();
        org.antlr.v4.tool.Grammar grammar9 = null;
        org.stringtemplate.v4.ST sT10 = null;
        python2Target1.genRecognizerHeaderFile(grammar9, sT10, "_\"\\\\0\"Context");
        org.stringtemplate.v4.STGroup sTGroup13 = python2Target1.getTemplates();
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertNotNull(sTGroup13);
    }

    @Test
    public void test1695() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1695");
        org.antlr.v4.codegen.target.Python2Target python2Target0 = new org.antlr.v4.codegen.target.Python2Target();
        org.antlr.v4.tool.Grammar grammar1 = null;
        org.stringtemplate.v4.ST sT2 = null;
        python2Target0.genRecognizerHeaderFile(grammar1, sT2, "_@");
        org.antlr.v4.codegen.CodeGenerator codeGenerator5 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target6 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator5);
        java.util.Set<java.lang.String> strSet7 = python2Target6.badWords;
        java.lang.String str9 = python2Target6.encodeIntAsCharEscape(64);
        java.lang.String str10 = python2Target6.getLanguage();
        java.lang.String str11 = python2Target6.getVersion();
        java.lang.String str13 = python2Target6.getImplicitSetLabel("\"_AContext\"");
        java.util.Set<java.lang.String> strSet14 = python2Target6.badWords;
        python2Target0.badWords = strSet14;
        org.junit.Assert.assertNotNull(strSet7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "@" + "'", str9, "@");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Python2" + "'", str10, "Python2");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "4.5.2.1" + "'", str11, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "_tset\"_AContext\"" + "'", str13, "_tset\"_AContext\"");
        org.junit.Assert.assertNotNull(strSet14);
    }

    @Test
    public void test1696() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1696");
        org.antlr.v4.codegen.target.Python2Target python2Target0 = new org.antlr.v4.codegen.target.Python2Target();
        java.lang.String str1 = python2Target0.language;
        org.antlr.v4.tool.Grammar grammar2 = null;
        org.stringtemplate.v4.ST sT3 = null;
        python2Target0.genRecognizerHeaderFile(grammar2, sT3, "\"\\\\\\\"\\\\\\\"Context\"");
        org.junit.Assert.assertNull(str1);
    }

    @Test
    public void test1697() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1697");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String str3 = python2Target1.getImplicitSetLabel("");
        org.antlr.v4.codegen.CodeGenerator codeGenerator4 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target5 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator4);
        java.util.Set<java.lang.String> strSet6 = python2Target5.badWords;
        java.lang.String str8 = python2Target5.encodeIntAsCharEscape(64);
        java.lang.String str9 = python2Target5.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target11 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator10);
        java.lang.String[] strArray12 = python2Target11.targetCharValueEscape;
        java.lang.String str13 = python2Target11.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup14 = python2Target11.getTemplates();
        python2Target5.templates = sTGroup14;
        python2Target1.templates = sTGroup14;
        boolean boolean17 = python2Target1.wantsBaseVisitor();
        org.antlr.v4.tool.Grammar grammar18 = null;
        org.stringtemplate.v4.ST sT19 = null;
        // The following exception was thrown during execution in test generation
        try {
            python2Target1.genFile(grammar18, sT19, "_\"Python2Context\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "_tset" + "'", str3, "_tset");
        org.junit.Assert.assertNotNull(strSet6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "@" + "'", str8, "@");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Python2" + "'", str9, "Python2");
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Python2" + "'", str13, "Python2");
        org.junit.Assert.assertNotNull(sTGroup14);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    }

    @Test
    public void test1698() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1698");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str5 = python2Target1.getTargetStringLiteralFromString("hi!", false);
        java.lang.String str7 = python2Target1.getImplicitRuleLabel("@");
        python2Target1.addBadWords();
        boolean boolean9 = python2Target1.wantsBaseListener();
        java.lang.String str11 = python2Target1.getImplicitSetLabel("_tset");
        org.antlr.v4.codegen.CodeGenerator codeGenerator12 = python2Target1.getCodeGenerator();
        java.lang.String str14 = python2Target1.getImplicitSetLabel("tset6");
        python2Target1.addBadWords();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str17 = python2Target1.getImplicitTokenLabel("\"\\\"\\\"Context\"Context");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "_@" + "'", str7, "_@");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "_tset_tset" + "'", str11, "_tset_tset");
        org.junit.Assert.assertNull(codeGenerator12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "_tsettset6" + "'", str14, "_tsettset6");
    }

    @Test
    public void test1699() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1699");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        org.stringtemplate.v4.STGroup sTGroup2 = python2Target1.templates;
        int int3 = python2Target1.getInlineTestSetWordSize();
        java.lang.String str4 = python2Target1.getVersion();
        boolean boolean5 = python2Target1.templatesExist();
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = python2Target1.gen;
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = python2Target1.gen;
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 64 + "'", int3 == 64);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "4.5.2.1" + "'", str4, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(codeGenerator6);
        org.junit.Assert.assertNull(codeGenerator7);
    }

    @Test
    public void test1700() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1700");
        org.antlr.v4.codegen.target.Python2Target.PythonStringRenderer pythonStringRenderer0 = new org.antlr.v4.codegen.target.Python2Target.PythonStringRenderer();
        java.lang.Object obj1 = null;
        java.util.Locale locale3 = null;
        java.lang.String str4 = pythonStringRenderer0.toString(obj1, "_@", locale3);
        org.antlr.v4.codegen.CodeGenerator codeGenerator5 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target6 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator5);
        java.lang.String[] strArray7 = python2Target6.targetCharValueEscape;
        java.lang.String str8 = python2Target6.getLanguage();
        int int9 = python2Target6.getInlineTestSetWordSize();
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target11 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator10);
        java.util.Set<java.lang.String> strSet12 = python2Target11.badWords;
        java.lang.String str14 = python2Target11.encodeIntAsCharEscape(64);
        java.lang.String str15 = python2Target11.getLanguage();
        java.lang.String str17 = python2Target11.getListLabel("");
        java.lang.String str18 = python2Target11.getVersion();
        java.util.Set<java.lang.String> strSet19 = python2Target11.getBadWords();
        python2Target6.badWords = strSet19;
        org.antlr.v4.codegen.CodeGenerator codeGenerator21 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target22 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator21);
        java.util.Set<java.lang.String> strSet23 = python2Target22.badWords;
        java.lang.String str26 = python2Target22.getTargetStringLiteralFromString("hi!", false);
        java.lang.String str28 = python2Target22.getImplicitRuleLabel("@");
        python2Target22.addBadWords();
        int int30 = python2Target22.getInlineTestSetWordSize();
        java.lang.String[] strArray31 = python2Target22.targetCharValueEscape;
        java.lang.String str33 = python2Target22.getListLabel("\"_@\"");
        java.lang.String str36 = python2Target22.getTargetStringLiteralFromString("\"hi!\"", false);
        java.lang.String str37 = python2Target22.getVersion();
        org.stringtemplate.v4.STGroup sTGroup38 = python2Target22.getTemplates();
        python2Target6.templates = sTGroup38;
        org.antlr.v4.codegen.CodeGenerator codeGenerator40 = null;
        python2Target6.gen = codeGenerator40;
        java.util.Set<java.lang.String> strSet42 = python2Target6.getBadWords();
        java.util.Locale locale44 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str45 = pythonStringRenderer0.toString((java.lang.Object) python2Target6, "_\"\\\\0\"Context", locale44);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: null");
        } catch (java.lang.ClassCastException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "_@" + "'", str4, "_@");
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Python2" + "'", str8, "Python2");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 64 + "'", int9 == 64);
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "@" + "'", str14, "@");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Python2" + "'", str15, "Python2");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "4.5.2.1" + "'", str18, "4.5.2.1");
        org.junit.Assert.assertNotNull(strSet19);
        org.junit.Assert.assertNotNull(strSet23);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "hi!" + "'", str26, "hi!");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "_@" + "'", str28, "_@");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 64 + "'", int30 == 64);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "\"_@\"" + "'", str33, "\"_@\"");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "\\\"hi!\\\"" + "'", str36, "\\\"hi!\\\"");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "4.5.2.1" + "'", str37, "4.5.2.1");
        org.junit.Assert.assertNotNull(sTGroup38);
        org.junit.Assert.assertNotNull(strSet42);
    }

    @Test
    public void test1701() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1701");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String str3 = python2Target1.getImplicitSetLabel("");
        org.antlr.v4.codegen.CodeGenerator codeGenerator4 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target5 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator4);
        java.util.Set<java.lang.String> strSet6 = python2Target5.badWords;
        java.lang.String str8 = python2Target5.encodeIntAsCharEscape(64);
        java.lang.String str9 = python2Target5.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target11 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator10);
        java.lang.String[] strArray12 = python2Target11.targetCharValueEscape;
        java.lang.String str13 = python2Target11.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup14 = python2Target11.getTemplates();
        python2Target5.templates = sTGroup14;
        python2Target1.templates = sTGroup14;
        java.lang.String str18 = python2Target1.getAltLabelContextStructName("Python2");
        org.stringtemplate.v4.STGroup sTGroup19 = python2Target1.loadTemplates();
        java.lang.String str21 = python2Target1.getImplicitRuleLabel("\"\\\"Python2Context\\\"\"");
        java.lang.String str22 = python2Target1.getVersion();
        boolean boolean23 = python2Target1.wantsBaseListener();
        int int24 = python2Target1.getInlineTestSetWordSize();
        python2Target1.addBadWords();
        org.antlr.v4.tool.ast.GrammarAST grammarAST26 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str27 = python2Target1.getLoopCounter(grammarAST26);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "_tset" + "'", str3, "_tset");
        org.junit.Assert.assertNotNull(strSet6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "@" + "'", str8, "@");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Python2" + "'", str9, "Python2");
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Python2" + "'", str13, "Python2");
        org.junit.Assert.assertNotNull(sTGroup14);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Python2Context" + "'", str18, "Python2Context");
        org.junit.Assert.assertNotNull(sTGroup19);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "_\"\\\"Python2Context\\\"\"" + "'", str21, "_\"\\\"Python2Context\\\"\"");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "4.5.2.1" + "'", str22, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 64 + "'", int24 == 64);
    }

    @Test
    public void test1702() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1702");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str5 = python2Target1.getTargetStringLiteralFromString("hi!", false);
        java.lang.String str7 = python2Target1.getImplicitRuleLabel("@");
        java.lang.String str9 = python2Target1.getAltLabelContextStructName("a");
        java.lang.String str11 = python2Target1.getListLabel("\"\\\"hi!\\\"\"");
        python2Target1.addBadWords();
        org.stringtemplate.v4.STGroup sTGroup13 = python2Target1.loadTemplates();
        java.lang.String[] strArray14 = org.antlr.v4.codegen.target.Python2Target.python2Keywords;
        python2Target1.targetCharValueEscape = strArray14;
        org.antlr.v4.tool.Grammar grammar16 = null;
        org.stringtemplate.v4.ST sT17 = null;
        python2Target1.genRecognizerHeaderFile(grammar16, sT17, "_tset_tsetContext");
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "_@" + "'", str7, "_@");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "AContext" + "'", str9, "AContext");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "\"\\\"hi!\\\"\"" + "'", str11, "\"\\\"hi!\\\"\"");
        org.junit.Assert.assertNotNull(sTGroup13);
        org.junit.Assert.assertNotNull(strArray14);
    }

    @Test
    public void test1703() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1703");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str4 = python2Target1.encodeIntAsCharEscape(64);
        java.lang.String str5 = python2Target1.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = null;
        python2Target1.gen = codeGenerator6;
        boolean boolean8 = python2Target1.supportsOverloadedMethods();
        org.antlr.v4.codegen.CodeGenerator codeGenerator9 = null;
        python2Target1.gen = codeGenerator9;
        java.lang.String str11 = python2Target1.language;
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "@" + "'", str4, "@");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Python2" + "'", str5, "Python2");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Python2" + "'", str11, "Python2");
    }

    @Test
    public void test1704() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1704");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        boolean boolean2 = python2Target1.wantsBaseVisitor();
        java.util.Set<java.lang.String> strSet3 = python2Target1.badWords;
        java.util.Set<java.lang.String> strSet4 = python2Target1.getBadWords();
        java.util.Set<java.lang.String> strSet5 = python2Target1.badWords;
        int int6 = python2Target1.getSerializedATNSegmentLimit();
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = null;
        python2Target1.gen = codeGenerator7;
        boolean boolean9 = python2Target1.wantsBaseListener();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2147483647 + "'", int6 == 2147483647);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test1705() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1705");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str5 = python2Target1.getTargetStringLiteralFromString("hi!", false);
        java.lang.String str7 = python2Target1.getImplicitRuleLabel("@");
        python2Target1.addBadWords();
        boolean boolean9 = python2Target1.wantsBaseListener();
        java.lang.String str11 = python2Target1.getImplicitSetLabel("_tset");
        org.antlr.v4.codegen.CodeGenerator codeGenerator12 = python2Target1.getCodeGenerator();
        java.lang.String str14 = python2Target1.getImplicitSetLabel("tset6");
        python2Target1.addBadWords();
        java.lang.String str18 = python2Target1.getTargetStringLiteralFromString("_", true);
        org.antlr.v4.tool.Grammar grammar19 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator20 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target21 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator20);
        python2Target21.language = "\"\\\"hi!\\\"\"";
        java.lang.String str25 = python2Target21.encodeIntAsCharEscape((int) '4');
        org.antlr.v4.codegen.CodeGenerator codeGenerator26 = python2Target21.gen;
        org.antlr.v4.codegen.CodeGenerator codeGenerator27 = python2Target21.getCodeGenerator();
        java.lang.String[] strArray28 = python2Target21.targetCharValueEscape;
        org.antlr.v4.tool.Grammar grammar29 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target30 = new org.antlr.v4.codegen.target.Python2Target();
        python2Target30.addBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator32 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target33 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator32);
        java.util.Set<java.lang.String> strSet34 = python2Target33.badWords;
        java.lang.String str36 = python2Target33.getAltLabelContextStructName("\\\"\\\"");
        boolean boolean37 = python2Target33.wantsBaseVisitor();
        java.util.Set<java.lang.String> strSet38 = python2Target33.getBadWords();
        org.stringtemplate.v4.STGroup sTGroup39 = python2Target33.loadTemplates();
        python2Target30.templates = sTGroup39;
        org.antlr.v4.tool.Grammar grammar41 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator42 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target43 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator42);
        java.util.Set<java.lang.String> strSet44 = python2Target43.badWords;
        boolean boolean45 = python2Target43.wantsBaseVisitor();
        boolean boolean46 = python2Target43.wantsBaseVisitor();
        org.antlr.v4.codegen.CodeGenerator codeGenerator47 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target48 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator47);
        boolean boolean49 = python2Target48.wantsBaseVisitor();
        java.util.Set<java.lang.String> strSet50 = python2Target48.badWords;
        python2Target43.badWords = strSet50;
        org.antlr.v4.tool.Grammar grammar52 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator53 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target54 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator53);
        java.lang.String str56 = python2Target54.getImplicitSetLabel("");
        org.antlr.v4.codegen.CodeGenerator codeGenerator57 = null;
        java.lang.String str60 = python2Target54.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator57, "", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator61 = null;
        java.lang.String str64 = python2Target54.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator61, "\"\\\"\\\"\"", false);
        int int65 = python2Target54.getSerializedATNSegmentLimit();
        org.antlr.v4.tool.Grammar grammar66 = null;
        int[] intArray67 = new int[] {};
        java.lang.String[] strArray68 = python2Target54.getTokenTypesAsTargetLabels(grammar66, intArray67);
        java.lang.String[] strArray69 = python2Target43.getTokenTypesAsTargetLabels(grammar52, intArray67);
        java.lang.String[] strArray70 = python2Target30.getTokenTypesAsTargetLabels(grammar41, intArray67);
        java.lang.String[] strArray71 = python2Target21.getTokenTypesAsTargetLabels(grammar29, intArray67);
        java.lang.String[] strArray72 = python2Target1.getTokenTypesAsTargetLabels(grammar19, intArray67);
        org.antlr.v4.codegen.CodeGenerator codeGenerator73 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target74 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator73);
        java.util.Set<java.lang.String> strSet75 = python2Target74.badWords;
        java.lang.String str78 = python2Target74.getTargetStringLiteralFromString("hi!", false);
        int int79 = python2Target74.getInlineTestSetWordSize();
        boolean boolean80 = python2Target74.wantsBaseListener();
        python2Target74.language = "a";
        java.lang.String[] strArray83 = python2Target74.targetCharValueEscape;
        org.antlr.v4.codegen.target.Python2Target.python2Keywords = strArray83;
        org.antlr.v4.codegen.target.Python2Target.python2Keywords = strArray83;
        python2Target1.targetCharValueEscape = strArray83;
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "_@" + "'", str7, "_@");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "_tset_tset" + "'", str11, "_tset_tset");
        org.junit.Assert.assertNull(codeGenerator12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "_tsettset6" + "'", str14, "_tsettset6");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "\"_\"" + "'", str18, "\"_\"");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "\\64" + "'", str25, "\\64");
        org.junit.Assert.assertNull(codeGenerator26);
        org.junit.Assert.assertNull(codeGenerator27);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertNotNull(strSet34);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "\\\"\\\"Context" + "'", str36, "\\\"\\\"Context");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(strSet38);
        org.junit.Assert.assertNotNull(sTGroup39);
        org.junit.Assert.assertNotNull(strSet44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(strSet50);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "_tset" + "'", str56, "_tset");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "\"\"" + "'", str60, "\"\"");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "\\\"\\\"" + "'", str64, "\\\"\\\"");
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 2147483647 + "'", int65 == 2147483647);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[]");
        org.junit.Assert.assertNotNull(strArray68);
        org.junit.Assert.assertNotNull(strArray69);
        org.junit.Assert.assertNotNull(strArray70);
        org.junit.Assert.assertNotNull(strArray71);
        org.junit.Assert.assertNotNull(strArray72);
        org.junit.Assert.assertNotNull(strSet75);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "hi!" + "'", str78, "hi!");
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 64 + "'", int79 == 64);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(strArray83);
    }

    @Test
    public void test1706() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1706");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String str3 = python2Target1.getImplicitSetLabel("");
        org.antlr.v4.codegen.CodeGenerator codeGenerator4 = null;
        java.lang.String str7 = python2Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator4, "", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = null;
        java.lang.String str11 = python2Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator8, "\"\\\"\\\"\"", false);
        java.util.Set<java.lang.String> strSet12 = python2Target1.badWords;
        java.lang.String str14 = python2Target1.getTargetStringLiteralFromString("\"_AContext\"");
        org.stringtemplate.v4.STGroup sTGroup15 = python2Target1.loadTemplates();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "_tset" + "'", str3, "_tset");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "\"\"" + "'", str7, "\"\"");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "\\\"\\\"" + "'", str11, "\\\"\\\"");
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "\"\\\"_AContext\\\"\"" + "'", str14, "\"\\\"_AContext\\\"\"");
        org.junit.Assert.assertNotNull(sTGroup15);
    }

    @Test
    public void test1707() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1707");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String str3 = python2Target1.getImplicitSetLabel("");
        org.antlr.v4.codegen.CodeGenerator codeGenerator4 = null;
        java.lang.String str7 = python2Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator4, "", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = python2Target1.gen;
        org.stringtemplate.v4.STGroup sTGroup9 = python2Target1.getTemplates();
        org.stringtemplate.v4.STGroup sTGroup10 = python2Target1.templates;
        org.antlr.v4.codegen.CodeGenerator codeGenerator11 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target12 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator11);
        java.util.Set<java.lang.String> strSet13 = python2Target12.badWords;
        java.lang.String str15 = python2Target12.encodeIntAsCharEscape(64);
        org.antlr.v4.codegen.CodeGenerator codeGenerator16 = python2Target12.gen;
        org.antlr.v4.codegen.CodeGenerator codeGenerator17 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target18 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator17);
        java.util.Set<java.lang.String> strSet19 = python2Target18.badWords;
        boolean boolean20 = python2Target18.wantsBaseVisitor();
        boolean boolean21 = python2Target18.wantsBaseVisitor();
        org.antlr.v4.codegen.CodeGenerator codeGenerator22 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target23 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator22);
        boolean boolean24 = python2Target23.wantsBaseVisitor();
        java.util.Set<java.lang.String> strSet25 = python2Target23.badWords;
        python2Target18.badWords = strSet25;
        int int27 = python2Target18.getSerializedATNSegmentLimit();
        org.stringtemplate.v4.STGroup sTGroup28 = python2Target18.loadTemplates();
        python2Target12.templates = sTGroup28;
        org.antlr.v4.codegen.CodeGenerator codeGenerator30 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target31 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator30);
        python2Target31.language = "\"\\\"hi!\\\"\"";
        java.lang.String str35 = python2Target31.encodeIntAsCharEscape((int) '4');
        org.antlr.v4.codegen.CodeGenerator codeGenerator36 = python2Target31.gen;
        org.antlr.v4.codegen.CodeGenerator codeGenerator37 = python2Target31.getCodeGenerator();
        java.lang.String[] strArray38 = python2Target31.targetCharValueEscape;
        org.antlr.v4.tool.Grammar grammar39 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target40 = new org.antlr.v4.codegen.target.Python2Target();
        python2Target40.addBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator42 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target43 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator42);
        java.util.Set<java.lang.String> strSet44 = python2Target43.badWords;
        java.lang.String str46 = python2Target43.getAltLabelContextStructName("\\\"\\\"");
        boolean boolean47 = python2Target43.wantsBaseVisitor();
        java.util.Set<java.lang.String> strSet48 = python2Target43.getBadWords();
        org.stringtemplate.v4.STGroup sTGroup49 = python2Target43.loadTemplates();
        python2Target40.templates = sTGroup49;
        org.antlr.v4.tool.Grammar grammar51 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator52 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target53 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator52);
        java.util.Set<java.lang.String> strSet54 = python2Target53.badWords;
        boolean boolean55 = python2Target53.wantsBaseVisitor();
        boolean boolean56 = python2Target53.wantsBaseVisitor();
        org.antlr.v4.codegen.CodeGenerator codeGenerator57 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target58 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator57);
        boolean boolean59 = python2Target58.wantsBaseVisitor();
        java.util.Set<java.lang.String> strSet60 = python2Target58.badWords;
        python2Target53.badWords = strSet60;
        org.antlr.v4.tool.Grammar grammar62 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator63 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target64 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator63);
        java.lang.String str66 = python2Target64.getImplicitSetLabel("");
        org.antlr.v4.codegen.CodeGenerator codeGenerator67 = null;
        java.lang.String str70 = python2Target64.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator67, "", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator71 = null;
        java.lang.String str74 = python2Target64.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator71, "\"\\\"\\\"\"", false);
        int int75 = python2Target64.getSerializedATNSegmentLimit();
        org.antlr.v4.tool.Grammar grammar76 = null;
        int[] intArray77 = new int[] {};
        java.lang.String[] strArray78 = python2Target64.getTokenTypesAsTargetLabels(grammar76, intArray77);
        java.lang.String[] strArray79 = python2Target53.getTokenTypesAsTargetLabels(grammar62, intArray77);
        java.lang.String[] strArray80 = python2Target40.getTokenTypesAsTargetLabels(grammar51, intArray77);
        java.lang.String[] strArray81 = python2Target31.getTokenTypesAsTargetLabels(grammar39, intArray77);
        python2Target12.targetCharValueEscape = strArray81;
        org.antlr.v4.codegen.target.Python2Target.python2Keywords = strArray81;
        org.antlr.v4.codegen.target.Python2Target.python2Keywords = strArray81;
        python2Target1.targetCharValueEscape = strArray81;
        java.util.Set<java.lang.String> strSet86 = python2Target1.badWords;
        java.lang.String[] strArray87 = python2Target1.targetCharValueEscape;
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "_tset" + "'", str3, "_tset");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "\"\"" + "'", str7, "\"\"");
        org.junit.Assert.assertNull(codeGenerator8);
        org.junit.Assert.assertNotNull(sTGroup9);
        org.junit.Assert.assertNotNull(sTGroup10);
        org.junit.Assert.assertNotNull(strSet13);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "@" + "'", str15, "@");
        org.junit.Assert.assertNull(codeGenerator16);
        org.junit.Assert.assertNotNull(strSet19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(strSet25);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 2147483647 + "'", int27 == 2147483647);
        org.junit.Assert.assertNotNull(sTGroup28);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "\\64" + "'", str35, "\\64");
        org.junit.Assert.assertNull(codeGenerator36);
        org.junit.Assert.assertNull(codeGenerator37);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertNotNull(strSet44);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "\\\"\\\"Context" + "'", str46, "\\\"\\\"Context");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(strSet48);
        org.junit.Assert.assertNotNull(sTGroup49);
        org.junit.Assert.assertNotNull(strSet54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(strSet60);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "_tset" + "'", str66, "_tset");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "\"\"" + "'", str70, "\"\"");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "\\\"\\\"" + "'", str74, "\\\"\\\"");
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 2147483647 + "'", int75 == 2147483647);
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[]");
        org.junit.Assert.assertNotNull(strArray78);
        org.junit.Assert.assertNotNull(strArray79);
        org.junit.Assert.assertNotNull(strArray80);
        org.junit.Assert.assertNotNull(strArray81);
        org.junit.Assert.assertNotNull(strSet86);
        org.junit.Assert.assertNotNull(strArray87);
    }

    @Test
    public void test1708() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1708");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str5 = python2Target1.getTargetStringLiteralFromString("hi!", false);
        java.lang.String str7 = python2Target1.getImplicitRuleLabel("@");
        python2Target1.addBadWords();
        boolean boolean9 = python2Target1.wantsBaseListener();
        java.lang.String str11 = python2Target1.getImplicitSetLabel("_tset");
        org.antlr.v4.codegen.CodeGenerator codeGenerator12 = python2Target1.getCodeGenerator();
        java.lang.String str15 = python2Target1.getTargetStringLiteralFromString("\\1Context", true);
        java.util.Set<java.lang.String> strSet16 = python2Target1.badWords;
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "_@" + "'", str7, "_@");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "_tset_tset" + "'", str11, "_tset_tset");
        org.junit.Assert.assertNull(codeGenerator12);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "\"\\\\1Context\"" + "'", str15, "\"\\\\1Context\"");
        org.junit.Assert.assertNotNull(strSet16);
    }

    @Test
    public void test1709() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1709");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String[] strArray2 = python2Target1.targetCharValueEscape;
        java.lang.String str3 = python2Target1.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup4 = python2Target1.getTemplates();
        java.util.Set<java.lang.String> strSet5 = python2Target1.badWords;
        java.lang.String str6 = python2Target1.language;
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = python2Target1.gen;
        python2Target1.addBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator9 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target10 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator9);
        java.lang.String str12 = python2Target10.getImplicitSetLabel("");
        org.antlr.v4.codegen.CodeGenerator codeGenerator13 = null;
        java.lang.String str16 = python2Target10.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator13, "", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator17 = null;
        java.lang.String str20 = python2Target10.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator17, "\"\\\"\\\"\"", false);
        java.lang.String[] strArray21 = python2Target10.targetCharValueEscape;
        java.lang.String str23 = python2Target10.getImplicitRuleLabel("\"\\\"\\\\\\\\0\\\"\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator24 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target25 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator24);
        java.util.Set<java.lang.String> strSet26 = python2Target25.badWords;
        java.lang.String str29 = python2Target25.getTargetStringLiteralFromString("hi!", false);
        java.lang.String str31 = python2Target25.getImplicitRuleLabel("@");
        python2Target25.addBadWords();
        int int33 = python2Target25.getInlineTestSetWordSize();
        java.lang.String[] strArray34 = python2Target25.targetCharValueEscape;
        java.lang.String str36 = python2Target25.encodeIntAsCharEscape((int) ' ');
        java.util.Set<java.lang.String> strSet37 = python2Target25.getBadWords();
        org.stringtemplate.v4.STGroup sTGroup38 = python2Target25.loadTemplates();
        java.util.Set<java.lang.String> strSet39 = python2Target25.getBadWords();
        python2Target10.badWords = strSet39;
        python2Target1.badWords = strSet39;
        python2Target1.language = "_tset\\\"\\\\\\\"\\\\\\\"\\\\\\\"\\\"";
        org.antlr.v4.codegen.CodeGenerator codeGenerator44 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target45 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator44);
        java.util.Set<java.lang.String> strSet46 = python2Target45.badWords;
        java.lang.String str48 = python2Target45.encodeIntAsCharEscape(64);
        java.lang.String str49 = python2Target45.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator50 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target51 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator50);
        java.lang.String[] strArray52 = python2Target51.targetCharValueEscape;
        java.lang.String str53 = python2Target51.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup54 = python2Target51.getTemplates();
        python2Target45.templates = sTGroup54;
        java.util.Set<java.lang.String> strSet56 = python2Target45.getBadWords();
        java.lang.String str59 = python2Target45.getTargetStringLiteralFromString("\"hi!\"", true);
        org.stringtemplate.v4.STGroup sTGroup60 = python2Target45.templates;
        int int61 = python2Target45.getSerializedATNSegmentLimit();
        java.lang.String str63 = python2Target45.getImplicitSetLabel("\"\"Context");
        org.stringtemplate.v4.STGroup sTGroup64 = python2Target45.templates;
        python2Target1.templates = sTGroup64;
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Python2" + "'", str3, "Python2");
        org.junit.Assert.assertNotNull(sTGroup4);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Python2" + "'", str6, "Python2");
        org.junit.Assert.assertNull(codeGenerator7);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "_tset" + "'", str12, "_tset");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "\"\"" + "'", str16, "\"\"");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "\\\"\\\"" + "'", str20, "\\\"\\\"");
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "_\"\\\"\\\\\\\\0\\\"\"" + "'", str23, "_\"\\\"\\\\\\\\0\\\"\"");
        org.junit.Assert.assertNotNull(strSet26);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "hi!" + "'", str29, "hi!");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "_@" + "'", str31, "_@");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 64 + "'", int33 == 64);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + " " + "'", str36, " ");
        org.junit.Assert.assertNotNull(strSet37);
        org.junit.Assert.assertNotNull(sTGroup38);
        org.junit.Assert.assertNotNull(strSet39);
        org.junit.Assert.assertNotNull(strSet46);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "@" + "'", str48, "@");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "Python2" + "'", str49, "Python2");
        org.junit.Assert.assertNotNull(strArray52);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "Python2" + "'", str53, "Python2");
        org.junit.Assert.assertNotNull(sTGroup54);
        org.junit.Assert.assertNotNull(strSet56);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "\"\\\"hi!\\\"\"" + "'", str59, "\"\\\"hi!\\\"\"");
        org.junit.Assert.assertNotNull(sTGroup60);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 2147483647 + "'", int61 == 2147483647);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "_tset\"\"Context" + "'", str63, "_tset\"\"Context");
        org.junit.Assert.assertNotNull(sTGroup64);
    }

    @Test
    public void test1710() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1710");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str4 = python2Target1.encodeIntAsCharEscape(64);
        java.lang.String str7 = python2Target1.getTargetStringLiteralFromString("\"\"", true);
        java.lang.String str9 = python2Target1.getImplicitRuleLabel("hi!");
        boolean boolean10 = python2Target1.supportsOverloadedMethods();
        boolean boolean11 = python2Target1.templatesExist();
        org.antlr.v4.codegen.CodeGenerator codeGenerator12 = python2Target1.getCodeGenerator();
        org.antlr.v4.codegen.CodeGenerator codeGenerator13 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target14 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator13);
        java.util.Set<java.lang.String> strSet15 = python2Target14.badWords;
        java.lang.String str17 = python2Target14.encodeIntAsCharEscape(64);
        java.lang.String str18 = python2Target14.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator19 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target20 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator19);
        java.lang.String[] strArray21 = python2Target20.targetCharValueEscape;
        java.lang.String str22 = python2Target20.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup23 = python2Target20.getTemplates();
        python2Target14.templates = sTGroup23;
        java.util.Set<java.lang.String> strSet25 = python2Target14.getBadWords();
        java.lang.String str28 = python2Target14.getTargetStringLiteralFromString("\"hi!\"", true);
        int int29 = python2Target14.getInlineTestSetWordSize();
        int int30 = python2Target14.getSerializedATNSegmentLimit();
        org.stringtemplate.v4.STGroup sTGroup31 = python2Target14.getTemplates();
        boolean boolean32 = python2Target14.supportsOverloadedMethods();
        java.util.Set<java.lang.String> strSet33 = python2Target14.getBadWords();
        python2Target1.badWords = strSet33;
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "@" + "'", str4, "@");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "\"\\\"\\\"\"" + "'", str7, "\"\\\"\\\"\"");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "_hi!" + "'", str9, "_hi!");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(codeGenerator12);
        org.junit.Assert.assertNotNull(strSet15);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "@" + "'", str17, "@");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Python2" + "'", str18, "Python2");
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "Python2" + "'", str22, "Python2");
        org.junit.Assert.assertNotNull(sTGroup23);
        org.junit.Assert.assertNotNull(strSet25);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "\"\\\"hi!\\\"\"" + "'", str28, "\"\\\"hi!\\\"\"");
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 64 + "'", int29 == 64);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 2147483647 + "'", int30 == 2147483647);
        org.junit.Assert.assertNotNull(sTGroup31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(strSet33);
    }

    @Test
    public void test1711() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1711");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str4 = python2Target1.encodeIntAsCharEscape(64);
        java.lang.String str5 = python2Target1.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target7 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator6);
        java.lang.String[] strArray8 = python2Target7.targetCharValueEscape;
        java.lang.String str9 = python2Target7.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup10 = python2Target7.getTemplates();
        python2Target1.templates = sTGroup10;
        java.util.Set<java.lang.String> strSet12 = python2Target1.getBadWords();
        java.lang.String str15 = python2Target1.getTargetStringLiteralFromString("\"hi!\"", true);
        java.lang.String str17 = python2Target1.getAltLabelContextStructName("\\1");
        java.lang.String str18 = python2Target1.language;
        python2Target1.addBadWords();
        org.antlr.v4.tool.ast.GrammarAST grammarAST20 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str21 = python2Target1.getLoopCounter(grammarAST20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "@" + "'", str4, "@");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Python2" + "'", str5, "Python2");
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Python2" + "'", str9, "Python2");
        org.junit.Assert.assertNotNull(sTGroup10);
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "\"\\\"hi!\\\"\"" + "'", str15, "\"\\\"hi!\\\"\"");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "\\1Context" + "'", str17, "\\1Context");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Python2" + "'", str18, "Python2");
    }

    @Test
    public void test1712() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1712");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str5 = python2Target1.getTargetStringLiteralFromString("hi!", false);
        java.lang.String str7 = python2Target1.getImplicitRuleLabel("@");
        python2Target1.addBadWords();
        boolean boolean9 = python2Target1.wantsBaseListener();
        java.lang.String str11 = python2Target1.getImplicitSetLabel("_tset");
        org.antlr.v4.codegen.CodeGenerator codeGenerator12 = python2Target1.getCodeGenerator();
        java.lang.String str14 = python2Target1.getImplicitSetLabel("tset6");
        boolean boolean15 = python2Target1.wantsBaseListener();
        java.util.Set<java.lang.String> strSet16 = python2Target1.getBadWords();
        org.antlr.v4.tool.ast.GrammarAST grammarAST17 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str18 = python2Target1.getLoopCounter(grammarAST17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "_@" + "'", str7, "_@");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "_tset_tset" + "'", str11, "_tset_tset");
        org.junit.Assert.assertNull(codeGenerator12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "_tsettset6" + "'", str14, "_tsettset6");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(strSet16);
    }

    @Test
    public void test1713() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1713");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str4 = python2Target1.encodeIntAsCharEscape(64);
        java.lang.String str7 = python2Target1.getTargetStringLiteralFromString("\"\"", true);
        java.lang.String str9 = python2Target1.getImplicitRuleLabel("hi!");
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target11 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator10);
        java.util.Set<java.lang.String> strSet12 = python2Target11.badWords;
        java.lang.String str15 = python2Target11.getTargetStringLiteralFromString("hi!", false);
        int int16 = python2Target11.getInlineTestSetWordSize();
        boolean boolean17 = python2Target11.wantsBaseListener();
        java.lang.String str19 = python2Target11.encodeIntAsCharEscape((int) (byte) 10);
        org.antlr.v4.codegen.CodeGenerator codeGenerator20 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target21 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator20);
        java.lang.String[] strArray22 = python2Target21.targetCharValueEscape;
        java.lang.String str23 = python2Target21.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup24 = python2Target21.getTemplates();
        java.lang.String[] strArray25 = python2Target21.targetCharValueEscape;
        python2Target11.targetCharValueEscape = strArray25;
        python2Target1.targetCharValueEscape = strArray25;
        int int28 = python2Target1.getInlineTestSetWordSize();
        java.lang.String str29 = python2Target1.language;
        org.antlr.v4.codegen.CodeGenerator codeGenerator30 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target31 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator30);
        java.util.Set<java.lang.String> strSet32 = python2Target31.badWords;
        java.lang.String str35 = python2Target31.getTargetStringLiteralFromString("hi!", false);
        java.lang.String str37 = python2Target31.getImplicitRuleLabel("@");
        python2Target31.addBadWords();
        int int39 = python2Target31.getInlineTestSetWordSize();
        java.lang.String[] strArray40 = python2Target31.targetCharValueEscape;
        java.lang.String str42 = python2Target31.getListLabel("\"_@\"");
        java.lang.String str45 = python2Target31.getTargetStringLiteralFromString("\"hi!\"", false);
        java.lang.String str46 = python2Target31.getVersion();
        org.stringtemplate.v4.STGroup sTGroup47 = python2Target31.getTemplates();
        org.stringtemplate.v4.STGroup sTGroup48 = python2Target31.loadTemplates();
        python2Target1.templates = sTGroup48;
        java.util.Set<java.lang.String> strSet50 = python2Target1.badWords;
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "@" + "'", str4, "@");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "\"\\\"\\\"\"" + "'", str7, "\"\\\"\\\"\"");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "_hi!" + "'", str9, "_hi!");
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 64 + "'", int16 == 64);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "\\n" + "'", str19, "\\n");
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "Python2" + "'", str23, "Python2");
        org.junit.Assert.assertNotNull(sTGroup24);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 64 + "'", int28 == 64);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "Python2" + "'", str29, "Python2");
        org.junit.Assert.assertNotNull(strSet32);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!" + "'", str35, "hi!");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "_@" + "'", str37, "_@");
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 64 + "'", int39 == 64);
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "\"_@\"" + "'", str42, "\"_@\"");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "\\\"hi!\\\"" + "'", str45, "\\\"hi!\\\"");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "4.5.2.1" + "'", str46, "4.5.2.1");
        org.junit.Assert.assertNotNull(sTGroup47);
        org.junit.Assert.assertNotNull(sTGroup48);
        org.junit.Assert.assertNotNull(strSet50);
    }

    @Test
    public void test1714() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1714");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        boolean boolean2 = python2Target1.wantsBaseVisitor();
        java.util.Set<java.lang.String> strSet3 = python2Target1.badWords;
        java.lang.String str5 = python2Target1.getTargetStringLiteralFromString("");
        org.stringtemplate.v4.STGroup sTGroup6 = python2Target1.getTemplates();
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = python2Target1.getCodeGenerator();
        boolean boolean8 = python2Target1.wantsBaseListener();
        java.lang.String str9 = python2Target1.getLanguage();
        java.lang.String str10 = python2Target1.getLanguage();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "\"\"" + "'", str5, "\"\"");
        org.junit.Assert.assertNotNull(sTGroup6);
        org.junit.Assert.assertNull(codeGenerator7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Python2" + "'", str9, "Python2");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Python2" + "'", str10, "Python2");
    }

    @Test
    public void test1715() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1715");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String[] strArray2 = python2Target1.targetCharValueEscape;
        java.lang.String str3 = python2Target1.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup4 = python2Target1.getTemplates();
        java.lang.String[] strArray5 = python2Target1.targetCharValueEscape;
        java.lang.String[] strArray6 = org.antlr.v4.codegen.target.Python2Target.python2Keywords;
        python2Target1.targetCharValueEscape = strArray6;
        boolean boolean8 = python2Target1.supportsOverloadedMethods();
        org.antlr.v4.tool.Grammar grammar9 = null;
        org.stringtemplate.v4.ST sT10 = null;
        python2Target1.genRecognizerHeaderFile(grammar9, sT10, "\\1");
        org.antlr.v4.codegen.CodeGenerator codeGenerator13 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target14 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator13);
        java.lang.String str16 = python2Target14.getImplicitSetLabel("");
        org.antlr.v4.codegen.CodeGenerator codeGenerator17 = null;
        java.lang.String str20 = python2Target14.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator17, "", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator21 = null;
        java.lang.String str24 = python2Target14.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator21, "\"\\\"\\\"\"", false);
        int int25 = python2Target14.getSerializedATNSegmentLimit();
        org.stringtemplate.v4.STGroup sTGroup26 = python2Target14.loadTemplates();
        python2Target1.templates = sTGroup26;
        org.antlr.v4.tool.ast.GrammarAST grammarAST28 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str29 = python2Target1.getLoopCounter(grammarAST28);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Python2" + "'", str3, "Python2");
        org.junit.Assert.assertNotNull(sTGroup4);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "_tset" + "'", str16, "_tset");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "\"\"" + "'", str20, "\"\"");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "\\\"\\\"" + "'", str24, "\\\"\\\"");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 2147483647 + "'", int25 == 2147483647);
        org.junit.Assert.assertNotNull(sTGroup26);
    }

    @Test
    public void test1716() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1716");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str5 = python2Target1.getTargetStringLiteralFromString("hi!", false);
        java.lang.String str7 = python2Target1.getImplicitRuleLabel("@");
        python2Target1.addBadWords();
        boolean boolean9 = python2Target1.wantsBaseListener();
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target11 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator10);
        java.util.Set<java.lang.String> strSet12 = python2Target11.badWords;
        java.lang.String str14 = python2Target11.encodeIntAsCharEscape(64);
        java.lang.String str17 = python2Target11.getTargetStringLiteralFromString("\"\"", true);
        java.lang.String str19 = python2Target11.getImplicitRuleLabel("hi!");
        java.lang.String str22 = python2Target11.getTargetStringLiteralFromString("_hi!", true);
        org.stringtemplate.v4.STGroup sTGroup23 = python2Target11.templates;
        python2Target1.templates = sTGroup23;
        org.antlr.v4.tool.Grammar grammar25 = null;
        org.stringtemplate.v4.ST sT26 = null;
        python2Target1.genRecognizerHeaderFile(grammar25, sT26, "_tset\\n");
        java.lang.String str29 = python2Target1.getVersion();
        java.lang.String str31 = python2Target1.getListLabel("\"\\\"_@\\\"\"");
        java.lang.String str32 = python2Target1.getVersion();
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "_@" + "'", str7, "_@");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "@" + "'", str14, "@");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "\"\\\"\\\"\"" + "'", str17, "\"\\\"\\\"\"");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "_hi!" + "'", str19, "_hi!");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "\"_hi!\"" + "'", str22, "\"_hi!\"");
        org.junit.Assert.assertNotNull(sTGroup23);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "4.5.2.1" + "'", str29, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "\"\\\"_@\\\"\"" + "'", str31, "\"\\\"_@\\\"\"");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "4.5.2.1" + "'", str32, "4.5.2.1");
    }

    @Test
    public void test1717() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1717");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String str3 = python2Target1.getImplicitSetLabel("");
        org.antlr.v4.codegen.CodeGenerator codeGenerator4 = null;
        java.lang.String str7 = python2Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator4, "", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = python2Target1.gen;
        org.stringtemplate.v4.STGroup sTGroup9 = python2Target1.getTemplates();
        java.lang.String str10 = python2Target1.getLanguage();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "_tset" + "'", str3, "_tset");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "\"\"" + "'", str7, "\"\"");
        org.junit.Assert.assertNull(codeGenerator8);
        org.junit.Assert.assertNotNull(sTGroup9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Python2" + "'", str10, "Python2");
    }

    @Test
    public void test1718() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1718");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String str3 = python2Target1.getImplicitSetLabel("");
        org.antlr.v4.codegen.CodeGenerator codeGenerator4 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target5 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator4);
        java.util.Set<java.lang.String> strSet6 = python2Target5.badWords;
        java.lang.String str8 = python2Target5.encodeIntAsCharEscape(64);
        java.lang.String str9 = python2Target5.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target11 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator10);
        java.lang.String[] strArray12 = python2Target11.targetCharValueEscape;
        java.lang.String str13 = python2Target11.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup14 = python2Target11.getTemplates();
        python2Target5.templates = sTGroup14;
        python2Target1.templates = sTGroup14;
        org.antlr.v4.codegen.CodeGenerator codeGenerator17 = null;
        python2Target1.gen = codeGenerator17;
        org.antlr.v4.tool.ast.GrammarAST grammarAST19 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str20 = python2Target1.getLoopLabel(grammarAST19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "_tset" + "'", str3, "_tset");
        org.junit.Assert.assertNotNull(strSet6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "@" + "'", str8, "@");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Python2" + "'", str9, "Python2");
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Python2" + "'", str13, "Python2");
        org.junit.Assert.assertNotNull(sTGroup14);
    }

    @Test
    public void test1719() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1719");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str4 = python2Target1.getAltLabelContextStructName("\\\"\\\"");
        boolean boolean5 = python2Target1.wantsBaseVisitor();
        java.util.Set<java.lang.String> strSet6 = python2Target1.getBadWords();
        org.stringtemplate.v4.STGroup sTGroup7 = python2Target1.loadTemplates();
        org.stringtemplate.v4.STGroup sTGroup8 = null;
        python2Target1.templates = sTGroup8;
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = python2Target1.getCodeGenerator();
        python2Target1.language = "\"\\\\1Context\"Context";
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "\\\"\\\"Context" + "'", str4, "\\\"\\\"Context");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(strSet6);
        org.junit.Assert.assertNotNull(sTGroup7);
        org.junit.Assert.assertNull(codeGenerator10);
    }

    @Test
    public void test1720() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1720");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str5 = python2Target1.getTargetStringLiteralFromString("hi!", false);
        java.lang.String str7 = python2Target1.getImplicitRuleLabel("@");
        python2Target1.addBadWords();
        boolean boolean9 = python2Target1.wantsBaseListener();
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = python2Target1.getCodeGenerator();
        java.lang.String str12 = python2Target1.getImplicitSetLabel("_tset_\"Python2Context\"Context");
        org.antlr.v4.codegen.CodeGenerator codeGenerator13 = null;
        python2Target1.gen = codeGenerator13;
        org.antlr.v4.codegen.CodeGenerator codeGenerator15 = python2Target1.gen;
        int int16 = python2Target1.getSerializedATNSegmentLimit();
        java.lang.String str18 = python2Target1.getImplicitRuleLabel("Tset_\\\"Python2ContextContext");
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "_@" + "'", str7, "_@");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(codeGenerator10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "_tset_tset_\"Python2Context\"Context" + "'", str12, "_tset_tset_\"Python2Context\"Context");
        org.junit.Assert.assertNull(codeGenerator15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 2147483647 + "'", int16 == 2147483647);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "_Tset_\\\"Python2ContextContext" + "'", str18, "_Tset_\\\"Python2ContextContext");
    }

    @Test
    public void test1721() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1721");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str4 = python2Target1.getAltLabelContextStructName("\\\"\\\"");
        boolean boolean5 = python2Target1.wantsBaseVisitor();
        java.lang.String str7 = python2Target1.getImplicitRuleLabel("\"\\\"\\\"Contex\"");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str9 = python2Target1.getImplicitTokenLabel("\"_tset_\\\"Python2Context\\\"Context\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "\\\"\\\"Context" + "'", str4, "\\\"\\\"Context");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "_\"\\\"\\\"Contex\"" + "'", str7, "_\"\\\"\\\"Contex\"");
    }

    @Test
    public void test1722() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1722");
        org.antlr.v4.codegen.target.Python2Target python2Target0 = new org.antlr.v4.codegen.target.Python2Target();
        java.lang.String[] strArray1 = python2Target0.targetCharValueEscape;
        org.antlr.v4.codegen.CodeGenerator codeGenerator2 = null;
        java.lang.String str5 = python2Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator2, "\"_tset\"", false);
        python2Target0.language = "_hi!";
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "_tset" + "'", str5, "_tset");
    }

    @Test
    public void test1723() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1723");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str4 = python2Target1.encodeIntAsCharEscape(64);
        java.lang.String str5 = python2Target1.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target7 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator6);
        java.lang.String[] strArray8 = python2Target7.targetCharValueEscape;
        java.lang.String str9 = python2Target7.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup10 = python2Target7.getTemplates();
        python2Target1.templates = sTGroup10;
        java.util.Set<java.lang.String> strSet12 = python2Target1.getBadWords();
        java.lang.String str15 = python2Target1.getTargetStringLiteralFromString("\"hi!\"", true);
        org.stringtemplate.v4.STGroup sTGroup16 = python2Target1.templates;
        int int17 = python2Target1.getSerializedATNSegmentLimit();
        org.stringtemplate.v4.STGroup sTGroup18 = python2Target1.templates;
        java.lang.String str20 = python2Target1.getAltLabelContextStructName("\"\"Context");
        java.lang.String[] strArray21 = python2Target1.targetCharValueEscape;
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "@" + "'", str4, "@");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Python2" + "'", str5, "Python2");
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Python2" + "'", str9, "Python2");
        org.junit.Assert.assertNotNull(sTGroup10);
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "\"\\\"hi!\\\"\"" + "'", str15, "\"\\\"hi!\\\"\"");
        org.junit.Assert.assertNotNull(sTGroup16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 2147483647 + "'", int17 == 2147483647);
        org.junit.Assert.assertNotNull(sTGroup18);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "\"\"ContextContext" + "'", str20, "\"\"ContextContext");
        org.junit.Assert.assertNotNull(strArray21);
    }

    @Test
    public void test1724() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1724");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        python2Target1.language = "\"\\\"hi!\\\"\"";
        java.lang.String str5 = python2Target1.encodeIntAsCharEscape((int) '4');
        java.lang.String str6 = python2Target1.language;
        org.antlr.v4.tool.Grammar grammar7 = null;
        org.stringtemplate.v4.ST sT8 = null;
        python2Target1.genRecognizerHeaderFile(grammar7, sT8, "\"__tset\\\\64\"");
        python2Target1.addBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator12 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target13 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator12);
        java.util.Set<java.lang.String> strSet14 = python2Target13.badWords;
        java.lang.String str16 = python2Target13.encodeIntAsCharEscape(64);
        java.lang.String str17 = python2Target13.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator18 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target19 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator18);
        java.lang.String[] strArray20 = python2Target19.targetCharValueEscape;
        java.lang.String str21 = python2Target19.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup22 = python2Target19.getTemplates();
        python2Target13.templates = sTGroup22;
        java.util.Set<java.lang.String> strSet24 = python2Target13.getBadWords();
        java.lang.String str27 = python2Target13.getTargetStringLiteralFromString("\"hi!\"", true);
        int int28 = python2Target13.getInlineTestSetWordSize();
        int int29 = python2Target13.getSerializedATNSegmentLimit();
        java.lang.String str31 = python2Target13.encodeIntAsCharEscape(0);
        org.antlr.v4.codegen.CodeGenerator codeGenerator32 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target33 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator32);
        java.lang.String str35 = python2Target33.getImplicitSetLabel("");
        org.antlr.v4.codegen.CodeGenerator codeGenerator36 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target37 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator36);
        java.util.Set<java.lang.String> strSet38 = python2Target37.badWords;
        java.lang.String str40 = python2Target37.encodeIntAsCharEscape(64);
        java.lang.String str41 = python2Target37.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator42 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target43 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator42);
        java.lang.String[] strArray44 = python2Target43.targetCharValueEscape;
        java.lang.String str45 = python2Target43.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup46 = python2Target43.getTemplates();
        python2Target37.templates = sTGroup46;
        python2Target33.templates = sTGroup46;
        org.antlr.v4.tool.Grammar grammar49 = null;
        org.stringtemplate.v4.ST sT50 = null;
        python2Target33.genRecognizerHeaderFile(grammar49, sT50, "\\0");
        boolean boolean53 = python2Target33.wantsBaseListener();
        java.util.Set<java.lang.String> strSet54 = python2Target33.getBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator55 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target56 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator55);
        java.lang.String[] strArray57 = python2Target56.targetCharValueEscape;
        java.lang.String str58 = python2Target56.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup59 = python2Target56.getTemplates();
        java.lang.String[] strArray60 = python2Target56.targetCharValueEscape;
        java.lang.String[] strArray61 = org.antlr.v4.codegen.target.Python2Target.python2Keywords;
        python2Target56.targetCharValueEscape = strArray61;
        python2Target33.targetCharValueEscape = strArray61;
        python2Target13.targetCharValueEscape = strArray61;
        python2Target1.targetCharValueEscape = strArray61;
        org.antlr.v4.codegen.CodeGenerator codeGenerator66 = null;
        python2Target1.gen = codeGenerator66;
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "\\64" + "'", str5, "\\64");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\"\\\"hi!\\\"\"" + "'", str6, "\"\\\"hi!\\\"\"");
        org.junit.Assert.assertNotNull(strSet14);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "@" + "'", str16, "@");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Python2" + "'", str17, "Python2");
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Python2" + "'", str21, "Python2");
        org.junit.Assert.assertNotNull(sTGroup22);
        org.junit.Assert.assertNotNull(strSet24);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "\"\\\"hi!\\\"\"" + "'", str27, "\"\\\"hi!\\\"\"");
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 64 + "'", int28 == 64);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 2147483647 + "'", int29 == 2147483647);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "\\0" + "'", str31, "\\0");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "_tset" + "'", str35, "_tset");
        org.junit.Assert.assertNotNull(strSet38);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "@" + "'", str40, "@");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "Python2" + "'", str41, "Python2");
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "Python2" + "'", str45, "Python2");
        org.junit.Assert.assertNotNull(sTGroup46);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(strSet54);
        org.junit.Assert.assertNotNull(strArray57);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "Python2" + "'", str58, "Python2");
        org.junit.Assert.assertNotNull(sTGroup59);
        org.junit.Assert.assertNotNull(strArray60);
        org.junit.Assert.assertNotNull(strArray61);
    }

    @Test
    public void test1725() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1725");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str4 = python2Target1.getAltLabelContextStructName("\\\"\\\"");
        java.lang.String[] strArray5 = python2Target1.targetCharValueEscape;
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "\\\"\\\"Context" + "'", str4, "\\\"\\\"Context");
        org.junit.Assert.assertNotNull(strArray5);
    }

    @Test
    public void test1726() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1726");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str4 = python2Target1.encodeIntAsCharEscape(64);
        java.lang.String str5 = python2Target1.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target7 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator6);
        java.lang.String[] strArray8 = python2Target7.targetCharValueEscape;
        java.lang.String str9 = python2Target7.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup10 = python2Target7.getTemplates();
        python2Target1.templates = sTGroup10;
        java.util.Set<java.lang.String> strSet12 = python2Target1.getBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator13 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target14 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator13);
        java.util.Set<java.lang.String> strSet15 = python2Target14.badWords;
        java.lang.String str17 = python2Target14.encodeIntAsCharEscape(64);
        java.lang.String str20 = python2Target14.getTargetStringLiteralFromString("\"\"", true);
        java.lang.String str22 = python2Target14.getImplicitRuleLabel("hi!");
        java.lang.String str25 = python2Target14.getTargetStringLiteralFromString("_hi!", true);
        org.stringtemplate.v4.STGroup sTGroup26 = python2Target14.loadTemplates();
        python2Target1.templates = sTGroup26;
        python2Target1.addBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator29 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target30 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator29);
        org.stringtemplate.v4.STGroup sTGroup31 = python2Target30.templates;
        java.util.Set<java.lang.String> strSet32 = python2Target30.badWords;
        java.lang.String[] strArray33 = python2Target30.targetCharValueEscape;
        python2Target1.targetCharValueEscape = strArray33;
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "@" + "'", str4, "@");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Python2" + "'", str5, "Python2");
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Python2" + "'", str9, "Python2");
        org.junit.Assert.assertNotNull(sTGroup10);
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertNotNull(strSet15);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "@" + "'", str17, "@");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "\"\\\"\\\"\"" + "'", str20, "\"\\\"\\\"\"");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "_hi!" + "'", str22, "_hi!");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "\"_hi!\"" + "'", str25, "\"_hi!\"");
        org.junit.Assert.assertNotNull(sTGroup26);
        org.junit.Assert.assertNull(sTGroup31);
        org.junit.Assert.assertNotNull(strSet32);
        org.junit.Assert.assertNotNull(strArray33);
    }

    @Test
    public void test1727() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1727");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String str3 = python2Target1.getImplicitSetLabel("");
        org.antlr.v4.codegen.CodeGenerator codeGenerator4 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target5 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator4);
        java.util.Set<java.lang.String> strSet6 = python2Target5.badWords;
        java.lang.String str8 = python2Target5.encodeIntAsCharEscape(64);
        java.lang.String str9 = python2Target5.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target11 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator10);
        java.lang.String[] strArray12 = python2Target11.targetCharValueEscape;
        java.lang.String str13 = python2Target11.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup14 = python2Target11.getTemplates();
        python2Target5.templates = sTGroup14;
        python2Target1.templates = sTGroup14;
        java.lang.String str18 = python2Target1.getAltLabelContextStructName("Python2");
        java.lang.String str20 = python2Target1.getImplicitRuleLabel("_tset\\64");
        java.lang.String[] strArray21 = python2Target1.targetCharValueEscape;
        java.lang.String[] strArray22 = python2Target1.targetCharValueEscape;
        java.lang.String str24 = python2Target1.getAltLabelContextStructName("Tset_\\\"Python2ContextContextContext");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "_tset" + "'", str3, "_tset");
        org.junit.Assert.assertNotNull(strSet6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "@" + "'", str8, "@");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Python2" + "'", str9, "Python2");
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Python2" + "'", str13, "Python2");
        org.junit.Assert.assertNotNull(sTGroup14);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Python2Context" + "'", str18, "Python2Context");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "__tset\\64" + "'", str20, "__tset\\64");
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "Tset_\\\"Python2ContextContextContextContext" + "'", str24, "Tset_\\\"Python2ContextContextContextContext");
    }

    @Test
    public void test1728() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1728");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        boolean boolean2 = python2Target1.wantsBaseVisitor();
        java.util.Set<java.lang.String> strSet3 = python2Target1.badWords;
        java.util.Set<java.lang.String> strSet4 = python2Target1.getBadWords();
        java.util.Set<java.lang.String> strSet5 = python2Target1.badWords;
        java.lang.String str6 = python2Target1.language;
        org.antlr.v4.tool.Grammar grammar7 = null;
        org.stringtemplate.v4.ST sT8 = null;
        python2Target1.genRecognizerHeaderFile(grammar7, sT8, "\"\\\\\\\"\\\\\\\"Context\"");
        boolean boolean11 = python2Target1.wantsBaseListener();
        boolean boolean12 = python2Target1.templatesExist();
        java.lang.String str13 = python2Target1.getLanguage();
        java.lang.String str16 = python2Target1.getTargetStringLiteralFromString("_tset_\"\\\"Python2Context\\\"\"", true);
        org.stringtemplate.v4.STGroup sTGroup17 = python2Target1.templates;
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Python2" + "'", str6, "Python2");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Python2" + "'", str13, "Python2");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "\"_tset_\\\"\\\\\\\"Python2Context\\\\\\\"\\\"\"" + "'", str16, "\"_tset_\\\"\\\\\\\"Python2Context\\\\\\\"\\\"\"");
        org.junit.Assert.assertNull(sTGroup17);
    }

    @Test
    public void test1729() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1729");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        org.stringtemplate.v4.STGroup sTGroup2 = python2Target1.templates;
        int int3 = python2Target1.getInlineTestSetWordSize();
        int int4 = python2Target1.getSerializedATNSegmentLimit();
        org.antlr.v4.tool.Grammar grammar5 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target7 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator6);
        java.lang.String str9 = python2Target7.getImplicitSetLabel("");
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = null;
        java.lang.String str13 = python2Target7.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator10, "", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator14 = null;
        java.lang.String str17 = python2Target7.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator14, "\"\\\"\\\"\"", false);
        int int18 = python2Target7.getSerializedATNSegmentLimit();
        org.antlr.v4.tool.Grammar grammar19 = null;
        int[] intArray20 = new int[] {};
        java.lang.String[] strArray21 = python2Target7.getTokenTypesAsTargetLabels(grammar19, intArray20);
        java.lang.String[] strArray22 = python2Target1.getTokenTypesAsTargetLabels(grammar5, intArray20);
        org.antlr.v4.codegen.CodeGenerator codeGenerator23 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target24 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator23);
        java.util.Set<java.lang.String> strSet25 = python2Target24.badWords;
        java.lang.String str28 = python2Target24.getTargetStringLiteralFromString("hi!", false);
        java.lang.String str30 = python2Target24.getImplicitRuleLabel("@");
        python2Target24.addBadWords();
        int int32 = python2Target24.getInlineTestSetWordSize();
        python2Target24.addBadWords();
        java.lang.String[] strArray34 = python2Target24.targetCharValueEscape;
        org.antlr.v4.codegen.target.Python2Target.python2Keywords = strArray34;
        python2Target1.targetCharValueEscape = strArray34;
        org.antlr.v4.codegen.CodeGenerator codeGenerator37 = null;
        python2Target1.gen = codeGenerator37;
        org.antlr.v4.tool.Grammar grammar39 = null;
        org.stringtemplate.v4.ST sT40 = null;
        // The following exception was thrown during execution in test generation
        try {
            python2Target1.genFile(grammar39, sT40, "_tset_\"Python2Context\"Context");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 64 + "'", int3 == 64);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 2147483647 + "'", int4 == 2147483647);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "_tset" + "'", str9, "_tset");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "\"\"" + "'", str13, "\"\"");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "\\\"\\\"" + "'", str17, "\\\"\\\"");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 2147483647 + "'", int18 == 2147483647);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[]");
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertNotNull(strSet25);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "hi!" + "'", str28, "hi!");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "_@" + "'", str30, "_@");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 64 + "'", int32 == 64);
        org.junit.Assert.assertNotNull(strArray34);
    }

    @Test
    public void test1730() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1730");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str4 = python2Target1.encodeIntAsCharEscape(64);
        java.lang.String str7 = python2Target1.getTargetStringLiteralFromString("\"\"", true);
        java.lang.String str9 = python2Target1.getImplicitRuleLabel("hi!");
        java.lang.String str10 = python2Target1.getLanguage();
        java.lang.String str12 = python2Target1.getListLabel("\"_tset\\\\\\\\1Context\"");
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "@" + "'", str4, "@");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "\"\\\"\\\"\"" + "'", str7, "\"\\\"\\\"\"");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "_hi!" + "'", str9, "_hi!");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Python2" + "'", str10, "Python2");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "\"_tset\\\\\\\\1Context\"" + "'", str12, "\"_tset\\\\\\\\1Context\"");
    }

    @Test
    public void test1731() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1731");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str5 = python2Target1.getTargetStringLiteralFromString("hi!", false);
        java.lang.String str7 = python2Target1.getImplicitRuleLabel("@");
        java.lang.String str9 = python2Target1.getAltLabelContextStructName("a");
        java.lang.String str11 = python2Target1.getTargetStringLiteralFromString("4.5.2.1");
        java.lang.String[] strArray12 = python2Target1.targetCharValueEscape;
        org.antlr.v4.codegen.CodeGenerator codeGenerator13 = null;
        java.lang.String str16 = python2Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator13, "\"\\\"Python2Context\\\"\"", true);
        java.lang.String str18 = python2Target1.encodeIntAsCharEscape((int) (byte) 10);
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "_@" + "'", str7, "_@");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "AContext" + "'", str9, "AContext");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "\"4.5.2.1\"" + "'", str11, "\"4.5.2.1\"");
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "\"\\\"Python2Context\\\"\"" + "'", str16, "\"\\\"Python2Context\\\"\"");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "\\n" + "'", str18, "\\n");
    }

    @Test
    public void test1732() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1732");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str5 = python2Target1.getTargetStringLiteralFromString("hi!", false);
        int int6 = python2Target1.getInlineTestSetWordSize();
        java.lang.String str8 = python2Target1.getTargetStringLiteralFromString("_tset");
        java.lang.String str10 = python2Target1.getTargetStringLiteralFromString("Python2Context");
        java.lang.String str12 = python2Target1.getImplicitSetLabel("a");
        java.lang.String str14 = python2Target1.getImplicitRuleLabel("_tset\\64Context");
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 64 + "'", int6 == 64);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\"_tset\"" + "'", str8, "\"_tset\"");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\"Python2Context\"" + "'", str10, "\"Python2Context\"");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "_tseta" + "'", str12, "_tseta");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "__tset\\64Context" + "'", str14, "__tset\\64Context");
    }

    @Test
    public void test1733() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1733");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        boolean boolean2 = python2Target1.wantsBaseVisitor();
        java.util.Set<java.lang.String> strSet3 = python2Target1.badWords;
        java.util.Set<java.lang.String> strSet4 = python2Target1.getBadWords();
        java.util.Set<java.lang.String> strSet5 = python2Target1.badWords;
        boolean boolean6 = python2Target1.wantsBaseVisitor();
        java.lang.String str8 = python2Target1.getImplicitSetLabel("hi!");
        java.lang.String str10 = python2Target1.getImplicitSetLabel("\"_tset_\\\"\\\\\\\"Python2Context\\\\\\\"\\\"\"");
        python2Target1.addBadWords();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "_tsethi!" + "'", str8, "_tsethi!");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "_tset\"_tset_\\\"\\\\\\\"Python2Context\\\\\\\"\\\"\"" + "'", str10, "_tset\"_tset_\\\"\\\\\\\"Python2Context\\\\\\\"\\\"\"");
    }

    @Test
    public void test1734() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1734");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str4 = python2Target1.encodeIntAsCharEscape(64);
        org.antlr.v4.codegen.CodeGenerator codeGenerator5 = python2Target1.gen;
        java.lang.String str7 = python2Target1.encodeIntAsCharEscape(1);
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = python2Target1.getCodeGenerator();
        java.lang.String[] strArray9 = python2Target1.targetCharValueEscape;
        org.antlr.v4.codegen.target.Python2Target.python2Keywords = strArray9;
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "@" + "'", str4, "@");
        org.junit.Assert.assertNull(codeGenerator5);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "\\1" + "'", str7, "\\1");
        org.junit.Assert.assertNull(codeGenerator8);
        org.junit.Assert.assertNotNull(strArray9);
    }

    @Test
    public void test1735() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1735");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str5 = python2Target1.getTargetStringLiteralFromString("hi!", false);
        java.lang.String str7 = python2Target1.getImplicitRuleLabel("@");
        python2Target1.addBadWords();
        int int9 = python2Target1.getInlineTestSetWordSize();
        python2Target1.addBadWords();
        java.lang.String str13 = python2Target1.getTargetStringLiteralFromString("\"\\\"\\\"\\\"\"", true);
        boolean boolean14 = python2Target1.wantsBaseVisitor();
        boolean boolean15 = python2Target1.wantsBaseVisitor();
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "_@" + "'", str7, "_@");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 64 + "'", int9 == 64);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "\"\\\"\\\\\\\"\\\\\\\"\\\\\\\"\\\"\"" + "'", str13, "\"\\\"\\\\\\\"\\\\\\\"\\\\\\\"\\\"\"");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test1736() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1736");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str5 = python2Target1.getTargetStringLiteralFromString("hi!", false);
        java.lang.String str7 = python2Target1.getImplicitRuleLabel("@");
        python2Target1.addBadWords();
        boolean boolean9 = python2Target1.wantsBaseListener();
        java.lang.String str11 = python2Target1.getImplicitSetLabel("_tset");
        org.antlr.v4.codegen.CodeGenerator codeGenerator12 = python2Target1.getCodeGenerator();
        boolean boolean13 = python2Target1.templatesExist();
        org.stringtemplate.v4.STGroup sTGroup14 = python2Target1.templates;
        boolean boolean15 = python2Target1.wantsBaseVisitor();
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "_@" + "'", str7, "_@");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "_tset_tset" + "'", str11, "_tset_tset");
        org.junit.Assert.assertNull(codeGenerator12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(sTGroup14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test1737() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1737");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String str3 = python2Target1.getImplicitSetLabel("");
        org.antlr.v4.codegen.CodeGenerator codeGenerator4 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target5 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator4);
        java.util.Set<java.lang.String> strSet6 = python2Target5.badWords;
        java.lang.String str8 = python2Target5.encodeIntAsCharEscape(64);
        java.lang.String str9 = python2Target5.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target11 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator10);
        java.lang.String[] strArray12 = python2Target11.targetCharValueEscape;
        java.lang.String str13 = python2Target11.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup14 = python2Target11.getTemplates();
        python2Target5.templates = sTGroup14;
        python2Target1.templates = sTGroup14;
        org.stringtemplate.v4.STGroup sTGroup17 = python2Target1.templates;
        int int18 = python2Target1.getSerializedATNSegmentLimit();
        java.lang.String str19 = python2Target1.getVersion();
        java.util.Set<java.lang.String> strSet20 = python2Target1.badWords;
        org.antlr.v4.tool.ast.GrammarAST grammarAST21 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean22 = python2Target1.visibleGrammarSymbolCausesIssueInGeneratedCode(grammarAST21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "_tset" + "'", str3, "_tset");
        org.junit.Assert.assertNotNull(strSet6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "@" + "'", str8, "@");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Python2" + "'", str9, "Python2");
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Python2" + "'", str13, "Python2");
        org.junit.Assert.assertNotNull(sTGroup14);
        org.junit.Assert.assertNotNull(sTGroup17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 2147483647 + "'", int18 == 2147483647);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "4.5.2.1" + "'", str19, "4.5.2.1");
        org.junit.Assert.assertNotNull(strSet20);
    }

    @Test
    public void test1738() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1738");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        int int2 = python2Target1.getInlineTestSetWordSize();
        java.lang.String str4 = python2Target1.getListLabel("_@");
        org.antlr.v4.codegen.CodeGenerator codeGenerator5 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target6 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator5);
        java.util.Set<java.lang.String> strSet7 = python2Target6.badWords;
        java.lang.String str10 = python2Target6.getTargetStringLiteralFromString("hi!", false);
        java.lang.String str12 = python2Target6.getImplicitRuleLabel("@");
        java.lang.String str14 = python2Target6.getAltLabelContextStructName("a");
        java.lang.String str16 = python2Target6.getTargetStringLiteralFromString("4.5.2.1");
        java.lang.String[] strArray17 = python2Target6.targetCharValueEscape;
        python2Target1.targetCharValueEscape = strArray17;
        java.lang.String str20 = python2Target1.getAltLabelContextStructName("\"\\\\\\\"\\\\\\\"Context\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator21 = python2Target1.gen;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "_@" + "'", str4, "_@");
        org.junit.Assert.assertNotNull(strSet7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "_@" + "'", str12, "_@");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "AContext" + "'", str14, "AContext");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "\"4.5.2.1\"" + "'", str16, "\"4.5.2.1\"");
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "\"\\\\\\\"\\\\\\\"Context\"Context" + "'", str20, "\"\\\\\\\"\\\\\\\"Context\"Context");
        org.junit.Assert.assertNull(codeGenerator21);
    }

    @Test
    public void test1739() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1739");
        org.antlr.v4.codegen.target.Python2Target python2Target0 = new org.antlr.v4.codegen.target.Python2Target();
        java.lang.String str3 = python2Target0.getTargetStringLiteralFromString("hi!", true);
        java.lang.String str4 = python2Target0.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator5 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target6 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator5);
        python2Target6.language = "\"\\\"hi!\\\"\"";
        java.lang.String str10 = python2Target6.encodeIntAsCharEscape((int) '4');
        java.lang.String str11 = python2Target6.language;
        java.lang.String str13 = python2Target6.getTargetStringLiteralFromString("\"_@\"");
        java.lang.String[] strArray14 = python2Target6.targetCharValueEscape;
        org.antlr.v4.codegen.target.Python2Target.python2Keywords = strArray14;
        python2Target0.targetCharValueEscape = strArray14;
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "\"hi!\"" + "'", str3, "\"hi!\"");
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\\64" + "'", str10, "\\64");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "\"\\\"hi!\\\"\"" + "'", str11, "\"\\\"hi!\\\"\"");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "\"\\\"_@\\\"\"" + "'", str13, "\"\\\"_@\\\"\"");
        org.junit.Assert.assertNotNull(strArray14);
    }

    @Test
    public void test1740() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1740");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        org.antlr.v4.codegen.CodeGenerator codeGenerator2 = null;
        java.lang.String str5 = python2Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator2, "_@", false);
        python2Target1.addBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = null;
        python2Target1.gen = codeGenerator7;
        org.antlr.v4.codegen.CodeGenerator codeGenerator9 = python2Target1.getCodeGenerator();
        java.lang.String str10 = python2Target1.language;
        boolean boolean11 = python2Target1.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup12 = python2Target1.loadTemplates();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNull(codeGenerator9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Python2" + "'", str10, "Python2");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(sTGroup12);
    }

    @Test
    public void test1741() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1741");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str4 = python2Target1.encodeIntAsCharEscape(64);
        java.lang.String str5 = python2Target1.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target7 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator6);
        java.lang.String[] strArray8 = python2Target7.targetCharValueEscape;
        java.lang.String str9 = python2Target7.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup10 = python2Target7.getTemplates();
        python2Target1.templates = sTGroup10;
        java.lang.String str13 = python2Target1.getTargetStringLiteralFromString("_@");
        java.lang.String str14 = python2Target1.getVersion();
        boolean boolean15 = python2Target1.wantsBaseVisitor();
        org.stringtemplate.v4.STGroup sTGroup16 = python2Target1.templates;
        java.lang.String str17 = python2Target1.getVersion();
        java.lang.String str18 = python2Target1.getVersion();
        org.antlr.v4.tool.Grammar grammar19 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str21 = python2Target1.getTokenTypeAsTargetLabel(grammar19, (int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "@" + "'", str4, "@");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Python2" + "'", str5, "Python2");
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Python2" + "'", str9, "Python2");
        org.junit.Assert.assertNotNull(sTGroup10);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "\"_@\"" + "'", str13, "\"_@\"");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "4.5.2.1" + "'", str14, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(sTGroup16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "4.5.2.1" + "'", str17, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "4.5.2.1" + "'", str18, "4.5.2.1");
    }

    @Test
    public void test1742() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1742");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        org.stringtemplate.v4.STGroup sTGroup2 = python2Target1.templates;
        java.lang.String str4 = python2Target1.getImplicitRuleLabel("\"Python2Context\"");
        org.antlr.v4.tool.Grammar grammar5 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target7 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator6);
        java.util.Set<java.lang.String> strSet8 = python2Target7.badWords;
        boolean boolean9 = python2Target7.wantsBaseVisitor();
        boolean boolean10 = python2Target7.wantsBaseVisitor();
        org.antlr.v4.codegen.CodeGenerator codeGenerator11 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target12 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator11);
        boolean boolean13 = python2Target12.wantsBaseVisitor();
        java.util.Set<java.lang.String> strSet14 = python2Target12.badWords;
        python2Target7.badWords = strSet14;
        org.antlr.v4.tool.Grammar grammar16 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator17 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target18 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator17);
        java.lang.String str20 = python2Target18.getImplicitSetLabel("");
        org.antlr.v4.codegen.CodeGenerator codeGenerator21 = null;
        java.lang.String str24 = python2Target18.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator21, "", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator25 = null;
        java.lang.String str28 = python2Target18.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator25, "\"\\\"\\\"\"", false);
        int int29 = python2Target18.getSerializedATNSegmentLimit();
        org.antlr.v4.tool.Grammar grammar30 = null;
        int[] intArray31 = new int[] {};
        java.lang.String[] strArray32 = python2Target18.getTokenTypesAsTargetLabels(grammar30, intArray31);
        java.lang.String[] strArray33 = python2Target7.getTokenTypesAsTargetLabels(grammar16, intArray31);
        java.lang.String[] strArray34 = python2Target1.getTokenTypesAsTargetLabels(grammar5, intArray31);
        java.lang.String str35 = python2Target1.language;
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "_\"Python2Context\"" + "'", str4, "_\"Python2Context\"");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strSet14);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "_tset" + "'", str20, "_tset");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "\"\"" + "'", str24, "\"\"");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "\\\"\\\"" + "'", str28, "\\\"\\\"");
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 2147483647 + "'", int29 == 2147483647);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[]");
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "Python2" + "'", str35, "Python2");
    }

    @Test
    public void test1743() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1743");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str4 = python2Target1.encodeIntAsCharEscape(64);
        java.lang.String str5 = python2Target1.getLanguage();
        java.lang.String str8 = python2Target1.getTargetStringLiteralFromString("_@", false);
        org.stringtemplate.v4.STGroup sTGroup9 = python2Target1.templates;
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "@" + "'", str4, "@");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Python2" + "'", str5, "Python2");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "_@" + "'", str8, "_@");
        org.junit.Assert.assertNull(sTGroup9);
    }

    @Test
    public void test1744() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1744");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str5 = python2Target1.getTargetStringLiteralFromString("hi!", false);
        java.lang.String str7 = python2Target1.getImplicitRuleLabel("@");
        python2Target1.addBadWords();
        int int9 = python2Target1.getInlineTestSetWordSize();
        java.lang.String[] strArray10 = python2Target1.targetCharValueEscape;
        java.lang.String str12 = python2Target1.getListLabel("\"_@\"");
        java.lang.String[] strArray18 = new java.lang.String[] { "\"_@\"", "\"_@\"", "Python2Context", "\"hi!\"", "\"hi!\"" };
        python2Target1.targetCharValueEscape = strArray18;
        int int20 = python2Target1.getSerializedATNSegmentLimit();
        java.lang.String str22 = python2Target1.getImplicitSetLabel("\"\\\\\\\"\\\\\\\"Context\"Context");
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "_@" + "'", str7, "_@");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 64 + "'", int9 == 64);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "\"_@\"" + "'", str12, "\"_@\"");
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 2147483647 + "'", int20 == 2147483647);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "_tset\"\\\\\\\"\\\\\\\"Context\"Context" + "'", str22, "_tset\"\\\\\\\"\\\\\\\"Context\"Context");
    }

    @Test
    public void test1745() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1745");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String str3 = python2Target1.getImplicitSetLabel("");
        org.antlr.v4.codegen.CodeGenerator codeGenerator4 = null;
        java.lang.String str7 = python2Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator4, "", true);
        java.lang.String str8 = python2Target1.language;
        java.lang.String str10 = python2Target1.getAltLabelContextStructName("_tset_tseti");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "_tset" + "'", str3, "_tset");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "\"\"" + "'", str7, "\"\"");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Python2" + "'", str8, "Python2");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "_tset_tsetiContext" + "'", str10, "_tset_tsetiContext");
    }

    @Test
    public void test1746() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1746");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str5 = python2Target1.getTargetStringLiteralFromString("hi!", false);
        java.lang.String str7 = python2Target1.getImplicitRuleLabel("@");
        python2Target1.addBadWords();
        boolean boolean9 = python2Target1.wantsBaseListener();
        java.lang.String str11 = python2Target1.getImplicitSetLabel("_tset");
        org.antlr.v4.codegen.CodeGenerator codeGenerator12 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target13 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator12);
        java.lang.String[] strArray14 = python2Target13.targetCharValueEscape;
        java.lang.String str15 = python2Target13.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup16 = python2Target13.getTemplates();
        python2Target1.templates = sTGroup16;
        boolean boolean18 = python2Target1.wantsBaseListener();
        boolean boolean19 = python2Target1.wantsBaseVisitor();
        java.lang.String str20 = python2Target1.getLanguage();
        java.lang.String str22 = python2Target1.getImplicitRuleLabel("\"\\\"\\\"Contex\"");
        org.antlr.v4.tool.Grammar grammar23 = null;
        org.stringtemplate.v4.ST sT24 = null;
        // The following exception was thrown during execution in test generation
        try {
            python2Target1.genFile(grammar23, sT24, "_\\\"\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"Context\\\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "_@" + "'", str7, "_@");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "_tset_tset" + "'", str11, "_tset_tset");
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Python2" + "'", str15, "Python2");
        org.junit.Assert.assertNotNull(sTGroup16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "Python2" + "'", str20, "Python2");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "_\"\\\"\\\"Contex\"" + "'", str22, "_\"\\\"\\\"Contex\"");
    }

    @Test
    public void test1747() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1747");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str5 = python2Target1.getTargetStringLiteralFromString("hi!", false);
        java.lang.String str7 = python2Target1.getImplicitRuleLabel("@");
        python2Target1.addBadWords();
        boolean boolean9 = python2Target1.wantsBaseListener();
        int int10 = python2Target1.getInlineTestSetWordSize();
        java.lang.String str12 = python2Target1.getImplicitSetLabel("");
        org.stringtemplate.v4.STGroup sTGroup13 = python2Target1.loadTemplates();
        java.lang.String str14 = python2Target1.language;
        java.lang.String str16 = python2Target1.encodeIntAsCharEscape((int) '4');
        boolean boolean17 = python2Target1.supportsOverloadedMethods();
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "_@" + "'", str7, "_@");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 64 + "'", int10 == 64);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "_tset" + "'", str12, "_tset");
        org.junit.Assert.assertNotNull(sTGroup13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Python2" + "'", str14, "Python2");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "\\64" + "'", str16, "\\64");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    }

    @Test
    public void test1748() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1748");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str4 = python2Target1.encodeIntAsCharEscape(64);
        java.lang.String str5 = python2Target1.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target7 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator6);
        java.lang.String[] strArray8 = python2Target7.targetCharValueEscape;
        java.lang.String str9 = python2Target7.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup10 = python2Target7.getTemplates();
        python2Target1.templates = sTGroup10;
        java.util.Set<java.lang.String> strSet12 = python2Target1.getBadWords();
        java.lang.String str15 = python2Target1.getTargetStringLiteralFromString("\"hi!\"", true);
        org.stringtemplate.v4.STGroup sTGroup16 = python2Target1.templates;
        int int17 = python2Target1.getSerializedATNSegmentLimit();
        org.stringtemplate.v4.STGroup sTGroup18 = python2Target1.templates;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str20 = python2Target1.getElementListName("\"\\\\0\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "@" + "'", str4, "@");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Python2" + "'", str5, "Python2");
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Python2" + "'", str9, "Python2");
        org.junit.Assert.assertNotNull(sTGroup10);
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "\"\\\"hi!\\\"\"" + "'", str15, "\"\\\"hi!\\\"\"");
        org.junit.Assert.assertNotNull(sTGroup16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 2147483647 + "'", int17 == 2147483647);
        org.junit.Assert.assertNotNull(sTGroup18);
    }

    @Test
    public void test1749() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1749");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String[] strArray2 = python2Target1.targetCharValueEscape;
        boolean boolean3 = python2Target1.supportsOverloadedMethods();
        java.lang.String str4 = python2Target1.getLanguage();
        java.lang.String[] strArray5 = python2Target1.targetCharValueEscape;
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Python2" + "'", str4, "Python2");
        org.junit.Assert.assertNotNull(strArray5);
    }

    @Test
    public void test1750() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1750");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        boolean boolean2 = python2Target1.wantsBaseVisitor();
        java.util.Set<java.lang.String> strSet3 = python2Target1.badWords;
        java.lang.String str5 = python2Target1.getTargetStringLiteralFromString("");
        org.stringtemplate.v4.STGroup sTGroup6 = python2Target1.getTemplates();
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = python2Target1.getCodeGenerator();
        java.lang.String str8 = python2Target1.getVersion();
        java.util.Set<java.lang.String> strSet9 = python2Target1.getBadWords();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "\"\"" + "'", str5, "\"\"");
        org.junit.Assert.assertNotNull(sTGroup6);
        org.junit.Assert.assertNull(codeGenerator7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "4.5.2.1" + "'", str8, "4.5.2.1");
        org.junit.Assert.assertNotNull(strSet9);
    }

    @Test
    public void test1751() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1751");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        python2Target1.language = "\"\\\"hi!\\\"\"";
        java.lang.String str5 = python2Target1.encodeIntAsCharEscape((int) '4');
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = python2Target1.gen;
        java.util.Set<java.lang.String> strSet7 = python2Target1.getBadWords();
        java.lang.String str8 = python2Target1.language;
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "\\64" + "'", str5, "\\64");
        org.junit.Assert.assertNull(codeGenerator6);
        org.junit.Assert.assertNotNull(strSet7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\"\\\"hi!\\\"\"" + "'", str8, "\"\\\"hi!\\\"\"");
    }

    @Test
    public void test1752() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1752");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        boolean boolean2 = python2Target1.wantsBaseVisitor();
        java.util.Set<java.lang.String> strSet3 = python2Target1.badWords;
        java.lang.String str5 = python2Target1.getTargetStringLiteralFromString("");
        int int6 = python2Target1.getSerializedATNSegmentLimit();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "\"\"" + "'", str5, "\"\"");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2147483647 + "'", int6 == 2147483647);
    }

    @Test
    public void test1753() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1753");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str5 = python2Target1.getTargetStringLiteralFromString("hi!", false);
        java.lang.String str7 = python2Target1.getImplicitRuleLabel("@");
        python2Target1.addBadWords();
        int int9 = python2Target1.getInlineTestSetWordSize();
        python2Target1.addBadWords();
        boolean boolean11 = python2Target1.templatesExist();
        java.lang.String str13 = python2Target1.getImplicitRuleLabel("");
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "_@" + "'", str7, "_@");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 64 + "'", int9 == 64);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "_" + "'", str13, "_");
    }

    @Test
    public void test1754() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1754");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str4 = python2Target1.encodeIntAsCharEscape(64);
        java.lang.String str5 = python2Target1.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target7 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator6);
        java.lang.String[] strArray8 = python2Target7.targetCharValueEscape;
        java.lang.String str9 = python2Target7.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup10 = python2Target7.getTemplates();
        python2Target1.templates = sTGroup10;
        java.util.Set<java.lang.String> strSet12 = python2Target1.getBadWords();
        java.lang.String str15 = python2Target1.getTargetStringLiteralFromString("\"hi!\"", true);
        int int16 = python2Target1.getInlineTestSetWordSize();
        java.lang.String str18 = python2Target1.getTargetStringLiteralFromString("_");
        org.stringtemplate.v4.STGroup sTGroup19 = python2Target1.loadTemplates();
        boolean boolean20 = python2Target1.wantsBaseVisitor();
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "@" + "'", str4, "@");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Python2" + "'", str5, "Python2");
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Python2" + "'", str9, "Python2");
        org.junit.Assert.assertNotNull(sTGroup10);
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "\"\\\"hi!\\\"\"" + "'", str15, "\"\\\"hi!\\\"\"");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 64 + "'", int16 == 64);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "\"_\"" + "'", str18, "\"_\"");
        org.junit.Assert.assertNotNull(sTGroup19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    }

    @Test
    public void test1755() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1755");
        java.lang.String str1 = org.stringtemplate.v4.StringRenderer.escapeHTML("__\"\\\\\\\"\\\\\\\"Context\"");
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "__\"\\\\\\\"\\\\\\\"Context\"" + "'", str1, "__\"\\\\\\\"\\\\\\\"Context\"");
    }

    @Test
    public void test1756() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1756");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str5 = python2Target1.getTargetStringLiteralFromString("hi!", false);
        java.lang.String str7 = python2Target1.getImplicitRuleLabel("@");
        python2Target1.addBadWords();
        boolean boolean9 = python2Target1.wantsBaseListener();
        int int10 = python2Target1.getInlineTestSetWordSize();
        java.lang.String str11 = python2Target1.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator12 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target13 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator12);
        java.lang.String str15 = python2Target13.getImplicitSetLabel("");
        org.antlr.v4.codegen.CodeGenerator codeGenerator16 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target17 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator16);
        java.util.Set<java.lang.String> strSet18 = python2Target17.badWords;
        java.lang.String str20 = python2Target17.encodeIntAsCharEscape(64);
        java.lang.String str21 = python2Target17.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator22 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target23 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator22);
        java.lang.String[] strArray24 = python2Target23.targetCharValueEscape;
        java.lang.String str25 = python2Target23.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup26 = python2Target23.getTemplates();
        python2Target17.templates = sTGroup26;
        python2Target13.templates = sTGroup26;
        java.lang.String str30 = python2Target13.getAltLabelContextStructName("Python2");
        org.stringtemplate.v4.STGroup sTGroup31 = python2Target13.loadTemplates();
        python2Target1.templates = sTGroup31;
        org.antlr.v4.tool.Rule rule33 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str34 = python2Target1.getRuleFunctionContextStructName(rule33);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "_@" + "'", str7, "_@");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 64 + "'", int10 == 64);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "4.5.2.1" + "'", str11, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "_tset" + "'", str15, "_tset");
        org.junit.Assert.assertNotNull(strSet18);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "@" + "'", str20, "@");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Python2" + "'", str21, "Python2");
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Python2" + "'", str25, "Python2");
        org.junit.Assert.assertNotNull(sTGroup26);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "Python2Context" + "'", str30, "Python2Context");
        org.junit.Assert.assertNotNull(sTGroup31);
    }

    @Test
    public void test1757() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1757");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        org.stringtemplate.v4.STGroup sTGroup2 = python2Target1.templates;
        int int3 = python2Target1.getInlineTestSetWordSize();
        boolean boolean4 = python2Target1.wantsBaseVisitor();
        org.antlr.v4.codegen.CodeGenerator codeGenerator5 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target6 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator5);
        boolean boolean7 = python2Target6.wantsBaseVisitor();
        java.util.Set<java.lang.String> strSet8 = python2Target6.badWords;
        org.antlr.v4.codegen.CodeGenerator codeGenerator9 = python2Target6.getCodeGenerator();
        org.antlr.v4.tool.Grammar grammar10 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator11 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target12 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator11);
        python2Target12.language = "\"\\\"hi!\\\"\"";
        java.lang.String str16 = python2Target12.encodeIntAsCharEscape((int) '4');
        org.antlr.v4.codegen.CodeGenerator codeGenerator17 = python2Target12.gen;
        org.antlr.v4.codegen.CodeGenerator codeGenerator18 = python2Target12.getCodeGenerator();
        java.lang.String[] strArray19 = python2Target12.targetCharValueEscape;
        org.antlr.v4.tool.Grammar grammar20 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target21 = new org.antlr.v4.codegen.target.Python2Target();
        python2Target21.addBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator23 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target24 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator23);
        java.util.Set<java.lang.String> strSet25 = python2Target24.badWords;
        java.lang.String str27 = python2Target24.getAltLabelContextStructName("\\\"\\\"");
        boolean boolean28 = python2Target24.wantsBaseVisitor();
        java.util.Set<java.lang.String> strSet29 = python2Target24.getBadWords();
        org.stringtemplate.v4.STGroup sTGroup30 = python2Target24.loadTemplates();
        python2Target21.templates = sTGroup30;
        org.antlr.v4.tool.Grammar grammar32 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator33 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target34 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator33);
        java.util.Set<java.lang.String> strSet35 = python2Target34.badWords;
        boolean boolean36 = python2Target34.wantsBaseVisitor();
        boolean boolean37 = python2Target34.wantsBaseVisitor();
        org.antlr.v4.codegen.CodeGenerator codeGenerator38 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target39 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator38);
        boolean boolean40 = python2Target39.wantsBaseVisitor();
        java.util.Set<java.lang.String> strSet41 = python2Target39.badWords;
        python2Target34.badWords = strSet41;
        org.antlr.v4.tool.Grammar grammar43 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator44 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target45 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator44);
        java.lang.String str47 = python2Target45.getImplicitSetLabel("");
        org.antlr.v4.codegen.CodeGenerator codeGenerator48 = null;
        java.lang.String str51 = python2Target45.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator48, "", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator52 = null;
        java.lang.String str55 = python2Target45.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator52, "\"\\\"\\\"\"", false);
        int int56 = python2Target45.getSerializedATNSegmentLimit();
        org.antlr.v4.tool.Grammar grammar57 = null;
        int[] intArray58 = new int[] {};
        java.lang.String[] strArray59 = python2Target45.getTokenTypesAsTargetLabels(grammar57, intArray58);
        java.lang.String[] strArray60 = python2Target34.getTokenTypesAsTargetLabels(grammar43, intArray58);
        java.lang.String[] strArray61 = python2Target21.getTokenTypesAsTargetLabels(grammar32, intArray58);
        java.lang.String[] strArray62 = python2Target12.getTokenTypesAsTargetLabels(grammar20, intArray58);
        java.lang.String[] strArray63 = python2Target6.getTokenTypesAsTargetLabels(grammar10, intArray58);
        python2Target1.targetCharValueEscape = strArray63;
        org.antlr.v4.tool.ast.GrammarAST grammarAST65 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str66 = python2Target1.getLoopLabel(grammarAST65);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 64 + "'", int3 == 64);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertNull(codeGenerator9);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "\\64" + "'", str16, "\\64");
        org.junit.Assert.assertNull(codeGenerator17);
        org.junit.Assert.assertNull(codeGenerator18);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertNotNull(strSet25);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "\\\"\\\"Context" + "'", str27, "\\\"\\\"Context");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(strSet29);
        org.junit.Assert.assertNotNull(sTGroup30);
        org.junit.Assert.assertNotNull(strSet35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(strSet41);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "_tset" + "'", str47, "_tset");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "\"\"" + "'", str51, "\"\"");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "\\\"\\\"" + "'", str55, "\\\"\\\"");
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 2147483647 + "'", int56 == 2147483647);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[]");
        org.junit.Assert.assertNotNull(strArray59);
        org.junit.Assert.assertNotNull(strArray60);
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertNotNull(strArray62);
        org.junit.Assert.assertNotNull(strArray63);
    }

    @Test
    public void test1758() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1758");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str4 = python2Target1.encodeIntAsCharEscape(64);
        java.lang.String str5 = python2Target1.getLanguage();
        java.lang.String[] strArray11 = new java.lang.String[] { "\"hi!\"", "Python2", "Python2", "@", "_@" };
        java.util.LinkedHashSet<java.lang.String> strSet12 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet12, strArray11);
        python2Target1.badWords = strSet12;
        boolean boolean15 = python2Target1.wantsBaseVisitor();
        org.stringtemplate.v4.STGroup sTGroup16 = python2Target1.getTemplates();
        java.lang.String str17 = python2Target1.getLanguage();
        java.lang.String str20 = python2Target1.getTargetStringLiteralFromString("", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator21 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target22 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator21);
        java.util.Set<java.lang.String> strSet23 = python2Target22.badWords;
        java.lang.String str25 = python2Target22.encodeIntAsCharEscape(64);
        java.lang.String str28 = python2Target22.getTargetStringLiteralFromString("\"\"", true);
        java.lang.String str30 = python2Target22.getImplicitRuleLabel("hi!");
        org.antlr.v4.codegen.CodeGenerator codeGenerator31 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target32 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator31);
        java.util.Set<java.lang.String> strSet33 = python2Target32.badWords;
        java.lang.String str36 = python2Target32.getTargetStringLiteralFromString("hi!", false);
        int int37 = python2Target32.getInlineTestSetWordSize();
        boolean boolean38 = python2Target32.wantsBaseListener();
        java.lang.String str40 = python2Target32.encodeIntAsCharEscape((int) (byte) 10);
        org.antlr.v4.codegen.CodeGenerator codeGenerator41 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target42 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator41);
        java.lang.String[] strArray43 = python2Target42.targetCharValueEscape;
        java.lang.String str44 = python2Target42.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup45 = python2Target42.getTemplates();
        java.lang.String[] strArray46 = python2Target42.targetCharValueEscape;
        python2Target32.targetCharValueEscape = strArray46;
        python2Target22.targetCharValueEscape = strArray46;
        python2Target1.targetCharValueEscape = strArray46;
        org.antlr.v4.codegen.target.Python2Target.python2Keywords = strArray46;
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "@" + "'", str4, "@");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Python2" + "'", str5, "Python2");
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(sTGroup16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Python2" + "'", str17, "Python2");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "\"\"" + "'", str20, "\"\"");
        org.junit.Assert.assertNotNull(strSet23);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "@" + "'", str25, "@");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "\"\\\"\\\"\"" + "'", str28, "\"\\\"\\\"\"");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "_hi!" + "'", str30, "_hi!");
        org.junit.Assert.assertNotNull(strSet33);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "hi!" + "'", str36, "hi!");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 64 + "'", int37 == 64);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "\\n" + "'", str40, "\\n");
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "Python2" + "'", str44, "Python2");
        org.junit.Assert.assertNotNull(sTGroup45);
        org.junit.Assert.assertNotNull(strArray46);
    }

    @Test
    public void test1759() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1759");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        org.stringtemplate.v4.STGroup sTGroup2 = python2Target1.templates;
        int int3 = python2Target1.getInlineTestSetWordSize();
        java.lang.String str5 = python2Target1.encodeIntAsCharEscape(10);
        java.lang.String str7 = python2Target1.getTargetStringLiteralFromString("__tset6ContexContext");
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 64 + "'", int3 == 64);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "\\n" + "'", str5, "\\n");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "\"__tset6ContexContext\"" + "'", str7, "\"__tset6ContexContext\"");
    }

    @Test
    public void test1760() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1760");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str5 = python2Target1.getTargetStringLiteralFromString("hi!", false);
        java.lang.String str7 = python2Target1.getImplicitRuleLabel("@");
        python2Target1.addBadWords();
        boolean boolean9 = python2Target1.wantsBaseListener();
        int int10 = python2Target1.getInlineTestSetWordSize();
        java.lang.String str11 = python2Target1.getVersion();
        java.lang.String str13 = python2Target1.getTargetStringLiteralFromString("");
        java.lang.String str14 = python2Target1.getVersion();
        org.stringtemplate.v4.STGroup sTGroup15 = python2Target1.getTemplates();
        java.lang.String str17 = python2Target1.getImplicitSetLabel("_tset_tset\\n");
        org.stringtemplate.v4.STGroup sTGroup18 = python2Target1.templates;
        java.util.Set<java.lang.String> strSet19 = python2Target1.badWords;
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "_@" + "'", str7, "_@");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 64 + "'", int10 == 64);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "4.5.2.1" + "'", str11, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "\"\"" + "'", str13, "\"\"");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "4.5.2.1" + "'", str14, "4.5.2.1");
        org.junit.Assert.assertNotNull(sTGroup15);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "_tset_tset_tset\\n" + "'", str17, "_tset_tset_tset\\n");
        org.junit.Assert.assertNotNull(sTGroup18);
        org.junit.Assert.assertNotNull(strSet19);
    }

    @Test
    public void test1761() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1761");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String[] strArray2 = python2Target1.targetCharValueEscape;
        java.lang.String str4 = python2Target1.getImplicitSetLabel("\\64");
        java.lang.String[] strArray5 = python2Target1.targetCharValueEscape;
        org.stringtemplate.v4.STGroup sTGroup6 = python2Target1.getTemplates();
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target8 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator7);
        java.util.Set<java.lang.String> strSet9 = python2Target8.badWords;
        java.lang.String str11 = python2Target8.encodeIntAsCharEscape(64);
        java.lang.String str14 = python2Target8.getTargetStringLiteralFromString("\"\"", true);
        java.lang.String str16 = python2Target8.getImplicitRuleLabel("hi!");
        org.antlr.v4.codegen.CodeGenerator codeGenerator17 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target18 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator17);
        java.util.Set<java.lang.String> strSet19 = python2Target18.badWords;
        java.lang.String str22 = python2Target18.getTargetStringLiteralFromString("hi!", false);
        int int23 = python2Target18.getInlineTestSetWordSize();
        boolean boolean24 = python2Target18.wantsBaseListener();
        java.lang.String str26 = python2Target18.encodeIntAsCharEscape((int) (byte) 10);
        org.antlr.v4.codegen.CodeGenerator codeGenerator27 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target28 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator27);
        java.lang.String[] strArray29 = python2Target28.targetCharValueEscape;
        java.lang.String str30 = python2Target28.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup31 = python2Target28.getTemplates();
        java.lang.String[] strArray32 = python2Target28.targetCharValueEscape;
        python2Target18.targetCharValueEscape = strArray32;
        python2Target8.targetCharValueEscape = strArray32;
        int int35 = python2Target8.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet36 = python2Target8.badWords;
        python2Target1.badWords = strSet36;
        int int38 = python2Target1.getSerializedATNSegmentLimit();
        org.antlr.v4.codegen.CodeGenerator codeGenerator39 = python2Target1.getCodeGenerator();
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "_tset\\64" + "'", str4, "_tset\\64");
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(sTGroup6);
        org.junit.Assert.assertNotNull(strSet9);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "@" + "'", str11, "@");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "\"\\\"\\\"\"" + "'", str14, "\"\\\"\\\"\"");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "_hi!" + "'", str16, "_hi!");
        org.junit.Assert.assertNotNull(strSet19);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "hi!" + "'", str22, "hi!");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 64 + "'", int23 == 64);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "\\n" + "'", str26, "\\n");
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "Python2" + "'", str30, "Python2");
        org.junit.Assert.assertNotNull(sTGroup31);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 64 + "'", int35 == 64);
        org.junit.Assert.assertNotNull(strSet36);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 2147483647 + "'", int38 == 2147483647);
        org.junit.Assert.assertNull(codeGenerator39);
    }

    @Test
    public void test1762() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1762");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str4 = python2Target1.encodeIntAsCharEscape(64);
        java.lang.String str5 = python2Target1.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target7 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator6);
        java.lang.String[] strArray8 = python2Target7.targetCharValueEscape;
        java.lang.String str9 = python2Target7.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup10 = python2Target7.getTemplates();
        python2Target1.templates = sTGroup10;
        java.util.Set<java.lang.String> strSet12 = python2Target1.getBadWords();
        boolean boolean13 = python2Target1.wantsBaseVisitor();
        java.lang.String str14 = python2Target1.getLanguage();
        boolean boolean15 = python2Target1.wantsBaseVisitor();
        java.lang.String str18 = python2Target1.getTargetStringLiteralFromString("_@", true);
        org.antlr.v4.codegen.model.RuleFunction ruleFunction19 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str20 = python2Target1.getRuleFunctionContextStructName(ruleFunction19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "@" + "'", str4, "@");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Python2" + "'", str5, "Python2");
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Python2" + "'", str9, "Python2");
        org.junit.Assert.assertNotNull(sTGroup10);
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Python2" + "'", str14, "Python2");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "\"_@\"" + "'", str18, "\"_@\"");
    }

    @Test
    public void test1763() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1763");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String[] strArray2 = python2Target1.targetCharValueEscape;
        java.lang.String str3 = python2Target1.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup4 = python2Target1.getTemplates();
        java.lang.String[] strArray5 = python2Target1.targetCharValueEscape;
        java.lang.String[] strArray6 = org.antlr.v4.codegen.target.Python2Target.python2Keywords;
        python2Target1.targetCharValueEscape = strArray6;
        boolean boolean8 = python2Target1.supportsOverloadedMethods();
        org.antlr.v4.tool.Grammar grammar9 = null;
        org.stringtemplate.v4.ST sT10 = null;
        python2Target1.genRecognizerHeaderFile(grammar9, sT10, "\"\\\"_tset\\\"\"");
        int int13 = python2Target1.getSerializedATNSegmentLimit();
        org.antlr.v4.tool.Grammar grammar14 = null;
        org.stringtemplate.v4.ST sT15 = null;
        python2Target1.genRecognizerHeaderFile(grammar14, sT15, "\"__tset\\\"\\\\\\\"\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"\\\\\\\"Context\\\"\"");
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Python2" + "'", str3, "Python2");
        org.junit.Assert.assertNotNull(sTGroup4);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2147483647 + "'", int13 == 2147483647);
    }

    @Test
    public void test1764() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1764");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str5 = python2Target1.getTargetStringLiteralFromString("hi!", false);
        java.lang.String str7 = python2Target1.getImplicitRuleLabel("@");
        python2Target1.addBadWords();
        boolean boolean9 = python2Target1.wantsBaseListener();
        java.lang.String str11 = python2Target1.getImplicitSetLabel("_tset");
        org.antlr.v4.codegen.CodeGenerator codeGenerator12 = python2Target1.getCodeGenerator();
        boolean boolean13 = python2Target1.templatesExist();
        org.stringtemplate.v4.STGroup sTGroup14 = python2Target1.templates;
        org.antlr.v4.codegen.CodeGenerator codeGenerator15 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target16 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator15);
        java.util.Set<java.lang.String> strSet17 = python2Target16.badWords;
        java.lang.String str20 = python2Target16.getTargetStringLiteralFromString("hi!", false);
        int int21 = python2Target16.getInlineTestSetWordSize();
        boolean boolean22 = python2Target16.wantsBaseListener();
        java.util.Set<java.lang.String> strSet23 = python2Target16.badWords;
        java.util.Set<java.lang.String> strSet24 = python2Target16.badWords;
        int int25 = python2Target16.getSerializedATNSegmentLimit();
        org.antlr.v4.codegen.CodeGenerator codeGenerator26 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target27 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator26);
        org.stringtemplate.v4.STGroup sTGroup28 = python2Target27.templates;
        int int29 = python2Target27.getInlineTestSetWordSize();
        boolean boolean30 = python2Target27.templatesExist();
        org.stringtemplate.v4.STGroup sTGroup31 = python2Target27.getTemplates();
        python2Target16.templates = sTGroup31;
        python2Target1.templates = sTGroup31;
        java.lang.String str34 = python2Target1.getVersion();
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "_@" + "'", str7, "_@");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "_tset_tset" + "'", str11, "_tset_tset");
        org.junit.Assert.assertNull(codeGenerator12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(sTGroup14);
        org.junit.Assert.assertNotNull(strSet17);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "hi!" + "'", str20, "hi!");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 64 + "'", int21 == 64);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(strSet23);
        org.junit.Assert.assertNotNull(strSet24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 2147483647 + "'", int25 == 2147483647);
        org.junit.Assert.assertNull(sTGroup28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 64 + "'", int29 == 64);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(sTGroup31);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "4.5.2.1" + "'", str34, "4.5.2.1");
    }

    @Test
    public void test1765() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1765");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str4 = python2Target1.getAltLabelContextStructName("\\\"\\\"");
        boolean boolean5 = python2Target1.wantsBaseVisitor();
        java.lang.String str7 = python2Target1.getImplicitRuleLabel("\"\\\"\\\"Contex\"");
        org.antlr.v4.tool.ast.GrammarAST grammarAST8 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str9 = python2Target1.getLoopCounter(grammarAST8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "\\\"\\\"Context" + "'", str4, "\\\"\\\"Context");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "_\"\\\"\\\"Contex\"" + "'", str7, "_\"\\\"\\\"Contex\"");
    }

    @Test
    public void test1766() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1766");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str5 = python2Target1.getTargetStringLiteralFromString("hi!", false);
        java.lang.String str7 = python2Target1.getImplicitRuleLabel("@");
        python2Target1.addBadWords();
        int int9 = python2Target1.getInlineTestSetWordSize();
        java.lang.String[] strArray10 = python2Target1.targetCharValueEscape;
        java.lang.String str12 = python2Target1.getListLabel("\"_@\"");
        java.lang.String str15 = python2Target1.getTargetStringLiteralFromString("\"hi!\"", false);
        java.lang.String str17 = python2Target1.encodeIntAsCharEscape(1);
        org.stringtemplate.v4.STGroup sTGroup18 = python2Target1.loadTemplates();
        org.antlr.v4.codegen.CodeGenerator codeGenerator19 = null;
        java.lang.String str22 = python2Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator19, "_\"\\\"Python2Context\\\"\"", true);
        boolean boolean23 = python2Target1.wantsBaseVisitor();
        int int24 = python2Target1.getInlineTestSetWordSize();
        org.stringtemplate.v4.STGroup sTGroup25 = python2Target1.getTemplates();
        org.antlr.v4.tool.Grammar grammar26 = null;
        org.stringtemplate.v4.ST sT27 = null;
        // The following exception was thrown during execution in test generation
        try {
            python2Target1.genFile(grammar26, sT27, "\\64");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "_@" + "'", str7, "_@");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 64 + "'", int9 == 64);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "\"_@\"" + "'", str12, "\"_@\"");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "\\\"hi!\\\"" + "'", str15, "\\\"hi!\\\"");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "\\1" + "'", str17, "\\1");
        org.junit.Assert.assertNotNull(sTGroup18);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "\"\\\"\\\"Python2Context\\\"\"" + "'", str22, "\"\\\"\\\"Python2Context\\\"\"");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 64 + "'", int24 == 64);
        org.junit.Assert.assertNotNull(sTGroup25);
    }

    @Test
    public void test1767() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1767");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str4 = python2Target1.encodeIntAsCharEscape(64);
        java.lang.String str5 = python2Target1.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = null;
        python2Target1.gen = codeGenerator6;
        java.lang.String str9 = python2Target1.getListLabel("\\64");
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "@" + "'", str4, "@");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Python2" + "'", str5, "Python2");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\\64" + "'", str9, "\\64");
    }

    @Test
    public void test1768() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1768");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String str3 = python2Target1.getImplicitSetLabel("");
        org.antlr.v4.codegen.CodeGenerator codeGenerator4 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target5 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator4);
        java.util.Set<java.lang.String> strSet6 = python2Target5.badWords;
        java.lang.String str8 = python2Target5.encodeIntAsCharEscape(64);
        java.lang.String str9 = python2Target5.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target11 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator10);
        java.lang.String[] strArray12 = python2Target11.targetCharValueEscape;
        java.lang.String str13 = python2Target11.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup14 = python2Target11.getTemplates();
        python2Target5.templates = sTGroup14;
        python2Target1.templates = sTGroup14;
        org.antlr.v4.tool.Grammar grammar17 = null;
        org.stringtemplate.v4.ST sT18 = null;
        python2Target1.genRecognizerHeaderFile(grammar17, sT18, "\\0");
        boolean boolean21 = python2Target1.wantsBaseListener();
        org.antlr.v4.codegen.CodeGenerator codeGenerator22 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target23 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator22);
        java.util.Set<java.lang.String> strSet24 = python2Target23.badWords;
        java.lang.String str27 = python2Target23.getTargetStringLiteralFromString("hi!", false);
        java.lang.String str29 = python2Target23.getImplicitRuleLabel("@");
        python2Target23.addBadWords();
        int int31 = python2Target23.getInlineTestSetWordSize();
        java.lang.String[] strArray32 = python2Target23.targetCharValueEscape;
        java.lang.String str34 = python2Target23.getListLabel("\"_@\"");
        java.lang.String str37 = python2Target23.getTargetStringLiteralFromString("\"hi!\"", false);
        java.lang.String str39 = python2Target23.encodeIntAsCharEscape(1);
        java.lang.String str41 = python2Target23.getListLabel("\"\"");
        org.antlr.v4.tool.Grammar grammar42 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator43 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target44 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator43);
        java.util.Set<java.lang.String> strSet45 = python2Target44.badWords;
        boolean boolean46 = python2Target44.wantsBaseVisitor();
        boolean boolean47 = python2Target44.wantsBaseVisitor();
        org.antlr.v4.codegen.CodeGenerator codeGenerator48 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target49 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator48);
        boolean boolean50 = python2Target49.wantsBaseVisitor();
        java.util.Set<java.lang.String> strSet51 = python2Target49.badWords;
        python2Target44.badWords = strSet51;
        org.antlr.v4.tool.Grammar grammar53 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator54 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target55 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator54);
        java.lang.String str57 = python2Target55.getImplicitSetLabel("");
        org.antlr.v4.codegen.CodeGenerator codeGenerator58 = null;
        java.lang.String str61 = python2Target55.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator58, "", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator62 = null;
        java.lang.String str65 = python2Target55.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator62, "\"\\\"\\\"\"", false);
        int int66 = python2Target55.getSerializedATNSegmentLimit();
        org.antlr.v4.tool.Grammar grammar67 = null;
        int[] intArray68 = new int[] {};
        java.lang.String[] strArray69 = python2Target55.getTokenTypesAsTargetLabels(grammar67, intArray68);
        java.lang.String[] strArray70 = python2Target44.getTokenTypesAsTargetLabels(grammar53, intArray68);
        java.lang.String[] strArray71 = python2Target23.getTokenTypesAsTargetLabels(grammar42, intArray68);
        python2Target1.targetCharValueEscape = strArray71;
        java.lang.String str73 = python2Target1.getLanguage();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "_tset" + "'", str3, "_tset");
        org.junit.Assert.assertNotNull(strSet6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "@" + "'", str8, "@");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Python2" + "'", str9, "Python2");
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Python2" + "'", str13, "Python2");
        org.junit.Assert.assertNotNull(sTGroup14);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(strSet24);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "hi!" + "'", str27, "hi!");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "_@" + "'", str29, "_@");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 64 + "'", int31 == 64);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "\"_@\"" + "'", str34, "\"_@\"");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "\\\"hi!\\\"" + "'", str37, "\\\"hi!\\\"");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "\\1" + "'", str39, "\\1");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "\"\"" + "'", str41, "\"\"");
        org.junit.Assert.assertNotNull(strSet45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(strSet51);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "_tset" + "'", str57, "_tset");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "\"\"" + "'", str61, "\"\"");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "\\\"\\\"" + "'", str65, "\\\"\\\"");
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 2147483647 + "'", int66 == 2147483647);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[]");
        org.junit.Assert.assertNotNull(strArray69);
        org.junit.Assert.assertNotNull(strArray70);
        org.junit.Assert.assertNotNull(strArray71);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "Python2" + "'", str73, "Python2");
    }

    @Test
    public void test1769() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1769");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        org.stringtemplate.v4.STGroup sTGroup2 = python2Target1.templates;
        int int3 = python2Target1.getInlineTestSetWordSize();
        python2Target1.language = "\"\\\"\\\"\\\"\"";
        java.util.Set<java.lang.String> strSet6 = python2Target1.getBadWords();
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 64 + "'", int3 == 64);
        org.junit.Assert.assertNotNull(strSet6);
    }

    @Test
    public void test1770() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1770");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String str3 = python2Target1.getImplicitSetLabel("");
        org.antlr.v4.codegen.CodeGenerator codeGenerator4 = null;
        java.lang.String str7 = python2Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator4, "", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = null;
        java.lang.String str11 = python2Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator8, "\"\\\"\\\"\"", false);
        java.util.Set<java.lang.String> strSet12 = python2Target1.badWords;
        java.lang.String str14 = python2Target1.getAltLabelContextStructName("\\64");
        org.antlr.v4.codegen.CodeGenerator codeGenerator15 = python2Target1.gen;
        java.lang.String str18 = python2Target1.getTargetStringLiteralFromString("Python2", true);
        org.antlr.v4.tool.ast.GrammarAST grammarAST19 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str20 = python2Target1.getLoopLabel(grammarAST19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "_tset" + "'", str3, "_tset");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "\"\"" + "'", str7, "\"\"");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "\\\"\\\"" + "'", str11, "\\\"\\\"");
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "\\64Context" + "'", str14, "\\64Context");
        org.junit.Assert.assertNull(codeGenerator15);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "\"Python2\"" + "'", str18, "\"Python2\"");
    }

    @Test
    public void test1771() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1771");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String str3 = python2Target1.getImplicitSetLabel("");
        org.antlr.v4.codegen.CodeGenerator codeGenerator4 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target5 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator4);
        java.util.Set<java.lang.String> strSet6 = python2Target5.badWords;
        java.lang.String str8 = python2Target5.encodeIntAsCharEscape(64);
        java.lang.String str9 = python2Target5.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target11 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator10);
        java.lang.String[] strArray12 = python2Target11.targetCharValueEscape;
        java.lang.String str13 = python2Target11.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup14 = python2Target11.getTemplates();
        python2Target5.templates = sTGroup14;
        python2Target1.templates = sTGroup14;
        java.lang.String str18 = python2Target1.getAltLabelContextStructName("Python2");
        org.stringtemplate.v4.STGroup sTGroup19 = python2Target1.loadTemplates();
        java.lang.String str21 = python2Target1.getImplicitRuleLabel("\"\\\"Python2Context\\\"\"");
        org.antlr.v4.tool.Grammar grammar22 = null;
        org.stringtemplate.v4.ST sT23 = null;
        python2Target1.genRecognizerHeaderFile(grammar22, sT23, "_tset\\64");
        org.antlr.v4.codegen.CodeGenerator codeGenerator26 = null;
        java.lang.String str29 = python2Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator26, "\"\\\"_@\\\"\"Context", true);
        java.lang.String str30 = python2Target1.language;
        org.antlr.v4.codegen.CodeGenerator codeGenerator31 = python2Target1.gen;
        org.antlr.v4.codegen.CodeGenerator codeGenerator32 = python2Target1.getCodeGenerator();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str34 = python2Target1.getElementListName("_\"\\\"\\\\\\\"\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"\\\\\\\"\\\"\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "_tset" + "'", str3, "_tset");
        org.junit.Assert.assertNotNull(strSet6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "@" + "'", str8, "@");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Python2" + "'", str9, "Python2");
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Python2" + "'", str13, "Python2");
        org.junit.Assert.assertNotNull(sTGroup14);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Python2Context" + "'", str18, "Python2Context");
        org.junit.Assert.assertNotNull(sTGroup19);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "_\"\\\"Python2Context\\\"\"" + "'", str21, "_\"\\\"Python2Context\\\"\"");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "\"\\\"_@\\\"\\\"Contex\"" + "'", str29, "\"\\\"_@\\\"\\\"Contex\"");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "Python2" + "'", str30, "Python2");
        org.junit.Assert.assertNull(codeGenerator31);
        org.junit.Assert.assertNull(codeGenerator32);
    }

    @Test
    public void test1772() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1772");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str4 = python2Target1.encodeIntAsCharEscape(64);
        java.lang.String str5 = python2Target1.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target7 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator6);
        java.lang.String[] strArray8 = python2Target7.targetCharValueEscape;
        java.lang.String str9 = python2Target7.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup10 = python2Target7.getTemplates();
        python2Target1.templates = sTGroup10;
        java.util.Set<java.lang.String> strSet12 = python2Target1.getBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator13 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target14 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator13);
        java.util.Set<java.lang.String> strSet15 = python2Target14.badWords;
        java.lang.String str17 = python2Target14.encodeIntAsCharEscape(64);
        java.lang.String str20 = python2Target14.getTargetStringLiteralFromString("\"\"", true);
        java.lang.String str22 = python2Target14.getImplicitRuleLabel("hi!");
        java.lang.String str25 = python2Target14.getTargetStringLiteralFromString("_hi!", true);
        org.stringtemplate.v4.STGroup sTGroup26 = python2Target14.loadTemplates();
        python2Target1.templates = sTGroup26;
        python2Target1.addBadWords();
        org.antlr.v4.tool.Grammar grammar29 = null;
        org.stringtemplate.v4.ST sT30 = null;
        // The following exception was thrown during execution in test generation
        try {
            python2Target1.genFile(grammar29, sT30, "_\\\"ContextConte");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "@" + "'", str4, "@");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Python2" + "'", str5, "Python2");
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Python2" + "'", str9, "Python2");
        org.junit.Assert.assertNotNull(sTGroup10);
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertNotNull(strSet15);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "@" + "'", str17, "@");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "\"\\\"\\\"\"" + "'", str20, "\"\\\"\\\"\"");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "_hi!" + "'", str22, "_hi!");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "\"_hi!\"" + "'", str25, "\"_hi!\"");
        org.junit.Assert.assertNotNull(sTGroup26);
    }

    @Test
    public void test1773() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1773");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        org.stringtemplate.v4.STGroup sTGroup2 = python2Target1.templates;
        int int3 = python2Target1.getInlineTestSetWordSize();
        int int4 = python2Target1.getSerializedATNSegmentLimit();
        org.stringtemplate.v4.STGroup sTGroup5 = python2Target1.loadTemplates();
        java.lang.String str6 = python2Target1.getVersion();
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 64 + "'", int3 == 64);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 2147483647 + "'", int4 == 2147483647);
        org.junit.Assert.assertNotNull(sTGroup5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "4.5.2.1" + "'", str6, "4.5.2.1");
    }

    @Test
    public void test1774() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1774");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String str3 = python2Target1.getImplicitSetLabel("");
        org.antlr.v4.codegen.CodeGenerator codeGenerator4 = null;
        java.lang.String str7 = python2Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator4, "", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = null;
        java.lang.String str11 = python2Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator8, "\"\\\"\\\"\"", false);
        java.util.Set<java.lang.String> strSet12 = python2Target1.getBadWords();
        java.lang.String str13 = python2Target1.getLanguage();
        java.lang.String str14 = python2Target1.getLanguage();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "_tset" + "'", str3, "_tset");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "\"\"" + "'", str7, "\"\"");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "\\\"\\\"" + "'", str11, "\\\"\\\"");
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Python2" + "'", str13, "Python2");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Python2" + "'", str14, "Python2");
    }

    @Test
    public void test1775() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1775");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str5 = python2Target1.getTargetStringLiteralFromString("hi!", false);
        int int6 = python2Target1.getInlineTestSetWordSize();
        java.lang.String str8 = python2Target1.getTargetStringLiteralFromString("_tset");
        java.lang.String str10 = python2Target1.getTargetStringLiteralFromString("Python2Context");
        java.lang.String str12 = python2Target1.getImplicitSetLabel("a");
        java.lang.String str13 = python2Target1.language;
        boolean boolean14 = python2Target1.supportsOverloadedMethods();
        org.antlr.v4.codegen.CodeGenerator codeGenerator15 = null;
        python2Target1.gen = codeGenerator15;
        org.stringtemplate.v4.STGroup sTGroup17 = python2Target1.templates;
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 64 + "'", int6 == 64);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\"_tset\"" + "'", str8, "\"_tset\"");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\"Python2Context\"" + "'", str10, "\"Python2Context\"");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "_tseta" + "'", str12, "_tseta");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Python2" + "'", str13, "Python2");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(sTGroup17);
    }

    @Test
    public void test1776() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1776");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str4 = python2Target1.encodeIntAsCharEscape(64);
        java.lang.String str5 = python2Target1.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target7 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator6);
        java.lang.String[] strArray8 = python2Target7.targetCharValueEscape;
        java.lang.String str9 = python2Target7.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup10 = python2Target7.getTemplates();
        python2Target1.templates = sTGroup10;
        java.util.Set<java.lang.String> strSet12 = python2Target1.getBadWords();
        boolean boolean13 = python2Target1.wantsBaseVisitor();
        java.lang.String str14 = python2Target1.getLanguage();
        boolean boolean15 = python2Target1.wantsBaseVisitor();
        python2Target1.language = "hi";
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "@" + "'", str4, "@");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Python2" + "'", str5, "Python2");
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Python2" + "'", str9, "Python2");
        org.junit.Assert.assertNotNull(sTGroup10);
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Python2" + "'", str14, "Python2");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test1777() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1777");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str4 = python2Target1.encodeIntAsCharEscape(64);
        java.lang.String str5 = python2Target1.getLanguage();
        java.lang.String[] strArray11 = new java.lang.String[] { "\"hi!\"", "Python2", "Python2", "@", "_@" };
        java.util.LinkedHashSet<java.lang.String> strSet12 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet12, strArray11);
        python2Target1.badWords = strSet12;
        boolean boolean15 = python2Target1.wantsBaseVisitor();
        org.stringtemplate.v4.STGroup sTGroup16 = python2Target1.getTemplates();
        java.lang.String str18 = python2Target1.getTargetStringLiteralFromString("\"\\\\0\"");
        int int19 = python2Target1.getSerializedATNSegmentLimit();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str21 = python2Target1.getElementListName("\"_tset\\\\\\\\1Context\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "@" + "'", str4, "@");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Python2" + "'", str5, "Python2");
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(sTGroup16);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "\"\\\"\\\\\\\\0\\\"\"" + "'", str18, "\"\\\"\\\\\\\\0\\\"\"");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 2147483647 + "'", int19 == 2147483647);
    }

    @Test
    public void test1778() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1778");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str5 = python2Target1.getTargetStringLiteralFromString("hi!", false);
        java.lang.String str7 = python2Target1.getImplicitRuleLabel("@");
        python2Target1.addBadWords();
        int int9 = python2Target1.getInlineTestSetWordSize();
        python2Target1.addBadWords();
        java.lang.String[] strArray11 = python2Target1.targetCharValueEscape;
        boolean boolean12 = python2Target1.templatesExist();
        java.lang.String str15 = python2Target1.getTargetStringLiteralFromString("\"\\\"\\\\\\\"\\\\\\\"\\\\\\\"\\\"\"", true);
        java.util.Set<java.lang.String> strSet16 = python2Target1.badWords;
        org.antlr.v4.codegen.CodeGenerator codeGenerator17 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target18 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator17);
        java.util.Set<java.lang.String> strSet19 = python2Target18.badWords;
        java.lang.String str22 = python2Target18.getTargetStringLiteralFromString("hi!", false);
        int int23 = python2Target18.getInlineTestSetWordSize();
        java.lang.String str25 = python2Target18.getTargetStringLiteralFromString("_tset");
        java.lang.String str27 = python2Target18.getTargetStringLiteralFromString("Python2Context");
        java.lang.String str29 = python2Target18.getImplicitSetLabel("a");
        java.lang.String str30 = python2Target18.language;
        boolean boolean31 = python2Target18.supportsOverloadedMethods();
        java.util.Set<java.lang.String> strSet32 = python2Target18.getBadWords();
        python2Target1.badWords = strSet32;
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "_@" + "'", str7, "_@");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 64 + "'", int9 == 64);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "\"\\\"\\\\\\\"\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"\\\\\\\"\\\"\"" + "'", str15, "\"\\\"\\\\\\\"\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"\\\\\\\"\\\"\"");
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertNotNull(strSet19);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "hi!" + "'", str22, "hi!");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 64 + "'", int23 == 64);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "\"_tset\"" + "'", str25, "\"_tset\"");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "\"Python2Context\"" + "'", str27, "\"Python2Context\"");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "_tseta" + "'", str29, "_tseta");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "Python2" + "'", str30, "Python2");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(strSet32);
    }

    @Test
    public void test1779() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1779");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        boolean boolean2 = python2Target1.wantsBaseVisitor();
        java.util.Set<java.lang.String> strSet3 = python2Target1.badWords;
        java.util.Set<java.lang.String> strSet4 = python2Target1.getBadWords();
        java.util.Set<java.lang.String> strSet5 = python2Target1.badWords;
        boolean boolean6 = python2Target1.wantsBaseVisitor();
        org.antlr.v4.tool.Grammar grammar7 = null;
        org.stringtemplate.v4.ST sT8 = null;
        // The following exception was thrown during execution in test generation
        try {
            python2Target1.genFile(grammar7, sT8, "\"_Python2\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    }

    @Test
    public void test1780() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1780");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str4 = python2Target1.encodeIntAsCharEscape(64);
        java.lang.String str5 = python2Target1.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target7 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator6);
        java.lang.String[] strArray8 = python2Target7.targetCharValueEscape;
        java.lang.String str9 = python2Target7.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup10 = python2Target7.getTemplates();
        python2Target1.templates = sTGroup10;
        java.lang.String str13 = python2Target1.getTargetStringLiteralFromString("_@");
        java.lang.String str15 = python2Target1.getTargetStringLiteralFromString("\\\"\\\"Context");
        boolean boolean16 = python2Target1.templatesExist();
        java.lang.String str19 = python2Target1.getTargetStringLiteralFromString("_\"\\\"a\\\"\"", true);
        org.antlr.v4.tool.ast.GrammarAST grammarAST20 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str21 = python2Target1.getLoopCounter(grammarAST20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "@" + "'", str4, "@");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Python2" + "'", str5, "Python2");
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Python2" + "'", str9, "Python2");
        org.junit.Assert.assertNotNull(sTGroup10);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "\"_@\"" + "'", str13, "\"_@\"");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "\"\\\\\\\"\\\\\\\"Context\"" + "'", str15, "\"\\\\\\\"\\\\\\\"Context\"");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "\"_\\\"\\\\\\\"a\\\\\\\"\\\"\"" + "'", str19, "\"_\\\"\\\\\\\"a\\\\\\\"\\\"\"");
    }

    @Test
    public void test1781() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1781");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str4 = python2Target1.encodeIntAsCharEscape(64);
        org.antlr.v4.codegen.CodeGenerator codeGenerator5 = python2Target1.gen;
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target7 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator6);
        java.util.Set<java.lang.String> strSet8 = python2Target7.badWords;
        boolean boolean9 = python2Target7.wantsBaseVisitor();
        boolean boolean10 = python2Target7.wantsBaseVisitor();
        org.antlr.v4.codegen.CodeGenerator codeGenerator11 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target12 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator11);
        boolean boolean13 = python2Target12.wantsBaseVisitor();
        java.util.Set<java.lang.String> strSet14 = python2Target12.badWords;
        python2Target7.badWords = strSet14;
        int int16 = python2Target7.getSerializedATNSegmentLimit();
        org.stringtemplate.v4.STGroup sTGroup17 = python2Target7.loadTemplates();
        python2Target1.templates = sTGroup17;
        org.antlr.v4.codegen.CodeGenerator codeGenerator19 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target20 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator19);
        python2Target20.language = "\"\\\"hi!\\\"\"";
        java.lang.String str24 = python2Target20.encodeIntAsCharEscape((int) '4');
        org.antlr.v4.codegen.CodeGenerator codeGenerator25 = python2Target20.gen;
        org.antlr.v4.codegen.CodeGenerator codeGenerator26 = python2Target20.getCodeGenerator();
        java.lang.String[] strArray27 = python2Target20.targetCharValueEscape;
        org.antlr.v4.tool.Grammar grammar28 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target29 = new org.antlr.v4.codegen.target.Python2Target();
        python2Target29.addBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator31 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target32 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator31);
        java.util.Set<java.lang.String> strSet33 = python2Target32.badWords;
        java.lang.String str35 = python2Target32.getAltLabelContextStructName("\\\"\\\"");
        boolean boolean36 = python2Target32.wantsBaseVisitor();
        java.util.Set<java.lang.String> strSet37 = python2Target32.getBadWords();
        org.stringtemplate.v4.STGroup sTGroup38 = python2Target32.loadTemplates();
        python2Target29.templates = sTGroup38;
        org.antlr.v4.tool.Grammar grammar40 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator41 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target42 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator41);
        java.util.Set<java.lang.String> strSet43 = python2Target42.badWords;
        boolean boolean44 = python2Target42.wantsBaseVisitor();
        boolean boolean45 = python2Target42.wantsBaseVisitor();
        org.antlr.v4.codegen.CodeGenerator codeGenerator46 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target47 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator46);
        boolean boolean48 = python2Target47.wantsBaseVisitor();
        java.util.Set<java.lang.String> strSet49 = python2Target47.badWords;
        python2Target42.badWords = strSet49;
        org.antlr.v4.tool.Grammar grammar51 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator52 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target53 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator52);
        java.lang.String str55 = python2Target53.getImplicitSetLabel("");
        org.antlr.v4.codegen.CodeGenerator codeGenerator56 = null;
        java.lang.String str59 = python2Target53.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator56, "", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator60 = null;
        java.lang.String str63 = python2Target53.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator60, "\"\\\"\\\"\"", false);
        int int64 = python2Target53.getSerializedATNSegmentLimit();
        org.antlr.v4.tool.Grammar grammar65 = null;
        int[] intArray66 = new int[] {};
        java.lang.String[] strArray67 = python2Target53.getTokenTypesAsTargetLabels(grammar65, intArray66);
        java.lang.String[] strArray68 = python2Target42.getTokenTypesAsTargetLabels(grammar51, intArray66);
        java.lang.String[] strArray69 = python2Target29.getTokenTypesAsTargetLabels(grammar40, intArray66);
        java.lang.String[] strArray70 = python2Target20.getTokenTypesAsTargetLabels(grammar28, intArray66);
        python2Target1.targetCharValueEscape = strArray70;
        java.lang.String str73 = python2Target1.getImplicitSetLabel("\"\\\"\\\"\"Context");
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "@" + "'", str4, "@");
        org.junit.Assert.assertNull(codeGenerator5);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strSet14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 2147483647 + "'", int16 == 2147483647);
        org.junit.Assert.assertNotNull(sTGroup17);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "\\64" + "'", str24, "\\64");
        org.junit.Assert.assertNull(codeGenerator25);
        org.junit.Assert.assertNull(codeGenerator26);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertNotNull(strSet33);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "\\\"\\\"Context" + "'", str35, "\\\"\\\"Context");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(strSet37);
        org.junit.Assert.assertNotNull(sTGroup38);
        org.junit.Assert.assertNotNull(strSet43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(strSet49);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "_tset" + "'", str55, "_tset");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "\"\"" + "'", str59, "\"\"");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "\\\"\\\"" + "'", str63, "\\\"\\\"");
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 2147483647 + "'", int64 == 2147483647);
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[]");
        org.junit.Assert.assertNotNull(strArray67);
        org.junit.Assert.assertNotNull(strArray68);
        org.junit.Assert.assertNotNull(strArray69);
        org.junit.Assert.assertNotNull(strArray70);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "_tset\"\\\"\\\"\"Context" + "'", str73, "_tset\"\\\"\\\"\"Context");
    }

    @Test
    public void test1782() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1782");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str5 = python2Target1.getTargetStringLiteralFromString("hi!", false);
        java.lang.String str7 = python2Target1.getImplicitRuleLabel("@");
        python2Target1.addBadWords();
        boolean boolean9 = python2Target1.wantsBaseListener();
        int int10 = python2Target1.getInlineTestSetWordSize();
        java.lang.String str12 = python2Target1.getTargetStringLiteralFromString("");
        java.lang.String str14 = python2Target1.getTargetStringLiteralFromString("_tset_tset_tset\\n");
        org.antlr.v4.tool.ast.GrammarAST grammarAST15 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean16 = python2Target1.visibleGrammarSymbolCausesIssueInGeneratedCode(grammarAST15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "_@" + "'", str7, "_@");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 64 + "'", int10 == 64);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "\"\"" + "'", str12, "\"\"");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "\"_tset_tset_tset\\\\n\"" + "'", str14, "\"_tset_tset_tset\\\\n\"");
    }

    @Test
    public void test1783() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1783");
        org.antlr.v4.codegen.target.Python2Target python2Target0 = new org.antlr.v4.codegen.target.Python2Target();
        java.lang.String str3 = python2Target0.getTargetStringLiteralFromString("hi!", true);
        java.lang.String str4 = python2Target0.getLanguage();
        boolean boolean5 = python2Target0.wantsBaseVisitor();
        java.util.Set<java.lang.String> strSet6 = python2Target0.badWords;
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "\"hi!\"" + "'", str3, "\"hi!\"");
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(strSet6);
    }

    @Test
    public void test1784() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1784");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str5 = python2Target1.getTargetStringLiteralFromString("hi!", false);
        java.lang.String str7 = python2Target1.getImplicitRuleLabel("@");
        python2Target1.addBadWords();
        boolean boolean9 = python2Target1.wantsBaseListener();
        int int10 = python2Target1.getInlineTestSetWordSize();
        java.lang.String str12 = python2Target1.getTargetStringLiteralFromString("");
        org.antlr.v4.tool.Grammar grammar13 = null;
        org.stringtemplate.v4.ST sT14 = null;
        python2Target1.genRecognizerHeaderFile(grammar13, sT14, "\\\"_tset\\\\\\\"_tset\\\\\\\\\\\\\\\\64\\\\\\\"\\\"");
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "_@" + "'", str7, "_@");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 64 + "'", int10 == 64);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "\"\"" + "'", str12, "\"\"");
    }

    @Test
    public void test1785() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1785");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String str3 = python2Target1.getImplicitSetLabel("");
        boolean boolean4 = python2Target1.wantsBaseListener();
        int int5 = python2Target1.getInlineTestSetWordSize();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "_tset" + "'", str3, "_tset");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 64 + "'", int5 == 64);
    }

    @Test
    public void test1786() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1786");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        boolean boolean2 = python2Target1.wantsBaseVisitor();
        java.util.Set<java.lang.String> strSet3 = python2Target1.badWords;
        java.util.Set<java.lang.String> strSet4 = python2Target1.getBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator5 = python2Target1.gen;
        boolean boolean6 = python2Target1.wantsBaseVisitor();
        int int7 = python2Target1.getInlineTestSetWordSize();
        org.stringtemplate.v4.STGroup sTGroup8 = python2Target1.getTemplates();
        java.lang.String str10 = python2Target1.getListLabel("\"\\\\0\"");
        org.stringtemplate.v4.STGroup sTGroup11 = python2Target1.getTemplates();
        boolean boolean12 = python2Target1.wantsBaseListener();
        java.lang.String str14 = python2Target1.getAltLabelContextStructName("Python2\\\"Contex");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertNull(codeGenerator5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 64 + "'", int7 == 64);
        org.junit.Assert.assertNotNull(sTGroup8);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\"\\\\0\"" + "'", str10, "\"\\\\0\"");
        org.junit.Assert.assertNotNull(sTGroup11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Python2\\\"ContexContext" + "'", str14, "Python2\\\"ContexContext");
    }

    @Test
    public void test1787() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1787");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String str3 = python2Target1.getImplicitSetLabel("");
        org.antlr.v4.codegen.CodeGenerator codeGenerator4 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target5 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator4);
        java.util.Set<java.lang.String> strSet6 = python2Target5.badWords;
        java.lang.String str8 = python2Target5.encodeIntAsCharEscape(64);
        java.lang.String str9 = python2Target5.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target11 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator10);
        java.lang.String[] strArray12 = python2Target11.targetCharValueEscape;
        java.lang.String str13 = python2Target11.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup14 = python2Target11.getTemplates();
        python2Target5.templates = sTGroup14;
        python2Target1.templates = sTGroup14;
        java.lang.String str18 = python2Target1.getAltLabelContextStructName("Python2");
        java.lang.String str20 = python2Target1.getImplicitRuleLabel("_tset\\64");
        java.lang.String[] strArray21 = python2Target1.targetCharValueEscape;
        org.antlr.v4.codegen.CodeGenerator codeGenerator22 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target23 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator22);
        java.lang.String str25 = python2Target23.getImplicitSetLabel("");
        org.antlr.v4.codegen.CodeGenerator codeGenerator26 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target27 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator26);
        java.util.Set<java.lang.String> strSet28 = python2Target27.badWords;
        java.lang.String str30 = python2Target27.encodeIntAsCharEscape(64);
        java.lang.String str31 = python2Target27.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator32 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target33 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator32);
        java.lang.String[] strArray34 = python2Target33.targetCharValueEscape;
        java.lang.String str35 = python2Target33.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup36 = python2Target33.getTemplates();
        python2Target27.templates = sTGroup36;
        python2Target23.templates = sTGroup36;
        java.lang.String str40 = python2Target23.getAltLabelContextStructName("Python2");
        java.lang.String str42 = python2Target23.getImplicitRuleLabel("_tset\\64");
        java.lang.String[] strArray43 = python2Target23.targetCharValueEscape;
        python2Target1.targetCharValueEscape = strArray43;
        org.antlr.v4.codegen.CodeGenerator codeGenerator45 = null;
        python2Target1.gen = codeGenerator45;
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "_tset" + "'", str3, "_tset");
        org.junit.Assert.assertNotNull(strSet6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "@" + "'", str8, "@");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Python2" + "'", str9, "Python2");
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Python2" + "'", str13, "Python2");
        org.junit.Assert.assertNotNull(sTGroup14);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Python2Context" + "'", str18, "Python2Context");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "__tset\\64" + "'", str20, "__tset\\64");
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "_tset" + "'", str25, "_tset");
        org.junit.Assert.assertNotNull(strSet28);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "@" + "'", str30, "@");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "Python2" + "'", str31, "Python2");
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "Python2" + "'", str35, "Python2");
        org.junit.Assert.assertNotNull(sTGroup36);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "Python2Context" + "'", str40, "Python2Context");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "__tset\\64" + "'", str42, "__tset\\64");
        org.junit.Assert.assertNotNull(strArray43);
    }

    @Test
    public void test1788() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1788");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String str3 = python2Target1.getImplicitSetLabel("");
        org.antlr.v4.codegen.CodeGenerator codeGenerator4 = null;
        java.lang.String str7 = python2Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator4, "", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = null;
        java.lang.String str11 = python2Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator8, "\"\\\"\\\"\"", false);
        python2Target1.language = "\\\"\\\"Context";
        java.lang.String str15 = python2Target1.getImplicitRuleLabel("\"__\\\"\\\"Context\"");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "_tset" + "'", str3, "_tset");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "\"\"" + "'", str7, "\"\"");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "\\\"\\\"" + "'", str11, "\\\"\\\"");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "_\"__\\\"\\\"Context\"" + "'", str15, "_\"__\\\"\\\"Context\"");
    }

    @Test
    public void test1789() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1789");
        org.antlr.v4.codegen.target.Python2Target.PythonStringRenderer pythonStringRenderer0 = new org.antlr.v4.codegen.target.Python2Target.PythonStringRenderer();
        java.util.Locale locale3 = null;
        java.lang.String str4 = pythonStringRenderer0.toString((java.lang.Object) "_tset\\n", "Python2Context", locale3);
        java.lang.Object obj5 = null;
        java.util.Locale locale7 = null;
        java.lang.String str8 = pythonStringRenderer0.toString(obj5, "_\"Python2Context\"", locale7);
        org.antlr.v4.codegen.CodeGenerator codeGenerator9 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target10 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator9);
        java.util.Set<java.lang.String> strSet11 = python2Target10.badWords;
        java.lang.String str14 = python2Target10.getTargetStringLiteralFromString("hi!", false);
        java.lang.String str16 = python2Target10.getImplicitRuleLabel("@");
        python2Target10.addBadWords();
        boolean boolean18 = python2Target10.wantsBaseListener();
        java.lang.String str20 = python2Target10.getImplicitSetLabel("_tset");
        org.antlr.v4.codegen.CodeGenerator codeGenerator21 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target22 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator21);
        java.lang.String[] strArray23 = python2Target22.targetCharValueEscape;
        java.lang.String str24 = python2Target22.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup25 = python2Target22.getTemplates();
        python2Target10.templates = sTGroup25;
        boolean boolean27 = python2Target10.wantsBaseListener();
        java.lang.String[] strArray28 = org.antlr.v4.codegen.target.Python2Target.python2Keywords;
        org.antlr.v4.codegen.target.Python2Target.python2Keywords = strArray28;
        org.antlr.v4.codegen.target.Python2Target.python2Keywords = strArray28;
        org.antlr.v4.codegen.target.Python2Target.python2Keywords = strArray28;
        org.antlr.v4.codegen.target.Python2Target.python2Keywords = strArray28;
        python2Target10.targetCharValueEscape = strArray28;
        org.antlr.v4.codegen.target.Python2Target.python2Keywords = strArray28;
        java.util.Locale locale36 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str37 = pythonStringRenderer0.toString((java.lang.Object) strArray28, "\"\\\"\\\"Conte\"", locale36);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: null");
        } catch (java.lang.ClassCastException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Python2Context" + "'", str4, "Python2Context");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "_\"Python2Context\"" + "'", str8, "_\"Python2Context\"");
        org.junit.Assert.assertNotNull(strSet11);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "_@" + "'", str16, "_@");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "_tset_tset" + "'", str20, "_tset_tset");
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "Python2" + "'", str24, "Python2");
        org.junit.Assert.assertNotNull(sTGroup25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(strArray28);
    }

    @Test
    public void test1790() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1790");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str4 = python2Target1.encodeIntAsCharEscape(64);
        org.antlr.v4.codegen.CodeGenerator codeGenerator5 = python2Target1.gen;
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target7 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator6);
        java.util.Set<java.lang.String> strSet8 = python2Target7.badWords;
        boolean boolean9 = python2Target7.wantsBaseVisitor();
        boolean boolean10 = python2Target7.wantsBaseVisitor();
        org.antlr.v4.codegen.CodeGenerator codeGenerator11 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target12 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator11);
        boolean boolean13 = python2Target12.wantsBaseVisitor();
        java.util.Set<java.lang.String> strSet14 = python2Target12.badWords;
        python2Target7.badWords = strSet14;
        int int16 = python2Target7.getSerializedATNSegmentLimit();
        org.stringtemplate.v4.STGroup sTGroup17 = python2Target7.loadTemplates();
        python2Target1.templates = sTGroup17;
        java.lang.String str20 = python2Target1.getImplicitRuleLabel("d");
        java.lang.String str21 = python2Target1.getLanguage();
        java.lang.String str22 = python2Target1.language;
        python2Target1.addBadWords();
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "@" + "'", str4, "@");
        org.junit.Assert.assertNull(codeGenerator5);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strSet14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 2147483647 + "'", int16 == 2147483647);
        org.junit.Assert.assertNotNull(sTGroup17);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "_d" + "'", str20, "_d");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Python2" + "'", str21, "Python2");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "Python2" + "'", str22, "Python2");
    }

    @Test
    public void test1791() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1791");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String[] strArray2 = python2Target1.targetCharValueEscape;
        java.lang.String str4 = python2Target1.getImplicitSetLabel("\\64");
        java.lang.String[] strArray5 = python2Target1.targetCharValueEscape;
        org.stringtemplate.v4.STGroup sTGroup6 = python2Target1.getTemplates();
        org.stringtemplate.v4.STGroup sTGroup7 = python2Target1.loadTemplates();
        java.lang.String str8 = python2Target1.language;
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "_tset\\64" + "'", str4, "_tset\\64");
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(sTGroup6);
        org.junit.Assert.assertNotNull(sTGroup7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Python2" + "'", str8, "Python2");
    }

    @Test
    public void test1792() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1792");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        boolean boolean2 = python2Target1.wantsBaseVisitor();
        java.util.Set<java.lang.String> strSet3 = python2Target1.badWords;
        java.util.Set<java.lang.String> strSet4 = python2Target1.getBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator5 = python2Target1.gen;
        boolean boolean6 = python2Target1.wantsBaseVisitor();
        int int7 = python2Target1.getInlineTestSetWordSize();
        org.stringtemplate.v4.STGroup sTGroup8 = python2Target1.getTemplates();
        org.antlr.v4.codegen.CodeGenerator codeGenerator9 = python2Target1.gen;
        org.antlr.v4.tool.Grammar grammar10 = null;
        org.stringtemplate.v4.ST sT11 = null;
        python2Target1.genRecognizerHeaderFile(grammar10, sT11, "__\\\"\\\"ContextContext");
        org.antlr.v4.codegen.CodeGenerator codeGenerator14 = null;
        java.lang.String str17 = python2Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator14, "\"_Python2\"", false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertNull(codeGenerator5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 64 + "'", int7 == 64);
        org.junit.Assert.assertNotNull(sTGroup8);
        org.junit.Assert.assertNull(codeGenerator9);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "_Python2" + "'", str17, "_Python2");
    }

    @Test
    public void test1793() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1793");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        boolean boolean2 = python2Target1.wantsBaseVisitor();
        java.util.Set<java.lang.String> strSet3 = python2Target1.badWords;
        java.lang.String str5 = python2Target1.getTargetStringLiteralFromString("");
        org.stringtemplate.v4.STGroup sTGroup6 = python2Target1.getTemplates();
        int int7 = python2Target1.getSerializedATNSegmentLimit();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "\"\"" + "'", str5, "\"\"");
        org.junit.Assert.assertNotNull(sTGroup6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 2147483647 + "'", int7 == 2147483647);
    }

    @Test
    public void test1794() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1794");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String str3 = python2Target1.getImplicitSetLabel("");
        org.antlr.v4.codegen.CodeGenerator codeGenerator4 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target5 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator4);
        java.util.Set<java.lang.String> strSet6 = python2Target5.badWords;
        java.lang.String str8 = python2Target5.encodeIntAsCharEscape(64);
        java.lang.String str9 = python2Target5.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target11 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator10);
        java.lang.String[] strArray12 = python2Target11.targetCharValueEscape;
        java.lang.String str13 = python2Target11.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup14 = python2Target11.getTemplates();
        python2Target5.templates = sTGroup14;
        python2Target1.templates = sTGroup14;
        java.lang.String str18 = python2Target1.getAltLabelContextStructName("Python2");
        org.stringtemplate.v4.STGroup sTGroup19 = python2Target1.loadTemplates();
        java.lang.String str21 = python2Target1.getImplicitRuleLabel("\"\\\"Python2Context\\\"\"");
        org.antlr.v4.tool.Grammar grammar22 = null;
        org.stringtemplate.v4.ST sT23 = null;
        python2Target1.genRecognizerHeaderFile(grammar22, sT23, "_tset\\64");
        org.antlr.v4.codegen.CodeGenerator codeGenerator26 = null;
        java.lang.String str29 = python2Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator26, "\"\\\"_@\\\"\"Context", true);
        python2Target1.language = "_tset6ContexContext";
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "_tset" + "'", str3, "_tset");
        org.junit.Assert.assertNotNull(strSet6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "@" + "'", str8, "@");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Python2" + "'", str9, "Python2");
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Python2" + "'", str13, "Python2");
        org.junit.Assert.assertNotNull(sTGroup14);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Python2Context" + "'", str18, "Python2Context");
        org.junit.Assert.assertNotNull(sTGroup19);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "_\"\\\"Python2Context\\\"\"" + "'", str21, "_\"\\\"Python2Context\\\"\"");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "\"\\\"_@\\\"\\\"Contex\"" + "'", str29, "\"\\\"_@\\\"\\\"Contex\"");
    }

    @Test
    public void test1795() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1795");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String str3 = python2Target1.getImplicitSetLabel("");
        org.antlr.v4.codegen.CodeGenerator codeGenerator4 = null;
        java.lang.String str7 = python2Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator4, "", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = null;
        java.lang.String str11 = python2Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator8, "\"\\\"\\\"\"", false);
        int int12 = python2Target1.getSerializedATNSegmentLimit();
        org.antlr.v4.tool.Grammar grammar13 = null;
        org.stringtemplate.v4.ST sT14 = null;
        // The following exception was thrown during execution in test generation
        try {
            python2Target1.genFile(grammar13, sT14, "_tset\\64");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "_tset" + "'", str3, "_tset");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "\"\"" + "'", str7, "\"\"");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "\\\"\\\"" + "'", str11, "\\\"\\\"");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 2147483647 + "'", int12 == 2147483647);
    }

    @Test
    public void test1796() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1796");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str5 = python2Target1.getTargetStringLiteralFromString("hi!", false);
        java.lang.String str7 = python2Target1.getImplicitRuleLabel("@");
        python2Target1.addBadWords();
        int int9 = python2Target1.getInlineTestSetWordSize();
        java.lang.String[] strArray10 = python2Target1.targetCharValueEscape;
        java.lang.String str12 = python2Target1.getListLabel("\"_@\"");
        java.lang.String str15 = python2Target1.getTargetStringLiteralFromString("\"hi!\"", false);
        java.lang.String str17 = python2Target1.encodeIntAsCharEscape(1);
        org.antlr.v4.codegen.CodeGenerator codeGenerator18 = null;
        python2Target1.gen = codeGenerator18;
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "_@" + "'", str7, "_@");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 64 + "'", int9 == 64);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "\"_@\"" + "'", str12, "\"_@\"");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "\\\"hi!\\\"" + "'", str15, "\\\"hi!\\\"");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "\\1" + "'", str17, "\\1");
    }

    @Test
    public void test1797() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1797");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String[] strArray2 = python2Target1.targetCharValueEscape;
        java.lang.String str4 = python2Target1.getImplicitSetLabel("\\64");
        java.lang.String[] strArray5 = python2Target1.targetCharValueEscape;
        org.stringtemplate.v4.STGroup sTGroup6 = python2Target1.getTemplates();
        java.util.Set<java.lang.String> strSet7 = python2Target1.badWords;
        org.antlr.v4.tool.Grammar grammar8 = null;
        org.stringtemplate.v4.ST sT9 = null;
        // The following exception was thrown during execution in test generation
        try {
            python2Target1.genFile(grammar8, sT9, "_\"\\\"\\\"\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "_tset\\64" + "'", str4, "_tset\\64");
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(sTGroup6);
        org.junit.Assert.assertNotNull(strSet7);
    }

    @Test
    public void test1798() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1798");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str5 = python2Target1.getTargetStringLiteralFromString("hi!", false);
        java.lang.String str7 = python2Target1.getImplicitRuleLabel("@");
        python2Target1.addBadWords();
        int int9 = python2Target1.getInlineTestSetWordSize();
        java.lang.String[] strArray10 = python2Target1.targetCharValueEscape;
        java.lang.String str12 = python2Target1.getListLabel("\"_@\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator13 = python2Target1.gen;
        int int14 = python2Target1.getInlineTestSetWordSize();
        org.antlr.v4.codegen.CodeGenerator codeGenerator15 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target16 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator15);
        java.util.Set<java.lang.String> strSet17 = python2Target16.badWords;
        boolean boolean18 = python2Target16.wantsBaseVisitor();
        boolean boolean19 = python2Target16.wantsBaseVisitor();
        org.antlr.v4.codegen.CodeGenerator codeGenerator20 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target21 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator20);
        boolean boolean22 = python2Target21.wantsBaseVisitor();
        java.util.Set<java.lang.String> strSet23 = python2Target21.badWords;
        python2Target16.badWords = strSet23;
        int int25 = python2Target16.getSerializedATNSegmentLimit();
        org.stringtemplate.v4.STGroup sTGroup26 = python2Target16.getTemplates();
        python2Target1.templates = sTGroup26;
        java.lang.Class<?> wildcardClass28 = sTGroup26.getClass();
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "_@" + "'", str7, "_@");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 64 + "'", int9 == 64);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "\"_@\"" + "'", str12, "\"_@\"");
        org.junit.Assert.assertNull(codeGenerator13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 64 + "'", int14 == 64);
        org.junit.Assert.assertNotNull(strSet17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(strSet23);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 2147483647 + "'", int25 == 2147483647);
        org.junit.Assert.assertNotNull(sTGroup26);
        org.junit.Assert.assertNotNull(wildcardClass28);
    }

    @Test
    public void test1799() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1799");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str4 = python2Target1.encodeIntAsCharEscape(64);
        java.lang.String str5 = python2Target1.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target7 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator6);
        java.lang.String[] strArray8 = python2Target7.targetCharValueEscape;
        java.lang.String str9 = python2Target7.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup10 = python2Target7.getTemplates();
        python2Target1.templates = sTGroup10;
        java.util.Set<java.lang.String> strSet12 = python2Target1.getBadWords();
        java.lang.String str15 = python2Target1.getTargetStringLiteralFromString("\"hi!\"", true);
        java.lang.String str17 = python2Target1.getAltLabelContextStructName("\\1");
        java.lang.String str19 = python2Target1.getImplicitSetLabel("\\n");
        python2Target1.addBadWords();
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "@" + "'", str4, "@");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Python2" + "'", str5, "Python2");
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Python2" + "'", str9, "Python2");
        org.junit.Assert.assertNotNull(sTGroup10);
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "\"\\\"hi!\\\"\"" + "'", str15, "\"\\\"hi!\\\"\"");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "\\1Context" + "'", str17, "\\1Context");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "_tset\\n" + "'", str19, "_tset\\n");
    }

    @Test
    public void test1800() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1800");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String str3 = python2Target1.getImplicitSetLabel("");
        org.antlr.v4.codegen.CodeGenerator codeGenerator4 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target5 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator4);
        java.util.Set<java.lang.String> strSet6 = python2Target5.badWords;
        java.lang.String str8 = python2Target5.encodeIntAsCharEscape(64);
        java.lang.String str9 = python2Target5.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target11 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator10);
        java.lang.String[] strArray12 = python2Target11.targetCharValueEscape;
        java.lang.String str13 = python2Target11.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup14 = python2Target11.getTemplates();
        python2Target5.templates = sTGroup14;
        python2Target1.templates = sTGroup14;
        java.lang.String str18 = python2Target1.getAltLabelContextStructName("Python2");
        org.stringtemplate.v4.STGroup sTGroup19 = python2Target1.loadTemplates();
        java.lang.String str22 = python2Target1.getTargetStringLiteralFromString("\"_tset\"", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator23 = python2Target1.getCodeGenerator();
        org.antlr.v4.codegen.CodeGenerator codeGenerator24 = python2Target1.getCodeGenerator();
        java.util.Set<java.lang.String> strSet25 = python2Target1.getBadWords();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "_tset" + "'", str3, "_tset");
        org.junit.Assert.assertNotNull(strSet6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "@" + "'", str8, "@");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Python2" + "'", str9, "Python2");
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Python2" + "'", str13, "Python2");
        org.junit.Assert.assertNotNull(sTGroup14);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Python2Context" + "'", str18, "Python2Context");
        org.junit.Assert.assertNotNull(sTGroup19);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "\"\\\"_tset\\\"\"" + "'", str22, "\"\\\"_tset\\\"\"");
        org.junit.Assert.assertNull(codeGenerator23);
        org.junit.Assert.assertNull(codeGenerator24);
        org.junit.Assert.assertNotNull(strSet25);
    }

    @Test
    public void test1801() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1801");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String[] strArray2 = python2Target1.targetCharValueEscape;
        java.lang.String str3 = python2Target1.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup4 = python2Target1.getTemplates();
        java.lang.String[] strArray5 = python2Target1.targetCharValueEscape;
        java.lang.String[] strArray6 = org.antlr.v4.codegen.target.Python2Target.python2Keywords;
        python2Target1.targetCharValueEscape = strArray6;
        boolean boolean8 = python2Target1.supportsOverloadedMethods();
        java.lang.String str11 = python2Target1.getTargetStringLiteralFromString("_AContext", true);
        java.lang.String str13 = python2Target1.getImplicitSetLabel("_\"\\\\0\"");
        java.lang.String str16 = python2Target1.getTargetStringLiteralFromString("\"\\\"\\\"\"", false);
        java.util.Set<java.lang.String> strSet17 = python2Target1.getBadWords();
        org.antlr.v4.tool.Grammar grammar18 = null;
        org.stringtemplate.v4.ST sT19 = null;
        // The following exception was thrown during execution in test generation
        try {
            python2Target1.genListenerFile(grammar18, sT19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Python2" + "'", str3, "Python2");
        org.junit.Assert.assertNotNull(sTGroup4);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "\"_AContext\"" + "'", str11, "\"_AContext\"");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "_tset_\"\\\\0\"" + "'", str13, "_tset_\"\\\\0\"");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "\\\"\\\\\\\"\\\\\\\"\\\"" + "'", str16, "\\\"\\\\\\\"\\\\\\\"\\\"");
        org.junit.Assert.assertNotNull(strSet17);
    }

    @Test
    public void test1802() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1802");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str5 = python2Target1.getTargetStringLiteralFromString("hi!", false);
        int int6 = python2Target1.getInlineTestSetWordSize();
        boolean boolean7 = python2Target1.wantsBaseListener();
        java.lang.String str9 = python2Target1.encodeIntAsCharEscape((int) (byte) 10);
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = null;
        python2Target1.gen = codeGenerator10;
        java.lang.String str13 = python2Target1.getTargetStringLiteralFromString("Python2Context\\\"Contex");
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 64 + "'", int6 == 64);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\\n" + "'", str9, "\\n");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "\"Python2Context\\\\\\\"Contex\"" + "'", str13, "\"Python2Context\\\\\\\"Contex\"");
    }

    @Test
    public void test1803() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1803");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str4 = python2Target1.encodeIntAsCharEscape(64);
        java.lang.String str5 = python2Target1.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target7 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator6);
        java.lang.String[] strArray8 = python2Target7.targetCharValueEscape;
        java.lang.String str9 = python2Target7.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup10 = python2Target7.getTemplates();
        python2Target1.templates = sTGroup10;
        java.util.Set<java.lang.String> strSet12 = python2Target1.getBadWords();
        boolean boolean13 = python2Target1.wantsBaseVisitor();
        org.antlr.v4.codegen.CodeGenerator codeGenerator14 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target15 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator14);
        java.lang.String str17 = python2Target15.getImplicitSetLabel("");
        org.antlr.v4.codegen.CodeGenerator codeGenerator18 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target19 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator18);
        java.util.Set<java.lang.String> strSet20 = python2Target19.badWords;
        java.lang.String str22 = python2Target19.encodeIntAsCharEscape(64);
        java.lang.String str23 = python2Target19.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator24 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target25 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator24);
        java.lang.String[] strArray26 = python2Target25.targetCharValueEscape;
        java.lang.String str27 = python2Target25.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup28 = python2Target25.getTemplates();
        python2Target19.templates = sTGroup28;
        python2Target15.templates = sTGroup28;
        org.stringtemplate.v4.STGroup sTGroup31 = python2Target15.templates;
        python2Target1.templates = sTGroup31;
        int int33 = python2Target1.getSerializedATNSegmentLimit();
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "@" + "'", str4, "@");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Python2" + "'", str5, "Python2");
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Python2" + "'", str9, "Python2");
        org.junit.Assert.assertNotNull(sTGroup10);
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "_tset" + "'", str17, "_tset");
        org.junit.Assert.assertNotNull(strSet20);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "@" + "'", str22, "@");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "Python2" + "'", str23, "Python2");
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "Python2" + "'", str27, "Python2");
        org.junit.Assert.assertNotNull(sTGroup28);
        org.junit.Assert.assertNotNull(sTGroup31);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 2147483647 + "'", int33 == 2147483647);
    }

    @Test
    public void test1804() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1804");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String str3 = python2Target1.getImplicitSetLabel("");
        org.antlr.v4.codegen.CodeGenerator codeGenerator4 = python2Target1.gen;
        java.lang.String str6 = python2Target1.getAltLabelContextStructName("hi");
        boolean boolean7 = python2Target1.wantsBaseVisitor();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "_tset" + "'", str3, "_tset");
        org.junit.Assert.assertNull(codeGenerator4);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "HiContext" + "'", str6, "HiContext");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    public void test1805() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1805");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String str3 = python2Target1.getImplicitSetLabel("");
        org.antlr.v4.codegen.CodeGenerator codeGenerator4 = null;
        java.lang.String str7 = python2Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator4, "", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = null;
        java.lang.String str11 = python2Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator8, "\"\\\"\\\"\"", false);
        int int12 = python2Target1.getSerializedATNSegmentLimit();
        org.antlr.v4.tool.Grammar grammar13 = null;
        int[] intArray14 = new int[] {};
        java.lang.String[] strArray15 = python2Target1.getTokenTypesAsTargetLabels(grammar13, intArray14);
        python2Target1.addBadWords();
        java.lang.String str18 = python2Target1.getImplicitSetLabel("_tset\"hi!\"");
        java.lang.String str19 = python2Target1.getLanguage();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "_tset" + "'", str3, "_tset");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "\"\"" + "'", str7, "\"\"");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "\\\"\\\"" + "'", str11, "\\\"\\\"");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 2147483647 + "'", int12 == 2147483647);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[]");
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "_tset_tset\"hi!\"" + "'", str18, "_tset_tset\"hi!\"");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Python2" + "'", str19, "Python2");
    }

    @Test
    public void test1806() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1806");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str4 = python2Target1.encodeIntAsCharEscape(64);
        java.lang.String str5 = python2Target1.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target7 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator6);
        java.lang.String[] strArray8 = python2Target7.targetCharValueEscape;
        java.lang.String str9 = python2Target7.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup10 = python2Target7.getTemplates();
        python2Target1.templates = sTGroup10;
        java.util.Set<java.lang.String> strSet12 = python2Target1.getBadWords();
        java.lang.String str15 = python2Target1.getTargetStringLiteralFromString("\"hi!\"", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator16 = null;
        java.lang.String str19 = python2Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator16, "_tset\\64", false);
        java.lang.String str20 = python2Target1.getLanguage();
        org.antlr.v4.tool.Rule rule21 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str22 = python2Target1.getRuleFunctionContextStructName(rule21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "@" + "'", str4, "@");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Python2" + "'", str5, "Python2");
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Python2" + "'", str9, "Python2");
        org.junit.Assert.assertNotNull(sTGroup10);
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "\"\\\"hi!\\\"\"" + "'", str15, "\"\\\"hi!\\\"\"");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "tset6" + "'", str19, "tset6");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "Python2" + "'", str20, "Python2");
    }

    @Test
    public void test1807() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1807");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        boolean boolean2 = python2Target1.wantsBaseVisitor();
        java.util.Set<java.lang.String> strSet3 = python2Target1.badWords;
        java.util.Set<java.lang.String> strSet4 = python2Target1.getBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator5 = python2Target1.gen;
        boolean boolean6 = python2Target1.wantsBaseVisitor();
        int int7 = python2Target1.getInlineTestSetWordSize();
        org.stringtemplate.v4.STGroup sTGroup8 = python2Target1.getTemplates();
        java.lang.String str10 = python2Target1.getListLabel("\"\\\\0\"");
        boolean boolean11 = python2Target1.wantsBaseListener();
        java.lang.String str12 = python2Target1.language;
        org.stringtemplate.v4.STGroup sTGroup13 = python2Target1.templates;
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertNull(codeGenerator5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 64 + "'", int7 == 64);
        org.junit.Assert.assertNotNull(sTGroup8);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\"\\\\0\"" + "'", str10, "\"\\\\0\"");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Python2" + "'", str12, "Python2");
        org.junit.Assert.assertNotNull(sTGroup13);
    }

    @Test
    public void test1808() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1808");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str5 = python2Target1.getTargetStringLiteralFromString("hi!", false);
        java.lang.String str7 = python2Target1.getImplicitRuleLabel("@");
        python2Target1.addBadWords();
        int int9 = python2Target1.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet10 = python2Target1.getBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator11 = null;
        python2Target1.gen = codeGenerator11;
        org.stringtemplate.v4.STGroup sTGroup13 = python2Target1.loadTemplates();
        org.stringtemplate.v4.STGroup sTGroup14 = python2Target1.loadTemplates();
        java.lang.String str16 = python2Target1.getImplicitRuleLabel("\"_tset\\\"_tset\\\\\\\\64\\\"\"");
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "_@" + "'", str7, "_@");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 64 + "'", int9 == 64);
        org.junit.Assert.assertNotNull(strSet10);
        org.junit.Assert.assertNotNull(sTGroup13);
        org.junit.Assert.assertNotNull(sTGroup14);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "_\"_tset\\\"_tset\\\\\\\\64\\\"\"" + "'", str16, "_\"_tset\\\"_tset\\\\\\\\64\\\"\"");
    }

    @Test
    public void test1809() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1809");
        org.antlr.v4.codegen.target.Python2Target.PythonStringRenderer pythonStringRenderer0 = new org.antlr.v4.codegen.target.Python2Target.PythonStringRenderer();
        org.antlr.v4.codegen.CodeGenerator codeGenerator1 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target2 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator1);
        java.util.Set<java.lang.String> strSet3 = python2Target2.badWords;
        java.lang.String str6 = python2Target2.getTargetStringLiteralFromString("hi!", false);
        java.lang.String str8 = python2Target2.getImplicitRuleLabel("@");
        python2Target2.addBadWords();
        boolean boolean10 = python2Target2.wantsBaseListener();
        int int11 = python2Target2.getInlineTestSetWordSize();
        java.lang.String str12 = python2Target2.getVersion();
        java.util.Locale locale14 = null;
        java.lang.String str15 = pythonStringRenderer0.toString((java.lang.Object) str12, "\"a\"", locale14);
        org.antlr.v4.codegen.CodeGenerator codeGenerator16 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target17 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator16);
        java.util.Set<java.lang.String> strSet18 = python2Target17.badWords;
        java.lang.String str20 = python2Target17.encodeIntAsCharEscape(64);
        java.lang.String str23 = python2Target17.getTargetStringLiteralFromString("\"\"", true);
        java.lang.String str25 = python2Target17.getImplicitRuleLabel("hi!");
        java.lang.String str28 = python2Target17.getTargetStringLiteralFromString("_hi!", true);
        org.stringtemplate.v4.STGroup sTGroup29 = python2Target17.loadTemplates();
        java.lang.String str30 = python2Target17.getVersion();
        java.util.Locale locale32 = null;
        java.lang.String str33 = pythonStringRenderer0.toString((java.lang.Object) str30, "_tseta", locale32);
        java.lang.Object obj34 = null;
        java.util.Locale locale36 = null;
        java.lang.String str37 = pythonStringRenderer0.toString(obj34, "\"@\"", locale36);
        org.antlr.v4.codegen.CodeGenerator codeGenerator38 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target39 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator38);
        python2Target39.language = "\"\\\"hi!\\\"\"";
        java.lang.String str43 = python2Target39.encodeIntAsCharEscape((int) '4');
        java.lang.String str44 = python2Target39.language;
        java.util.Locale locale46 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str47 = pythonStringRenderer0.toString((java.lang.Object) python2Target39, "\"\\\"_@\\\"\"ContextContext", locale46);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: null");
        } catch (java.lang.ClassCastException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "_@" + "'", str8, "_@");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 64 + "'", int11 == 64);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "4.5.2.1" + "'", str12, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "\"a\"" + "'", str15, "\"a\"");
        org.junit.Assert.assertNotNull(strSet18);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "@" + "'", str20, "@");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "\"\\\"\\\"\"" + "'", str23, "\"\\\"\\\"\"");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "_hi!" + "'", str25, "_hi!");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "\"_hi!\"" + "'", str28, "\"_hi!\"");
        org.junit.Assert.assertNotNull(sTGroup29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "4.5.2.1" + "'", str30, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "_tseta" + "'", str33, "_tseta");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "\"@\"" + "'", str37, "\"@\"");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "\\64" + "'", str43, "\\64");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "\"\\\"hi!\\\"\"" + "'", str44, "\"\\\"hi!\\\"\"");
    }

    @Test
    public void test1810() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1810");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        boolean boolean3 = python2Target1.wantsBaseVisitor();
        java.lang.String str5 = python2Target1.getListLabel("Python2Context");
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = null;
        java.lang.String str9 = python2Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator6, "\"_@\"", true);
        java.lang.String str11 = python2Target1.getTargetStringLiteralFromString("\\64");
        boolean boolean12 = python2Target1.templatesExist();
        org.antlr.v4.tool.Grammar grammar13 = null;
        org.stringtemplate.v4.ST sT14 = null;
        // The following exception was thrown during execution in test generation
        try {
            python2Target1.genListenerFile(grammar13, sT14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Python2Context" + "'", str5, "Python2Context");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\"_@\"" + "'", str9, "\"_@\"");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "\"\\\\64\"" + "'", str11, "\"\\\\64\"");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
    }

    @Test
    public void test1811() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1811");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str5 = python2Target1.getTargetStringLiteralFromString("hi!", false);
        java.lang.String str7 = python2Target1.getImplicitRuleLabel("@");
        java.lang.String str9 = python2Target1.getAltLabelContextStructName("a");
        java.lang.String str11 = python2Target1.getTargetStringLiteralFromString("4.5.2.1");
        python2Target1.language = "\"_\"";
        org.stringtemplate.v4.STGroup sTGroup14 = python2Target1.templates;
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "_@" + "'", str7, "_@");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "AContext" + "'", str9, "AContext");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "\"4.5.2.1\"" + "'", str11, "\"4.5.2.1\"");
        org.junit.Assert.assertNotNull(sTGroup14);
    }

    @Test
    public void test1812() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1812");
        org.antlr.v4.codegen.target.Python2Target python2Target0 = new org.antlr.v4.codegen.target.Python2Target();
        java.lang.String str3 = python2Target0.getTargetStringLiteralFromString("@", false);
        org.antlr.v4.codegen.CodeGenerator codeGenerator4 = null;
        java.lang.String str7 = python2Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator4, "_\"\\\"\\\"\"", true);
        org.antlr.v4.tool.Grammar grammar8 = null;
        org.stringtemplate.v4.ST sT9 = null;
        python2Target0.genRecognizerHeaderFile(grammar8, sT9, "\\\"\\\\\\\"\\\\\\\"\\\\\\\"\\\"");
        java.lang.String str12 = python2Target0.getLanguage();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "@" + "'", str3, "@");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "\"\\\"\\\"\\\"\"" + "'", str7, "\"\\\"\\\"\\\"\"");
        org.junit.Assert.assertNull(str12);
    }

    @Test
    public void test1813() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1813");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str5 = python2Target1.getTargetStringLiteralFromString("hi!", false);
        int int6 = python2Target1.getInlineTestSetWordSize();
        java.lang.String str8 = python2Target1.getTargetStringLiteralFromString("_tset");
        java.lang.String str10 = python2Target1.getTargetStringLiteralFromString("Python2Context");
        java.lang.String str12 = python2Target1.getImplicitSetLabel("a");
        java.lang.String str13 = python2Target1.language;
        python2Target1.addBadWords();
        java.lang.String str16 = python2Target1.getImplicitSetLabel("\"_tset\\\\64\"");
        org.antlr.v4.tool.Grammar grammar17 = null;
        org.stringtemplate.v4.ST sT18 = null;
        // The following exception was thrown during execution in test generation
        try {
            python2Target1.genFile(grammar17, sT18, "\"\\\"\\\\\\\"\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"\\\\\\\"\\\"\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 64 + "'", int6 == 64);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\"_tset\"" + "'", str8, "\"_tset\"");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\"Python2Context\"" + "'", str10, "\"Python2Context\"");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "_tseta" + "'", str12, "_tseta");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Python2" + "'", str13, "Python2");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "_tset\"_tset\\\\64\"" + "'", str16, "_tset\"_tset\\\\64\"");
    }

    @Test
    public void test1814() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1814");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str5 = python2Target1.getTargetStringLiteralFromString("hi!", false);
        java.lang.String str7 = python2Target1.getImplicitRuleLabel("@");
        python2Target1.addBadWords();
        boolean boolean9 = python2Target1.wantsBaseListener();
        java.lang.String str11 = python2Target1.getImplicitSetLabel("_tset");
        org.antlr.v4.codegen.CodeGenerator codeGenerator12 = null;
        python2Target1.gen = codeGenerator12;
        python2Target1.language = "\"\\\"\\\"\"ContextContext";
        org.stringtemplate.v4.STGroup sTGroup16 = python2Target1.getTemplates();
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "_@" + "'", str7, "_@");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "_tset_tset" + "'", str11, "_tset_tset");
        org.junit.Assert.assertNotNull(sTGroup16);
    }

    @Test
    public void test1815() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1815");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str4 = python2Target1.encodeIntAsCharEscape(64);
        java.lang.String str5 = python2Target1.getLanguage();
        java.lang.String str7 = python2Target1.getListLabel("");
        java.lang.String str8 = python2Target1.getVersion();
        java.util.Set<java.lang.String> strSet9 = python2Target1.getBadWords();
        java.lang.String str10 = python2Target1.language;
        org.antlr.v4.codegen.CodeGenerator codeGenerator11 = python2Target1.gen;
        org.antlr.v4.tool.Grammar grammar12 = null;
        org.stringtemplate.v4.ST sT13 = null;
        python2Target1.genRecognizerHeaderFile(grammar12, sT13, "\"\\\"hi!\\\"\"");
        int int16 = python2Target1.getInlineTestSetWordSize();
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "@" + "'", str4, "@");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Python2" + "'", str5, "Python2");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "4.5.2.1" + "'", str8, "4.5.2.1");
        org.junit.Assert.assertNotNull(strSet9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Python2" + "'", str10, "Python2");
        org.junit.Assert.assertNull(codeGenerator11);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 64 + "'", int16 == 64);
    }

    @Test
    public void test1816() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1816");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str4 = python2Target1.encodeIntAsCharEscape(64);
        java.lang.String str7 = python2Target1.getTargetStringLiteralFromString("\"\"", true);
        java.lang.String str9 = python2Target1.getImplicitRuleLabel("hi!");
        java.lang.String str12 = python2Target1.getTargetStringLiteralFromString("_hi!", true);
        org.stringtemplate.v4.STGroup sTGroup13 = python2Target1.loadTemplates();
        org.stringtemplate.v4.STGroup sTGroup14 = python2Target1.getTemplates();
        org.antlr.v4.codegen.CodeGenerator codeGenerator15 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target16 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator15);
        java.lang.String str18 = python2Target16.getImplicitSetLabel("");
        org.antlr.v4.codegen.CodeGenerator codeGenerator19 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target20 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator19);
        java.util.Set<java.lang.String> strSet21 = python2Target20.badWords;
        java.lang.String str23 = python2Target20.encodeIntAsCharEscape(64);
        java.lang.String str24 = python2Target20.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator25 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target26 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator25);
        java.lang.String[] strArray27 = python2Target26.targetCharValueEscape;
        java.lang.String str28 = python2Target26.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup29 = python2Target26.getTemplates();
        python2Target20.templates = sTGroup29;
        python2Target16.templates = sTGroup29;
        java.lang.String str33 = python2Target16.getAltLabelContextStructName("Python2");
        org.stringtemplate.v4.STGroup sTGroup34 = python2Target16.loadTemplates();
        java.lang.String str37 = python2Target16.getTargetStringLiteralFromString("\"_tset\"", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator38 = python2Target16.getCodeGenerator();
        org.stringtemplate.v4.STGroup sTGroup39 = python2Target16.loadTemplates();
        python2Target1.templates = sTGroup39;
        java.lang.String str43 = python2Target1.getTargetStringLiteralFromString("_\\\"\\\\\\\"a\\\\\\\"\\\"", false);
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "@" + "'", str4, "@");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "\"\\\"\\\"\"" + "'", str7, "\"\\\"\\\"\"");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "_hi!" + "'", str9, "_hi!");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "\"_hi!\"" + "'", str12, "\"_hi!\"");
        org.junit.Assert.assertNotNull(sTGroup13);
        org.junit.Assert.assertNotNull(sTGroup14);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "_tset" + "'", str18, "_tset");
        org.junit.Assert.assertNotNull(strSet21);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "@" + "'", str23, "@");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "Python2" + "'", str24, "Python2");
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "Python2" + "'", str28, "Python2");
        org.junit.Assert.assertNotNull(sTGroup29);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "Python2Context" + "'", str33, "Python2Context");
        org.junit.Assert.assertNotNull(sTGroup34);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "\"\\\"_tset\\\"\"" + "'", str37, "\"\\\"_tset\\\"\"");
        org.junit.Assert.assertNull(codeGenerator38);
        org.junit.Assert.assertNotNull(sTGroup39);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "_\\\\\\\"\\\\\\\\\\\\\\\"a\\\\\\\\\\\\\\\"\\\\\\\"" + "'", str43, "_\\\\\\\"\\\\\\\\\\\\\\\"a\\\\\\\\\\\\\\\"\\\\\\\"");
    }

    @Test
    public void test1817() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1817");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str4 = python2Target1.encodeIntAsCharEscape(64);
        java.lang.String str7 = python2Target1.getTargetStringLiteralFromString("\"\"", true);
        java.lang.String str9 = python2Target1.getImplicitRuleLabel("hi!");
        boolean boolean10 = python2Target1.supportsOverloadedMethods();
        boolean boolean11 = python2Target1.templatesExist();
        python2Target1.language = "__\\\"\\\"ContextContext";
        // The following exception was thrown during execution in test generation
        try {
            org.stringtemplate.v4.STGroup sTGroup14 = python2Target1.loadTemplates();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "@" + "'", str4, "@");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "\"\\\"\\\"\"" + "'", str7, "\"\\\"\\\"\"");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "_hi!" + "'", str9, "_hi!");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
    }

    @Test
    public void test1818() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1818");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        org.stringtemplate.v4.STGroup sTGroup2 = python2Target1.templates;
        int int3 = python2Target1.getInlineTestSetWordSize();
        boolean boolean4 = python2Target1.templatesExist();
        org.stringtemplate.v4.STGroup sTGroup5 = python2Target1.getTemplates();
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = null;
        java.lang.String str9 = python2Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator6, "_\"\\\"\\\"\"", true);
        java.lang.String[] strArray10 = python2Target1.targetCharValueEscape;
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 64 + "'", int3 == 64);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(sTGroup5);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\"\\\"\\\"\\\"\"" + "'", str9, "\"\\\"\\\"\\\"\"");
        org.junit.Assert.assertNotNull(strArray10);
    }

    @Test
    public void test1819() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1819");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str5 = python2Target1.getTargetStringLiteralFromString("hi!", false);
        java.lang.String str7 = python2Target1.getImplicitRuleLabel("@");
        java.lang.String str9 = python2Target1.getAltLabelContextStructName("a");
        java.lang.String str10 = python2Target1.language;
        java.lang.String str12 = python2Target1.getAltLabelContextStructName("_tset_tset\\n");
        org.antlr.v4.tool.Grammar grammar13 = null;
        org.stringtemplate.v4.ST sT14 = null;
        python2Target1.genRecognizerHeaderFile(grammar13, sT14, "\"\\\"\\\\\\\"_@\\\\\\\"\\\"\"");
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "_@" + "'", str7, "_@");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "AContext" + "'", str9, "AContext");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Python2" + "'", str10, "Python2");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "_tset_tset\\nContext" + "'", str12, "_tset_tset\\nContext");
    }

    @Test
    public void test1820() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1820");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String str3 = python2Target1.getImplicitSetLabel("");
        org.antlr.v4.codegen.CodeGenerator codeGenerator4 = null;
        java.lang.String str7 = python2Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator4, "", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = null;
        java.lang.String str11 = python2Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator8, "\"\\\"\\\"\"", false);
        java.lang.String[] strArray12 = python2Target1.targetCharValueEscape;
        boolean boolean13 = python2Target1.wantsBaseListener();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "_tset" + "'", str3, "_tset");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "\"\"" + "'", str7, "\"\"");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "\\\"\\\"" + "'", str11, "\\\"\\\"");
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test1821() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1821");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str4 = python2Target1.encodeIntAsCharEscape(64);
        org.antlr.v4.codegen.CodeGenerator codeGenerator5 = python2Target1.gen;
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target7 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator6);
        java.util.Set<java.lang.String> strSet8 = python2Target7.badWords;
        boolean boolean9 = python2Target7.wantsBaseVisitor();
        boolean boolean10 = python2Target7.wantsBaseVisitor();
        org.antlr.v4.codegen.CodeGenerator codeGenerator11 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target12 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator11);
        boolean boolean13 = python2Target12.wantsBaseVisitor();
        java.util.Set<java.lang.String> strSet14 = python2Target12.badWords;
        python2Target7.badWords = strSet14;
        int int16 = python2Target7.getSerializedATNSegmentLimit();
        org.stringtemplate.v4.STGroup sTGroup17 = python2Target7.loadTemplates();
        python2Target1.templates = sTGroup17;
        java.lang.String str20 = python2Target1.getImplicitRuleLabel("d");
        java.lang.String str22 = python2Target1.getAltLabelContextStructName("\"\\\"hi!\\\"\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator23 = null;
        python2Target1.gen = codeGenerator23;
        boolean boolean25 = python2Target1.wantsBaseVisitor();
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "@" + "'", str4, "@");
        org.junit.Assert.assertNull(codeGenerator5);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strSet14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 2147483647 + "'", int16 == 2147483647);
        org.junit.Assert.assertNotNull(sTGroup17);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "_d" + "'", str20, "_d");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "\"\\\"hi!\\\"\"Context" + "'", str22, "\"\\\"hi!\\\"\"Context");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
    }

    @Test
    public void test1822() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1822");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str4 = python2Target1.encodeIntAsCharEscape(64);
        java.lang.String str5 = python2Target1.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target7 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator6);
        java.lang.String[] strArray8 = python2Target7.targetCharValueEscape;
        java.lang.String str9 = python2Target7.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup10 = python2Target7.getTemplates();
        python2Target1.templates = sTGroup10;
        java.lang.String str13 = python2Target1.getTargetStringLiteralFromString("_@");
        java.lang.String str15 = python2Target1.getTargetStringLiteralFromString("\\\"\\\"Context");
        boolean boolean16 = python2Target1.templatesExist();
        java.lang.String str18 = python2Target1.getListLabel("_tset_\\\"\\\"Context");
        org.antlr.v4.tool.ast.GrammarAST grammarAST19 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str20 = python2Target1.getLoopLabel(grammarAST19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "@" + "'", str4, "@");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Python2" + "'", str5, "Python2");
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Python2" + "'", str9, "Python2");
        org.junit.Assert.assertNotNull(sTGroup10);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "\"_@\"" + "'", str13, "\"_@\"");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "\"\\\\\\\"\\\\\\\"Context\"" + "'", str15, "\"\\\\\\\"\\\\\\\"Context\"");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "_tset_\\\"\\\"Context" + "'", str18, "_tset_\\\"\\\"Context");
    }

    @Test
    public void test1823() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1823");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str4 = python2Target1.encodeIntAsCharEscape(64);
        java.lang.String str5 = python2Target1.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target7 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator6);
        java.lang.String[] strArray8 = python2Target7.targetCharValueEscape;
        java.lang.String str9 = python2Target7.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup10 = python2Target7.getTemplates();
        python2Target1.templates = sTGroup10;
        java.util.Set<java.lang.String> strSet12 = python2Target1.getBadWords();
        java.lang.String str15 = python2Target1.getTargetStringLiteralFromString("\"hi!\"", true);
        org.stringtemplate.v4.STGroup sTGroup16 = python2Target1.templates;
        int int17 = python2Target1.getSerializedATNSegmentLimit();
        org.stringtemplate.v4.STGroup sTGroup18 = python2Target1.templates;
        java.lang.Class<?> wildcardClass19 = sTGroup18.getClass();
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "@" + "'", str4, "@");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Python2" + "'", str5, "Python2");
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Python2" + "'", str9, "Python2");
        org.junit.Assert.assertNotNull(sTGroup10);
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "\"\\\"hi!\\\"\"" + "'", str15, "\"\\\"hi!\\\"\"");
        org.junit.Assert.assertNotNull(sTGroup16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 2147483647 + "'", int17 == 2147483647);
        org.junit.Assert.assertNotNull(sTGroup18);
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test1824() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1824");
        org.antlr.v4.codegen.target.Python2Target python2Target0 = new org.antlr.v4.codegen.target.Python2Target();
        java.lang.String str3 = python2Target0.getTargetStringLiteralFromString("hi!", true);
        java.lang.String str4 = python2Target0.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator5 = python2Target0.gen;
        org.antlr.v4.tool.Grammar grammar6 = null;
        org.stringtemplate.v4.ST sT7 = null;
        python2Target0.genRecognizerHeaderFile(grammar6, sT7, "_\\\"\\\\\\\"\\\\\\\"\\\"");
        org.antlr.v4.tool.ast.GrammarAST grammarAST10 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean11 = python2Target0.visibleGrammarSymbolCausesIssueInGeneratedCode(grammarAST10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "\"hi!\"" + "'", str3, "\"hi!\"");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "4.5.2.1" + "'", str4, "4.5.2.1");
        org.junit.Assert.assertNull(codeGenerator5);
    }

    @Test
    public void test1825() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1825");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str5 = python2Target1.getTargetStringLiteralFromString("hi!", false);
        java.lang.String str7 = python2Target1.getImplicitRuleLabel("@");
        python2Target1.addBadWords();
        int int9 = python2Target1.getInlineTestSetWordSize();
        java.lang.String[] strArray10 = python2Target1.targetCharValueEscape;
        java.lang.String str12 = python2Target1.getListLabel("\"_@\"");
        java.lang.String str15 = python2Target1.getTargetStringLiteralFromString("\"hi!\"", false);
        java.lang.String str17 = python2Target1.encodeIntAsCharEscape(1);
        org.stringtemplate.v4.STGroup sTGroup18 = python2Target1.loadTemplates();
        org.antlr.v4.codegen.CodeGenerator codeGenerator19 = null;
        java.lang.String str22 = python2Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator19, "_\"\\\"Python2Context\\\"\"", true);
        boolean boolean23 = python2Target1.wantsBaseVisitor();
        int int24 = python2Target1.getInlineTestSetWordSize();
        org.stringtemplate.v4.STGroup sTGroup25 = python2Target1.getTemplates();
        python2Target1.addBadWords();
        org.stringtemplate.v4.STGroup sTGroup27 = python2Target1.templates;
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "_@" + "'", str7, "_@");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 64 + "'", int9 == 64);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "\"_@\"" + "'", str12, "\"_@\"");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "\\\"hi!\\\"" + "'", str15, "\\\"hi!\\\"");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "\\1" + "'", str17, "\\1");
        org.junit.Assert.assertNotNull(sTGroup18);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "\"\\\"\\\"Python2Context\\\"\"" + "'", str22, "\"\\\"\\\"Python2Context\\\"\"");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 64 + "'", int24 == 64);
        org.junit.Assert.assertNotNull(sTGroup25);
        org.junit.Assert.assertNotNull(sTGroup27);
    }

    @Test
    public void test1826() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1826");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str5 = python2Target1.getTargetStringLiteralFromString("hi!", false);
        int int6 = python2Target1.getInlineTestSetWordSize();
        boolean boolean7 = python2Target1.wantsBaseListener();
        java.lang.String str9 = python2Target1.encodeIntAsCharEscape((int) (byte) 10);
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target11 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator10);
        java.lang.String[] strArray12 = python2Target11.targetCharValueEscape;
        java.lang.String str13 = python2Target11.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup14 = python2Target11.getTemplates();
        java.lang.String[] strArray15 = python2Target11.targetCharValueEscape;
        python2Target1.targetCharValueEscape = strArray15;
        org.antlr.v4.tool.Grammar grammar17 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str19 = python2Target1.getTokenTypeAsTargetLabel(grammar17, (int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 64 + "'", int6 == 64);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\\n" + "'", str9, "\\n");
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Python2" + "'", str13, "Python2");
        org.junit.Assert.assertNotNull(sTGroup14);
        org.junit.Assert.assertNotNull(strArray15);
    }

    @Test
    public void test1827() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1827");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str5 = python2Target1.getTargetStringLiteralFromString("hi!", false);
        java.lang.String str7 = python2Target1.getImplicitRuleLabel("@");
        python2Target1.addBadWords();
        boolean boolean9 = python2Target1.wantsBaseListener();
        boolean boolean10 = python2Target1.supportsOverloadedMethods();
        org.antlr.v4.codegen.CodeGenerator codeGenerator11 = null;
        python2Target1.gen = codeGenerator11;
        org.antlr.v4.codegen.CodeGenerator codeGenerator13 = null;
        python2Target1.gen = codeGenerator13;
        java.lang.String str17 = python2Target1.getTargetStringLiteralFromString("_hi!", false);
        java.lang.String str19 = python2Target1.getImplicitSetLabel("tset6Contex");
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "_@" + "'", str7, "_@");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "_hi!" + "'", str17, "_hi!");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "_tsettset6Contex" + "'", str19, "_tsettset6Contex");
    }

    @Test
    public void test1828() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1828");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str5 = python2Target1.getTargetStringLiteralFromString("hi!", false);
        java.lang.String str7 = python2Target1.getImplicitRuleLabel("@");
        python2Target1.addBadWords();
        boolean boolean9 = python2Target1.wantsBaseListener();
        java.lang.String str11 = python2Target1.getImplicitSetLabel("_tset");
        org.antlr.v4.codegen.CodeGenerator codeGenerator12 = null;
        python2Target1.gen = codeGenerator12;
        org.antlr.v4.codegen.CodeGenerator codeGenerator14 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target15 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator14);
        java.lang.String[] strArray16 = python2Target15.targetCharValueEscape;
        java.lang.String str17 = python2Target15.getLanguage();
        int int18 = python2Target15.getInlineTestSetWordSize();
        org.antlr.v4.codegen.CodeGenerator codeGenerator19 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target20 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator19);
        java.util.Set<java.lang.String> strSet21 = python2Target20.badWords;
        java.lang.String str23 = python2Target20.encodeIntAsCharEscape(64);
        java.lang.String str24 = python2Target20.getLanguage();
        java.lang.String str26 = python2Target20.getListLabel("");
        java.lang.String str27 = python2Target20.getVersion();
        java.util.Set<java.lang.String> strSet28 = python2Target20.getBadWords();
        python2Target15.badWords = strSet28;
        python2Target1.badWords = strSet28;
        org.antlr.v4.codegen.CodeGenerator codeGenerator31 = null;
        python2Target1.gen = codeGenerator31;
        boolean boolean33 = python2Target1.supportsOverloadedMethods();
        org.antlr.v4.tool.Grammar grammar34 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator35 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target36 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator35);
        python2Target36.language = "\"\\\"hi!\\\"\"";
        java.lang.String str40 = python2Target36.encodeIntAsCharEscape((int) '4');
        java.lang.String str41 = python2Target36.language;
        java.lang.String str43 = python2Target36.getTargetStringLiteralFromString("\"_@\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator44 = python2Target36.gen;
        org.antlr.v4.tool.Grammar grammar45 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator46 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target47 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator46);
        org.stringtemplate.v4.STGroup sTGroup48 = python2Target47.templates;
        int int49 = python2Target47.getInlineTestSetWordSize();
        boolean boolean50 = python2Target47.templatesExist();
        org.stringtemplate.v4.STGroup sTGroup51 = python2Target47.getTemplates();
        java.lang.String str53 = python2Target47.getListLabel("\"\\\"\\\\\\\"\\\\\\\"\\\"Context\"");
        org.antlr.v4.tool.Grammar grammar54 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator55 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target56 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator55);
        java.util.Set<java.lang.String> strSet57 = python2Target56.badWords;
        java.lang.String str59 = python2Target56.encodeIntAsCharEscape(64);
        java.lang.String str60 = python2Target56.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator61 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target62 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator61);
        java.lang.String[] strArray63 = python2Target62.targetCharValueEscape;
        java.lang.String str64 = python2Target62.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup65 = python2Target62.getTemplates();
        python2Target56.templates = sTGroup65;
        java.util.Set<java.lang.String> strSet67 = python2Target56.getBadWords();
        java.lang.String str70 = python2Target56.getTargetStringLiteralFromString("\"hi!\"", true);
        int int71 = python2Target56.getInlineTestSetWordSize();
        java.lang.String str73 = python2Target56.getTargetStringLiteralFromString("_");
        java.lang.String str75 = python2Target56.getTargetStringLiteralFromString("_tset_tset\"hi!\"");
        org.antlr.v4.tool.Grammar grammar76 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator77 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target78 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator77);
        java.lang.String str80 = python2Target78.getImplicitSetLabel("");
        org.antlr.v4.codegen.CodeGenerator codeGenerator81 = null;
        java.lang.String str84 = python2Target78.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator81, "", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator85 = null;
        java.lang.String str88 = python2Target78.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator85, "\"\\\"\\\"\"", false);
        int int89 = python2Target78.getSerializedATNSegmentLimit();
        org.antlr.v4.tool.Grammar grammar90 = null;
        int[] intArray91 = new int[] {};
        java.lang.String[] strArray92 = python2Target78.getTokenTypesAsTargetLabels(grammar90, intArray91);
        java.lang.String[] strArray93 = python2Target56.getTokenTypesAsTargetLabels(grammar76, intArray91);
        java.lang.String[] strArray94 = python2Target47.getTokenTypesAsTargetLabels(grammar54, intArray91);
        java.lang.String[] strArray95 = python2Target36.getTokenTypesAsTargetLabels(grammar45, intArray91);
        java.lang.String[] strArray96 = python2Target1.getTokenTypesAsTargetLabels(grammar34, intArray91);
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "_@" + "'", str7, "_@");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "_tset_tset" + "'", str11, "_tset_tset");
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Python2" + "'", str17, "Python2");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 64 + "'", int18 == 64);
        org.junit.Assert.assertNotNull(strSet21);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "@" + "'", str23, "@");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "Python2" + "'", str24, "Python2");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "4.5.2.1" + "'", str27, "4.5.2.1");
        org.junit.Assert.assertNotNull(strSet28);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "\\64" + "'", str40, "\\64");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "\"\\\"hi!\\\"\"" + "'", str41, "\"\\\"hi!\\\"\"");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "\"\\\"_@\\\"\"" + "'", str43, "\"\\\"_@\\\"\"");
        org.junit.Assert.assertNull(codeGenerator44);
        org.junit.Assert.assertNull(sTGroup48);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 64 + "'", int49 == 64);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(sTGroup51);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "\"\\\"\\\\\\\"\\\\\\\"\\\"Context\"" + "'", str53, "\"\\\"\\\\\\\"\\\\\\\"\\\"Context\"");
        org.junit.Assert.assertNotNull(strSet57);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "@" + "'", str59, "@");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "Python2" + "'", str60, "Python2");
        org.junit.Assert.assertNotNull(strArray63);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "Python2" + "'", str64, "Python2");
        org.junit.Assert.assertNotNull(sTGroup65);
        org.junit.Assert.assertNotNull(strSet67);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "\"\\\"hi!\\\"\"" + "'", str70, "\"\\\"hi!\\\"\"");
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 64 + "'", int71 == 64);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "\"_\"" + "'", str73, "\"_\"");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "\"_tset_tset\\\"hi!\\\"\"" + "'", str75, "\"_tset_tset\\\"hi!\\\"\"");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "_tset" + "'", str80, "_tset");
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "\"\"" + "'", str84, "\"\"");
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "\\\"\\\"" + "'", str88, "\\\"\\\"");
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + 2147483647 + "'", int89 == 2147483647);
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[]");
        org.junit.Assert.assertNotNull(strArray92);
        org.junit.Assert.assertNotNull(strArray93);
        org.junit.Assert.assertNotNull(strArray94);
        org.junit.Assert.assertNotNull(strArray95);
        org.junit.Assert.assertNotNull(strArray96);
    }

    @Test
    public void test1829() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1829");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String[] strArray2 = python2Target1.targetCharValueEscape;
        java.lang.String str3 = python2Target1.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup4 = python2Target1.getTemplates();
        java.lang.String[] strArray5 = python2Target1.targetCharValueEscape;
        java.lang.String[] strArray6 = org.antlr.v4.codegen.target.Python2Target.python2Keywords;
        python2Target1.targetCharValueEscape = strArray6;
        boolean boolean8 = python2Target1.supportsOverloadedMethods();
        java.lang.String str11 = python2Target1.getTargetStringLiteralFromString("_AContext", true);
        java.lang.String str13 = python2Target1.getImplicitSetLabel("_\"\\\\0\"");
        java.lang.String str16 = python2Target1.getTargetStringLiteralFromString("\"\\\"\\\"\"", false);
        org.antlr.v4.codegen.CodeGenerator codeGenerator17 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target18 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator17);
        java.util.Set<java.lang.String> strSet19 = python2Target18.badWords;
        java.lang.String str21 = python2Target18.encodeIntAsCharEscape(64);
        java.lang.String str22 = python2Target18.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator23 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target24 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator23);
        java.lang.String[] strArray25 = python2Target24.targetCharValueEscape;
        java.lang.String str26 = python2Target24.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup27 = python2Target24.getTemplates();
        python2Target18.templates = sTGroup27;
        java.lang.String str30 = python2Target18.getTargetStringLiteralFromString("_@");
        java.lang.String str32 = python2Target18.getTargetStringLiteralFromString("\\\"\\\"Context");
        org.antlr.v4.codegen.CodeGenerator codeGenerator33 = python2Target18.getCodeGenerator();
        boolean boolean34 = python2Target18.templatesExist();
        org.antlr.v4.codegen.CodeGenerator codeGenerator35 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target36 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator35);
        java.util.Set<java.lang.String> strSet37 = python2Target36.badWords;
        java.lang.String str40 = python2Target36.getTargetStringLiteralFromString("hi!", false);
        java.lang.String str42 = python2Target36.getImplicitRuleLabel("@");
        python2Target36.addBadWords();
        int int44 = python2Target36.getInlineTestSetWordSize();
        java.lang.String[] strArray45 = python2Target36.targetCharValueEscape;
        java.lang.String str47 = python2Target36.getListLabel("\"_@\"");
        java.lang.String str50 = python2Target36.getTargetStringLiteralFromString("\"hi!\"", false);
        java.lang.String str51 = python2Target36.getVersion();
        org.stringtemplate.v4.STGroup sTGroup52 = python2Target36.getTemplates();
        java.util.Set<java.lang.String> strSet53 = python2Target36.getBadWords();
        python2Target18.badWords = strSet53;
        python2Target1.badWords = strSet53;
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Python2" + "'", str3, "Python2");
        org.junit.Assert.assertNotNull(sTGroup4);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "\"_AContext\"" + "'", str11, "\"_AContext\"");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "_tset_\"\\\\0\"" + "'", str13, "_tset_\"\\\\0\"");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "\\\"\\\\\\\"\\\\\\\"\\\"" + "'", str16, "\\\"\\\\\\\"\\\\\\\"\\\"");
        org.junit.Assert.assertNotNull(strSet19);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "@" + "'", str21, "@");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "Python2" + "'", str22, "Python2");
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "Python2" + "'", str26, "Python2");
        org.junit.Assert.assertNotNull(sTGroup27);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "\"_@\"" + "'", str30, "\"_@\"");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "\"\\\\\\\"\\\\\\\"Context\"" + "'", str32, "\"\\\\\\\"\\\\\\\"Context\"");
        org.junit.Assert.assertNull(codeGenerator33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(strSet37);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "hi!" + "'", str40, "hi!");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "_@" + "'", str42, "_@");
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 64 + "'", int44 == 64);
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "\"_@\"" + "'", str47, "\"_@\"");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "\\\"hi!\\\"" + "'", str50, "\\\"hi!\\\"");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "4.5.2.1" + "'", str51, "4.5.2.1");
        org.junit.Assert.assertNotNull(sTGroup52);
        org.junit.Assert.assertNotNull(strSet53);
    }

    @Test
    public void test1830() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1830");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str4 = python2Target1.encodeIntAsCharEscape(64);
        java.lang.String str7 = python2Target1.getTargetStringLiteralFromString("\"\"", true);
        java.lang.String str9 = python2Target1.getImplicitRuleLabel("hi!");
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target11 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator10);
        java.util.Set<java.lang.String> strSet12 = python2Target11.badWords;
        java.lang.String str15 = python2Target11.getTargetStringLiteralFromString("hi!", false);
        int int16 = python2Target11.getInlineTestSetWordSize();
        boolean boolean17 = python2Target11.wantsBaseListener();
        java.lang.String str19 = python2Target11.encodeIntAsCharEscape((int) (byte) 10);
        org.antlr.v4.codegen.CodeGenerator codeGenerator20 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target21 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator20);
        java.lang.String[] strArray22 = python2Target21.targetCharValueEscape;
        java.lang.String str23 = python2Target21.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup24 = python2Target21.getTemplates();
        java.lang.String[] strArray25 = python2Target21.targetCharValueEscape;
        python2Target11.targetCharValueEscape = strArray25;
        python2Target1.targetCharValueEscape = strArray25;
        int int28 = python2Target1.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet29 = python2Target1.badWords;
        int int30 = python2Target1.getSerializedATNSegmentLimit();
        boolean boolean31 = python2Target1.templatesExist();
        org.antlr.v4.codegen.CodeGenerator codeGenerator32 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target33 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator32);
        java.util.Set<java.lang.String> strSet34 = python2Target33.badWords;
        java.lang.String str37 = python2Target33.getTargetStringLiteralFromString("hi!", false);
        java.lang.String str39 = python2Target33.getImplicitRuleLabel("@");
        python2Target33.addBadWords();
        boolean boolean41 = python2Target33.wantsBaseListener();
        java.lang.String str43 = python2Target33.getImplicitSetLabel("_tset");
        org.antlr.v4.codegen.CodeGenerator codeGenerator44 = null;
        python2Target33.gen = codeGenerator44;
        java.lang.String str47 = python2Target33.getImplicitSetLabel("\"\\\"\\\\\\\"\\\\\\\"\\\"Context\"");
        java.util.Set<java.lang.String> strSet48 = python2Target33.badWords;
        python2Target1.badWords = strSet48;
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "@" + "'", str4, "@");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "\"\\\"\\\"\"" + "'", str7, "\"\\\"\\\"\"");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "_hi!" + "'", str9, "_hi!");
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 64 + "'", int16 == 64);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "\\n" + "'", str19, "\\n");
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "Python2" + "'", str23, "Python2");
        org.junit.Assert.assertNotNull(sTGroup24);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 64 + "'", int28 == 64);
        org.junit.Assert.assertNotNull(strSet29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 2147483647 + "'", int30 == 2147483647);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(strSet34);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "hi!" + "'", str37, "hi!");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "_@" + "'", str39, "_@");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "_tset_tset" + "'", str43, "_tset_tset");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "_tset\"\\\"\\\\\\\"\\\\\\\"\\\"Context\"" + "'", str47, "_tset\"\\\"\\\\\\\"\\\\\\\"\\\"Context\"");
        org.junit.Assert.assertNotNull(strSet48);
    }

    @Test
    public void test1831() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1831");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str4 = python2Target1.encodeIntAsCharEscape(64);
        java.lang.String str5 = python2Target1.getLanguage();
        java.lang.String str7 = python2Target1.getListLabel("");
        java.lang.String str8 = python2Target1.getVersion();
        java.lang.String str9 = python2Target1.language;
        java.lang.String str10 = python2Target1.language;
        boolean boolean11 = python2Target1.templatesExist();
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "@" + "'", str4, "@");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Python2" + "'", str5, "Python2");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "4.5.2.1" + "'", str8, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Python2" + "'", str9, "Python2");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Python2" + "'", str10, "Python2");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
    }

    @Test
    public void test1832() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1832");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str5 = python2Target1.getTargetStringLiteralFromString("hi!", false);
        int int6 = python2Target1.getInlineTestSetWordSize();
        boolean boolean7 = python2Target1.wantsBaseListener();
        java.util.Set<java.lang.String> strSet8 = python2Target1.badWords;
        org.antlr.v4.codegen.CodeGenerator codeGenerator9 = python2Target1.gen;
        java.util.Set<java.lang.String> strSet10 = python2Target1.badWords;
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 64 + "'", int6 == 64);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertNull(codeGenerator9);
        org.junit.Assert.assertNotNull(strSet10);
    }

    @Test
    public void test1833() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1833");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str5 = python2Target1.getTargetStringLiteralFromString("hi!", false);
        java.lang.String str7 = python2Target1.getImplicitRuleLabel("@");
        python2Target1.addBadWords();
        boolean boolean9 = python2Target1.wantsBaseListener();
        boolean boolean10 = python2Target1.supportsOverloadedMethods();
        java.lang.String[] strArray11 = null;
        python2Target1.targetCharValueEscape = strArray11;
        org.antlr.v4.codegen.CodeGenerator codeGenerator13 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target14 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator13);
        java.util.Set<java.lang.String> strSet15 = python2Target14.badWords;
        java.lang.String str18 = python2Target14.getTargetStringLiteralFromString("hi!", false);
        java.lang.String str20 = python2Target14.getImplicitRuleLabel("@");
        python2Target14.addBadWords();
        boolean boolean22 = python2Target14.wantsBaseListener();
        org.antlr.v4.codegen.CodeGenerator codeGenerator23 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target24 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator23);
        java.util.Set<java.lang.String> strSet25 = python2Target24.badWords;
        java.lang.String str27 = python2Target24.encodeIntAsCharEscape(64);
        java.lang.String str30 = python2Target24.getTargetStringLiteralFromString("\"\"", true);
        java.lang.String str32 = python2Target24.getImplicitRuleLabel("hi!");
        java.lang.String str35 = python2Target24.getTargetStringLiteralFromString("_hi!", true);
        org.stringtemplate.v4.STGroup sTGroup36 = python2Target24.templates;
        python2Target14.templates = sTGroup36;
        python2Target1.templates = sTGroup36;
        java.lang.String[] strArray39 = python2Target1.targetCharValueEscape;
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "_@" + "'", str7, "_@");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(strSet15);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "_@" + "'", str20, "_@");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(strSet25);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "@" + "'", str27, "@");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "\"\\\"\\\"\"" + "'", str30, "\"\\\"\\\"\"");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "_hi!" + "'", str32, "_hi!");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "\"_hi!\"" + "'", str35, "\"_hi!\"");
        org.junit.Assert.assertNotNull(sTGroup36);
        org.junit.Assert.assertNull(strArray39);
    }

    @Test
    public void test1834() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1834");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String str3 = python2Target1.getImplicitSetLabel("");
        org.antlr.v4.codegen.CodeGenerator codeGenerator4 = null;
        java.lang.String str7 = python2Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator4, "", true);
        org.antlr.v4.tool.Grammar grammar8 = null;
        org.stringtemplate.v4.ST sT9 = null;
        python2Target1.genRecognizerHeaderFile(grammar8, sT9, "_@");
        java.lang.String str13 = python2Target1.getAltLabelContextStructName("_hi!");
        java.lang.String str15 = python2Target1.getAltLabelContextStructName("i");
        org.antlr.v4.tool.Rule rule16 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str17 = python2Target1.getRuleFunctionContextStructName(rule16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "_tset" + "'", str3, "_tset");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "\"\"" + "'", str7, "\"\"");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "_hi!Context" + "'", str13, "_hi!Context");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "IContext" + "'", str15, "IContext");
    }

    @Test
    public void test1835() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1835");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        boolean boolean2 = python2Target1.wantsBaseVisitor();
        java.util.Set<java.lang.String> strSet3 = python2Target1.badWords;
        org.antlr.v4.codegen.CodeGenerator codeGenerator4 = python2Target1.getCodeGenerator();
        org.antlr.v4.tool.Grammar grammar5 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target7 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator6);
        python2Target7.language = "\"\\\"hi!\\\"\"";
        java.lang.String str11 = python2Target7.encodeIntAsCharEscape((int) '4');
        org.antlr.v4.codegen.CodeGenerator codeGenerator12 = python2Target7.gen;
        org.antlr.v4.codegen.CodeGenerator codeGenerator13 = python2Target7.getCodeGenerator();
        java.lang.String[] strArray14 = python2Target7.targetCharValueEscape;
        org.antlr.v4.tool.Grammar grammar15 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target16 = new org.antlr.v4.codegen.target.Python2Target();
        python2Target16.addBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator18 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target19 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator18);
        java.util.Set<java.lang.String> strSet20 = python2Target19.badWords;
        java.lang.String str22 = python2Target19.getAltLabelContextStructName("\\\"\\\"");
        boolean boolean23 = python2Target19.wantsBaseVisitor();
        java.util.Set<java.lang.String> strSet24 = python2Target19.getBadWords();
        org.stringtemplate.v4.STGroup sTGroup25 = python2Target19.loadTemplates();
        python2Target16.templates = sTGroup25;
        org.antlr.v4.tool.Grammar grammar27 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator28 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target29 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator28);
        java.util.Set<java.lang.String> strSet30 = python2Target29.badWords;
        boolean boolean31 = python2Target29.wantsBaseVisitor();
        boolean boolean32 = python2Target29.wantsBaseVisitor();
        org.antlr.v4.codegen.CodeGenerator codeGenerator33 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target34 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator33);
        boolean boolean35 = python2Target34.wantsBaseVisitor();
        java.util.Set<java.lang.String> strSet36 = python2Target34.badWords;
        python2Target29.badWords = strSet36;
        org.antlr.v4.tool.Grammar grammar38 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator39 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target40 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator39);
        java.lang.String str42 = python2Target40.getImplicitSetLabel("");
        org.antlr.v4.codegen.CodeGenerator codeGenerator43 = null;
        java.lang.String str46 = python2Target40.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator43, "", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator47 = null;
        java.lang.String str50 = python2Target40.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator47, "\"\\\"\\\"\"", false);
        int int51 = python2Target40.getSerializedATNSegmentLimit();
        org.antlr.v4.tool.Grammar grammar52 = null;
        int[] intArray53 = new int[] {};
        java.lang.String[] strArray54 = python2Target40.getTokenTypesAsTargetLabels(grammar52, intArray53);
        java.lang.String[] strArray55 = python2Target29.getTokenTypesAsTargetLabels(grammar38, intArray53);
        java.lang.String[] strArray56 = python2Target16.getTokenTypesAsTargetLabels(grammar27, intArray53);
        java.lang.String[] strArray57 = python2Target7.getTokenTypesAsTargetLabels(grammar15, intArray53);
        java.lang.String[] strArray58 = python2Target1.getTokenTypesAsTargetLabels(grammar5, intArray53);
        org.antlr.v4.codegen.model.RuleFunction ruleFunction59 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str60 = python2Target1.getRuleFunctionContextStructName(ruleFunction59);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNull(codeGenerator4);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "\\64" + "'", str11, "\\64");
        org.junit.Assert.assertNull(codeGenerator12);
        org.junit.Assert.assertNull(codeGenerator13);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertNotNull(strSet20);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "\\\"\\\"Context" + "'", str22, "\\\"\\\"Context");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(strSet24);
        org.junit.Assert.assertNotNull(sTGroup25);
        org.junit.Assert.assertNotNull(strSet30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(strSet36);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "_tset" + "'", str42, "_tset");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "\"\"" + "'", str46, "\"\"");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "\\\"\\\"" + "'", str50, "\\\"\\\"");
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 2147483647 + "'", int51 == 2147483647);
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[]");
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertNotNull(strArray55);
        org.junit.Assert.assertNotNull(strArray56);
        org.junit.Assert.assertNotNull(strArray57);
        org.junit.Assert.assertNotNull(strArray58);
    }

    @Test
    public void test1836() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1836");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str5 = python2Target1.getTargetStringLiteralFromString("hi!", false);
        boolean boolean6 = python2Target1.supportsOverloadedMethods();
        java.util.Set<java.lang.String> strSet7 = python2Target1.getBadWords();
        int int8 = python2Target1.getInlineTestSetWordSize();
        boolean boolean9 = python2Target1.wantsBaseListener();
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = null;
        python2Target1.gen = codeGenerator10;
        java.lang.String str13 = python2Target1.getImplicitRuleLabel("\\\\\\\"Python2Context\\\\\\\"");
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(strSet7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 64 + "'", int8 == 64);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "_\\\\\\\"Python2Context\\\\\\\"" + "'", str13, "_\\\\\\\"Python2Context\\\\\\\"");
    }

    @Test
    public void test1837() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1837");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str4 = python2Target1.encodeIntAsCharEscape(64);
        java.lang.String str7 = python2Target1.getTargetStringLiteralFromString("\"\"", true);
        java.lang.String str9 = python2Target1.getImplicitRuleLabel("hi!");
        java.lang.String str12 = python2Target1.getTargetStringLiteralFromString("_hi!", true);
        org.stringtemplate.v4.STGroup sTGroup13 = python2Target1.loadTemplates();
        org.antlr.v4.tool.ast.GrammarAST grammarAST14 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean15 = python2Target1.visibleGrammarSymbolCausesIssueInGeneratedCode(grammarAST14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "@" + "'", str4, "@");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "\"\\\"\\\"\"" + "'", str7, "\"\\\"\\\"\"");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "_hi!" + "'", str9, "_hi!");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "\"_hi!\"" + "'", str12, "\"_hi!\"");
        org.junit.Assert.assertNotNull(sTGroup13);
    }

    @Test
    public void test1838() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1838");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String[] strArray2 = python2Target1.targetCharValueEscape;
        java.lang.String str4 = python2Target1.getImplicitSetLabel("\\64");
        java.lang.String[] strArray5 = python2Target1.targetCharValueEscape;
        java.lang.String str7 = python2Target1.getAltLabelContextStructName("\"Python2\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target9 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator8);
        java.util.Set<java.lang.String> strSet10 = python2Target9.badWords;
        java.lang.String str12 = python2Target9.encodeIntAsCharEscape(64);
        java.util.Set<java.lang.String> strSet13 = python2Target9.badWords;
        python2Target1.badWords = strSet13;
        org.antlr.v4.tool.ast.GrammarAST grammarAST15 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str16 = python2Target1.getLoopCounter(grammarAST15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "_tset\\64" + "'", str4, "_tset\\64");
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "\"Python2\"Context" + "'", str7, "\"Python2\"Context");
        org.junit.Assert.assertNotNull(strSet10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "@" + "'", str12, "@");
        org.junit.Assert.assertNotNull(strSet13);
    }

    @Test
    public void test1839() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1839");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str5 = python2Target1.getTargetStringLiteralFromString("hi!", false);
        java.lang.String str7 = python2Target1.getImplicitRuleLabel("@");
        python2Target1.addBadWords();
        int int9 = python2Target1.getInlineTestSetWordSize();
        python2Target1.addBadWords();
        java.lang.String str13 = python2Target1.getTargetStringLiteralFromString("\"\\\"\\\"\\\"\"", true);
        java.lang.String[] strArray14 = python2Target1.targetCharValueEscape;
        int int15 = python2Target1.getInlineTestSetWordSize();
        org.antlr.v4.codegen.CodeGenerator codeGenerator16 = python2Target1.gen;
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "_@" + "'", str7, "_@");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 64 + "'", int9 == 64);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "\"\\\"\\\\\\\"\\\\\\\"\\\\\\\"\\\"\"" + "'", str13, "\"\\\"\\\\\\\"\\\\\\\"\\\\\\\"\\\"\"");
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 64 + "'", int15 == 64);
        org.junit.Assert.assertNull(codeGenerator16);
    }

    @Test
    public void test1840() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1840");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str5 = python2Target1.getTargetStringLiteralFromString("hi!", false);
        java.lang.String str7 = python2Target1.getImplicitRuleLabel("@");
        python2Target1.addBadWords();
        boolean boolean9 = python2Target1.wantsBaseListener();
        java.lang.String str11 = python2Target1.getImplicitSetLabel("_tset");
        org.antlr.v4.codegen.CodeGenerator codeGenerator12 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target13 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator12);
        java.lang.String[] strArray14 = python2Target13.targetCharValueEscape;
        java.lang.String str15 = python2Target13.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup16 = python2Target13.getTemplates();
        python2Target1.templates = sTGroup16;
        boolean boolean18 = python2Target1.wantsBaseListener();
        java.lang.String str20 = python2Target1.getImplicitRuleLabel("_\\\"\\\"ContextContext");
        java.lang.String str22 = python2Target1.getImplicitRuleLabel("\"_hi!\"");
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "_@" + "'", str7, "_@");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "_tset_tset" + "'", str11, "_tset_tset");
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Python2" + "'", str15, "Python2");
        org.junit.Assert.assertNotNull(sTGroup16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "__\\\"\\\"ContextContext" + "'", str20, "__\\\"\\\"ContextContext");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "_\"_hi!\"" + "'", str22, "_\"_hi!\"");
    }

    @Test
    public void test1841() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1841");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str5 = python2Target1.getTargetStringLiteralFromString("hi!", false);
        java.lang.String str7 = python2Target1.getImplicitRuleLabel("@");
        python2Target1.addBadWords();
        boolean boolean9 = python2Target1.wantsBaseListener();
        java.lang.String str11 = python2Target1.getImplicitSetLabel("_tset");
        org.antlr.v4.codegen.CodeGenerator codeGenerator12 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target13 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator12);
        java.lang.String[] strArray14 = python2Target13.targetCharValueEscape;
        java.lang.String str15 = python2Target13.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup16 = python2Target13.getTemplates();
        python2Target1.templates = sTGroup16;
        boolean boolean18 = python2Target1.wantsBaseListener();
        org.antlr.v4.codegen.CodeGenerator codeGenerator19 = python2Target1.getCodeGenerator();
        org.antlr.v4.codegen.CodeGenerator codeGenerator20 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target21 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator20);
        java.util.Set<java.lang.String> strSet22 = python2Target21.badWords;
        java.lang.String str25 = python2Target21.getTargetStringLiteralFromString("hi!", false);
        java.lang.String str27 = python2Target21.getImplicitRuleLabel("@");
        python2Target21.addBadWords();
        boolean boolean29 = python2Target21.wantsBaseListener();
        java.lang.String str31 = python2Target21.getImplicitSetLabel("_tset");
        org.antlr.v4.codegen.CodeGenerator codeGenerator32 = python2Target21.getCodeGenerator();
        java.lang.String str34 = python2Target21.getImplicitSetLabel("tset6");
        java.lang.String str36 = python2Target21.encodeIntAsCharEscape(1);
        org.antlr.v4.codegen.CodeGenerator codeGenerator37 = python2Target21.getCodeGenerator();
        org.antlr.v4.codegen.CodeGenerator codeGenerator38 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target39 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator38);
        java.util.Set<java.lang.String> strSet40 = python2Target39.badWords;
        java.lang.String str43 = python2Target39.getTargetStringLiteralFromString("hi!", false);
        java.lang.String str45 = python2Target39.getImplicitRuleLabel("@");
        python2Target39.addBadWords();
        int int47 = python2Target39.getInlineTestSetWordSize();
        python2Target39.addBadWords();
        java.lang.String[] strArray49 = python2Target39.targetCharValueEscape;
        python2Target21.targetCharValueEscape = strArray49;
        python2Target1.targetCharValueEscape = strArray49;
        org.antlr.v4.codegen.target.Python2Target.python2Keywords = strArray49;
        org.antlr.v4.codegen.target.Python2Target.python2Keywords = strArray49;
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "_@" + "'", str7, "_@");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "_tset_tset" + "'", str11, "_tset_tset");
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Python2" + "'", str15, "Python2");
        org.junit.Assert.assertNotNull(sTGroup16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(codeGenerator19);
        org.junit.Assert.assertNotNull(strSet22);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "_@" + "'", str27, "_@");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "_tset_tset" + "'", str31, "_tset_tset");
        org.junit.Assert.assertNull(codeGenerator32);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "_tsettset6" + "'", str34, "_tsettset6");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "\\1" + "'", str36, "\\1");
        org.junit.Assert.assertNull(codeGenerator37);
        org.junit.Assert.assertNotNull(strSet40);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "hi!" + "'", str43, "hi!");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "_@" + "'", str45, "_@");
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 64 + "'", int47 == 64);
        org.junit.Assert.assertNotNull(strArray49);
    }

    @Test
    public void test1842() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1842");
        org.antlr.v4.codegen.target.Python2Target.PythonStringRenderer pythonStringRenderer0 = new org.antlr.v4.codegen.target.Python2Target.PythonStringRenderer();
        java.lang.Object obj1 = null;
        java.util.Locale locale3 = null;
        java.lang.String str4 = pythonStringRenderer0.toString(obj1, "_@", locale3);
        java.util.Locale locale7 = null;
        java.lang.String str8 = pythonStringRenderer0.toString((java.lang.Object) "\\n", "\"\\\"\\\"\"", locale7);
        org.antlr.v4.codegen.target.Python2Target python2Target9 = new org.antlr.v4.codegen.target.Python2Target();
        java.lang.String str12 = python2Target9.getTargetStringLiteralFromString("hi!", true);
        java.lang.String str13 = python2Target9.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator14 = python2Target9.gen;
        boolean boolean15 = python2Target9.supportsOverloadedMethods();
        python2Target9.language = "\\\"\\\\\\\"\\\\\\\"\\\\\\\"\\\"";
        java.util.Locale locale19 = null;
        java.lang.String str20 = pythonStringRenderer0.toString((java.lang.Object) "\\\"\\\\\\\"\\\\\\\"\\\\\\\"\\\"", "_\"\\\\\\\"\\\\\\\"Context\"", locale19);
        java.util.Locale locale23 = null;
        java.lang.String str24 = pythonStringRenderer0.toString((java.lang.Object) "\"_hi!\"", "AContextContext", locale23);
        org.antlr.v4.codegen.CodeGenerator codeGenerator25 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target26 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator25);
        org.stringtemplate.v4.STGroup sTGroup27 = python2Target26.templates;
        int int28 = python2Target26.getInlineTestSetWordSize();
        int int29 = python2Target26.getSerializedATNSegmentLimit();
        java.util.Locale locale31 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str32 = pythonStringRenderer0.toString((java.lang.Object) python2Target26, "_@", locale31);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: null");
        } catch (java.lang.ClassCastException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "_@" + "'", str4, "_@");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\"\\\"\\\"\"" + "'", str8, "\"\\\"\\\"\"");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "\"hi!\"" + "'", str12, "\"hi!\"");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "4.5.2.1" + "'", str13, "4.5.2.1");
        org.junit.Assert.assertNull(codeGenerator14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "_\"\\\\\\\"\\\\\\\"Context\"" + "'", str20, "_\"\\\\\\\"\\\\\\\"Context\"");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "AContextContext" + "'", str24, "AContextContext");
        org.junit.Assert.assertNull(sTGroup27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 64 + "'", int28 == 64);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 2147483647 + "'", int29 == 2147483647);
    }

    @Test
    public void test1843() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1843");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str4 = python2Target1.encodeIntAsCharEscape(64);
        java.lang.String str5 = python2Target1.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target7 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator6);
        java.lang.String[] strArray8 = python2Target7.targetCharValueEscape;
        java.lang.String str9 = python2Target7.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup10 = python2Target7.getTemplates();
        python2Target1.templates = sTGroup10;
        java.lang.String str13 = python2Target1.getTargetStringLiteralFromString("_@");
        java.lang.String str15 = python2Target1.getTargetStringLiteralFromString("\\\"\\\"Context");
        java.lang.String str16 = python2Target1.language;
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "@" + "'", str4, "@");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Python2" + "'", str5, "Python2");
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Python2" + "'", str9, "Python2");
        org.junit.Assert.assertNotNull(sTGroup10);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "\"_@\"" + "'", str13, "\"_@\"");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "\"\\\\\\\"\\\\\\\"Context\"" + "'", str15, "\"\\\\\\\"\\\\\\\"Context\"");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Python2" + "'", str16, "Python2");
    }

    @Test
    public void test1844() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1844");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String str3 = python2Target1.getImplicitSetLabel("");
        org.antlr.v4.codegen.CodeGenerator codeGenerator4 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target5 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator4);
        java.util.Set<java.lang.String> strSet6 = python2Target5.badWords;
        java.lang.String str8 = python2Target5.encodeIntAsCharEscape(64);
        java.lang.String str9 = python2Target5.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target11 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator10);
        java.lang.String[] strArray12 = python2Target11.targetCharValueEscape;
        java.lang.String str13 = python2Target11.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup14 = python2Target11.getTemplates();
        python2Target5.templates = sTGroup14;
        python2Target1.templates = sTGroup14;
        java.lang.String str18 = python2Target1.getAltLabelContextStructName("Python2");
        org.stringtemplate.v4.STGroup sTGroup19 = python2Target1.loadTemplates();
        java.lang.String str21 = python2Target1.getImplicitRuleLabel("\"\\\"Python2Context\\\"\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator22 = python2Target1.getCodeGenerator();
        java.lang.String str24 = python2Target1.getTargetStringLiteralFromString("");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "_tset" + "'", str3, "_tset");
        org.junit.Assert.assertNotNull(strSet6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "@" + "'", str8, "@");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Python2" + "'", str9, "Python2");
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Python2" + "'", str13, "Python2");
        org.junit.Assert.assertNotNull(sTGroup14);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Python2Context" + "'", str18, "Python2Context");
        org.junit.Assert.assertNotNull(sTGroup19);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "_\"\\\"Python2Context\\\"\"" + "'", str21, "_\"\\\"Python2Context\\\"\"");
        org.junit.Assert.assertNull(codeGenerator22);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "\"\"" + "'", str24, "\"\"");
    }

    @Test
    public void test1845() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1845");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String str3 = python2Target1.getImplicitSetLabel("");
        org.antlr.v4.codegen.CodeGenerator codeGenerator4 = null;
        java.lang.String str7 = python2Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator4, "", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = null;
        java.lang.String str11 = python2Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator8, "\"\\\"\\\"\"", false);
        int int12 = python2Target1.getSerializedATNSegmentLimit();
        org.antlr.v4.codegen.CodeGenerator codeGenerator13 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target14 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator13);
        java.lang.String[] strArray15 = python2Target14.targetCharValueEscape;
        java.lang.String str17 = python2Target14.getImplicitSetLabel("\\64");
        java.lang.String[] strArray18 = python2Target14.targetCharValueEscape;
        org.stringtemplate.v4.STGroup sTGroup19 = python2Target14.getTemplates();
        python2Target1.templates = sTGroup19;
        org.antlr.v4.tool.Grammar grammar21 = null;
        org.stringtemplate.v4.ST sT22 = null;
        // The following exception was thrown during execution in test generation
        try {
            python2Target1.genFile(grammar21, sT22, "");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "_tset" + "'", str3, "_tset");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "\"\"" + "'", str7, "\"\"");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "\\\"\\\"" + "'", str11, "\\\"\\\"");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 2147483647 + "'", int12 == 2147483647);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "_tset\\64" + "'", str17, "_tset\\64");
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertNotNull(sTGroup19);
    }

    @Test
    public void test1846() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1846");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str5 = python2Target1.getTargetStringLiteralFromString("hi!", false);
        java.lang.String str7 = python2Target1.getImplicitRuleLabel("@");
        python2Target1.addBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator9 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target10 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator9);
        java.lang.String str12 = python2Target10.getImplicitSetLabel("");
        org.antlr.v4.codegen.CodeGenerator codeGenerator13 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target14 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator13);
        java.util.Set<java.lang.String> strSet15 = python2Target14.badWords;
        java.lang.String str17 = python2Target14.encodeIntAsCharEscape(64);
        java.lang.String str18 = python2Target14.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator19 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target20 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator19);
        java.lang.String[] strArray21 = python2Target20.targetCharValueEscape;
        java.lang.String str22 = python2Target20.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup23 = python2Target20.getTemplates();
        python2Target14.templates = sTGroup23;
        python2Target10.templates = sTGroup23;
        java.lang.String str27 = python2Target10.getAltLabelContextStructName("Python2");
        org.stringtemplate.v4.STGroup sTGroup28 = python2Target10.loadTemplates();
        python2Target1.templates = sTGroup28;
        java.util.Set<java.lang.String> strSet30 = python2Target1.badWords;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str32 = python2Target1.encodeIntAsCharEscape(2147483647);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot encode the specified value: 2147483647");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "_@" + "'", str7, "_@");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "_tset" + "'", str12, "_tset");
        org.junit.Assert.assertNotNull(strSet15);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "@" + "'", str17, "@");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Python2" + "'", str18, "Python2");
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "Python2" + "'", str22, "Python2");
        org.junit.Assert.assertNotNull(sTGroup23);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "Python2Context" + "'", str27, "Python2Context");
        org.junit.Assert.assertNotNull(sTGroup28);
        org.junit.Assert.assertNotNull(strSet30);
    }

    @Test
    public void test1847() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1847");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        boolean boolean2 = python2Target1.wantsBaseListener();
        int int3 = python2Target1.getInlineTestSetWordSize();
        java.lang.String str4 = python2Target1.getLanguage();
        org.antlr.v4.tool.Grammar grammar5 = null;
        org.stringtemplate.v4.ST sT6 = null;
        // The following exception was thrown during execution in test generation
        try {
            python2Target1.genFile(grammar5, sT6, "\\\"__\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"ContextContext\\\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 64 + "'", int3 == 64);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Python2" + "'", str4, "Python2");
    }

    @Test
    public void test1848() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1848");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        boolean boolean3 = python2Target1.wantsBaseVisitor();
        boolean boolean4 = python2Target1.wantsBaseVisitor();
        java.lang.String str6 = python2Target1.getImplicitRuleLabel("_");
        java.util.Set<java.lang.String> strSet7 = python2Target1.badWords;
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = python2Target1.getCodeGenerator();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str10 = python2Target1.getImplicitTokenLabel("\"Python2\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "__" + "'", str6, "__");
        org.junit.Assert.assertNotNull(strSet7);
        org.junit.Assert.assertNull(codeGenerator8);
    }

    @Test
    public void test1849() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1849");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str5 = python2Target1.getTargetStringLiteralFromString("hi!", false);
        java.lang.String str7 = python2Target1.getImplicitRuleLabel("@");
        python2Target1.addBadWords();
        int int9 = python2Target1.getInlineTestSetWordSize();
        java.lang.String[] strArray10 = python2Target1.targetCharValueEscape;
        java.lang.String str12 = python2Target1.getListLabel("i");
        org.stringtemplate.v4.STGroup sTGroup13 = python2Target1.templates;
        int int14 = python2Target1.getSerializedATNSegmentLimit();
        org.antlr.v4.tool.ast.GrammarAST grammarAST15 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str16 = python2Target1.getLoopCounter(grammarAST15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "_@" + "'", str7, "_@");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 64 + "'", int9 == 64);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "i" + "'", str12, "i");
        org.junit.Assert.assertNotNull(sTGroup13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2147483647 + "'", int14 == 2147483647);
    }

    @Test
    public void test1850() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1850");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str5 = python2Target1.getTargetStringLiteralFromString("hi!", false);
        java.lang.String str7 = python2Target1.getImplicitRuleLabel("@");
        python2Target1.addBadWords();
        int int9 = python2Target1.getInlineTestSetWordSize();
        python2Target1.addBadWords();
        java.lang.String str13 = python2Target1.getTargetStringLiteralFromString("\"\\\"\\\"\\\"\"", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator14 = python2Target1.getCodeGenerator();
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "_@" + "'", str7, "_@");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 64 + "'", int9 == 64);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "\"\\\"\\\\\\\"\\\\\\\"\\\\\\\"\\\"\"" + "'", str13, "\"\\\"\\\\\\\"\\\\\\\"\\\\\\\"\\\"\"");
        org.junit.Assert.assertNull(codeGenerator14);
    }

    @Test
    public void test1851() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1851");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        org.stringtemplate.v4.STGroup sTGroup2 = python2Target1.templates;
        int int3 = python2Target1.getInlineTestSetWordSize();
        boolean boolean4 = python2Target1.wantsBaseVisitor();
        java.util.Set<java.lang.String> strSet5 = python2Target1.badWords;
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = python2Target1.gen;
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 64 + "'", int3 == 64);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNull(codeGenerator6);
    }

    @Test
    public void test1852() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1852");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str4 = python2Target1.encodeIntAsCharEscape(64);
        java.lang.String str5 = python2Target1.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target7 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator6);
        java.lang.String[] strArray8 = python2Target7.targetCharValueEscape;
        java.lang.String str9 = python2Target7.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup10 = python2Target7.getTemplates();
        python2Target1.templates = sTGroup10;
        java.util.Set<java.lang.String> strSet12 = python2Target1.getBadWords();
        java.lang.String str15 = python2Target1.getTargetStringLiteralFromString("\"hi!\"", true);
        int int16 = python2Target1.getInlineTestSetWordSize();
        org.antlr.v4.codegen.CodeGenerator codeGenerator17 = null;
        java.lang.String str20 = python2Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator17, "_tset_tset", true);
        boolean boolean21 = python2Target1.templatesExist();
        boolean boolean22 = python2Target1.supportsOverloadedMethods();
        java.lang.String str24 = python2Target1.getImplicitRuleLabel("_\\\"\\\\\\\"\\\\\\\"\\\"");
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "@" + "'", str4, "@");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Python2" + "'", str5, "Python2");
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Python2" + "'", str9, "Python2");
        org.junit.Assert.assertNotNull(sTGroup10);
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "\"\\\"hi!\\\"\"" + "'", str15, "\"\\\"hi!\\\"\"");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 64 + "'", int16 == 64);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "\"tset_tse\"" + "'", str20, "\"tset_tse\"");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "__\\\"\\\\\\\"\\\\\\\"\\\"" + "'", str24, "__\\\"\\\\\\\"\\\\\\\"\\\"");
    }

    @Test
    public void test1853() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1853");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str5 = python2Target1.getTargetStringLiteralFromString("hi!", false);
        java.lang.String str7 = python2Target1.getImplicitRuleLabel("@");
        python2Target1.addBadWords();
        int int9 = python2Target1.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet10 = python2Target1.getBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator11 = null;
        python2Target1.gen = codeGenerator11;
        org.stringtemplate.v4.STGroup sTGroup13 = python2Target1.loadTemplates();
        org.stringtemplate.v4.STGroup sTGroup14 = python2Target1.loadTemplates();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str16 = python2Target1.getElementListName("_DContext");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "_@" + "'", str7, "_@");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 64 + "'", int9 == 64);
        org.junit.Assert.assertNotNull(strSet10);
        org.junit.Assert.assertNotNull(sTGroup13);
        org.junit.Assert.assertNotNull(sTGroup14);
    }

    @Test
    public void test1854() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1854");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str4 = python2Target1.getAltLabelContextStructName("\\\"\\\"");
        boolean boolean5 = python2Target1.wantsBaseVisitor();
        java.util.Set<java.lang.String> strSet6 = python2Target1.getBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target8 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator7);
        boolean boolean9 = python2Target8.wantsBaseVisitor();
        java.util.Set<java.lang.String> strSet10 = python2Target8.badWords;
        java.util.Set<java.lang.String> strSet11 = python2Target8.getBadWords();
        python2Target1.badWords = strSet11;
        java.lang.String str14 = python2Target1.getImplicitRuleLabel("\\\"\\\"Context");
        int int15 = python2Target1.getSerializedATNSegmentLimit();
        java.lang.String str17 = python2Target1.getImplicitSetLabel("_\\\"\\\"Context");
        org.antlr.v4.codegen.CodeGenerator codeGenerator18 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target19 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator18);
        java.util.Set<java.lang.String> strSet20 = python2Target19.badWords;
        java.lang.String str23 = python2Target19.getTargetStringLiteralFromString("hi!", false);
        java.lang.String str25 = python2Target19.getImplicitRuleLabel("@");
        python2Target19.addBadWords();
        int int27 = python2Target19.getInlineTestSetWordSize();
        java.lang.String[] strArray28 = python2Target19.targetCharValueEscape;
        java.lang.String str30 = python2Target19.getListLabel("\"_@\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator31 = python2Target19.gen;
        org.antlr.v4.codegen.CodeGenerator codeGenerator32 = null;
        java.lang.String str35 = python2Target19.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator32, "_\\\"\\\"Context", true);
        java.lang.String[] strArray36 = python2Target19.targetCharValueEscape;
        python2Target1.targetCharValueEscape = strArray36;
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "\\\"\\\"Context" + "'", str4, "\\\"\\\"Context");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(strSet6);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(strSet10);
        org.junit.Assert.assertNotNull(strSet11);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "_\\\"\\\"Context" + "'", str14, "_\\\"\\\"Context");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 2147483647 + "'", int15 == 2147483647);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "_tset_\\\"\\\"Context" + "'", str17, "_tset_\\\"\\\"Context");
        org.junit.Assert.assertNotNull(strSet20);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "_@" + "'", str25, "_@");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 64 + "'", int27 == 64);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "\"_@\"" + "'", str30, "\"_@\"");
        org.junit.Assert.assertNull(codeGenerator31);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "\"\\\"\\\"Contex\"" + "'", str35, "\"\\\"\\\"Contex\"");
        org.junit.Assert.assertNotNull(strArray36);
    }

    @Test
    public void test1855() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1855");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        boolean boolean2 = python2Target1.wantsBaseVisitor();
        java.util.Set<java.lang.String> strSet3 = python2Target1.badWords;
        java.util.Set<java.lang.String> strSet4 = python2Target1.getBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator5 = python2Target1.gen;
        boolean boolean6 = python2Target1.wantsBaseVisitor();
        int int7 = python2Target1.getInlineTestSetWordSize();
        org.stringtemplate.v4.STGroup sTGroup8 = python2Target1.getTemplates();
        java.lang.String str10 = python2Target1.getListLabel("\"\\\\0\"");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str12 = python2Target1.getElementListName("\"_tset_tset_tset\\\\n\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertNull(codeGenerator5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 64 + "'", int7 == 64);
        org.junit.Assert.assertNotNull(sTGroup8);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\"\\\\0\"" + "'", str10, "\"\\\\0\"");
    }

    @Test
    public void test1856() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1856");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str4 = python2Target1.encodeIntAsCharEscape(64);
        java.lang.String str7 = python2Target1.getTargetStringLiteralFromString("\"\"", true);
        java.lang.String[] strArray8 = python2Target1.targetCharValueEscape;
        org.antlr.v4.tool.Grammar grammar9 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target11 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator10);
        java.lang.String str13 = python2Target11.getImplicitSetLabel("");
        org.antlr.v4.codegen.CodeGenerator codeGenerator14 = null;
        java.lang.String str17 = python2Target11.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator14, "", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator18 = python2Target11.gen;
        org.stringtemplate.v4.STGroup sTGroup19 = python2Target11.getTemplates();
        org.stringtemplate.v4.STGroup sTGroup20 = python2Target11.templates;
        org.antlr.v4.tool.Grammar grammar21 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator22 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target23 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator22);
        java.util.Set<java.lang.String> strSet24 = python2Target23.badWords;
        boolean boolean25 = python2Target23.wantsBaseVisitor();
        boolean boolean26 = python2Target23.wantsBaseVisitor();
        org.antlr.v4.codegen.CodeGenerator codeGenerator27 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target28 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator27);
        boolean boolean29 = python2Target28.wantsBaseVisitor();
        java.util.Set<java.lang.String> strSet30 = python2Target28.badWords;
        python2Target23.badWords = strSet30;
        org.antlr.v4.tool.Grammar grammar32 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator33 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target34 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator33);
        java.lang.String str36 = python2Target34.getImplicitSetLabel("");
        org.antlr.v4.codegen.CodeGenerator codeGenerator37 = null;
        java.lang.String str40 = python2Target34.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator37, "", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator41 = null;
        java.lang.String str44 = python2Target34.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator41, "\"\\\"\\\"\"", false);
        int int45 = python2Target34.getSerializedATNSegmentLimit();
        org.antlr.v4.tool.Grammar grammar46 = null;
        int[] intArray47 = new int[] {};
        java.lang.String[] strArray48 = python2Target34.getTokenTypesAsTargetLabels(grammar46, intArray47);
        java.lang.String[] strArray49 = python2Target23.getTokenTypesAsTargetLabels(grammar32, intArray47);
        java.lang.String[] strArray50 = python2Target11.getTokenTypesAsTargetLabels(grammar21, intArray47);
        java.lang.String[] strArray51 = python2Target1.getTokenTypesAsTargetLabels(grammar9, intArray47);
        org.antlr.v4.codegen.CodeGenerator codeGenerator52 = python2Target1.getCodeGenerator();
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "@" + "'", str4, "@");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "\"\\\"\\\"\"" + "'", str7, "\"\\\"\\\"\"");
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "_tset" + "'", str13, "_tset");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "\"\"" + "'", str17, "\"\"");
        org.junit.Assert.assertNull(codeGenerator18);
        org.junit.Assert.assertNotNull(sTGroup19);
        org.junit.Assert.assertNotNull(sTGroup20);
        org.junit.Assert.assertNotNull(strSet24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(strSet30);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "_tset" + "'", str36, "_tset");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "\"\"" + "'", str40, "\"\"");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "\\\"\\\"" + "'", str44, "\\\"\\\"");
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 2147483647 + "'", int45 == 2147483647);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[]");
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertNotNull(strArray49);
        org.junit.Assert.assertNotNull(strArray50);
        org.junit.Assert.assertNotNull(strArray51);
        org.junit.Assert.assertNull(codeGenerator52);
    }

    @Test
    public void test1857() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1857");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str5 = python2Target1.getTargetStringLiteralFromString("hi!", false);
        java.lang.String str7 = python2Target1.getImplicitRuleLabel("@");
        java.lang.String str9 = python2Target1.getAltLabelContextStructName("a");
        java.lang.String str11 = python2Target1.getTargetStringLiteralFromString("4.5.2.1");
        java.lang.String str12 = python2Target1.language;
        org.stringtemplate.v4.STGroup sTGroup13 = python2Target1.templates;
        boolean boolean14 = python2Target1.templatesExist();
        java.util.Set<java.lang.String> strSet15 = python2Target1.getBadWords();
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "_@" + "'", str7, "_@");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "AContext" + "'", str9, "AContext");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "\"4.5.2.1\"" + "'", str11, "\"4.5.2.1\"");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Python2" + "'", str12, "Python2");
        org.junit.Assert.assertNotNull(sTGroup13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(strSet15);
    }

    @Test
    public void test1858() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1858");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str4 = python2Target1.encodeIntAsCharEscape(64);
        java.lang.String str7 = python2Target1.getTargetStringLiteralFromString("\"\"", true);
        java.lang.String str9 = python2Target1.getImplicitSetLabel("a");
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target11 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator10);
        java.util.Set<java.lang.String> strSet12 = python2Target11.badWords;
        java.lang.String str14 = python2Target11.encodeIntAsCharEscape(64);
        java.lang.String str15 = python2Target11.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator16 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target17 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator16);
        java.lang.String[] strArray18 = python2Target17.targetCharValueEscape;
        java.lang.String str19 = python2Target17.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup20 = python2Target17.getTemplates();
        python2Target11.templates = sTGroup20;
        java.util.Set<java.lang.String> strSet22 = python2Target11.getBadWords();
        boolean boolean23 = python2Target11.wantsBaseVisitor();
        org.antlr.v4.codegen.CodeGenerator codeGenerator24 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target25 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator24);
        java.lang.String str27 = python2Target25.getImplicitSetLabel("");
        org.antlr.v4.codegen.CodeGenerator codeGenerator28 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target29 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator28);
        java.util.Set<java.lang.String> strSet30 = python2Target29.badWords;
        java.lang.String str32 = python2Target29.encodeIntAsCharEscape(64);
        java.lang.String str33 = python2Target29.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator34 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target35 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator34);
        java.lang.String[] strArray36 = python2Target35.targetCharValueEscape;
        java.lang.String str37 = python2Target35.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup38 = python2Target35.getTemplates();
        python2Target29.templates = sTGroup38;
        python2Target25.templates = sTGroup38;
        org.stringtemplate.v4.STGroup sTGroup41 = python2Target25.templates;
        python2Target11.templates = sTGroup41;
        python2Target1.templates = sTGroup41;
        java.lang.String str44 = python2Target1.getVersion();
        org.antlr.v4.codegen.model.RuleFunction ruleFunction45 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str46 = python2Target1.getRuleFunctionContextStructName(ruleFunction45);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "@" + "'", str4, "@");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "\"\\\"\\\"\"" + "'", str7, "\"\\\"\\\"\"");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "_tseta" + "'", str9, "_tseta");
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "@" + "'", str14, "@");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Python2" + "'", str15, "Python2");
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Python2" + "'", str19, "Python2");
        org.junit.Assert.assertNotNull(sTGroup20);
        org.junit.Assert.assertNotNull(strSet22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "_tset" + "'", str27, "_tset");
        org.junit.Assert.assertNotNull(strSet30);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "@" + "'", str32, "@");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "Python2" + "'", str33, "Python2");
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "Python2" + "'", str37, "Python2");
        org.junit.Assert.assertNotNull(sTGroup38);
        org.junit.Assert.assertNotNull(sTGroup41);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "4.5.2.1" + "'", str44, "4.5.2.1");
    }

    @Test
    public void test1859() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1859");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String str3 = python2Target1.getImplicitSetLabel("");
        org.antlr.v4.codegen.CodeGenerator codeGenerator4 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target5 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator4);
        java.util.Set<java.lang.String> strSet6 = python2Target5.badWords;
        java.lang.String str8 = python2Target5.encodeIntAsCharEscape(64);
        java.lang.String str9 = python2Target5.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target11 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator10);
        java.lang.String[] strArray12 = python2Target11.targetCharValueEscape;
        java.lang.String str13 = python2Target11.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup14 = python2Target11.getTemplates();
        python2Target5.templates = sTGroup14;
        python2Target1.templates = sTGroup14;
        java.lang.String str18 = python2Target1.getAltLabelContextStructName("Python2");
        org.stringtemplate.v4.STGroup sTGroup19 = python2Target1.loadTemplates();
        java.lang.String str21 = python2Target1.getImplicitRuleLabel("\"\\\"Python2Context\\\"\"");
        java.lang.String str22 = python2Target1.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator23 = null;
        java.lang.String str26 = python2Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator23, "_tset_tset\"hi!\"", false);
        org.antlr.v4.codegen.CodeGenerator codeGenerator27 = python2Target1.getCodeGenerator();
        org.stringtemplate.v4.STGroup sTGroup28 = python2Target1.loadTemplates();
        org.antlr.v4.codegen.CodeGenerator codeGenerator29 = null;
        java.lang.String str32 = python2Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator29, "_tset_tset_\"Python2Context\"Context", false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "_tset" + "'", str3, "_tset");
        org.junit.Assert.assertNotNull(strSet6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "@" + "'", str8, "@");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Python2" + "'", str9, "Python2");
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Python2" + "'", str13, "Python2");
        org.junit.Assert.assertNotNull(sTGroup14);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Python2Context" + "'", str18, "Python2Context");
        org.junit.Assert.assertNotNull(sTGroup19);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "_\"\\\"Python2Context\\\"\"" + "'", str21, "_\"\\\"Python2Context\\\"\"");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "4.5.2.1" + "'", str22, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "tset_tset\\\"hi!" + "'", str26, "tset_tset\\\"hi!");
        org.junit.Assert.assertNull(codeGenerator27);
        org.junit.Assert.assertNotNull(sTGroup28);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "tset_tset_\\\"Python2Context\\\"Contex" + "'", str32, "tset_tset_\\\"Python2Context\\\"Contex");
    }

    @Test
    public void test1860() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1860");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str4 = python2Target1.encodeIntAsCharEscape(64);
        java.lang.String str5 = python2Target1.getLanguage();
        java.lang.String str7 = python2Target1.getListLabel("");
        java.lang.String str8 = python2Target1.getVersion();
        java.util.Set<java.lang.String> strSet9 = python2Target1.getBadWords();
        java.lang.String str12 = python2Target1.getTargetStringLiteralFromString("@", false);
        org.antlr.v4.codegen.CodeGenerator codeGenerator13 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target14 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator13);
        java.util.Set<java.lang.String> strSet15 = python2Target14.badWords;
        java.lang.String str18 = python2Target14.getTargetStringLiteralFromString("hi!", false);
        int int19 = python2Target14.getInlineTestSetWordSize();
        boolean boolean20 = python2Target14.wantsBaseListener();
        java.lang.String str22 = python2Target14.encodeIntAsCharEscape((int) (byte) 10);
        org.antlr.v4.codegen.CodeGenerator codeGenerator23 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target24 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator23);
        java.lang.String[] strArray25 = python2Target24.targetCharValueEscape;
        java.lang.String str26 = python2Target24.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup27 = python2Target24.getTemplates();
        java.lang.String[] strArray28 = python2Target24.targetCharValueEscape;
        python2Target14.targetCharValueEscape = strArray28;
        org.antlr.v4.codegen.target.Python2Target.python2Keywords = strArray28;
        python2Target1.targetCharValueEscape = strArray28;
        java.lang.String str33 = python2Target1.getAltLabelContextStructName("\"\\\\1Context\"");
        java.lang.String str35 = python2Target1.getImplicitSetLabel("\"Python2Context\"Context");
        org.stringtemplate.v4.STGroup sTGroup36 = python2Target1.templates;
        java.lang.String str38 = python2Target1.getImplicitRuleLabel("\"_tset_\\\"\\\\\\\"Python2Context\\\\\\\"\\\"\"");
        org.stringtemplate.v4.STGroup sTGroup39 = python2Target1.templates;
        java.lang.String str41 = python2Target1.getAltLabelContextStructName("\"\\\"\\\"\\\"\"");
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "@" + "'", str4, "@");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Python2" + "'", str5, "Python2");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "4.5.2.1" + "'", str8, "4.5.2.1");
        org.junit.Assert.assertNotNull(strSet9);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "@" + "'", str12, "@");
        org.junit.Assert.assertNotNull(strSet15);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 64 + "'", int19 == 64);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "\\n" + "'", str22, "\\n");
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "Python2" + "'", str26, "Python2");
        org.junit.Assert.assertNotNull(sTGroup27);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "\"\\\\1Context\"Context" + "'", str33, "\"\\\\1Context\"Context");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "_tset\"Python2Context\"Context" + "'", str35, "_tset\"Python2Context\"Context");
        org.junit.Assert.assertNotNull(sTGroup36);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "_\"_tset_\\\"\\\\\\\"Python2Context\\\\\\\"\\\"\"" + "'", str38, "_\"_tset_\\\"\\\\\\\"Python2Context\\\\\\\"\\\"\"");
        org.junit.Assert.assertNotNull(sTGroup39);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "\"\\\"\\\"\\\"\"Context" + "'", str41, "\"\\\"\\\"\\\"\"Context");
    }

    @Test
    public void test1861() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1861");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        boolean boolean2 = python2Target1.wantsBaseVisitor();
        java.util.Set<java.lang.String> strSet3 = python2Target1.badWords;
        java.util.Set<java.lang.String> strSet4 = python2Target1.getBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator5 = python2Target1.gen;
        boolean boolean6 = python2Target1.wantsBaseVisitor();
        int int7 = python2Target1.getInlineTestSetWordSize();
        org.stringtemplate.v4.STGroup sTGroup8 = python2Target1.getTemplates();
        java.lang.String str10 = python2Target1.getListLabel("\"\\\\0\"");
        org.stringtemplate.v4.STGroup sTGroup11 = python2Target1.getTemplates();
        boolean boolean12 = python2Target1.wantsBaseListener();
        int int13 = python2Target1.getSerializedATNSegmentLimit();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertNull(codeGenerator5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 64 + "'", int7 == 64);
        org.junit.Assert.assertNotNull(sTGroup8);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\"\\\\0\"" + "'", str10, "\"\\\\0\"");
        org.junit.Assert.assertNotNull(sTGroup11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2147483647 + "'", int13 == 2147483647);
    }

    @Test
    public void test1862() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1862");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String str3 = python2Target1.getImplicitSetLabel("");
        org.antlr.v4.codegen.CodeGenerator codeGenerator4 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target5 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator4);
        java.util.Set<java.lang.String> strSet6 = python2Target5.badWords;
        java.lang.String str8 = python2Target5.encodeIntAsCharEscape(64);
        java.lang.String str9 = python2Target5.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target11 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator10);
        java.lang.String[] strArray12 = python2Target11.targetCharValueEscape;
        java.lang.String str13 = python2Target11.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup14 = python2Target11.getTemplates();
        python2Target5.templates = sTGroup14;
        python2Target1.templates = sTGroup14;
        org.antlr.v4.codegen.CodeGenerator codeGenerator17 = null;
        python2Target1.gen = codeGenerator17;
        boolean boolean19 = python2Target1.wantsBaseVisitor();
        boolean boolean20 = python2Target1.supportsOverloadedMethods();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "_tset" + "'", str3, "_tset");
        org.junit.Assert.assertNotNull(strSet6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "@" + "'", str8, "@");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Python2" + "'", str9, "Python2");
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Python2" + "'", str13, "Python2");
        org.junit.Assert.assertNotNull(sTGroup14);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    }

    @Test
    public void test1863() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1863");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str5 = python2Target1.getTargetStringLiteralFromString("hi!", false);
        java.lang.String str7 = python2Target1.getImplicitRuleLabel("@");
        python2Target1.addBadWords();
        int int9 = python2Target1.getInlineTestSetWordSize();
        java.lang.String[] strArray10 = python2Target1.targetCharValueEscape;
        java.lang.String str12 = python2Target1.getListLabel("\"_@\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator13 = python2Target1.gen;
        int int14 = python2Target1.getInlineTestSetWordSize();
        org.antlr.v4.codegen.CodeGenerator codeGenerator15 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target16 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator15);
        java.util.Set<java.lang.String> strSet17 = python2Target16.badWords;
        boolean boolean18 = python2Target16.wantsBaseVisitor();
        boolean boolean19 = python2Target16.wantsBaseVisitor();
        org.antlr.v4.codegen.CodeGenerator codeGenerator20 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target21 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator20);
        boolean boolean22 = python2Target21.wantsBaseVisitor();
        java.util.Set<java.lang.String> strSet23 = python2Target21.badWords;
        python2Target16.badWords = strSet23;
        int int25 = python2Target16.getSerializedATNSegmentLimit();
        org.stringtemplate.v4.STGroup sTGroup26 = python2Target16.getTemplates();
        python2Target1.templates = sTGroup26;
        java.lang.String str29 = python2Target1.getImplicitSetLabel("__\"\\\\\\\"\\\\\\\"Context\"Context");
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "_@" + "'", str7, "_@");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 64 + "'", int9 == 64);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "\"_@\"" + "'", str12, "\"_@\"");
        org.junit.Assert.assertNull(codeGenerator13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 64 + "'", int14 == 64);
        org.junit.Assert.assertNotNull(strSet17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(strSet23);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 2147483647 + "'", int25 == 2147483647);
        org.junit.Assert.assertNotNull(sTGroup26);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "_tset__\"\\\\\\\"\\\\\\\"Context\"Context" + "'", str29, "_tset__\"\\\\\\\"\\\\\\\"Context\"Context");
    }

    @Test
    public void test1864() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1864");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String str3 = python2Target1.getImplicitSetLabel("");
        org.antlr.v4.codegen.CodeGenerator codeGenerator4 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target5 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator4);
        java.util.Set<java.lang.String> strSet6 = python2Target5.badWords;
        java.lang.String str8 = python2Target5.encodeIntAsCharEscape(64);
        java.lang.String str9 = python2Target5.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target11 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator10);
        java.lang.String[] strArray12 = python2Target11.targetCharValueEscape;
        java.lang.String str13 = python2Target11.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup14 = python2Target11.getTemplates();
        python2Target5.templates = sTGroup14;
        python2Target1.templates = sTGroup14;
        java.lang.String str18 = python2Target1.getAltLabelContextStructName("Python2");
        java.util.Set<java.lang.String> strSet19 = python2Target1.badWords;
        java.lang.String str21 = python2Target1.getListLabel("\"_@\"");
        java.lang.String[] strArray22 = python2Target1.targetCharValueEscape;
        org.antlr.v4.codegen.target.Python2Target.python2Keywords = strArray22;
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "_tset" + "'", str3, "_tset");
        org.junit.Assert.assertNotNull(strSet6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "@" + "'", str8, "@");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Python2" + "'", str9, "Python2");
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Python2" + "'", str13, "Python2");
        org.junit.Assert.assertNotNull(sTGroup14);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Python2Context" + "'", str18, "Python2Context");
        org.junit.Assert.assertNotNull(strSet19);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "\"_@\"" + "'", str21, "\"_@\"");
        org.junit.Assert.assertNotNull(strArray22);
    }

    @Test
    public void test1865() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1865");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str5 = python2Target1.getTargetStringLiteralFromString("hi!", false);
        java.lang.String str7 = python2Target1.getImplicitRuleLabel("@");
        python2Target1.addBadWords();
        boolean boolean9 = python2Target1.wantsBaseListener();
        int int10 = python2Target1.getInlineTestSetWordSize();
        java.lang.String str11 = python2Target1.getVersion();
        java.lang.String str13 = python2Target1.getTargetStringLiteralFromString("");
        java.lang.String str14 = python2Target1.getVersion();
        org.stringtemplate.v4.STGroup sTGroup15 = python2Target1.getTemplates();
        java.lang.String str17 = python2Target1.getImplicitSetLabel("_tset_tset\\n");
        org.antlr.v4.tool.Grammar grammar18 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator19 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target20 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator19);
        java.util.Set<java.lang.String> strSet21 = python2Target20.badWords;
        boolean boolean22 = python2Target20.wantsBaseVisitor();
        boolean boolean23 = python2Target20.wantsBaseVisitor();
        java.lang.String str25 = python2Target20.getImplicitRuleLabel("_");
        org.antlr.v4.tool.Grammar grammar26 = null;
        org.stringtemplate.v4.ST sT27 = null;
        python2Target20.genRecognizerHeaderFile(grammar26, sT27, "_AContext");
        org.antlr.v4.tool.Grammar grammar30 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator31 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target32 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator31);
        java.util.Set<java.lang.String> strSet33 = python2Target32.badWords;
        java.lang.String str36 = python2Target32.getTargetStringLiteralFromString("hi!", false);
        java.lang.String str38 = python2Target32.getImplicitRuleLabel("@");
        python2Target32.addBadWords();
        boolean boolean40 = python2Target32.wantsBaseListener();
        java.lang.String str42 = python2Target32.getImplicitSetLabel("_tset");
        org.antlr.v4.codegen.CodeGenerator codeGenerator43 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target44 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator43);
        java.lang.String[] strArray45 = python2Target44.targetCharValueEscape;
        java.lang.String str46 = python2Target44.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup47 = python2Target44.getTemplates();
        python2Target32.templates = sTGroup47;
        boolean boolean49 = python2Target32.wantsBaseListener();
        boolean boolean50 = python2Target32.wantsBaseVisitor();
        org.antlr.v4.tool.Grammar grammar51 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator52 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target53 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator52);
        org.stringtemplate.v4.STGroup sTGroup54 = python2Target53.templates;
        int int55 = python2Target53.getInlineTestSetWordSize();
        int int56 = python2Target53.getSerializedATNSegmentLimit();
        org.antlr.v4.tool.Grammar grammar57 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator58 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target59 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator58);
        java.lang.String str61 = python2Target59.getImplicitSetLabel("");
        org.antlr.v4.codegen.CodeGenerator codeGenerator62 = null;
        java.lang.String str65 = python2Target59.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator62, "", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator66 = null;
        java.lang.String str69 = python2Target59.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator66, "\"\\\"\\\"\"", false);
        int int70 = python2Target59.getSerializedATNSegmentLimit();
        org.antlr.v4.tool.Grammar grammar71 = null;
        int[] intArray72 = new int[] {};
        java.lang.String[] strArray73 = python2Target59.getTokenTypesAsTargetLabels(grammar71, intArray72);
        java.lang.String[] strArray74 = python2Target53.getTokenTypesAsTargetLabels(grammar57, intArray72);
        java.lang.String[] strArray75 = python2Target32.getTokenTypesAsTargetLabels(grammar51, intArray72);
        java.lang.String[] strArray76 = python2Target20.getTokenTypesAsTargetLabels(grammar30, intArray72);
        java.lang.String[] strArray77 = python2Target1.getTokenTypesAsTargetLabels(grammar18, intArray72);
        java.lang.String str79 = python2Target1.getAltLabelContextStructName("ython2Contex");
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "_@" + "'", str7, "_@");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 64 + "'", int10 == 64);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "4.5.2.1" + "'", str11, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "\"\"" + "'", str13, "\"\"");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "4.5.2.1" + "'", str14, "4.5.2.1");
        org.junit.Assert.assertNotNull(sTGroup15);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "_tset_tset_tset\\n" + "'", str17, "_tset_tset_tset\\n");
        org.junit.Assert.assertNotNull(strSet21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "__" + "'", str25, "__");
        org.junit.Assert.assertNotNull(strSet33);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "hi!" + "'", str36, "hi!");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "_@" + "'", str38, "_@");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "_tset_tset" + "'", str42, "_tset_tset");
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "Python2" + "'", str46, "Python2");
        org.junit.Assert.assertNotNull(sTGroup47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNull(sTGroup54);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 64 + "'", int55 == 64);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 2147483647 + "'", int56 == 2147483647);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "_tset" + "'", str61, "_tset");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "\"\"" + "'", str65, "\"\"");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "\\\"\\\"" + "'", str69, "\\\"\\\"");
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 2147483647 + "'", int70 == 2147483647);
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[]");
        org.junit.Assert.assertNotNull(strArray73);
        org.junit.Assert.assertNotNull(strArray74);
        org.junit.Assert.assertNotNull(strArray75);
        org.junit.Assert.assertNotNull(strArray76);
        org.junit.Assert.assertNotNull(strArray77);
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "Ython2ContexContext" + "'", str79, "Ython2ContexContext");
    }

    @Test
    public void test1866() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1866");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String str3 = python2Target1.getImplicitSetLabel("");
        org.antlr.v4.codegen.CodeGenerator codeGenerator4 = null;
        java.lang.String str7 = python2Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator4, "", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = null;
        python2Target1.gen = codeGenerator8;
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target11 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator10);
        java.util.Set<java.lang.String> strSet12 = python2Target11.badWords;
        java.lang.String str14 = python2Target11.encodeIntAsCharEscape(64);
        java.lang.String str15 = python2Target11.getLanguage();
        java.lang.String[] strArray21 = new java.lang.String[] { "\"hi!\"", "Python2", "Python2", "@", "_@" };
        java.util.LinkedHashSet<java.lang.String> strSet22 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet22, strArray21);
        python2Target11.badWords = strSet22;
        python2Target1.badWords = strSet22;
        int int26 = python2Target1.getInlineTestSetWordSize();
        java.lang.String str28 = python2Target1.getAltLabelContextStructName("\"\\\"\\\"\"");
        java.lang.String str30 = python2Target1.getListLabel("\"Python2Context\"Context");
        org.antlr.v4.codegen.CodeGenerator codeGenerator31 = null;
        python2Target1.gen = codeGenerator31;
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "_tset" + "'", str3, "_tset");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "\"\"" + "'", str7, "\"\"");
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "@" + "'", str14, "@");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Python2" + "'", str15, "Python2");
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 64 + "'", int26 == 64);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "\"\\\"\\\"\"Context" + "'", str28, "\"\\\"\\\"\"Context");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "\"Python2Context\"Context" + "'", str30, "\"Python2Context\"Context");
    }

    @Test
    public void test1867() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1867");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str5 = python2Target1.getTargetStringLiteralFromString("hi!", false);
        int int6 = python2Target1.getInlineTestSetWordSize();
        boolean boolean7 = python2Target1.wantsBaseListener();
        java.lang.String str9 = python2Target1.encodeIntAsCharEscape((int) (byte) 10);
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target11 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator10);
        java.lang.String[] strArray12 = python2Target11.targetCharValueEscape;
        java.lang.String str13 = python2Target11.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup14 = python2Target11.getTemplates();
        java.lang.String[] strArray15 = python2Target11.targetCharValueEscape;
        python2Target1.targetCharValueEscape = strArray15;
        org.antlr.v4.codegen.CodeGenerator codeGenerator17 = python2Target1.getCodeGenerator();
        org.antlr.v4.codegen.CodeGenerator codeGenerator18 = python2Target1.getCodeGenerator();
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 64 + "'", int6 == 64);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\\n" + "'", str9, "\\n");
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Python2" + "'", str13, "Python2");
        org.junit.Assert.assertNotNull(sTGroup14);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNull(codeGenerator17);
        org.junit.Assert.assertNull(codeGenerator18);
    }

    @Test
    public void test1868() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1868");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str4 = python2Target1.getAltLabelContextStructName("\\\"\\\"");
        boolean boolean5 = python2Target1.wantsBaseVisitor();
        java.util.Set<java.lang.String> strSet6 = python2Target1.getBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target8 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator7);
        boolean boolean9 = python2Target8.wantsBaseVisitor();
        java.util.Set<java.lang.String> strSet10 = python2Target8.badWords;
        java.util.Set<java.lang.String> strSet11 = python2Target8.getBadWords();
        python2Target1.badWords = strSet11;
        java.lang.String str14 = python2Target1.getImplicitRuleLabel("\\\"\\\"Context");
        int int15 = python2Target1.getSerializedATNSegmentLimit();
        python2Target1.language = "tset6";
        java.lang.String str18 = python2Target1.language;
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "\\\"\\\"Context" + "'", str4, "\\\"\\\"Context");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(strSet6);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(strSet10);
        org.junit.Assert.assertNotNull(strSet11);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "_\\\"\\\"Context" + "'", str14, "_\\\"\\\"Context");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 2147483647 + "'", int15 == 2147483647);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "tset6" + "'", str18, "tset6");
    }

    @Test
    public void test1869() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1869");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        boolean boolean2 = python2Target1.wantsBaseVisitor();
        java.util.Set<java.lang.String> strSet3 = python2Target1.badWords;
        java.util.Set<java.lang.String> strSet4 = python2Target1.getBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator5 = python2Target1.gen;
        boolean boolean6 = python2Target1.wantsBaseVisitor();
        boolean boolean7 = python2Target1.wantsBaseListener();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertNull(codeGenerator5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    public void test1870() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1870");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String str3 = python2Target1.getImplicitSetLabel("");
        org.antlr.v4.codegen.CodeGenerator codeGenerator4 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target5 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator4);
        java.util.Set<java.lang.String> strSet6 = python2Target5.badWords;
        java.lang.String str8 = python2Target5.encodeIntAsCharEscape(64);
        java.lang.String str9 = python2Target5.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target11 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator10);
        java.lang.String[] strArray12 = python2Target11.targetCharValueEscape;
        java.lang.String str13 = python2Target11.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup14 = python2Target11.getTemplates();
        python2Target5.templates = sTGroup14;
        python2Target1.templates = sTGroup14;
        org.antlr.v4.tool.Grammar grammar17 = null;
        org.stringtemplate.v4.ST sT18 = null;
        python2Target1.genRecognizerHeaderFile(grammar17, sT18, "\\0");
        boolean boolean21 = python2Target1.wantsBaseListener();
        java.util.Set<java.lang.String> strSet22 = python2Target1.getBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator23 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target24 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator23);
        java.lang.String[] strArray25 = python2Target24.targetCharValueEscape;
        java.lang.String str26 = python2Target24.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup27 = python2Target24.getTemplates();
        java.lang.String[] strArray28 = python2Target24.targetCharValueEscape;
        java.lang.String[] strArray29 = org.antlr.v4.codegen.target.Python2Target.python2Keywords;
        python2Target24.targetCharValueEscape = strArray29;
        python2Target1.targetCharValueEscape = strArray29;
        org.stringtemplate.v4.STGroup sTGroup32 = python2Target1.getTemplates();
        org.antlr.v4.tool.ast.GrammarAST grammarAST33 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str34 = python2Target1.getLoopLabel(grammarAST33);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "_tset" + "'", str3, "_tset");
        org.junit.Assert.assertNotNull(strSet6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "@" + "'", str8, "@");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Python2" + "'", str9, "Python2");
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Python2" + "'", str13, "Python2");
        org.junit.Assert.assertNotNull(sTGroup14);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(strSet22);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "Python2" + "'", str26, "Python2");
        org.junit.Assert.assertNotNull(sTGroup27);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertNotNull(sTGroup32);
    }

    @Test
    public void test1871() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1871");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str5 = python2Target1.getTargetStringLiteralFromString("hi!", false);
        java.lang.String str7 = python2Target1.getImplicitRuleLabel("@");
        python2Target1.addBadWords();
        boolean boolean9 = python2Target1.wantsBaseListener();
        java.lang.String str11 = python2Target1.getImplicitSetLabel("_tset");
        org.antlr.v4.codegen.CodeGenerator codeGenerator12 = null;
        python2Target1.gen = codeGenerator12;
        java.lang.String str14 = python2Target1.language;
        java.lang.String str16 = python2Target1.getImplicitSetLabel("\"_tset_\\\"Python2Context\\\"Context\"");
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "_@" + "'", str7, "_@");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "_tset_tset" + "'", str11, "_tset_tset");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Python2" + "'", str14, "Python2");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "_tset\"_tset_\\\"Python2Context\\\"Context\"" + "'", str16, "_tset\"_tset_\\\"Python2Context\\\"Context\"");
    }

    @Test
    public void test1872() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1872");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String[] strArray2 = python2Target1.targetCharValueEscape;
        java.lang.String str3 = python2Target1.getLanguage();
        org.antlr.v4.tool.Grammar grammar4 = null;
        org.stringtemplate.v4.ST sT5 = null;
        python2Target1.genRecognizerHeaderFile(grammar4, sT5, "_tseti");
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target9 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator8);
        java.util.Set<java.lang.String> strSet10 = python2Target9.badWords;
        java.lang.String str12 = python2Target9.encodeIntAsCharEscape(64);
        org.antlr.v4.codegen.CodeGenerator codeGenerator13 = python2Target9.gen;
        org.antlr.v4.codegen.CodeGenerator codeGenerator14 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target15 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator14);
        java.util.Set<java.lang.String> strSet16 = python2Target15.badWords;
        boolean boolean17 = python2Target15.wantsBaseVisitor();
        boolean boolean18 = python2Target15.wantsBaseVisitor();
        org.antlr.v4.codegen.CodeGenerator codeGenerator19 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target20 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator19);
        boolean boolean21 = python2Target20.wantsBaseVisitor();
        java.util.Set<java.lang.String> strSet22 = python2Target20.badWords;
        python2Target15.badWords = strSet22;
        int int24 = python2Target15.getSerializedATNSegmentLimit();
        org.stringtemplate.v4.STGroup sTGroup25 = python2Target15.loadTemplates();
        python2Target9.templates = sTGroup25;
        java.util.Set<java.lang.String> strSet27 = python2Target9.getBadWords();
        python2Target1.badWords = strSet27;
        java.util.Set<java.lang.String> strSet29 = python2Target1.badWords;
        org.antlr.v4.tool.Grammar grammar30 = null;
        org.stringtemplate.v4.ST sT31 = null;
        // The following exception was thrown during execution in test generation
        try {
            python2Target1.genFile(grammar30, sT31, "_\\\"ContextConte");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Python2" + "'", str3, "Python2");
        org.junit.Assert.assertNotNull(strSet10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "@" + "'", str12, "@");
        org.junit.Assert.assertNull(codeGenerator13);
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(strSet22);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 2147483647 + "'", int24 == 2147483647);
        org.junit.Assert.assertNotNull(sTGroup25);
        org.junit.Assert.assertNotNull(strSet27);
        org.junit.Assert.assertNotNull(strSet29);
    }

    @Test
    public void test1873() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1873");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str5 = python2Target1.getTargetStringLiteralFromString("hi!", false);
        java.lang.String str7 = python2Target1.getImplicitRuleLabel("@");
        python2Target1.addBadWords();
        boolean boolean9 = python2Target1.wantsBaseListener();
        boolean boolean10 = python2Target1.supportsOverloadedMethods();
        org.antlr.v4.codegen.CodeGenerator codeGenerator11 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target12 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator11);
        java.util.Set<java.lang.String> strSet13 = python2Target12.badWords;
        java.lang.String str15 = python2Target12.encodeIntAsCharEscape(64);
        java.lang.String str16 = python2Target12.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator17 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target18 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator17);
        java.lang.String[] strArray19 = python2Target18.targetCharValueEscape;
        java.lang.String str20 = python2Target18.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup21 = python2Target18.getTemplates();
        python2Target12.templates = sTGroup21;
        java.util.Set<java.lang.String> strSet23 = python2Target12.getBadWords();
        java.lang.String str26 = python2Target12.getTargetStringLiteralFromString("\"hi!\"", true);
        org.stringtemplate.v4.STGroup sTGroup27 = python2Target12.templates;
        python2Target1.templates = sTGroup27;
        org.stringtemplate.v4.STGroup sTGroup29 = python2Target1.getTemplates();
        int int30 = python2Target1.getInlineTestSetWordSize();
        org.antlr.v4.codegen.CodeGenerator codeGenerator31 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target32 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator31);
        java.lang.String[] strArray33 = python2Target32.targetCharValueEscape;
        java.lang.String str34 = python2Target32.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup35 = python2Target32.getTemplates();
        java.lang.String[] strArray36 = python2Target32.targetCharValueEscape;
        org.antlr.v4.codegen.target.Python2Target.python2Keywords = strArray36;
        python2Target1.targetCharValueEscape = strArray36;
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "_@" + "'", str7, "_@");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(strSet13);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "@" + "'", str15, "@");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Python2" + "'", str16, "Python2");
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "Python2" + "'", str20, "Python2");
        org.junit.Assert.assertNotNull(sTGroup21);
        org.junit.Assert.assertNotNull(strSet23);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "\"\\\"hi!\\\"\"" + "'", str26, "\"\\\"hi!\\\"\"");
        org.junit.Assert.assertNotNull(sTGroup27);
        org.junit.Assert.assertNotNull(sTGroup29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 64 + "'", int30 == 64);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "Python2" + "'", str34, "Python2");
        org.junit.Assert.assertNotNull(sTGroup35);
        org.junit.Assert.assertNotNull(strArray36);
    }

    @Test
    public void test1874() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1874");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str4 = python2Target1.encodeIntAsCharEscape(64);
        java.lang.String str5 = python2Target1.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target7 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator6);
        java.lang.String[] strArray8 = python2Target7.targetCharValueEscape;
        java.lang.String str9 = python2Target7.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup10 = python2Target7.getTemplates();
        python2Target1.templates = sTGroup10;
        java.lang.String str13 = python2Target1.getTargetStringLiteralFromString("_@");
        java.lang.String str15 = python2Target1.getTargetStringLiteralFromString("\\\"\\\"Context");
        java.lang.String[] strArray16 = python2Target1.targetCharValueEscape;
        org.antlr.v4.codegen.CodeGenerator codeGenerator17 = null;
        python2Target1.gen = codeGenerator17;
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "@" + "'", str4, "@");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Python2" + "'", str5, "Python2");
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Python2" + "'", str9, "Python2");
        org.junit.Assert.assertNotNull(sTGroup10);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "\"_@\"" + "'", str13, "\"_@\"");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "\"\\\\\\\"\\\\\\\"Context\"" + "'", str15, "\"\\\\\\\"\\\\\\\"Context\"");
        org.junit.Assert.assertNotNull(strArray16);
    }

    @Test
    public void test1875() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1875");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str5 = python2Target1.getTargetStringLiteralFromString("hi!", false);
        java.lang.String str7 = python2Target1.getImplicitRuleLabel("@");
        python2Target1.addBadWords();
        int int9 = python2Target1.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet10 = python2Target1.getBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator11 = null;
        python2Target1.gen = codeGenerator11;
        org.antlr.v4.codegen.CodeGenerator codeGenerator13 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target14 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator13);
        java.lang.String str16 = python2Target14.getImplicitSetLabel("");
        org.antlr.v4.codegen.CodeGenerator codeGenerator17 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target18 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator17);
        java.util.Set<java.lang.String> strSet19 = python2Target18.badWords;
        java.lang.String str21 = python2Target18.encodeIntAsCharEscape(64);
        java.lang.String str22 = python2Target18.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator23 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target24 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator23);
        java.lang.String[] strArray25 = python2Target24.targetCharValueEscape;
        java.lang.String str26 = python2Target24.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup27 = python2Target24.getTemplates();
        python2Target18.templates = sTGroup27;
        python2Target14.templates = sTGroup27;
        org.stringtemplate.v4.STGroup sTGroup30 = python2Target14.loadTemplates();
        python2Target1.templates = sTGroup30;
        org.antlr.v4.codegen.CodeGenerator codeGenerator32 = null;
        python2Target1.gen = codeGenerator32;
        boolean boolean34 = python2Target1.templatesExist();
        org.antlr.v4.tool.Grammar grammar35 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator36 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target37 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator36);
        python2Target37.language = "\"\\\"hi!\\\"\"";
        java.lang.String str41 = python2Target37.encodeIntAsCharEscape((int) '4');
        org.antlr.v4.codegen.CodeGenerator codeGenerator42 = python2Target37.gen;
        org.antlr.v4.codegen.CodeGenerator codeGenerator43 = python2Target37.getCodeGenerator();
        java.lang.String[] strArray44 = python2Target37.targetCharValueEscape;
        org.antlr.v4.tool.Grammar grammar45 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target46 = new org.antlr.v4.codegen.target.Python2Target();
        python2Target46.addBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator48 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target49 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator48);
        java.util.Set<java.lang.String> strSet50 = python2Target49.badWords;
        java.lang.String str52 = python2Target49.getAltLabelContextStructName("\\\"\\\"");
        boolean boolean53 = python2Target49.wantsBaseVisitor();
        java.util.Set<java.lang.String> strSet54 = python2Target49.getBadWords();
        org.stringtemplate.v4.STGroup sTGroup55 = python2Target49.loadTemplates();
        python2Target46.templates = sTGroup55;
        org.antlr.v4.tool.Grammar grammar57 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator58 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target59 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator58);
        java.util.Set<java.lang.String> strSet60 = python2Target59.badWords;
        boolean boolean61 = python2Target59.wantsBaseVisitor();
        boolean boolean62 = python2Target59.wantsBaseVisitor();
        org.antlr.v4.codegen.CodeGenerator codeGenerator63 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target64 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator63);
        boolean boolean65 = python2Target64.wantsBaseVisitor();
        java.util.Set<java.lang.String> strSet66 = python2Target64.badWords;
        python2Target59.badWords = strSet66;
        org.antlr.v4.tool.Grammar grammar68 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator69 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target70 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator69);
        java.lang.String str72 = python2Target70.getImplicitSetLabel("");
        org.antlr.v4.codegen.CodeGenerator codeGenerator73 = null;
        java.lang.String str76 = python2Target70.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator73, "", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator77 = null;
        java.lang.String str80 = python2Target70.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator77, "\"\\\"\\\"\"", false);
        int int81 = python2Target70.getSerializedATNSegmentLimit();
        org.antlr.v4.tool.Grammar grammar82 = null;
        int[] intArray83 = new int[] {};
        java.lang.String[] strArray84 = python2Target70.getTokenTypesAsTargetLabels(grammar82, intArray83);
        java.lang.String[] strArray85 = python2Target59.getTokenTypesAsTargetLabels(grammar68, intArray83);
        java.lang.String[] strArray86 = python2Target46.getTokenTypesAsTargetLabels(grammar57, intArray83);
        java.lang.String[] strArray87 = python2Target37.getTokenTypesAsTargetLabels(grammar45, intArray83);
        java.lang.String[] strArray88 = python2Target1.getTokenTypesAsTargetLabels(grammar35, intArray83);
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "_@" + "'", str7, "_@");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 64 + "'", int9 == 64);
        org.junit.Assert.assertNotNull(strSet10);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "_tset" + "'", str16, "_tset");
        org.junit.Assert.assertNotNull(strSet19);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "@" + "'", str21, "@");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "Python2" + "'", str22, "Python2");
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "Python2" + "'", str26, "Python2");
        org.junit.Assert.assertNotNull(sTGroup27);
        org.junit.Assert.assertNotNull(sTGroup30);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "\\64" + "'", str41, "\\64");
        org.junit.Assert.assertNull(codeGenerator42);
        org.junit.Assert.assertNull(codeGenerator43);
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertNotNull(strSet50);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "\\\"\\\"Context" + "'", str52, "\\\"\\\"Context");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(strSet54);
        org.junit.Assert.assertNotNull(sTGroup55);
        org.junit.Assert.assertNotNull(strSet60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(strSet66);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "_tset" + "'", str72, "_tset");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "\"\"" + "'", str76, "\"\"");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "\\\"\\\"" + "'", str80, "\\\"\\\"");
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 2147483647 + "'", int81 == 2147483647);
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[]");
        org.junit.Assert.assertNotNull(strArray84);
        org.junit.Assert.assertNotNull(strArray85);
        org.junit.Assert.assertNotNull(strArray86);
        org.junit.Assert.assertNotNull(strArray87);
        org.junit.Assert.assertNotNull(strArray88);
    }

    @Test
    public void test1876() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1876");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String str3 = python2Target1.getImplicitSetLabel("");
        int int4 = python2Target1.getSerializedATNSegmentLimit();
        org.antlr.v4.tool.Grammar grammar5 = null;
        org.stringtemplate.v4.ST sT6 = null;
        // The following exception was thrown during execution in test generation
        try {
            python2Target1.genFile(grammar5, sT6, "tset6");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "_tset" + "'", str3, "_tset");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 2147483647 + "'", int4 == 2147483647);
    }

    @Test
    public void test1877() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1877");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String str3 = python2Target1.getImplicitSetLabel("");
        org.antlr.v4.codegen.CodeGenerator codeGenerator4 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target5 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator4);
        java.util.Set<java.lang.String> strSet6 = python2Target5.badWords;
        java.lang.String str8 = python2Target5.encodeIntAsCharEscape(64);
        java.lang.String str9 = python2Target5.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target11 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator10);
        java.lang.String[] strArray12 = python2Target11.targetCharValueEscape;
        java.lang.String str13 = python2Target11.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup14 = python2Target11.getTemplates();
        python2Target5.templates = sTGroup14;
        python2Target1.templates = sTGroup14;
        org.antlr.v4.codegen.CodeGenerator codeGenerator17 = null;
        python2Target1.gen = codeGenerator17;
        java.lang.String str19 = python2Target1.getLanguage();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "_tset" + "'", str3, "_tset");
        org.junit.Assert.assertNotNull(strSet6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "@" + "'", str8, "@");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Python2" + "'", str9, "Python2");
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Python2" + "'", str13, "Python2");
        org.junit.Assert.assertNotNull(sTGroup14);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Python2" + "'", str19, "Python2");
    }

    @Test
    public void test1878() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1878");
        org.antlr.v4.codegen.target.Python2Target python2Target0 = new org.antlr.v4.codegen.target.Python2Target();
        python2Target0.addBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator2 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target3 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator2);
        java.util.Set<java.lang.String> strSet4 = python2Target3.badWords;
        java.lang.String str6 = python2Target3.getAltLabelContextStructName("\\\"\\\"");
        boolean boolean7 = python2Target3.wantsBaseVisitor();
        java.util.Set<java.lang.String> strSet8 = python2Target3.getBadWords();
        org.stringtemplate.v4.STGroup sTGroup9 = python2Target3.loadTemplates();
        python2Target0.templates = sTGroup9;
        org.antlr.v4.tool.Grammar grammar11 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator12 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target13 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator12);
        java.util.Set<java.lang.String> strSet14 = python2Target13.badWords;
        boolean boolean15 = python2Target13.wantsBaseVisitor();
        boolean boolean16 = python2Target13.wantsBaseVisitor();
        org.antlr.v4.codegen.CodeGenerator codeGenerator17 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target18 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator17);
        boolean boolean19 = python2Target18.wantsBaseVisitor();
        java.util.Set<java.lang.String> strSet20 = python2Target18.badWords;
        python2Target13.badWords = strSet20;
        org.antlr.v4.tool.Grammar grammar22 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator23 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target24 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator23);
        java.lang.String str26 = python2Target24.getImplicitSetLabel("");
        org.antlr.v4.codegen.CodeGenerator codeGenerator27 = null;
        java.lang.String str30 = python2Target24.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator27, "", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator31 = null;
        java.lang.String str34 = python2Target24.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator31, "\"\\\"\\\"\"", false);
        int int35 = python2Target24.getSerializedATNSegmentLimit();
        org.antlr.v4.tool.Grammar grammar36 = null;
        int[] intArray37 = new int[] {};
        java.lang.String[] strArray38 = python2Target24.getTokenTypesAsTargetLabels(grammar36, intArray37);
        java.lang.String[] strArray39 = python2Target13.getTokenTypesAsTargetLabels(grammar22, intArray37);
        java.lang.String[] strArray40 = python2Target0.getTokenTypesAsTargetLabels(grammar11, intArray37);
        org.antlr.v4.codegen.CodeGenerator codeGenerator41 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target42 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator41);
        java.util.Set<java.lang.String> strSet43 = python2Target42.badWords;
        java.lang.String str46 = python2Target42.getTargetStringLiteralFromString("hi!", false);
        java.lang.String str48 = python2Target42.getImplicitRuleLabel("@");
        python2Target42.addBadWords();
        int int50 = python2Target42.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet51 = python2Target42.getBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator52 = null;
        python2Target42.gen = codeGenerator52;
        org.stringtemplate.v4.STGroup sTGroup54 = python2Target42.loadTemplates();
        org.stringtemplate.v4.STGroup sTGroup55 = python2Target42.loadTemplates();
        java.util.Set<java.lang.String> strSet56 = python2Target42.badWords;
        python2Target0.badWords = strSet56;
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\\\"\\\"Context" + "'", str6, "\\\"\\\"Context");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertNotNull(sTGroup9);
        org.junit.Assert.assertNotNull(strSet14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(strSet20);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "_tset" + "'", str26, "_tset");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "\"\"" + "'", str30, "\"\"");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "\\\"\\\"" + "'", str34, "\\\"\\\"");
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 2147483647 + "'", int35 == 2147483647);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[]");
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertNotNull(strSet43);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "hi!" + "'", str46, "hi!");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "_@" + "'", str48, "_@");
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 64 + "'", int50 == 64);
        org.junit.Assert.assertNotNull(strSet51);
        org.junit.Assert.assertNotNull(sTGroup54);
        org.junit.Assert.assertNotNull(sTGroup55);
        org.junit.Assert.assertNotNull(strSet56);
    }

    @Test
    public void test1879() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1879");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str5 = python2Target1.getTargetStringLiteralFromString("hi!", false);
        java.lang.String str7 = python2Target1.getImplicitRuleLabel("@");
        python2Target1.addBadWords();
        boolean boolean9 = python2Target1.wantsBaseListener();
        int int10 = python2Target1.getInlineTestSetWordSize();
        java.lang.String str11 = python2Target1.getVersion();
        java.lang.String str13 = python2Target1.getTargetStringLiteralFromString("");
        java.lang.String str14 = python2Target1.getVersion();
        org.stringtemplate.v4.STGroup sTGroup15 = python2Target1.getTemplates();
        java.lang.String str16 = python2Target1.getVersion();
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "_@" + "'", str7, "_@");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 64 + "'", int10 == 64);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "4.5.2.1" + "'", str11, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "\"\"" + "'", str13, "\"\"");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "4.5.2.1" + "'", str14, "4.5.2.1");
        org.junit.Assert.assertNotNull(sTGroup15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "4.5.2.1" + "'", str16, "4.5.2.1");
    }

    @Test
    public void test1880() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1880");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str5 = python2Target1.getTargetStringLiteralFromString("hi!", false);
        int int6 = python2Target1.getInlineTestSetWordSize();
        boolean boolean7 = python2Target1.wantsBaseListener();
        java.util.Set<java.lang.String> strSet8 = python2Target1.badWords;
        java.util.Set<java.lang.String> strSet9 = python2Target1.badWords;
        java.lang.String str11 = python2Target1.encodeIntAsCharEscape(64);
        org.stringtemplate.v4.STGroup sTGroup12 = python2Target1.loadTemplates();
        boolean boolean13 = python2Target1.supportsOverloadedMethods();
        org.antlr.v4.tool.Grammar grammar14 = null;
        org.stringtemplate.v4.ST sT15 = null;
        python2Target1.genRecognizerHeaderFile(grammar14, sT15, "_tset\"hi!\"");
        java.lang.String str18 = python2Target1.language;
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 64 + "'", int6 == 64);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertNotNull(strSet9);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "@" + "'", str11, "@");
        org.junit.Assert.assertNotNull(sTGroup12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Python2" + "'", str18, "Python2");
    }

    @Test
    public void test1881() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1881");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        boolean boolean2 = python2Target1.wantsBaseVisitor();
        java.util.Set<java.lang.String> strSet3 = python2Target1.badWords;
        java.util.Set<java.lang.String> strSet4 = python2Target1.getBadWords();
        java.util.Set<java.lang.String> strSet5 = python2Target1.badWords;
        java.lang.String str7 = python2Target1.getImplicitSetLabel("\\\\1Context");
        org.antlr.v4.tool.Grammar grammar8 = null;
        org.stringtemplate.v4.ST sT9 = null;
        python2Target1.genRecognizerHeaderFile(grammar8, sT9, "\"Python2\\\"Contex\"");
        java.lang.String[] strArray12 = python2Target1.targetCharValueEscape;
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "_tset\\\\1Context" + "'", str7, "_tset\\\\1Context");
        org.junit.Assert.assertNotNull(strArray12);
    }

    @Test
    public void test1882() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1882");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str4 = python2Target1.encodeIntAsCharEscape(64);
        java.lang.String str5 = python2Target1.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target7 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator6);
        java.lang.String[] strArray8 = python2Target7.targetCharValueEscape;
        java.lang.String str9 = python2Target7.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup10 = python2Target7.getTemplates();
        python2Target1.templates = sTGroup10;
        java.lang.String str13 = python2Target1.getTargetStringLiteralFromString("_@");
        java.lang.String str15 = python2Target1.getTargetStringLiteralFromString("\\\"\\\"Context");
        boolean boolean16 = python2Target1.templatesExist();
        java.lang.String str18 = python2Target1.getListLabel("_tset_\\\"\\\"Context");
        org.antlr.v4.tool.Grammar grammar19 = null;
        org.stringtemplate.v4.ST sT20 = null;
        // The following exception was thrown during execution in test generation
        try {
            python2Target1.genFile(grammar19, sT20, "\"\\\"\\\"Context\"Context");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "@" + "'", str4, "@");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Python2" + "'", str5, "Python2");
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Python2" + "'", str9, "Python2");
        org.junit.Assert.assertNotNull(sTGroup10);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "\"_@\"" + "'", str13, "\"_@\"");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "\"\\\\\\\"\\\\\\\"Context\"" + "'", str15, "\"\\\\\\\"\\\\\\\"Context\"");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "_tset_\\\"\\\"Context" + "'", str18, "_tset_\\\"\\\"Context");
    }

    @Test
    public void test1883() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1883");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str4 = python2Target1.encodeIntAsCharEscape(64);
        java.lang.String str5 = python2Target1.getLanguage();
        java.lang.String str7 = python2Target1.getListLabel("");
        java.lang.String str8 = python2Target1.getVersion();
        java.util.Set<java.lang.String> strSet9 = python2Target1.getBadWords();
        java.lang.String str11 = python2Target1.getImplicitRuleLabel("_tset6Context");
        java.lang.String[] strArray12 = python2Target1.targetCharValueEscape;
        org.antlr.v4.tool.ast.GrammarAST grammarAST13 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str14 = python2Target1.getLoopCounter(grammarAST13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "@" + "'", str4, "@");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Python2" + "'", str5, "Python2");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "4.5.2.1" + "'", str8, "4.5.2.1");
        org.junit.Assert.assertNotNull(strSet9);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "__tset6Context" + "'", str11, "__tset6Context");
        org.junit.Assert.assertNotNull(strArray12);
    }

    @Test
    public void test1884() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1884");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.util.Set<java.lang.String> strSet3 = python2Target1.badWords;
        org.antlr.v4.tool.Grammar grammar4 = null;
        org.stringtemplate.v4.ST sT5 = null;
        python2Target1.genRecognizerHeaderFile(grammar4, sT5, "\"\\\"_tset\\\"\"");
        org.stringtemplate.v4.STGroup sTGroup8 = python2Target1.loadTemplates();
        org.stringtemplate.v4.STGroup sTGroup9 = python2Target1.templates;
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNotNull(sTGroup8);
        org.junit.Assert.assertNull(sTGroup9);
    }

    @Test
    public void test1885() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1885");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String str3 = python2Target1.getImplicitSetLabel("");
        org.antlr.v4.codegen.CodeGenerator codeGenerator4 = null;
        java.lang.String str7 = python2Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator4, "", true);
        org.antlr.v4.tool.Grammar grammar8 = null;
        org.stringtemplate.v4.ST sT9 = null;
        python2Target1.genRecognizerHeaderFile(grammar8, sT9, "_@");
        org.antlr.v4.codegen.CodeGenerator codeGenerator12 = python2Target1.gen;
        java.lang.String str14 = python2Target1.encodeIntAsCharEscape((int) ' ');
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "_tset" + "'", str3, "_tset");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "\"\"" + "'", str7, "\"\"");
        org.junit.Assert.assertNull(codeGenerator12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + " " + "'", str14, " ");
    }

    @Test
    public void test1886() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1886");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str4 = python2Target1.encodeIntAsCharEscape(64);
        java.lang.String str5 = python2Target1.getLanguage();
        java.lang.String[] strArray11 = new java.lang.String[] { "\"hi!\"", "Python2", "Python2", "@", "_@" };
        java.util.LinkedHashSet<java.lang.String> strSet12 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet12, strArray11);
        python2Target1.badWords = strSet12;
        boolean boolean15 = python2Target1.wantsBaseVisitor();
        org.stringtemplate.v4.STGroup sTGroup16 = python2Target1.getTemplates();
        java.lang.String str18 = python2Target1.getTargetStringLiteralFromString("\"\\\\0\"");
        int int19 = python2Target1.getSerializedATNSegmentLimit();
        java.lang.String str20 = python2Target1.language;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str22 = python2Target1.encodeIntAsCharEscape((int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot encode the specified value: -1");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "@" + "'", str4, "@");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Python2" + "'", str5, "Python2");
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(sTGroup16);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "\"\\\"\\\\\\\\0\\\"\"" + "'", str18, "\"\\\"\\\\\\\\0\\\"\"");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 2147483647 + "'", int19 == 2147483647);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "Python2" + "'", str20, "Python2");
    }

    @Test
    public void test1887() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1887");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        org.antlr.v4.codegen.CodeGenerator codeGenerator2 = null;
        java.lang.String str5 = python2Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator2, "_@", false);
        python2Target1.addBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = null;
        python2Target1.gen = codeGenerator7;
        org.antlr.v4.codegen.CodeGenerator codeGenerator9 = python2Target1.getCodeGenerator();
        org.stringtemplate.v4.STGroup sTGroup10 = python2Target1.getTemplates();
        java.lang.String str12 = python2Target1.encodeIntAsCharEscape((int) (byte) 0);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNull(codeGenerator9);
        org.junit.Assert.assertNotNull(sTGroup10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "\\0" + "'", str12, "\\0");
    }

    @Test
    public void test1888() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1888");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String str3 = python2Target1.getImplicitSetLabel("");
        org.antlr.v4.codegen.CodeGenerator codeGenerator4 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target5 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator4);
        java.util.Set<java.lang.String> strSet6 = python2Target5.badWords;
        java.lang.String str8 = python2Target5.encodeIntAsCharEscape(64);
        java.lang.String str9 = python2Target5.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target11 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator10);
        java.lang.String[] strArray12 = python2Target11.targetCharValueEscape;
        java.lang.String str13 = python2Target11.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup14 = python2Target11.getTemplates();
        python2Target5.templates = sTGroup14;
        python2Target1.templates = sTGroup14;
        org.stringtemplate.v4.STGroup sTGroup17 = python2Target1.templates;
        int int18 = python2Target1.getSerializedATNSegmentLimit();
        org.stringtemplate.v4.STGroup sTGroup19 = python2Target1.templates;
        java.lang.String str21 = python2Target1.getTargetStringLiteralFromString("Python2Context\\\"Contex");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "_tset" + "'", str3, "_tset");
        org.junit.Assert.assertNotNull(strSet6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "@" + "'", str8, "@");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Python2" + "'", str9, "Python2");
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Python2" + "'", str13, "Python2");
        org.junit.Assert.assertNotNull(sTGroup14);
        org.junit.Assert.assertNotNull(sTGroup17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 2147483647 + "'", int18 == 2147483647);
        org.junit.Assert.assertNotNull(sTGroup19);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "\"Python2Context\\\\\\\"Contex\"" + "'", str21, "\"Python2Context\\\\\\\"Contex\"");
    }

    @Test
    public void test1889() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1889");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str5 = python2Target1.getTargetStringLiteralFromString("hi!", false);
        java.lang.String str7 = python2Target1.getImplicitRuleLabel("@");
        python2Target1.addBadWords();
        boolean boolean9 = python2Target1.wantsBaseListener();
        boolean boolean10 = python2Target1.supportsOverloadedMethods();
        org.antlr.v4.codegen.CodeGenerator codeGenerator11 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target12 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator11);
        java.util.Set<java.lang.String> strSet13 = python2Target12.badWords;
        java.lang.String str15 = python2Target12.encodeIntAsCharEscape(64);
        java.lang.String str16 = python2Target12.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator17 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target18 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator17);
        java.lang.String[] strArray19 = python2Target18.targetCharValueEscape;
        java.lang.String str20 = python2Target18.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup21 = python2Target18.getTemplates();
        python2Target12.templates = sTGroup21;
        java.util.Set<java.lang.String> strSet23 = python2Target12.getBadWords();
        java.lang.String str26 = python2Target12.getTargetStringLiteralFromString("\"hi!\"", true);
        org.stringtemplate.v4.STGroup sTGroup27 = python2Target12.templates;
        python2Target1.templates = sTGroup27;
        org.stringtemplate.v4.STGroup sTGroup29 = python2Target1.getTemplates();
        int int30 = python2Target1.getInlineTestSetWordSize();
        org.antlr.v4.tool.Grammar grammar31 = null;
        org.stringtemplate.v4.ST sT32 = null;
        python2Target1.genRecognizerHeaderFile(grammar31, sT32, "a");
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "_@" + "'", str7, "_@");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(strSet13);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "@" + "'", str15, "@");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Python2" + "'", str16, "Python2");
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "Python2" + "'", str20, "Python2");
        org.junit.Assert.assertNotNull(sTGroup21);
        org.junit.Assert.assertNotNull(strSet23);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "\"\\\"hi!\\\"\"" + "'", str26, "\"\\\"hi!\\\"\"");
        org.junit.Assert.assertNotNull(sTGroup27);
        org.junit.Assert.assertNotNull(sTGroup29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 64 + "'", int30 == 64);
    }

    @Test
    public void test1890() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1890");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str5 = python2Target1.getTargetStringLiteralFromString("hi!", false);
        java.lang.String str7 = python2Target1.getImplicitRuleLabel("@");
        python2Target1.addBadWords();
        boolean boolean9 = python2Target1.wantsBaseListener();
        boolean boolean10 = python2Target1.supportsOverloadedMethods();
        java.lang.String str12 = python2Target1.getImplicitRuleLabel("AContext");
        java.lang.String str14 = python2Target1.getImplicitRuleLabel("tset6");
        org.antlr.v4.codegen.CodeGenerator codeGenerator15 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target16 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator15);
        java.util.Set<java.lang.String> strSet17 = python2Target16.badWords;
        java.lang.String str19 = python2Target16.encodeIntAsCharEscape(64);
        java.lang.String str20 = python2Target16.getLanguage();
        java.lang.String[] strArray26 = new java.lang.String[] { "\"hi!\"", "Python2", "Python2", "@", "_@" };
        java.util.LinkedHashSet<java.lang.String> strSet27 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet27, strArray26);
        python2Target16.badWords = strSet27;
        boolean boolean30 = python2Target16.wantsBaseVisitor();
        org.stringtemplate.v4.STGroup sTGroup31 = python2Target16.getTemplates();
        python2Target1.templates = sTGroup31;
        boolean boolean33 = python2Target1.templatesExist();
        java.lang.String str35 = python2Target1.getListLabel("\"_tset_\\\"\\\\\\\"Python2Context\\\\\\\"\\\"\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator36 = python2Target1.getCodeGenerator();
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "_@" + "'", str7, "_@");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "_AContext" + "'", str12, "_AContext");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "_tset6" + "'", str14, "_tset6");
        org.junit.Assert.assertNotNull(strSet17);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "@" + "'", str19, "@");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "Python2" + "'", str20, "Python2");
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(sTGroup31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "\"_tset_\\\"\\\\\\\"Python2Context\\\\\\\"\\\"\"" + "'", str35, "\"_tset_\\\"\\\\\\\"Python2Context\\\\\\\"\\\"\"");
        org.junit.Assert.assertNull(codeGenerator36);
    }

    @Test
    public void test1891() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1891");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str5 = python2Target1.getTargetStringLiteralFromString("hi!", false);
        java.lang.String str7 = python2Target1.getImplicitRuleLabel("@");
        boolean boolean8 = python2Target1.supportsOverloadedMethods();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str10 = python2Target1.getElementListName("\\\"\\\"\\\"\\\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "_@" + "'", str7, "_@");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test1892() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1892");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str5 = python2Target1.getTargetStringLiteralFromString("hi!", false);
        java.lang.String str7 = python2Target1.getImplicitRuleLabel("@");
        python2Target1.addBadWords();
        boolean boolean9 = python2Target1.wantsBaseListener();
        boolean boolean10 = python2Target1.supportsOverloadedMethods();
        org.antlr.v4.codegen.CodeGenerator codeGenerator11 = null;
        python2Target1.gen = codeGenerator11;
        org.antlr.v4.codegen.CodeGenerator codeGenerator13 = null;
        python2Target1.gen = codeGenerator13;
        python2Target1.addBadWords();
        boolean boolean16 = python2Target1.supportsOverloadedMethods();
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "_@" + "'", str7, "_@");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    }

    @Test
    public void test1893() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1893");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str5 = python2Target1.getTargetStringLiteralFromString("hi!", false);
        java.lang.String str7 = python2Target1.getImplicitRuleLabel("@");
        python2Target1.addBadWords();
        boolean boolean9 = python2Target1.wantsBaseListener();
        java.lang.String str11 = python2Target1.getImplicitSetLabel("_tset");
        boolean boolean12 = python2Target1.supportsOverloadedMethods();
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "_@" + "'", str7, "_@");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "_tset_tset" + "'", str11, "_tset_tset");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test1894() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1894");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str5 = python2Target1.getTargetStringLiteralFromString("hi!", false);
        java.lang.String str7 = python2Target1.getImplicitRuleLabel("@");
        python2Target1.addBadWords();
        boolean boolean9 = python2Target1.wantsBaseListener();
        java.lang.String str11 = python2Target1.getImplicitSetLabel("_tset");
        org.antlr.v4.codegen.CodeGenerator codeGenerator12 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target13 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator12);
        java.lang.String[] strArray14 = python2Target13.targetCharValueEscape;
        java.lang.String str15 = python2Target13.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup16 = python2Target13.getTemplates();
        python2Target1.templates = sTGroup16;
        boolean boolean18 = python2Target1.wantsBaseListener();
        boolean boolean19 = python2Target1.wantsBaseVisitor();
        org.stringtemplate.v4.STGroup sTGroup20 = python2Target1.templates;
        java.lang.String str21 = python2Target1.getVersion();
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "_@" + "'", str7, "_@");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "_tset_tset" + "'", str11, "_tset_tset");
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Python2" + "'", str15, "Python2");
        org.junit.Assert.assertNotNull(sTGroup16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(sTGroup20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "4.5.2.1" + "'", str21, "4.5.2.1");
    }

    @Test
    public void test1895() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1895");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        boolean boolean2 = python2Target1.wantsBaseVisitor();
        java.util.Set<java.lang.String> strSet3 = python2Target1.badWords;
        java.lang.String str5 = python2Target1.getTargetStringLiteralFromString("");
        org.stringtemplate.v4.STGroup sTGroup6 = python2Target1.getTemplates();
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = python2Target1.getCodeGenerator();
        java.lang.String str8 = python2Target1.getVersion();
        java.lang.String str10 = python2Target1.getListLabel("\\\"\\\\\\\\0\\\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator11 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target12 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator11);
        java.util.Set<java.lang.String> strSet13 = python2Target12.badWords;
        java.lang.String str16 = python2Target12.getTargetStringLiteralFromString("hi!", false);
        java.lang.String str18 = python2Target12.getImplicitRuleLabel("@");
        python2Target12.addBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator20 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target21 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator20);
        java.lang.String str23 = python2Target21.getImplicitSetLabel("");
        org.antlr.v4.codegen.CodeGenerator codeGenerator24 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target25 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator24);
        java.util.Set<java.lang.String> strSet26 = python2Target25.badWords;
        java.lang.String str28 = python2Target25.encodeIntAsCharEscape(64);
        java.lang.String str29 = python2Target25.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator30 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target31 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator30);
        java.lang.String[] strArray32 = python2Target31.targetCharValueEscape;
        java.lang.String str33 = python2Target31.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup34 = python2Target31.getTemplates();
        python2Target25.templates = sTGroup34;
        python2Target21.templates = sTGroup34;
        java.lang.String str38 = python2Target21.getAltLabelContextStructName("Python2");
        org.stringtemplate.v4.STGroup sTGroup39 = python2Target21.loadTemplates();
        python2Target12.templates = sTGroup39;
        java.util.Set<java.lang.String> strSet41 = python2Target12.badWords;
        python2Target1.badWords = strSet41;
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "\"\"" + "'", str5, "\"\"");
        org.junit.Assert.assertNotNull(sTGroup6);
        org.junit.Assert.assertNull(codeGenerator7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "4.5.2.1" + "'", str8, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\\\"\\\\\\\\0\\\"" + "'", str10, "\\\"\\\\\\\\0\\\"");
        org.junit.Assert.assertNotNull(strSet13);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "_@" + "'", str18, "_@");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "_tset" + "'", str23, "_tset");
        org.junit.Assert.assertNotNull(strSet26);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "@" + "'", str28, "@");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "Python2" + "'", str29, "Python2");
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "Python2" + "'", str33, "Python2");
        org.junit.Assert.assertNotNull(sTGroup34);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "Python2Context" + "'", str38, "Python2Context");
        org.junit.Assert.assertNotNull(sTGroup39);
        org.junit.Assert.assertNotNull(strSet41);
    }
}

