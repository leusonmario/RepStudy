import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest2 {

    public static boolean debug = false;

    @Test
    public void test1001() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1001");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        boolean boolean3 = python3Target1.templatesExist();
        java.lang.String str4 = python3Target1.getVersion();
        int int5 = python3Target1.getInlineTestSetWordSize();
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = python3Target1.getCodeGenerator();
        java.lang.String str8 = python3Target1.getTargetStringLiteralFromString("__tsethi!");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "4.5.2.1" + "'", str4, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 64 + "'", int5 == 64);
        org.junit.Assert.assertNull(codeGenerator6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\"__tsethi!\"" + "'", str8, "\"__tsethi!\"");
    }

    @Test
    public void test1002() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1002");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        boolean boolean3 = python3Target1.wantsBaseVisitor();
        java.lang.String str6 = python3Target1.getTargetStringLiteralFromString("\"Python3Contex\"", true);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str8 = python3Target1.getAltLabelContextStructName("");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 0");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\"\\\"Python3Contex\\\"\"" + "'", str6, "\"\\\"Python3Contex\\\"\"");
    }

    @Test
    public void test1003() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1003");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        boolean boolean3 = python3Target1.wantsBaseVisitor();
        java.lang.String str4 = python3Target1.getLanguage();
        java.lang.String str7 = python3Target1.getTargetStringLiteralFromString("Python3", false);
        boolean boolean8 = python3Target1.templatesExist();
        org.stringtemplate.v4.STGroup sTGroup9 = python3Target1.getTemplates();
        boolean boolean10 = python3Target1.supportsOverloadedMethods();
        java.lang.String str11 = python3Target1.getVersion();
        java.lang.String str13 = python3Target1.getImplicitRuleLabel("\"4.5.2.1\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator14 = null;
        java.lang.String str17 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator14, "i", true);
        int int18 = python3Target1.getSerializedATNSegmentLimit();
        boolean boolean19 = python3Target1.wantsBaseListener();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Python3" + "'", str4, "Python3");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Python3" + "'", str7, "Python3");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(sTGroup9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "4.5.2.1" + "'", str11, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "_\"4.5.2.1\"" + "'", str13, "_\"4.5.2.1\"");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "\"\"" + "'", str17, "\"\"");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 29 + "'", int18 == 29);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    }

    @Test
    public void test1004() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1004");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        java.lang.String str4 = python3Target1.getAltLabelContextStructName("_Python3");
        org.antlr.v4.codegen.CodeGenerator codeGenerator5 = null;
        java.lang.String str8 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator5, "__tsethi!", false);
        boolean boolean9 = python3Target1.wantsBaseListener();
        boolean boolean10 = python3Target1.wantsBaseVisitor();
        java.lang.String str12 = python3Target1.encodeIntAsCharEscape((int) (short) 10);
        java.lang.String str14 = python3Target1.getAltLabelContextStructName("ython");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str16 = python3Target1.getElementName("_PythonContextContext");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "_Python3Context" + "'", str4, "_Python3Context");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "_tsethi" + "'", str8, "_tsethi");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "\\n" + "'", str12, "\\n");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "YthonContext" + "'", str14, "YthonContext");
    }

    @Test
    public void test1005() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1005");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        boolean boolean3 = python3Target1.templatesExist();
        java.lang.String str4 = python3Target1.getVersion();
        java.lang.String str6 = python3Target1.getImplicitSetLabel("_tsethi!");
        java.lang.String str7 = python3Target1.getVersion();
        java.util.Set<java.lang.String> strSet8 = python3Target1.getBadWords();
        java.lang.String str9 = python3Target1.getVersion();
        java.lang.String str11 = python3Target1.getListLabel("_tset");
        org.antlr.v4.tool.Grammar grammar12 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator13 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target14 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator13);
        boolean boolean15 = python3Target14.wantsBaseListener();
        java.lang.String str17 = python3Target14.getAltLabelContextStructName("_Python3");
        java.lang.String str19 = python3Target14.getImplicitSetLabel("i");
        org.antlr.v4.tool.Grammar grammar20 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator21 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target22 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator21);
        boolean boolean23 = python3Target22.wantsBaseListener();
        java.lang.String str25 = python3Target22.getListLabel("");
        java.lang.String str26 = python3Target22.getLanguage();
        java.lang.String str28 = python3Target22.encodeIntAsCharEscape((int) '#');
        org.antlr.v4.tool.Grammar grammar29 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator30 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target31 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator30);
        boolean boolean32 = python3Target31.wantsBaseListener();
        java.util.Set<java.lang.String> strSet33 = python3Target31.getBadWords();
        org.stringtemplate.v4.STGroup sTGroup34 = python3Target31.getTemplates();
        java.lang.String str36 = python3Target31.getImplicitRuleLabel("\"\\\\1\"");
        org.antlr.v4.tool.Grammar grammar37 = null;
        int[] intArray38 = new int[] {};
        java.lang.String[] strArray39 = python3Target31.getTokenTypesAsTargetLabels(grammar37, intArray38);
        java.lang.String[] strArray40 = python3Target22.getTokenTypesAsTargetLabels(grammar29, intArray38);
        java.lang.String[] strArray41 = python3Target14.getTokenTypesAsTargetLabels(grammar20, intArray38);
        java.lang.String[] strArray42 = python3Target1.getTokenTypesAsTargetLabels(grammar12, intArray38);
        boolean boolean43 = python3Target1.wantsBaseVisitor();
        org.antlr.v4.codegen.CodeGenerator codeGenerator44 = python3Target1.getCodeGenerator();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "4.5.2.1" + "'", str4, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "_tset_tsethi!" + "'", str6, "_tset_tsethi!");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "4.5.2.1" + "'", str7, "4.5.2.1");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "4.5.2.1" + "'", str9, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "_tset" + "'", str11, "_tset");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "_Python3Context" + "'", str17, "_Python3Context");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "_tseti" + "'", str19, "_tseti");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "Python3" + "'", str26, "Python3");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "#" + "'", str28, "#");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(strSet33);
        org.junit.Assert.assertNotNull(sTGroup34);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "_\"\\\\1\"" + "'", str36, "_\"\\\\1\"");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[]");
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNull(codeGenerator44);
    }

    @Test
    public void test1006() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1006");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        boolean boolean3 = python3Target1.wantsBaseVisitor();
        java.lang.String str4 = python3Target1.getLanguage();
        java.lang.String str7 = python3Target1.getTargetStringLiteralFromString("Python3", false);
        java.lang.String str9 = python3Target1.encodeIntAsCharEscape((int) (byte) 10);
        java.lang.String str11 = python3Target1.getTargetStringLiteralFromString("_Python3");
        java.lang.String str13 = python3Target1.getAltLabelContextStructName("Python3");
        org.antlr.v4.codegen.CodeGenerator codeGenerator14 = null;
        java.lang.String str17 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator14, "\\35", false);
        org.antlr.v4.codegen.CodeGenerator codeGenerator18 = python3Target1.getCodeGenerator();
        org.antlr.v4.tool.ast.GrammarAST grammarAST19 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str20 = python3Target1.getLoopCounter(grammarAST19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Python3" + "'", str4, "Python3");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Python3" + "'", str7, "Python3");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\\n" + "'", str9, "\\n");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "\"_Python3\"" + "'", str11, "\"_Python3\"");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Python3Context" + "'", str13, "Python3Context");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "3" + "'", str17, "3");
        org.junit.Assert.assertNull(codeGenerator18);
    }

    @Test
    public void test1007() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1007");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        boolean boolean3 = python3Target1.templatesExist();
        org.stringtemplate.v4.STGroup sTGroup4 = python3Target1.getTemplates();
        int int5 = python3Target1.getInlineTestSetWordSize();
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = python3Target1.getCodeGenerator();
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = null;
        java.lang.String str10 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator7, "hi!", false);
        java.lang.String str13 = python3Target1.getTargetStringLiteralFromString("_\"\\\"Python3Contex\\\"\"", true);
        int int14 = python3Target1.getSerializedATNSegmentLimit();
        org.stringtemplate.v4.STGroup sTGroup15 = python3Target1.getTemplates();
        java.lang.String str16 = python3Target1.getVersion();
        java.lang.String str18 = python3Target1.getImplicitRuleLabel("@");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(sTGroup4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 64 + "'", int5 == 64);
        org.junit.Assert.assertNull(codeGenerator6);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "i" + "'", str10, "i");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "\"_\\\"\\\\\\\"Python3Contex\\\\\\\"\\\"\"" + "'", str13, "\"_\\\"\\\\\\\"Python3Contex\\\\\\\"\\\"\"");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 29 + "'", int14 == 29);
        org.junit.Assert.assertNotNull(sTGroup15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "4.5.2.1" + "'", str16, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "_@" + "'", str18, "_@");
    }

    @Test
    public void test1008() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1008");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python3Target1.getBadWords();
        java.lang.String str3 = python3Target1.getVersion();
        java.lang.String str4 = python3Target1.getLanguage();
        org.antlr.v4.tool.Grammar grammar5 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target7 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator6);
        boolean boolean8 = python3Target7.wantsBaseListener();
        java.lang.String str10 = python3Target7.getListLabel("");
        boolean boolean11 = python3Target7.supportsOverloadedMethods();
        java.lang.String str13 = python3Target7.encodeIntAsCharEscape((int) ' ');
        org.antlr.v4.codegen.CodeGenerator codeGenerator14 = null;
        java.lang.String str17 = python3Target7.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator14, "\"\\\"\\\"Python3Contex\\\"\"", false);
        int int18 = python3Target7.getInlineTestSetWordSize();
        org.antlr.v4.tool.Grammar grammar19 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator20 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target21 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator20);
        java.lang.String str23 = python3Target21.encodeIntAsCharEscape(1);
        java.lang.String str24 = python3Target21.getVersion();
        java.lang.String str26 = python3Target21.getImplicitRuleLabel("_tsethi!");
        org.antlr.v4.codegen.CodeGenerator codeGenerator27 = null;
        java.lang.String str30 = python3Target21.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator27, "_Python3", false);
        org.antlr.v4.codegen.CodeGenerator codeGenerator31 = python3Target21.getCodeGenerator();
        boolean boolean32 = python3Target21.supportsOverloadedMethods();
        java.lang.String str34 = python3Target21.encodeIntAsCharEscape(64);
        org.antlr.v4.tool.Grammar grammar35 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator36 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target37 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator36);
        java.lang.String str39 = python3Target37.encodeIntAsCharEscape(1);
        java.lang.String str40 = python3Target37.getVersion();
        java.lang.String str42 = python3Target37.getImplicitRuleLabel("_tsethi!");
        java.lang.String str44 = python3Target37.getImplicitRuleLabel("__tsethi!");
        org.antlr.v4.codegen.CodeGenerator codeGenerator45 = python3Target37.getCodeGenerator();
        boolean boolean46 = python3Target37.supportsOverloadedMethods();
        java.lang.String str49 = python3Target37.getTargetStringLiteralFromString("\"_Python3\"", true);
        java.util.Set<java.lang.String> strSet50 = python3Target37.getBadWords();
        org.antlr.v4.tool.Grammar grammar51 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator52 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target53 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator52);
        boolean boolean54 = python3Target53.wantsBaseListener();
        org.antlr.v4.codegen.CodeGenerator codeGenerator55 = python3Target53.getCodeGenerator();
        java.lang.String str58 = python3Target53.getTargetStringLiteralFromString("\\n", false);
        org.antlr.v4.tool.Grammar grammar59 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator60 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target61 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator60);
        boolean boolean62 = python3Target61.wantsBaseListener();
        java.util.Set<java.lang.String> strSet63 = python3Target61.getBadWords();
        org.stringtemplate.v4.STGroup sTGroup64 = python3Target61.getTemplates();
        java.lang.String str66 = python3Target61.getImplicitRuleLabel("\"\\\\1\"");
        org.antlr.v4.tool.Grammar grammar67 = null;
        int[] intArray68 = new int[] {};
        java.lang.String[] strArray69 = python3Target61.getTokenTypesAsTargetLabels(grammar67, intArray68);
        java.lang.String[] strArray70 = python3Target53.getTokenTypesAsTargetLabels(grammar59, intArray68);
        java.lang.String[] strArray71 = python3Target37.getTokenTypesAsTargetLabels(grammar51, intArray68);
        java.lang.String[] strArray72 = python3Target21.getTokenTypesAsTargetLabels(grammar35, intArray68);
        java.lang.String[] strArray73 = python3Target7.getTokenTypesAsTargetLabels(grammar19, intArray68);
        java.lang.String[] strArray74 = python3Target1.getTokenTypesAsTargetLabels(grammar5, intArray68);
        org.antlr.v4.tool.ast.GrammarAST grammarAST75 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str76 = python3Target1.getLoopCounter(grammarAST75);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "4.5.2.1" + "'", str3, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Python3" + "'", str4, "Python3");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + " " + "'", str13, " ");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "\\\"\\\"Python3Contex\\\"" + "'", str17, "\\\"\\\"Python3Contex\\\"");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 64 + "'", int18 == 64);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "\\1" + "'", str23, "\\1");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "4.5.2.1" + "'", str24, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "__tsethi!" + "'", str26, "__tsethi!");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "Python" + "'", str30, "Python");
        org.junit.Assert.assertNull(codeGenerator31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "@" + "'", str34, "@");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "\\1" + "'", str39, "\\1");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "4.5.2.1" + "'", str40, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "__tsethi!" + "'", str42, "__tsethi!");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "___tsethi!" + "'", str44, "___tsethi!");
        org.junit.Assert.assertNull(codeGenerator45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "\"\\\"_Python3\\\"\"" + "'", str49, "\"\\\"_Python3\\\"\"");
        org.junit.Assert.assertNotNull(strSet50);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNull(codeGenerator55);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "\\\\n" + "'", str58, "\\\\n");
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(strSet63);
        org.junit.Assert.assertNotNull(sTGroup64);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "_\"\\\\1\"" + "'", str66, "_\"\\\\1\"");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[]");
        org.junit.Assert.assertNotNull(strArray69);
        org.junit.Assert.assertNotNull(strArray70);
        org.junit.Assert.assertNotNull(strArray71);
        org.junit.Assert.assertNotNull(strArray72);
        org.junit.Assert.assertNotNull(strArray73);
        org.junit.Assert.assertNotNull(strArray74);
    }

    @Test
    public void test1009() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1009");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        boolean boolean3 = python3Target1.wantsBaseVisitor();
        java.lang.String str4 = python3Target1.getLanguage();
        java.lang.String str7 = python3Target1.getTargetStringLiteralFromString("Python3", false);
        java.lang.String str9 = python3Target1.getImplicitRuleLabel("Python3");
        boolean boolean10 = python3Target1.templatesExist();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Python3" + "'", str4, "Python3");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Python3" + "'", str7, "Python3");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "_Python3" + "'", str9, "_Python3");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
    }

    @Test
    public void test1010() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1010");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.lang.String str3 = python3Target1.encodeIntAsCharEscape(1);
        java.lang.String str4 = python3Target1.getVersion();
        java.lang.String str5 = python3Target1.getVersion();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "\\1" + "'", str3, "\\1");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "4.5.2.1" + "'", str4, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "4.5.2.1" + "'", str5, "4.5.2.1");
    }

    @Test
    public void test1011() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1011");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        boolean boolean3 = python3Target1.wantsBaseVisitor();
        java.lang.String str4 = python3Target1.getLanguage();
        java.lang.String str7 = python3Target1.getTargetStringLiteralFromString("Python3", false);
        java.lang.String str10 = python3Target1.getTargetStringLiteralFromString("Python3", true);
        java.lang.String str12 = python3Target1.getImplicitSetLabel("hi!");
        java.lang.String str14 = python3Target1.getTargetStringLiteralFromString("\"Python3Contex\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator15 = python3Target1.getCodeGenerator();
        boolean boolean16 = python3Target1.templatesExist();
        java.lang.String str18 = python3Target1.getImplicitSetLabel("\"ython\"");
        int int19 = python3Target1.getSerializedATNSegmentLimit();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Python3" + "'", str4, "Python3");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Python3" + "'", str7, "Python3");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\"Python3\"" + "'", str10, "\"Python3\"");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "_tsethi!" + "'", str12, "_tsethi!");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "\"\\\"Python3Contex\\\"\"" + "'", str14, "\"\\\"Python3Contex\\\"\"");
        org.junit.Assert.assertNull(codeGenerator15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "_tset\"ython\"" + "'", str18, "_tset\"ython\"");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 29 + "'", int19 == 29);
    }

    @Test
    public void test1012() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1012");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        boolean boolean3 = python3Target1.wantsBaseVisitor();
        java.lang.String str4 = python3Target1.getLanguage();
        java.lang.String str7 = python3Target1.getTargetStringLiteralFromString("Python3", false);
        java.lang.String str9 = python3Target1.getImplicitRuleLabel("Python3");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str11 = python3Target1.getElementListName("\\0");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Python3" + "'", str4, "Python3");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Python3" + "'", str7, "Python3");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "_Python3" + "'", str9, "_Python3");
    }

    @Test
    public void test1013() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1013");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        boolean boolean3 = python3Target1.wantsBaseVisitor();
        java.lang.String str4 = python3Target1.getLanguage();
        java.lang.String str7 = python3Target1.getTargetStringLiteralFromString("Python3", false);
        java.lang.String str10 = python3Target1.getTargetStringLiteralFromString("Python3", true);
        java.lang.String str12 = python3Target1.getImplicitSetLabel("hi!");
        java.lang.String str14 = python3Target1.getTargetStringLiteralFromString("\"Python3Contex\"");
        java.lang.String str15 = python3Target1.getLanguage();
        int int16 = python3Target1.getSerializedATNSegmentLimit();
        int int17 = python3Target1.getSerializedATNSegmentLimit();
        java.lang.String str19 = python3Target1.getTargetStringLiteralFromString("\"\\\\\\\"hi!\\\\\\\"\"");
        java.lang.String str21 = python3Target1.encodeIntAsCharEscape((int) (short) 10);
        java.lang.String str22 = python3Target1.getLanguage();
        java.lang.String str24 = python3Target1.getListLabel("_\"_\\\\\\\"\\\\\\\"Python3Contex\\\\\\\"\"");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Python3" + "'", str4, "Python3");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Python3" + "'", str7, "Python3");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\"Python3\"" + "'", str10, "\"Python3\"");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "_tsethi!" + "'", str12, "_tsethi!");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "\"\\\"Python3Contex\\\"\"" + "'", str14, "\"\\\"Python3Contex\\\"\"");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Python3" + "'", str15, "Python3");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 29 + "'", int16 == 29);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 29 + "'", int17 == 29);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "\"\\\"\\\\\\\\\\\\\\\"hi!\\\\\\\\\\\\\\\"\\\"\"" + "'", str19, "\"\\\"\\\\\\\\\\\\\\\"hi!\\\\\\\\\\\\\\\"\\\"\"");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "\\n" + "'", str21, "\\n");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "Python3" + "'", str22, "Python3");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "_\"_\\\\\\\"\\\\\\\"Python3Contex\\\\\\\"\"" + "'", str24, "_\"_\\\\\\\"\\\\\\\"Python3Contex\\\\\\\"\"");
    }

    @Test
    public void test1014() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1014");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.lang.String str3 = python3Target1.encodeIntAsCharEscape(1);
        java.lang.String str4 = python3Target1.getVersion();
        java.lang.String str6 = python3Target1.getImplicitRuleLabel("_tsethi!");
        java.lang.String str8 = python3Target1.getImplicitRuleLabel("__tsethi!");
        org.antlr.v4.codegen.CodeGenerator codeGenerator9 = python3Target1.getCodeGenerator();
        java.lang.String str11 = python3Target1.getListLabel("Python3");
        java.lang.String str13 = python3Target1.encodeIntAsCharEscape(29);
        java.lang.String str14 = python3Target1.getLanguage();
        boolean boolean15 = python3Target1.supportsOverloadedMethods();
        org.antlr.v4.tool.Grammar grammar16 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str18 = python3Target1.getTokenTypeAsTargetLabel(grammar16, (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "\\1" + "'", str3, "\\1");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "4.5.2.1" + "'", str4, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "__tsethi!" + "'", str6, "__tsethi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "___tsethi!" + "'", str8, "___tsethi!");
        org.junit.Assert.assertNull(codeGenerator9);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Python3" + "'", str11, "Python3");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "\\35" + "'", str13, "\\35");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Python3" + "'", str14, "Python3");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test1015() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1015");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = python3Target1.getCodeGenerator();
        java.lang.String str5 = python3Target1.encodeIntAsCharEscape((int) (short) 10);
        java.util.Set<java.lang.String> strSet6 = python3Target1.getBadWords();
        java.lang.String str7 = python3Target1.getLanguage();
        java.lang.String str9 = python3Target1.getListLabel("\\\\n");
        java.lang.String str11 = python3Target1.encodeIntAsCharEscape((int) (short) 10);
        boolean boolean12 = python3Target1.wantsBaseListener();
        boolean boolean13 = python3Target1.wantsBaseListener();
        java.lang.Class<?> wildcardClass14 = python3Target1.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(codeGenerator3);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "\\n" + "'", str5, "\\n");
        org.junit.Assert.assertNotNull(strSet6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Python3" + "'", str7, "Python3");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\\\\n" + "'", str9, "\\\\n");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "\\n" + "'", str11, "\\n");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test1016() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1016");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        java.lang.String str4 = python3Target1.getListLabel("");
        java.lang.String str5 = python3Target1.getLanguage();
        java.util.Set<java.lang.String> strSet6 = python3Target1.getBadWords();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Python3" + "'", str5, "Python3");
        org.junit.Assert.assertNotNull(strSet6);
    }

    @Test
    public void test1017() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1017");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        boolean boolean3 = python3Target1.templatesExist();
        org.stringtemplate.v4.STGroup sTGroup4 = python3Target1.getTemplates();
        org.stringtemplate.v4.STGroup sTGroup5 = python3Target1.getTemplates();
        java.lang.String str7 = python3Target1.getImplicitRuleLabel("\"_Python3\"");
        org.stringtemplate.v4.STGroup sTGroup8 = python3Target1.getTemplates();
        int int9 = python3Target1.getInlineTestSetWordSize();
        boolean boolean10 = python3Target1.templatesExist();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str12 = python3Target1.getElementListName("\"\\\\1\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(sTGroup4);
        org.junit.Assert.assertNotNull(sTGroup5);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "_\"_Python3\"" + "'", str7, "_\"_Python3\"");
        org.junit.Assert.assertNotNull(sTGroup8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 64 + "'", int9 == 64);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
    }

    @Test
    public void test1018() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1018");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        boolean boolean3 = python3Target1.wantsBaseVisitor();
        java.lang.String str4 = python3Target1.getLanguage();
        java.lang.String str7 = python3Target1.getTargetStringLiteralFromString("Python3", false);
        boolean boolean8 = python3Target1.templatesExist();
        org.stringtemplate.v4.STGroup sTGroup9 = python3Target1.getTemplates();
        boolean boolean10 = python3Target1.supportsOverloadedMethods();
        java.lang.String str11 = python3Target1.getVersion();
        java.lang.String str13 = python3Target1.getAltLabelContextStructName("_hi!");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str15 = python3Target1.getImplicitTokenLabel("\\\"hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Python3" + "'", str4, "Python3");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Python3" + "'", str7, "Python3");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(sTGroup9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "4.5.2.1" + "'", str11, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "_hi!Context" + "'", str13, "_hi!Context");
    }

    @Test
    public void test1019() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1019");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        java.lang.String str4 = python3Target1.getAltLabelContextStructName("_Python3");
        org.antlr.v4.codegen.CodeGenerator codeGenerator5 = null;
        java.lang.String str8 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator5, "__tsethi!", false);
        boolean boolean9 = python3Target1.wantsBaseListener();
        org.antlr.v4.codegen.model.RuleFunction ruleFunction10 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str11 = python3Target1.getRuleFunctionContextStructName(ruleFunction10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "_Python3Context" + "'", str4, "_Python3Context");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "_tsethi" + "'", str8, "_tsethi");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test1020() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1020");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = python3Target1.getCodeGenerator();
        java.lang.String str5 = python3Target1.encodeIntAsCharEscape((int) (short) 10);
        java.util.Set<java.lang.String> strSet6 = python3Target1.getBadWords();
        java.lang.String str7 = python3Target1.getLanguage();
        java.lang.String str9 = python3Target1.getListLabel("\\\\n");
        java.lang.String str11 = python3Target1.encodeIntAsCharEscape((int) (short) 10);
        boolean boolean12 = python3Target1.wantsBaseListener();
        java.util.Set<java.lang.String> strSet13 = python3Target1.getBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator14 = null;
        java.lang.String str17 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator14, "_tset_tset", true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(codeGenerator3);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "\\n" + "'", str5, "\\n");
        org.junit.Assert.assertNotNull(strSet6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Python3" + "'", str7, "Python3");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\\\\n" + "'", str9, "\\\\n");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "\\n" + "'", str11, "\\n");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(strSet13);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "\"tset_tse\"" + "'", str17, "\"tset_tse\"");
    }

    @Test
    public void test1021() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1021");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        boolean boolean3 = python3Target1.wantsBaseVisitor();
        java.lang.String str4 = python3Target1.getLanguage();
        java.lang.String str7 = python3Target1.getTargetStringLiteralFromString("Python3", false);
        java.lang.String str9 = python3Target1.getImplicitRuleLabel("Python3");
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = null;
        java.lang.String str13 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator10, "\\35", false);
        java.lang.String str15 = python3Target1.getImplicitRuleLabel("\"hi!\"");
        java.lang.String str18 = python3Target1.getTargetStringLiteralFromString("\"Python3Context\"", true);
        java.lang.String str19 = python3Target1.getVersion();
        java.lang.String str21 = python3Target1.getTargetStringLiteralFromString("\\\"\\\\\\\"_Python3\\\\\\\"\\\"");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str23 = python3Target1.getImplicitTokenLabel("\"Python3\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Python3" + "'", str4, "Python3");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Python3" + "'", str7, "Python3");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "_Python3" + "'", str9, "_Python3");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "3" + "'", str13, "3");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "_\"hi!\"" + "'", str15, "_\"hi!\"");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "\"\\\"Python3Context\\\"\"" + "'", str18, "\"\\\"Python3Context\\\"\"");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "4.5.2.1" + "'", str19, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "\"\\\\\\\"\\\\\\\\\\\\\\\"_Python3\\\\\\\\\\\\\\\"\\\\\\\"\"" + "'", str21, "\"\\\\\\\"\\\\\\\\\\\\\\\"_Python3\\\\\\\\\\\\\\\"\\\\\\\"\"");
    }

    @Test
    public void test1022() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1022");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        java.lang.String str4 = python3Target1.getAltLabelContextStructName("_Python3");
        org.antlr.v4.codegen.CodeGenerator codeGenerator5 = null;
        java.lang.String str8 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator5, "__tsethi!", false);
        boolean boolean9 = python3Target1.wantsBaseListener();
        org.stringtemplate.v4.STGroup sTGroup10 = python3Target1.getTemplates();
        java.lang.String str11 = python3Target1.getLanguage();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "_Python3Context" + "'", str4, "_Python3Context");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "_tsethi" + "'", str8, "_tsethi");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(sTGroup10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Python3" + "'", str11, "Python3");
    }

    @Test
    public void test1023() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1023");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.lang.String str3 = python3Target1.encodeIntAsCharEscape(1);
        java.lang.String str4 = python3Target1.getVersion();
        java.lang.String str6 = python3Target1.getImplicitRuleLabel("_tsethi!");
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = null;
        java.lang.String str10 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator7, "_Python3", false);
        org.antlr.v4.codegen.CodeGenerator codeGenerator11 = python3Target1.getCodeGenerator();
        java.lang.String str14 = python3Target1.getTargetStringLiteralFromString("\"\"", true);
        int int15 = python3Target1.getInlineTestSetWordSize();
        int int16 = python3Target1.getInlineTestSetWordSize();
        org.stringtemplate.v4.STGroup sTGroup17 = python3Target1.getTemplates();
        boolean boolean18 = python3Target1.wantsBaseListener();
        java.lang.String str21 = python3Target1.getTargetStringLiteralFromString("_tset_tsethi!Context", true);
        java.lang.String str23 = python3Target1.getListLabel("_tset\\\"___tsethi!Context");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "\\1" + "'", str3, "\\1");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "4.5.2.1" + "'", str4, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "__tsethi!" + "'", str6, "__tsethi!");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Python" + "'", str10, "Python");
        org.junit.Assert.assertNull(codeGenerator11);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "\"\\\"\\\"\"" + "'", str14, "\"\\\"\\\"\"");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 64 + "'", int15 == 64);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 64 + "'", int16 == 64);
        org.junit.Assert.assertNotNull(sTGroup17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "\"_tset_tsethi!Context\"" + "'", str21, "\"_tset_tsethi!Context\"");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "_tset\\\"___tsethi!Context" + "'", str23, "_tset\\\"___tsethi!Context");
    }

    @Test
    public void test1024() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1024");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        java.util.Set<java.lang.String> strSet3 = python3Target1.getBadWords();
        java.util.Set<java.lang.String> strSet4 = python3Target1.getBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator5 = null;
        java.lang.String str8 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator5, "\"\\\"Python3Contex\\\"\"", true);
        int int9 = python3Target1.getSerializedATNSegmentLimit();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str11 = python3Target1.getElementListName("\\\"4.5.2.1\\\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\"\\\"Python3Contex\\\"\"" + "'", str8, "\"\\\"Python3Contex\\\"\"");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 29 + "'", int9 == 29);
    }

    @Test
    public void test1025() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1025");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = python3Target1.getCodeGenerator();
        org.antlr.v4.codegen.CodeGenerator codeGenerator4 = null;
        java.lang.String str7 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator4, "d", true);
        java.util.Set<java.lang.String> strSet8 = python3Target1.getBadWords();
        java.lang.Class<?> wildcardClass9 = strSet8.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(codeGenerator3);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "\"\"" + "'", str7, "\"\"");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test1026() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1026");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        boolean boolean3 = python3Target1.templatesExist();
        org.stringtemplate.v4.STGroup sTGroup4 = python3Target1.getTemplates();
        int int5 = python3Target1.getInlineTestSetWordSize();
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = python3Target1.getCodeGenerator();
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = null;
        java.lang.String str10 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator7, "hi!", false);
        java.lang.String str12 = python3Target1.getListLabel("\"Python3Contex\"");
        java.lang.String str14 = python3Target1.getAltLabelContextStructName("_tseta");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(sTGroup4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 64 + "'", int5 == 64);
        org.junit.Assert.assertNull(codeGenerator6);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "i" + "'", str10, "i");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "\"Python3Contex\"" + "'", str12, "\"Python3Contex\"");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "_tsetaContext" + "'", str14, "_tsetaContext");
    }

    @Test
    public void test1027() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1027");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.lang.String str3 = python3Target1.encodeIntAsCharEscape(1);
        java.lang.String str4 = python3Target1.getVersion();
        java.lang.String str6 = python3Target1.getImplicitRuleLabel("_tsethi!");
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = null;
        java.lang.String str10 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator7, "_Python3", false);
        org.antlr.v4.codegen.CodeGenerator codeGenerator11 = python3Target1.getCodeGenerator();
        java.lang.String str14 = python3Target1.getTargetStringLiteralFromString("\"\"", true);
        int int15 = python3Target1.getInlineTestSetWordSize();
        org.antlr.v4.codegen.model.RuleFunction ruleFunction16 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str17 = python3Target1.getRuleFunctionContextStructName(ruleFunction16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "\\1" + "'", str3, "\\1");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "4.5.2.1" + "'", str4, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "__tsethi!" + "'", str6, "__tsethi!");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Python" + "'", str10, "Python");
        org.junit.Assert.assertNull(codeGenerator11);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "\"\\\"\\\"\"" + "'", str14, "\"\\\"\\\"\"");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 64 + "'", int15 == 64);
    }

    @Test
    public void test1028() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1028");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.lang.String str3 = python3Target1.encodeIntAsCharEscape(1);
        java.lang.String str4 = python3Target1.getVersion();
        java.lang.String str6 = python3Target1.getImplicitRuleLabel("_tsethi!");
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = null;
        java.lang.String str10 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator7, "_Python3", false);
        org.antlr.v4.codegen.CodeGenerator codeGenerator11 = python3Target1.getCodeGenerator();
        java.lang.String str13 = python3Target1.getAltLabelContextStructName("Python");
        java.util.Set<java.lang.String> strSet14 = python3Target1.getBadWords();
        java.lang.String str16 = python3Target1.getTargetStringLiteralFromString("6");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "\\1" + "'", str3, "\\1");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "4.5.2.1" + "'", str4, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "__tsethi!" + "'", str6, "__tsethi!");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Python" + "'", str10, "Python");
        org.junit.Assert.assertNull(codeGenerator11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "PythonContext" + "'", str13, "PythonContext");
        org.junit.Assert.assertNotNull(strSet14);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "\"6\"" + "'", str16, "\"6\"");
    }

    @Test
    public void test1029() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1029");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        boolean boolean3 = python3Target1.templatesExist();
        int int4 = python3Target1.getSerializedATNSegmentLimit();
        org.antlr.v4.codegen.CodeGenerator codeGenerator5 = null;
        java.lang.String str8 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator5, "\"\\\\1\"", false);
        boolean boolean9 = python3Target1.templatesExist();
        org.antlr.v4.codegen.model.RuleFunction ruleFunction10 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str11 = python3Target1.getRuleFunctionContextStructName(ruleFunction10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 29 + "'", int4 == 29);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\\\\1" + "'", str8, "\\\\1");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
    }

    @Test
    public void test1030() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1030");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        boolean boolean3 = python3Target1.wantsBaseVisitor();
        java.lang.String str4 = python3Target1.getLanguage();
        java.lang.String str6 = python3Target1.getTargetStringLiteralFromString("\"Python3Contex\"");
        org.antlr.v4.tool.Grammar grammar7 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str9 = python3Target1.getTokenTypeAsTargetLabel(grammar7, (int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Python3" + "'", str4, "Python3");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\"\\\"Python3Contex\\\"\"" + "'", str6, "\"\\\"Python3Contex\\\"\"");
    }

    @Test
    public void test1031() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1031");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.lang.String str3 = python3Target1.encodeIntAsCharEscape(1);
        java.lang.String str4 = python3Target1.getVersion();
        java.lang.String str6 = python3Target1.getImplicitRuleLabel("_tsethi!");
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = null;
        java.lang.String str10 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator7, "_Python3", false);
        org.antlr.v4.codegen.CodeGenerator codeGenerator11 = python3Target1.getCodeGenerator();
        boolean boolean12 = python3Target1.supportsOverloadedMethods();
        java.lang.String str14 = python3Target1.encodeIntAsCharEscape(64);
        java.lang.String str17 = python3Target1.getTargetStringLiteralFromString("_\"_Python3\"", false);
        java.lang.String str18 = python3Target1.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator19 = null;
        java.lang.String str22 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator19, "_\"ython\"", true);
        org.antlr.v4.codegen.model.RuleFunction ruleFunction23 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str24 = python3Target1.getRuleFunctionContextStructName(ruleFunction23);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "\\1" + "'", str3, "\\1");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "4.5.2.1" + "'", str4, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "__tsethi!" + "'", str6, "__tsethi!");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Python" + "'", str10, "Python");
        org.junit.Assert.assertNull(codeGenerator11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "@" + "'", str14, "@");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "_\\\"_Python3\\\"" + "'", str17, "_\\\"_Python3\\\"");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "4.5.2.1" + "'", str18, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "\"\\\"ython\"" + "'", str22, "\"\\\"ython\"");
    }

    @Test
    public void test1032() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1032");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        java.util.Set<java.lang.String> strSet3 = python3Target1.getBadWords();
        java.util.Set<java.lang.String> strSet4 = python3Target1.getBadWords();
        boolean boolean5 = python3Target1.wantsBaseVisitor();
        int int6 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str9 = python3Target1.getTargetStringLiteralFromString("\\\"\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\1Context\\\\\\\"\\\"", true);
        java.lang.String str11 = python3Target1.getImplicitSetLabel("_\"\\\\\\\"\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\1Context\\\\\\\\\\\\\\\"\\\\\\\"\"");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 64 + "'", int6 == 64);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\"\\\\\\\"\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\1Context\\\\\\\\\\\\\\\"\\\\\\\"\"" + "'", str9, "\"\\\\\\\"\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\1Context\\\\\\\\\\\\\\\"\\\\\\\"\"");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "_tset_\"\\\\\\\"\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\1Context\\\\\\\\\\\\\\\"\\\\\\\"\"" + "'", str11, "_tset_\"\\\\\\\"\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\1Context\\\\\\\\\\\\\\\"\\\\\\\"\"");
    }

    @Test
    public void test1033() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1033");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.lang.String str3 = python3Target1.encodeIntAsCharEscape(1);
        org.antlr.v4.codegen.CodeGenerator codeGenerator4 = null;
        java.lang.String str7 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator4, "_Python3Context", true);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str9 = python3Target1.getImplicitTokenLabel("\\\"\\\"ContextContext");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "\\1" + "'", str3, "\\1");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "\"Python3Contex\"" + "'", str7, "\"Python3Contex\"");
    }

    @Test
    public void test1034() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1034");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        org.antlr.v4.codegen.CodeGenerator codeGenerator2 = python3Target1.getCodeGenerator();
        java.lang.String str3 = python3Target1.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup4 = python3Target1.getTemplates();
        java.lang.String str6 = python3Target1.getImplicitRuleLabel("_\"hi!\"");
        boolean boolean7 = python3Target1.supportsOverloadedMethods();
        java.lang.String str9 = python3Target1.getTargetStringLiteralFromString("__tset_Python3ContextContext");
        java.lang.String str12 = python3Target1.getTargetStringLiteralFromString("_\"hi!\"ContextContextContext", true);
        org.junit.Assert.assertNull(codeGenerator2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Python3" + "'", str3, "Python3");
        org.junit.Assert.assertNotNull(sTGroup4);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "__\"hi!\"" + "'", str6, "__\"hi!\"");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\"__tset_Python3ContextContext\"" + "'", str9, "\"__tset_Python3ContextContext\"");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "\"_\\\"hi!\\\"ContextContextContext\"" + "'", str12, "\"_\\\"hi!\\\"ContextContextContext\"");
    }

    @Test
    public void test1035() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1035");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        java.lang.String str4 = python3Target1.getAltLabelContextStructName("_Python3");
        org.antlr.v4.codegen.CodeGenerator codeGenerator5 = null;
        java.lang.String str8 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator5, "__tsethi!", false);
        java.lang.String str10 = python3Target1.encodeIntAsCharEscape((int) (short) 100);
        boolean boolean11 = python3Target1.supportsOverloadedMethods();
        int int12 = python3Target1.getInlineTestSetWordSize();
        int int13 = python3Target1.getSerializedATNSegmentLimit();
        int int14 = python3Target1.getInlineTestSetWordSize();
        int int15 = python3Target1.getSerializedATNSegmentLimit();
        int int16 = python3Target1.getSerializedATNSegmentLimit();
        java.lang.String str18 = python3Target1.getAltLabelContextStructName("\\\"\\\"ContextContext");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "_Python3Context" + "'", str4, "_Python3Context");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "_tsethi" + "'", str8, "_tsethi");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "d" + "'", str10, "d");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 64 + "'", int12 == 64);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 29 + "'", int13 == 29);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 64 + "'", int14 == 64);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 29 + "'", int15 == 29);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 29 + "'", int16 == 29);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "\\\"\\\"ContextContextContext" + "'", str18, "\\\"\\\"ContextContextContext");
    }

    @Test
    public void test1036() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1036");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = python3Target1.getCodeGenerator();
        java.lang.String str5 = python3Target1.encodeIntAsCharEscape((int) (short) 10);
        java.util.Set<java.lang.String> strSet6 = python3Target1.getBadWords();
        java.lang.String str7 = python3Target1.getLanguage();
        java.lang.String str9 = python3Target1.getListLabel("\\\\n");
        java.lang.String str11 = python3Target1.encodeIntAsCharEscape((int) (short) 10);
        boolean boolean12 = python3Target1.wantsBaseVisitor();
        java.lang.String str14 = python3Target1.getImplicitRuleLabel("_tset_Python3ContextContext");
        java.lang.String str16 = python3Target1.getTargetStringLiteralFromString("__tset\"\\\"\\\\\\\\1\\\"\"");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(codeGenerator3);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "\\n" + "'", str5, "\\n");
        org.junit.Assert.assertNotNull(strSet6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Python3" + "'", str7, "Python3");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\\\\n" + "'", str9, "\\\\n");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "\\n" + "'", str11, "\\n");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "__tset_Python3ContextContext" + "'", str14, "__tset_Python3ContextContext");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "\"__tset\\\"\\\\\\\"\\\\\\\\\\\\\\\\1\\\\\\\"\\\"\"" + "'", str16, "\"__tset\\\"\\\\\\\"\\\\\\\\\\\\\\\\1\\\\\\\"\\\"\"");
    }

    @Test
    public void test1037() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1037");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        java.lang.String str4 = python3Target1.getAltLabelContextStructName("_Python3");
        org.antlr.v4.codegen.CodeGenerator codeGenerator5 = null;
        java.lang.String str8 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator5, "__tsethi!", false);
        boolean boolean9 = python3Target1.wantsBaseListener();
        java.lang.String str11 = python3Target1.getImplicitSetLabel("");
        java.lang.String str13 = python3Target1.getTargetStringLiteralFromString("_tset_\"\\\\1\"");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "_Python3Context" + "'", str4, "_Python3Context");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "_tsethi" + "'", str8, "_tsethi");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "_tset" + "'", str11, "_tset");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "\"_tset_\\\"\\\\\\\\1\\\"\"" + "'", str13, "\"_tset_\\\"\\\\\\\\1\\\"\"");
    }

    @Test
    public void test1038() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1038");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python3Target1.getBadWords();
        boolean boolean3 = python3Target1.templatesExist();
        org.stringtemplate.v4.STGroup sTGroup4 = python3Target1.getTemplates();
        java.lang.String str7 = python3Target1.getTargetStringLiteralFromString("_\"\\\"Python3Contex\\\"\"", true);
        java.lang.String str8 = python3Target1.getLanguage();
        java.lang.Class<?> wildcardClass9 = python3Target1.getClass();
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(sTGroup4);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "\"_\\\"\\\\\\\"Python3Contex\\\\\\\"\\\"\"" + "'", str7, "\"_\\\"\\\\\\\"Python3Contex\\\\\\\"\\\"\"");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Python3" + "'", str8, "Python3");
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test1039() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1039");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = python3Target1.getCodeGenerator();
        java.lang.String str5 = python3Target1.encodeIntAsCharEscape((int) (short) 10);
        int int6 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str9 = python3Target1.getTargetStringLiteralFromString("\"_\\\\\\\"hi!\\\\\\\"\"", false);
        java.lang.String str11 = python3Target1.getTargetStringLiteralFromString("\"\\\"_Python\\\"\"");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(codeGenerator3);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "\\n" + "'", str5, "\\n");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 64 + "'", int6 == 64);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\\\"_\\\\\\\\\\\\\\\"hi!\\\\\\\\\\\\\\\"\\\"" + "'", str9, "\\\"_\\\\\\\\\\\\\\\"hi!\\\\\\\\\\\\\\\"\\\"");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "\"\\\"\\\\\\\"_Python\\\\\\\"\\\"\"" + "'", str11, "\"\\\"\\\\\\\"_Python\\\\\\\"\\\"\"");
    }

    @Test
    public void test1040() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1040");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        org.antlr.v4.codegen.CodeGenerator codeGenerator2 = null;
        java.lang.String str5 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator2, "_Python3Context", true);
        java.lang.String str7 = python3Target1.getListLabel("Python");
        boolean boolean8 = python3Target1.supportsOverloadedMethods();
        boolean boolean9 = python3Target1.templatesExist();
        java.lang.String str11 = python3Target1.getTargetStringLiteralFromString("\"Python3Contex\"");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "\"Python3Contex\"" + "'", str5, "\"Python3Contex\"");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Python" + "'", str7, "Python");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "\"\\\"Python3Contex\\\"\"" + "'", str11, "\"\\\"Python3Contex\\\"\"");
    }

    @Test
    public void test1041() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1041");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        boolean boolean3 = python3Target1.templatesExist();
        org.stringtemplate.v4.STGroup sTGroup4 = python3Target1.getTemplates();
        boolean boolean5 = python3Target1.supportsOverloadedMethods();
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = null;
        java.lang.String str9 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator6, "\\n", true);
        java.lang.String str11 = python3Target1.getTargetStringLiteralFromString("_tset_Python3");
        int int12 = python3Target1.getInlineTestSetWordSize();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(sTGroup4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\"\"" + "'", str9, "\"\"");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "\"_tset_Python3\"" + "'", str11, "\"_tset_Python3\"");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 64 + "'", int12 == 64);
    }

    @Test
    public void test1042() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1042");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.lang.String str3 = python3Target1.encodeIntAsCharEscape(1);
        java.lang.String str4 = python3Target1.getVersion();
        java.lang.String str6 = python3Target1.getImplicitRuleLabel("_tsethi!");
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = null;
        java.lang.String str10 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator7, "_Python3", false);
        org.stringtemplate.v4.STGroup sTGroup11 = python3Target1.getTemplates();
        boolean boolean12 = python3Target1.supportsOverloadedMethods();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str14 = python3Target1.getElementListName("_tsethi");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "\\1" + "'", str3, "\\1");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "4.5.2.1" + "'", str4, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "__tsethi!" + "'", str6, "__tsethi!");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Python" + "'", str10, "Python");
        org.junit.Assert.assertNotNull(sTGroup11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test1043() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1043");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python3Target1.getBadWords();
        java.lang.String str4 = python3Target1.getTargetStringLiteralFromString("\"_Python3\"");
        java.lang.String str5 = python3Target1.getLanguage();
        org.antlr.v4.tool.ast.GrammarAST grammarAST6 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean7 = python3Target1.grammarSymbolCausesIssueInGeneratedCode(grammarAST6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "\"\\\"_Python3\\\"\"" + "'", str4, "\"\\\"_Python3\\\"\"");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Python3" + "'", str5, "Python3");
    }

    @Test
    public void test1044() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1044");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        java.lang.String str4 = python3Target1.getAltLabelContextStructName("_Python3");
        java.lang.String str6 = python3Target1.getListLabel("\"\\\\1\"");
        org.antlr.v4.tool.ast.GrammarAST grammarAST7 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str8 = python3Target1.getLoopCounter(grammarAST7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "_Python3Context" + "'", str4, "_Python3Context");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\"\\\\1\"" + "'", str6, "\"\\\\1\"");
    }

    @Test
    public void test1045() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1045");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        java.lang.String str4 = python3Target1.getAltLabelContextStructName("_Python3");
        org.antlr.v4.codegen.CodeGenerator codeGenerator5 = null;
        java.lang.String str8 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator5, "__tsethi!", false);
        boolean boolean9 = python3Target1.wantsBaseListener();
        java.lang.String str11 = python3Target1.getImplicitSetLabel("");
        java.lang.String str13 = python3Target1.getListLabel("_\\\"hi!\\\"");
        boolean boolean14 = python3Target1.templatesExist();
        java.lang.String str17 = python3Target1.getTargetStringLiteralFromString("\"\\\\1\"", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator18 = null;
        java.lang.String str21 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator18, "\"\"ContextContext", false);
        int int22 = python3Target1.getInlineTestSetWordSize();
        org.antlr.v4.tool.ast.GrammarAST grammarAST23 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str24 = python3Target1.getLoopCounter(grammarAST23);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "_Python3Context" + "'", str4, "_Python3Context");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "_tsethi" + "'", str8, "_tsethi");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "_tset" + "'", str11, "_tset");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "_\\\"hi!\\\"" + "'", str13, "_\\\"hi!\\\"");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "\"\\\"\\\\\\\\1\\\"\"" + "'", str17, "\"\\\"\\\\\\\\1\\\"\"");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "\\\"ContextContex" + "'", str21, "\\\"ContextContex");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 64 + "'", int22 == 64);
    }

    @Test
    public void test1046() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1046");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        java.lang.String str4 = python3Target1.getListLabel("");
        java.lang.String str5 = python3Target1.getLanguage();
        java.lang.String str7 = python3Target1.getImplicitRuleLabel("\"\\\"Python3Contex\\\"\"");
        java.lang.Class<?> wildcardClass8 = python3Target1.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Python3" + "'", str5, "Python3");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "_\"\\\"Python3Contex\\\"\"" + "'", str7, "_\"\\\"Python3Contex\\\"\"");
        org.junit.Assert.assertNotNull(wildcardClass8);
    }

    @Test
    public void test1047() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1047");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        org.antlr.v4.codegen.CodeGenerator codeGenerator2 = null;
        java.lang.String str5 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator2, "_Python3Context", true);
        java.lang.String str7 = python3Target1.getListLabel("Python");
        boolean boolean8 = python3Target1.wantsBaseVisitor();
        java.lang.String str10 = python3Target1.encodeIntAsCharEscape((int) (byte) 10);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "\"Python3Contex\"" + "'", str5, "\"Python3Contex\"");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Python" + "'", str7, "Python");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\\n" + "'", str10, "\\n");
    }

    @Test
    public void test1048() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1048");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        boolean boolean3 = python3Target1.wantsBaseVisitor();
        java.lang.String str4 = python3Target1.getLanguage();
        java.lang.String str7 = python3Target1.getTargetStringLiteralFromString("Python3", false);
        java.lang.String str9 = python3Target1.getImplicitRuleLabel("Python3");
        java.lang.String str11 = python3Target1.getListLabel("");
        org.antlr.v4.codegen.CodeGenerator codeGenerator12 = python3Target1.getCodeGenerator();
        boolean boolean13 = python3Target1.wantsBaseListener();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Python3" + "'", str4, "Python3");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Python3" + "'", str7, "Python3");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "_Python3" + "'", str9, "_Python3");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(codeGenerator12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test1049() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1049");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        boolean boolean3 = python3Target1.templatesExist();
        org.stringtemplate.v4.STGroup sTGroup4 = python3Target1.getTemplates();
        boolean boolean5 = python3Target1.supportsOverloadedMethods();
        int int6 = python3Target1.getSerializedATNSegmentLimit();
        boolean boolean7 = python3Target1.wantsBaseListener();
        boolean boolean8 = python3Target1.wantsBaseVisitor();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(sTGroup4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 29 + "'", int6 == 29);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test1050() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1050");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python3Target1.getBadWords();
        java.lang.String str3 = python3Target1.getVersion();
        java.lang.String str5 = python3Target1.getAltLabelContextStructName("\"_tset\\\"_tsethi\\\"\"");
        java.lang.String str7 = python3Target1.getImplicitRuleLabel("\"\\\\\\\"\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\1Context\\\\\\\\\\\\\\\"\\\\\\\"\"");
        boolean boolean8 = python3Target1.wantsBaseVisitor();
        boolean boolean9 = python3Target1.wantsBaseVisitor();
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "4.5.2.1" + "'", str3, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "\"_tset\\\"_tsethi\\\"\"Context" + "'", str5, "\"_tset\\\"_tsethi\\\"\"Context");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "_\"\\\\\\\"\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\1Context\\\\\\\\\\\\\\\"\\\\\\\"\"" + "'", str7, "_\"\\\\\\\"\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\1Context\\\\\\\\\\\\\\\"\\\\\\\"\"");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test1051() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1051");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        boolean boolean3 = python3Target1.wantsBaseVisitor();
        java.lang.String str4 = python3Target1.getLanguage();
        java.lang.String str7 = python3Target1.getTargetStringLiteralFromString("Python3", false);
        java.lang.String str9 = python3Target1.getImplicitRuleLabel("Python3");
        boolean boolean10 = python3Target1.supportsOverloadedMethods();
        org.antlr.v4.codegen.CodeGenerator codeGenerator11 = python3Target1.getCodeGenerator();
        org.antlr.v4.codegen.CodeGenerator codeGenerator12 = python3Target1.getCodeGenerator();
        org.antlr.v4.codegen.CodeGenerator codeGenerator13 = python3Target1.getCodeGenerator();
        boolean boolean14 = python3Target1.templatesExist();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Python3" + "'", str4, "Python3");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Python3" + "'", str7, "Python3");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "_Python3" + "'", str9, "_Python3");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(codeGenerator11);
        org.junit.Assert.assertNull(codeGenerator12);
        org.junit.Assert.assertNull(codeGenerator13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
    }

    @Test
    public void test1052() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1052");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.lang.String str3 = python3Target1.encodeIntAsCharEscape(1);
        java.lang.String str4 = python3Target1.getVersion();
        java.lang.String str6 = python3Target1.getImplicitRuleLabel("_tsethi!");
        java.lang.String str8 = python3Target1.getImplicitRuleLabel("__tsethi!");
        org.antlr.v4.codegen.CodeGenerator codeGenerator9 = python3Target1.getCodeGenerator();
        org.antlr.v4.tool.Rule rule10 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str11 = python3Target1.getRuleFunctionContextStructName(rule10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "\\1" + "'", str3, "\\1");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "4.5.2.1" + "'", str4, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "__tsethi!" + "'", str6, "__tsethi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "___tsethi!" + "'", str8, "___tsethi!");
        org.junit.Assert.assertNull(codeGenerator9);
    }

    @Test
    public void test1053() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1053");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        java.lang.String str4 = python3Target1.getAltLabelContextStructName("_Python3");
        org.antlr.v4.codegen.CodeGenerator codeGenerator5 = null;
        java.lang.String str8 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator5, "__tsethi!", false);
        boolean boolean9 = python3Target1.wantsBaseListener();
        boolean boolean10 = python3Target1.wantsBaseVisitor();
        int int11 = python3Target1.getSerializedATNSegmentLimit();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "_Python3Context" + "'", str4, "_Python3Context");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "_tsethi" + "'", str8, "_tsethi");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 29 + "'", int11 == 29);
    }

    @Test
    public void test1054() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1054");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        java.util.Set<java.lang.String> strSet3 = python3Target1.getBadWords();
        java.util.Set<java.lang.String> strSet4 = python3Target1.getBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator5 = null;
        java.lang.String str8 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator5, "\"\\\"Python3Contex\\\"\"", true);
        org.antlr.v4.tool.Rule rule9 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str10 = python3Target1.getRuleFunctionContextStructName(rule9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\"\\\"Python3Contex\\\"\"" + "'", str8, "\"\\\"Python3Contex\\\"\"");
    }

    @Test
    public void test1055() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1055");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        boolean boolean3 = python3Target1.wantsBaseVisitor();
        java.lang.String str4 = python3Target1.getLanguage();
        java.lang.String str7 = python3Target1.getTargetStringLiteralFromString("Python3", false);
        java.lang.String str10 = python3Target1.getTargetStringLiteralFromString("Python3", true);
        java.lang.String str12 = python3Target1.getImplicitSetLabel("hi!");
        int int13 = python3Target1.getSerializedATNSegmentLimit();
        int int14 = python3Target1.getSerializedATNSegmentLimit();
        java.lang.String str16 = python3Target1.getImplicitRuleLabel("_tset\\64");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Python3" + "'", str4, "Python3");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Python3" + "'", str7, "Python3");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\"Python3\"" + "'", str10, "\"Python3\"");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "_tsethi!" + "'", str12, "_tsethi!");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 29 + "'", int13 == 29);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 29 + "'", int14 == 29);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "__tset\\64" + "'", str16, "__tset\\64");
    }

    @Test
    public void test1056() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1056");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = python3Target1.getCodeGenerator();
        java.lang.String str5 = python3Target1.encodeIntAsCharEscape((int) (short) 10);
        java.util.Set<java.lang.String> strSet6 = python3Target1.getBadWords();
        org.antlr.v4.tool.ast.GrammarAST grammarAST7 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str8 = python3Target1.getLoopCounter(grammarAST7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(codeGenerator3);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "\\n" + "'", str5, "\\n");
        org.junit.Assert.assertNotNull(strSet6);
    }

    @Test
    public void test1057() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1057");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.lang.String str3 = python3Target1.encodeIntAsCharEscape(1);
        org.antlr.v4.codegen.CodeGenerator codeGenerator4 = null;
        java.lang.String str7 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator4, "_Python3Context", true);
        java.lang.String str9 = python3Target1.getListLabel("hi!");
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = python3Target1.getCodeGenerator();
        java.lang.String str12 = python3Target1.getAltLabelContextStructName("_tset_Python3");
        java.lang.String str14 = python3Target1.getImplicitRuleLabel("_tset_Python3Context");
        boolean boolean15 = python3Target1.templatesExist();
        int int16 = python3Target1.getSerializedATNSegmentLimit();
        boolean boolean17 = python3Target1.wantsBaseListener();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "\\1" + "'", str3, "\\1");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "\"Python3Contex\"" + "'", str7, "\"Python3Contex\"");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertNull(codeGenerator10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "_tset_Python3Context" + "'", str12, "_tset_Python3Context");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "__tset_Python3Context" + "'", str14, "__tset_Python3Context");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 29 + "'", int16 == 29);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    }

    @Test
    public void test1058() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1058");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        boolean boolean3 = python3Target1.wantsBaseVisitor();
        java.lang.String str4 = python3Target1.getLanguage();
        java.lang.String str6 = python3Target1.getTargetStringLiteralFromString("\"Python3Contex\"");
        boolean boolean7 = python3Target1.wantsBaseListener();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Python3" + "'", str4, "Python3");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\"\\\"Python3Contex\\\"\"" + "'", str6, "\"\\\"Python3Contex\\\"\"");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    public void test1059() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1059");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        java.lang.String str4 = python3Target1.getListLabel("");
        java.lang.String str5 = python3Target1.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = python3Target1.getCodeGenerator();
        java.lang.String str7 = python3Target1.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = python3Target1.getCodeGenerator();
        java.lang.String str10 = python3Target1.getImplicitRuleLabel("\\1");
        boolean boolean11 = python3Target1.templatesExist();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str13 = python3Target1.getElementListName("\"__tsethi\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Python3" + "'", str5, "Python3");
        org.junit.Assert.assertNull(codeGenerator6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Python3" + "'", str7, "Python3");
        org.junit.Assert.assertNull(codeGenerator8);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "_\\1" + "'", str10, "_\\1");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
    }

    @Test
    public void test1060() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1060");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.lang.String str3 = python3Target1.encodeIntAsCharEscape(1);
        java.lang.String str4 = python3Target1.getVersion();
        java.lang.String str6 = python3Target1.getImplicitRuleLabel("_tsethi!");
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = null;
        java.lang.String str10 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator7, "_Python3", false);
        org.antlr.v4.codegen.CodeGenerator codeGenerator11 = python3Target1.getCodeGenerator();
        boolean boolean12 = python3Target1.supportsOverloadedMethods();
        org.antlr.v4.codegen.CodeGenerator codeGenerator13 = null;
        java.lang.String str16 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator13, "", false);
        int int17 = python3Target1.getInlineTestSetWordSize();
        org.antlr.v4.codegen.CodeGenerator codeGenerator18 = null;
        java.lang.String str21 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator18, "__Python3", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator22 = python3Target1.getCodeGenerator();
        java.lang.String str23 = python3Target1.getLanguage();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "\\1" + "'", str3, "\\1");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "4.5.2.1" + "'", str4, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "__tsethi!" + "'", str6, "__tsethi!");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Python" + "'", str10, "Python");
        org.junit.Assert.assertNull(codeGenerator11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 64 + "'", int17 == 64);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "\"_Python\"" + "'", str21, "\"_Python\"");
        org.junit.Assert.assertNull(codeGenerator22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "Python3" + "'", str23, "Python3");
    }

    @Test
    public void test1061() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1061");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        boolean boolean3 = python3Target1.wantsBaseVisitor();
        java.lang.String str4 = python3Target1.getLanguage();
        java.lang.String str7 = python3Target1.getTargetStringLiteralFromString("Python3", false);
        boolean boolean8 = python3Target1.templatesExist();
        java.lang.String str9 = python3Target1.getLanguage();
        java.lang.String str11 = python3Target1.getImplicitRuleLabel("_\"_Python3\"");
        org.antlr.v4.tool.Grammar grammar12 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str14 = python3Target1.getTokenTypeAsTargetLabel(grammar12, 64);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Python3" + "'", str4, "Python3");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Python3" + "'", str7, "Python3");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Python3" + "'", str9, "Python3");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "__\"_Python3\"" + "'", str11, "__\"_Python3\"");
    }

    @Test
    public void test1062() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1062");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        java.lang.String str4 = python3Target1.getListLabel("");
        boolean boolean5 = python3Target1.wantsBaseListener();
        java.lang.String str6 = python3Target1.getLanguage();
        boolean boolean7 = python3Target1.supportsOverloadedMethods();
        org.antlr.v4.tool.ast.GrammarAST grammarAST8 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str9 = python3Target1.getLoopLabel(grammarAST8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Python3" + "'", str6, "Python3");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    public void test1063() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1063");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        boolean boolean3 = python3Target1.wantsBaseVisitor();
        java.lang.String str4 = python3Target1.getLanguage();
        java.lang.String str7 = python3Target1.getTargetStringLiteralFromString("Python3", false);
        boolean boolean8 = python3Target1.templatesExist();
        org.stringtemplate.v4.STGroup sTGroup9 = python3Target1.getTemplates();
        boolean boolean10 = python3Target1.supportsOverloadedMethods();
        java.lang.String str11 = python3Target1.getVersion();
        java.lang.String str13 = python3Target1.getImplicitRuleLabel("\"4.5.2.1\"");
        boolean boolean14 = python3Target1.templatesExist();
        java.lang.String str15 = python3Target1.getVersion();
        boolean boolean16 = python3Target1.templatesExist();
        org.stringtemplate.v4.STGroup sTGroup17 = python3Target1.getTemplates();
        int int18 = python3Target1.getSerializedATNSegmentLimit();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Python3" + "'", str4, "Python3");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Python3" + "'", str7, "Python3");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(sTGroup9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "4.5.2.1" + "'", str11, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "_\"4.5.2.1\"" + "'", str13, "_\"4.5.2.1\"");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "4.5.2.1" + "'", str15, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(sTGroup17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 29 + "'", int18 == 29);
    }

    @Test
    public void test1064() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1064");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        boolean boolean3 = python3Target1.templatesExist();
        org.stringtemplate.v4.STGroup sTGroup4 = python3Target1.getTemplates();
        org.stringtemplate.v4.STGroup sTGroup5 = python3Target1.getTemplates();
        java.lang.String str7 = python3Target1.encodeIntAsCharEscape(64);
        java.lang.String str9 = python3Target1.getAltLabelContextStructName("tse");
        org.antlr.v4.tool.ast.GrammarAST grammarAST10 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str11 = python3Target1.getLoopLabel(grammarAST10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(sTGroup4);
        org.junit.Assert.assertNotNull(sTGroup5);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "@" + "'", str7, "@");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "TseContext" + "'", str9, "TseContext");
    }

    @Test
    public void test1065() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1065");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        boolean boolean3 = python3Target1.wantsBaseVisitor();
        java.lang.String str4 = python3Target1.getLanguage();
        java.lang.String str7 = python3Target1.getTargetStringLiteralFromString("Python3", false);
        boolean boolean8 = python3Target1.templatesExist();
        org.stringtemplate.v4.STGroup sTGroup9 = python3Target1.getTemplates();
        int int10 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str12 = python3Target1.getListLabel("\"_\\\"_Python3\\\"\"");
        int int13 = python3Target1.getInlineTestSetWordSize();
        int int14 = python3Target1.getInlineTestSetWordSize();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Python3" + "'", str4, "Python3");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Python3" + "'", str7, "Python3");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(sTGroup9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 64 + "'", int10 == 64);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "\"_\\\"_Python3\\\"\"" + "'", str12, "\"_\\\"_Python3\\\"\"");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 64 + "'", int13 == 64);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 64 + "'", int14 == 64);
    }

    @Test
    public void test1066() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1066");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        boolean boolean3 = python3Target1.wantsBaseVisitor();
        java.lang.String str4 = python3Target1.getLanguage();
        java.lang.String str7 = python3Target1.getTargetStringLiteralFromString("Python3", false);
        java.lang.String str10 = python3Target1.getTargetStringLiteralFromString("Python3", true);
        java.lang.String str12 = python3Target1.getImplicitSetLabel("hi!");
        java.lang.String str14 = python3Target1.getTargetStringLiteralFromString("\"Python3Contex\"");
        java.lang.String str17 = python3Target1.getTargetStringLiteralFromString("4.5.2.1", true);
        java.lang.String str18 = python3Target1.getLanguage();
        java.lang.String str20 = python3Target1.getImplicitRuleLabel("_Python3");
        java.lang.String str22 = python3Target1.encodeIntAsCharEscape((int) '#');
        int int23 = python3Target1.getSerializedATNSegmentLimit();
        boolean boolean24 = python3Target1.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup25 = python3Target1.getTemplates();
        boolean boolean26 = python3Target1.wantsBaseVisitor();
        java.lang.String str28 = python3Target1.getImplicitSetLabel("");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str30 = python3Target1.getElementListName("_\"_\\\\\\\"\\\\\\\"Python3Contex\\\\\\\"\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Python3" + "'", str4, "Python3");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Python3" + "'", str7, "Python3");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\"Python3\"" + "'", str10, "\"Python3\"");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "_tsethi!" + "'", str12, "_tsethi!");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "\"\\\"Python3Contex\\\"\"" + "'", str14, "\"\\\"Python3Contex\\\"\"");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "\"4.5.2.1\"" + "'", str17, "\"4.5.2.1\"");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Python3" + "'", str18, "Python3");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "__Python3" + "'", str20, "__Python3");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "#" + "'", str22, "#");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 29 + "'", int23 == 29);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(sTGroup25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "_tset" + "'", str28, "_tset");
    }

    @Test
    public void test1067() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1067");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        java.lang.String str4 = python3Target1.getListLabel("");
        java.lang.String str5 = python3Target1.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = python3Target1.getCodeGenerator();
        int int7 = python3Target1.getInlineTestSetWordSize();
        boolean boolean8 = python3Target1.wantsBaseVisitor();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Python3" + "'", str5, "Python3");
        org.junit.Assert.assertNull(codeGenerator6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 64 + "'", int7 == 64);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test1068() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1068");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        boolean boolean3 = python3Target1.templatesExist();
        org.antlr.v4.codegen.CodeGenerator codeGenerator4 = null;
        java.lang.String str7 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator4, "__tset_Python3ContextContext", false);
        boolean boolean8 = python3Target1.supportsOverloadedMethods();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "_tset_Python3ContextContex" + "'", str7, "_tset_Python3ContextContex");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test1069() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1069");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        java.lang.String str4 = python3Target1.getListLabel("");
        boolean boolean5 = python3Target1.wantsBaseListener();
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = python3Target1.getCodeGenerator();
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = python3Target1.getCodeGenerator();
        boolean boolean8 = python3Target1.templatesExist();
        java.lang.String str10 = python3Target1.getImplicitRuleLabel("_tset\"_tset\\\\\\\"ython\\\\\\\"\"");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(codeGenerator6);
        org.junit.Assert.assertNull(codeGenerator7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "__tset\"_tset\\\\\\\"ython\\\\\\\"\"" + "'", str10, "__tset\"_tset\\\\\\\"ython\\\\\\\"\"");
    }

    @Test
    public void test1070() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1070");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        boolean boolean3 = python3Target1.templatesExist();
        org.stringtemplate.v4.STGroup sTGroup4 = python3Target1.getTemplates();
        int int5 = python3Target1.getInlineTestSetWordSize();
        boolean boolean6 = python3Target1.wantsBaseVisitor();
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = null;
        java.lang.String str10 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator7, "_\"\\\"\\\\\\\\1\\\"\"", true);
        boolean boolean11 = python3Target1.wantsBaseListener();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(sTGroup4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 64 + "'", int5 == 64);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\"\\\"\\\"\\\\\\\\1\\\"\"" + "'", str10, "\"\\\"\\\"\\\\\\\\1\\\"\"");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test1071() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1071");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.lang.String str3 = python3Target1.encodeIntAsCharEscape(1);
        java.lang.String str4 = python3Target1.getVersion();
        java.lang.String str6 = python3Target1.getImplicitRuleLabel("_tsethi!");
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = null;
        java.lang.String str10 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator7, "_Python3", false);
        org.antlr.v4.codegen.CodeGenerator codeGenerator11 = python3Target1.getCodeGenerator();
        boolean boolean12 = python3Target1.supportsOverloadedMethods();
        boolean boolean13 = python3Target1.templatesExist();
        java.lang.String str14 = python3Target1.getLanguage();
        boolean boolean15 = python3Target1.wantsBaseListener();
        java.lang.String str17 = python3Target1.getAltLabelContextStructName("\"\"Context");
        boolean boolean18 = python3Target1.wantsBaseListener();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "\\1" + "'", str3, "\\1");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "4.5.2.1" + "'", str4, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "__tsethi!" + "'", str6, "__tsethi!");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Python" + "'", str10, "Python");
        org.junit.Assert.assertNull(codeGenerator11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Python3" + "'", str14, "Python3");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "\"\"ContextContext" + "'", str17, "\"\"ContextContext");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    }

    @Test
    public void test1072() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1072");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        java.lang.String str4 = python3Target1.getListLabel("");
        boolean boolean5 = python3Target1.wantsBaseListener();
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = python3Target1.getCodeGenerator();
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = python3Target1.getCodeGenerator();
        boolean boolean8 = python3Target1.templatesExist();
        java.lang.String str10 = python3Target1.getImplicitRuleLabel("\"hi!\"");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str12 = python3Target1.getElementListName("_tset__tset_Python3Context");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(codeGenerator6);
        org.junit.Assert.assertNull(codeGenerator7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "_\"hi!\"" + "'", str10, "_\"hi!\"");
    }

    @Test
    public void test1073() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1073");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        java.util.Set<java.lang.String> strSet3 = python3Target1.getBadWords();
        java.util.Set<java.lang.String> strSet4 = python3Target1.getBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator5 = null;
        java.lang.String str8 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator5, "\"\\\"Python3Contex\\\"\"", true);
        int int9 = python3Target1.getSerializedATNSegmentLimit();
        java.lang.String str12 = python3Target1.getTargetStringLiteralFromString("___tsethi!", true);
        java.lang.String str13 = python3Target1.getLanguage();
        java.lang.String str15 = python3Target1.getTargetStringLiteralFromString("\\\"hi!");
        boolean boolean16 = python3Target1.supportsOverloadedMethods();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\"\\\"Python3Contex\\\"\"" + "'", str8, "\"\\\"Python3Contex\\\"\"");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 29 + "'", int9 == 29);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "\"___tsethi!\"" + "'", str12, "\"___tsethi!\"");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Python3" + "'", str13, "Python3");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "\"\\\\\\\"hi!\"" + "'", str15, "\"\\\\\\\"hi!\"");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    }

    @Test
    public void test1074() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1074");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        boolean boolean3 = python3Target1.wantsBaseVisitor();
        java.lang.String str4 = python3Target1.getLanguage();
        java.lang.String str7 = python3Target1.getTargetStringLiteralFromString("Python3", false);
        java.lang.String str9 = python3Target1.getImplicitRuleLabel("Python3");
        boolean boolean10 = python3Target1.wantsBaseListener();
        java.lang.String str12 = python3Target1.getImplicitSetLabel("_\"\\\\1\"");
        org.antlr.v4.codegen.model.RuleFunction ruleFunction13 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str14 = python3Target1.getRuleFunctionContextStructName(ruleFunction13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Python3" + "'", str4, "Python3");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Python3" + "'", str7, "Python3");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "_Python3" + "'", str9, "_Python3");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "_tset_\"\\\\1\"" + "'", str12, "_tset_\"\\\\1\"");
    }

    @Test
    public void test1075() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1075");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        org.antlr.v4.codegen.CodeGenerator codeGenerator2 = python3Target1.getCodeGenerator();
        java.lang.String str3 = python3Target1.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup4 = python3Target1.getTemplates();
        java.lang.String str6 = python3Target1.getImplicitRuleLabel("_\"hi!\"");
        java.util.Set<java.lang.String> strSet7 = python3Target1.getBadWords();
        java.lang.String str8 = python3Target1.getVersion();
        org.junit.Assert.assertNull(codeGenerator2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Python3" + "'", str3, "Python3");
        org.junit.Assert.assertNotNull(sTGroup4);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "__\"hi!\"" + "'", str6, "__\"hi!\"");
        org.junit.Assert.assertNotNull(strSet7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "4.5.2.1" + "'", str8, "4.5.2.1");
    }

    @Test
    public void test1076() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1076");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        boolean boolean3 = python3Target1.wantsBaseVisitor();
        java.lang.String str4 = python3Target1.getLanguage();
        java.lang.String str7 = python3Target1.getTargetStringLiteralFromString("Python3", false);
        boolean boolean8 = python3Target1.templatesExist();
        java.lang.String str9 = python3Target1.getLanguage();
        boolean boolean10 = python3Target1.supportsOverloadedMethods();
        boolean boolean11 = python3Target1.wantsBaseVisitor();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Python3" + "'", str4, "Python3");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Python3" + "'", str7, "Python3");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Python3" + "'", str9, "Python3");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test1077() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1077");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        boolean boolean3 = python3Target1.wantsBaseVisitor();
        java.lang.String str4 = python3Target1.getLanguage();
        java.lang.String str7 = python3Target1.getTargetStringLiteralFromString("Python3", false);
        java.lang.String str10 = python3Target1.getTargetStringLiteralFromString("Python3", true);
        java.lang.String str12 = python3Target1.getImplicitSetLabel("hi!");
        java.lang.String str14 = python3Target1.getTargetStringLiteralFromString("\"Python3Contex\"");
        java.lang.String str15 = python3Target1.getLanguage();
        int int16 = python3Target1.getSerializedATNSegmentLimit();
        int int17 = python3Target1.getSerializedATNSegmentLimit();
        java.lang.String str18 = python3Target1.getVersion();
        boolean boolean19 = python3Target1.wantsBaseVisitor();
        boolean boolean20 = python3Target1.wantsBaseVisitor();
        boolean boolean21 = python3Target1.supportsOverloadedMethods();
        java.lang.String str23 = python3Target1.getAltLabelContextStructName("_tsethi");
        java.lang.String str25 = python3Target1.getImplicitRuleLabel("\"_tset\\\"ython\\\"\"");
        java.lang.String str27 = python3Target1.getImplicitRuleLabel("\"tseth\"");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str29 = python3Target1.getElementName("\"_\\\"\\\\\\\"Python3Contex\\\\\\\"\\\"\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Python3" + "'", str4, "Python3");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Python3" + "'", str7, "Python3");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\"Python3\"" + "'", str10, "\"Python3\"");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "_tsethi!" + "'", str12, "_tsethi!");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "\"\\\"Python3Contex\\\"\"" + "'", str14, "\"\\\"Python3Contex\\\"\"");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Python3" + "'", str15, "Python3");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 29 + "'", int16 == 29);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 29 + "'", int17 == 29);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "4.5.2.1" + "'", str18, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "_tsethiContext" + "'", str23, "_tsethiContext");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "_\"_tset\\\"ython\\\"\"" + "'", str25, "_\"_tset\\\"ython\\\"\"");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "_\"tseth\"" + "'", str27, "_\"tseth\"");
    }

    @Test
    public void test1078() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1078");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = python3Target1.getCodeGenerator();
        java.lang.String str6 = python3Target1.getTargetStringLiteralFromString("\\n", false);
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = null;
        java.lang.String str10 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator7, "\\\"\\\"Python3Contex\\\"", false);
        java.lang.String str11 = python3Target1.getVersion();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(codeGenerator3);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\\\\n" + "'", str6, "\\\\n");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\\\"\\\"Python3Contex\\\"" + "'", str10, "\\\"\\\"Python3Contex\\\"");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "4.5.2.1" + "'", str11, "4.5.2.1");
    }

    @Test
    public void test1079() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1079");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        java.lang.String str4 = python3Target1.getAltLabelContextStructName("_Python3");
        org.antlr.v4.codegen.CodeGenerator codeGenerator5 = null;
        java.lang.String str8 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator5, "__tsethi!", false);
        java.lang.String str10 = python3Target1.encodeIntAsCharEscape((int) (short) 100);
        boolean boolean11 = python3Target1.supportsOverloadedMethods();
        int int12 = python3Target1.getInlineTestSetWordSize();
        int int13 = python3Target1.getSerializedATNSegmentLimit();
        java.lang.String str16 = python3Target1.getTargetStringLiteralFromString("\"___tsethi!\"", false);
        org.stringtemplate.v4.STGroup sTGroup17 = python3Target1.getTemplates();
        org.antlr.v4.tool.ast.GrammarAST grammarAST18 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean19 = python3Target1.grammarSymbolCausesIssueInGeneratedCode(grammarAST18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "_Python3Context" + "'", str4, "_Python3Context");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "_tsethi" + "'", str8, "_tsethi");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "d" + "'", str10, "d");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 64 + "'", int12 == 64);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 29 + "'", int13 == 29);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "\\\"___tsethi!\\\"" + "'", str16, "\\\"___tsethi!\\\"");
        org.junit.Assert.assertNotNull(sTGroup17);
    }

    @Test
    public void test1080() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1080");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        boolean boolean3 = python3Target1.wantsBaseVisitor();
        java.lang.String str4 = python3Target1.getLanguage();
        java.lang.String str7 = python3Target1.getTargetStringLiteralFromString("Python3", false);
        java.lang.String str10 = python3Target1.getTargetStringLiteralFromString("Python3", true);
        java.lang.String str12 = python3Target1.getImplicitSetLabel("hi!");
        int int13 = python3Target1.getSerializedATNSegmentLimit();
        org.antlr.v4.tool.ast.GrammarAST grammarAST14 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str15 = python3Target1.getLoopLabel(grammarAST14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Python3" + "'", str4, "Python3");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Python3" + "'", str7, "Python3");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\"Python3\"" + "'", str10, "\"Python3\"");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "_tsethi!" + "'", str12, "_tsethi!");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 29 + "'", int13 == 29);
    }

    @Test
    public void test1081() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1081");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        boolean boolean3 = python3Target1.wantsBaseVisitor();
        java.lang.String str4 = python3Target1.getLanguage();
        java.lang.String str7 = python3Target1.getTargetStringLiteralFromString("Python3", false);
        boolean boolean8 = python3Target1.templatesExist();
        org.stringtemplate.v4.STGroup sTGroup9 = python3Target1.getTemplates();
        int int10 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str12 = python3Target1.getListLabel("\"_\\\"_Python3\\\"\"");
        int int13 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str14 = python3Target1.getLanguage();
        java.lang.String str16 = python3Target1.getTargetStringLiteralFromString("\"__\\\"___tsethi!\\\"\"");
        java.lang.String str18 = python3Target1.getAltLabelContextStructName("_tset_tset_tset");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Python3" + "'", str4, "Python3");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Python3" + "'", str7, "Python3");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(sTGroup9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 64 + "'", int10 == 64);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "\"_\\\"_Python3\\\"\"" + "'", str12, "\"_\\\"_Python3\\\"\"");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 64 + "'", int13 == 64);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Python3" + "'", str14, "Python3");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "\"\\\"__\\\\\\\"___tsethi!\\\\\\\"\\\"\"" + "'", str16, "\"\\\"__\\\\\\\"___tsethi!\\\\\\\"\\\"\"");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "_tset_tset_tsetContext" + "'", str18, "_tset_tset_tsetContext");
    }

    @Test
    public void test1082() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1082");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        java.lang.String str4 = python3Target1.getAltLabelContextStructName("_Python3");
        org.antlr.v4.codegen.CodeGenerator codeGenerator5 = null;
        java.lang.String str8 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator5, "__tsethi!", false);
        boolean boolean9 = python3Target1.wantsBaseListener();
        java.lang.String str11 = python3Target1.getImplicitSetLabel("");
        java.lang.String str13 = python3Target1.getListLabel("_\\\"hi!\\\"");
        boolean boolean14 = python3Target1.templatesExist();
        java.lang.String str17 = python3Target1.getTargetStringLiteralFromString("\"\\\\1\"", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator18 = null;
        java.lang.String str21 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator18, "\"\"ContextContext", false);
        int int22 = python3Target1.getInlineTestSetWordSize();
        org.antlr.v4.tool.ast.GrammarAST grammarAST23 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str24 = python3Target1.getLoopLabel(grammarAST23);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "_Python3Context" + "'", str4, "_Python3Context");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "_tsethi" + "'", str8, "_tsethi");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "_tset" + "'", str11, "_tset");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "_\\\"hi!\\\"" + "'", str13, "_\\\"hi!\\\"");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "\"\\\"\\\\\\\\1\\\"\"" + "'", str17, "\"\\\"\\\\\\\\1\\\"\"");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "\\\"ContextContex" + "'", str21, "\\\"ContextContex");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 64 + "'", int22 == 64);
    }

    @Test
    public void test1083() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1083");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.lang.String str3 = python3Target1.encodeIntAsCharEscape(1);
        java.lang.String str4 = python3Target1.getVersion();
        java.lang.String str6 = python3Target1.getImplicitRuleLabel("_tsethi!");
        boolean boolean7 = python3Target1.wantsBaseVisitor();
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = null;
        java.lang.String str11 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator8, "4.5.2.1", false);
        org.stringtemplate.v4.STGroup sTGroup12 = python3Target1.getTemplates();
        java.lang.String str14 = python3Target1.encodeIntAsCharEscape(10);
        java.util.Set<java.lang.String> strSet15 = python3Target1.getBadWords();
        int int16 = python3Target1.getSerializedATNSegmentLimit();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "\\1" + "'", str3, "\\1");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "4.5.2.1" + "'", str4, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "__tsethi!" + "'", str6, "__tsethi!");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + ".5.2." + "'", str11, ".5.2.");
        org.junit.Assert.assertNotNull(sTGroup12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "\\n" + "'", str14, "\\n");
        org.junit.Assert.assertNotNull(strSet15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 29 + "'", int16 == 29);
    }

    @Test
    public void test1084() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1084");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        org.antlr.v4.codegen.CodeGenerator codeGenerator2 = null;
        java.lang.String str5 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator2, "_Python3Context", true);
        java.lang.String str7 = python3Target1.getListLabel("Python");
        boolean boolean8 = python3Target1.wantsBaseListener();
        java.lang.String str10 = python3Target1.encodeIntAsCharEscape(10);
        boolean boolean11 = python3Target1.supportsOverloadedMethods();
        boolean boolean12 = python3Target1.supportsOverloadedMethods();
        boolean boolean13 = python3Target1.templatesExist();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str15 = python3Target1.getImplicitTokenLabel("\"__hi!\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "\"Python3Contex\"" + "'", str5, "\"Python3Contex\"");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Python" + "'", str7, "Python");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\\n" + "'", str10, "\\n");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
    }

    @Test
    public void test1085() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1085");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        boolean boolean3 = python3Target1.wantsBaseVisitor();
        java.lang.String str4 = python3Target1.getLanguage();
        java.lang.String str7 = python3Target1.getTargetStringLiteralFromString("Python3", false);
        boolean boolean8 = python3Target1.templatesExist();
        org.stringtemplate.v4.STGroup sTGroup9 = python3Target1.getTemplates();
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = null;
        java.lang.String str13 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator10, "", true);
        java.lang.String str14 = python3Target1.getLanguage();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Python3" + "'", str4, "Python3");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Python3" + "'", str7, "Python3");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(sTGroup9);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "\"\"" + "'", str13, "\"\"");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Python3" + "'", str14, "Python3");
    }

    @Test
    public void test1086() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1086");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        java.util.Set<java.lang.String> strSet3 = python3Target1.getBadWords();
        org.stringtemplate.v4.STGroup sTGroup4 = python3Target1.getTemplates();
        java.lang.String str6 = python3Target1.getListLabel("_Python3Context");
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = python3Target1.getCodeGenerator();
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = python3Target1.getCodeGenerator();
        org.stringtemplate.v4.STGroup sTGroup9 = python3Target1.getTemplates();
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = null;
        java.lang.String str13 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator10, "_\"___tsethi!\"", false);
        java.lang.String str14 = python3Target1.getVersion();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNotNull(sTGroup4);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "_Python3Context" + "'", str6, "_Python3Context");
        org.junit.Assert.assertNull(codeGenerator7);
        org.junit.Assert.assertNull(codeGenerator8);
        org.junit.Assert.assertNotNull(sTGroup9);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "\\\"___tsethi!" + "'", str13, "\\\"___tsethi!");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "4.5.2.1" + "'", str14, "4.5.2.1");
    }

    @Test
    public void test1087() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1087");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        boolean boolean3 = python3Target1.wantsBaseVisitor();
        java.lang.String str4 = python3Target1.getLanguage();
        java.lang.String str7 = python3Target1.getTargetStringLiteralFromString("Python3", false);
        java.lang.String str9 = python3Target1.encodeIntAsCharEscape((int) (byte) 10);
        java.lang.String str11 = python3Target1.getTargetStringLiteralFromString("_Python3");
        java.lang.String str13 = python3Target1.getAltLabelContextStructName("Python3");
        org.antlr.v4.codegen.CodeGenerator codeGenerator14 = python3Target1.getCodeGenerator();
        java.util.Set<java.lang.String> strSet15 = python3Target1.getBadWords();
        java.lang.String str17 = python3Target1.getTargetStringLiteralFromString("\"_tset_tset\"");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Python3" + "'", str4, "Python3");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Python3" + "'", str7, "Python3");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\\n" + "'", str9, "\\n");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "\"_Python3\"" + "'", str11, "\"_Python3\"");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Python3Context" + "'", str13, "Python3Context");
        org.junit.Assert.assertNull(codeGenerator14);
        org.junit.Assert.assertNotNull(strSet15);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "\"\\\"_tset_tset\\\"\"" + "'", str17, "\"\\\"_tset_tset\\\"\"");
    }

    @Test
    public void test1088() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1088");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        java.lang.String str4 = python3Target1.getListLabel("");
        org.antlr.v4.codegen.CodeGenerator codeGenerator5 = python3Target1.getCodeGenerator();
        java.lang.String str6 = python3Target1.getLanguage();
        org.antlr.v4.codegen.model.RuleFunction ruleFunction7 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str8 = python3Target1.getRuleFunctionContextStructName(ruleFunction7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(codeGenerator5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Python3" + "'", str6, "Python3");
    }

    @Test
    public void test1089() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1089");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        java.lang.String str4 = python3Target1.getListLabel("");
        boolean boolean5 = python3Target1.supportsOverloadedMethods();
        java.lang.String str7 = python3Target1.encodeIntAsCharEscape((int) ' ');
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = null;
        java.lang.String str11 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator8, "\"\\\"\\\"Python3Contex\\\"\"", false);
        int int12 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str13 = python3Target1.getVersion();
        java.lang.String str15 = python3Target1.encodeIntAsCharEscape(1);
        org.antlr.v4.tool.Grammar grammar16 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator17 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target18 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator17);
        boolean boolean19 = python3Target18.wantsBaseListener();
        org.antlr.v4.codegen.CodeGenerator codeGenerator20 = python3Target18.getCodeGenerator();
        java.lang.String str22 = python3Target18.encodeIntAsCharEscape((int) (short) 10);
        java.util.Set<java.lang.String> strSet23 = python3Target18.getBadWords();
        java.lang.String str24 = python3Target18.getLanguage();
        java.lang.String str26 = python3Target18.getListLabel("\\\\n");
        java.lang.String str28 = python3Target18.encodeIntAsCharEscape(100);
        boolean boolean29 = python3Target18.templatesExist();
        org.antlr.v4.codegen.CodeGenerator codeGenerator30 = python3Target18.getCodeGenerator();
        org.stringtemplate.v4.STGroup sTGroup31 = python3Target18.getTemplates();
        org.antlr.v4.tool.Grammar grammar32 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator33 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target34 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator33);
        boolean boolean35 = python3Target34.wantsBaseListener();
        org.antlr.v4.codegen.CodeGenerator codeGenerator36 = python3Target34.getCodeGenerator();
        java.lang.String str39 = python3Target34.getTargetStringLiteralFromString("\\n", false);
        org.antlr.v4.tool.Grammar grammar40 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator41 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target42 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator41);
        boolean boolean43 = python3Target42.wantsBaseListener();
        java.util.Set<java.lang.String> strSet44 = python3Target42.getBadWords();
        org.stringtemplate.v4.STGroup sTGroup45 = python3Target42.getTemplates();
        java.lang.String str47 = python3Target42.getImplicitRuleLabel("\"\\\\1\"");
        org.antlr.v4.tool.Grammar grammar48 = null;
        int[] intArray49 = new int[] {};
        java.lang.String[] strArray50 = python3Target42.getTokenTypesAsTargetLabels(grammar48, intArray49);
        java.lang.String[] strArray51 = python3Target34.getTokenTypesAsTargetLabels(grammar40, intArray49);
        java.lang.String[] strArray52 = python3Target18.getTokenTypesAsTargetLabels(grammar32, intArray49);
        java.lang.String[] strArray53 = python3Target1.getTokenTypesAsTargetLabels(grammar16, intArray49);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + " " + "'", str7, " ");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "\\\"\\\"Python3Contex\\\"" + "'", str11, "\\\"\\\"Python3Contex\\\"");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 64 + "'", int12 == 64);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "4.5.2.1" + "'", str13, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "\\1" + "'", str15, "\\1");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(codeGenerator20);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "\\n" + "'", str22, "\\n");
        org.junit.Assert.assertNotNull(strSet23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "Python3" + "'", str24, "Python3");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "\\\\n" + "'", str26, "\\\\n");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "d" + "'", str28, "d");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNull(codeGenerator30);
        org.junit.Assert.assertNotNull(sTGroup31);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNull(codeGenerator36);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "\\\\n" + "'", str39, "\\\\n");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(strSet44);
        org.junit.Assert.assertNotNull(sTGroup45);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "_\"\\\\1\"" + "'", str47, "_\"\\\\1\"");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[]");
        org.junit.Assert.assertNotNull(strArray50);
        org.junit.Assert.assertNotNull(strArray51);
        org.junit.Assert.assertNotNull(strArray52);
        org.junit.Assert.assertNotNull(strArray53);
    }

    @Test
    public void test1090() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1090");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        boolean boolean3 = python3Target1.templatesExist();
        org.stringtemplate.v4.STGroup sTGroup4 = python3Target1.getTemplates();
        int int5 = python3Target1.getInlineTestSetWordSize();
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = python3Target1.getCodeGenerator();
        java.util.Set<java.lang.String> strSet7 = python3Target1.getBadWords();
        java.lang.String str9 = python3Target1.getImplicitSetLabel("\"__tset_Python3ContextContext\"");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(sTGroup4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 64 + "'", int5 == 64);
        org.junit.Assert.assertNull(codeGenerator6);
        org.junit.Assert.assertNotNull(strSet7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "_tset\"__tset_Python3ContextContext\"" + "'", str9, "_tset\"__tset_Python3ContextContext\"");
    }

    @Test
    public void test1091() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1091");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        java.lang.String str4 = python3Target1.getAltLabelContextStructName("_Python3");
        boolean boolean5 = python3Target1.templatesExist();
        org.stringtemplate.v4.STGroup sTGroup6 = python3Target1.getTemplates();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "_Python3Context" + "'", str4, "_Python3Context");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(sTGroup6);
    }

    @Test
    public void test1092() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1092");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        boolean boolean3 = python3Target1.templatesExist();
        org.stringtemplate.v4.STGroup sTGroup4 = python3Target1.getTemplates();
        org.stringtemplate.v4.STGroup sTGroup5 = python3Target1.getTemplates();
        java.lang.String str8 = python3Target1.getTargetStringLiteralFromString("_tset\"_tsethi\"", true);
        org.antlr.v4.tool.Grammar grammar9 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str11 = python3Target1.getTokenTypeAsTargetLabel(grammar9, (int) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(sTGroup4);
        org.junit.Assert.assertNotNull(sTGroup5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\"_tset\\\"_tsethi\\\"\"" + "'", str8, "\"_tset\\\"_tsethi\\\"\"");
    }

    @Test
    public void test1093() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1093");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        boolean boolean3 = python3Target1.wantsBaseVisitor();
        java.lang.String str4 = python3Target1.getLanguage();
        java.lang.String str7 = python3Target1.getTargetStringLiteralFromString("Python3", false);
        java.lang.String str9 = python3Target1.getImplicitRuleLabel("Python3");
        org.stringtemplate.v4.STGroup sTGroup10 = python3Target1.getTemplates();
        org.stringtemplate.v4.STGroup sTGroup11 = python3Target1.getTemplates();
        int int12 = python3Target1.getSerializedATNSegmentLimit();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Python3" + "'", str4, "Python3");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Python3" + "'", str7, "Python3");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "_Python3" + "'", str9, "_Python3");
        org.junit.Assert.assertNotNull(sTGroup10);
        org.junit.Assert.assertNotNull(sTGroup11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 29 + "'", int12 == 29);
    }

    @Test
    public void test1094() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1094");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        boolean boolean3 = python3Target1.wantsBaseVisitor();
        java.lang.String str4 = python3Target1.getLanguage();
        java.lang.String str7 = python3Target1.getTargetStringLiteralFromString("Python3", false);
        boolean boolean8 = python3Target1.templatesExist();
        org.stringtemplate.v4.STGroup sTGroup9 = python3Target1.getTemplates();
        boolean boolean10 = python3Target1.supportsOverloadedMethods();
        java.lang.String str11 = python3Target1.getVersion();
        java.lang.String str13 = python3Target1.getImplicitRuleLabel("\"4.5.2.1\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator14 = null;
        java.lang.String str17 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator14, "i", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator18 = python3Target1.getCodeGenerator();
        boolean boolean19 = python3Target1.wantsBaseVisitor();
        org.antlr.v4.tool.ast.GrammarAST grammarAST20 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str21 = python3Target1.getLoopCounter(grammarAST20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Python3" + "'", str4, "Python3");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Python3" + "'", str7, "Python3");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(sTGroup9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "4.5.2.1" + "'", str11, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "_\"4.5.2.1\"" + "'", str13, "_\"4.5.2.1\"");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "\"\"" + "'", str17, "\"\"");
        org.junit.Assert.assertNull(codeGenerator18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    }

    @Test
    public void test1095() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1095");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = python3Target1.getCodeGenerator();
        boolean boolean4 = python3Target1.wantsBaseListener();
        boolean boolean5 = python3Target1.wantsBaseVisitor();
        boolean boolean6 = python3Target1.supportsOverloadedMethods();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(codeGenerator3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    }

    @Test
    public void test1096() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1096");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        boolean boolean3 = python3Target1.wantsBaseVisitor();
        java.lang.String str4 = python3Target1.getLanguage();
        java.lang.String str7 = python3Target1.getTargetStringLiteralFromString("Python3", false);
        boolean boolean8 = python3Target1.templatesExist();
        java.lang.String str10 = python3Target1.getTargetStringLiteralFromString("hi!");
        java.lang.String str11 = python3Target1.getVersion();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Python3" + "'", str4, "Python3");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Python3" + "'", str7, "Python3");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\"hi!\"" + "'", str10, "\"hi!\"");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "4.5.2.1" + "'", str11, "4.5.2.1");
    }

    @Test
    public void test1097() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1097");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.lang.String str3 = python3Target1.encodeIntAsCharEscape(1);
        java.lang.String str4 = python3Target1.getVersion();
        java.lang.String str6 = python3Target1.getImplicitRuleLabel("_tsethi!");
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = null;
        java.lang.String str10 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator7, "_Python3", false);
        org.antlr.v4.codegen.CodeGenerator codeGenerator11 = python3Target1.getCodeGenerator();
        java.lang.String str13 = python3Target1.getImplicitRuleLabel("\"___tsethi!\"");
        java.lang.Class<?> wildcardClass14 = python3Target1.getClass();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "\\1" + "'", str3, "\\1");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "4.5.2.1" + "'", str4, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "__tsethi!" + "'", str6, "__tsethi!");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Python" + "'", str10, "Python");
        org.junit.Assert.assertNull(codeGenerator11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "_\"___tsethi!\"" + "'", str13, "_\"___tsethi!\"");
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test1098() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1098");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        boolean boolean3 = python3Target1.wantsBaseVisitor();
        java.lang.String str4 = python3Target1.getLanguage();
        java.lang.String str7 = python3Target1.getTargetStringLiteralFromString("Python3", false);
        boolean boolean8 = python3Target1.templatesExist();
        org.stringtemplate.v4.STGroup sTGroup9 = python3Target1.getTemplates();
        int int10 = python3Target1.getInlineTestSetWordSize();
        int int11 = python3Target1.getSerializedATNSegmentLimit();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str13 = python3Target1.getImplicitTokenLabel("\"_ \"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Python3" + "'", str4, "Python3");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Python3" + "'", str7, "Python3");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(sTGroup9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 64 + "'", int10 == 64);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 29 + "'", int11 == 29);
    }

    @Test
    public void test1099() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1099");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.lang.String str3 = python3Target1.encodeIntAsCharEscape(1);
        java.lang.String str4 = python3Target1.getVersion();
        java.lang.String str6 = python3Target1.getImplicitRuleLabel("_tsethi!");
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = null;
        java.lang.String str10 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator7, "_Python3", false);
        java.lang.String str12 = python3Target1.getAltLabelContextStructName("\"hi!\"Context");
        java.lang.String str14 = python3Target1.getAltLabelContextStructName("_hi!");
        int int15 = python3Target1.getInlineTestSetWordSize();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "\\1" + "'", str3, "\\1");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "4.5.2.1" + "'", str4, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "__tsethi!" + "'", str6, "__tsethi!");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Python" + "'", str10, "Python");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "\"hi!\"ContextContext" + "'", str12, "\"hi!\"ContextContext");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "_hi!Context" + "'", str14, "_hi!Context");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 64 + "'", int15 == 64);
    }

    @Test
    public void test1100() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1100");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        boolean boolean3 = python3Target1.wantsBaseVisitor();
        java.lang.String str4 = python3Target1.getLanguage();
        java.lang.String str7 = python3Target1.getTargetStringLiteralFromString("Python3", false);
        java.lang.String str9 = python3Target1.encodeIntAsCharEscape((int) (byte) 10);
        java.lang.String str11 = python3Target1.getTargetStringLiteralFromString("_Python3");
        java.lang.String str13 = python3Target1.getAltLabelContextStructName("Python3");
        org.antlr.v4.codegen.CodeGenerator codeGenerator14 = python3Target1.getCodeGenerator();
        java.lang.String str16 = python3Target1.getListLabel("\"\"Context");
        java.lang.String str19 = python3Target1.getTargetStringLiteralFromString("_tsetPythonContext", false);
        java.lang.String str21 = python3Target1.getImplicitRuleLabel("");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Python3" + "'", str4, "Python3");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Python3" + "'", str7, "Python3");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\\n" + "'", str9, "\\n");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "\"_Python3\"" + "'", str11, "\"_Python3\"");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Python3Context" + "'", str13, "Python3Context");
        org.junit.Assert.assertNull(codeGenerator14);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "\"\"Context" + "'", str16, "\"\"Context");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "_tsetPythonContext" + "'", str19, "_tsetPythonContext");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "_" + "'", str21, "_");
    }

    @Test
    public void test1101() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1101");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = python3Target1.getCodeGenerator();
        org.antlr.v4.codegen.CodeGenerator codeGenerator4 = null;
        java.lang.String str7 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator4, "d", true);
        java.util.Set<java.lang.String> strSet8 = python3Target1.getBadWords();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str10 = python3Target1.getImplicitTokenLabel("\"_\\\"___tsethi!\\\"\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(codeGenerator3);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "\"\"" + "'", str7, "\"\"");
        org.junit.Assert.assertNotNull(strSet8);
    }

    @Test
    public void test1102() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1102");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        java.lang.String str4 = python3Target1.getListLabel("");
        boolean boolean5 = python3Target1.wantsBaseListener();
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = python3Target1.getCodeGenerator();
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = python3Target1.getCodeGenerator();
        org.antlr.v4.tool.Grammar grammar8 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator9 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target10 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator9);
        java.lang.String str12 = python3Target10.encodeIntAsCharEscape(1);
        java.lang.String str13 = python3Target10.getVersion();
        java.lang.String str15 = python3Target10.getImplicitRuleLabel("_tsethi!");
        org.antlr.v4.codegen.CodeGenerator codeGenerator16 = null;
        java.lang.String str19 = python3Target10.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator16, "_Python3", false);
        org.antlr.v4.codegen.CodeGenerator codeGenerator20 = python3Target10.getCodeGenerator();
        boolean boolean21 = python3Target10.supportsOverloadedMethods();
        java.lang.String str23 = python3Target10.encodeIntAsCharEscape(64);
        org.antlr.v4.tool.Grammar grammar24 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator25 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target26 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator25);
        java.lang.String str28 = python3Target26.encodeIntAsCharEscape(1);
        java.lang.String str29 = python3Target26.getVersion();
        java.lang.String str31 = python3Target26.getImplicitRuleLabel("_tsethi!");
        java.lang.String str33 = python3Target26.getImplicitRuleLabel("__tsethi!");
        org.antlr.v4.codegen.CodeGenerator codeGenerator34 = python3Target26.getCodeGenerator();
        boolean boolean35 = python3Target26.supportsOverloadedMethods();
        java.lang.String str38 = python3Target26.getTargetStringLiteralFromString("\"_Python3\"", true);
        java.util.Set<java.lang.String> strSet39 = python3Target26.getBadWords();
        org.antlr.v4.tool.Grammar grammar40 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator41 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target42 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator41);
        boolean boolean43 = python3Target42.wantsBaseListener();
        org.antlr.v4.codegen.CodeGenerator codeGenerator44 = python3Target42.getCodeGenerator();
        java.lang.String str47 = python3Target42.getTargetStringLiteralFromString("\\n", false);
        org.antlr.v4.tool.Grammar grammar48 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator49 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target50 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator49);
        boolean boolean51 = python3Target50.wantsBaseListener();
        java.util.Set<java.lang.String> strSet52 = python3Target50.getBadWords();
        org.stringtemplate.v4.STGroup sTGroup53 = python3Target50.getTemplates();
        java.lang.String str55 = python3Target50.getImplicitRuleLabel("\"\\\\1\"");
        org.antlr.v4.tool.Grammar grammar56 = null;
        int[] intArray57 = new int[] {};
        java.lang.String[] strArray58 = python3Target50.getTokenTypesAsTargetLabels(grammar56, intArray57);
        java.lang.String[] strArray59 = python3Target42.getTokenTypesAsTargetLabels(grammar48, intArray57);
        java.lang.String[] strArray60 = python3Target26.getTokenTypesAsTargetLabels(grammar40, intArray57);
        java.lang.String[] strArray61 = python3Target10.getTokenTypesAsTargetLabels(grammar24, intArray57);
        java.lang.String[] strArray62 = python3Target1.getTokenTypesAsTargetLabels(grammar8, intArray57);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str64 = python3Target1.getImplicitTokenLabel("_tset_.5.2.");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(codeGenerator6);
        org.junit.Assert.assertNull(codeGenerator7);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "\\1" + "'", str12, "\\1");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "4.5.2.1" + "'", str13, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "__tsethi!" + "'", str15, "__tsethi!");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Python" + "'", str19, "Python");
        org.junit.Assert.assertNull(codeGenerator20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "@" + "'", str23, "@");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "\\1" + "'", str28, "\\1");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "4.5.2.1" + "'", str29, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "__tsethi!" + "'", str31, "__tsethi!");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "___tsethi!" + "'", str33, "___tsethi!");
        org.junit.Assert.assertNull(codeGenerator34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "\"\\\"_Python3\\\"\"" + "'", str38, "\"\\\"_Python3\\\"\"");
        org.junit.Assert.assertNotNull(strSet39);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNull(codeGenerator44);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "\\\\n" + "'", str47, "\\\\n");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(strSet52);
        org.junit.Assert.assertNotNull(sTGroup53);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "_\"\\\\1\"" + "'", str55, "_\"\\\\1\"");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[]");
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertNotNull(strArray59);
        org.junit.Assert.assertNotNull(strArray60);
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertNotNull(strArray62);
    }

    @Test
    public void test1103() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1103");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        org.antlr.v4.codegen.CodeGenerator codeGenerator2 = null;
        java.lang.String str5 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator2, "_Python3Context", true);
        java.lang.String str8 = python3Target1.getTargetStringLiteralFromString("____tsethi!", false);
        org.antlr.v4.codegen.CodeGenerator codeGenerator9 = null;
        java.lang.String str12 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator9, "_\"_Python3\"", false);
        org.antlr.v4.tool.Rule rule13 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str14 = python3Target1.getRuleFunctionContextStructName(rule13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "\"Python3Contex\"" + "'", str5, "\"Python3Contex\"");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "____tsethi!" + "'", str8, "____tsethi!");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "\\\"_Python3" + "'", str12, "\\\"_Python3");
    }

    @Test
    public void test1104() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1104");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        boolean boolean3 = python3Target1.templatesExist();
        org.stringtemplate.v4.STGroup sTGroup4 = python3Target1.getTemplates();
        org.stringtemplate.v4.STGroup sTGroup5 = python3Target1.getTemplates();
        java.lang.String str8 = python3Target1.getTargetStringLiteralFromString("_tset\"_tsethi\"", true);
        java.lang.String str9 = python3Target1.getVersion();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str11 = python3Target1.getElementName("\"_tset_\\\"\\\\\\\\1\\\"\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(sTGroup4);
        org.junit.Assert.assertNotNull(sTGroup5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\"_tset\\\"_tsethi\\\"\"" + "'", str8, "\"_tset\\\"_tsethi\\\"\"");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "4.5.2.1" + "'", str9, "4.5.2.1");
    }

    @Test
    public void test1105() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1105");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        boolean boolean3 = python3Target1.wantsBaseVisitor();
        java.lang.String str4 = python3Target1.getLanguage();
        java.lang.String str7 = python3Target1.getTargetStringLiteralFromString("Python3", false);
        boolean boolean8 = python3Target1.templatesExist();
        org.stringtemplate.v4.STGroup sTGroup9 = python3Target1.getTemplates();
        boolean boolean10 = python3Target1.supportsOverloadedMethods();
        java.lang.String str11 = python3Target1.getVersion();
        java.lang.String str12 = python3Target1.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator13 = python3Target1.getCodeGenerator();
        org.antlr.v4.codegen.CodeGenerator codeGenerator14 = null;
        java.lang.String str17 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator14, "_tsethi!", false);
        java.lang.String str19 = python3Target1.encodeIntAsCharEscape(100);
        java.lang.String str21 = python3Target1.getAltLabelContextStructName("_tset\\\"4.5.2.1\\\"");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Python3" + "'", str4, "Python3");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Python3" + "'", str7, "Python3");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(sTGroup9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "4.5.2.1" + "'", str11, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Python3" + "'", str12, "Python3");
        org.junit.Assert.assertNull(codeGenerator13);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "tsethi" + "'", str17, "tsethi");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "d" + "'", str19, "d");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "_tset\\\"4.5.2.1\\\"Context" + "'", str21, "_tset\\\"4.5.2.1\\\"Context");
    }

    @Test
    public void test1106() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1106");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        java.lang.String str4 = python3Target1.getListLabel("");
        boolean boolean5 = python3Target1.supportsOverloadedMethods();
        int int6 = python3Target1.getSerializedATNSegmentLimit();
        java.lang.Class<?> wildcardClass7 = python3Target1.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 29 + "'", int6 == 29);
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test1107() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1107");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        boolean boolean3 = python3Target1.wantsBaseVisitor();
        java.lang.String str4 = python3Target1.getLanguage();
        java.lang.String str7 = python3Target1.getTargetStringLiteralFromString("Python3", false);
        boolean boolean8 = python3Target1.templatesExist();
        org.stringtemplate.v4.STGroup sTGroup9 = python3Target1.getTemplates();
        boolean boolean10 = python3Target1.supportsOverloadedMethods();
        java.lang.String str11 = python3Target1.getVersion();
        java.lang.String str13 = python3Target1.getAltLabelContextStructName("_hi!");
        java.lang.String str14 = python3Target1.getVersion();
        java.lang.String str15 = python3Target1.getLanguage();
        java.lang.String str17 = python3Target1.getListLabel("Python3Context");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Python3" + "'", str4, "Python3");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Python3" + "'", str7, "Python3");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(sTGroup9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "4.5.2.1" + "'", str11, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "_hi!Context" + "'", str13, "_hi!Context");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "4.5.2.1" + "'", str14, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Python3" + "'", str15, "Python3");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Python3Context" + "'", str17, "Python3Context");
    }

    @Test
    public void test1108() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1108");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.lang.String str3 = python3Target1.encodeIntAsCharEscape(1);
        java.lang.String str4 = python3Target1.getVersion();
        java.lang.String str6 = python3Target1.getImplicitRuleLabel("_tsethi!");
        boolean boolean7 = python3Target1.templatesExist();
        boolean boolean8 = python3Target1.wantsBaseVisitor();
        boolean boolean9 = python3Target1.templatesExist();
        java.lang.Class<?> wildcardClass10 = python3Target1.getClass();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "\\1" + "'", str3, "\\1");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "4.5.2.1" + "'", str4, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "__tsethi!" + "'", str6, "__tsethi!");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test1109() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1109");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        boolean boolean3 = python3Target1.templatesExist();
        org.stringtemplate.v4.STGroup sTGroup4 = python3Target1.getTemplates();
        java.lang.String str6 = python3Target1.encodeIntAsCharEscape(1);
        java.lang.String str7 = python3Target1.getVersion();
        boolean boolean8 = python3Target1.wantsBaseListener();
        java.lang.String str9 = python3Target1.getVersion();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(sTGroup4);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\\1" + "'", str6, "\\1");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "4.5.2.1" + "'", str7, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "4.5.2.1" + "'", str9, "4.5.2.1");
    }

    @Test
    public void test1110() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1110");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        java.util.Set<java.lang.String> strSet3 = python3Target1.getBadWords();
        org.stringtemplate.v4.STGroup sTGroup4 = python3Target1.getTemplates();
        java.lang.String str6 = python3Target1.getListLabel("_Python3Context");
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = null;
        java.lang.String str10 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator7, "a", true);
        java.lang.String str11 = python3Target1.getVersion();
        org.antlr.v4.codegen.model.RuleFunction ruleFunction12 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str13 = python3Target1.getRuleFunctionContextStructName(ruleFunction12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNotNull(sTGroup4);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "_Python3Context" + "'", str6, "_Python3Context");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\"\"" + "'", str10, "\"\"");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "4.5.2.1" + "'", str11, "4.5.2.1");
    }

    @Test
    public void test1111() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1111");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        boolean boolean3 = python3Target1.wantsBaseVisitor();
        java.lang.String str4 = python3Target1.getLanguage();
        java.lang.String str7 = python3Target1.getTargetStringLiteralFromString("Python3", false);
        java.lang.String str10 = python3Target1.getTargetStringLiteralFromString("Python3", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator11 = python3Target1.getCodeGenerator();
        java.lang.String str13 = python3Target1.getListLabel("__Python3ContextContext");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Python3" + "'", str4, "Python3");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Python3" + "'", str7, "Python3");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\"Python3\"" + "'", str10, "\"Python3\"");
        org.junit.Assert.assertNull(codeGenerator11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "__Python3ContextContext" + "'", str13, "__Python3ContextContext");
    }

    @Test
    public void test1112() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1112");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        int int3 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str5 = python3Target1.getImplicitRuleLabel("__tset\"4.5.2.1\"");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 64 + "'", int3 == 64);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "___tset\"4.5.2.1\"" + "'", str5, "___tset\"4.5.2.1\"");
    }

    @Test
    public void test1113() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1113");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        boolean boolean3 = python3Target1.wantsBaseVisitor();
        java.lang.String str4 = python3Target1.getLanguage();
        java.lang.String str7 = python3Target1.getTargetStringLiteralFromString("Python3", false);
        java.lang.String str10 = python3Target1.getTargetStringLiteralFromString("Python3", true);
        java.lang.String str12 = python3Target1.getImplicitSetLabel("hi!");
        java.lang.String str14 = python3Target1.getTargetStringLiteralFromString("\"Python3Contex\"");
        java.lang.String str15 = python3Target1.getLanguage();
        int int16 = python3Target1.getSerializedATNSegmentLimit();
        int int17 = python3Target1.getSerializedATNSegmentLimit();
        java.lang.String str18 = python3Target1.getVersion();
        boolean boolean19 = python3Target1.wantsBaseVisitor();
        boolean boolean20 = python3Target1.wantsBaseVisitor();
        int int21 = python3Target1.getSerializedATNSegmentLimit();
        java.lang.String str23 = python3Target1.getListLabel("\\\"\\\\\\\"ython\\\"");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Python3" + "'", str4, "Python3");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Python3" + "'", str7, "Python3");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\"Python3\"" + "'", str10, "\"Python3\"");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "_tsethi!" + "'", str12, "_tsethi!");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "\"\\\"Python3Contex\\\"\"" + "'", str14, "\"\\\"Python3Contex\\\"\"");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Python3" + "'", str15, "Python3");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 29 + "'", int16 == 29);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 29 + "'", int17 == 29);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "4.5.2.1" + "'", str18, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 29 + "'", int21 == 29);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "\\\"\\\\\\\"ython\\\"" + "'", str23, "\\\"\\\\\\\"ython\\\"");
    }

    @Test
    public void test1114() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1114");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.lang.String str3 = python3Target1.encodeIntAsCharEscape(1);
        org.stringtemplate.v4.STGroup sTGroup4 = python3Target1.getTemplates();
        boolean boolean5 = python3Target1.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup6 = python3Target1.getTemplates();
        boolean boolean7 = python3Target1.wantsBaseListener();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "\\1" + "'", str3, "\\1");
        org.junit.Assert.assertNotNull(sTGroup4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(sTGroup6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    public void test1115() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1115");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        java.lang.String str4 = python3Target1.getListLabel("");
        boolean boolean5 = python3Target1.wantsBaseListener();
        int int6 = python3Target1.getSerializedATNSegmentLimit();
        java.lang.String str9 = python3Target1.getTargetStringLiteralFromString("_tsethi!", true);
        java.lang.String str11 = python3Target1.getImplicitRuleLabel("_tset_\"4.5.2.1\"");
        java.util.Set<java.lang.String> strSet12 = python3Target1.getBadWords();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 29 + "'", int6 == 29);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\"_tsethi!\"" + "'", str9, "\"_tsethi!\"");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "__tset_\"4.5.2.1\"" + "'", str11, "__tset_\"4.5.2.1\"");
        org.junit.Assert.assertNotNull(strSet12);
    }

    @Test
    public void test1116() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1116");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        java.util.Set<java.lang.String> strSet3 = python3Target1.getBadWords();
        java.util.Set<java.lang.String> strSet4 = python3Target1.getBadWords();
        boolean boolean5 = python3Target1.wantsBaseVisitor();
        int int6 = python3Target1.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet7 = python3Target1.getBadWords();
        java.lang.String str9 = python3Target1.getTargetStringLiteralFromString("__\"___tsethi!\"Context");
        org.stringtemplate.v4.STGroup sTGroup10 = python3Target1.getTemplates();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 64 + "'", int6 == 64);
        org.junit.Assert.assertNotNull(strSet7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\"__\\\"___tsethi!\\\"Context\"" + "'", str9, "\"__\\\"___tsethi!\\\"Context\"");
        org.junit.Assert.assertNotNull(sTGroup10);
    }

    @Test
    public void test1117() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1117");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        boolean boolean3 = python3Target1.wantsBaseVisitor();
        java.lang.String str4 = python3Target1.getLanguage();
        java.lang.String str7 = python3Target1.getTargetStringLiteralFromString("Python3", false);
        boolean boolean8 = python3Target1.templatesExist();
        java.lang.String str10 = python3Target1.getTargetStringLiteralFromString("hi!");
        java.lang.String str12 = python3Target1.getImplicitRuleLabel("\"hi!\"");
        java.lang.String str14 = python3Target1.getListLabel("\"\\\"\\\"\"");
        org.stringtemplate.v4.STGroup sTGroup15 = python3Target1.getTemplates();
        java.util.Set<java.lang.String> strSet16 = python3Target1.getBadWords();
        java.lang.String str18 = python3Target1.getTargetStringLiteralFromString("\"__hi!\"");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Python3" + "'", str4, "Python3");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Python3" + "'", str7, "Python3");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\"hi!\"" + "'", str10, "\"hi!\"");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "_\"hi!\"" + "'", str12, "_\"hi!\"");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "\"\\\"\\\"\"" + "'", str14, "\"\\\"\\\"\"");
        org.junit.Assert.assertNotNull(sTGroup15);
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "\"\\\"__hi!\\\"\"" + "'", str18, "\"\\\"__hi!\\\"\"");
    }

    @Test
    public void test1118() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1118");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.lang.String str3 = python3Target1.encodeIntAsCharEscape(1);
        org.antlr.v4.codegen.CodeGenerator codeGenerator4 = null;
        java.lang.String str7 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator4, "_Python3Context", true);
        boolean boolean8 = python3Target1.templatesExist();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "\\1" + "'", str3, "\\1");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "\"Python3Contex\"" + "'", str7, "\"Python3Contex\"");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
    }

    @Test
    public void test1119() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1119");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        boolean boolean3 = python3Target1.wantsBaseListener();
        java.lang.String str6 = python3Target1.getTargetStringLiteralFromString("\\\\1", false);
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = null;
        java.lang.String str10 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator7, "_\"\\\"Python3Contex\\\"\"", false);
        boolean boolean11 = python3Target1.supportsOverloadedMethods();
        java.lang.String str12 = python3Target1.getLanguage();
        int int13 = python3Target1.getSerializedATNSegmentLimit();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str15 = python3Target1.getElementName("\"\\\"\\\"\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\\\\\\\\1" + "'", str6, "\\\\\\\\1");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\\\"\\\"Python3Contex\\\"" + "'", str10, "\\\"\\\"Python3Contex\\\"");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Python3" + "'", str12, "Python3");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 29 + "'", int13 == 29);
    }

    @Test
    public void test1120() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1120");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        org.antlr.v4.codegen.CodeGenerator codeGenerator2 = null;
        java.lang.String str5 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator2, "_Python3Context", true);
        java.lang.String str7 = python3Target1.getListLabel("Python");
        java.lang.String str9 = python3Target1.encodeIntAsCharEscape((int) (byte) 0);
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = null;
        java.lang.String str13 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator10, "_tsetPythonContext", false);
        int int14 = python3Target1.getSerializedATNSegmentLimit();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "\"Python3Contex\"" + "'", str5, "\"Python3Contex\"");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Python" + "'", str7, "Python");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\\0" + "'", str9, "\\0");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "tsetPythonContex" + "'", str13, "tsetPythonContex");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 29 + "'", int14 == 29);
    }

    @Test
    public void test1121() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1121");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        java.lang.String str4 = python3Target1.getListLabel("");
        boolean boolean5 = python3Target1.wantsBaseListener();
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = python3Target1.getCodeGenerator();
        java.lang.String str8 = python3Target1.getImplicitSetLabel("_\"4.5.2.1\"");
        boolean boolean9 = python3Target1.wantsBaseListener();
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = python3Target1.getCodeGenerator();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(codeGenerator6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "_tset_\"4.5.2.1\"" + "'", str8, "_tset_\"4.5.2.1\"");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(codeGenerator10);
    }

    @Test
    public void test1122() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1122");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        boolean boolean3 = python3Target1.wantsBaseVisitor();
        java.lang.String str4 = python3Target1.getLanguage();
        java.lang.String str7 = python3Target1.getTargetStringLiteralFromString("Python3", false);
        boolean boolean8 = python3Target1.templatesExist();
        java.lang.String str10 = python3Target1.getTargetStringLiteralFromString("hi!");
        org.stringtemplate.v4.STGroup sTGroup11 = python3Target1.getTemplates();
        org.stringtemplate.v4.STGroup sTGroup12 = python3Target1.getTemplates();
        java.lang.String str14 = python3Target1.getListLabel("");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str16 = python3Target1.getElementListName("_tset_Python3Context");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Python3" + "'", str4, "Python3");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Python3" + "'", str7, "Python3");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\"hi!\"" + "'", str10, "\"hi!\"");
        org.junit.Assert.assertNotNull(sTGroup11);
        org.junit.Assert.assertNotNull(sTGroup12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
    }

    @Test
    public void test1123() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1123");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python3Target1.getBadWords();
        java.lang.String str4 = python3Target1.getTargetStringLiteralFromString("\"_Python3\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator5 = python3Target1.getCodeGenerator();
        boolean boolean6 = python3Target1.wantsBaseVisitor();
        int int7 = python3Target1.getSerializedATNSegmentLimit();
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "\"\\\"_Python3\\\"\"" + "'", str4, "\"\\\"_Python3\\\"\"");
        org.junit.Assert.assertNull(codeGenerator5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 29 + "'", int7 == 29);
    }

    @Test
    public void test1124() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1124");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        boolean boolean3 = python3Target1.wantsBaseVisitor();
        java.lang.String str4 = python3Target1.getLanguage();
        java.lang.String str7 = python3Target1.getTargetStringLiteralFromString("Python3", false);
        boolean boolean8 = python3Target1.templatesExist();
        java.lang.String str9 = python3Target1.getLanguage();
        org.antlr.v4.tool.ast.GrammarAST grammarAST10 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean11 = python3Target1.grammarSymbolCausesIssueInGeneratedCode(grammarAST10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Python3" + "'", str4, "Python3");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Python3" + "'", str7, "Python3");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Python3" + "'", str9, "Python3");
    }

    @Test
    public void test1125() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1125");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        boolean boolean3 = python3Target1.templatesExist();
        org.stringtemplate.v4.STGroup sTGroup4 = python3Target1.getTemplates();
        boolean boolean5 = python3Target1.supportsOverloadedMethods();
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = null;
        java.lang.String str9 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator6, "\\n", true);
        java.lang.String str11 = python3Target1.getAltLabelContextStructName("\"_tset\\\"_tsethi\\\"\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator12 = python3Target1.getCodeGenerator();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str14 = python3Target1.getElementListName("__hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(sTGroup4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\"\"" + "'", str9, "\"\"");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "\"_tset\\\"_tsethi\\\"\"Context" + "'", str11, "\"_tset\\\"_tsethi\\\"\"Context");
        org.junit.Assert.assertNull(codeGenerator12);
    }

    @Test
    public void test1126() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1126");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        boolean boolean3 = python3Target1.wantsBaseVisitor();
        java.lang.String str4 = python3Target1.getLanguage();
        java.lang.String str6 = python3Target1.getTargetStringLiteralFromString("\"Python3Contex\"");
        java.lang.String str8 = python3Target1.getImplicitRuleLabel("_\"___tsethi!\"");
        java.lang.String str10 = python3Target1.getListLabel("__\"_Python3\"");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Python3" + "'", str4, "Python3");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\"\\\"Python3Contex\\\"\"" + "'", str6, "\"\\\"Python3Contex\\\"\"");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "__\"___tsethi!\"" + "'", str8, "__\"___tsethi!\"");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "__\"_Python3\"" + "'", str10, "__\"_Python3\"");
    }

    @Test
    public void test1127() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1127");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.lang.String str3 = python3Target1.encodeIntAsCharEscape(1);
        java.lang.String str4 = python3Target1.getVersion();
        java.lang.String str6 = python3Target1.getImplicitRuleLabel("_tsethi!");
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = null;
        java.lang.String str10 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator7, "_Python3", false);
        org.antlr.v4.codegen.CodeGenerator codeGenerator11 = python3Target1.getCodeGenerator();
        java.lang.String str14 = python3Target1.getTargetStringLiteralFromString("\"\"", true);
        boolean boolean15 = python3Target1.templatesExist();
        java.util.Set<java.lang.String> strSet16 = python3Target1.getBadWords();
        int int17 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str19 = python3Target1.getImplicitRuleLabel("\"tset_tse\"");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "\\1" + "'", str3, "\\1");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "4.5.2.1" + "'", str4, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "__tsethi!" + "'", str6, "__tsethi!");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Python" + "'", str10, "Python");
        org.junit.Assert.assertNull(codeGenerator11);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "\"\\\"\\\"\"" + "'", str14, "\"\\\"\\\"\"");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 64 + "'", int17 == 64);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "_\"tset_tse\"" + "'", str19, "_\"tset_tse\"");
    }

    @Test
    public void test1128() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1128");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.lang.String str3 = python3Target1.encodeIntAsCharEscape(1);
        java.lang.String str4 = python3Target1.getVersion();
        java.lang.String str6 = python3Target1.getImplicitRuleLabel("_tsethi!");
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = null;
        java.lang.String str10 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator7, "_Python3", false);
        java.lang.String str12 = python3Target1.getAltLabelContextStructName("\"hi!\"Context");
        java.lang.String str14 = python3Target1.getAltLabelContextStructName("_tset_\"\\\\1\"");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str16 = python3Target1.getElementListName("");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "\\1" + "'", str3, "\\1");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "4.5.2.1" + "'", str4, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "__tsethi!" + "'", str6, "__tsethi!");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Python" + "'", str10, "Python");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "\"hi!\"ContextContext" + "'", str12, "\"hi!\"ContextContext");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "_tset_\"\\\\1\"Context" + "'", str14, "_tset_\"\\\\1\"Context");
    }

    @Test
    public void test1129() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1129");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        boolean boolean3 = python3Target1.templatesExist();
        java.lang.String str4 = python3Target1.getVersion();
        int int5 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str7 = python3Target1.getTargetStringLiteralFromString("_\\\"hi!\\\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = python3Target1.getCodeGenerator();
        java.lang.String str10 = python3Target1.getTargetStringLiteralFromString("_\"_tset_i\"");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "4.5.2.1" + "'", str4, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 64 + "'", int5 == 64);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "\"_\\\\\\\"hi!\\\\\\\"\"" + "'", str7, "\"_\\\\\\\"hi!\\\\\\\"\"");
        org.junit.Assert.assertNull(codeGenerator8);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\"_\\\"_tset_i\\\"\"" + "'", str10, "\"_\\\"_tset_i\\\"\"");
    }

    @Test
    public void test1130() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1130");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        java.lang.String str4 = python3Target1.getAltLabelContextStructName("_Python3");
        org.antlr.v4.codegen.CodeGenerator codeGenerator5 = null;
        java.lang.String str8 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator5, "__tsethi!", false);
        java.lang.String str10 = python3Target1.encodeIntAsCharEscape((int) (short) 100);
        boolean boolean11 = python3Target1.supportsOverloadedMethods();
        int int12 = python3Target1.getInlineTestSetWordSize();
        int int13 = python3Target1.getSerializedATNSegmentLimit();
        java.lang.String str15 = python3Target1.getAltLabelContextStructName("\"hi!\"");
        int int16 = python3Target1.getSerializedATNSegmentLimit();
        java.util.Set<java.lang.String> strSet17 = python3Target1.getBadWords();
        java.lang.String str19 = python3Target1.getTargetStringLiteralFromString("_tset\"_tset\\\"_tsethi\\\"\"Context");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str21 = python3Target1.getElementListName("_\"___tsethi!\"Context");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "_Python3Context" + "'", str4, "_Python3Context");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "_tsethi" + "'", str8, "_tsethi");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "d" + "'", str10, "d");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 64 + "'", int12 == 64);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 29 + "'", int13 == 29);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "\"hi!\"Context" + "'", str15, "\"hi!\"Context");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 29 + "'", int16 == 29);
        org.junit.Assert.assertNotNull(strSet17);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "\"_tset\\\"_tset\\\\\\\"_tsethi\\\\\\\"\\\"Context\"" + "'", str19, "\"_tset\\\"_tset\\\\\\\"_tsethi\\\\\\\"\\\"Context\"");
    }

    @Test
    public void test1131() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1131");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        org.antlr.v4.codegen.CodeGenerator codeGenerator2 = python3Target1.getCodeGenerator();
        java.lang.String str3 = python3Target1.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup4 = python3Target1.getTemplates();
        java.lang.String str6 = python3Target1.getImplicitRuleLabel("_\"hi!\"");
        java.util.Set<java.lang.String> strSet7 = python3Target1.getBadWords();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str9 = python3Target1.getElementName("_tset\\\"4.5.2.1");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(codeGenerator2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Python3" + "'", str3, "Python3");
        org.junit.Assert.assertNotNull(sTGroup4);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "__\"hi!\"" + "'", str6, "__\"hi!\"");
        org.junit.Assert.assertNotNull(strSet7);
    }

    @Test
    public void test1132() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1132");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        boolean boolean3 = python3Target1.wantsBaseVisitor();
        java.lang.String str4 = python3Target1.getLanguage();
        java.lang.String str7 = python3Target1.getTargetStringLiteralFromString("Python3", false);
        java.lang.String str9 = python3Target1.encodeIntAsCharEscape((int) (byte) 10);
        boolean boolean10 = python3Target1.templatesExist();
        java.lang.String str12 = python3Target1.getAltLabelContextStructName("6");
        java.lang.String str13 = python3Target1.getLanguage();
        java.lang.String str15 = python3Target1.getAltLabelContextStructName("\"\\\"Python3Contex\\\"\"");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Python3" + "'", str4, "Python3");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Python3" + "'", str7, "Python3");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\\n" + "'", str9, "\\n");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "6Context" + "'", str12, "6Context");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Python3" + "'", str13, "Python3");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "\"\\\"Python3Contex\\\"\"Context" + "'", str15, "\"\\\"Python3Contex\\\"\"Context");
    }

    @Test
    public void test1133() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1133");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python3Target1.getBadWords();
        java.lang.String str3 = python3Target1.getVersion();
        java.lang.String str4 = python3Target1.getLanguage();
        org.antlr.v4.tool.Grammar grammar5 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target7 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator6);
        boolean boolean8 = python3Target7.wantsBaseListener();
        org.antlr.v4.codegen.CodeGenerator codeGenerator9 = python3Target7.getCodeGenerator();
        java.lang.String str11 = python3Target7.encodeIntAsCharEscape((int) (short) 10);
        java.util.Set<java.lang.String> strSet12 = python3Target7.getBadWords();
        java.lang.String str13 = python3Target7.getLanguage();
        java.lang.String str15 = python3Target7.getListLabel("\\\\n");
        java.lang.String str17 = python3Target7.encodeIntAsCharEscape(100);
        boolean boolean18 = python3Target7.templatesExist();
        org.antlr.v4.codegen.CodeGenerator codeGenerator19 = python3Target7.getCodeGenerator();
        org.stringtemplate.v4.STGroup sTGroup20 = python3Target7.getTemplates();
        org.antlr.v4.tool.Grammar grammar21 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator22 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target23 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator22);
        boolean boolean24 = python3Target23.wantsBaseListener();
        org.antlr.v4.codegen.CodeGenerator codeGenerator25 = python3Target23.getCodeGenerator();
        java.lang.String str28 = python3Target23.getTargetStringLiteralFromString("\\n", false);
        org.antlr.v4.tool.Grammar grammar29 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator30 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target31 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator30);
        boolean boolean32 = python3Target31.wantsBaseListener();
        java.util.Set<java.lang.String> strSet33 = python3Target31.getBadWords();
        org.stringtemplate.v4.STGroup sTGroup34 = python3Target31.getTemplates();
        java.lang.String str36 = python3Target31.getImplicitRuleLabel("\"\\\\1\"");
        org.antlr.v4.tool.Grammar grammar37 = null;
        int[] intArray38 = new int[] {};
        java.lang.String[] strArray39 = python3Target31.getTokenTypesAsTargetLabels(grammar37, intArray38);
        java.lang.String[] strArray40 = python3Target23.getTokenTypesAsTargetLabels(grammar29, intArray38);
        java.lang.String[] strArray41 = python3Target7.getTokenTypesAsTargetLabels(grammar21, intArray38);
        java.lang.String[] strArray42 = python3Target1.getTokenTypesAsTargetLabels(grammar5, intArray38);
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "4.5.2.1" + "'", str3, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Python3" + "'", str4, "Python3");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(codeGenerator9);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "\\n" + "'", str11, "\\n");
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Python3" + "'", str13, "Python3");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "\\\\n" + "'", str15, "\\\\n");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "d" + "'", str17, "d");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNull(codeGenerator19);
        org.junit.Assert.assertNotNull(sTGroup20);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNull(codeGenerator25);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "\\\\n" + "'", str28, "\\\\n");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(strSet33);
        org.junit.Assert.assertNotNull(sTGroup34);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "_\"\\\\1\"" + "'", str36, "_\"\\\\1\"");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[]");
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertNotNull(strArray42);
    }

    @Test
    public void test1134() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1134");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        java.lang.String str4 = python3Target1.getListLabel("");
        boolean boolean5 = python3Target1.wantsBaseListener();
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = python3Target1.getCodeGenerator();
        java.lang.String str8 = python3Target1.getTargetStringLiteralFromString("\"\\\\\\\\1Context\"");
        org.antlr.v4.codegen.model.RuleFunction ruleFunction9 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str10 = python3Target1.getRuleFunctionContextStructName(ruleFunction9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(codeGenerator6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\"\\\"\\\\\\\\\\\\\\\\1Context\\\"\"" + "'", str8, "\"\\\"\\\\\\\\\\\\\\\\1Context\\\"\"");
    }

    @Test
    public void test1135() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1135");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        boolean boolean3 = python3Target1.wantsBaseVisitor();
        java.lang.String str4 = python3Target1.getLanguage();
        java.lang.String str7 = python3Target1.getTargetStringLiteralFromString("Python3", false);
        boolean boolean8 = python3Target1.templatesExist();
        java.lang.String str10 = python3Target1.getTargetStringLiteralFromString("hi!");
        org.antlr.v4.codegen.CodeGenerator codeGenerator11 = null;
        java.lang.String str14 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator11, "_\\\"hi!\\\"", false);
        java.lang.String str16 = python3Target1.getImplicitRuleLabel("");
        org.antlr.v4.tool.Rule rule17 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str18 = python3Target1.getRuleFunctionContextStructName(rule17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Python3" + "'", str4, "Python3");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Python3" + "'", str7, "Python3");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\"hi!\"" + "'", str10, "\"hi!\"");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "\\\"hi!\\\"" + "'", str14, "\\\"hi!\\\"");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "_" + "'", str16, "_");
    }

    @Test
    public void test1136() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1136");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        boolean boolean3 = python3Target1.wantsBaseVisitor();
        java.lang.String str4 = python3Target1.getLanguage();
        java.lang.String str7 = python3Target1.getTargetStringLiteralFromString("Python3", false);
        boolean boolean8 = python3Target1.templatesExist();
        org.stringtemplate.v4.STGroup sTGroup9 = python3Target1.getTemplates();
        boolean boolean10 = python3Target1.supportsOverloadedMethods();
        java.lang.String str11 = python3Target1.getVersion();
        java.lang.String str12 = python3Target1.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator13 = python3Target1.getCodeGenerator();
        org.antlr.v4.codegen.CodeGenerator codeGenerator14 = python3Target1.getCodeGenerator();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str16 = python3Target1.getImplicitTokenLabel("_tset\\\"___tsethi!Context");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Python3" + "'", str4, "Python3");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Python3" + "'", str7, "Python3");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(sTGroup9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "4.5.2.1" + "'", str11, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Python3" + "'", str12, "Python3");
        org.junit.Assert.assertNull(codeGenerator13);
        org.junit.Assert.assertNull(codeGenerator14);
    }

    @Test
    public void test1137() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1137");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        java.lang.String str4 = python3Target1.getListLabel("");
        boolean boolean5 = python3Target1.supportsOverloadedMethods();
        java.lang.String str8 = python3Target1.getTargetStringLiteralFromString("_\"hi!\"", false);
        int int9 = python3Target1.getInlineTestSetWordSize();
        org.antlr.v4.tool.ast.GrammarAST grammarAST10 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean11 = python3Target1.grammarSymbolCausesIssueInGeneratedCode(grammarAST10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "_\\\"hi!\\\"" + "'", str8, "_\\\"hi!\\\"");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 64 + "'", int9 == 64);
    }

    @Test
    public void test1138() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1138");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        java.lang.String str4 = python3Target1.getListLabel("");
        boolean boolean5 = python3Target1.supportsOverloadedMethods();
        int int6 = python3Target1.getSerializedATNSegmentLimit();
        java.lang.String str8 = python3Target1.getListLabel("_i");
        java.lang.String str10 = python3Target1.encodeIntAsCharEscape((int) (short) 1);
        java.lang.Class<?> wildcardClass11 = python3Target1.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 29 + "'", int6 == 29);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "_i" + "'", str8, "_i");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\\1" + "'", str10, "\\1");
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test1139() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1139");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        org.antlr.v4.codegen.CodeGenerator codeGenerator2 = null;
        java.lang.String str5 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator2, "_Python3Context", true);
        java.lang.String str7 = python3Target1.getListLabel("Python");
        boolean boolean8 = python3Target1.wantsBaseVisitor();
        java.lang.String str10 = python3Target1.getImplicitSetLabel("_\"___tsethi!\"");
        int int11 = python3Target1.getSerializedATNSegmentLimit();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "\"Python3Contex\"" + "'", str5, "\"Python3Contex\"");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Python" + "'", str7, "Python");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "_tset_\"___tsethi!\"" + "'", str10, "_tset_\"___tsethi!\"");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 29 + "'", int11 == 29);
    }

    @Test
    public void test1140() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1140");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        boolean boolean3 = python3Target1.wantsBaseVisitor();
        java.lang.String str4 = python3Target1.getLanguage();
        java.lang.String str7 = python3Target1.getTargetStringLiteralFromString("Python3", false);
        java.lang.String str9 = python3Target1.encodeIntAsCharEscape((int) (byte) 10);
        boolean boolean10 = python3Target1.templatesExist();
        java.lang.Class<?> wildcardClass11 = python3Target1.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Python3" + "'", str4, "Python3");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Python3" + "'", str7, "Python3");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\\n" + "'", str9, "\\n");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test1141() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1141");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        boolean boolean3 = python3Target1.templatesExist();
        org.stringtemplate.v4.STGroup sTGroup4 = python3Target1.getTemplates();
        boolean boolean5 = python3Target1.supportsOverloadedMethods();
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = null;
        java.lang.String str9 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator6, "\\n", true);
        java.lang.String str11 = python3Target1.getAltLabelContextStructName("\"_tset\\\"_tsethi\\\"\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator12 = python3Target1.getCodeGenerator();
        org.antlr.v4.tool.ast.GrammarAST grammarAST13 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean14 = python3Target1.grammarSymbolCausesIssueInGeneratedCode(grammarAST13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(sTGroup4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\"\"" + "'", str9, "\"\"");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "\"_tset\\\"_tsethi\\\"\"Context" + "'", str11, "\"_tset\\\"_tsethi\\\"\"Context");
        org.junit.Assert.assertNull(codeGenerator12);
    }

    @Test
    public void test1142() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1142");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        boolean boolean3 = python3Target1.wantsBaseVisitor();
        java.lang.String str6 = python3Target1.getTargetStringLiteralFromString("_tsethi!", false);
        int int7 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str9 = python3Target1.getAltLabelContextStructName("_tset4.5.2.1");
        java.lang.String str10 = python3Target1.getLanguage();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "_tsethi!" + "'", str6, "_tsethi!");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 64 + "'", int7 == 64);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "_tset4.5.2.1Context" + "'", str9, "_tset4.5.2.1Context");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Python3" + "'", str10, "Python3");
    }

    @Test
    public void test1143() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1143");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        boolean boolean3 = python3Target1.wantsBaseVisitor();
        java.lang.String str4 = python3Target1.getLanguage();
        java.lang.String str7 = python3Target1.getTargetStringLiteralFromString("Python3", false);
        java.lang.String str10 = python3Target1.getTargetStringLiteralFromString("Python3", true);
        java.lang.String str12 = python3Target1.getImplicitSetLabel("hi!");
        java.lang.String str14 = python3Target1.getTargetStringLiteralFromString("\"Python3Contex\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator15 = python3Target1.getCodeGenerator();
        boolean boolean16 = python3Target1.wantsBaseVisitor();
        java.lang.String str19 = python3Target1.getTargetStringLiteralFromString("_tset_i", true);
        java.lang.String str21 = python3Target1.getListLabel("\"\\\"_tset\\\\\\\"ython\\\\\\\"\\\"\"");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Python3" + "'", str4, "Python3");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Python3" + "'", str7, "Python3");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\"Python3\"" + "'", str10, "\"Python3\"");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "_tsethi!" + "'", str12, "_tsethi!");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "\"\\\"Python3Contex\\\"\"" + "'", str14, "\"\\\"Python3Contex\\\"\"");
        org.junit.Assert.assertNull(codeGenerator15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "\"_tset_i\"" + "'", str19, "\"_tset_i\"");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "\"\\\"_tset\\\\\\\"ython\\\\\\\"\\\"\"" + "'", str21, "\"\\\"_tset\\\\\\\"ython\\\\\\\"\\\"\"");
    }

    @Test
    public void test1144() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1144");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        boolean boolean3 = python3Target1.wantsBaseVisitor();
        java.lang.String str4 = python3Target1.getLanguage();
        java.lang.String str7 = python3Target1.getTargetStringLiteralFromString("Python3", false);
        boolean boolean8 = python3Target1.templatesExist();
        java.lang.String str10 = python3Target1.getTargetStringLiteralFromString("hi!");
        org.stringtemplate.v4.STGroup sTGroup11 = python3Target1.getTemplates();
        boolean boolean12 = python3Target1.supportsOverloadedMethods();
        java.lang.String str14 = python3Target1.encodeIntAsCharEscape((int) (short) 100);
        java.lang.String str16 = python3Target1.getAltLabelContextStructName("\\\"\\\\\\\"_Python3\\\\\\\"\\\"");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Python3" + "'", str4, "Python3");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Python3" + "'", str7, "Python3");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\"hi!\"" + "'", str10, "\"hi!\"");
        org.junit.Assert.assertNotNull(sTGroup11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "d" + "'", str14, "d");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "\\\"\\\\\\\"_Python3\\\\\\\"\\\"Context" + "'", str16, "\\\"\\\\\\\"_Python3\\\\\\\"\\\"Context");
    }

    @Test
    public void test1145() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1145");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.lang.String str3 = python3Target1.encodeIntAsCharEscape(1);
        org.antlr.v4.codegen.CodeGenerator codeGenerator4 = null;
        java.lang.String str7 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator4, "_Python3Context", true);
        java.lang.String str9 = python3Target1.getListLabel("hi!");
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = python3Target1.getCodeGenerator();
        java.lang.String str12 = python3Target1.getAltLabelContextStructName("_tset_Python3");
        boolean boolean13 = python3Target1.templatesExist();
        org.antlr.v4.tool.Grammar grammar14 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str16 = python3Target1.getTokenTypeAsTargetLabel(grammar14, 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "\\1" + "'", str3, "\\1");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "\"Python3Contex\"" + "'", str7, "\"Python3Contex\"");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertNull(codeGenerator10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "_tset_Python3Context" + "'", str12, "_tset_Python3Context");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
    }

    @Test
    public void test1146() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1146");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.lang.String str3 = python3Target1.encodeIntAsCharEscape(1);
        java.lang.String str4 = python3Target1.getVersion();
        java.lang.String str6 = python3Target1.getImplicitRuleLabel("_tsethi!");
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = null;
        java.lang.String str10 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator7, "_Python3", false);
        org.antlr.v4.codegen.CodeGenerator codeGenerator11 = python3Target1.getCodeGenerator();
        boolean boolean12 = python3Target1.supportsOverloadedMethods();
        java.lang.String str14 = python3Target1.encodeIntAsCharEscape(64);
        java.lang.String str17 = python3Target1.getTargetStringLiteralFromString("_\"_Python3\"", false);
        java.lang.String str18 = python3Target1.getVersion();
        org.antlr.v4.tool.Grammar grammar19 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str21 = python3Target1.getTokenTypeAsTargetLabel(grammar19, (int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "\\1" + "'", str3, "\\1");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "4.5.2.1" + "'", str4, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "__tsethi!" + "'", str6, "__tsethi!");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Python" + "'", str10, "Python");
        org.junit.Assert.assertNull(codeGenerator11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "@" + "'", str14, "@");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "_\\\"_Python3\\\"" + "'", str17, "_\\\"_Python3\\\"");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "4.5.2.1" + "'", str18, "4.5.2.1");
    }

    @Test
    public void test1147() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1147");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        java.lang.String str4 = python3Target1.getListLabel("");
        boolean boolean5 = python3Target1.wantsBaseListener();
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = python3Target1.getCodeGenerator();
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = python3Target1.getCodeGenerator();
        org.stringtemplate.v4.STGroup sTGroup8 = python3Target1.getTemplates();
        java.lang.String str10 = python3Target1.getImplicitRuleLabel("\\\"_tset\\\\\\\"_tsethi\\\\\\\"\\\"");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str12 = python3Target1.getElementName("\"\\\"__\\\\\\\"___tsethi!\\\\\\\"\\\"\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(codeGenerator6);
        org.junit.Assert.assertNull(codeGenerator7);
        org.junit.Assert.assertNotNull(sTGroup8);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "_\\\"_tset\\\\\\\"_tsethi\\\\\\\"\\\"" + "'", str10, "_\\\"_tset\\\\\\\"_tsethi\\\\\\\"\\\"");
    }

    @Test
    public void test1148() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1148");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.lang.String str3 = python3Target1.encodeIntAsCharEscape(1);
        java.lang.String str4 = python3Target1.getVersion();
        java.lang.String str6 = python3Target1.getImplicitRuleLabel("_tsethi!");
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = null;
        java.lang.String str10 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator7, "_Python3", false);
        org.antlr.v4.codegen.CodeGenerator codeGenerator11 = python3Target1.getCodeGenerator();
        boolean boolean12 = python3Target1.supportsOverloadedMethods();
        java.lang.String str14 = python3Target1.encodeIntAsCharEscape(64);
        java.util.Set<java.lang.String> strSet15 = python3Target1.getBadWords();
        boolean boolean16 = python3Target1.templatesExist();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "\\1" + "'", str3, "\\1");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "4.5.2.1" + "'", str4, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "__tsethi!" + "'", str6, "__tsethi!");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Python" + "'", str10, "Python");
        org.junit.Assert.assertNull(codeGenerator11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "@" + "'", str14, "@");
        org.junit.Assert.assertNotNull(strSet15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
    }

    @Test
    public void test1149() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1149");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        java.util.Set<java.lang.String> strSet3 = python3Target1.getBadWords();
        org.stringtemplate.v4.STGroup sTGroup4 = python3Target1.getTemplates();
        java.lang.String str6 = python3Target1.getImplicitRuleLabel("\"\\\\1\"");
        org.antlr.v4.tool.Grammar grammar7 = null;
        int[] intArray8 = new int[] {};
        java.lang.String[] strArray9 = python3Target1.getTokenTypesAsTargetLabels(grammar7, intArray8);
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = python3Target1.getCodeGenerator();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str12 = python3Target1.getImplicitTokenLabel("4.5.2.1Context");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNotNull(sTGroup4);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "_\"\\\\1\"" + "'", str6, "_\"\\\\1\"");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[]");
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertNull(codeGenerator10);
    }

    @Test
    public void test1150() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1150");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.lang.String str3 = python3Target1.encodeIntAsCharEscape(1);
        java.lang.String str4 = python3Target1.getVersion();
        java.lang.String str6 = python3Target1.getImplicitRuleLabel("_tsethi!");
        java.lang.String str8 = python3Target1.encodeIntAsCharEscape((int) '#');
        org.antlr.v4.codegen.CodeGenerator codeGenerator9 = python3Target1.getCodeGenerator();
        org.antlr.v4.codegen.model.RuleFunction ruleFunction10 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str11 = python3Target1.getRuleFunctionContextStructName(ruleFunction10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "\\1" + "'", str3, "\\1");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "4.5.2.1" + "'", str4, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "__tsethi!" + "'", str6, "__tsethi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "#" + "'", str8, "#");
        org.junit.Assert.assertNull(codeGenerator9);
    }

    @Test
    public void test1151() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1151");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python3Target1.getBadWords();
        java.lang.String str4 = python3Target1.getTargetStringLiteralFromString("\"_Python3\"");
        boolean boolean5 = python3Target1.templatesExist();
        org.antlr.v4.tool.Grammar grammar6 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target8 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator7);
        boolean boolean9 = python3Target8.wantsBaseListener();
        java.lang.String str11 = python3Target8.getAltLabelContextStructName("_Python3");
        java.lang.String str13 = python3Target8.getListLabel("\"\\\\1\"");
        boolean boolean14 = python3Target8.templatesExist();
        org.antlr.v4.tool.Grammar grammar15 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator16 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target17 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator16);
        boolean boolean18 = python3Target17.wantsBaseListener();
        java.util.Set<java.lang.String> strSet19 = python3Target17.getBadWords();
        org.stringtemplate.v4.STGroup sTGroup20 = python3Target17.getTemplates();
        java.lang.String str22 = python3Target17.getImplicitRuleLabel("\"\\\\1\"");
        org.antlr.v4.tool.Grammar grammar23 = null;
        int[] intArray24 = new int[] {};
        java.lang.String[] strArray25 = python3Target17.getTokenTypesAsTargetLabels(grammar23, intArray24);
        java.lang.String[] strArray26 = python3Target8.getTokenTypesAsTargetLabels(grammar15, intArray24);
        java.lang.String[] strArray27 = python3Target1.getTokenTypesAsTargetLabels(grammar6, intArray24);
        java.lang.String str28 = python3Target1.getVersion();
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "\"\\\"_Python3\\\"\"" + "'", str4, "\"\\\"_Python3\\\"\"");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "_Python3Context" + "'", str11, "_Python3Context");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "\"\\\\1\"" + "'", str13, "\"\\\\1\"");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(strSet19);
        org.junit.Assert.assertNotNull(sTGroup20);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "_\"\\\\1\"" + "'", str22, "_\"\\\\1\"");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[]");
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "4.5.2.1" + "'", str28, "4.5.2.1");
    }

    @Test
    public void test1152() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1152");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        boolean boolean3 = python3Target1.wantsBaseVisitor();
        java.lang.String str4 = python3Target1.getLanguage();
        java.lang.String str7 = python3Target1.getTargetStringLiteralFromString("Python3", false);
        java.lang.String str10 = python3Target1.getTargetStringLiteralFromString("Python3", true);
        java.lang.String str12 = python3Target1.getImplicitSetLabel("hi!");
        java.lang.String str14 = python3Target1.getTargetStringLiteralFromString("\"Python3Contex\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator15 = python3Target1.getCodeGenerator();
        boolean boolean16 = python3Target1.wantsBaseVisitor();
        int int17 = python3Target1.getInlineTestSetWordSize();
        org.antlr.v4.tool.ast.GrammarAST grammarAST18 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean19 = python3Target1.grammarSymbolCausesIssueInGeneratedCode(grammarAST18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Python3" + "'", str4, "Python3");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Python3" + "'", str7, "Python3");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\"Python3\"" + "'", str10, "\"Python3\"");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "_tsethi!" + "'", str12, "_tsethi!");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "\"\\\"Python3Contex\\\"\"" + "'", str14, "\"\\\"Python3Contex\\\"\"");
        org.junit.Assert.assertNull(codeGenerator15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 64 + "'", int17 == 64);
    }

    @Test
    public void test1153() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1153");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        java.lang.String str4 = python3Target1.getAltLabelContextStructName("_Python3");
        org.antlr.v4.codegen.CodeGenerator codeGenerator5 = null;
        java.lang.String str8 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator5, "__tsethi!", false);
        java.lang.String str10 = python3Target1.encodeIntAsCharEscape((int) (short) 100);
        boolean boolean11 = python3Target1.supportsOverloadedMethods();
        java.lang.String str13 = python3Target1.getImplicitSetLabel("_tset__tset_Python3Context");
        java.lang.String str15 = python3Target1.getListLabel("");
        java.lang.String str17 = python3Target1.encodeIntAsCharEscape(64);
        int int18 = python3Target1.getSerializedATNSegmentLimit();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "_Python3Context" + "'", str4, "_Python3Context");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "_tsethi" + "'", str8, "_tsethi");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "d" + "'", str10, "d");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "_tset_tset__tset_Python3Context" + "'", str13, "_tset_tset__tset_Python3Context");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "@" + "'", str17, "@");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 29 + "'", int18 == 29);
    }

    @Test
    public void test1154() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1154");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        boolean boolean3 = python3Target1.wantsBaseVisitor();
        java.lang.String str4 = python3Target1.getLanguage();
        java.lang.String str7 = python3Target1.getTargetStringLiteralFromString("Python3", false);
        boolean boolean8 = python3Target1.templatesExist();
        org.stringtemplate.v4.STGroup sTGroup9 = python3Target1.getTemplates();
        boolean boolean10 = python3Target1.supportsOverloadedMethods();
        java.lang.String str11 = python3Target1.getVersion();
        java.lang.String str12 = python3Target1.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator13 = python3Target1.getCodeGenerator();
        java.lang.String str15 = python3Target1.encodeIntAsCharEscape((int) '#');
        java.lang.String str17 = python3Target1.getImplicitSetLabel(".5.2.");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Python3" + "'", str4, "Python3");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Python3" + "'", str7, "Python3");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(sTGroup9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "4.5.2.1" + "'", str11, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Python3" + "'", str12, "Python3");
        org.junit.Assert.assertNull(codeGenerator13);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "#" + "'", str15, "#");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "_tset.5.2." + "'", str17, "_tset.5.2.");
    }

    @Test
    public void test1155() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1155");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        java.lang.String str4 = python3Target1.getListLabel("");
        boolean boolean5 = python3Target1.wantsBaseListener();
        java.lang.String str7 = python3Target1.getImplicitRuleLabel("__tset_Python3Context");
        org.antlr.v4.tool.ast.GrammarAST grammarAST8 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean9 = python3Target1.grammarSymbolCausesIssueInGeneratedCode(grammarAST8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "___tset_Python3Context" + "'", str7, "___tset_Python3Context");
    }

    @Test
    public void test1156() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1156");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.lang.String str3 = python3Target1.encodeIntAsCharEscape(1);
        java.lang.String str4 = python3Target1.getVersion();
        java.lang.String str6 = python3Target1.getImplicitRuleLabel("_tsethi!");
        boolean boolean7 = python3Target1.templatesExist();
        boolean boolean8 = python3Target1.wantsBaseVisitor();
        boolean boolean9 = python3Target1.templatesExist();
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = python3Target1.getCodeGenerator();
        org.antlr.v4.tool.ast.GrammarAST grammarAST11 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean12 = python3Target1.grammarSymbolCausesIssueInGeneratedCode(grammarAST11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "\\1" + "'", str3, "\\1");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "4.5.2.1" + "'", str4, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "__tsethi!" + "'", str6, "__tsethi!");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNull(codeGenerator10);
    }

    @Test
    public void test1157() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1157");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        boolean boolean3 = python3Target1.wantsBaseVisitor();
        java.lang.String str4 = python3Target1.getLanguage();
        java.lang.String str7 = python3Target1.getTargetStringLiteralFromString("Python3", false);
        boolean boolean8 = python3Target1.templatesExist();
        java.lang.String str9 = python3Target1.getLanguage();
        boolean boolean10 = python3Target1.wantsBaseVisitor();
        int int11 = python3Target1.getSerializedATNSegmentLimit();
        boolean boolean12 = python3Target1.wantsBaseVisitor();
        java.lang.String str13 = python3Target1.getVersion();
        int int14 = python3Target1.getSerializedATNSegmentLimit();
        java.lang.String str17 = python3Target1.getTargetStringLiteralFromString("4.5.2.1", true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Python3" + "'", str4, "Python3");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Python3" + "'", str7, "Python3");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Python3" + "'", str9, "Python3");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 29 + "'", int11 == 29);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "4.5.2.1" + "'", str13, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 29 + "'", int14 == 29);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "\"4.5.2.1\"" + "'", str17, "\"4.5.2.1\"");
    }

    @Test
    public void test1158() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1158");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        java.lang.String str4 = python3Target1.getAltLabelContextStructName("_Python3");
        org.antlr.v4.codegen.CodeGenerator codeGenerator5 = null;
        java.lang.String str8 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator5, "__tsethi!", false);
        boolean boolean9 = python3Target1.wantsBaseListener();
        java.lang.String str11 = python3Target1.getImplicitSetLabel("");
        java.lang.String str13 = python3Target1.getListLabel("_\\\"hi!\\\"");
        boolean boolean14 = python3Target1.templatesExist();
        java.lang.String str17 = python3Target1.getTargetStringLiteralFromString("\"\\\\1\"", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator18 = python3Target1.getCodeGenerator();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "_Python3Context" + "'", str4, "_Python3Context");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "_tsethi" + "'", str8, "_tsethi");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "_tset" + "'", str11, "_tset");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "_\\\"hi!\\\"" + "'", str13, "_\\\"hi!\\\"");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "\"\\\"\\\\\\\\1\\\"\"" + "'", str17, "\"\\\"\\\\\\\\1\\\"\"");
        org.junit.Assert.assertNull(codeGenerator18);
    }

    @Test
    public void test1159() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1159");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        java.lang.String str4 = python3Target1.getAltLabelContextStructName("_Python3");
        org.antlr.v4.codegen.CodeGenerator codeGenerator5 = null;
        java.lang.String str8 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator5, "__tsethi!", false);
        java.lang.String str10 = python3Target1.encodeIntAsCharEscape((int) (short) 100);
        boolean boolean11 = python3Target1.supportsOverloadedMethods();
        int int12 = python3Target1.getInlineTestSetWordSize();
        int int13 = python3Target1.getSerializedATNSegmentLimit();
        java.lang.String str15 = python3Target1.getAltLabelContextStructName("\"hi!\"");
        int int16 = python3Target1.getSerializedATNSegmentLimit();
        java.util.Set<java.lang.String> strSet17 = python3Target1.getBadWords();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str19 = python3Target1.getImplicitTokenLabel("\"_tset\\\"_tsethi\\\"\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "_Python3Context" + "'", str4, "_Python3Context");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "_tsethi" + "'", str8, "_tsethi");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "d" + "'", str10, "d");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 64 + "'", int12 == 64);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 29 + "'", int13 == 29);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "\"hi!\"Context" + "'", str15, "\"hi!\"Context");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 29 + "'", int16 == 29);
        org.junit.Assert.assertNotNull(strSet17);
    }

    @Test
    public void test1160() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1160");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.lang.String str3 = python3Target1.encodeIntAsCharEscape(1);
        java.lang.String str4 = python3Target1.getVersion();
        java.lang.String str6 = python3Target1.getImplicitRuleLabel("_tsethi!");
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = null;
        java.lang.String str10 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator7, "_Python3", false);
        org.antlr.v4.codegen.CodeGenerator codeGenerator11 = python3Target1.getCodeGenerator();
        boolean boolean12 = python3Target1.supportsOverloadedMethods();
        boolean boolean13 = python3Target1.templatesExist();
        java.lang.String str14 = python3Target1.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup15 = python3Target1.getTemplates();
        java.lang.String str17 = python3Target1.getTargetStringLiteralFromString("\"hi!\"");
        java.lang.String str19 = python3Target1.getImplicitRuleLabel("\"\\\"_Python\\\"\"");
        org.antlr.v4.tool.ast.GrammarAST grammarAST20 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str21 = python3Target1.getLoopLabel(grammarAST20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "\\1" + "'", str3, "\\1");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "4.5.2.1" + "'", str4, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "__tsethi!" + "'", str6, "__tsethi!");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Python" + "'", str10, "Python");
        org.junit.Assert.assertNull(codeGenerator11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Python3" + "'", str14, "Python3");
        org.junit.Assert.assertNotNull(sTGroup15);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "\"\\\"hi!\\\"\"" + "'", str17, "\"\\\"hi!\\\"\"");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "_\"\\\"_Python\\\"\"" + "'", str19, "_\"\\\"_Python\\\"\"");
    }

    @Test
    public void test1161() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1161");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        boolean boolean3 = python3Target1.wantsBaseVisitor();
        java.lang.String str4 = python3Target1.getLanguage();
        java.lang.String str7 = python3Target1.getTargetStringLiteralFromString("Python3", false);
        java.lang.String str10 = python3Target1.getTargetStringLiteralFromString("Python3", true);
        java.lang.String str12 = python3Target1.getImplicitSetLabel("hi!");
        java.lang.String str14 = python3Target1.getTargetStringLiteralFromString("\"Python3Contex\"");
        java.lang.String str15 = python3Target1.getLanguage();
        org.antlr.v4.tool.Rule rule16 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str17 = python3Target1.getRuleFunctionContextStructName(rule16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Python3" + "'", str4, "Python3");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Python3" + "'", str7, "Python3");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\"Python3\"" + "'", str10, "\"Python3\"");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "_tsethi!" + "'", str12, "_tsethi!");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "\"\\\"Python3Contex\\\"\"" + "'", str14, "\"\\\"Python3Contex\\\"\"");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Python3" + "'", str15, "Python3");
    }

    @Test
    public void test1162() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1162");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        java.lang.String str4 = python3Target1.getAltLabelContextStructName("_Python3");
        java.lang.String str6 = python3Target1.getImplicitSetLabel("i");
        boolean boolean7 = python3Target1.templatesExist();
        org.antlr.v4.tool.Grammar grammar8 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator9 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target10 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator9);
        boolean boolean11 = python3Target10.wantsBaseListener();
        org.antlr.v4.codegen.CodeGenerator codeGenerator12 = python3Target10.getCodeGenerator();
        java.lang.String str15 = python3Target10.getTargetStringLiteralFromString("\\n", false);
        org.antlr.v4.tool.Grammar grammar16 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator17 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target18 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator17);
        boolean boolean19 = python3Target18.wantsBaseListener();
        java.util.Set<java.lang.String> strSet20 = python3Target18.getBadWords();
        org.stringtemplate.v4.STGroup sTGroup21 = python3Target18.getTemplates();
        java.lang.String str23 = python3Target18.getImplicitRuleLabel("\"\\\\1\"");
        org.antlr.v4.tool.Grammar grammar24 = null;
        int[] intArray25 = new int[] {};
        java.lang.String[] strArray26 = python3Target18.getTokenTypesAsTargetLabels(grammar24, intArray25);
        java.lang.String[] strArray27 = python3Target10.getTokenTypesAsTargetLabels(grammar16, intArray25);
        java.lang.String[] strArray28 = python3Target1.getTokenTypesAsTargetLabels(grammar8, intArray25);
        java.lang.String str30 = python3Target1.getListLabel("_\\\"___tsethi!\\\"Contex");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "_Python3Context" + "'", str4, "_Python3Context");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "_tseti" + "'", str6, "_tseti");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(codeGenerator12);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "\\\\n" + "'", str15, "\\\\n");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(strSet20);
        org.junit.Assert.assertNotNull(sTGroup21);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "_\"\\\\1\"" + "'", str23, "_\"\\\\1\"");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[]");
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "_\\\"___tsethi!\\\"Contex" + "'", str30, "_\\\"___tsethi!\\\"Contex");
    }

    @Test
    public void test1163() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1163");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        boolean boolean3 = python3Target1.wantsBaseVisitor();
        java.lang.String str4 = python3Target1.getLanguage();
        java.lang.String str6 = python3Target1.getTargetStringLiteralFromString("\"Python3Contex\"");
        java.lang.String str8 = python3Target1.getImplicitRuleLabel("_\"___tsethi!\"");
        boolean boolean9 = python3Target1.supportsOverloadedMethods();
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = python3Target1.getCodeGenerator();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Python3" + "'", str4, "Python3");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\"\\\"Python3Contex\\\"\"" + "'", str6, "\"\\\"Python3Contex\\\"\"");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "__\"___tsethi!\"" + "'", str8, "__\"___tsethi!\"");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(codeGenerator10);
    }

    @Test
    public void test1164() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1164");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.lang.String str3 = python3Target1.encodeIntAsCharEscape(1);
        java.lang.String str5 = python3Target1.encodeIntAsCharEscape((int) (short) 1);
        boolean boolean6 = python3Target1.wantsBaseVisitor();
        boolean boolean7 = python3Target1.templatesExist();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "\\1" + "'", str3, "\\1");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "\\1" + "'", str5, "\\1");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
    }

    @Test
    public void test1165() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1165");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        java.lang.String str4 = python3Target1.getAltLabelContextStructName("_Python3");
        java.lang.String str6 = python3Target1.getImplicitSetLabel("i");
        java.lang.String str7 = python3Target1.getLanguage();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str9 = python3Target1.getAltLabelContextStructName("");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 0");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "_Python3Context" + "'", str4, "_Python3Context");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "_tseti" + "'", str6, "_tseti");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Python3" + "'", str7, "Python3");
    }

    @Test
    public void test1166() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1166");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python3Target1.getBadWords();
        java.lang.String str4 = python3Target1.getTargetStringLiteralFromString("\"_Python3\"");
        boolean boolean5 = python3Target1.templatesExist();
        boolean boolean6 = python3Target1.templatesExist();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str8 = python3Target1.getElementListName("___tset_Python3Context");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "\"\\\"_Python3\\\"\"" + "'", str4, "\"\\\"_Python3\\\"\"");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
    }

    @Test
    public void test1167() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1167");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        org.antlr.v4.codegen.CodeGenerator codeGenerator2 = null;
        java.lang.String str5 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator2, "_Python3Context", true);
        java.lang.String str7 = python3Target1.getListLabel("Python");
        boolean boolean8 = python3Target1.supportsOverloadedMethods();
        boolean boolean9 = python3Target1.templatesExist();
        int int10 = python3Target1.getSerializedATNSegmentLimit();
        java.util.Set<java.lang.String> strSet11 = python3Target1.getBadWords();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "\"Python3Contex\"" + "'", str5, "\"Python3Contex\"");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Python" + "'", str7, "Python");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 29 + "'", int10 == 29);
        org.junit.Assert.assertNotNull(strSet11);
    }

    @Test
    public void test1168() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1168");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        boolean boolean3 = python3Target1.templatesExist();
        org.stringtemplate.v4.STGroup sTGroup4 = python3Target1.getTemplates();
        boolean boolean5 = python3Target1.supportsOverloadedMethods();
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = null;
        java.lang.String str9 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator6, "\\n", true);
        java.lang.String str11 = python3Target1.getTargetStringLiteralFromString("__tset\\64");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(sTGroup4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\"\"" + "'", str9, "\"\"");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "\"__tset\\\\64\"" + "'", str11, "\"__tset\\\\64\"");
    }

    @Test
    public void test1169() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1169");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        boolean boolean3 = python3Target1.templatesExist();
        org.stringtemplate.v4.STGroup sTGroup4 = python3Target1.getTemplates();
        boolean boolean5 = python3Target1.supportsOverloadedMethods();
        java.lang.String str8 = python3Target1.getTargetStringLiteralFromString("_tsethi", false);
        java.lang.String str10 = python3Target1.getTargetStringLiteralFromString("\\\"hi!\\\"");
        boolean boolean11 = python3Target1.wantsBaseVisitor();
        java.lang.String str12 = python3Target1.getVersion();
        org.antlr.v4.tool.ast.GrammarAST grammarAST13 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str14 = python3Target1.getLoopLabel(grammarAST13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(sTGroup4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "_tsethi" + "'", str8, "_tsethi");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\"\\\\\\\"hi!\\\\\\\"\"" + "'", str10, "\"\\\\\\\"hi!\\\\\\\"\"");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "4.5.2.1" + "'", str12, "4.5.2.1");
    }

    @Test
    public void test1170() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1170");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        org.antlr.v4.codegen.CodeGenerator codeGenerator2 = null;
        java.lang.String str5 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator2, "_Python3Context", true);
        java.lang.String str7 = python3Target1.getListLabel("Python");
        java.lang.String str9 = python3Target1.encodeIntAsCharEscape((int) (byte) 0);
        java.lang.String str12 = python3Target1.getTargetStringLiteralFromString("tset4.5.2.", false);
        boolean boolean13 = python3Target1.wantsBaseListener();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "\"Python3Contex\"" + "'", str5, "\"Python3Contex\"");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Python" + "'", str7, "Python");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\\0" + "'", str9, "\\0");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "tset4.5.2." + "'", str12, "tset4.5.2.");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test1171() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1171");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        boolean boolean3 = python3Target1.wantsBaseVisitor();
        java.lang.String str4 = python3Target1.getLanguage();
        java.lang.String str7 = python3Target1.getTargetStringLiteralFromString("Python3", false);
        java.lang.String str10 = python3Target1.getTargetStringLiteralFromString("Python3", true);
        java.lang.String str12 = python3Target1.getImplicitSetLabel("hi!");
        java.lang.String str14 = python3Target1.getTargetStringLiteralFromString("\"Python3Contex\"");
        java.lang.String str17 = python3Target1.getTargetStringLiteralFromString("4.5.2.1", true);
        int int18 = python3Target1.getInlineTestSetWordSize();
        int int19 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str21 = python3Target1.getListLabel("\"\\\"_tset_\\\\\\\"\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\1\\\\\\\\\\\\\\\"\\\\\\\"\\\"\"");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Python3" + "'", str4, "Python3");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Python3" + "'", str7, "Python3");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\"Python3\"" + "'", str10, "\"Python3\"");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "_tsethi!" + "'", str12, "_tsethi!");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "\"\\\"Python3Contex\\\"\"" + "'", str14, "\"\\\"Python3Contex\\\"\"");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "\"4.5.2.1\"" + "'", str17, "\"4.5.2.1\"");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 64 + "'", int18 == 64);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 64 + "'", int19 == 64);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "\"\\\"_tset_\\\\\\\"\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\1\\\\\\\\\\\\\\\"\\\\\\\"\\\"\"" + "'", str21, "\"\\\"_tset_\\\\\\\"\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\1\\\\\\\\\\\\\\\"\\\\\\\"\\\"\"");
    }

    @Test
    public void test1172() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1172");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.lang.String str3 = python3Target1.encodeIntAsCharEscape(1);
        java.lang.String str4 = python3Target1.getVersion();
        java.lang.String str6 = python3Target1.getImplicitRuleLabel("_tsethi!");
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = null;
        java.lang.String str10 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator7, "_Python3", false);
        java.lang.String str12 = python3Target1.getAltLabelContextStructName("\"hi!\"Context");
        java.lang.String str14 = python3Target1.getAltLabelContextStructName("_hi!");
        java.lang.String str16 = python3Target1.getListLabel("__tset\"\\\"\\\\\\\\1\\\"\"");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "\\1" + "'", str3, "\\1");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "4.5.2.1" + "'", str4, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "__tsethi!" + "'", str6, "__tsethi!");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Python" + "'", str10, "Python");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "\"hi!\"ContextContext" + "'", str12, "\"hi!\"ContextContext");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "_hi!Context" + "'", str14, "_hi!Context");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "__tset\"\\\"\\\\\\\\1\\\"\"" + "'", str16, "__tset\"\\\"\\\\\\\\1\\\"\"");
    }

    @Test
    public void test1173() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1173");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        java.lang.String str4 = python3Target1.getListLabel("");
        boolean boolean5 = python3Target1.supportsOverloadedMethods();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str7 = python3Target1.getImplicitTokenLabel("YthonContext");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
    }

    @Test
    public void test1174() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1174");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.lang.String str3 = python3Target1.encodeIntAsCharEscape(1);
        org.stringtemplate.v4.STGroup sTGroup4 = python3Target1.getTemplates();
        java.lang.String str6 = python3Target1.getImplicitRuleLabel(".5.2.");
        java.lang.String str9 = python3Target1.getTargetStringLiteralFromString("Python3Context", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = python3Target1.getCodeGenerator();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str12 = python3Target1.getImplicitTokenLabel("\\\\1Context");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "\\1" + "'", str3, "\\1");
        org.junit.Assert.assertNotNull(sTGroup4);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "_.5.2." + "'", str6, "_.5.2.");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\"Python3Context\"" + "'", str9, "\"Python3Context\"");
        org.junit.Assert.assertNull(codeGenerator10);
    }

    @Test
    public void test1175() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1175");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.lang.String str3 = python3Target1.encodeIntAsCharEscape(1);
        org.antlr.v4.codegen.CodeGenerator codeGenerator4 = null;
        java.lang.String str7 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator4, "_Python3Context", true);
        java.lang.String str9 = python3Target1.getListLabel("hi!");
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = python3Target1.getCodeGenerator();
        java.lang.String str12 = python3Target1.getAltLabelContextStructName("_tset_Python3");
        java.lang.String str14 = python3Target1.getImplicitSetLabel("4.5.2.1");
        org.antlr.v4.tool.Grammar grammar15 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator16 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target17 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator16);
        boolean boolean18 = python3Target17.wantsBaseListener();
        java.lang.String str20 = python3Target17.getAltLabelContextStructName("_Python3");
        org.antlr.v4.codegen.CodeGenerator codeGenerator21 = null;
        java.lang.String str24 = python3Target17.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator21, "__tsethi!", false);
        java.lang.String str26 = python3Target17.encodeIntAsCharEscape((int) (short) 100);
        boolean boolean27 = python3Target17.supportsOverloadedMethods();
        int int28 = python3Target17.getInlineTestSetWordSize();
        int int29 = python3Target17.getSerializedATNSegmentLimit();
        int int30 = python3Target17.getInlineTestSetWordSize();
        int int31 = python3Target17.getSerializedATNSegmentLimit();
        java.lang.String str33 = python3Target17.getImplicitSetLabel("\\n");
        java.lang.String str35 = python3Target17.getAltLabelContextStructName("_tset_Python3Context");
        org.antlr.v4.tool.Grammar grammar36 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator37 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target38 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator37);
        java.lang.String str40 = python3Target38.encodeIntAsCharEscape(1);
        java.lang.String str41 = python3Target38.getVersion();
        java.lang.String str43 = python3Target38.getImplicitRuleLabel("_tsethi!");
        org.antlr.v4.codegen.CodeGenerator codeGenerator44 = null;
        java.lang.String str47 = python3Target38.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator44, "_Python3", false);
        org.antlr.v4.codegen.CodeGenerator codeGenerator48 = python3Target38.getCodeGenerator();
        boolean boolean49 = python3Target38.supportsOverloadedMethods();
        java.lang.String str51 = python3Target38.encodeIntAsCharEscape(64);
        org.antlr.v4.tool.Grammar grammar52 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator53 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target54 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator53);
        java.lang.String str56 = python3Target54.encodeIntAsCharEscape(1);
        java.lang.String str57 = python3Target54.getVersion();
        java.lang.String str59 = python3Target54.getImplicitRuleLabel("_tsethi!");
        java.lang.String str61 = python3Target54.getImplicitRuleLabel("__tsethi!");
        org.antlr.v4.codegen.CodeGenerator codeGenerator62 = python3Target54.getCodeGenerator();
        boolean boolean63 = python3Target54.supportsOverloadedMethods();
        java.lang.String str66 = python3Target54.getTargetStringLiteralFromString("\"_Python3\"", true);
        java.util.Set<java.lang.String> strSet67 = python3Target54.getBadWords();
        org.antlr.v4.tool.Grammar grammar68 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator69 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target70 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator69);
        boolean boolean71 = python3Target70.wantsBaseListener();
        org.antlr.v4.codegen.CodeGenerator codeGenerator72 = python3Target70.getCodeGenerator();
        java.lang.String str75 = python3Target70.getTargetStringLiteralFromString("\\n", false);
        org.antlr.v4.tool.Grammar grammar76 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator77 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target78 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator77);
        boolean boolean79 = python3Target78.wantsBaseListener();
        java.util.Set<java.lang.String> strSet80 = python3Target78.getBadWords();
        org.stringtemplate.v4.STGroup sTGroup81 = python3Target78.getTemplates();
        java.lang.String str83 = python3Target78.getImplicitRuleLabel("\"\\\\1\"");
        org.antlr.v4.tool.Grammar grammar84 = null;
        int[] intArray85 = new int[] {};
        java.lang.String[] strArray86 = python3Target78.getTokenTypesAsTargetLabels(grammar84, intArray85);
        java.lang.String[] strArray87 = python3Target70.getTokenTypesAsTargetLabels(grammar76, intArray85);
        java.lang.String[] strArray88 = python3Target54.getTokenTypesAsTargetLabels(grammar68, intArray85);
        java.lang.String[] strArray89 = python3Target38.getTokenTypesAsTargetLabels(grammar52, intArray85);
        java.lang.String[] strArray90 = python3Target17.getTokenTypesAsTargetLabels(grammar36, intArray85);
        java.lang.String[] strArray91 = python3Target1.getTokenTypesAsTargetLabels(grammar15, intArray85);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "\\1" + "'", str3, "\\1");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "\"Python3Contex\"" + "'", str7, "\"Python3Contex\"");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertNull(codeGenerator10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "_tset_Python3Context" + "'", str12, "_tset_Python3Context");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "_tset4.5.2.1" + "'", str14, "_tset4.5.2.1");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "_Python3Context" + "'", str20, "_Python3Context");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "_tsethi" + "'", str24, "_tsethi");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "d" + "'", str26, "d");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 64 + "'", int28 == 64);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 29 + "'", int29 == 29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 64 + "'", int30 == 64);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 29 + "'", int31 == 29);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "_tset\\n" + "'", str33, "_tset\\n");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "_tset_Python3ContextContext" + "'", str35, "_tset_Python3ContextContext");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "\\1" + "'", str40, "\\1");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "4.5.2.1" + "'", str41, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "__tsethi!" + "'", str43, "__tsethi!");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "Python" + "'", str47, "Python");
        org.junit.Assert.assertNull(codeGenerator48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "@" + "'", str51, "@");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "\\1" + "'", str56, "\\1");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "4.5.2.1" + "'", str57, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "__tsethi!" + "'", str59, "__tsethi!");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "___tsethi!" + "'", str61, "___tsethi!");
        org.junit.Assert.assertNull(codeGenerator62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "\"\\\"_Python3\\\"\"" + "'", str66, "\"\\\"_Python3\\\"\"");
        org.junit.Assert.assertNotNull(strSet67);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNull(codeGenerator72);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "\\\\n" + "'", str75, "\\\\n");
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(strSet80);
        org.junit.Assert.assertNotNull(sTGroup81);
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "_\"\\\\1\"" + "'", str83, "_\"\\\\1\"");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[]");
        org.junit.Assert.assertNotNull(strArray86);
        org.junit.Assert.assertNotNull(strArray87);
        org.junit.Assert.assertNotNull(strArray88);
        org.junit.Assert.assertNotNull(strArray89);
        org.junit.Assert.assertNotNull(strArray90);
        org.junit.Assert.assertNotNull(strArray91);
    }

    @Test
    public void test1176() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1176");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        java.util.Set<java.lang.String> strSet3 = python3Target1.getBadWords();
        org.stringtemplate.v4.STGroup sTGroup4 = python3Target1.getTemplates();
        java.lang.String str6 = python3Target1.getListLabel("_Python3Context");
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = python3Target1.getCodeGenerator();
        java.util.Set<java.lang.String> strSet8 = python3Target1.getBadWords();
        int int9 = python3Target1.getSerializedATNSegmentLimit();
        boolean boolean10 = python3Target1.wantsBaseVisitor();
        org.antlr.v4.codegen.model.RuleFunction ruleFunction11 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str12 = python3Target1.getRuleFunctionContextStructName(ruleFunction11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNotNull(sTGroup4);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "_Python3Context" + "'", str6, "_Python3Context");
        org.junit.Assert.assertNull(codeGenerator7);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 29 + "'", int9 == 29);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test1177() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1177");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        boolean boolean3 = python3Target1.wantsBaseVisitor();
        java.lang.String str4 = python3Target1.getLanguage();
        java.lang.String str7 = python3Target1.getTargetStringLiteralFromString("Python3", false);
        java.lang.String str9 = python3Target1.getImplicitRuleLabel("Python3");
        java.lang.String str11 = python3Target1.getListLabel("");
        org.antlr.v4.codegen.CodeGenerator codeGenerator12 = null;
        java.lang.String str15 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator12, "\"__\\\"___tsethi!\\\"Context\"", true);
        java.lang.String str17 = python3Target1.getTargetStringLiteralFromString("__\"\\\\1\"");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str19 = python3Target1.encodeIntAsCharEscape((int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot encode the specified value: -1");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Python3" + "'", str4, "Python3");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Python3" + "'", str7, "Python3");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "_Python3" + "'", str9, "_Python3");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "\"__\\\"___tsethi!\\\"Context\"" + "'", str15, "\"__\\\"___tsethi!\\\"Context\"");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "\"__\\\"\\\\\\\\1\\\"\"" + "'", str17, "\"__\\\"\\\\\\\\1\\\"\"");
    }

    @Test
    public void test1178() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1178");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        boolean boolean3 = python3Target1.wantsBaseVisitor();
        java.lang.String str4 = python3Target1.getLanguage();
        java.lang.String str7 = python3Target1.getTargetStringLiteralFromString("Python3", false);
        java.lang.String str9 = python3Target1.getImplicitRuleLabel("Python3");
        org.stringtemplate.v4.STGroup sTGroup10 = python3Target1.getTemplates();
        java.lang.String str12 = python3Target1.getImplicitSetLabel("PythonContext");
        java.lang.String str13 = python3Target1.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator14 = null;
        java.lang.String str17 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator14, "tsethi", false);
        org.antlr.v4.codegen.CodeGenerator codeGenerator18 = python3Target1.getCodeGenerator();
        java.lang.String str20 = python3Target1.encodeIntAsCharEscape(64);
        java.lang.Class<?> wildcardClass21 = python3Target1.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Python3" + "'", str4, "Python3");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Python3" + "'", str7, "Python3");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "_Python3" + "'", str9, "_Python3");
        org.junit.Assert.assertNotNull(sTGroup10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "_tsetPythonContext" + "'", str12, "_tsetPythonContext");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Python3" + "'", str13, "Python3");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "seth" + "'", str17, "seth");
        org.junit.Assert.assertNull(codeGenerator18);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "@" + "'", str20, "@");
        org.junit.Assert.assertNotNull(wildcardClass21);
    }

    @Test
    public void test1179() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1179");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.lang.String str3 = python3Target1.encodeIntAsCharEscape(1);
        java.lang.String str4 = python3Target1.getVersion();
        java.lang.String str6 = python3Target1.getImplicitRuleLabel("_tsethi!");
        java.lang.String str8 = python3Target1.getImplicitRuleLabel("__tsethi!");
        org.antlr.v4.codegen.CodeGenerator codeGenerator9 = python3Target1.getCodeGenerator();
        java.lang.String str10 = python3Target1.getLanguage();
        java.lang.String str12 = python3Target1.encodeIntAsCharEscape(1);
        boolean boolean13 = python3Target1.wantsBaseListener();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "\\1" + "'", str3, "\\1");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "4.5.2.1" + "'", str4, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "__tsethi!" + "'", str6, "__tsethi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "___tsethi!" + "'", str8, "___tsethi!");
        org.junit.Assert.assertNull(codeGenerator9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Python3" + "'", str10, "Python3");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "\\1" + "'", str12, "\\1");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test1180() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1180");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        boolean boolean3 = python3Target1.templatesExist();
        org.stringtemplate.v4.STGroup sTGroup4 = python3Target1.getTemplates();
        int int5 = python3Target1.getInlineTestSetWordSize();
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = python3Target1.getCodeGenerator();
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = null;
        java.lang.String str10 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator7, "hi!", false);
        java.lang.String str13 = python3Target1.getTargetStringLiteralFromString("_\"\\\"Python3Contex\\\"\"", true);
        boolean boolean14 = python3Target1.supportsOverloadedMethods();
        java.lang.String str16 = python3Target1.getTargetStringLiteralFromString("tset");
        org.antlr.v4.tool.ast.GrammarAST grammarAST17 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean18 = python3Target1.grammarSymbolCausesIssueInGeneratedCode(grammarAST17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(sTGroup4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 64 + "'", int5 == 64);
        org.junit.Assert.assertNull(codeGenerator6);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "i" + "'", str10, "i");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "\"_\\\"\\\\\\\"Python3Contex\\\\\\\"\\\"\"" + "'", str13, "\"_\\\"\\\\\\\"Python3Contex\\\\\\\"\\\"\"");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "\"tset\"" + "'", str16, "\"tset\"");
    }

    @Test
    public void test1181() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1181");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        boolean boolean3 = python3Target1.templatesExist();
        org.stringtemplate.v4.STGroup sTGroup4 = python3Target1.getTemplates();
        org.stringtemplate.v4.STGroup sTGroup5 = python3Target1.getTemplates();
        java.lang.String str7 = python3Target1.encodeIntAsCharEscape(64);
        boolean boolean8 = python3Target1.wantsBaseVisitor();
        int int9 = python3Target1.getSerializedATNSegmentLimit();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(sTGroup4);
        org.junit.Assert.assertNotNull(sTGroup5);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "@" + "'", str7, "@");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 29 + "'", int9 == 29);
    }

    @Test
    public void test1182() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1182");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        java.util.Set<java.lang.String> strSet3 = python3Target1.getBadWords();
        java.util.Set<java.lang.String> strSet4 = python3Target1.getBadWords();
        java.lang.String str6 = python3Target1.getImplicitRuleLabel("\\\"\\\"Python3Contex\\\"");
        java.lang.String str7 = python3Target1.getVersion();
        boolean boolean8 = python3Target1.wantsBaseListener();
        int int9 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str10 = python3Target1.getLanguage();
        org.antlr.v4.tool.Grammar grammar11 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str13 = python3Target1.getTokenTypeAsTargetLabel(grammar11, 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "_\\\"\\\"Python3Contex\\\"" + "'", str6, "_\\\"\\\"Python3Contex\\\"");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "4.5.2.1" + "'", str7, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 64 + "'", int9 == 64);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Python3" + "'", str10, "Python3");
    }

    @Test
    public void test1183() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1183");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.lang.String str3 = python3Target1.encodeIntAsCharEscape(1);
        java.lang.String str4 = python3Target1.getVersion();
        java.lang.String str6 = python3Target1.getImplicitRuleLabel("_tsethi!");
        java.lang.String str8 = python3Target1.getImplicitRuleLabel("__tsethi!");
        org.antlr.v4.codegen.CodeGenerator codeGenerator9 = python3Target1.getCodeGenerator();
        boolean boolean10 = python3Target1.wantsBaseVisitor();
        org.antlr.v4.codegen.CodeGenerator codeGenerator11 = null;
        java.lang.String str14 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator11, "_ ", true);
        java.lang.String str15 = python3Target1.getLanguage();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str17 = python3Target1.encodeIntAsCharEscape((int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot encode the specified value: -1");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "\\1" + "'", str3, "\\1");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "4.5.2.1" + "'", str4, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "__tsethi!" + "'", str6, "__tsethi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "___tsethi!" + "'", str8, "___tsethi!");
        org.junit.Assert.assertNull(codeGenerator9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "\"\"" + "'", str14, "\"\"");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Python3" + "'", str15, "Python3");
    }

    @Test
    public void test1184() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1184");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        boolean boolean3 = python3Target1.templatesExist();
        org.stringtemplate.v4.STGroup sTGroup4 = python3Target1.getTemplates();
        org.stringtemplate.v4.STGroup sTGroup5 = python3Target1.getTemplates();
        java.lang.String str8 = python3Target1.getTargetStringLiteralFromString("_tset\"_tsethi\"", true);
        java.lang.String str9 = python3Target1.getVersion();
        org.antlr.v4.codegen.model.RuleFunction ruleFunction10 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str11 = python3Target1.getRuleFunctionContextStructName(ruleFunction10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(sTGroup4);
        org.junit.Assert.assertNotNull(sTGroup5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\"_tset\\\"_tsethi\\\"\"" + "'", str8, "\"_tset\\\"_tsethi\\\"\"");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "4.5.2.1" + "'", str9, "4.5.2.1");
    }

    @Test
    public void test1185() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1185");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        java.lang.String str4 = python3Target1.getAltLabelContextStructName("_Python3");
        org.antlr.v4.codegen.CodeGenerator codeGenerator5 = null;
        java.lang.String str8 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator5, "__tsethi!", false);
        java.lang.String str10 = python3Target1.encodeIntAsCharEscape((int) (short) 100);
        boolean boolean11 = python3Target1.supportsOverloadedMethods();
        java.lang.String str12 = python3Target1.getLanguage();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str14 = python3Target1.getElementName("_i");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "_Python3Context" + "'", str4, "_Python3Context");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "_tsethi" + "'", str8, "_tsethi");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "d" + "'", str10, "d");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Python3" + "'", str12, "Python3");
    }

    @Test
    public void test1186() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1186");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        boolean boolean3 = python3Target1.wantsBaseVisitor();
        java.lang.String str4 = python3Target1.getLanguage();
        java.lang.String str7 = python3Target1.getTargetStringLiteralFromString("Python3", false);
        java.lang.String str9 = python3Target1.getImplicitRuleLabel("Python3");
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = null;
        java.lang.String str13 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator10, "\\35", false);
        java.lang.String str15 = python3Target1.getImplicitRuleLabel("\"hi!\"");
        java.lang.String str17 = python3Target1.encodeIntAsCharEscape((int) (short) 0);
        boolean boolean18 = python3Target1.supportsOverloadedMethods();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Python3" + "'", str4, "Python3");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Python3" + "'", str7, "Python3");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "_Python3" + "'", str9, "_Python3");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "3" + "'", str13, "3");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "_\"hi!\"" + "'", str15, "_\"hi!\"");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "\\0" + "'", str17, "\\0");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    }

    @Test
    public void test1187() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1187");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.lang.String str3 = python3Target1.encodeIntAsCharEscape(1);
        org.antlr.v4.codegen.CodeGenerator codeGenerator4 = null;
        java.lang.String str7 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator4, "_Python3Context", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = python3Target1.getCodeGenerator();
        org.stringtemplate.v4.STGroup sTGroup9 = python3Target1.getTemplates();
        java.lang.String str10 = python3Target1.getLanguage();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "\\1" + "'", str3, "\\1");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "\"Python3Contex\"" + "'", str7, "\"Python3Contex\"");
        org.junit.Assert.assertNull(codeGenerator8);
        org.junit.Assert.assertNotNull(sTGroup9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Python3" + "'", str10, "Python3");
    }

    @Test
    public void test1188() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1188");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        boolean boolean3 = python3Target1.wantsBaseVisitor();
        java.lang.String str4 = python3Target1.getLanguage();
        java.lang.String str7 = python3Target1.getTargetStringLiteralFromString("Python3", false);
        java.lang.String str9 = python3Target1.getImplicitRuleLabel("Python3");
        java.lang.String str11 = python3Target1.getImplicitSetLabel("_Python3");
        org.antlr.v4.tool.Grammar grammar12 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator13 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target14 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator13);
        java.lang.String str16 = python3Target14.encodeIntAsCharEscape(1);
        java.lang.String str17 = python3Target14.getVersion();
        java.lang.String str19 = python3Target14.getImplicitRuleLabel("_tsethi!");
        java.lang.String str21 = python3Target14.getImplicitRuleLabel("__tsethi!");
        org.antlr.v4.codegen.CodeGenerator codeGenerator22 = python3Target14.getCodeGenerator();
        boolean boolean23 = python3Target14.supportsOverloadedMethods();
        java.lang.String str26 = python3Target14.getTargetStringLiteralFromString("\"_Python3\"", true);
        java.util.Set<java.lang.String> strSet27 = python3Target14.getBadWords();
        org.antlr.v4.tool.Grammar grammar28 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator29 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target30 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator29);
        boolean boolean31 = python3Target30.wantsBaseListener();
        org.antlr.v4.codegen.CodeGenerator codeGenerator32 = python3Target30.getCodeGenerator();
        java.lang.String str35 = python3Target30.getTargetStringLiteralFromString("\\n", false);
        org.antlr.v4.tool.Grammar grammar36 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator37 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target38 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator37);
        boolean boolean39 = python3Target38.wantsBaseListener();
        java.util.Set<java.lang.String> strSet40 = python3Target38.getBadWords();
        org.stringtemplate.v4.STGroup sTGroup41 = python3Target38.getTemplates();
        java.lang.String str43 = python3Target38.getImplicitRuleLabel("\"\\\\1\"");
        org.antlr.v4.tool.Grammar grammar44 = null;
        int[] intArray45 = new int[] {};
        java.lang.String[] strArray46 = python3Target38.getTokenTypesAsTargetLabels(grammar44, intArray45);
        java.lang.String[] strArray47 = python3Target30.getTokenTypesAsTargetLabels(grammar36, intArray45);
        java.lang.String[] strArray48 = python3Target14.getTokenTypesAsTargetLabels(grammar28, intArray45);
        java.lang.String[] strArray49 = python3Target1.getTokenTypesAsTargetLabels(grammar12, intArray45);
        java.lang.String str50 = python3Target1.getLanguage();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Python3" + "'", str4, "Python3");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Python3" + "'", str7, "Python3");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "_Python3" + "'", str9, "_Python3");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "_tset_Python3" + "'", str11, "_tset_Python3");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "\\1" + "'", str16, "\\1");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "4.5.2.1" + "'", str17, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "__tsethi!" + "'", str19, "__tsethi!");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "___tsethi!" + "'", str21, "___tsethi!");
        org.junit.Assert.assertNull(codeGenerator22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "\"\\\"_Python3\\\"\"" + "'", str26, "\"\\\"_Python3\\\"\"");
        org.junit.Assert.assertNotNull(strSet27);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNull(codeGenerator32);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "\\\\n" + "'", str35, "\\\\n");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(strSet40);
        org.junit.Assert.assertNotNull(sTGroup41);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "_\"\\\\1\"" + "'", str43, "_\"\\\\1\"");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[]");
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertNotNull(strArray49);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "Python3" + "'", str50, "Python3");
    }

    @Test
    public void test1189() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1189");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.lang.String str3 = python3Target1.encodeIntAsCharEscape(1);
        org.antlr.v4.codegen.CodeGenerator codeGenerator4 = null;
        java.lang.String str7 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator4, "_Python3Context", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = python3Target1.getCodeGenerator();
        org.stringtemplate.v4.STGroup sTGroup9 = python3Target1.getTemplates();
        org.antlr.v4.codegen.model.RuleFunction ruleFunction10 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str11 = python3Target1.getRuleFunctionContextStructName(ruleFunction10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "\\1" + "'", str3, "\\1");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "\"Python3Contex\"" + "'", str7, "\"Python3Contex\"");
        org.junit.Assert.assertNull(codeGenerator8);
        org.junit.Assert.assertNotNull(sTGroup9);
    }

    @Test
    public void test1190() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1190");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        java.util.Set<java.lang.String> strSet3 = python3Target1.getBadWords();
        java.util.Set<java.lang.String> strSet4 = python3Target1.getBadWords();
        boolean boolean5 = python3Target1.wantsBaseVisitor();
        int int6 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str8 = python3Target1.getImplicitRuleLabel("___\"___tsethi!\"");
        java.lang.String str9 = python3Target1.getVersion();
        java.lang.String str11 = python3Target1.encodeIntAsCharEscape(0);
        org.antlr.v4.codegen.model.RuleFunction ruleFunction12 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str13 = python3Target1.getRuleFunctionContextStructName(ruleFunction12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 64 + "'", int6 == 64);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "____\"___tsethi!\"" + "'", str8, "____\"___tsethi!\"");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "4.5.2.1" + "'", str9, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "\\0" + "'", str11, "\\0");
    }

    @Test
    public void test1191() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1191");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        java.lang.String str4 = python3Target1.getListLabel("");
        boolean boolean5 = python3Target1.wantsBaseListener();
        int int6 = python3Target1.getSerializedATNSegmentLimit();
        boolean boolean7 = python3Target1.templatesExist();
        int int8 = python3Target1.getSerializedATNSegmentLimit();
        org.stringtemplate.v4.STGroup sTGroup9 = python3Target1.getTemplates();
        java.lang.String str11 = python3Target1.getTargetStringLiteralFromString("\"\\\\1\"");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 29 + "'", int6 == 29);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 29 + "'", int8 == 29);
        org.junit.Assert.assertNotNull(sTGroup9);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "\"\\\"\\\\\\\\1\\\"\"" + "'", str11, "\"\\\"\\\\\\\\1\\\"\"");
    }

    @Test
    public void test1192() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1192");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        org.antlr.v4.codegen.CodeGenerator codeGenerator2 = python3Target1.getCodeGenerator();
        java.lang.String str3 = python3Target1.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup4 = python3Target1.getTemplates();
        org.stringtemplate.v4.STGroup sTGroup5 = python3Target1.getTemplates();
        org.junit.Assert.assertNull(codeGenerator2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Python3" + "'", str3, "Python3");
        org.junit.Assert.assertNotNull(sTGroup4);
        org.junit.Assert.assertNotNull(sTGroup5);
    }

    @Test
    public void test1193() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1193");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        boolean boolean3 = python3Target1.templatesExist();
        org.stringtemplate.v4.STGroup sTGroup4 = python3Target1.getTemplates();
        int int5 = python3Target1.getInlineTestSetWordSize();
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = python3Target1.getCodeGenerator();
        java.util.Set<java.lang.String> strSet7 = python3Target1.getBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = null;
        java.lang.String str11 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator8, "_\"\\\"Python3Contex\\\"\"", true);
        org.antlr.v4.tool.ast.GrammarAST grammarAST12 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str13 = python3Target1.getLoopLabel(grammarAST12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(sTGroup4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 64 + "'", int5 == 64);
        org.junit.Assert.assertNull(codeGenerator6);
        org.junit.Assert.assertNotNull(strSet7);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "\"\\\"\\\"Python3Contex\\\"\"" + "'", str11, "\"\\\"\\\"Python3Contex\\\"\"");
    }

    @Test
    public void test1194() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1194");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.lang.String str3 = python3Target1.encodeIntAsCharEscape(1);
        java.lang.String str4 = python3Target1.getVersion();
        java.lang.String str6 = python3Target1.getImplicitRuleLabel("_tsethi!");
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = null;
        java.lang.String str10 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator7, "_Python3", false);
        org.antlr.v4.codegen.CodeGenerator codeGenerator11 = python3Target1.getCodeGenerator();
        java.lang.String str14 = python3Target1.getTargetStringLiteralFromString("\"\"", true);
        boolean boolean15 = python3Target1.wantsBaseVisitor();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str17 = python3Target1.getElementListName("\"\\\"Python3Context\\\"\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "\\1" + "'", str3, "\\1");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "4.5.2.1" + "'", str4, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "__tsethi!" + "'", str6, "__tsethi!");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Python" + "'", str10, "Python");
        org.junit.Assert.assertNull(codeGenerator11);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "\"\\\"\\\"\"" + "'", str14, "\"\\\"\\\"\"");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test1195() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1195");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        java.lang.String str4 = python3Target1.getAltLabelContextStructName("_Python3");
        org.antlr.v4.codegen.CodeGenerator codeGenerator5 = null;
        java.lang.String str8 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator5, "__tsethi!", false);
        boolean boolean9 = python3Target1.wantsBaseListener();
        java.lang.String str11 = python3Target1.getImplicitSetLabel("");
        java.lang.String str13 = python3Target1.getAltLabelContextStructName("\"\"");
        java.lang.String str15 = python3Target1.getImplicitRuleLabel("\"_tset\\\\\\\"ython\\\\\\\"\"");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "_Python3Context" + "'", str4, "_Python3Context");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "_tsethi" + "'", str8, "_tsethi");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "_tset" + "'", str11, "_tset");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "\"\"Context" + "'", str13, "\"\"Context");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "_\"_tset\\\\\\\"ython\\\\\\\"\"" + "'", str15, "_\"_tset\\\\\\\"ython\\\\\\\"\"");
    }

    @Test
    public void test1196() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1196");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        java.util.Set<java.lang.String> strSet3 = python3Target1.getBadWords();
        org.antlr.v4.tool.Grammar grammar4 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator5 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target6 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator5);
        boolean boolean7 = python3Target6.wantsBaseListener();
        boolean boolean8 = python3Target6.wantsBaseVisitor();
        java.lang.String str9 = python3Target6.getLanguage();
        java.lang.String str12 = python3Target6.getTargetStringLiteralFromString("Python3", false);
        java.lang.String str14 = python3Target6.getImplicitRuleLabel("Python3");
        java.lang.String str16 = python3Target6.getImplicitSetLabel("_Python3");
        org.antlr.v4.tool.Grammar grammar17 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator18 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target19 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator18);
        java.lang.String str21 = python3Target19.encodeIntAsCharEscape(1);
        java.lang.String str22 = python3Target19.getVersion();
        java.lang.String str24 = python3Target19.getImplicitRuleLabel("_tsethi!");
        java.lang.String str26 = python3Target19.getImplicitRuleLabel("__tsethi!");
        org.antlr.v4.codegen.CodeGenerator codeGenerator27 = python3Target19.getCodeGenerator();
        boolean boolean28 = python3Target19.supportsOverloadedMethods();
        java.lang.String str31 = python3Target19.getTargetStringLiteralFromString("\"_Python3\"", true);
        java.util.Set<java.lang.String> strSet32 = python3Target19.getBadWords();
        org.antlr.v4.tool.Grammar grammar33 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator34 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target35 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator34);
        boolean boolean36 = python3Target35.wantsBaseListener();
        org.antlr.v4.codegen.CodeGenerator codeGenerator37 = python3Target35.getCodeGenerator();
        java.lang.String str40 = python3Target35.getTargetStringLiteralFromString("\\n", false);
        org.antlr.v4.tool.Grammar grammar41 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator42 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target43 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator42);
        boolean boolean44 = python3Target43.wantsBaseListener();
        java.util.Set<java.lang.String> strSet45 = python3Target43.getBadWords();
        org.stringtemplate.v4.STGroup sTGroup46 = python3Target43.getTemplates();
        java.lang.String str48 = python3Target43.getImplicitRuleLabel("\"\\\\1\"");
        org.antlr.v4.tool.Grammar grammar49 = null;
        int[] intArray50 = new int[] {};
        java.lang.String[] strArray51 = python3Target43.getTokenTypesAsTargetLabels(grammar49, intArray50);
        java.lang.String[] strArray52 = python3Target35.getTokenTypesAsTargetLabels(grammar41, intArray50);
        java.lang.String[] strArray53 = python3Target19.getTokenTypesAsTargetLabels(grammar33, intArray50);
        java.lang.String[] strArray54 = python3Target6.getTokenTypesAsTargetLabels(grammar17, intArray50);
        java.lang.String[] strArray55 = python3Target1.getTokenTypesAsTargetLabels(grammar4, intArray50);
        java.lang.String str56 = python3Target1.getLanguage();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str58 = python3Target1.encodeIntAsCharEscape((int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot encode the specified value: -1");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Python3" + "'", str9, "Python3");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Python3" + "'", str12, "Python3");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "_Python3" + "'", str14, "_Python3");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "_tset_Python3" + "'", str16, "_tset_Python3");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "\\1" + "'", str21, "\\1");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "4.5.2.1" + "'", str22, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "__tsethi!" + "'", str24, "__tsethi!");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "___tsethi!" + "'", str26, "___tsethi!");
        org.junit.Assert.assertNull(codeGenerator27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "\"\\\"_Python3\\\"\"" + "'", str31, "\"\\\"_Python3\\\"\"");
        org.junit.Assert.assertNotNull(strSet32);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNull(codeGenerator37);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "\\\\n" + "'", str40, "\\\\n");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(strSet45);
        org.junit.Assert.assertNotNull(sTGroup46);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "_\"\\\\1\"" + "'", str48, "_\"\\\\1\"");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[]");
        org.junit.Assert.assertNotNull(strArray51);
        org.junit.Assert.assertNotNull(strArray52);
        org.junit.Assert.assertNotNull(strArray53);
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertNotNull(strArray55);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "Python3" + "'", str56, "Python3");
    }

    @Test
    public void test1197() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1197");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        boolean boolean3 = python3Target1.wantsBaseVisitor();
        java.lang.String str4 = python3Target1.getLanguage();
        java.lang.String str7 = python3Target1.getTargetStringLiteralFromString("Python3", false);
        java.lang.String str10 = python3Target1.getTargetStringLiteralFromString("Python3", true);
        java.lang.String str12 = python3Target1.getImplicitSetLabel("hi!");
        java.lang.String str14 = python3Target1.getTargetStringLiteralFromString("\"Python3Contex\"");
        java.lang.String str16 = python3Target1.encodeIntAsCharEscape((int) (byte) 10);
        org.antlr.v4.codegen.CodeGenerator codeGenerator17 = null;
        java.lang.String str20 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator17, "_tsetPythonContext", false);
        java.lang.String str22 = python3Target1.getImplicitRuleLabel("\"_tsethi!\"");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Python3" + "'", str4, "Python3");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Python3" + "'", str7, "Python3");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\"Python3\"" + "'", str10, "\"Python3\"");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "_tsethi!" + "'", str12, "_tsethi!");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "\"\\\"Python3Contex\\\"\"" + "'", str14, "\"\\\"Python3Contex\\\"\"");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "\\n" + "'", str16, "\\n");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "tsetPythonContex" + "'", str20, "tsetPythonContex");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "_\"_tsethi!\"" + "'", str22, "_\"_tsethi!\"");
    }

    @Test
    public void test1198() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1198");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.lang.String str3 = python3Target1.encodeIntAsCharEscape(1);
        java.lang.String str4 = python3Target1.getVersion();
        java.lang.String str6 = python3Target1.getImplicitRuleLabel("_tsethi!");
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = null;
        java.lang.String str10 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator7, "_Python3", false);
        org.antlr.v4.codegen.CodeGenerator codeGenerator11 = python3Target1.getCodeGenerator();
        boolean boolean12 = python3Target1.supportsOverloadedMethods();
        org.antlr.v4.codegen.CodeGenerator codeGenerator13 = null;
        java.lang.String str16 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator13, "", false);
        java.lang.String str18 = python3Target1.getImplicitRuleLabel("\"_\\\"\\\\\\\"Python3Contex\\\\\\\"\\\"\"");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str20 = python3Target1.getImplicitTokenLabel("\\\"\\\\\\\"ython\\\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "\\1" + "'", str3, "\\1");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "4.5.2.1" + "'", str4, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "__tsethi!" + "'", str6, "__tsethi!");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Python" + "'", str10, "Python");
        org.junit.Assert.assertNull(codeGenerator11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "_\"_\\\"\\\\\\\"Python3Contex\\\\\\\"\\\"\"" + "'", str18, "_\"_\\\"\\\\\\\"Python3Contex\\\\\\\"\\\"\"");
    }

    @Test
    public void test1199() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1199");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        boolean boolean3 = python3Target1.wantsBaseVisitor();
        java.lang.String str4 = python3Target1.getLanguage();
        java.lang.String str7 = python3Target1.getTargetStringLiteralFromString("Python3", false);
        java.lang.String str10 = python3Target1.getTargetStringLiteralFromString("Python3", true);
        java.lang.String str12 = python3Target1.getImplicitSetLabel("hi!");
        java.lang.String str14 = python3Target1.getTargetStringLiteralFromString("\"Python3Contex\"");
        java.lang.String str17 = python3Target1.getTargetStringLiteralFromString("4.5.2.1", true);
        java.lang.String str18 = python3Target1.getLanguage();
        java.lang.String str20 = python3Target1.getImplicitRuleLabel("_Python3");
        java.lang.String str22 = python3Target1.getAltLabelContextStructName("PythonContext");
        org.antlr.v4.codegen.CodeGenerator codeGenerator23 = null;
        java.lang.String str26 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator23, "\"\\\"\\\\\\\"_Python3\\\\\\\"\\\"\"", false);
        boolean boolean27 = python3Target1.templatesExist();
        boolean boolean28 = python3Target1.supportsOverloadedMethods();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Python3" + "'", str4, "Python3");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Python3" + "'", str7, "Python3");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\"Python3\"" + "'", str10, "\"Python3\"");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "_tsethi!" + "'", str12, "_tsethi!");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "\"\\\"Python3Contex\\\"\"" + "'", str14, "\"\\\"Python3Contex\\\"\"");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "\"4.5.2.1\"" + "'", str17, "\"4.5.2.1\"");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Python3" + "'", str18, "Python3");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "__Python3" + "'", str20, "__Python3");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "PythonContextContext" + "'", str22, "PythonContextContext");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "\\\"\\\\\\\"_Python3\\\\\\\"\\\"" + "'", str26, "\\\"\\\\\\\"_Python3\\\\\\\"\\\"");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
    }

    @Test
    public void test1200() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1200");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        boolean boolean3 = python3Target1.templatesExist();
        org.stringtemplate.v4.STGroup sTGroup4 = python3Target1.getTemplates();
        int int5 = python3Target1.getInlineTestSetWordSize();
        boolean boolean6 = python3Target1.wantsBaseVisitor();
        java.lang.String str9 = python3Target1.getTargetStringLiteralFromString("\\35", false);
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = null;
        java.lang.String str13 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator10, "\\64", false);
        java.lang.String str14 = python3Target1.getVersion();
        java.lang.String str15 = python3Target1.getVersion();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str17 = python3Target1.getElementListName("");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(sTGroup4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 64 + "'", int5 == 64);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\\\\35" + "'", str9, "\\\\35");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "6" + "'", str13, "6");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "4.5.2.1" + "'", str14, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "4.5.2.1" + "'", str15, "4.5.2.1");
    }

    @Test
    public void test1201() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1201");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        boolean boolean3 = python3Target1.wantsBaseVisitor();
        java.lang.String str4 = python3Target1.getLanguage();
        java.lang.String str7 = python3Target1.getTargetStringLiteralFromString("Python3", false);
        boolean boolean8 = python3Target1.templatesExist();
        java.lang.String str10 = python3Target1.getTargetStringLiteralFromString("hi!");
        java.lang.String str12 = python3Target1.getImplicitRuleLabel("\"hi!\"");
        java.lang.String str14 = python3Target1.getListLabel("\"\\\"\\\"\"");
        int int15 = python3Target1.getSerializedATNSegmentLimit();
        org.antlr.v4.tool.Grammar grammar16 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str18 = python3Target1.getTokenTypeAsTargetLabel(grammar16, 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Python3" + "'", str4, "Python3");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Python3" + "'", str7, "Python3");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\"hi!\"" + "'", str10, "\"hi!\"");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "_\"hi!\"" + "'", str12, "_\"hi!\"");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "\"\\\"\\\"\"" + "'", str14, "\"\\\"\\\"\"");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 29 + "'", int15 == 29);
    }

    @Test
    public void test1202() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1202");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        boolean boolean3 = python3Target1.wantsBaseVisitor();
        java.lang.String str4 = python3Target1.getLanguage();
        java.lang.String str7 = python3Target1.getTargetStringLiteralFromString("Python3", false);
        java.lang.String str10 = python3Target1.getTargetStringLiteralFromString("Python3", true);
        java.lang.String str12 = python3Target1.getImplicitSetLabel("hi!");
        java.lang.String str14 = python3Target1.getTargetStringLiteralFromString("___tsethi!");
        java.lang.String str16 = python3Target1.encodeIntAsCharEscape(0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Python3" + "'", str4, "Python3");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Python3" + "'", str7, "Python3");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\"Python3\"" + "'", str10, "\"Python3\"");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "_tsethi!" + "'", str12, "_tsethi!");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "\"___tsethi!\"" + "'", str14, "\"___tsethi!\"");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "\\0" + "'", str16, "\\0");
    }

    @Test
    public void test1203() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1203");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        boolean boolean3 = python3Target1.wantsBaseVisitor();
        java.lang.String str4 = python3Target1.getLanguage();
        java.lang.String str7 = python3Target1.getTargetStringLiteralFromString("Python3", false);
        java.lang.String str9 = python3Target1.encodeIntAsCharEscape((int) (byte) 10);
        java.lang.String str11 = python3Target1.getTargetStringLiteralFromString("_Python3");
        java.lang.String str13 = python3Target1.getAltLabelContextStructName("Python3");
        org.antlr.v4.codegen.CodeGenerator codeGenerator14 = python3Target1.getCodeGenerator();
        java.lang.String str16 = python3Target1.getListLabel("\"\"Context");
        boolean boolean17 = python3Target1.templatesExist();
        int int18 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str20 = python3Target1.getImplicitSetLabel("");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Python3" + "'", str4, "Python3");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Python3" + "'", str7, "Python3");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\\n" + "'", str9, "\\n");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "\"_Python3\"" + "'", str11, "\"_Python3\"");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Python3Context" + "'", str13, "Python3Context");
        org.junit.Assert.assertNull(codeGenerator14);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "\"\"Context" + "'", str16, "\"\"Context");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 64 + "'", int18 == 64);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "_tset" + "'", str20, "_tset");
    }

    @Test
    public void test1204() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1204");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        java.lang.String str4 = python3Target1.getListLabel("");
        boolean boolean5 = python3Target1.wantsBaseListener();
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = null;
        java.lang.String str9 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator6, "Python3", true);
        int int10 = python3Target1.getSerializedATNSegmentLimit();
        java.lang.String str12 = python3Target1.getTargetStringLiteralFromString("4.5.2.1");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str14 = python3Target1.getImplicitTokenLabel("YthonContext");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\"ython\"" + "'", str9, "\"ython\"");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 29 + "'", int10 == 29);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "\"4.5.2.1\"" + "'", str12, "\"4.5.2.1\"");
    }

    @Test
    public void test1205() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1205");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python3Target1.getBadWords();
        boolean boolean3 = python3Target1.templatesExist();
        org.stringtemplate.v4.STGroup sTGroup4 = python3Target1.getTemplates();
        org.antlr.v4.codegen.CodeGenerator codeGenerator5 = python3Target1.getCodeGenerator();
        java.lang.String str7 = python3Target1.encodeIntAsCharEscape((int) ' ');
        boolean boolean8 = python3Target1.supportsOverloadedMethods();
        java.lang.String str10 = python3Target1.getImplicitSetLabel("__tsettset_Python");
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(sTGroup4);
        org.junit.Assert.assertNull(codeGenerator5);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + " " + "'", str7, " ");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "_tset__tsettset_Python" + "'", str10, "_tset__tsettset_Python");
    }

    @Test
    public void test1206() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1206");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        org.antlr.v4.codegen.CodeGenerator codeGenerator2 = null;
        java.lang.String str5 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator2, "_Python3Context", true);
        java.lang.String str7 = python3Target1.getListLabel("Python");
        boolean boolean8 = python3Target1.supportsOverloadedMethods();
        boolean boolean9 = python3Target1.templatesExist();
        int int10 = python3Target1.getSerializedATNSegmentLimit();
        java.lang.Class<?> wildcardClass11 = python3Target1.getClass();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "\"Python3Contex\"" + "'", str5, "\"Python3Contex\"");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Python" + "'", str7, "Python");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 29 + "'", int10 == 29);
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test1207() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1207");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        boolean boolean3 = python3Target1.wantsBaseVisitor();
        java.lang.String str4 = python3Target1.getLanguage();
        java.lang.String str7 = python3Target1.getTargetStringLiteralFromString("Python3", false);
        java.lang.String str10 = python3Target1.getTargetStringLiteralFromString("Python3", true);
        java.lang.String str12 = python3Target1.getImplicitSetLabel("hi!");
        java.lang.String str14 = python3Target1.getTargetStringLiteralFromString("\"Python3Contex\"");
        java.lang.String str15 = python3Target1.getLanguage();
        int int16 = python3Target1.getSerializedATNSegmentLimit();
        int int17 = python3Target1.getSerializedATNSegmentLimit();
        java.lang.String str18 = python3Target1.getVersion();
        boolean boolean19 = python3Target1.wantsBaseVisitor();
        java.lang.String str21 = python3Target1.encodeIntAsCharEscape((int) 'a');
        java.lang.String str23 = python3Target1.getAltLabelContextStructName("__tset\"\\\"\\\\\\\\1\\\"\"");
        java.lang.Class<?> wildcardClass24 = python3Target1.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Python3" + "'", str4, "Python3");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Python3" + "'", str7, "Python3");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\"Python3\"" + "'", str10, "\"Python3\"");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "_tsethi!" + "'", str12, "_tsethi!");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "\"\\\"Python3Contex\\\"\"" + "'", str14, "\"\\\"Python3Contex\\\"\"");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Python3" + "'", str15, "Python3");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 29 + "'", int16 == 29);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 29 + "'", int17 == 29);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "4.5.2.1" + "'", str18, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "a" + "'", str21, "a");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "__tset\"\\\"\\\\\\\\1\\\"\"Context" + "'", str23, "__tset\"\\\"\\\\\\\\1\\\"\"Context");
        org.junit.Assert.assertNotNull(wildcardClass24);
    }

    @Test
    public void test1208() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1208");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        java.lang.String str4 = python3Target1.getListLabel("");
        boolean boolean5 = python3Target1.supportsOverloadedMethods();
        java.lang.String str7 = python3Target1.encodeIntAsCharEscape((int) ' ');
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = null;
        java.lang.String str11 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator8, "\"\\\"\\\"Python3Contex\\\"\"", false);
        int int12 = python3Target1.getInlineTestSetWordSize();
        org.antlr.v4.tool.Grammar grammar13 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator14 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target15 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator14);
        java.lang.String str17 = python3Target15.encodeIntAsCharEscape(1);
        java.lang.String str18 = python3Target15.getVersion();
        java.lang.String str20 = python3Target15.getImplicitRuleLabel("_tsethi!");
        org.antlr.v4.codegen.CodeGenerator codeGenerator21 = null;
        java.lang.String str24 = python3Target15.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator21, "_Python3", false);
        org.antlr.v4.codegen.CodeGenerator codeGenerator25 = python3Target15.getCodeGenerator();
        boolean boolean26 = python3Target15.supportsOverloadedMethods();
        java.lang.String str28 = python3Target15.encodeIntAsCharEscape(64);
        org.antlr.v4.tool.Grammar grammar29 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator30 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target31 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator30);
        java.lang.String str33 = python3Target31.encodeIntAsCharEscape(1);
        java.lang.String str34 = python3Target31.getVersion();
        java.lang.String str36 = python3Target31.getImplicitRuleLabel("_tsethi!");
        java.lang.String str38 = python3Target31.getImplicitRuleLabel("__tsethi!");
        org.antlr.v4.codegen.CodeGenerator codeGenerator39 = python3Target31.getCodeGenerator();
        boolean boolean40 = python3Target31.supportsOverloadedMethods();
        java.lang.String str43 = python3Target31.getTargetStringLiteralFromString("\"_Python3\"", true);
        java.util.Set<java.lang.String> strSet44 = python3Target31.getBadWords();
        org.antlr.v4.tool.Grammar grammar45 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator46 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target47 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator46);
        boolean boolean48 = python3Target47.wantsBaseListener();
        org.antlr.v4.codegen.CodeGenerator codeGenerator49 = python3Target47.getCodeGenerator();
        java.lang.String str52 = python3Target47.getTargetStringLiteralFromString("\\n", false);
        org.antlr.v4.tool.Grammar grammar53 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator54 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target55 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator54);
        boolean boolean56 = python3Target55.wantsBaseListener();
        java.util.Set<java.lang.String> strSet57 = python3Target55.getBadWords();
        org.stringtemplate.v4.STGroup sTGroup58 = python3Target55.getTemplates();
        java.lang.String str60 = python3Target55.getImplicitRuleLabel("\"\\\\1\"");
        org.antlr.v4.tool.Grammar grammar61 = null;
        int[] intArray62 = new int[] {};
        java.lang.String[] strArray63 = python3Target55.getTokenTypesAsTargetLabels(grammar61, intArray62);
        java.lang.String[] strArray64 = python3Target47.getTokenTypesAsTargetLabels(grammar53, intArray62);
        java.lang.String[] strArray65 = python3Target31.getTokenTypesAsTargetLabels(grammar45, intArray62);
        java.lang.String[] strArray66 = python3Target15.getTokenTypesAsTargetLabels(grammar29, intArray62);
        java.lang.String[] strArray67 = python3Target1.getTokenTypesAsTargetLabels(grammar13, intArray62);
        java.lang.String str69 = python3Target1.getImplicitSetLabel("_\"_tset_i\"");
        org.antlr.v4.tool.Grammar grammar70 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str72 = python3Target1.getTokenTypeAsTargetLabel(grammar70, (int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + " " + "'", str7, " ");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "\\\"\\\"Python3Contex\\\"" + "'", str11, "\\\"\\\"Python3Contex\\\"");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 64 + "'", int12 == 64);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "\\1" + "'", str17, "\\1");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "4.5.2.1" + "'", str18, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "__tsethi!" + "'", str20, "__tsethi!");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "Python" + "'", str24, "Python");
        org.junit.Assert.assertNull(codeGenerator25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "@" + "'", str28, "@");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "\\1" + "'", str33, "\\1");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "4.5.2.1" + "'", str34, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "__tsethi!" + "'", str36, "__tsethi!");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "___tsethi!" + "'", str38, "___tsethi!");
        org.junit.Assert.assertNull(codeGenerator39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "\"\\\"_Python3\\\"\"" + "'", str43, "\"\\\"_Python3\\\"\"");
        org.junit.Assert.assertNotNull(strSet44);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNull(codeGenerator49);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "\\\\n" + "'", str52, "\\\\n");
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(strSet57);
        org.junit.Assert.assertNotNull(sTGroup58);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "_\"\\\\1\"" + "'", str60, "_\"\\\\1\"");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[]");
        org.junit.Assert.assertNotNull(strArray63);
        org.junit.Assert.assertNotNull(strArray64);
        org.junit.Assert.assertNotNull(strArray65);
        org.junit.Assert.assertNotNull(strArray66);
        org.junit.Assert.assertNotNull(strArray67);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "_tset_\"_tset_i\"" + "'", str69, "_tset_\"_tset_i\"");
    }

    @Test
    public void test1209() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1209");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = python3Target1.getCodeGenerator();
        java.lang.String str5 = python3Target1.encodeIntAsCharEscape((int) (short) 10);
        java.util.Set<java.lang.String> strSet6 = python3Target1.getBadWords();
        java.lang.String str7 = python3Target1.getLanguage();
        java.lang.String str9 = python3Target1.getListLabel("\\\\n");
        java.lang.String str11 = python3Target1.encodeIntAsCharEscape(100);
        boolean boolean12 = python3Target1.templatesExist();
        org.antlr.v4.codegen.CodeGenerator codeGenerator13 = python3Target1.getCodeGenerator();
        java.lang.String str16 = python3Target1.getTargetStringLiteralFromString("\"\"Context", false);
        boolean boolean17 = python3Target1.supportsOverloadedMethods();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(codeGenerator3);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "\\n" + "'", str5, "\\n");
        org.junit.Assert.assertNotNull(strSet6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Python3" + "'", str7, "Python3");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\\\\n" + "'", str9, "\\\\n");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "d" + "'", str11, "d");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNull(codeGenerator13);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "\\\"\\\"Context" + "'", str16, "\\\"\\\"Context");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    }

    @Test
    public void test1210() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1210");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = python3Target1.getCodeGenerator();
        java.lang.String str6 = python3Target1.getTargetStringLiteralFromString("\\n", false);
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = null;
        java.lang.String str10 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator7, "\\\"\\\"Python3Contex\\\"", false);
        boolean boolean11 = python3Target1.templatesExist();
        org.stringtemplate.v4.STGroup sTGroup12 = python3Target1.getTemplates();
        boolean boolean13 = python3Target1.wantsBaseListener();
        java.lang.String str15 = python3Target1.getTargetStringLiteralFromString("_tsettsetPytho");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(codeGenerator3);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\\\\n" + "'", str6, "\\\\n");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\\\"\\\"Python3Contex\\\"" + "'", str10, "\\\"\\\"Python3Contex\\\"");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(sTGroup12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "\"_tsettsetPytho\"" + "'", str15, "\"_tsettsetPytho\"");
    }

    @Test
    public void test1211() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1211");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        java.util.Set<java.lang.String> strSet3 = python3Target1.getBadWords();
        org.stringtemplate.v4.STGroup sTGroup4 = python3Target1.getTemplates();
        java.lang.String str6 = python3Target1.getListLabel("_Python3Context");
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = python3Target1.getCodeGenerator();
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = python3Target1.getCodeGenerator();
        org.stringtemplate.v4.STGroup sTGroup9 = python3Target1.getTemplates();
        java.lang.String str11 = python3Target1.getImplicitSetLabel("_\\\"_tset\\\\\\\"_tsethi\\\\\\\"\\\"");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNotNull(sTGroup4);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "_Python3Context" + "'", str6, "_Python3Context");
        org.junit.Assert.assertNull(codeGenerator7);
        org.junit.Assert.assertNull(codeGenerator8);
        org.junit.Assert.assertNotNull(sTGroup9);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "_tset_\\\"_tset\\\\\\\"_tsethi\\\\\\\"\\\"" + "'", str11, "_tset_\\\"_tset\\\\\\\"_tsethi\\\\\\\"\\\"");
    }

    @Test
    public void test1212() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1212");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        boolean boolean3 = python3Target1.wantsBaseVisitor();
        java.lang.String str4 = python3Target1.getLanguage();
        java.lang.String str7 = python3Target1.getTargetStringLiteralFromString("Python3", false);
        java.lang.String str10 = python3Target1.getTargetStringLiteralFromString("Python3", true);
        java.lang.String str12 = python3Target1.getImplicitSetLabel("hi!");
        java.lang.String str14 = python3Target1.getTargetStringLiteralFromString("\"Python3Contex\"");
        java.lang.String str15 = python3Target1.getLanguage();
        int int16 = python3Target1.getSerializedATNSegmentLimit();
        int int17 = python3Target1.getSerializedATNSegmentLimit();
        java.lang.String str19 = python3Target1.getTargetStringLiteralFromString("\"\\\\\\\"hi!\\\\\\\"\"");
        java.lang.String str21 = python3Target1.encodeIntAsCharEscape((int) (short) 10);
        org.antlr.v4.tool.ast.GrammarAST grammarAST22 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean23 = python3Target1.grammarSymbolCausesIssueInGeneratedCode(grammarAST22);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Python3" + "'", str4, "Python3");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Python3" + "'", str7, "Python3");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\"Python3\"" + "'", str10, "\"Python3\"");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "_tsethi!" + "'", str12, "_tsethi!");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "\"\\\"Python3Contex\\\"\"" + "'", str14, "\"\\\"Python3Contex\\\"\"");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Python3" + "'", str15, "Python3");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 29 + "'", int16 == 29);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 29 + "'", int17 == 29);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "\"\\\"\\\\\\\\\\\\\\\"hi!\\\\\\\\\\\\\\\"\\\"\"" + "'", str19, "\"\\\"\\\\\\\\\\\\\\\"hi!\\\\\\\\\\\\\\\"\\\"\"");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "\\n" + "'", str21, "\\n");
    }

    @Test
    public void test1213() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1213");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        boolean boolean3 = python3Target1.wantsBaseVisitor();
        java.lang.String str4 = python3Target1.getLanguage();
        java.lang.String str7 = python3Target1.getTargetStringLiteralFromString("Python3", false);
        java.lang.String str10 = python3Target1.getTargetStringLiteralFromString("Python3", true);
        java.lang.String str12 = python3Target1.getImplicitSetLabel("hi!");
        java.lang.String str14 = python3Target1.getTargetStringLiteralFromString("\"Python3Contex\"");
        java.lang.String str17 = python3Target1.getTargetStringLiteralFromString("4.5.2.1", true);
        java.lang.String str18 = python3Target1.getLanguage();
        java.lang.String str20 = python3Target1.getImplicitRuleLabel("_Python3");
        java.lang.String str22 = python3Target1.encodeIntAsCharEscape((int) '#');
        int int23 = python3Target1.getSerializedATNSegmentLimit();
        boolean boolean24 = python3Target1.supportsOverloadedMethods();
        int int25 = python3Target1.getInlineTestSetWordSize();
        org.antlr.v4.tool.Grammar grammar26 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator27 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target28 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator27);
        boolean boolean29 = python3Target28.wantsBaseListener();
        java.util.Set<java.lang.String> strSet30 = python3Target28.getBadWords();
        java.util.Set<java.lang.String> strSet31 = python3Target28.getBadWords();
        java.lang.String str33 = python3Target28.getImplicitRuleLabel("\\\"\\\"Python3Contex\\\"");
        java.lang.String str36 = python3Target28.getTargetStringLiteralFromString("i", false);
        org.antlr.v4.tool.Grammar grammar37 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator38 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target39 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator38);
        boolean boolean40 = python3Target39.wantsBaseListener();
        java.util.Set<java.lang.String> strSet41 = python3Target39.getBadWords();
        org.antlr.v4.tool.Grammar grammar42 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator43 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target44 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator43);
        boolean boolean45 = python3Target44.wantsBaseListener();
        boolean boolean46 = python3Target44.wantsBaseVisitor();
        java.lang.String str47 = python3Target44.getLanguage();
        java.lang.String str50 = python3Target44.getTargetStringLiteralFromString("Python3", false);
        java.lang.String str52 = python3Target44.getImplicitRuleLabel("Python3");
        java.lang.String str54 = python3Target44.getImplicitSetLabel("_Python3");
        org.antlr.v4.tool.Grammar grammar55 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator56 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target57 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator56);
        java.lang.String str59 = python3Target57.encodeIntAsCharEscape(1);
        java.lang.String str60 = python3Target57.getVersion();
        java.lang.String str62 = python3Target57.getImplicitRuleLabel("_tsethi!");
        java.lang.String str64 = python3Target57.getImplicitRuleLabel("__tsethi!");
        org.antlr.v4.codegen.CodeGenerator codeGenerator65 = python3Target57.getCodeGenerator();
        boolean boolean66 = python3Target57.supportsOverloadedMethods();
        java.lang.String str69 = python3Target57.getTargetStringLiteralFromString("\"_Python3\"", true);
        java.util.Set<java.lang.String> strSet70 = python3Target57.getBadWords();
        org.antlr.v4.tool.Grammar grammar71 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator72 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target73 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator72);
        boolean boolean74 = python3Target73.wantsBaseListener();
        org.antlr.v4.codegen.CodeGenerator codeGenerator75 = python3Target73.getCodeGenerator();
        java.lang.String str78 = python3Target73.getTargetStringLiteralFromString("\\n", false);
        org.antlr.v4.tool.Grammar grammar79 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator80 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target81 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator80);
        boolean boolean82 = python3Target81.wantsBaseListener();
        java.util.Set<java.lang.String> strSet83 = python3Target81.getBadWords();
        org.stringtemplate.v4.STGroup sTGroup84 = python3Target81.getTemplates();
        java.lang.String str86 = python3Target81.getImplicitRuleLabel("\"\\\\1\"");
        org.antlr.v4.tool.Grammar grammar87 = null;
        int[] intArray88 = new int[] {};
        java.lang.String[] strArray89 = python3Target81.getTokenTypesAsTargetLabels(grammar87, intArray88);
        java.lang.String[] strArray90 = python3Target73.getTokenTypesAsTargetLabels(grammar79, intArray88);
        java.lang.String[] strArray91 = python3Target57.getTokenTypesAsTargetLabels(grammar71, intArray88);
        java.lang.String[] strArray92 = python3Target44.getTokenTypesAsTargetLabels(grammar55, intArray88);
        java.lang.String[] strArray93 = python3Target39.getTokenTypesAsTargetLabels(grammar42, intArray88);
        java.lang.String[] strArray94 = python3Target28.getTokenTypesAsTargetLabels(grammar37, intArray88);
        java.lang.String[] strArray95 = python3Target1.getTokenTypesAsTargetLabels(grammar26, intArray88);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Python3" + "'", str4, "Python3");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Python3" + "'", str7, "Python3");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\"Python3\"" + "'", str10, "\"Python3\"");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "_tsethi!" + "'", str12, "_tsethi!");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "\"\\\"Python3Contex\\\"\"" + "'", str14, "\"\\\"Python3Contex\\\"\"");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "\"4.5.2.1\"" + "'", str17, "\"4.5.2.1\"");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Python3" + "'", str18, "Python3");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "__Python3" + "'", str20, "__Python3");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "#" + "'", str22, "#");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 29 + "'", int23 == 29);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 64 + "'", int25 == 64);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(strSet30);
        org.junit.Assert.assertNotNull(strSet31);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "_\\\"\\\"Python3Contex\\\"" + "'", str33, "_\\\"\\\"Python3Contex\\\"");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "i" + "'", str36, "i");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(strSet41);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "Python3" + "'", str47, "Python3");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "Python3" + "'", str50, "Python3");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "_Python3" + "'", str52, "_Python3");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "_tset_Python3" + "'", str54, "_tset_Python3");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "\\1" + "'", str59, "\\1");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "4.5.2.1" + "'", str60, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "__tsethi!" + "'", str62, "__tsethi!");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "___tsethi!" + "'", str64, "___tsethi!");
        org.junit.Assert.assertNull(codeGenerator65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "\"\\\"_Python3\\\"\"" + "'", str69, "\"\\\"_Python3\\\"\"");
        org.junit.Assert.assertNotNull(strSet70);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNull(codeGenerator75);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "\\\\n" + "'", str78, "\\\\n");
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(strSet83);
        org.junit.Assert.assertNotNull(sTGroup84);
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "_\"\\\\1\"" + "'", str86, "_\"\\\\1\"");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[]");
        org.junit.Assert.assertNotNull(strArray89);
        org.junit.Assert.assertNotNull(strArray90);
        org.junit.Assert.assertNotNull(strArray91);
        org.junit.Assert.assertNotNull(strArray92);
        org.junit.Assert.assertNotNull(strArray93);
        org.junit.Assert.assertNotNull(strArray94);
        org.junit.Assert.assertNotNull(strArray95);
    }

    @Test
    public void test1214() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1214");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.lang.String str3 = python3Target1.encodeIntAsCharEscape(1);
        org.stringtemplate.v4.STGroup sTGroup4 = python3Target1.getTemplates();
        boolean boolean5 = python3Target1.supportsOverloadedMethods();
        java.lang.String str7 = python3Target1.getImplicitRuleLabel("__Python3ContextContext");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str9 = python3Target1.getImplicitTokenLabel("\\\"\\\"Python3Contex\\\"Context");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "\\1" + "'", str3, "\\1");
        org.junit.Assert.assertNotNull(sTGroup4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "___Python3ContextContext" + "'", str7, "___Python3ContextContext");
    }

    @Test
    public void test1215() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1215");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.lang.String str3 = python3Target1.encodeIntAsCharEscape(1);
        org.antlr.v4.codegen.CodeGenerator codeGenerator4 = null;
        java.lang.String str7 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator4, "_Python3Context", true);
        java.lang.String str9 = python3Target1.getListLabel("hi!");
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = python3Target1.getCodeGenerator();
        java.lang.String str12 = python3Target1.getAltLabelContextStructName("_tset_Python3");
        java.lang.String str14 = python3Target1.getImplicitSetLabel("4.5.2.1");
        org.antlr.v4.codegen.model.RuleFunction ruleFunction15 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str16 = python3Target1.getRuleFunctionContextStructName(ruleFunction15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "\\1" + "'", str3, "\\1");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "\"Python3Contex\"" + "'", str7, "\"Python3Contex\"");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertNull(codeGenerator10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "_tset_Python3Context" + "'", str12, "_tset_Python3Context");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "_tset4.5.2.1" + "'", str14, "_tset4.5.2.1");
    }

    @Test
    public void test1216() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1216");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        boolean boolean3 = python3Target1.wantsBaseListener();
        java.lang.String str6 = python3Target1.getTargetStringLiteralFromString("\\\\1", false);
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = null;
        java.lang.String str10 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator7, "_\"\\\"Python3Contex\\\"\"", false);
        java.lang.String str11 = python3Target1.getLanguage();
        java.lang.String str13 = python3Target1.getListLabel("_tset_tsethi!");
        org.antlr.v4.tool.Rule rule14 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str15 = python3Target1.getRuleFunctionContextStructName(rule14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\\\\\\\\1" + "'", str6, "\\\\\\\\1");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\\\"\\\"Python3Contex\\\"" + "'", str10, "\\\"\\\"Python3Contex\\\"");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Python3" + "'", str11, "Python3");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "_tset_tsethi!" + "'", str13, "_tset_tsethi!");
    }

    @Test
    public void test1217() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1217");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        boolean boolean3 = python3Target1.wantsBaseVisitor();
        java.lang.String str4 = python3Target1.getLanguage();
        java.lang.String str7 = python3Target1.getTargetStringLiteralFromString("Python3", false);
        boolean boolean8 = python3Target1.templatesExist();
        org.stringtemplate.v4.STGroup sTGroup9 = python3Target1.getTemplates();
        boolean boolean10 = python3Target1.supportsOverloadedMethods();
        java.lang.String str11 = python3Target1.getVersion();
        java.lang.String str13 = python3Target1.getImplicitRuleLabel("\"4.5.2.1\"");
        boolean boolean14 = python3Target1.templatesExist();
        java.lang.String str15 = python3Target1.getVersion();
        java.util.Set<java.lang.String> strSet16 = python3Target1.getBadWords();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Python3" + "'", str4, "Python3");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Python3" + "'", str7, "Python3");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(sTGroup9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "4.5.2.1" + "'", str11, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "_\"4.5.2.1\"" + "'", str13, "_\"4.5.2.1\"");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "4.5.2.1" + "'", str15, "4.5.2.1");
        org.junit.Assert.assertNotNull(strSet16);
    }

    @Test
    public void test1218() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1218");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        boolean boolean3 = python3Target1.wantsBaseVisitor();
        java.lang.String str4 = python3Target1.getLanguage();
        java.lang.String str7 = python3Target1.getTargetStringLiteralFromString("Python3", false);
        java.lang.String str9 = python3Target1.getImplicitRuleLabel("Python3");
        org.stringtemplate.v4.STGroup sTGroup10 = python3Target1.getTemplates();
        java.lang.String str12 = python3Target1.getImplicitSetLabel("PythonContext");
        java.lang.String str13 = python3Target1.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator14 = null;
        java.lang.String str17 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator14, "tsethi", false);
        org.antlr.v4.codegen.model.RuleFunction ruleFunction18 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str19 = python3Target1.getRuleFunctionContextStructName(ruleFunction18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Python3" + "'", str4, "Python3");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Python3" + "'", str7, "Python3");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "_Python3" + "'", str9, "_Python3");
        org.junit.Assert.assertNotNull(sTGroup10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "_tsetPythonContext" + "'", str12, "_tsetPythonContext");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Python3" + "'", str13, "Python3");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "seth" + "'", str17, "seth");
    }

    @Test
    public void test1219() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1219");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        boolean boolean3 = python3Target1.wantsBaseVisitor();
        java.lang.String str4 = python3Target1.getLanguage();
        java.lang.String str7 = python3Target1.getTargetStringLiteralFromString("Python3", false);
        java.lang.String str9 = python3Target1.getImplicitRuleLabel("Python3");
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = null;
        java.lang.String str13 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator10, "\\35", false);
        boolean boolean14 = python3Target1.templatesExist();
        int int15 = python3Target1.getSerializedATNSegmentLimit();
        org.antlr.v4.codegen.CodeGenerator codeGenerator16 = python3Target1.getCodeGenerator();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Python3" + "'", str4, "Python3");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Python3" + "'", str7, "Python3");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "_Python3" + "'", str9, "_Python3");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "3" + "'", str13, "3");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 29 + "'", int15 == 29);
        org.junit.Assert.assertNull(codeGenerator16);
    }

    @Test
    public void test1220() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1220");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        org.antlr.v4.codegen.CodeGenerator codeGenerator2 = null;
        java.lang.String str5 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator2, "_Python3Context", true);
        java.lang.String str7 = python3Target1.getListLabel("Python");
        boolean boolean8 = python3Target1.wantsBaseVisitor();
        java.lang.String str9 = python3Target1.getLanguage();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "\"Python3Contex\"" + "'", str5, "\"Python3Contex\"");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Python" + "'", str7, "Python");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Python3" + "'", str9, "Python3");
    }

    @Test
    public void test1221() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1221");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.lang.String str3 = python3Target1.encodeIntAsCharEscape(1);
        java.lang.String str4 = python3Target1.getVersion();
        java.lang.String str6 = python3Target1.getImplicitRuleLabel("_tsethi!");
        boolean boolean7 = python3Target1.templatesExist();
        java.lang.String str9 = python3Target1.getListLabel("\"__tset_Python3ContextContext\"");
        java.lang.String str11 = python3Target1.getImplicitRuleLabel("_\"\\\\\\\"\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\1Context\\\\\\\\\\\\\\\"\\\\\\\"\"");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "\\1" + "'", str3, "\\1");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "4.5.2.1" + "'", str4, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "__tsethi!" + "'", str6, "__tsethi!");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\"__tset_Python3ContextContext\"" + "'", str9, "\"__tset_Python3ContextContext\"");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "__\"\\\\\\\"\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\1Context\\\\\\\\\\\\\\\"\\\\\\\"\"" + "'", str11, "__\"\\\\\\\"\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\1Context\\\\\\\\\\\\\\\"\\\\\\\"\"");
    }

    @Test
    public void test1222() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1222");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        java.util.Set<java.lang.String> strSet3 = python3Target1.getBadWords();
        org.stringtemplate.v4.STGroup sTGroup4 = python3Target1.getTemplates();
        java.lang.String str6 = python3Target1.getListLabel("_Python3Context");
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = null;
        java.lang.String str10 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator7, "a", true);
        java.lang.String str11 = python3Target1.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator12 = null;
        java.lang.String str15 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator12, "_tset\"Python3Contex\"", true);
        org.antlr.v4.tool.ast.GrammarAST grammarAST16 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str17 = python3Target1.getLoopCounter(grammarAST16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNotNull(sTGroup4);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "_Python3Context" + "'", str6, "_Python3Context");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\"\"" + "'", str10, "\"\"");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "4.5.2.1" + "'", str11, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "\"tset\\\"Python3Contex\"" + "'", str15, "\"tset\\\"Python3Contex\"");
    }

    @Test
    public void test1223() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1223");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        boolean boolean3 = python3Target1.wantsBaseVisitor();
        java.lang.String str4 = python3Target1.getLanguage();
        java.lang.String str7 = python3Target1.getTargetStringLiteralFromString("Python3", false);
        java.lang.String str9 = python3Target1.encodeIntAsCharEscape((int) (byte) 10);
        java.lang.String str11 = python3Target1.getTargetStringLiteralFromString("_Python3");
        java.lang.String str13 = python3Target1.getAltLabelContextStructName("Python3");
        org.antlr.v4.codegen.CodeGenerator codeGenerator14 = python3Target1.getCodeGenerator();
        java.lang.String str16 = python3Target1.getListLabel("\"\"Context");
        boolean boolean17 = python3Target1.templatesExist();
        org.antlr.v4.codegen.CodeGenerator codeGenerator18 = null;
        java.lang.String str21 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator18, "_tset__\\\\\\\"\\\\\\\\\\\\\\\\1\\\\\\\"ContextContext", true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Python3" + "'", str4, "Python3");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Python3" + "'", str7, "Python3");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\\n" + "'", str9, "\\n");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "\"_Python3\"" + "'", str11, "\"_Python3\"");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Python3Context" + "'", str13, "Python3Context");
        org.junit.Assert.assertNull(codeGenerator14);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "\"\"Context" + "'", str16, "\"\"Context");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "\"tset__\\\\\\\"\\\\\\\\\\\\\\\\1\\\\\\\"ContextContex\"" + "'", str21, "\"tset__\\\\\\\"\\\\\\\\\\\\\\\\1\\\\\\\"ContextContex\"");
    }

    @Test
    public void test1224() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1224");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = python3Target1.getCodeGenerator();
        java.lang.String str5 = python3Target1.encodeIntAsCharEscape((int) (short) 10);
        java.util.Set<java.lang.String> strSet6 = python3Target1.getBadWords();
        java.lang.String str7 = python3Target1.getLanguage();
        java.lang.String str9 = python3Target1.getListLabel("\\\\n");
        java.lang.String str11 = python3Target1.encodeIntAsCharEscape(100);
        boolean boolean12 = python3Target1.templatesExist();
        org.antlr.v4.codegen.CodeGenerator codeGenerator13 = python3Target1.getCodeGenerator();
        boolean boolean14 = python3Target1.supportsOverloadedMethods();
        java.lang.String str16 = python3Target1.getAltLabelContextStructName("_tset\\\"4.5.2.1");
        org.antlr.v4.tool.ast.GrammarAST grammarAST17 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean18 = python3Target1.grammarSymbolCausesIssueInGeneratedCode(grammarAST17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(codeGenerator3);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "\\n" + "'", str5, "\\n");
        org.junit.Assert.assertNotNull(strSet6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Python3" + "'", str7, "Python3");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\\\\n" + "'", str9, "\\\\n");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "d" + "'", str11, "d");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNull(codeGenerator13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "_tset\\\"4.5.2.1Context" + "'", str16, "_tset\\\"4.5.2.1Context");
    }

    @Test
    public void test1225() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1225");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        boolean boolean3 = python3Target1.templatesExist();
        java.lang.String str4 = python3Target1.getVersion();
        java.lang.String str6 = python3Target1.getImplicitSetLabel("_tsethi!");
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = python3Target1.getCodeGenerator();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "4.5.2.1" + "'", str4, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "_tset_tsethi!" + "'", str6, "_tset_tsethi!");
        org.junit.Assert.assertNull(codeGenerator7);
    }

    @Test
    public void test1226() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1226");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        boolean boolean3 = python3Target1.wantsBaseVisitor();
        java.lang.String str4 = python3Target1.getLanguage();
        java.lang.String str7 = python3Target1.getTargetStringLiteralFromString("Python3", false);
        boolean boolean8 = python3Target1.templatesExist();
        java.lang.String str10 = python3Target1.getTargetStringLiteralFromString("hi!");
        java.lang.String str12 = python3Target1.getImplicitRuleLabel("\"hi!\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator13 = null;
        java.lang.String str16 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator13, "__\"\\\\1\"", false);
        int int17 = python3Target1.getInlineTestSetWordSize();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Python3" + "'", str4, "Python3");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Python3" + "'", str7, "Python3");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\"hi!\"" + "'", str10, "\"hi!\"");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "_\"hi!\"" + "'", str12, "_\"hi!\"");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "_\\\"\\\\1" + "'", str16, "_\\\"\\\\1");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 64 + "'", int17 == 64);
    }

    @Test
    public void test1227() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1227");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        java.lang.String str4 = python3Target1.getAltLabelContextStructName("_Python3");
        org.antlr.v4.codegen.CodeGenerator codeGenerator5 = null;
        java.lang.String str8 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator5, "__tsethi!", false);
        boolean boolean9 = python3Target1.wantsBaseListener();
        java.lang.String str11 = python3Target1.getImplicitSetLabel("");
        java.lang.String str13 = python3Target1.getListLabel("_\\\"hi!\\\"");
        boolean boolean14 = python3Target1.templatesExist();
        java.lang.String str17 = python3Target1.getTargetStringLiteralFromString("\"\\\\1\"", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator18 = null;
        java.lang.String str21 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator18, "\"\"ContextContext", false);
        int int22 = python3Target1.getInlineTestSetWordSize();
        boolean boolean23 = python3Target1.templatesExist();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str25 = python3Target1.getElementName("\"\\\"\\\"\"Context");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "_Python3Context" + "'", str4, "_Python3Context");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "_tsethi" + "'", str8, "_tsethi");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "_tset" + "'", str11, "_tset");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "_\\\"hi!\\\"" + "'", str13, "_\\\"hi!\\\"");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "\"\\\"\\\\\\\\1\\\"\"" + "'", str17, "\"\\\"\\\\\\\\1\\\"\"");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "\\\"ContextContex" + "'", str21, "\\\"ContextContex");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 64 + "'", int22 == 64);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
    }

    @Test
    public void test1228() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1228");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        java.lang.String str4 = python3Target1.getListLabel("");
        boolean boolean5 = python3Target1.wantsBaseListener();
        int int6 = python3Target1.getSerializedATNSegmentLimit();
        boolean boolean7 = python3Target1.templatesExist();
        int int8 = python3Target1.getSerializedATNSegmentLimit();
        org.antlr.v4.codegen.CodeGenerator codeGenerator9 = null;
        java.lang.String str12 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator9, "\\\"\\\"Python3Contex\\\"Context", true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 29 + "'", int6 == 29);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 29 + "'", int8 == 29);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "\"\\\"\\\"Python3Contex\\\"Contex\"" + "'", str12, "\"\\\"\\\"Python3Contex\\\"Contex\"");
    }

    @Test
    public void test1229() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1229");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        boolean boolean3 = python3Target1.wantsBaseVisitor();
        java.lang.String str4 = python3Target1.getLanguage();
        java.lang.String str7 = python3Target1.getTargetStringLiteralFromString("Python3", false);
        boolean boolean8 = python3Target1.templatesExist();
        org.stringtemplate.v4.STGroup sTGroup9 = python3Target1.getTemplates();
        boolean boolean10 = python3Target1.supportsOverloadedMethods();
        java.lang.String str11 = python3Target1.getLanguage();
        java.lang.String str12 = python3Target1.getVersion();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Python3" + "'", str4, "Python3");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Python3" + "'", str7, "Python3");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(sTGroup9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Python3" + "'", str11, "Python3");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "4.5.2.1" + "'", str12, "4.5.2.1");
    }

    @Test
    public void test1230() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1230");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        boolean boolean3 = python3Target1.wantsBaseVisitor();
        java.lang.String str4 = python3Target1.getLanguage();
        java.lang.String str7 = python3Target1.getTargetStringLiteralFromString("Python3", false);
        boolean boolean8 = python3Target1.templatesExist();
        org.stringtemplate.v4.STGroup sTGroup9 = python3Target1.getTemplates();
        boolean boolean10 = python3Target1.supportsOverloadedMethods();
        java.lang.String str11 = python3Target1.getVersion();
        java.lang.String str13 = python3Target1.getImplicitRuleLabel("\"4.5.2.1\"");
        boolean boolean14 = python3Target1.templatesExist();
        java.lang.String str15 = python3Target1.getVersion();
        boolean boolean16 = python3Target1.templatesExist();
        org.stringtemplate.v4.STGroup sTGroup17 = python3Target1.getTemplates();
        java.lang.String str19 = python3Target1.getListLabel("\"\\\"hi!\\\"\"");
        org.antlr.v4.codegen.model.RuleFunction ruleFunction20 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str21 = python3Target1.getRuleFunctionContextStructName(ruleFunction20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Python3" + "'", str4, "Python3");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Python3" + "'", str7, "Python3");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(sTGroup9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "4.5.2.1" + "'", str11, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "_\"4.5.2.1\"" + "'", str13, "_\"4.5.2.1\"");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "4.5.2.1" + "'", str15, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(sTGroup17);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "\"\\\"hi!\\\"\"" + "'", str19, "\"\\\"hi!\\\"\"");
    }

    @Test
    public void test1231() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1231");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        java.lang.String str4 = python3Target1.getListLabel("");
        boolean boolean5 = python3Target1.wantsBaseListener();
        int int6 = python3Target1.getSerializedATNSegmentLimit();
        java.lang.String str9 = python3Target1.getTargetStringLiteralFromString("__hi!", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = null;
        java.lang.String str13 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator10, "__hi!", false);
        org.antlr.v4.tool.ast.GrammarAST grammarAST14 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str15 = python3Target1.getLoopLabel(grammarAST14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 29 + "'", int6 == 29);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\"__hi!\"" + "'", str9, "\"__hi!\"");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "_hi" + "'", str13, "_hi");
    }

    @Test
    public void test1232() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1232");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.lang.String str3 = python3Target1.encodeIntAsCharEscape(1);
        java.lang.String str4 = python3Target1.getVersion();
        java.lang.String str6 = python3Target1.getImplicitRuleLabel("_tsethi!");
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = null;
        java.lang.String str10 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator7, "_Python3", false);
        org.antlr.v4.codegen.CodeGenerator codeGenerator11 = python3Target1.getCodeGenerator();
        java.lang.String str14 = python3Target1.getTargetStringLiteralFromString("\"\"", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator15 = python3Target1.getCodeGenerator();
        java.lang.String str17 = python3Target1.getImplicitRuleLabel("\"\\\\\\\"\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\1Context\\\\\\\\\\\\\\\"\\\\\\\"\"");
        java.lang.String str19 = python3Target1.getImplicitSetLabel("");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "\\1" + "'", str3, "\\1");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "4.5.2.1" + "'", str4, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "__tsethi!" + "'", str6, "__tsethi!");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Python" + "'", str10, "Python");
        org.junit.Assert.assertNull(codeGenerator11);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "\"\\\"\\\"\"" + "'", str14, "\"\\\"\\\"\"");
        org.junit.Assert.assertNull(codeGenerator15);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "_\"\\\\\\\"\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\1Context\\\\\\\\\\\\\\\"\\\\\\\"\"" + "'", str17, "_\"\\\\\\\"\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\1Context\\\\\\\\\\\\\\\"\\\\\\\"\"");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "_tset" + "'", str19, "_tset");
    }

    @Test
    public void test1233() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1233");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        boolean boolean3 = python3Target1.wantsBaseVisitor();
        java.lang.String str4 = python3Target1.getLanguage();
        java.lang.String str7 = python3Target1.getTargetStringLiteralFromString("Python3", false);
        java.lang.String str9 = python3Target1.getImplicitRuleLabel("Python3");
        org.stringtemplate.v4.STGroup sTGroup10 = python3Target1.getTemplates();
        java.lang.Class<?> wildcardClass11 = sTGroup10.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Python3" + "'", str4, "Python3");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Python3" + "'", str7, "Python3");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "_Python3" + "'", str9, "_Python3");
        org.junit.Assert.assertNotNull(sTGroup10);
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test1234() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1234");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.lang.String str3 = python3Target1.encodeIntAsCharEscape(1);
        java.lang.String str4 = python3Target1.getVersion();
        java.lang.String str6 = python3Target1.getImplicitRuleLabel("_tsethi!");
        java.lang.String str8 = python3Target1.encodeIntAsCharEscape((int) '#');
        java.lang.String str10 = python3Target1.getImplicitSetLabel("_tset__\\\\\\\"\\\\\\\\\\\\\\\\1\\\\\\\"");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "\\1" + "'", str3, "\\1");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "4.5.2.1" + "'", str4, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "__tsethi!" + "'", str6, "__tsethi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "#" + "'", str8, "#");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "_tset_tset__\\\\\\\"\\\\\\\\\\\\\\\\1\\\\\\\"" + "'", str10, "_tset_tset__\\\\\\\"\\\\\\\\\\\\\\\\1\\\\\\\"");
    }

    @Test
    public void test1235() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1235");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        boolean boolean3 = python3Target1.wantsBaseVisitor();
        java.lang.String str4 = python3Target1.getLanguage();
        java.lang.String str7 = python3Target1.getTargetStringLiteralFromString("Python3", false);
        boolean boolean8 = python3Target1.templatesExist();
        org.stringtemplate.v4.STGroup sTGroup9 = python3Target1.getTemplates();
        boolean boolean10 = python3Target1.supportsOverloadedMethods();
        java.lang.String str11 = python3Target1.getVersion();
        java.lang.String str13 = python3Target1.getImplicitRuleLabel("\"4.5.2.1\"");
        boolean boolean14 = python3Target1.templatesExist();
        java.lang.String str15 = python3Target1.getVersion();
        boolean boolean16 = python3Target1.templatesExist();
        org.stringtemplate.v4.STGroup sTGroup17 = python3Target1.getTemplates();
        java.lang.String str19 = python3Target1.getListLabel("\"\\\"hi!\\\"\"");
        java.lang.String str21 = python3Target1.getImplicitSetLabel("\"Python3Contex\"");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Python3" + "'", str4, "Python3");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Python3" + "'", str7, "Python3");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(sTGroup9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "4.5.2.1" + "'", str11, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "_\"4.5.2.1\"" + "'", str13, "_\"4.5.2.1\"");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "4.5.2.1" + "'", str15, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(sTGroup17);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "\"\\\"hi!\\\"\"" + "'", str19, "\"\\\"hi!\\\"\"");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "_tset\"Python3Contex\"" + "'", str21, "_tset\"Python3Contex\"");
    }

    @Test
    public void test1236() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1236");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        java.lang.String str4 = python3Target1.getListLabel("");
        boolean boolean5 = python3Target1.supportsOverloadedMethods();
        java.lang.String str7 = python3Target1.encodeIntAsCharEscape((int) ' ');
        java.lang.String str10 = python3Target1.getTargetStringLiteralFromString("\"_tsethi\"", false);
        boolean boolean11 = python3Target1.wantsBaseVisitor();
        java.lang.String str14 = python3Target1.getTargetStringLiteralFromString("\\64", true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + " " + "'", str7, " ");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\\\"_tsethi\\\"" + "'", str10, "\\\"_tsethi\\\"");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "\"\\\\64\"" + "'", str14, "\"\\\\64\"");
    }

    @Test
    public void test1237() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1237");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        java.lang.String str4 = python3Target1.getAltLabelContextStructName("_Python3");
        org.antlr.v4.codegen.CodeGenerator codeGenerator5 = null;
        java.lang.String str8 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator5, "__tsethi!", false);
        java.lang.String str9 = python3Target1.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = null;
        java.lang.String str13 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator10, "\"_tsethi!\"", false);
        org.antlr.v4.tool.ast.GrammarAST grammarAST14 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str15 = python3Target1.getLoopLabel(grammarAST14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "_Python3Context" + "'", str4, "_Python3Context");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "_tsethi" + "'", str8, "_tsethi");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "4.5.2.1" + "'", str9, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "_tsethi!" + "'", str13, "_tsethi!");
    }

    @Test
    public void test1238() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1238");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        boolean boolean3 = python3Target1.templatesExist();
        org.stringtemplate.v4.STGroup sTGroup4 = python3Target1.getTemplates();
        int int5 = python3Target1.getInlineTestSetWordSize();
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = python3Target1.getCodeGenerator();
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = null;
        java.lang.String str10 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator7, "hi!", false);
        java.lang.String str12 = python3Target1.getListLabel("\"Python3Contex\"");
        boolean boolean13 = python3Target1.wantsBaseListener();
        boolean boolean14 = python3Target1.supportsOverloadedMethods();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str16 = python3Target1.getElementListName("_tset\"ython\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(sTGroup4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 64 + "'", int5 == 64);
        org.junit.Assert.assertNull(codeGenerator6);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "i" + "'", str10, "i");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "\"Python3Contex\"" + "'", str12, "\"Python3Contex\"");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test1239() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1239");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        boolean boolean3 = python3Target1.wantsBaseListener();
        java.lang.String str6 = python3Target1.getTargetStringLiteralFromString("\\\\1", false);
        boolean boolean7 = python3Target1.supportsOverloadedMethods();
        java.lang.String str8 = python3Target1.getLanguage();
        java.lang.String str11 = python3Target1.getTargetStringLiteralFromString("_tset_\"\\\"\\\\\\\\1\\\"\"", true);
        java.lang.String str12 = python3Target1.getVersion();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\\\\\\\\1" + "'", str6, "\\\\\\\\1");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Python3" + "'", str8, "Python3");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "\"_tset_\\\"\\\\\\\"\\\\\\\\\\\\\\\\1\\\\\\\"\\\"\"" + "'", str11, "\"_tset_\\\"\\\\\\\"\\\\\\\\\\\\\\\\1\\\\\\\"\\\"\"");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "4.5.2.1" + "'", str12, "4.5.2.1");
    }

    @Test
    public void test1240() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1240");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.lang.String str3 = python3Target1.encodeIntAsCharEscape(1);
        java.lang.String str4 = python3Target1.getVersion();
        java.lang.String str6 = python3Target1.getImplicitRuleLabel("_tsethi!");
        java.lang.String str8 = python3Target1.getAltLabelContextStructName("_tsethi!");
        java.lang.String str10 = python3Target1.getListLabel("_tset\\\\\\\\n");
        java.lang.String str12 = python3Target1.getAltLabelContextStructName("tset_tse");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str14 = python3Target1.getImplicitTokenLabel("\"\\\"\\\\\\\"Python3Contex\\\\\\\"\\\"\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "\\1" + "'", str3, "\\1");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "4.5.2.1" + "'", str4, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "__tsethi!" + "'", str6, "__tsethi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "_tsethi!Context" + "'", str8, "_tsethi!Context");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "_tset\\\\\\\\n" + "'", str10, "_tset\\\\\\\\n");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Tset_tseContext" + "'", str12, "Tset_tseContext");
    }

    @Test
    public void test1241() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1241");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        boolean boolean3 = python3Target1.wantsBaseListener();
        org.antlr.v4.codegen.CodeGenerator codeGenerator4 = python3Target1.getCodeGenerator();
        int int5 = python3Target1.getSerializedATNSegmentLimit();
        org.antlr.v4.tool.Grammar grammar6 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str8 = python3Target1.getTokenTypeAsTargetLabel(grammar6, (int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(codeGenerator4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 29 + "'", int5 == 29);
    }

    @Test
    public void test1242() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1242");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        java.lang.String str4 = python3Target1.getListLabel("");
        boolean boolean5 = python3Target1.supportsOverloadedMethods();
        java.lang.String str7 = python3Target1.encodeIntAsCharEscape((int) ' ');
        java.lang.String str10 = python3Target1.getTargetStringLiteralFromString("\"_tsethi\"", false);
        java.util.Set<java.lang.String> strSet11 = python3Target1.getBadWords();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + " " + "'", str7, " ");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\\\"_tsethi\\\"" + "'", str10, "\\\"_tsethi\\\"");
        org.junit.Assert.assertNotNull(strSet11);
    }

    @Test
    public void test1243() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1243");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        boolean boolean3 = python3Target1.templatesExist();
        org.stringtemplate.v4.STGroup sTGroup4 = python3Target1.getTemplates();
        boolean boolean5 = python3Target1.supportsOverloadedMethods();
        java.lang.String str8 = python3Target1.getTargetStringLiteralFromString("_tsethi", false);
        java.lang.String str10 = python3Target1.getTargetStringLiteralFromString("\\\"hi!\\\"");
        boolean boolean11 = python3Target1.wantsBaseVisitor();
        int int12 = python3Target1.getInlineTestSetWordSize();
        org.antlr.v4.tool.ast.GrammarAST grammarAST13 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str14 = python3Target1.getLoopLabel(grammarAST13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(sTGroup4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "_tsethi" + "'", str8, "_tsethi");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\"\\\\\\\"hi!\\\\\\\"\"" + "'", str10, "\"\\\\\\\"hi!\\\\\\\"\"");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 64 + "'", int12 == 64);
    }

    @Test
    public void test1244() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1244");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        boolean boolean3 = python3Target1.templatesExist();
        java.lang.String str4 = python3Target1.getVersion();
        int int5 = python3Target1.getInlineTestSetWordSize();
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = python3Target1.getCodeGenerator();
        boolean boolean7 = python3Target1.wantsBaseVisitor();
        java.lang.String str9 = python3Target1.getImplicitSetLabel("\"\\\\\\\"hi!\\\\\\\"\"");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "4.5.2.1" + "'", str4, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 64 + "'", int5 == 64);
        org.junit.Assert.assertNull(codeGenerator6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "_tset\"\\\\\\\"hi!\\\\\\\"\"" + "'", str9, "_tset\"\\\\\\\"hi!\\\\\\\"\"");
    }

    @Test
    public void test1245() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1245");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        boolean boolean3 = python3Target1.wantsBaseVisitor();
        java.lang.String str4 = python3Target1.getLanguage();
        java.lang.String str7 = python3Target1.getTargetStringLiteralFromString("Python3", false);
        java.lang.String str10 = python3Target1.getTargetStringLiteralFromString("Python3", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator11 = python3Target1.getCodeGenerator();
        java.lang.String str13 = python3Target1.encodeIntAsCharEscape((int) (short) 10);
        org.antlr.v4.tool.Rule rule14 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str15 = python3Target1.getRuleFunctionContextStructName(rule14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Python3" + "'", str4, "Python3");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Python3" + "'", str7, "Python3");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\"Python3\"" + "'", str10, "\"Python3\"");
        org.junit.Assert.assertNull(codeGenerator11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "\\n" + "'", str13, "\\n");
    }

    @Test
    public void test1246() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1246");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.lang.String str3 = python3Target1.encodeIntAsCharEscape(1);
        java.lang.String str4 = python3Target1.getVersion();
        java.lang.String str6 = python3Target1.getImplicitRuleLabel("_tsethi!");
        java.lang.String str8 = python3Target1.getImplicitRuleLabel("__tsethi!");
        org.antlr.v4.codegen.CodeGenerator codeGenerator9 = python3Target1.getCodeGenerator();
        java.lang.String str11 = python3Target1.getImplicitRuleLabel("\"_tset\\\\\\\"ython\\\\\\\"\"");
        boolean boolean12 = python3Target1.wantsBaseListener();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "\\1" + "'", str3, "\\1");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "4.5.2.1" + "'", str4, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "__tsethi!" + "'", str6, "__tsethi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "___tsethi!" + "'", str8, "___tsethi!");
        org.junit.Assert.assertNull(codeGenerator9);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "_\"_tset\\\\\\\"ython\\\\\\\"\"" + "'", str11, "_\"_tset\\\\\\\"ython\\\\\\\"\"");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test1247() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1247");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        boolean boolean3 = python3Target1.wantsBaseVisitor();
        java.lang.String str4 = python3Target1.getLanguage();
        java.lang.String str7 = python3Target1.getTargetStringLiteralFromString("Python3", false);
        boolean boolean8 = python3Target1.templatesExist();
        org.stringtemplate.v4.STGroup sTGroup9 = python3Target1.getTemplates();
        boolean boolean10 = python3Target1.supportsOverloadedMethods();
        java.lang.String str11 = python3Target1.getVersion();
        java.lang.String str12 = python3Target1.getLanguage();
        java.lang.String str15 = python3Target1.getTargetStringLiteralFromString("\\\\1Context", false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Python3" + "'", str4, "Python3");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Python3" + "'", str7, "Python3");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(sTGroup9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "4.5.2.1" + "'", str11, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Python3" + "'", str12, "Python3");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "\\\\\\\\1Context" + "'", str15, "\\\\\\\\1Context");
    }

    @Test
    public void test1248() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1248");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        boolean boolean3 = python3Target1.templatesExist();
        org.stringtemplate.v4.STGroup sTGroup4 = python3Target1.getTemplates();
        java.lang.String str6 = python3Target1.encodeIntAsCharEscape(1);
        java.lang.String str7 = python3Target1.getVersion();
        boolean boolean8 = python3Target1.wantsBaseListener();
        boolean boolean9 = python3Target1.templatesExist();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(sTGroup4);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\\1" + "'", str6, "\\1");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "4.5.2.1" + "'", str7, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
    }

    @Test
    public void test1249() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1249");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.lang.String str3 = python3Target1.encodeIntAsCharEscape(1);
        org.antlr.v4.codegen.CodeGenerator codeGenerator4 = null;
        java.lang.String str7 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator4, "_Python3Context", true);
        java.lang.String str9 = python3Target1.getListLabel("hi!");
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = python3Target1.getCodeGenerator();
        java.lang.String str12 = python3Target1.getAltLabelContextStructName("_tset_Python3");
        java.lang.String str14 = python3Target1.getImplicitRuleLabel("_tset_Python3Context");
        boolean boolean15 = python3Target1.templatesExist();
        int int16 = python3Target1.getInlineTestSetWordSize();
        boolean boolean17 = python3Target1.wantsBaseVisitor();
        int int18 = python3Target1.getInlineTestSetWordSize();
        org.antlr.v4.tool.ast.GrammarAST grammarAST19 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean20 = python3Target1.grammarSymbolCausesIssueInGeneratedCode(grammarAST19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "\\1" + "'", str3, "\\1");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "\"Python3Contex\"" + "'", str7, "\"Python3Contex\"");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertNull(codeGenerator10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "_tset_Python3Context" + "'", str12, "_tset_Python3Context");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "__tset_Python3Context" + "'", str14, "__tset_Python3Context");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 64 + "'", int16 == 64);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 64 + "'", int18 == 64);
    }

    @Test
    public void test1250() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1250");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        boolean boolean3 = python3Target1.wantsBaseListener();
        java.lang.String str6 = python3Target1.getTargetStringLiteralFromString("\\\\1", false);
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = null;
        java.lang.String str10 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator7, "_\"\\\"Python3Contex\\\"\"", false);
        boolean boolean11 = python3Target1.supportsOverloadedMethods();
        java.lang.String str12 = python3Target1.getLanguage();
        java.lang.String str14 = python3Target1.getAltLabelContextStructName("__tset_Python3ContextContext");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\\\\\\\\1" + "'", str6, "\\\\\\\\1");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\\\"\\\"Python3Contex\\\"" + "'", str10, "\\\"\\\"Python3Contex\\\"");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Python3" + "'", str12, "Python3");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "__tset_Python3ContextContextContext" + "'", str14, "__tset_Python3ContextContextContext");
    }

    @Test
    public void test1251() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1251");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.lang.String str3 = python3Target1.encodeIntAsCharEscape(1);
        java.lang.String str4 = python3Target1.getVersion();
        java.lang.String str6 = python3Target1.getImplicitRuleLabel("_tsethi!");
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = null;
        java.lang.String str10 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator7, "_Python3", false);
        org.antlr.v4.codegen.CodeGenerator codeGenerator11 = python3Target1.getCodeGenerator();
        java.lang.String str14 = python3Target1.getTargetStringLiteralFromString("\"\"", true);
        int int15 = python3Target1.getInlineTestSetWordSize();
        int int16 = python3Target1.getInlineTestSetWordSize();
        org.stringtemplate.v4.STGroup sTGroup17 = python3Target1.getTemplates();
        boolean boolean18 = python3Target1.wantsBaseVisitor();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str20 = python3Target1.getElementName("\"\\\"_ \\\"\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "\\1" + "'", str3, "\\1");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "4.5.2.1" + "'", str4, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "__tsethi!" + "'", str6, "__tsethi!");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Python" + "'", str10, "Python");
        org.junit.Assert.assertNull(codeGenerator11);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "\"\\\"\\\"\"" + "'", str14, "\"\\\"\\\"\"");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 64 + "'", int15 == 64);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 64 + "'", int16 == 64);
        org.junit.Assert.assertNotNull(sTGroup17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    }

    @Test
    public void test1252() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1252");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        org.antlr.v4.codegen.CodeGenerator codeGenerator2 = null;
        java.lang.String str5 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator2, "_Python3Context", true);
        java.lang.String str7 = python3Target1.getListLabel("Python");
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = null;
        java.lang.String str11 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator8, "___tsethi!", true);
        boolean boolean12 = python3Target1.templatesExist();
        java.lang.String str14 = python3Target1.encodeIntAsCharEscape(29);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "\"Python3Contex\"" + "'", str5, "\"Python3Contex\"");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Python" + "'", str7, "Python");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "\"__tsethi\"" + "'", str11, "\"__tsethi\"");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "\\35" + "'", str14, "\\35");
    }

    @Test
    public void test1253() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1253");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        java.lang.String str4 = python3Target1.getAltLabelContextStructName("_Python3");
        java.lang.String str6 = python3Target1.getImplicitSetLabel("i");
        java.lang.String str8 = python3Target1.encodeIntAsCharEscape(64);
        java.lang.String str9 = python3Target1.getLanguage();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "_Python3Context" + "'", str4, "_Python3Context");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "_tseti" + "'", str6, "_tseti");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "@" + "'", str8, "@");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Python3" + "'", str9, "Python3");
    }

    @Test
    public void test1254() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1254");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = python3Target1.getCodeGenerator();
        java.lang.String str5 = python3Target1.encodeIntAsCharEscape((int) (short) 10);
        java.util.Set<java.lang.String> strSet6 = python3Target1.getBadWords();
        int int7 = python3Target1.getSerializedATNSegmentLimit();
        java.lang.String str10 = python3Target1.getTargetStringLiteralFromString("\"__\\\"___tsethi!\\\"Context\"", false);
        java.lang.String str11 = python3Target1.getLanguage();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(codeGenerator3);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "\\n" + "'", str5, "\\n");
        org.junit.Assert.assertNotNull(strSet6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 29 + "'", int7 == 29);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\\\"__\\\\\\\"___tsethi!\\\\\\\"Context\\\"" + "'", str10, "\\\"__\\\\\\\"___tsethi!\\\\\\\"Context\\\"");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Python3" + "'", str11, "Python3");
    }

    @Test
    public void test1255() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1255");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        boolean boolean3 = python3Target1.wantsBaseVisitor();
        java.lang.String str4 = python3Target1.getLanguage();
        java.lang.String str7 = python3Target1.getTargetStringLiteralFromString("Python3", false);
        boolean boolean8 = python3Target1.templatesExist();
        java.lang.String str10 = python3Target1.getTargetStringLiteralFromString("hi!");
        org.stringtemplate.v4.STGroup sTGroup11 = python3Target1.getTemplates();
        org.antlr.v4.codegen.CodeGenerator codeGenerator12 = null;
        java.lang.String str15 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator12, "_\"hi!\"", false);
        java.lang.String str17 = python3Target1.getAltLabelContextStructName("\"\\\"\\\\\\\\\\\\\\\"hi!\\\\\\\\\\\\\\\"\\\"\"");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Python3" + "'", str4, "Python3");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Python3" + "'", str7, "Python3");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\"hi!\"" + "'", str10, "\"hi!\"");
        org.junit.Assert.assertNotNull(sTGroup11);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "\\\"hi!" + "'", str15, "\\\"hi!");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "\"\\\"\\\\\\\\\\\\\\\"hi!\\\\\\\\\\\\\\\"\\\"\"Context" + "'", str17, "\"\\\"\\\\\\\\\\\\\\\"hi!\\\\\\\\\\\\\\\"\\\"\"Context");
    }

    @Test
    public void test1256() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1256");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        java.util.Set<java.lang.String> strSet3 = python3Target1.getBadWords();
        org.stringtemplate.v4.STGroup sTGroup4 = python3Target1.getTemplates();
        java.lang.String str6 = python3Target1.getListLabel("_Python3Context");
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = null;
        java.lang.String str10 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator7, "a", true);
        org.antlr.v4.tool.Rule rule11 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str12 = python3Target1.getRuleFunctionContextStructName(rule11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNotNull(sTGroup4);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "_Python3Context" + "'", str6, "_Python3Context");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\"\"" + "'", str10, "\"\"");
    }

    @Test
    public void test1257() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1257");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        boolean boolean3 = python3Target1.templatesExist();
        org.stringtemplate.v4.STGroup sTGroup4 = python3Target1.getTemplates();
        org.stringtemplate.v4.STGroup sTGroup5 = python3Target1.getTemplates();
        java.lang.String str6 = python3Target1.getVersion();
        org.antlr.v4.tool.Grammar grammar7 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target9 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator8);
        boolean boolean10 = python3Target9.wantsBaseListener();
        boolean boolean11 = python3Target9.wantsBaseVisitor();
        java.lang.String str12 = python3Target9.getLanguage();
        org.antlr.v4.tool.Grammar grammar13 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator14 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target15 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator14);
        java.lang.String str17 = python3Target15.encodeIntAsCharEscape(1);
        org.stringtemplate.v4.STGroup sTGroup18 = python3Target15.getTemplates();
        boolean boolean19 = python3Target15.supportsOverloadedMethods();
        boolean boolean20 = python3Target15.templatesExist();
        org.antlr.v4.tool.Grammar grammar21 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator22 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target23 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator22);
        java.lang.String str25 = python3Target23.encodeIntAsCharEscape(1);
        java.lang.String str26 = python3Target23.getVersion();
        java.lang.String str28 = python3Target23.getImplicitRuleLabel("_tsethi!");
        java.lang.String str30 = python3Target23.getImplicitRuleLabel("__tsethi!");
        org.antlr.v4.codegen.CodeGenerator codeGenerator31 = python3Target23.getCodeGenerator();
        boolean boolean32 = python3Target23.supportsOverloadedMethods();
        java.lang.String str35 = python3Target23.getTargetStringLiteralFromString("\"_Python3\"", true);
        java.util.Set<java.lang.String> strSet36 = python3Target23.getBadWords();
        org.antlr.v4.tool.Grammar grammar37 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator38 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target39 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator38);
        boolean boolean40 = python3Target39.wantsBaseListener();
        org.antlr.v4.codegen.CodeGenerator codeGenerator41 = python3Target39.getCodeGenerator();
        java.lang.String str44 = python3Target39.getTargetStringLiteralFromString("\\n", false);
        org.antlr.v4.tool.Grammar grammar45 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator46 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target47 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator46);
        boolean boolean48 = python3Target47.wantsBaseListener();
        java.util.Set<java.lang.String> strSet49 = python3Target47.getBadWords();
        org.stringtemplate.v4.STGroup sTGroup50 = python3Target47.getTemplates();
        java.lang.String str52 = python3Target47.getImplicitRuleLabel("\"\\\\1\"");
        org.antlr.v4.tool.Grammar grammar53 = null;
        int[] intArray54 = new int[] {};
        java.lang.String[] strArray55 = python3Target47.getTokenTypesAsTargetLabels(grammar53, intArray54);
        java.lang.String[] strArray56 = python3Target39.getTokenTypesAsTargetLabels(grammar45, intArray54);
        java.lang.String[] strArray57 = python3Target23.getTokenTypesAsTargetLabels(grammar37, intArray54);
        java.lang.String[] strArray58 = python3Target15.getTokenTypesAsTargetLabels(grammar21, intArray54);
        java.lang.String[] strArray59 = python3Target9.getTokenTypesAsTargetLabels(grammar13, intArray54);
        java.lang.String[] strArray60 = python3Target1.getTokenTypesAsTargetLabels(grammar7, intArray54);
        org.antlr.v4.codegen.CodeGenerator codeGenerator61 = null;
        java.lang.String str64 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator61, "", false);
        boolean boolean65 = python3Target1.supportsOverloadedMethods();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(sTGroup4);
        org.junit.Assert.assertNotNull(sTGroup5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "4.5.2.1" + "'", str6, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Python3" + "'", str12, "Python3");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "\\1" + "'", str17, "\\1");
        org.junit.Assert.assertNotNull(sTGroup18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "\\1" + "'", str25, "\\1");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "4.5.2.1" + "'", str26, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "__tsethi!" + "'", str28, "__tsethi!");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "___tsethi!" + "'", str30, "___tsethi!");
        org.junit.Assert.assertNull(codeGenerator31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "\"\\\"_Python3\\\"\"" + "'", str35, "\"\\\"_Python3\\\"\"");
        org.junit.Assert.assertNotNull(strSet36);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNull(codeGenerator41);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "\\\\n" + "'", str44, "\\\\n");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(strSet49);
        org.junit.Assert.assertNotNull(sTGroup50);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "_\"\\\\1\"" + "'", str52, "_\"\\\\1\"");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[]");
        org.junit.Assert.assertNotNull(strArray55);
        org.junit.Assert.assertNotNull(strArray56);
        org.junit.Assert.assertNotNull(strArray57);
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertNotNull(strArray59);
        org.junit.Assert.assertNotNull(strArray60);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "" + "'", str64, "");
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
    }

    @Test
    public void test1258() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1258");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        boolean boolean3 = python3Target1.templatesExist();
        org.stringtemplate.v4.STGroup sTGroup4 = python3Target1.getTemplates();
        boolean boolean5 = python3Target1.supportsOverloadedMethods();
        java.lang.String str8 = python3Target1.getTargetStringLiteralFromString("_tsethi", false);
        java.lang.String str10 = python3Target1.getTargetStringLiteralFromString("\\\"hi!\\\"");
        boolean boolean11 = python3Target1.wantsBaseVisitor();
        org.stringtemplate.v4.STGroup sTGroup12 = python3Target1.getTemplates();
        org.antlr.v4.codegen.CodeGenerator codeGenerator13 = null;
        java.lang.String str16 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator13, "_tseti", false);
        org.antlr.v4.codegen.model.RuleFunction ruleFunction17 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str18 = python3Target1.getRuleFunctionContextStructName(ruleFunction17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(sTGroup4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "_tsethi" + "'", str8, "_tsethi");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\"\\\\\\\"hi!\\\\\\\"\"" + "'", str10, "\"\\\\\\\"hi!\\\\\\\"\"");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(sTGroup12);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "tset" + "'", str16, "tset");
    }

    @Test
    public void test1259() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1259");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        boolean boolean3 = python3Target1.wantsBaseVisitor();
        java.lang.String str4 = python3Target1.getLanguage();
        java.lang.String str7 = python3Target1.getTargetStringLiteralFromString("Python3", false);
        java.lang.String str10 = python3Target1.getTargetStringLiteralFromString("Python3", true);
        java.lang.String str12 = python3Target1.getImplicitSetLabel("hi!");
        java.lang.String str14 = python3Target1.getTargetStringLiteralFromString("\"Python3Contex\"");
        boolean boolean15 = python3Target1.supportsOverloadedMethods();
        boolean boolean16 = python3Target1.templatesExist();
        java.lang.String str18 = python3Target1.getImplicitRuleLabel("_tset\\\"4.5.2.1Context");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Python3" + "'", str4, "Python3");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Python3" + "'", str7, "Python3");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\"Python3\"" + "'", str10, "\"Python3\"");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "_tsethi!" + "'", str12, "_tsethi!");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "\"\\\"Python3Contex\\\"\"" + "'", str14, "\"\\\"Python3Contex\\\"\"");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "__tset\\\"4.5.2.1Context" + "'", str18, "__tset\\\"4.5.2.1Context");
    }

    @Test
    public void test1260() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1260");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        boolean boolean3 = python3Target1.wantsBaseVisitor();
        java.lang.String str4 = python3Target1.getLanguage();
        java.lang.String str7 = python3Target1.getTargetStringLiteralFromString("Python3", false);
        java.lang.String str9 = python3Target1.getImplicitRuleLabel("Python3");
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = null;
        java.lang.String str13 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator10, "\\35", false);
        java.lang.String str15 = python3Target1.getImplicitRuleLabel("\"hi!\"");
        org.antlr.v4.tool.Grammar grammar16 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str18 = python3Target1.getTokenTypeAsTargetLabel(grammar16, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Python3" + "'", str4, "Python3");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Python3" + "'", str7, "Python3");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "_Python3" + "'", str9, "_Python3");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "3" + "'", str13, "3");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "_\"hi!\"" + "'", str15, "_\"hi!\"");
    }

    @Test
    public void test1261() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1261");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        boolean boolean3 = python3Target1.templatesExist();
        org.stringtemplate.v4.STGroup sTGroup4 = python3Target1.getTemplates();
        org.stringtemplate.v4.STGroup sTGroup5 = python3Target1.getTemplates();
        java.lang.String str7 = python3Target1.getImplicitRuleLabel("\"_Python3\"");
        java.lang.String str8 = python3Target1.getLanguage();
        boolean boolean9 = python3Target1.wantsBaseListener();
        java.lang.String str11 = python3Target1.getTargetStringLiteralFromString("_tsethi!");
        java.lang.String str13 = python3Target1.getTargetStringLiteralFromString("\"_ \"");
        org.antlr.v4.tool.ast.GrammarAST grammarAST14 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean15 = python3Target1.grammarSymbolCausesIssueInGeneratedCode(grammarAST14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(sTGroup4);
        org.junit.Assert.assertNotNull(sTGroup5);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "_\"_Python3\"" + "'", str7, "_\"_Python3\"");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Python3" + "'", str8, "Python3");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "\"_tsethi!\"" + "'", str11, "\"_tsethi!\"");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "\"\\\"_ \\\"\"" + "'", str13, "\"\\\"_ \\\"\"");
    }

    @Test
    public void test1262() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1262");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.lang.String str3 = python3Target1.encodeIntAsCharEscape(1);
        java.lang.String str4 = python3Target1.getVersion();
        java.lang.String str6 = python3Target1.getImplicitRuleLabel("_tsethi!");
        java.lang.String str8 = python3Target1.getImplicitRuleLabel("__tsethi!");
        org.antlr.v4.codegen.CodeGenerator codeGenerator9 = python3Target1.getCodeGenerator();
        boolean boolean10 = python3Target1.supportsOverloadedMethods();
        java.lang.String str13 = python3Target1.getTargetStringLiteralFromString("\"_Python3\"", true);
        java.util.Set<java.lang.String> strSet14 = python3Target1.getBadWords();
        boolean boolean15 = python3Target1.wantsBaseVisitor();
        java.util.Set<java.lang.String> strSet16 = python3Target1.getBadWords();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "\\1" + "'", str3, "\\1");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "4.5.2.1" + "'", str4, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "__tsethi!" + "'", str6, "__tsethi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "___tsethi!" + "'", str8, "___tsethi!");
        org.junit.Assert.assertNull(codeGenerator9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "\"\\\"_Python3\\\"\"" + "'", str13, "\"\\\"_Python3\\\"\"");
        org.junit.Assert.assertNotNull(strSet14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(strSet16);
    }

    @Test
    public void test1263() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1263");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.lang.String str3 = python3Target1.encodeIntAsCharEscape(1);
        java.lang.String str4 = python3Target1.getVersion();
        java.lang.String str6 = python3Target1.getImplicitRuleLabel("_tsethi!");
        java.lang.String str8 = python3Target1.getImplicitRuleLabel("__tsethi!");
        java.lang.String str9 = python3Target1.getVersion();
        int int10 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str12 = python3Target1.getAltLabelContextStructName("tsetPythonContex");
        org.antlr.v4.codegen.CodeGenerator codeGenerator13 = python3Target1.getCodeGenerator();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "\\1" + "'", str3, "\\1");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "4.5.2.1" + "'", str4, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "__tsethi!" + "'", str6, "__tsethi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "___tsethi!" + "'", str8, "___tsethi!");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "4.5.2.1" + "'", str9, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 64 + "'", int10 == 64);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "TsetPythonContexContext" + "'", str12, "TsetPythonContexContext");
        org.junit.Assert.assertNull(codeGenerator13);
    }

    @Test
    public void test1264() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1264");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        boolean boolean3 = python3Target1.templatesExist();
        org.stringtemplate.v4.STGroup sTGroup4 = python3Target1.getTemplates();
        int int5 = python3Target1.getInlineTestSetWordSize();
        org.stringtemplate.v4.STGroup sTGroup6 = python3Target1.getTemplates();
        int int7 = python3Target1.getSerializedATNSegmentLimit();
        java.lang.String str10 = python3Target1.getTargetStringLiteralFromString("_\\\"_Python3\\\"", false);
        java.lang.String str12 = python3Target1.getImplicitSetLabel("_tset__tset_Python3Context");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(sTGroup4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 64 + "'", int5 == 64);
        org.junit.Assert.assertNotNull(sTGroup6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 29 + "'", int7 == 29);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "_\\\\\\\"_Python3\\\\\\\"" + "'", str10, "_\\\\\\\"_Python3\\\\\\\"");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "_tset_tset__tset_Python3Context" + "'", str12, "_tset_tset__tset_Python3Context");
    }

    @Test
    public void test1265() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1265");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = python3Target1.getCodeGenerator();
        org.antlr.v4.codegen.CodeGenerator codeGenerator4 = null;
        java.lang.String str7 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator4, "d", true);
        java.util.Set<java.lang.String> strSet8 = python3Target1.getBadWords();
        boolean boolean9 = python3Target1.supportsOverloadedMethods();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(codeGenerator3);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "\"\"" + "'", str7, "\"\"");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test1266() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1266");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        boolean boolean3 = python3Target1.wantsBaseVisitor();
        java.lang.String str4 = python3Target1.getLanguage();
        java.lang.String str7 = python3Target1.getTargetStringLiteralFromString("Python3", false);
        java.lang.String str9 = python3Target1.getImplicitRuleLabel("Python3");
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = null;
        java.lang.String str13 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator10, "\\35", false);
        java.lang.String str15 = python3Target1.getImplicitRuleLabel("\"hi!\"");
        java.lang.String str18 = python3Target1.getTargetStringLiteralFromString("\"Python3Context\"", true);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str20 = python3Target1.getImplicitTokenLabel("\"tset_tse\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Python3" + "'", str4, "Python3");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Python3" + "'", str7, "Python3");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "_Python3" + "'", str9, "_Python3");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "3" + "'", str13, "3");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "_\"hi!\"" + "'", str15, "_\"hi!\"");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "\"\\\"Python3Context\\\"\"" + "'", str18, "\"\\\"Python3Context\\\"\"");
    }

    @Test
    public void test1267() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1267");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        boolean boolean3 = python3Target1.wantsBaseVisitor();
        java.lang.String str4 = python3Target1.getLanguage();
        java.lang.String str7 = python3Target1.getTargetStringLiteralFromString("Python3", false);
        boolean boolean8 = python3Target1.templatesExist();
        org.stringtemplate.v4.STGroup sTGroup9 = python3Target1.getTemplates();
        boolean boolean10 = python3Target1.supportsOverloadedMethods();
        java.lang.String str11 = python3Target1.getVersion();
        boolean boolean12 = python3Target1.wantsBaseListener();
        java.lang.String str14 = python3Target1.getListLabel("___tset\"4.5.2.1\"");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Python3" + "'", str4, "Python3");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Python3" + "'", str7, "Python3");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(sTGroup9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "4.5.2.1" + "'", str11, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "___tset\"4.5.2.1\"" + "'", str14, "___tset\"4.5.2.1\"");
    }

    @Test
    public void test1268() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1268");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        org.antlr.v4.codegen.CodeGenerator codeGenerator2 = python3Target1.getCodeGenerator();
        java.lang.String str3 = python3Target1.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup4 = python3Target1.getTemplates();
        java.lang.String str6 = python3Target1.getImplicitRuleLabel("_\"hi!\"");
        java.util.Set<java.lang.String> strSet7 = python3Target1.getBadWords();
        org.antlr.v4.tool.Rule rule8 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str9 = python3Target1.getRuleFunctionContextStructName(rule8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(codeGenerator2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Python3" + "'", str3, "Python3");
        org.junit.Assert.assertNotNull(sTGroup4);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "__\"hi!\"" + "'", str6, "__\"hi!\"");
        org.junit.Assert.assertNotNull(strSet7);
    }

    @Test
    public void test1269() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1269");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.lang.String str3 = python3Target1.encodeIntAsCharEscape(1);
        java.lang.String str4 = python3Target1.getVersion();
        java.lang.String str6 = python3Target1.getImplicitRuleLabel("_tsethi!");
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = null;
        java.lang.String str10 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator7, "_Python3", false);
        org.antlr.v4.codegen.CodeGenerator codeGenerator11 = python3Target1.getCodeGenerator();
        boolean boolean12 = python3Target1.supportsOverloadedMethods();
        boolean boolean13 = python3Target1.templatesExist();
        java.lang.String str14 = python3Target1.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup15 = python3Target1.getTemplates();
        int int16 = python3Target1.getSerializedATNSegmentLimit();
        boolean boolean17 = python3Target1.wantsBaseListener();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "\\1" + "'", str3, "\\1");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "4.5.2.1" + "'", str4, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "__tsethi!" + "'", str6, "__tsethi!");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Python" + "'", str10, "Python");
        org.junit.Assert.assertNull(codeGenerator11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Python3" + "'", str14, "Python3");
        org.junit.Assert.assertNotNull(sTGroup15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 29 + "'", int16 == 29);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    }

    @Test
    public void test1270() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1270");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        boolean boolean3 = python3Target1.wantsBaseVisitor();
        java.lang.String str4 = python3Target1.getLanguage();
        java.lang.String str7 = python3Target1.getTargetStringLiteralFromString("Python3", false);
        java.lang.String str9 = python3Target1.encodeIntAsCharEscape((int) (byte) 10);
        java.lang.String str11 = python3Target1.getTargetStringLiteralFromString("_Python3");
        java.lang.String str13 = python3Target1.getAltLabelContextStructName("Python3");
        java.lang.String str14 = python3Target1.getVersion();
        java.lang.String str16 = python3Target1.getImplicitSetLabel("\"hi!\"ContextContextContext");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Python3" + "'", str4, "Python3");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Python3" + "'", str7, "Python3");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\\n" + "'", str9, "\\n");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "\"_Python3\"" + "'", str11, "\"_Python3\"");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Python3Context" + "'", str13, "Python3Context");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "4.5.2.1" + "'", str14, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "_tset\"hi!\"ContextContextContext" + "'", str16, "_tset\"hi!\"ContextContextContext");
    }

    @Test
    public void test1271() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1271");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        boolean boolean3 = python3Target1.wantsBaseVisitor();
        java.lang.String str4 = python3Target1.getLanguage();
        java.lang.String str7 = python3Target1.getTargetStringLiteralFromString("Python3", false);
        boolean boolean8 = python3Target1.templatesExist();
        org.stringtemplate.v4.STGroup sTGroup9 = python3Target1.getTemplates();
        int int10 = python3Target1.getInlineTestSetWordSize();
        boolean boolean11 = python3Target1.templatesExist();
        int int12 = python3Target1.getSerializedATNSegmentLimit();
        java.lang.String str13 = python3Target1.getVersion();
        org.antlr.v4.codegen.model.RuleFunction ruleFunction14 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str15 = python3Target1.getRuleFunctionContextStructName(ruleFunction14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Python3" + "'", str4, "Python3");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Python3" + "'", str7, "Python3");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(sTGroup9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 64 + "'", int10 == 64);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 29 + "'", int12 == 29);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "4.5.2.1" + "'", str13, "4.5.2.1");
    }

    @Test
    public void test1272() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1272");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.lang.String str3 = python3Target1.encodeIntAsCharEscape(1);
        java.lang.String str4 = python3Target1.getVersion();
        java.lang.String str6 = python3Target1.getImplicitRuleLabel("_tsethi!");
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = null;
        java.lang.String str10 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator7, "_Python3", false);
        java.lang.String str12 = python3Target1.getAltLabelContextStructName("\"hi!\"Context");
        java.lang.String str14 = python3Target1.getAltLabelContextStructName("_tset_\"\\\\1\"");
        java.lang.String str16 = python3Target1.encodeIntAsCharEscape((int) (byte) 1);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "\\1" + "'", str3, "\\1");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "4.5.2.1" + "'", str4, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "__tsethi!" + "'", str6, "__tsethi!");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Python" + "'", str10, "Python");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "\"hi!\"ContextContext" + "'", str12, "\"hi!\"ContextContext");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "_tset_\"\\\\1\"Context" + "'", str14, "_tset_\"\\\\1\"Context");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "\\1" + "'", str16, "\\1");
    }

    @Test
    public void test1273() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1273");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        boolean boolean3 = python3Target1.templatesExist();
        org.stringtemplate.v4.STGroup sTGroup4 = python3Target1.getTemplates();
        org.stringtemplate.v4.STGroup sTGroup5 = python3Target1.getTemplates();
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = python3Target1.getCodeGenerator();
        int int7 = python3Target1.getInlineTestSetWordSize();
        org.antlr.v4.tool.Grammar grammar8 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str10 = python3Target1.getTokenTypeAsTargetLabel(grammar8, 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(sTGroup4);
        org.junit.Assert.assertNotNull(sTGroup5);
        org.junit.Assert.assertNull(codeGenerator6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 64 + "'", int7 == 64);
    }

    @Test
    public void test1274() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1274");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        boolean boolean3 = python3Target1.wantsBaseVisitor();
        java.lang.String str4 = python3Target1.getLanguage();
        java.lang.String str7 = python3Target1.getTargetStringLiteralFromString("Python3", false);
        java.lang.String str10 = python3Target1.getTargetStringLiteralFromString("Python3", true);
        java.lang.String str12 = python3Target1.getImplicitSetLabel("hi!");
        java.lang.String str14 = python3Target1.getTargetStringLiteralFromString("\"Python3Contex\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator15 = python3Target1.getCodeGenerator();
        boolean boolean16 = python3Target1.templatesExist();
        java.lang.String str18 = python3Target1.getImplicitSetLabel("\"ython\"");
        java.lang.String str20 = python3Target1.getImplicitSetLabel("\"_\\\"_tsethi!\\\"\"");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Python3" + "'", str4, "Python3");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Python3" + "'", str7, "Python3");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\"Python3\"" + "'", str10, "\"Python3\"");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "_tsethi!" + "'", str12, "_tsethi!");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "\"\\\"Python3Contex\\\"\"" + "'", str14, "\"\\\"Python3Contex\\\"\"");
        org.junit.Assert.assertNull(codeGenerator15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "_tset\"ython\"" + "'", str18, "_tset\"ython\"");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "_tset\"_\\\"_tsethi!\\\"\"" + "'", str20, "_tset\"_\\\"_tsethi!\\\"\"");
    }

    @Test
    public void test1275() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1275");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        java.lang.String str4 = python3Target1.getListLabel("");
        java.lang.String str5 = python3Target1.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = python3Target1.getCodeGenerator();
        java.lang.String str7 = python3Target1.getLanguage();
        boolean boolean8 = python3Target1.wantsBaseVisitor();
        java.lang.String str9 = python3Target1.getLanguage();
        boolean boolean10 = python3Target1.templatesExist();
        int int11 = python3Target1.getSerializedATNSegmentLimit();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Python3" + "'", str5, "Python3");
        org.junit.Assert.assertNull(codeGenerator6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Python3" + "'", str7, "Python3");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Python3" + "'", str9, "Python3");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 29 + "'", int11 == 29);
    }

    @Test
    public void test1276() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1276");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.lang.String str3 = python3Target1.encodeIntAsCharEscape(1);
        java.lang.String str4 = python3Target1.getVersion();
        java.lang.String str6 = python3Target1.getImplicitRuleLabel("_tsethi!");
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = null;
        java.lang.String str10 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator7, "_Python3", false);
        org.antlr.v4.codegen.CodeGenerator codeGenerator11 = python3Target1.getCodeGenerator();
        boolean boolean12 = python3Target1.supportsOverloadedMethods();
        java.lang.String str14 = python3Target1.encodeIntAsCharEscape(64);
        int int15 = python3Target1.getSerializedATNSegmentLimit();
        java.lang.String str17 = python3Target1.getListLabel("a");
        org.antlr.v4.tool.ast.GrammarAST grammarAST18 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str19 = python3Target1.getLoopCounter(grammarAST18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "\\1" + "'", str3, "\\1");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "4.5.2.1" + "'", str4, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "__tsethi!" + "'", str6, "__tsethi!");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Python" + "'", str10, "Python");
        org.junit.Assert.assertNull(codeGenerator11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "@" + "'", str14, "@");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 29 + "'", int15 == 29);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "a" + "'", str17, "a");
    }

    @Test
    public void test1277() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1277");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        boolean boolean3 = python3Target1.wantsBaseVisitor();
        java.lang.String str4 = python3Target1.getLanguage();
        java.lang.String str7 = python3Target1.getTargetStringLiteralFromString("Python3", false);
        boolean boolean8 = python3Target1.templatesExist();
        org.stringtemplate.v4.STGroup sTGroup9 = python3Target1.getTemplates();
        boolean boolean10 = python3Target1.wantsBaseVisitor();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str12 = python3Target1.getAltLabelContextStructName("");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 0");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Python3" + "'", str4, "Python3");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Python3" + "'", str7, "Python3");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(sTGroup9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test1278() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1278");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        boolean boolean3 = python3Target1.wantsBaseListener();
        java.lang.String str6 = python3Target1.getTargetStringLiteralFromString("\\\\1", false);
        boolean boolean7 = python3Target1.supportsOverloadedMethods();
        java.lang.String str8 = python3Target1.getLanguage();
        java.lang.String str11 = python3Target1.getTargetStringLiteralFromString("_tset_\"\\\"\\\\\\\\1\\\"\"", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator12 = null;
        java.lang.String str15 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator12, "\"_\\\"hi!\\\"ContextContextContext\"", false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\\\\\\\\1" + "'", str6, "\\\\\\\\1");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Python3" + "'", str8, "Python3");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "\"_tset_\\\"\\\\\\\"\\\\\\\\\\\\\\\\1\\\\\\\"\\\"\"" + "'", str11, "\"_tset_\\\"\\\\\\\"\\\\\\\\\\\\\\\\1\\\\\\\"\\\"\"");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "_\\\"hi!\\\"ContextContextContext" + "'", str15, "_\\\"hi!\\\"ContextContextContext");
    }

    @Test
    public void test1279() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1279");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        boolean boolean3 = python3Target1.wantsBaseVisitor();
        java.lang.String str4 = python3Target1.getLanguage();
        java.lang.String str7 = python3Target1.getTargetStringLiteralFromString("Python3", false);
        boolean boolean8 = python3Target1.templatesExist();
        org.stringtemplate.v4.STGroup sTGroup9 = python3Target1.getTemplates();
        boolean boolean10 = python3Target1.supportsOverloadedMethods();
        java.lang.String str11 = python3Target1.getVersion();
        java.lang.String str13 = python3Target1.getImplicitRuleLabel("\"4.5.2.1\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator14 = null;
        java.lang.String str17 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator14, "i", true);
        java.lang.String str19 = python3Target1.getImplicitRuleLabel("_tset\"\\\"\\\\\\\\1\\\"\"");
        java.util.Set<java.lang.String> strSet20 = python3Target1.getBadWords();
        java.lang.String str22 = python3Target1.getTargetStringLiteralFromString("_\"Python3Contex\"");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Python3" + "'", str4, "Python3");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Python3" + "'", str7, "Python3");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(sTGroup9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "4.5.2.1" + "'", str11, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "_\"4.5.2.1\"" + "'", str13, "_\"4.5.2.1\"");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "\"\"" + "'", str17, "\"\"");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "__tset\"\\\"\\\\\\\\1\\\"\"" + "'", str19, "__tset\"\\\"\\\\\\\\1\\\"\"");
        org.junit.Assert.assertNotNull(strSet20);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "\"_\\\"Python3Contex\\\"\"" + "'", str22, "\"_\\\"Python3Contex\\\"\"");
    }

    @Test
    public void test1280() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1280");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        boolean boolean3 = python3Target1.wantsBaseVisitor();
        java.lang.String str4 = python3Target1.getLanguage();
        java.lang.String str7 = python3Target1.getTargetStringLiteralFromString("Python3", false);
        boolean boolean8 = python3Target1.templatesExist();
        java.lang.String str10 = python3Target1.getTargetStringLiteralFromString("hi!");
        java.lang.String str12 = python3Target1.getImplicitRuleLabel("\"hi!\"");
        java.util.Set<java.lang.String> strSet13 = python3Target1.getBadWords();
        java.util.Set<java.lang.String> strSet14 = python3Target1.getBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator15 = python3Target1.getCodeGenerator();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Python3" + "'", str4, "Python3");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Python3" + "'", str7, "Python3");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\"hi!\"" + "'", str10, "\"hi!\"");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "_\"hi!\"" + "'", str12, "_\"hi!\"");
        org.junit.Assert.assertNotNull(strSet13);
        org.junit.Assert.assertNotNull(strSet14);
        org.junit.Assert.assertNull(codeGenerator15);
    }

    @Test
    public void test1281() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1281");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        java.lang.String str4 = python3Target1.getAltLabelContextStructName("_Python3");
        boolean boolean5 = python3Target1.templatesExist();
        java.lang.String str7 = python3Target1.getListLabel("__tsethi!");
        org.antlr.v4.tool.Grammar grammar8 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator9 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target10 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator9);
        boolean boolean11 = python3Target10.wantsBaseListener();
        boolean boolean12 = python3Target10.templatesExist();
        org.stringtemplate.v4.STGroup sTGroup13 = python3Target10.getTemplates();
        org.stringtemplate.v4.STGroup sTGroup14 = python3Target10.getTemplates();
        java.lang.String str15 = python3Target10.getVersion();
        org.antlr.v4.tool.Grammar grammar16 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator17 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target18 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator17);
        boolean boolean19 = python3Target18.wantsBaseListener();
        boolean boolean20 = python3Target18.wantsBaseVisitor();
        java.lang.String str21 = python3Target18.getLanguage();
        org.antlr.v4.tool.Grammar grammar22 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator23 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target24 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator23);
        java.lang.String str26 = python3Target24.encodeIntAsCharEscape(1);
        org.stringtemplate.v4.STGroup sTGroup27 = python3Target24.getTemplates();
        boolean boolean28 = python3Target24.supportsOverloadedMethods();
        boolean boolean29 = python3Target24.templatesExist();
        org.antlr.v4.tool.Grammar grammar30 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator31 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target32 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator31);
        java.lang.String str34 = python3Target32.encodeIntAsCharEscape(1);
        java.lang.String str35 = python3Target32.getVersion();
        java.lang.String str37 = python3Target32.getImplicitRuleLabel("_tsethi!");
        java.lang.String str39 = python3Target32.getImplicitRuleLabel("__tsethi!");
        org.antlr.v4.codegen.CodeGenerator codeGenerator40 = python3Target32.getCodeGenerator();
        boolean boolean41 = python3Target32.supportsOverloadedMethods();
        java.lang.String str44 = python3Target32.getTargetStringLiteralFromString("\"_Python3\"", true);
        java.util.Set<java.lang.String> strSet45 = python3Target32.getBadWords();
        org.antlr.v4.tool.Grammar grammar46 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator47 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target48 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator47);
        boolean boolean49 = python3Target48.wantsBaseListener();
        org.antlr.v4.codegen.CodeGenerator codeGenerator50 = python3Target48.getCodeGenerator();
        java.lang.String str53 = python3Target48.getTargetStringLiteralFromString("\\n", false);
        org.antlr.v4.tool.Grammar grammar54 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator55 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target56 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator55);
        boolean boolean57 = python3Target56.wantsBaseListener();
        java.util.Set<java.lang.String> strSet58 = python3Target56.getBadWords();
        org.stringtemplate.v4.STGroup sTGroup59 = python3Target56.getTemplates();
        java.lang.String str61 = python3Target56.getImplicitRuleLabel("\"\\\\1\"");
        org.antlr.v4.tool.Grammar grammar62 = null;
        int[] intArray63 = new int[] {};
        java.lang.String[] strArray64 = python3Target56.getTokenTypesAsTargetLabels(grammar62, intArray63);
        java.lang.String[] strArray65 = python3Target48.getTokenTypesAsTargetLabels(grammar54, intArray63);
        java.lang.String[] strArray66 = python3Target32.getTokenTypesAsTargetLabels(grammar46, intArray63);
        java.lang.String[] strArray67 = python3Target24.getTokenTypesAsTargetLabels(grammar30, intArray63);
        java.lang.String[] strArray68 = python3Target18.getTokenTypesAsTargetLabels(grammar22, intArray63);
        java.lang.String[] strArray69 = python3Target10.getTokenTypesAsTargetLabels(grammar16, intArray63);
        java.lang.String[] strArray70 = python3Target1.getTokenTypesAsTargetLabels(grammar8, intArray63);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "_Python3Context" + "'", str4, "_Python3Context");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "__tsethi!" + "'", str7, "__tsethi!");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(sTGroup13);
        org.junit.Assert.assertNotNull(sTGroup14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "4.5.2.1" + "'", str15, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Python3" + "'", str21, "Python3");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "\\1" + "'", str26, "\\1");
        org.junit.Assert.assertNotNull(sTGroup27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "\\1" + "'", str34, "\\1");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "4.5.2.1" + "'", str35, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "__tsethi!" + "'", str37, "__tsethi!");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "___tsethi!" + "'", str39, "___tsethi!");
        org.junit.Assert.assertNull(codeGenerator40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "\"\\\"_Python3\\\"\"" + "'", str44, "\"\\\"_Python3\\\"\"");
        org.junit.Assert.assertNotNull(strSet45);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNull(codeGenerator50);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "\\\\n" + "'", str53, "\\\\n");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(strSet58);
        org.junit.Assert.assertNotNull(sTGroup59);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "_\"\\\\1\"" + "'", str61, "_\"\\\\1\"");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[]");
        org.junit.Assert.assertNotNull(strArray64);
        org.junit.Assert.assertNotNull(strArray65);
        org.junit.Assert.assertNotNull(strArray66);
        org.junit.Assert.assertNotNull(strArray67);
        org.junit.Assert.assertNotNull(strArray68);
        org.junit.Assert.assertNotNull(strArray69);
        org.junit.Assert.assertNotNull(strArray70);
    }

    @Test
    public void test1282() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1282");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        java.lang.String str4 = python3Target1.getListLabel("");
        java.lang.String str5 = python3Target1.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = python3Target1.getCodeGenerator();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str8 = python3Target1.getImplicitTokenLabel("");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Python3" + "'", str5, "Python3");
        org.junit.Assert.assertNull(codeGenerator6);
    }

    @Test
    public void test1283() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1283");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = python3Target1.getCodeGenerator();
        org.antlr.v4.codegen.model.RuleFunction ruleFunction4 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str5 = python3Target1.getRuleFunctionContextStructName(ruleFunction4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(codeGenerator3);
    }

    @Test
    public void test1284() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1284");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.lang.String str3 = python3Target1.encodeIntAsCharEscape(1);
        java.lang.String str4 = python3Target1.getVersion();
        java.lang.String str6 = python3Target1.getImplicitRuleLabel("_tsethi!");
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = null;
        java.lang.String str10 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator7, "_Python3", false);
        org.antlr.v4.codegen.CodeGenerator codeGenerator11 = python3Target1.getCodeGenerator();
        boolean boolean12 = python3Target1.supportsOverloadedMethods();
        boolean boolean13 = python3Target1.templatesExist();
        java.lang.String str14 = python3Target1.getLanguage();
        boolean boolean15 = python3Target1.wantsBaseListener();
        java.lang.String str17 = python3Target1.getAltLabelContextStructName("\"\"Context");
        java.lang.String str19 = python3Target1.getImplicitSetLabel("_.5.2.");
        org.antlr.v4.tool.ast.GrammarAST grammarAST20 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str21 = python3Target1.getLoopCounter(grammarAST20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "\\1" + "'", str3, "\\1");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "4.5.2.1" + "'", str4, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "__tsethi!" + "'", str6, "__tsethi!");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Python" + "'", str10, "Python");
        org.junit.Assert.assertNull(codeGenerator11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Python3" + "'", str14, "Python3");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "\"\"ContextContext" + "'", str17, "\"\"ContextContext");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "_tset_.5.2." + "'", str19, "_tset_.5.2.");
    }

    @Test
    public void test1285() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1285");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = python3Target1.getCodeGenerator();
        java.lang.String str5 = python3Target1.encodeIntAsCharEscape((int) (short) 10);
        java.util.Set<java.lang.String> strSet6 = python3Target1.getBadWords();
        java.lang.String str7 = python3Target1.getLanguage();
        java.lang.String str9 = python3Target1.getListLabel("\\\\n");
        java.lang.String str11 = python3Target1.encodeIntAsCharEscape((int) (short) 10);
        boolean boolean12 = python3Target1.wantsBaseListener();
        org.antlr.v4.tool.Rule rule13 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str14 = python3Target1.getRuleFunctionContextStructName(rule13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(codeGenerator3);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "\\n" + "'", str5, "\\n");
        org.junit.Assert.assertNotNull(strSet6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Python3" + "'", str7, "Python3");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\\\\n" + "'", str9, "\\\\n");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "\\n" + "'", str11, "\\n");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test1286() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1286");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.lang.String str3 = python3Target1.encodeIntAsCharEscape(1);
        org.stringtemplate.v4.STGroup sTGroup4 = python3Target1.getTemplates();
        boolean boolean5 = python3Target1.supportsOverloadedMethods();
        boolean boolean6 = python3Target1.supportsOverloadedMethods();
        java.lang.String str8 = python3Target1.getImplicitRuleLabel("");
        int int9 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str11 = python3Target1.getListLabel("");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "\\1" + "'", str3, "\\1");
        org.junit.Assert.assertNotNull(sTGroup4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "_" + "'", str8, "_");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 64 + "'", int9 == 64);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
    }

    @Test
    public void test1287() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1287");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        boolean boolean3 = python3Target1.wantsBaseVisitor();
        java.lang.String str4 = python3Target1.getLanguage();
        java.lang.String str7 = python3Target1.getTargetStringLiteralFromString("Python3", false);
        boolean boolean8 = python3Target1.templatesExist();
        org.stringtemplate.v4.STGroup sTGroup9 = python3Target1.getTemplates();
        boolean boolean10 = python3Target1.supportsOverloadedMethods();
        java.lang.String str11 = python3Target1.getVersion();
        java.lang.String str13 = python3Target1.getImplicitRuleLabel("\"4.5.2.1\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator14 = null;
        java.lang.String str17 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator14, "i", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator18 = python3Target1.getCodeGenerator();
        boolean boolean19 = python3Target1.wantsBaseVisitor();
        boolean boolean20 = python3Target1.supportsOverloadedMethods();
        boolean boolean21 = python3Target1.supportsOverloadedMethods();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Python3" + "'", str4, "Python3");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Python3" + "'", str7, "Python3");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(sTGroup9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "4.5.2.1" + "'", str11, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "_\"4.5.2.1\"" + "'", str13, "_\"4.5.2.1\"");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "\"\"" + "'", str17, "\"\"");
        org.junit.Assert.assertNull(codeGenerator18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
    }

    @Test
    public void test1288() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1288");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        java.lang.String str4 = python3Target1.getAltLabelContextStructName("_Python3");
        java.lang.String str6 = python3Target1.getListLabel("\"\\\"Python3Contex\\\"\"");
        java.lang.String str9 = python3Target1.getTargetStringLiteralFromString("\"_tset\\\"_tsethi\\\"\"", false);
        java.lang.String str11 = python3Target1.getImplicitRuleLabel("__\"hi!\"Context");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "_Python3Context" + "'", str4, "_Python3Context");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\"\\\"Python3Contex\\\"\"" + "'", str6, "\"\\\"Python3Contex\\\"\"");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\\\"_tset\\\\\\\"_tsethi\\\\\\\"\\\"" + "'", str9, "\\\"_tset\\\\\\\"_tsethi\\\\\\\"\\\"");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "___\"hi!\"Context" + "'", str11, "___\"hi!\"Context");
    }

    @Test
    public void test1289() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1289");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        boolean boolean3 = python3Target1.wantsBaseVisitor();
        java.lang.String str4 = python3Target1.getLanguage();
        java.lang.String str7 = python3Target1.getTargetStringLiteralFromString("Python3", false);
        java.lang.String str9 = python3Target1.getImplicitRuleLabel("Python3");
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = null;
        java.lang.String str13 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator10, "\\35", false);
        java.lang.String str15 = python3Target1.getImplicitRuleLabel("\"hi!\"");
        java.lang.String str18 = python3Target1.getTargetStringLiteralFromString("\"Python3Context\"", true);
        int int19 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str22 = python3Target1.getTargetStringLiteralFromString("", false);
        java.lang.String str24 = python3Target1.getTargetStringLiteralFromString("\"_tset_\\\"\\\\\\\"\\\\\\\\\\\\\\\\1\\\\\\\"\\\"\"");
        boolean boolean25 = python3Target1.supportsOverloadedMethods();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Python3" + "'", str4, "Python3");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Python3" + "'", str7, "Python3");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "_Python3" + "'", str9, "_Python3");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "3" + "'", str13, "3");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "_\"hi!\"" + "'", str15, "_\"hi!\"");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "\"\\\"Python3Context\\\"\"" + "'", str18, "\"\\\"Python3Context\\\"\"");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 64 + "'", int19 == 64);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "\"\\\"_tset_\\\\\\\"\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\1\\\\\\\\\\\\\\\"\\\\\\\"\\\"\"" + "'", str24, "\"\\\"_tset_\\\\\\\"\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\1\\\\\\\\\\\\\\\"\\\\\\\"\\\"\"");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
    }

    @Test
    public void test1290() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1290");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        boolean boolean3 = python3Target1.templatesExist();
        org.stringtemplate.v4.STGroup sTGroup4 = python3Target1.getTemplates();
        int int5 = python3Target1.getInlineTestSetWordSize();
        org.stringtemplate.v4.STGroup sTGroup6 = python3Target1.getTemplates();
        int int7 = python3Target1.getSerializedATNSegmentLimit();
        java.lang.String str10 = python3Target1.getTargetStringLiteralFromString("_\\\"_Python3\\\"", false);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str12 = python3Target1.getElementName("_tset\"_\\\"_tsethi!\\\"\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(sTGroup4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 64 + "'", int5 == 64);
        org.junit.Assert.assertNotNull(sTGroup6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 29 + "'", int7 == 29);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "_\\\\\\\"_Python3\\\\\\\"" + "'", str10, "_\\\\\\\"_Python3\\\\\\\"");
    }

    @Test
    public void test1291() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1291");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.lang.String str3 = python3Target1.encodeIntAsCharEscape(1);
        org.stringtemplate.v4.STGroup sTGroup4 = python3Target1.getTemplates();
        boolean boolean5 = python3Target1.supportsOverloadedMethods();
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = python3Target1.getCodeGenerator();
        org.antlr.v4.codegen.model.RuleFunction ruleFunction7 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str8 = python3Target1.getRuleFunctionContextStructName(ruleFunction7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "\\1" + "'", str3, "\\1");
        org.junit.Assert.assertNotNull(sTGroup4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(codeGenerator6);
    }

    @Test
    public void test1292() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1292");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python3Target1.getBadWords();
        java.lang.String str3 = python3Target1.getVersion();
        java.lang.String str5 = python3Target1.getAltLabelContextStructName("\"_tset\\\"_tsethi\\\"\"");
        java.lang.String str7 = python3Target1.getAltLabelContextStructName("\"_\\\"___tsethi!\\\"\"");
        org.antlr.v4.tool.Grammar grammar8 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str10 = python3Target1.getTokenTypeAsTargetLabel(grammar8, (int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "4.5.2.1" + "'", str3, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "\"_tset\\\"_tsethi\\\"\"Context" + "'", str5, "\"_tset\\\"_tsethi\\\"\"Context");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "\"_\\\"___tsethi!\\\"\"Context" + "'", str7, "\"_\\\"___tsethi!\\\"\"Context");
    }

    @Test
    public void test1293() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1293");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        boolean boolean3 = python3Target1.wantsBaseVisitor();
        java.lang.String str4 = python3Target1.getLanguage();
        java.lang.String str7 = python3Target1.getTargetStringLiteralFromString("Python3", false);
        java.lang.String str9 = python3Target1.getImplicitRuleLabel("Python3");
        boolean boolean10 = python3Target1.wantsBaseListener();
        java.lang.String str12 = python3Target1.getImplicitSetLabel("_\"\\\\1\"");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str14 = python3Target1.getElementListName("\"__\\\"___tsethi!\\\"Context\"Context");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Python3" + "'", str4, "Python3");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Python3" + "'", str7, "Python3");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "_Python3" + "'", str9, "_Python3");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "_tset_\"\\\\1\"" + "'", str12, "_tset_\"\\\\1\"");
    }

    @Test
    public void test1294() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1294");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        java.lang.String str4 = python3Target1.getAltLabelContextStructName("_Python3");
        org.antlr.v4.codegen.CodeGenerator codeGenerator5 = null;
        java.lang.String str8 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator5, "__tsethi!", false);
        java.lang.String str10 = python3Target1.encodeIntAsCharEscape((int) (short) 100);
        boolean boolean11 = python3Target1.supportsOverloadedMethods();
        java.lang.String str13 = python3Target1.getImplicitSetLabel("_tset__tset_Python3Context");
        java.lang.String str15 = python3Target1.getListLabel("");
        org.antlr.v4.tool.ast.GrammarAST grammarAST16 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str17 = python3Target1.getLoopCounter(grammarAST16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "_Python3Context" + "'", str4, "_Python3Context");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "_tsethi" + "'", str8, "_tsethi");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "d" + "'", str10, "d");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "_tset_tset__tset_Python3Context" + "'", str13, "_tset_tset__tset_Python3Context");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
    }

    @Test
    public void test1295() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1295");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        boolean boolean3 = python3Target1.templatesExist();
        org.stringtemplate.v4.STGroup sTGroup4 = python3Target1.getTemplates();
        boolean boolean5 = python3Target1.supportsOverloadedMethods();
        java.lang.String str8 = python3Target1.getTargetStringLiteralFromString("_tsethi", false);
        java.lang.String str10 = python3Target1.getTargetStringLiteralFromString("\\\"hi!\\\"");
        boolean boolean11 = python3Target1.wantsBaseVisitor();
        java.lang.String str12 = python3Target1.getVersion();
        java.util.Set<java.lang.String> strSet13 = python3Target1.getBadWords();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(sTGroup4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "_tsethi" + "'", str8, "_tsethi");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\"\\\\\\\"hi!\\\\\\\"\"" + "'", str10, "\"\\\\\\\"hi!\\\\\\\"\"");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "4.5.2.1" + "'", str12, "4.5.2.1");
        org.junit.Assert.assertNotNull(strSet13);
    }

    @Test
    public void test1296() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1296");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        boolean boolean3 = python3Target1.templatesExist();
        int int4 = python3Target1.getSerializedATNSegmentLimit();
        org.antlr.v4.codegen.CodeGenerator codeGenerator5 = null;
        java.lang.String str8 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator5, "\"\\\\1\"", false);
        boolean boolean9 = python3Target1.templatesExist();
        org.antlr.v4.tool.Grammar grammar10 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str12 = python3Target1.getTokenTypeAsTargetLabel(grammar10, (int) (short) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 29 + "'", int4 == 29);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\\\\1" + "'", str8, "\\\\1");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
    }

    @Test
    public void test1297() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1297");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        java.lang.String str4 = python3Target1.getAltLabelContextStructName("_Python3");
        java.lang.String str6 = python3Target1.getImplicitSetLabel("i");
        java.lang.String str7 = python3Target1.getLanguage();
        org.antlr.v4.tool.ast.GrammarAST grammarAST8 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str9 = python3Target1.getLoopLabel(grammarAST8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "_Python3Context" + "'", str4, "_Python3Context");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "_tseti" + "'", str6, "_tseti");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Python3" + "'", str7, "Python3");
    }

    @Test
    public void test1298() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1298");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.lang.String str3 = python3Target1.encodeIntAsCharEscape(1);
        java.lang.String str5 = python3Target1.encodeIntAsCharEscape((int) (short) 1);
        org.antlr.v4.codegen.model.RuleFunction ruleFunction6 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str7 = python3Target1.getRuleFunctionContextStructName(ruleFunction6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "\\1" + "'", str3, "\\1");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "\\1" + "'", str5, "\\1");
    }

    @Test
    public void test1299() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1299");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        boolean boolean3 = python3Target1.wantsBaseVisitor();
        java.lang.String str4 = python3Target1.getLanguage();
        java.lang.String str7 = python3Target1.getTargetStringLiteralFromString("Python3", false);
        java.lang.String str9 = python3Target1.getImplicitRuleLabel("Python3");
        boolean boolean10 = python3Target1.wantsBaseListener();
        java.lang.String str12 = python3Target1.getImplicitSetLabel("_\"\\\\1\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator13 = python3Target1.getCodeGenerator();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Python3" + "'", str4, "Python3");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Python3" + "'", str7, "Python3");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "_Python3" + "'", str9, "_Python3");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "_tset_\"\\\\1\"" + "'", str12, "_tset_\"\\\\1\"");
        org.junit.Assert.assertNull(codeGenerator13);
    }

    @Test
    public void test1300() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1300");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        boolean boolean3 = python3Target1.wantsBaseVisitor();
        java.lang.String str4 = python3Target1.getLanguage();
        java.lang.String str7 = python3Target1.getTargetStringLiteralFromString("Python3", false);
        java.lang.String str9 = python3Target1.encodeIntAsCharEscape((int) (byte) 10);
        boolean boolean10 = python3Target1.templatesExist();
        java.lang.String str12 = python3Target1.getAltLabelContextStructName("6");
        java.lang.String str13 = python3Target1.getLanguage();
        java.lang.String str16 = python3Target1.getTargetStringLiteralFromString("\"\\\"\\\\\\\"\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"_Python3\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"\\\\\\\"\\\"\"", false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Python3" + "'", str4, "Python3");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Python3" + "'", str7, "Python3");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\\n" + "'", str9, "\\n");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "6Context" + "'", str12, "6Context");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Python3" + "'", str13, "Python3");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "\\\"\\\\\\\"\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"_Python3\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"\\\\\\\"\\\"" + "'", str16, "\\\"\\\\\\\"\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"_Python3\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"\\\\\\\"\\\"");
    }

    @Test
    public void test1301() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1301");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        org.antlr.v4.codegen.CodeGenerator codeGenerator2 = null;
        java.lang.String str5 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator2, "_Python3Context", true);
        java.lang.String str7 = python3Target1.getListLabel("Python");
        boolean boolean8 = python3Target1.wantsBaseVisitor();
        java.lang.String str10 = python3Target1.getImplicitSetLabel("_\"___tsethi!\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator11 = python3Target1.getCodeGenerator();
        java.lang.String str14 = python3Target1.getTargetStringLiteralFromString("_tsethi!", true);
        boolean boolean15 = python3Target1.wantsBaseVisitor();
        org.antlr.v4.codegen.CodeGenerator codeGenerator16 = null;
        java.lang.String str19 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator16, "\"tset_tse\"", false);
        boolean boolean20 = python3Target1.templatesExist();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "\"Python3Contex\"" + "'", str5, "\"Python3Contex\"");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Python" + "'", str7, "Python");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "_tset_\"___tsethi!\"" + "'", str10, "_tset_\"___tsethi!\"");
        org.junit.Assert.assertNull(codeGenerator11);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "\"_tsethi!\"" + "'", str14, "\"_tsethi!\"");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "tset_tse" + "'", str19, "tset_tse");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
    }

    @Test
    public void test1302() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1302");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        boolean boolean3 = python3Target1.wantsBaseVisitor();
        java.lang.String str4 = python3Target1.getLanguage();
        java.lang.String str7 = python3Target1.getTargetStringLiteralFromString("Python3", false);
        java.lang.String str10 = python3Target1.getTargetStringLiteralFromString("Python3", true);
        java.lang.String str12 = python3Target1.getImplicitSetLabel("hi!");
        java.lang.String str14 = python3Target1.getTargetStringLiteralFromString("\"Python3Contex\"");
        java.lang.String str17 = python3Target1.getTargetStringLiteralFromString("4.5.2.1", true);
        java.lang.String str18 = python3Target1.getLanguage();
        java.lang.String str20 = python3Target1.getImplicitRuleLabel("_Python3");
        java.lang.String str22 = python3Target1.getAltLabelContextStructName("PythonContext");
        org.antlr.v4.codegen.CodeGenerator codeGenerator23 = null;
        java.lang.String str26 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator23, "_tset_tset", true);
        java.lang.String str29 = python3Target1.getTargetStringLiteralFromString("\"\\\"ython\"", false);
        java.lang.String str32 = python3Target1.getTargetStringLiteralFromString("__\\\"___tsethi!\\\"Context", true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Python3" + "'", str4, "Python3");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Python3" + "'", str7, "Python3");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\"Python3\"" + "'", str10, "\"Python3\"");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "_tsethi!" + "'", str12, "_tsethi!");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "\"\\\"Python3Contex\\\"\"" + "'", str14, "\"\\\"Python3Contex\\\"\"");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "\"4.5.2.1\"" + "'", str17, "\"4.5.2.1\"");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Python3" + "'", str18, "Python3");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "__Python3" + "'", str20, "__Python3");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "PythonContextContext" + "'", str22, "PythonContextContext");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "\"tset_tse\"" + "'", str26, "\"tset_tse\"");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "\\\"\\\\\\\"ython\\\"" + "'", str29, "\\\"\\\\\\\"ython\\\"");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "\"__\\\\\\\"___tsethi!\\\\\\\"Context\"" + "'", str32, "\"__\\\\\\\"___tsethi!\\\\\\\"Context\"");
    }

    @Test
    public void test1303() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1303");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        java.lang.String str4 = python3Target1.getListLabel("");
        boolean boolean5 = python3Target1.supportsOverloadedMethods();
        java.lang.String str8 = python3Target1.getTargetStringLiteralFromString("_\"hi!\"", false);
        boolean boolean9 = python3Target1.supportsOverloadedMethods();
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = null;
        java.lang.String str13 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator10, "__\\\"___tsethi!\\\"", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator14 = python3Target1.getCodeGenerator();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "_\\\"hi!\\\"" + "'", str8, "_\\\"hi!\\\"");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "\"_\\\"___tsethi!\\\"\"" + "'", str13, "\"_\\\"___tsethi!\\\"\"");
        org.junit.Assert.assertNull(codeGenerator14);
    }

    @Test
    public void test1304() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1304");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        java.lang.String str4 = python3Target1.getAltLabelContextStructName("_Python3");
        boolean boolean5 = python3Target1.templatesExist();
        int int6 = python3Target1.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet7 = python3Target1.getBadWords();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "_Python3Context" + "'", str4, "_Python3Context");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 64 + "'", int6 == 64);
        org.junit.Assert.assertNotNull(strSet7);
    }

    @Test
    public void test1305() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1305");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        java.lang.String str4 = python3Target1.getListLabel("");
        boolean boolean5 = python3Target1.supportsOverloadedMethods();
        java.lang.String str8 = python3Target1.getTargetStringLiteralFromString("_\"hi!\"", false);
        boolean boolean9 = python3Target1.supportsOverloadedMethods();
        boolean boolean10 = python3Target1.wantsBaseVisitor();
        int int11 = python3Target1.getSerializedATNSegmentLimit();
        java.lang.String str13 = python3Target1.getImplicitSetLabel("");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "_\\\"hi!\\\"" + "'", str8, "_\\\"hi!\\\"");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 29 + "'", int11 == 29);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "_tset" + "'", str13, "_tset");
    }

    @Test
    public void test1306() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1306");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        java.lang.String str4 = python3Target1.getListLabel("");
        java.util.Set<java.lang.String> strSet5 = python3Target1.getBadWords();
        java.lang.String str8 = python3Target1.getTargetStringLiteralFromString("_hi", false);
        java.lang.String str10 = python3Target1.getImplicitSetLabel("\"_\\\"hi!\\\"ContextContextContext\"");
        java.lang.String str11 = python3Target1.getVersion();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "_hi" + "'", str8, "_hi");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "_tset\"_\\\"hi!\\\"ContextContextContext\"" + "'", str10, "_tset\"_\\\"hi!\\\"ContextContextContext\"");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "4.5.2.1" + "'", str11, "4.5.2.1");
    }

    @Test
    public void test1307() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1307");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        java.lang.String str4 = python3Target1.getListLabel("");
        boolean boolean5 = python3Target1.supportsOverloadedMethods();
        java.lang.String str8 = python3Target1.getTargetStringLiteralFromString("_\"hi!\"", false);
        boolean boolean9 = python3Target1.supportsOverloadedMethods();
        boolean boolean10 = python3Target1.wantsBaseVisitor();
        int int11 = python3Target1.getSerializedATNSegmentLimit();
        java.lang.String str13 = python3Target1.getImplicitRuleLabel("");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "_\\\"hi!\\\"" + "'", str8, "_\\\"hi!\\\"");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 29 + "'", int11 == 29);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "_" + "'", str13, "_");
    }

    @Test
    public void test1308() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1308");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        boolean boolean3 = python3Target1.wantsBaseVisitor();
        java.lang.String str4 = python3Target1.getLanguage();
        java.lang.String str7 = python3Target1.getTargetStringLiteralFromString("Python3", false);
        boolean boolean8 = python3Target1.templatesExist();
        org.stringtemplate.v4.STGroup sTGroup9 = python3Target1.getTemplates();
        boolean boolean10 = python3Target1.supportsOverloadedMethods();
        java.lang.String str11 = python3Target1.getVersion();
        java.lang.String str13 = python3Target1.getImplicitRuleLabel("\"4.5.2.1\"");
        java.lang.String str14 = python3Target1.getLanguage();
        java.lang.String str16 = python3Target1.getAltLabelContextStructName("_\"hi!\"");
        org.stringtemplate.v4.STGroup sTGroup17 = python3Target1.getTemplates();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Python3" + "'", str4, "Python3");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Python3" + "'", str7, "Python3");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(sTGroup9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "4.5.2.1" + "'", str11, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "_\"4.5.2.1\"" + "'", str13, "_\"4.5.2.1\"");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Python3" + "'", str14, "Python3");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "_\"hi!\"Context" + "'", str16, "_\"hi!\"Context");
        org.junit.Assert.assertNotNull(sTGroup17);
    }

    @Test
    public void test1309() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1309");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        java.lang.String str4 = python3Target1.getAltLabelContextStructName("_Python3");
        org.antlr.v4.codegen.CodeGenerator codeGenerator5 = null;
        java.lang.String str8 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator5, "__tsethi!", false);
        boolean boolean9 = python3Target1.wantsBaseListener();
        org.stringtemplate.v4.STGroup sTGroup10 = python3Target1.getTemplates();
        boolean boolean11 = python3Target1.wantsBaseVisitor();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "_Python3Context" + "'", str4, "_Python3Context");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "_tsethi" + "'", str8, "_tsethi");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(sTGroup10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test1310() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1310");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        java.lang.String str4 = python3Target1.getListLabel("");
        boolean boolean5 = python3Target1.wantsBaseListener();
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = python3Target1.getCodeGenerator();
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = python3Target1.getCodeGenerator();
        org.stringtemplate.v4.STGroup sTGroup8 = python3Target1.getTemplates();
        org.antlr.v4.tool.Rule rule9 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str10 = python3Target1.getRuleFunctionContextStructName(rule9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(codeGenerator6);
        org.junit.Assert.assertNull(codeGenerator7);
        org.junit.Assert.assertNotNull(sTGroup8);
    }

    @Test
    public void test1311() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1311");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.lang.String str3 = python3Target1.encodeIntAsCharEscape(1);
        java.lang.String str4 = python3Target1.getVersion();
        java.lang.String str6 = python3Target1.getImplicitRuleLabel("_tsethi!");
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = null;
        java.lang.String str10 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator7, "_Python3", false);
        java.lang.String str12 = python3Target1.getAltLabelContextStructName("__tset_Python3Context");
        java.lang.String str14 = python3Target1.getListLabel("\"__hi!\"");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str16 = python3Target1.getElementName("\"Python\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "\\1" + "'", str3, "\\1");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "4.5.2.1" + "'", str4, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "__tsethi!" + "'", str6, "__tsethi!");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Python" + "'", str10, "Python");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "__tset_Python3ContextContext" + "'", str12, "__tset_Python3ContextContext");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "\"__hi!\"" + "'", str14, "\"__hi!\"");
    }

    @Test
    public void test1312() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1312");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python3Target1.getBadWords();
        boolean boolean3 = python3Target1.templatesExist();
        org.stringtemplate.v4.STGroup sTGroup4 = python3Target1.getTemplates();
        org.antlr.v4.codegen.CodeGenerator codeGenerator5 = python3Target1.getCodeGenerator();
        java.lang.String str7 = python3Target1.encodeIntAsCharEscape((int) ' ');
        org.antlr.v4.tool.Grammar grammar8 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator9 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target10 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator9);
        boolean boolean11 = python3Target10.wantsBaseListener();
        java.lang.String str13 = python3Target10.getAltLabelContextStructName("_Python3");
        org.antlr.v4.codegen.CodeGenerator codeGenerator14 = null;
        java.lang.String str17 = python3Target10.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator14, "__tsethi!", false);
        java.lang.String str19 = python3Target10.encodeIntAsCharEscape((int) (short) 100);
        boolean boolean20 = python3Target10.supportsOverloadedMethods();
        int int21 = python3Target10.getInlineTestSetWordSize();
        int int22 = python3Target10.getSerializedATNSegmentLimit();
        int int23 = python3Target10.getInlineTestSetWordSize();
        int int24 = python3Target10.getSerializedATNSegmentLimit();
        java.lang.String str26 = python3Target10.getImplicitSetLabel("\\n");
        java.lang.String str28 = python3Target10.getAltLabelContextStructName("_tset_Python3Context");
        org.antlr.v4.tool.Grammar grammar29 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator30 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target31 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator30);
        java.lang.String str33 = python3Target31.encodeIntAsCharEscape(1);
        java.lang.String str34 = python3Target31.getVersion();
        java.lang.String str36 = python3Target31.getImplicitRuleLabel("_tsethi!");
        org.antlr.v4.codegen.CodeGenerator codeGenerator37 = null;
        java.lang.String str40 = python3Target31.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator37, "_Python3", false);
        org.antlr.v4.codegen.CodeGenerator codeGenerator41 = python3Target31.getCodeGenerator();
        boolean boolean42 = python3Target31.supportsOverloadedMethods();
        java.lang.String str44 = python3Target31.encodeIntAsCharEscape(64);
        org.antlr.v4.tool.Grammar grammar45 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator46 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target47 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator46);
        java.lang.String str49 = python3Target47.encodeIntAsCharEscape(1);
        java.lang.String str50 = python3Target47.getVersion();
        java.lang.String str52 = python3Target47.getImplicitRuleLabel("_tsethi!");
        java.lang.String str54 = python3Target47.getImplicitRuleLabel("__tsethi!");
        org.antlr.v4.codegen.CodeGenerator codeGenerator55 = python3Target47.getCodeGenerator();
        boolean boolean56 = python3Target47.supportsOverloadedMethods();
        java.lang.String str59 = python3Target47.getTargetStringLiteralFromString("\"_Python3\"", true);
        java.util.Set<java.lang.String> strSet60 = python3Target47.getBadWords();
        org.antlr.v4.tool.Grammar grammar61 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator62 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target63 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator62);
        boolean boolean64 = python3Target63.wantsBaseListener();
        org.antlr.v4.codegen.CodeGenerator codeGenerator65 = python3Target63.getCodeGenerator();
        java.lang.String str68 = python3Target63.getTargetStringLiteralFromString("\\n", false);
        org.antlr.v4.tool.Grammar grammar69 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator70 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target71 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator70);
        boolean boolean72 = python3Target71.wantsBaseListener();
        java.util.Set<java.lang.String> strSet73 = python3Target71.getBadWords();
        org.stringtemplate.v4.STGroup sTGroup74 = python3Target71.getTemplates();
        java.lang.String str76 = python3Target71.getImplicitRuleLabel("\"\\\\1\"");
        org.antlr.v4.tool.Grammar grammar77 = null;
        int[] intArray78 = new int[] {};
        java.lang.String[] strArray79 = python3Target71.getTokenTypesAsTargetLabels(grammar77, intArray78);
        java.lang.String[] strArray80 = python3Target63.getTokenTypesAsTargetLabels(grammar69, intArray78);
        java.lang.String[] strArray81 = python3Target47.getTokenTypesAsTargetLabels(grammar61, intArray78);
        java.lang.String[] strArray82 = python3Target31.getTokenTypesAsTargetLabels(grammar45, intArray78);
        java.lang.String[] strArray83 = python3Target10.getTokenTypesAsTargetLabels(grammar29, intArray78);
        java.lang.String[] strArray84 = python3Target1.getTokenTypesAsTargetLabels(grammar8, intArray78);
        boolean boolean85 = python3Target1.wantsBaseVisitor();
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(sTGroup4);
        org.junit.Assert.assertNull(codeGenerator5);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + " " + "'", str7, " ");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "_Python3Context" + "'", str13, "_Python3Context");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "_tsethi" + "'", str17, "_tsethi");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "d" + "'", str19, "d");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 64 + "'", int21 == 64);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 29 + "'", int22 == 29);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 64 + "'", int23 == 64);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 29 + "'", int24 == 29);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "_tset\\n" + "'", str26, "_tset\\n");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "_tset_Python3ContextContext" + "'", str28, "_tset_Python3ContextContext");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "\\1" + "'", str33, "\\1");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "4.5.2.1" + "'", str34, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "__tsethi!" + "'", str36, "__tsethi!");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "Python" + "'", str40, "Python");
        org.junit.Assert.assertNull(codeGenerator41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "@" + "'", str44, "@");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "\\1" + "'", str49, "\\1");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "4.5.2.1" + "'", str50, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "__tsethi!" + "'", str52, "__tsethi!");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "___tsethi!" + "'", str54, "___tsethi!");
        org.junit.Assert.assertNull(codeGenerator55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "\"\\\"_Python3\\\"\"" + "'", str59, "\"\\\"_Python3\\\"\"");
        org.junit.Assert.assertNotNull(strSet60);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNull(codeGenerator65);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "\\\\n" + "'", str68, "\\\\n");
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(strSet73);
        org.junit.Assert.assertNotNull(sTGroup74);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "_\"\\\\1\"" + "'", str76, "_\"\\\\1\"");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[]");
        org.junit.Assert.assertNotNull(strArray79);
        org.junit.Assert.assertNotNull(strArray80);
        org.junit.Assert.assertNotNull(strArray81);
        org.junit.Assert.assertNotNull(strArray82);
        org.junit.Assert.assertNotNull(strArray83);
        org.junit.Assert.assertNotNull(strArray84);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
    }

    @Test
    public void test1313() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1313");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        boolean boolean3 = python3Target1.wantsBaseVisitor();
        java.lang.String str4 = python3Target1.getLanguage();
        java.lang.String str7 = python3Target1.getTargetStringLiteralFromString("Python3", false);
        java.lang.String str9 = python3Target1.getImplicitRuleLabel("Python3");
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = null;
        java.lang.String str13 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator10, "\\35", false);
        java.lang.String str15 = python3Target1.getTargetStringLiteralFromString("_\"_tsethi!\"");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str17 = python3Target1.getElementName("\"\"ContextContext");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Python3" + "'", str4, "Python3");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Python3" + "'", str7, "Python3");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "_Python3" + "'", str9, "_Python3");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "3" + "'", str13, "3");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "\"_\\\"_tsethi!\\\"\"" + "'", str15, "\"_\\\"_tsethi!\\\"\"");
    }

    @Test
    public void test1314() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1314");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.lang.String str3 = python3Target1.encodeIntAsCharEscape(1);
        java.lang.String str4 = python3Target1.getVersion();
        java.lang.String str6 = python3Target1.getImplicitRuleLabel("_tsethi!");
        java.lang.String str8 = python3Target1.getImplicitRuleLabel("__tsethi!");
        org.antlr.v4.codegen.CodeGenerator codeGenerator9 = python3Target1.getCodeGenerator();
        java.lang.String str10 = python3Target1.getLanguage();
        java.lang.String str12 = python3Target1.encodeIntAsCharEscape(1);
        org.antlr.v4.tool.ast.GrammarAST grammarAST13 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean14 = python3Target1.grammarSymbolCausesIssueInGeneratedCode(grammarAST13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "\\1" + "'", str3, "\\1");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "4.5.2.1" + "'", str4, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "__tsethi!" + "'", str6, "__tsethi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "___tsethi!" + "'", str8, "___tsethi!");
        org.junit.Assert.assertNull(codeGenerator9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Python3" + "'", str10, "Python3");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "\\1" + "'", str12, "\\1");
    }

    @Test
    public void test1315() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1315");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = python3Target1.getCodeGenerator();
        java.lang.String str5 = python3Target1.encodeIntAsCharEscape((int) (short) 10);
        java.util.Set<java.lang.String> strSet6 = python3Target1.getBadWords();
        java.lang.String str7 = python3Target1.getLanguage();
        java.lang.String str9 = python3Target1.getListLabel("\\\\n");
        java.lang.String str11 = python3Target1.encodeIntAsCharEscape(100);
        boolean boolean12 = python3Target1.templatesExist();
        java.util.Set<java.lang.String> strSet13 = python3Target1.getBadWords();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(codeGenerator3);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "\\n" + "'", str5, "\\n");
        org.junit.Assert.assertNotNull(strSet6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Python3" + "'", str7, "Python3");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\\\\n" + "'", str9, "\\\\n");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "d" + "'", str11, "d");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(strSet13);
    }

    @Test
    public void test1316() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1316");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = python3Target1.getCodeGenerator();
        java.lang.String str5 = python3Target1.encodeIntAsCharEscape((int) (short) 10);
        java.util.Set<java.lang.String> strSet6 = python3Target1.getBadWords();
        java.lang.String str7 = python3Target1.getLanguage();
        java.lang.String str9 = python3Target1.getListLabel("\\\\n");
        java.lang.String str11 = python3Target1.getImplicitRuleLabel("\\\"hi!\\\"");
        org.antlr.v4.tool.ast.GrammarAST grammarAST12 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str13 = python3Target1.getLoopLabel(grammarAST12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(codeGenerator3);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "\\n" + "'", str5, "\\n");
        org.junit.Assert.assertNotNull(strSet6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Python3" + "'", str7, "Python3");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\\\\n" + "'", str9, "\\\\n");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "_\\\"hi!\\\"" + "'", str11, "_\\\"hi!\\\"");
    }

    @Test
    public void test1317() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1317");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        boolean boolean3 = python3Target1.wantsBaseVisitor();
        java.lang.String str4 = python3Target1.getLanguage();
        java.lang.String str7 = python3Target1.getTargetStringLiteralFromString("Python3", false);
        java.lang.String str10 = python3Target1.getTargetStringLiteralFromString("Python3", true);
        java.lang.String str12 = python3Target1.getImplicitSetLabel("hi!");
        java.lang.String str14 = python3Target1.getTargetStringLiteralFromString("\"Python3Contex\"");
        java.lang.String str17 = python3Target1.getTargetStringLiteralFromString("4.5.2.1", true);
        java.lang.String str18 = python3Target1.getLanguage();
        java.lang.String str20 = python3Target1.getImplicitRuleLabel("_Python3");
        java.lang.String str22 = python3Target1.getAltLabelContextStructName("PythonContext");
        org.antlr.v4.codegen.CodeGenerator codeGenerator23 = null;
        java.lang.String str26 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator23, "\"\\\"\\\\\\\"_Python3\\\\\\\"\\\"\"", false);
        boolean boolean27 = python3Target1.templatesExist();
        org.antlr.v4.codegen.CodeGenerator codeGenerator28 = null;
        java.lang.String str31 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator28, "___tsethi!", false);
        boolean boolean32 = python3Target1.templatesExist();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Python3" + "'", str4, "Python3");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Python3" + "'", str7, "Python3");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\"Python3\"" + "'", str10, "\"Python3\"");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "_tsethi!" + "'", str12, "_tsethi!");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "\"\\\"Python3Contex\\\"\"" + "'", str14, "\"\\\"Python3Contex\\\"\"");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "\"4.5.2.1\"" + "'", str17, "\"4.5.2.1\"");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Python3" + "'", str18, "Python3");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "__Python3" + "'", str20, "__Python3");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "PythonContextContext" + "'", str22, "PythonContextContext");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "\\\"\\\\\\\"_Python3\\\\\\\"\\\"" + "'", str26, "\\\"\\\\\\\"_Python3\\\\\\\"\\\"");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "__tsethi" + "'", str31, "__tsethi");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
    }

    @Test
    public void test1318() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1318");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.lang.String str3 = python3Target1.encodeIntAsCharEscape(1);
        java.lang.String str4 = python3Target1.getVersion();
        java.lang.String str6 = python3Target1.getImplicitRuleLabel("_tsethi!");
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = null;
        java.lang.String str10 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator7, "_Python3", false);
        org.antlr.v4.codegen.CodeGenerator codeGenerator11 = python3Target1.getCodeGenerator();
        java.lang.String str13 = python3Target1.getAltLabelContextStructName("Python");
        java.util.Set<java.lang.String> strSet14 = python3Target1.getBadWords();
        java.lang.String str16 = python3Target1.getAltLabelContextStructName("\\\"\\\"Context");
        org.antlr.v4.codegen.CodeGenerator codeGenerator17 = python3Target1.getCodeGenerator();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "\\1" + "'", str3, "\\1");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "4.5.2.1" + "'", str4, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "__tsethi!" + "'", str6, "__tsethi!");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Python" + "'", str10, "Python");
        org.junit.Assert.assertNull(codeGenerator11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "PythonContext" + "'", str13, "PythonContext");
        org.junit.Assert.assertNotNull(strSet14);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "\\\"\\\"ContextContext" + "'", str16, "\\\"\\\"ContextContext");
        org.junit.Assert.assertNull(codeGenerator17);
    }

    @Test
    public void test1319() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1319");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        boolean boolean3 = python3Target1.wantsBaseVisitor();
        java.lang.String str4 = python3Target1.getLanguage();
        java.lang.String str7 = python3Target1.getTargetStringLiteralFromString("Python3", false);
        java.lang.String str9 = python3Target1.getImplicitRuleLabel("Python3");
        java.lang.String str11 = python3Target1.getListLabel("");
        org.antlr.v4.codegen.CodeGenerator codeGenerator12 = null;
        java.lang.String str15 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator12, "\"__\\\"___tsethi!\\\"Context\"", true);
        boolean boolean16 = python3Target1.wantsBaseVisitor();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Python3" + "'", str4, "Python3");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Python3" + "'", str7, "Python3");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "_Python3" + "'", str9, "_Python3");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "\"__\\\"___tsethi!\\\"Context\"" + "'", str15, "\"__\\\"___tsethi!\\\"Context\"");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    }

    @Test
    public void test1320() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1320");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        java.lang.String str4 = python3Target1.getListLabel("");
        boolean boolean5 = python3Target1.supportsOverloadedMethods();
        java.lang.String str7 = python3Target1.encodeIntAsCharEscape((int) ' ');
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = null;
        java.lang.String str11 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator8, "\"\\\"\\\"Python3Contex\\\"\"", false);
        int int12 = python3Target1.getInlineTestSetWordSize();
        boolean boolean13 = python3Target1.templatesExist();
        org.stringtemplate.v4.STGroup sTGroup14 = python3Target1.getTemplates();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + " " + "'", str7, " ");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "\\\"\\\"Python3Contex\\\"" + "'", str11, "\\\"\\\"Python3Contex\\\"");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 64 + "'", int12 == 64);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(sTGroup14);
    }

    @Test
    public void test1321() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1321");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        org.antlr.v4.codegen.CodeGenerator codeGenerator2 = null;
        java.lang.String str5 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator2, "_Python3Context", true);
        boolean boolean6 = python3Target1.wantsBaseVisitor();
        java.util.Set<java.lang.String> strSet7 = python3Target1.getBadWords();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "\"Python3Contex\"" + "'", str5, "\"Python3Contex\"");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(strSet7);
    }

    @Test
    public void test1322() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1322");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.lang.String str3 = python3Target1.encodeIntAsCharEscape(1);
        java.lang.String str4 = python3Target1.getVersion();
        java.lang.String str6 = python3Target1.getImplicitRuleLabel("_tsethi!");
        java.lang.String str8 = python3Target1.getImplicitRuleLabel("__tsethi!");
        org.antlr.v4.codegen.CodeGenerator codeGenerator9 = python3Target1.getCodeGenerator();
        boolean boolean10 = python3Target1.supportsOverloadedMethods();
        java.lang.String str13 = python3Target1.getTargetStringLiteralFromString("\"_Python3\"", true);
        java.lang.String str15 = python3Target1.getImplicitRuleLabel("");
        boolean boolean16 = python3Target1.wantsBaseVisitor();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "\\1" + "'", str3, "\\1");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "4.5.2.1" + "'", str4, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "__tsethi!" + "'", str6, "__tsethi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "___tsethi!" + "'", str8, "___tsethi!");
        org.junit.Assert.assertNull(codeGenerator9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "\"\\\"_Python3\\\"\"" + "'", str13, "\"\\\"_Python3\\\"\"");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "_" + "'", str15, "_");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    }

    @Test
    public void test1323() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1323");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        boolean boolean3 = python3Target1.wantsBaseVisitor();
        java.lang.String str4 = python3Target1.getLanguage();
        boolean boolean5 = python3Target1.wantsBaseVisitor();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str7 = python3Target1.getImplicitTokenLabel("\\\"_Python3");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Python3" + "'", str4, "Python3");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
    }

    @Test
    public void test1324() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1324");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        org.antlr.v4.codegen.CodeGenerator codeGenerator2 = python3Target1.getCodeGenerator();
        java.lang.String str4 = python3Target1.getAltLabelContextStructName("_tset_i");
        org.antlr.v4.tool.ast.GrammarAST grammarAST5 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean6 = python3Target1.grammarSymbolCausesIssueInGeneratedCode(grammarAST5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(codeGenerator2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "_tset_iContext" + "'", str4, "_tset_iContext");
    }

    @Test
    public void test1325() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1325");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        java.lang.String str4 = python3Target1.getListLabel("");
        boolean boolean5 = python3Target1.supportsOverloadedMethods();
        java.lang.String str7 = python3Target1.encodeIntAsCharEscape((int) ' ');
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = null;
        java.lang.String str11 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator8, "\"\\\"\\\"Python3Contex\\\"\"", false);
        int int12 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str13 = python3Target1.getVersion();
        java.lang.String str15 = python3Target1.getImplicitRuleLabel("\"_tsethi!\"");
        boolean boolean16 = python3Target1.templatesExist();
        boolean boolean17 = python3Target1.templatesExist();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + " " + "'", str7, " ");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "\\\"\\\"Python3Contex\\\"" + "'", str11, "\\\"\\\"Python3Contex\\\"");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 64 + "'", int12 == 64);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "4.5.2.1" + "'", str13, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "_\"_tsethi!\"" + "'", str15, "_\"_tsethi!\"");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
    }

    @Test
    public void test1326() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1326");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        org.antlr.v4.codegen.CodeGenerator codeGenerator2 = null;
        java.lang.String str5 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator2, "_Python3Context", true);
        java.lang.String str7 = python3Target1.getListLabel("Python");
        java.lang.String str9 = python3Target1.encodeIntAsCharEscape((int) (byte) 0);
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = null;
        java.lang.String str13 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator10, "_tsetPythonContext", false);
        java.lang.String str15 = python3Target1.getTargetStringLiteralFromString("_tseti");
        org.antlr.v4.tool.ast.GrammarAST grammarAST16 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean17 = python3Target1.grammarSymbolCausesIssueInGeneratedCode(grammarAST16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "\"Python3Contex\"" + "'", str5, "\"Python3Contex\"");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Python" + "'", str7, "Python");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\\0" + "'", str9, "\\0");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "tsetPythonContex" + "'", str13, "tsetPythonContex");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "\"_tseti\"" + "'", str15, "\"_tseti\"");
    }

    @Test
    public void test1327() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1327");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        java.lang.String str4 = python3Target1.getListLabel("");
        java.lang.String str5 = python3Target1.getLanguage();
        java.lang.String str7 = python3Target1.encodeIntAsCharEscape((int) '#');
        org.antlr.v4.tool.Grammar grammar8 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator9 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target10 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator9);
        boolean boolean11 = python3Target10.wantsBaseListener();
        java.util.Set<java.lang.String> strSet12 = python3Target10.getBadWords();
        org.stringtemplate.v4.STGroup sTGroup13 = python3Target10.getTemplates();
        java.lang.String str15 = python3Target10.getImplicitRuleLabel("\"\\\\1\"");
        org.antlr.v4.tool.Grammar grammar16 = null;
        int[] intArray17 = new int[] {};
        java.lang.String[] strArray18 = python3Target10.getTokenTypesAsTargetLabels(grammar16, intArray17);
        java.lang.String[] strArray19 = python3Target1.getTokenTypesAsTargetLabels(grammar8, intArray17);
        org.antlr.v4.codegen.model.RuleFunction ruleFunction20 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str21 = python3Target1.getRuleFunctionContextStructName(ruleFunction20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Python3" + "'", str5, "Python3");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "#" + "'", str7, "#");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertNotNull(sTGroup13);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "_\"\\\\1\"" + "'", str15, "_\"\\\\1\"");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[]");
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertNotNull(strArray19);
    }

    @Test
    public void test1328() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1328");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        boolean boolean3 = python3Target1.wantsBaseVisitor();
        java.lang.String str6 = python3Target1.getTargetStringLiteralFromString("_tsethi!", false);
        int int7 = python3Target1.getInlineTestSetWordSize();
        org.antlr.v4.tool.ast.GrammarAST grammarAST8 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str9 = python3Target1.getLoopCounter(grammarAST8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "_tsethi!" + "'", str6, "_tsethi!");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 64 + "'", int7 == 64);
    }

    @Test
    public void test1329() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1329");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.lang.String str3 = python3Target1.encodeIntAsCharEscape(1);
        java.lang.String str4 = python3Target1.getVersion();
        java.lang.String str6 = python3Target1.getImplicitRuleLabel("_tsethi!");
        boolean boolean7 = python3Target1.wantsBaseVisitor();
        int int8 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str11 = python3Target1.getTargetStringLiteralFromString("\\\"ContextContex", false);
        int int12 = python3Target1.getSerializedATNSegmentLimit();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "\\1" + "'", str3, "\\1");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "4.5.2.1" + "'", str4, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "__tsethi!" + "'", str6, "__tsethi!");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 64 + "'", int8 == 64);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "\\\\\\\"ContextContex" + "'", str11, "\\\\\\\"ContextContex");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 29 + "'", int12 == 29);
    }

    @Test
    public void test1330() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1330");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.lang.String str3 = python3Target1.encodeIntAsCharEscape(1);
        java.lang.String str4 = python3Target1.getVersion();
        java.lang.String str6 = python3Target1.getImplicitRuleLabel("_tsethi!");
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = null;
        java.lang.String str10 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator7, "_Python3", false);
        org.antlr.v4.codegen.CodeGenerator codeGenerator11 = python3Target1.getCodeGenerator();
        boolean boolean12 = python3Target1.supportsOverloadedMethods();
        java.lang.String str14 = python3Target1.encodeIntAsCharEscape(64);
        org.antlr.v4.tool.Grammar grammar15 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator16 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target17 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator16);
        java.lang.String str19 = python3Target17.encodeIntAsCharEscape(1);
        java.lang.String str20 = python3Target17.getVersion();
        java.lang.String str22 = python3Target17.getImplicitRuleLabel("_tsethi!");
        java.lang.String str24 = python3Target17.getImplicitRuleLabel("__tsethi!");
        org.antlr.v4.codegen.CodeGenerator codeGenerator25 = python3Target17.getCodeGenerator();
        boolean boolean26 = python3Target17.supportsOverloadedMethods();
        java.lang.String str29 = python3Target17.getTargetStringLiteralFromString("\"_Python3\"", true);
        java.util.Set<java.lang.String> strSet30 = python3Target17.getBadWords();
        org.antlr.v4.tool.Grammar grammar31 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator32 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target33 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator32);
        boolean boolean34 = python3Target33.wantsBaseListener();
        org.antlr.v4.codegen.CodeGenerator codeGenerator35 = python3Target33.getCodeGenerator();
        java.lang.String str38 = python3Target33.getTargetStringLiteralFromString("\\n", false);
        org.antlr.v4.tool.Grammar grammar39 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator40 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target41 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator40);
        boolean boolean42 = python3Target41.wantsBaseListener();
        java.util.Set<java.lang.String> strSet43 = python3Target41.getBadWords();
        org.stringtemplate.v4.STGroup sTGroup44 = python3Target41.getTemplates();
        java.lang.String str46 = python3Target41.getImplicitRuleLabel("\"\\\\1\"");
        org.antlr.v4.tool.Grammar grammar47 = null;
        int[] intArray48 = new int[] {};
        java.lang.String[] strArray49 = python3Target41.getTokenTypesAsTargetLabels(grammar47, intArray48);
        java.lang.String[] strArray50 = python3Target33.getTokenTypesAsTargetLabels(grammar39, intArray48);
        java.lang.String[] strArray51 = python3Target17.getTokenTypesAsTargetLabels(grammar31, intArray48);
        java.lang.String[] strArray52 = python3Target1.getTokenTypesAsTargetLabels(grammar15, intArray48);
        java.lang.Class<?> wildcardClass53 = strArray52.getClass();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "\\1" + "'", str3, "\\1");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "4.5.2.1" + "'", str4, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "__tsethi!" + "'", str6, "__tsethi!");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Python" + "'", str10, "Python");
        org.junit.Assert.assertNull(codeGenerator11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "@" + "'", str14, "@");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "\\1" + "'", str19, "\\1");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "4.5.2.1" + "'", str20, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "__tsethi!" + "'", str22, "__tsethi!");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "___tsethi!" + "'", str24, "___tsethi!");
        org.junit.Assert.assertNull(codeGenerator25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "\"\\\"_Python3\\\"\"" + "'", str29, "\"\\\"_Python3\\\"\"");
        org.junit.Assert.assertNotNull(strSet30);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNull(codeGenerator35);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "\\\\n" + "'", str38, "\\\\n");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(strSet43);
        org.junit.Assert.assertNotNull(sTGroup44);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "_\"\\\\1\"" + "'", str46, "_\"\\\\1\"");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[]");
        org.junit.Assert.assertNotNull(strArray49);
        org.junit.Assert.assertNotNull(strArray50);
        org.junit.Assert.assertNotNull(strArray51);
        org.junit.Assert.assertNotNull(strArray52);
        org.junit.Assert.assertNotNull(wildcardClass53);
    }

    @Test
    public void test1331() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1331");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        boolean boolean3 = python3Target1.wantsBaseVisitor();
        java.lang.String str4 = python3Target1.getLanguage();
        java.lang.String str7 = python3Target1.getTargetStringLiteralFromString("Python3", false);
        boolean boolean8 = python3Target1.templatesExist();
        org.stringtemplate.v4.STGroup sTGroup9 = python3Target1.getTemplates();
        int int10 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str12 = python3Target1.getListLabel("\"\\\\0\"");
        boolean boolean13 = python3Target1.templatesExist();
        int int14 = python3Target1.getInlineTestSetWordSize();
        org.stringtemplate.v4.STGroup sTGroup15 = python3Target1.getTemplates();
        boolean boolean16 = python3Target1.wantsBaseVisitor();
        org.antlr.v4.codegen.CodeGenerator codeGenerator17 = null;
        java.lang.String str20 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator17, "\"\\\"_tset_tset\\\"\"", true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Python3" + "'", str4, "Python3");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Python3" + "'", str7, "Python3");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(sTGroup9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 64 + "'", int10 == 64);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "\"\\\\0\"" + "'", str12, "\"\\\\0\"");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 64 + "'", int14 == 64);
        org.junit.Assert.assertNotNull(sTGroup15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "\"\\\"_tset_tset\\\"\"" + "'", str20, "\"\\\"_tset_tset\\\"\"");
    }

    @Test
    public void test1332() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1332");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        boolean boolean3 = python3Target1.wantsBaseVisitor();
        boolean boolean4 = python3Target1.wantsBaseVisitor();
        java.lang.String str6 = python3Target1.encodeIntAsCharEscape((int) '4');
        java.lang.String str9 = python3Target1.getTargetStringLiteralFromString("\"\\\"Python3Context\\\"\"", false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\\64" + "'", str6, "\\64");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\\\"\\\\\\\"Python3Context\\\\\\\"\\\"" + "'", str9, "\\\"\\\\\\\"Python3Context\\\\\\\"\\\"");
    }

    @Test
    public void test1333() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1333");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        org.antlr.v4.codegen.CodeGenerator codeGenerator2 = null;
        java.lang.String str5 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator2, "_Python3Context", true);
        java.lang.String str7 = python3Target1.encodeIntAsCharEscape((int) (short) 10);
        boolean boolean8 = python3Target1.supportsOverloadedMethods();
        boolean boolean9 = python3Target1.templatesExist();
        boolean boolean10 = python3Target1.supportsOverloadedMethods();
        org.antlr.v4.codegen.CodeGenerator codeGenerator11 = null;
        java.lang.String str14 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator11, "_tset\\\\n", false);
        boolean boolean15 = python3Target1.wantsBaseVisitor();
        org.antlr.v4.tool.Grammar grammar16 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str18 = python3Target1.getTokenTypeAsTargetLabel(grammar16, 64);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "\"Python3Contex\"" + "'", str5, "\"Python3Contex\"");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "\\n" + "'", str7, "\\n");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "tset\\\\" + "'", str14, "tset\\\\");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test1334() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1334");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.lang.String str3 = python3Target1.encodeIntAsCharEscape(1);
        org.antlr.v4.codegen.CodeGenerator codeGenerator4 = null;
        java.lang.String str7 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator4, "_Python3Context", true);
        java.lang.String str9 = python3Target1.getListLabel("hi!");
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = python3Target1.getCodeGenerator();
        java.lang.String str12 = python3Target1.getAltLabelContextStructName("_tset_Python3");
        java.lang.String str14 = python3Target1.getImplicitRuleLabel("_tset_Python3Context");
        boolean boolean15 = python3Target1.templatesExist();
        int int16 = python3Target1.getSerializedATNSegmentLimit();
        java.lang.String str17 = python3Target1.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator18 = python3Target1.getCodeGenerator();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "\\1" + "'", str3, "\\1");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "\"Python3Contex\"" + "'", str7, "\"Python3Contex\"");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertNull(codeGenerator10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "_tset_Python3Context" + "'", str12, "_tset_Python3Context");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "__tset_Python3Context" + "'", str14, "__tset_Python3Context");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 29 + "'", int16 == 29);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Python3" + "'", str17, "Python3");
        org.junit.Assert.assertNull(codeGenerator18);
    }

    @Test
    public void test1335() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1335");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.lang.String str3 = python3Target1.encodeIntAsCharEscape(1);
        java.lang.String str4 = python3Target1.getVersion();
        java.lang.String str6 = python3Target1.getImplicitRuleLabel("_tsethi!");
        java.lang.String str8 = python3Target1.getImplicitRuleLabel("__tsethi!");
        org.antlr.v4.codegen.CodeGenerator codeGenerator9 = python3Target1.getCodeGenerator();
        boolean boolean10 = python3Target1.supportsOverloadedMethods();
        java.lang.String str13 = python3Target1.getTargetStringLiteralFromString("\"_Python3\"", true);
        java.lang.String str15 = python3Target1.getImplicitRuleLabel("\"_\\\"_Python3\\\"\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator16 = python3Target1.getCodeGenerator();
        java.lang.String str18 = python3Target1.getTargetStringLiteralFromString("\\0");
        boolean boolean19 = python3Target1.wantsBaseVisitor();
        org.antlr.v4.tool.Grammar grammar20 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator21 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target22 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator21);
        java.lang.String str24 = python3Target22.encodeIntAsCharEscape(1);
        org.stringtemplate.v4.STGroup sTGroup25 = python3Target22.getTemplates();
        boolean boolean26 = python3Target22.supportsOverloadedMethods();
        boolean boolean27 = python3Target22.templatesExist();
        org.antlr.v4.tool.Grammar grammar28 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator29 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target30 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator29);
        java.lang.String str32 = python3Target30.encodeIntAsCharEscape(1);
        java.lang.String str33 = python3Target30.getVersion();
        java.lang.String str35 = python3Target30.getImplicitRuleLabel("_tsethi!");
        java.lang.String str37 = python3Target30.getImplicitRuleLabel("__tsethi!");
        org.antlr.v4.codegen.CodeGenerator codeGenerator38 = python3Target30.getCodeGenerator();
        boolean boolean39 = python3Target30.supportsOverloadedMethods();
        java.lang.String str42 = python3Target30.getTargetStringLiteralFromString("\"_Python3\"", true);
        java.util.Set<java.lang.String> strSet43 = python3Target30.getBadWords();
        org.antlr.v4.tool.Grammar grammar44 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator45 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target46 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator45);
        boolean boolean47 = python3Target46.wantsBaseListener();
        org.antlr.v4.codegen.CodeGenerator codeGenerator48 = python3Target46.getCodeGenerator();
        java.lang.String str51 = python3Target46.getTargetStringLiteralFromString("\\n", false);
        org.antlr.v4.tool.Grammar grammar52 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator53 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target54 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator53);
        boolean boolean55 = python3Target54.wantsBaseListener();
        java.util.Set<java.lang.String> strSet56 = python3Target54.getBadWords();
        org.stringtemplate.v4.STGroup sTGroup57 = python3Target54.getTemplates();
        java.lang.String str59 = python3Target54.getImplicitRuleLabel("\"\\\\1\"");
        org.antlr.v4.tool.Grammar grammar60 = null;
        int[] intArray61 = new int[] {};
        java.lang.String[] strArray62 = python3Target54.getTokenTypesAsTargetLabels(grammar60, intArray61);
        java.lang.String[] strArray63 = python3Target46.getTokenTypesAsTargetLabels(grammar52, intArray61);
        java.lang.String[] strArray64 = python3Target30.getTokenTypesAsTargetLabels(grammar44, intArray61);
        java.lang.String[] strArray65 = python3Target22.getTokenTypesAsTargetLabels(grammar28, intArray61);
        java.lang.String[] strArray66 = python3Target1.getTokenTypesAsTargetLabels(grammar20, intArray61);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "\\1" + "'", str3, "\\1");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "4.5.2.1" + "'", str4, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "__tsethi!" + "'", str6, "__tsethi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "___tsethi!" + "'", str8, "___tsethi!");
        org.junit.Assert.assertNull(codeGenerator9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "\"\\\"_Python3\\\"\"" + "'", str13, "\"\\\"_Python3\\\"\"");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "_\"_\\\"_Python3\\\"\"" + "'", str15, "_\"_\\\"_Python3\\\"\"");
        org.junit.Assert.assertNull(codeGenerator16);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "\"\\\\0\"" + "'", str18, "\"\\\\0\"");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "\\1" + "'", str24, "\\1");
        org.junit.Assert.assertNotNull(sTGroup25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "\\1" + "'", str32, "\\1");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "4.5.2.1" + "'", str33, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "__tsethi!" + "'", str35, "__tsethi!");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "___tsethi!" + "'", str37, "___tsethi!");
        org.junit.Assert.assertNull(codeGenerator38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "\"\\\"_Python3\\\"\"" + "'", str42, "\"\\\"_Python3\\\"\"");
        org.junit.Assert.assertNotNull(strSet43);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNull(codeGenerator48);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "\\\\n" + "'", str51, "\\\\n");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(strSet56);
        org.junit.Assert.assertNotNull(sTGroup57);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "_\"\\\\1\"" + "'", str59, "_\"\\\\1\"");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[]");
        org.junit.Assert.assertNotNull(strArray62);
        org.junit.Assert.assertNotNull(strArray63);
        org.junit.Assert.assertNotNull(strArray64);
        org.junit.Assert.assertNotNull(strArray65);
        org.junit.Assert.assertNotNull(strArray66);
    }

    @Test
    public void test1336() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1336");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.lang.String str3 = python3Target1.encodeIntAsCharEscape(1);
        java.lang.String str4 = python3Target1.getVersion();
        java.lang.String str6 = python3Target1.getImplicitRuleLabel("_tsethi!");
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = null;
        java.lang.String str10 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator7, "_Python3", false);
        org.antlr.v4.codegen.CodeGenerator codeGenerator11 = python3Target1.getCodeGenerator();
        java.lang.String str13 = python3Target1.getImplicitRuleLabel("\"___tsethi!\"");
        java.lang.String str15 = python3Target1.getAltLabelContextStructName(".5.2.");
        java.lang.String str17 = python3Target1.getListLabel("");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "\\1" + "'", str3, "\\1");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "4.5.2.1" + "'", str4, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "__tsethi!" + "'", str6, "__tsethi!");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Python" + "'", str10, "Python");
        org.junit.Assert.assertNull(codeGenerator11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "_\"___tsethi!\"" + "'", str13, "_\"___tsethi!\"");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + ".5.2.Context" + "'", str15, ".5.2.Context");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
    }

    @Test
    public void test1337() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1337");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.lang.String str3 = python3Target1.encodeIntAsCharEscape(1);
        java.lang.String str4 = python3Target1.getVersion();
        java.lang.String str6 = python3Target1.getImplicitRuleLabel("_tsethi!");
        java.lang.String str8 = python3Target1.getImplicitRuleLabel("__tsethi!");
        org.antlr.v4.codegen.CodeGenerator codeGenerator9 = python3Target1.getCodeGenerator();
        java.lang.String str11 = python3Target1.getListLabel("Python3");
        java.lang.String str13 = python3Target1.encodeIntAsCharEscape(29);
        java.lang.String str14 = python3Target1.getLanguage();
        boolean boolean15 = python3Target1.wantsBaseVisitor();
        org.antlr.v4.tool.ast.GrammarAST grammarAST16 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str17 = python3Target1.getLoopCounter(grammarAST16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "\\1" + "'", str3, "\\1");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "4.5.2.1" + "'", str4, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "__tsethi!" + "'", str6, "__tsethi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "___tsethi!" + "'", str8, "___tsethi!");
        org.junit.Assert.assertNull(codeGenerator9);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Python3" + "'", str11, "Python3");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "\\35" + "'", str13, "\\35");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Python3" + "'", str14, "Python3");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test1338() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1338");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        java.lang.String str4 = python3Target1.getAltLabelContextStructName("_Python3");
        java.lang.String str6 = python3Target1.getImplicitSetLabel("i");
        java.lang.String str8 = python3Target1.getAltLabelContextStructName("_tset_tsethi!");
        int int9 = python3Target1.getInlineTestSetWordSize();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "_Python3Context" + "'", str4, "_Python3Context");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "_tseti" + "'", str6, "_tseti");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "_tset_tsethi!Context" + "'", str8, "_tset_tsethi!Context");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 64 + "'", int9 == 64);
    }

    @Test
    public void test1339() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1339");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        java.lang.String str4 = python3Target1.getListLabel("");
        boolean boolean5 = python3Target1.wantsBaseListener();
        java.lang.String str6 = python3Target1.getLanguage();
        java.lang.String str7 = python3Target1.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = python3Target1.getCodeGenerator();
        java.util.Set<java.lang.String> strSet9 = python3Target1.getBadWords();
        boolean boolean10 = python3Target1.supportsOverloadedMethods();
        org.antlr.v4.codegen.CodeGenerator codeGenerator11 = null;
        java.lang.String str14 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator11, "", false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Python3" + "'", str6, "Python3");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "4.5.2.1" + "'", str7, "4.5.2.1");
        org.junit.Assert.assertNull(codeGenerator8);
        org.junit.Assert.assertNotNull(strSet9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
    }

    @Test
    public void test1340() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1340");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        boolean boolean3 = python3Target1.templatesExist();
        java.lang.String str4 = python3Target1.getVersion();
        java.lang.String str6 = python3Target1.getImplicitSetLabel("_tsethi!");
        java.lang.String str7 = python3Target1.getVersion();
        org.antlr.v4.tool.Grammar grammar8 = null;
        int[] intArray9 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String[] strArray10 = python3Target1.getTokenTypesAsTargetLabels(grammar8, intArray9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "4.5.2.1" + "'", str4, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "_tset_tsethi!" + "'", str6, "_tset_tsethi!");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "4.5.2.1" + "'", str7, "4.5.2.1");
    }

    @Test
    public void test1341() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1341");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        java.lang.String str4 = python3Target1.getListLabel("");
        java.lang.String str5 = python3Target1.getLanguage();
        org.antlr.v4.tool.ast.GrammarAST grammarAST6 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean7 = python3Target1.grammarSymbolCausesIssueInGeneratedCode(grammarAST6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Python3" + "'", str5, "Python3");
    }

    @Test
    public void test1342() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1342");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        java.lang.String str4 = python3Target1.getAltLabelContextStructName("_Python3");
        org.antlr.v4.codegen.CodeGenerator codeGenerator5 = null;
        java.lang.String str8 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator5, "__tsethi!", false);
        boolean boolean9 = python3Target1.wantsBaseListener();
        java.lang.String str11 = python3Target1.getImplicitSetLabel("");
        java.lang.String str13 = python3Target1.getAltLabelContextStructName("\"\"");
        java.lang.String str15 = python3Target1.getImplicitSetLabel("__tset_Python3Context");
        boolean boolean16 = python3Target1.supportsOverloadedMethods();
        java.lang.String str17 = python3Target1.getLanguage();
        boolean boolean18 = python3Target1.supportsOverloadedMethods();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "_Python3Context" + "'", str4, "_Python3Context");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "_tsethi" + "'", str8, "_tsethi");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "_tset" + "'", str11, "_tset");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "\"\"Context" + "'", str13, "\"\"Context");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "_tset__tset_Python3Context" + "'", str15, "_tset__tset_Python3Context");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Python3" + "'", str17, "Python3");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    }

    @Test
    public void test1343() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1343");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        boolean boolean3 = python3Target1.wantsBaseListener();
        org.antlr.v4.codegen.CodeGenerator codeGenerator4 = python3Target1.getCodeGenerator();
        org.antlr.v4.tool.ast.GrammarAST grammarAST5 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str6 = python3Target1.getLoopCounter(grammarAST5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(codeGenerator4);
    }

    @Test
    public void test1344() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1344");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        boolean boolean3 = python3Target1.wantsBaseVisitor();
        java.lang.String str4 = python3Target1.getLanguage();
        java.lang.String str7 = python3Target1.getTargetStringLiteralFromString("Python3", false);
        boolean boolean8 = python3Target1.templatesExist();
        org.stringtemplate.v4.STGroup sTGroup9 = python3Target1.getTemplates();
        boolean boolean10 = python3Target1.supportsOverloadedMethods();
        java.lang.String str11 = python3Target1.getVersion();
        java.lang.String str12 = python3Target1.getLanguage();
        java.lang.String str13 = python3Target1.getLanguage();
        org.antlr.v4.tool.ast.GrammarAST grammarAST14 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str15 = python3Target1.getLoopCounter(grammarAST14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Python3" + "'", str4, "Python3");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Python3" + "'", str7, "Python3");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(sTGroup9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "4.5.2.1" + "'", str11, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Python3" + "'", str12, "Python3");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Python3" + "'", str13, "Python3");
    }

    @Test
    public void test1345() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1345");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        java.lang.String str4 = python3Target1.getListLabel("");
        boolean boolean5 = python3Target1.wantsBaseListener();
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = python3Target1.getCodeGenerator();
        java.lang.String str7 = python3Target1.getLanguage();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str9 = python3Target1.encodeIntAsCharEscape((int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot encode the specified value: -1");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(codeGenerator6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Python3" + "'", str7, "Python3");
    }

    @Test
    public void test1346() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1346");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.lang.String str3 = python3Target1.encodeIntAsCharEscape(1);
        java.lang.String str4 = python3Target1.getVersion();
        java.lang.String str6 = python3Target1.getImplicitRuleLabel("_tsethi!");
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = null;
        java.lang.String str10 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator7, "_Python3", false);
        org.antlr.v4.codegen.CodeGenerator codeGenerator11 = python3Target1.getCodeGenerator();
        boolean boolean12 = python3Target1.supportsOverloadedMethods();
        java.lang.String str14 = python3Target1.encodeIntAsCharEscape(64);
        java.util.Set<java.lang.String> strSet15 = python3Target1.getBadWords();
        org.antlr.v4.tool.ast.GrammarAST grammarAST16 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str17 = python3Target1.getLoopLabel(grammarAST16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "\\1" + "'", str3, "\\1");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "4.5.2.1" + "'", str4, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "__tsethi!" + "'", str6, "__tsethi!");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Python" + "'", str10, "Python");
        org.junit.Assert.assertNull(codeGenerator11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "@" + "'", str14, "@");
        org.junit.Assert.assertNotNull(strSet15);
    }

    @Test
    public void test1347() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1347");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        org.antlr.v4.codegen.CodeGenerator codeGenerator2 = null;
        java.lang.String str5 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator2, "_Python3Context", true);
        java.lang.String str7 = python3Target1.getListLabel("Python");
        boolean boolean8 = python3Target1.wantsBaseListener();
        java.lang.String str10 = python3Target1.encodeIntAsCharEscape(10);
        boolean boolean11 = python3Target1.supportsOverloadedMethods();
        int int12 = python3Target1.getInlineTestSetWordSize();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "\"Python3Contex\"" + "'", str5, "\"Python3Contex\"");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Python" + "'", str7, "Python");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\\n" + "'", str10, "\\n");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 64 + "'", int12 == 64);
    }

    @Test
    public void test1348() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1348");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        boolean boolean3 = python3Target1.wantsBaseVisitor();
        java.lang.String str4 = python3Target1.getLanguage();
        java.lang.String str7 = python3Target1.getTargetStringLiteralFromString("Python3", false);
        java.lang.String str10 = python3Target1.getTargetStringLiteralFromString("Python3", true);
        java.lang.String str12 = python3Target1.getImplicitSetLabel("hi!");
        java.lang.String str14 = python3Target1.getTargetStringLiteralFromString("\"Python3Contex\"");
        java.lang.String str15 = python3Target1.getLanguage();
        int int16 = python3Target1.getSerializedATNSegmentLimit();
        int int17 = python3Target1.getSerializedATNSegmentLimit();
        java.lang.String str19 = python3Target1.getTargetStringLiteralFromString("\"\\\\\\\"hi!\\\\\\\"\"");
        java.lang.String str21 = python3Target1.encodeIntAsCharEscape((int) (short) 10);
        boolean boolean22 = python3Target1.wantsBaseListener();
        org.antlr.v4.codegen.CodeGenerator codeGenerator23 = python3Target1.getCodeGenerator();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str25 = python3Target1.getImplicitTokenLabel("_Python3Context");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Python3" + "'", str4, "Python3");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Python3" + "'", str7, "Python3");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\"Python3\"" + "'", str10, "\"Python3\"");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "_tsethi!" + "'", str12, "_tsethi!");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "\"\\\"Python3Contex\\\"\"" + "'", str14, "\"\\\"Python3Contex\\\"\"");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Python3" + "'", str15, "Python3");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 29 + "'", int16 == 29);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 29 + "'", int17 == 29);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "\"\\\"\\\\\\\\\\\\\\\"hi!\\\\\\\\\\\\\\\"\\\"\"" + "'", str19, "\"\\\"\\\\\\\\\\\\\\\"hi!\\\\\\\\\\\\\\\"\\\"\"");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "\\n" + "'", str21, "\\n");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(codeGenerator23);
    }

    @Test
    public void test1349() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1349");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        boolean boolean3 = python3Target1.wantsBaseVisitor();
        java.lang.String str4 = python3Target1.getLanguage();
        java.lang.String str7 = python3Target1.getTargetStringLiteralFromString("Python3", false);
        java.lang.String str10 = python3Target1.getTargetStringLiteralFromString("Python3", true);
        java.lang.String str12 = python3Target1.getImplicitSetLabel("hi!");
        java.lang.String str14 = python3Target1.getTargetStringLiteralFromString("\"Python3Contex\"");
        java.lang.String str15 = python3Target1.getLanguage();
        java.util.Set<java.lang.String> strSet16 = python3Target1.getBadWords();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Python3" + "'", str4, "Python3");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Python3" + "'", str7, "Python3");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\"Python3\"" + "'", str10, "\"Python3\"");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "_tsethi!" + "'", str12, "_tsethi!");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "\"\\\"Python3Contex\\\"\"" + "'", str14, "\"\\\"Python3Contex\\\"\"");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Python3" + "'", str15, "Python3");
        org.junit.Assert.assertNotNull(strSet16);
    }

    @Test
    public void test1350() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1350");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        java.lang.String str4 = python3Target1.getListLabel("");
        boolean boolean5 = python3Target1.wantsBaseListener();
        int int6 = python3Target1.getSerializedATNSegmentLimit();
        java.lang.String str9 = python3Target1.getTargetStringLiteralFromString("__hi!", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = null;
        java.lang.String str13 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator10, "__hi!", false);
        java.util.Set<java.lang.String> strSet14 = python3Target1.getBadWords();
        java.lang.String str16 = python3Target1.getTargetStringLiteralFromString("");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 29 + "'", int6 == 29);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\"__hi!\"" + "'", str9, "\"__hi!\"");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "_hi" + "'", str13, "_hi");
        org.junit.Assert.assertNotNull(strSet14);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "\"\"" + "'", str16, "\"\"");
    }

    @Test
    public void test1351() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1351");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        java.util.Set<java.lang.String> strSet3 = python3Target1.getBadWords();
        java.util.Set<java.lang.String> strSet4 = python3Target1.getBadWords();
        java.lang.String str6 = python3Target1.getImplicitRuleLabel("\\\"\\\"Python3Contex\\\"");
        java.lang.String str9 = python3Target1.getTargetStringLiteralFromString("i", false);
        org.antlr.v4.tool.Grammar grammar10 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator11 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target12 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator11);
        boolean boolean13 = python3Target12.wantsBaseListener();
        java.util.Set<java.lang.String> strSet14 = python3Target12.getBadWords();
        org.antlr.v4.tool.Grammar grammar15 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator16 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target17 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator16);
        boolean boolean18 = python3Target17.wantsBaseListener();
        boolean boolean19 = python3Target17.wantsBaseVisitor();
        java.lang.String str20 = python3Target17.getLanguage();
        java.lang.String str23 = python3Target17.getTargetStringLiteralFromString("Python3", false);
        java.lang.String str25 = python3Target17.getImplicitRuleLabel("Python3");
        java.lang.String str27 = python3Target17.getImplicitSetLabel("_Python3");
        org.antlr.v4.tool.Grammar grammar28 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator29 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target30 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator29);
        java.lang.String str32 = python3Target30.encodeIntAsCharEscape(1);
        java.lang.String str33 = python3Target30.getVersion();
        java.lang.String str35 = python3Target30.getImplicitRuleLabel("_tsethi!");
        java.lang.String str37 = python3Target30.getImplicitRuleLabel("__tsethi!");
        org.antlr.v4.codegen.CodeGenerator codeGenerator38 = python3Target30.getCodeGenerator();
        boolean boolean39 = python3Target30.supportsOverloadedMethods();
        java.lang.String str42 = python3Target30.getTargetStringLiteralFromString("\"_Python3\"", true);
        java.util.Set<java.lang.String> strSet43 = python3Target30.getBadWords();
        org.antlr.v4.tool.Grammar grammar44 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator45 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target46 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator45);
        boolean boolean47 = python3Target46.wantsBaseListener();
        org.antlr.v4.codegen.CodeGenerator codeGenerator48 = python3Target46.getCodeGenerator();
        java.lang.String str51 = python3Target46.getTargetStringLiteralFromString("\\n", false);
        org.antlr.v4.tool.Grammar grammar52 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator53 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target54 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator53);
        boolean boolean55 = python3Target54.wantsBaseListener();
        java.util.Set<java.lang.String> strSet56 = python3Target54.getBadWords();
        org.stringtemplate.v4.STGroup sTGroup57 = python3Target54.getTemplates();
        java.lang.String str59 = python3Target54.getImplicitRuleLabel("\"\\\\1\"");
        org.antlr.v4.tool.Grammar grammar60 = null;
        int[] intArray61 = new int[] {};
        java.lang.String[] strArray62 = python3Target54.getTokenTypesAsTargetLabels(grammar60, intArray61);
        java.lang.String[] strArray63 = python3Target46.getTokenTypesAsTargetLabels(grammar52, intArray61);
        java.lang.String[] strArray64 = python3Target30.getTokenTypesAsTargetLabels(grammar44, intArray61);
        java.lang.String[] strArray65 = python3Target17.getTokenTypesAsTargetLabels(grammar28, intArray61);
        java.lang.String[] strArray66 = python3Target12.getTokenTypesAsTargetLabels(grammar15, intArray61);
        java.lang.String[] strArray67 = python3Target1.getTokenTypesAsTargetLabels(grammar10, intArray61);
        int int68 = python3Target1.getInlineTestSetWordSize();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "_\\\"\\\"Python3Contex\\\"" + "'", str6, "_\\\"\\\"Python3Contex\\\"");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "i" + "'", str9, "i");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strSet14);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "Python3" + "'", str20, "Python3");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "Python3" + "'", str23, "Python3");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "_Python3" + "'", str25, "_Python3");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "_tset_Python3" + "'", str27, "_tset_Python3");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "\\1" + "'", str32, "\\1");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "4.5.2.1" + "'", str33, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "__tsethi!" + "'", str35, "__tsethi!");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "___tsethi!" + "'", str37, "___tsethi!");
        org.junit.Assert.assertNull(codeGenerator38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "\"\\\"_Python3\\\"\"" + "'", str42, "\"\\\"_Python3\\\"\"");
        org.junit.Assert.assertNotNull(strSet43);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNull(codeGenerator48);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "\\\\n" + "'", str51, "\\\\n");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(strSet56);
        org.junit.Assert.assertNotNull(sTGroup57);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "_\"\\\\1\"" + "'", str59, "_\"\\\\1\"");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[]");
        org.junit.Assert.assertNotNull(strArray62);
        org.junit.Assert.assertNotNull(strArray63);
        org.junit.Assert.assertNotNull(strArray64);
        org.junit.Assert.assertNotNull(strArray65);
        org.junit.Assert.assertNotNull(strArray66);
        org.junit.Assert.assertNotNull(strArray67);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 64 + "'", int68 == 64);
    }

    @Test
    public void test1352() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1352");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        java.lang.String str4 = python3Target1.getListLabel("");
        boolean boolean5 = python3Target1.wantsBaseListener();
        int int6 = python3Target1.getSerializedATNSegmentLimit();
        java.lang.String str9 = python3Target1.getTargetStringLiteralFromString("__hi!", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = null;
        java.lang.String str13 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator10, "__hi!", false);
        java.util.Set<java.lang.String> strSet14 = python3Target1.getBadWords();
        java.lang.String str16 = python3Target1.getListLabel("_\"Python3\"");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 29 + "'", int6 == 29);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\"__hi!\"" + "'", str9, "\"__hi!\"");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "_hi" + "'", str13, "_hi");
        org.junit.Assert.assertNotNull(strSet14);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "_\"Python3\"" + "'", str16, "_\"Python3\"");
    }

    @Test
    public void test1353() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1353");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        java.lang.String str4 = python3Target1.getListLabel("");
        boolean boolean5 = python3Target1.supportsOverloadedMethods();
        java.lang.String str7 = python3Target1.getImplicitSetLabel("a");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str9 = python3Target1.encodeIntAsCharEscape((int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot encode the specified value: -1");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "_tseta" + "'", str7, "_tseta");
    }

    @Test
    public void test1354() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1354");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        boolean boolean3 = python3Target1.wantsBaseVisitor();
        java.lang.String str4 = python3Target1.getLanguage();
        java.lang.String str7 = python3Target1.getTargetStringLiteralFromString("Python3", false);
        boolean boolean8 = python3Target1.templatesExist();
        org.stringtemplate.v4.STGroup sTGroup9 = python3Target1.getTemplates();
        boolean boolean10 = python3Target1.wantsBaseVisitor();
        java.lang.String str13 = python3Target1.getTargetStringLiteralFromString("tsetPytho", true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Python3" + "'", str4, "Python3");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Python3" + "'", str7, "Python3");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(sTGroup9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "\"tsetPytho\"" + "'", str13, "\"tsetPytho\"");
    }

    @Test
    public void test1355() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1355");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python3Target1.getBadWords();
        boolean boolean3 = python3Target1.templatesExist();
        org.stringtemplate.v4.STGroup sTGroup4 = python3Target1.getTemplates();
        org.antlr.v4.codegen.CodeGenerator codeGenerator5 = python3Target1.getCodeGenerator();
        java.lang.String str7 = python3Target1.encodeIntAsCharEscape((int) ' ');
        org.antlr.v4.tool.Grammar grammar8 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator9 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target10 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator9);
        boolean boolean11 = python3Target10.wantsBaseListener();
        java.lang.String str13 = python3Target10.getAltLabelContextStructName("_Python3");
        org.antlr.v4.codegen.CodeGenerator codeGenerator14 = null;
        java.lang.String str17 = python3Target10.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator14, "__tsethi!", false);
        java.lang.String str19 = python3Target10.encodeIntAsCharEscape((int) (short) 100);
        boolean boolean20 = python3Target10.supportsOverloadedMethods();
        int int21 = python3Target10.getInlineTestSetWordSize();
        int int22 = python3Target10.getSerializedATNSegmentLimit();
        int int23 = python3Target10.getInlineTestSetWordSize();
        int int24 = python3Target10.getSerializedATNSegmentLimit();
        java.lang.String str26 = python3Target10.getImplicitSetLabel("\\n");
        java.lang.String str28 = python3Target10.getAltLabelContextStructName("_tset_Python3Context");
        org.antlr.v4.tool.Grammar grammar29 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator30 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target31 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator30);
        java.lang.String str33 = python3Target31.encodeIntAsCharEscape(1);
        java.lang.String str34 = python3Target31.getVersion();
        java.lang.String str36 = python3Target31.getImplicitRuleLabel("_tsethi!");
        org.antlr.v4.codegen.CodeGenerator codeGenerator37 = null;
        java.lang.String str40 = python3Target31.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator37, "_Python3", false);
        org.antlr.v4.codegen.CodeGenerator codeGenerator41 = python3Target31.getCodeGenerator();
        boolean boolean42 = python3Target31.supportsOverloadedMethods();
        java.lang.String str44 = python3Target31.encodeIntAsCharEscape(64);
        org.antlr.v4.tool.Grammar grammar45 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator46 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target47 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator46);
        java.lang.String str49 = python3Target47.encodeIntAsCharEscape(1);
        java.lang.String str50 = python3Target47.getVersion();
        java.lang.String str52 = python3Target47.getImplicitRuleLabel("_tsethi!");
        java.lang.String str54 = python3Target47.getImplicitRuleLabel("__tsethi!");
        org.antlr.v4.codegen.CodeGenerator codeGenerator55 = python3Target47.getCodeGenerator();
        boolean boolean56 = python3Target47.supportsOverloadedMethods();
        java.lang.String str59 = python3Target47.getTargetStringLiteralFromString("\"_Python3\"", true);
        java.util.Set<java.lang.String> strSet60 = python3Target47.getBadWords();
        org.antlr.v4.tool.Grammar grammar61 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator62 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target63 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator62);
        boolean boolean64 = python3Target63.wantsBaseListener();
        org.antlr.v4.codegen.CodeGenerator codeGenerator65 = python3Target63.getCodeGenerator();
        java.lang.String str68 = python3Target63.getTargetStringLiteralFromString("\\n", false);
        org.antlr.v4.tool.Grammar grammar69 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator70 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target71 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator70);
        boolean boolean72 = python3Target71.wantsBaseListener();
        java.util.Set<java.lang.String> strSet73 = python3Target71.getBadWords();
        org.stringtemplate.v4.STGroup sTGroup74 = python3Target71.getTemplates();
        java.lang.String str76 = python3Target71.getImplicitRuleLabel("\"\\\\1\"");
        org.antlr.v4.tool.Grammar grammar77 = null;
        int[] intArray78 = new int[] {};
        java.lang.String[] strArray79 = python3Target71.getTokenTypesAsTargetLabels(grammar77, intArray78);
        java.lang.String[] strArray80 = python3Target63.getTokenTypesAsTargetLabels(grammar69, intArray78);
        java.lang.String[] strArray81 = python3Target47.getTokenTypesAsTargetLabels(grammar61, intArray78);
        java.lang.String[] strArray82 = python3Target31.getTokenTypesAsTargetLabels(grammar45, intArray78);
        java.lang.String[] strArray83 = python3Target10.getTokenTypesAsTargetLabels(grammar29, intArray78);
        java.lang.String[] strArray84 = python3Target1.getTokenTypesAsTargetLabels(grammar8, intArray78);
        java.lang.String str86 = python3Target1.getTargetStringLiteralFromString("_\\\\\\\"_Python3\\\\\\\"");
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(sTGroup4);
        org.junit.Assert.assertNull(codeGenerator5);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + " " + "'", str7, " ");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "_Python3Context" + "'", str13, "_Python3Context");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "_tsethi" + "'", str17, "_tsethi");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "d" + "'", str19, "d");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 64 + "'", int21 == 64);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 29 + "'", int22 == 29);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 64 + "'", int23 == 64);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 29 + "'", int24 == 29);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "_tset\\n" + "'", str26, "_tset\\n");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "_tset_Python3ContextContext" + "'", str28, "_tset_Python3ContextContext");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "\\1" + "'", str33, "\\1");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "4.5.2.1" + "'", str34, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "__tsethi!" + "'", str36, "__tsethi!");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "Python" + "'", str40, "Python");
        org.junit.Assert.assertNull(codeGenerator41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "@" + "'", str44, "@");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "\\1" + "'", str49, "\\1");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "4.5.2.1" + "'", str50, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "__tsethi!" + "'", str52, "__tsethi!");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "___tsethi!" + "'", str54, "___tsethi!");
        org.junit.Assert.assertNull(codeGenerator55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "\"\\\"_Python3\\\"\"" + "'", str59, "\"\\\"_Python3\\\"\"");
        org.junit.Assert.assertNotNull(strSet60);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNull(codeGenerator65);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "\\\\n" + "'", str68, "\\\\n");
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(strSet73);
        org.junit.Assert.assertNotNull(sTGroup74);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "_\"\\\\1\"" + "'", str76, "_\"\\\\1\"");
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[]");
        org.junit.Assert.assertNotNull(strArray79);
        org.junit.Assert.assertNotNull(strArray80);
        org.junit.Assert.assertNotNull(strArray81);
        org.junit.Assert.assertNotNull(strArray82);
        org.junit.Assert.assertNotNull(strArray83);
        org.junit.Assert.assertNotNull(strArray84);
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "\"_\\\\\\\\\\\\\\\"_Python3\\\\\\\\\\\\\\\"\"" + "'", str86, "\"_\\\\\\\\\\\\\\\"_Python3\\\\\\\\\\\\\\\"\"");
    }

    @Test
    public void test1356() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1356");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        boolean boolean3 = python3Target1.wantsBaseVisitor();
        java.lang.String str4 = python3Target1.getLanguage();
        java.lang.String str7 = python3Target1.getTargetStringLiteralFromString("Python3", false);
        boolean boolean8 = python3Target1.templatesExist();
        org.stringtemplate.v4.STGroup sTGroup9 = python3Target1.getTemplates();
        int int10 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str12 = python3Target1.getListLabel("\"\\\\0\"");
        boolean boolean13 = python3Target1.templatesExist();
        int int14 = python3Target1.getInlineTestSetWordSize();
        org.stringtemplate.v4.STGroup sTGroup15 = python3Target1.getTemplates();
        org.antlr.v4.tool.Rule rule16 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str17 = python3Target1.getRuleFunctionContextStructName(rule16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Python3" + "'", str4, "Python3");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Python3" + "'", str7, "Python3");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(sTGroup9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 64 + "'", int10 == 64);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "\"\\\\0\"" + "'", str12, "\"\\\\0\"");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 64 + "'", int14 == 64);
        org.junit.Assert.assertNotNull(sTGroup15);
    }

    @Test
    public void test1357() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1357");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        java.lang.String str4 = python3Target1.getListLabel("");
        boolean boolean5 = python3Target1.wantsBaseListener();
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = python3Target1.getCodeGenerator();
        java.lang.String str8 = python3Target1.getImplicitSetLabel("_\"4.5.2.1\"");
        java.lang.String str10 = python3Target1.getAltLabelContextStructName("_tset4.5.2.1");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(codeGenerator6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "_tset_\"4.5.2.1\"" + "'", str8, "_tset_\"4.5.2.1\"");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "_tset4.5.2.1Context" + "'", str10, "_tset4.5.2.1Context");
    }

    @Test
    public void test1358() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1358");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        java.util.Set<java.lang.String> strSet3 = python3Target1.getBadWords();
        int int4 = python3Target1.getSerializedATNSegmentLimit();
        java.lang.String str6 = python3Target1.getImplicitSetLabel("");
        java.lang.String str8 = python3Target1.getImplicitSetLabel("_Python3ContextContext");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 29 + "'", int4 == 29);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "_tset" + "'", str6, "_tset");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "_tset_Python3ContextContext" + "'", str8, "_tset_Python3ContextContext");
    }

    @Test
    public void test1359() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1359");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        java.lang.String str4 = python3Target1.getAltLabelContextStructName("_Python3");
        org.antlr.v4.codegen.CodeGenerator codeGenerator5 = null;
        java.lang.String str8 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator5, "__tsethi!", false);
        boolean boolean9 = python3Target1.wantsBaseListener();
        java.lang.String str11 = python3Target1.getImplicitSetLabel("");
        java.lang.String str13 = python3Target1.getAltLabelContextStructName("\"\"");
        java.lang.String str14 = python3Target1.getVersion();
        boolean boolean15 = python3Target1.supportsOverloadedMethods();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "_Python3Context" + "'", str4, "_Python3Context");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "_tsethi" + "'", str8, "_tsethi");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "_tset" + "'", str11, "_tset");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "\"\"Context" + "'", str13, "\"\"Context");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "4.5.2.1" + "'", str14, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test1360() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1360");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        java.lang.String str4 = python3Target1.getListLabel("");
        java.lang.String str5 = python3Target1.getLanguage();
        java.lang.String str7 = python3Target1.getImplicitRuleLabel("\"\\\"Python3Contex\\\"\"");
        int int8 = python3Target1.getSerializedATNSegmentLimit();
        java.lang.String str10 = python3Target1.encodeIntAsCharEscape((int) (short) 100);
        java.lang.String str13 = python3Target1.getTargetStringLiteralFromString("__tset\"_\\\"hi!\\\"ContextContextContext\"", false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Python3" + "'", str5, "Python3");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "_\"\\\"Python3Contex\\\"\"" + "'", str7, "_\"\\\"Python3Contex\\\"\"");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 29 + "'", int8 == 29);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "d" + "'", str10, "d");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "__tset\\\"_\\\\\\\"hi!\\\\\\\"ContextContextContext\\\"" + "'", str13, "__tset\\\"_\\\\\\\"hi!\\\\\\\"ContextContextContext\\\"");
    }

    @Test
    public void test1361() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1361");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        boolean boolean3 = python3Target1.wantsBaseVisitor();
        java.lang.String str4 = python3Target1.getLanguage();
        java.lang.String str7 = python3Target1.getTargetStringLiteralFromString("Python3", false);
        boolean boolean8 = python3Target1.templatesExist();
        org.stringtemplate.v4.STGroup sTGroup9 = python3Target1.getTemplates();
        int int10 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str12 = python3Target1.getListLabel("\"\\\\0\"");
        boolean boolean13 = python3Target1.wantsBaseListener();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Python3" + "'", str4, "Python3");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Python3" + "'", str7, "Python3");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(sTGroup9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 64 + "'", int10 == 64);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "\"\\\\0\"" + "'", str12, "\"\\\\0\"");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test1362() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1362");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.lang.String str3 = python3Target1.encodeIntAsCharEscape(1);
        java.lang.String str4 = python3Target1.getVersion();
        java.lang.String str6 = python3Target1.getImplicitRuleLabel("_tsethi!");
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = null;
        java.lang.String str10 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator7, "_Python3", false);
        org.antlr.v4.codegen.CodeGenerator codeGenerator11 = python3Target1.getCodeGenerator();
        boolean boolean12 = python3Target1.supportsOverloadedMethods();
        java.lang.String str14 = python3Target1.encodeIntAsCharEscape(64);
        org.antlr.v4.tool.Grammar grammar15 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator16 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target17 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator16);
        java.lang.String str19 = python3Target17.encodeIntAsCharEscape(1);
        java.lang.String str20 = python3Target17.getVersion();
        java.lang.String str22 = python3Target17.getImplicitRuleLabel("_tsethi!");
        java.lang.String str24 = python3Target17.getImplicitRuleLabel("__tsethi!");
        org.antlr.v4.codegen.CodeGenerator codeGenerator25 = python3Target17.getCodeGenerator();
        boolean boolean26 = python3Target17.supportsOverloadedMethods();
        java.lang.String str29 = python3Target17.getTargetStringLiteralFromString("\"_Python3\"", true);
        java.util.Set<java.lang.String> strSet30 = python3Target17.getBadWords();
        org.antlr.v4.tool.Grammar grammar31 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator32 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target33 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator32);
        boolean boolean34 = python3Target33.wantsBaseListener();
        org.antlr.v4.codegen.CodeGenerator codeGenerator35 = python3Target33.getCodeGenerator();
        java.lang.String str38 = python3Target33.getTargetStringLiteralFromString("\\n", false);
        org.antlr.v4.tool.Grammar grammar39 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator40 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target41 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator40);
        boolean boolean42 = python3Target41.wantsBaseListener();
        java.util.Set<java.lang.String> strSet43 = python3Target41.getBadWords();
        org.stringtemplate.v4.STGroup sTGroup44 = python3Target41.getTemplates();
        java.lang.String str46 = python3Target41.getImplicitRuleLabel("\"\\\\1\"");
        org.antlr.v4.tool.Grammar grammar47 = null;
        int[] intArray48 = new int[] {};
        java.lang.String[] strArray49 = python3Target41.getTokenTypesAsTargetLabels(grammar47, intArray48);
        java.lang.String[] strArray50 = python3Target33.getTokenTypesAsTargetLabels(grammar39, intArray48);
        java.lang.String[] strArray51 = python3Target17.getTokenTypesAsTargetLabels(grammar31, intArray48);
        java.lang.String[] strArray52 = python3Target1.getTokenTypesAsTargetLabels(grammar15, intArray48);
        boolean boolean53 = python3Target1.supportsOverloadedMethods();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "\\1" + "'", str3, "\\1");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "4.5.2.1" + "'", str4, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "__tsethi!" + "'", str6, "__tsethi!");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Python" + "'", str10, "Python");
        org.junit.Assert.assertNull(codeGenerator11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "@" + "'", str14, "@");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "\\1" + "'", str19, "\\1");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "4.5.2.1" + "'", str20, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "__tsethi!" + "'", str22, "__tsethi!");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "___tsethi!" + "'", str24, "___tsethi!");
        org.junit.Assert.assertNull(codeGenerator25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "\"\\\"_Python3\\\"\"" + "'", str29, "\"\\\"_Python3\\\"\"");
        org.junit.Assert.assertNotNull(strSet30);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNull(codeGenerator35);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "\\\\n" + "'", str38, "\\\\n");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(strSet43);
        org.junit.Assert.assertNotNull(sTGroup44);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "_\"\\\\1\"" + "'", str46, "_\"\\\\1\"");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[]");
        org.junit.Assert.assertNotNull(strArray49);
        org.junit.Assert.assertNotNull(strArray50);
        org.junit.Assert.assertNotNull(strArray51);
        org.junit.Assert.assertNotNull(strArray52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
    }

    @Test
    public void test1363() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1363");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.lang.String str3 = python3Target1.encodeIntAsCharEscape(1);
        java.lang.String str4 = python3Target1.getVersion();
        java.lang.String str6 = python3Target1.getImplicitRuleLabel("_tsethi!");
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = null;
        java.lang.String str10 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator7, "_Python3", false);
        org.antlr.v4.codegen.CodeGenerator codeGenerator11 = python3Target1.getCodeGenerator();
        java.lang.String str13 = python3Target1.getImplicitRuleLabel("\"___tsethi!\"");
        java.lang.String str14 = python3Target1.getLanguage();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "\\1" + "'", str3, "\\1");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "4.5.2.1" + "'", str4, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "__tsethi!" + "'", str6, "__tsethi!");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Python" + "'", str10, "Python");
        org.junit.Assert.assertNull(codeGenerator11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "_\"___tsethi!\"" + "'", str13, "_\"___tsethi!\"");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Python3" + "'", str14, "Python3");
    }

    @Test
    public void test1364() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1364");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.lang.String str3 = python3Target1.encodeIntAsCharEscape(1);
        org.stringtemplate.v4.STGroup sTGroup4 = python3Target1.getTemplates();
        java.lang.String str6 = python3Target1.getImplicitRuleLabel(".5.2.");
        java.lang.String str7 = python3Target1.getVersion();
        org.antlr.v4.tool.ast.GrammarAST grammarAST8 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean9 = python3Target1.grammarSymbolCausesIssueInGeneratedCode(grammarAST8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "\\1" + "'", str3, "\\1");
        org.junit.Assert.assertNotNull(sTGroup4);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "_.5.2." + "'", str6, "_.5.2.");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "4.5.2.1" + "'", str7, "4.5.2.1");
    }

    @Test
    public void test1365() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1365");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.lang.String str3 = python3Target1.encodeIntAsCharEscape(1);
        java.lang.String str4 = python3Target1.getVersion();
        java.lang.String str6 = python3Target1.getImplicitRuleLabel("_tsethi!");
        java.lang.String str8 = python3Target1.getImplicitRuleLabel("__tsethi!");
        java.lang.String str9 = python3Target1.getVersion();
        boolean boolean10 = python3Target1.wantsBaseVisitor();
        java.lang.String str12 = python3Target1.getImplicitRuleLabel("\"\\\"Python3Context\\\"\"");
        java.lang.String str13 = python3Target1.getLanguage();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str15 = python3Target1.getElementName("Python");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "\\1" + "'", str3, "\\1");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "4.5.2.1" + "'", str4, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "__tsethi!" + "'", str6, "__tsethi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "___tsethi!" + "'", str8, "___tsethi!");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "4.5.2.1" + "'", str9, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "_\"\\\"Python3Context\\\"\"" + "'", str12, "_\"\\\"Python3Context\\\"\"");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Python3" + "'", str13, "Python3");
    }

    @Test
    public void test1366() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1366");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.lang.String str3 = python3Target1.encodeIntAsCharEscape(1);
        java.lang.String str4 = python3Target1.getVersion();
        java.lang.String str6 = python3Target1.getImplicitRuleLabel("_tsethi!");
        boolean boolean7 = python3Target1.wantsBaseVisitor();
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = null;
        java.lang.String str11 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator8, "4.5.2.1", false);
        org.stringtemplate.v4.STGroup sTGroup12 = python3Target1.getTemplates();
        java.lang.String str14 = python3Target1.encodeIntAsCharEscape(10);
        org.antlr.v4.tool.Rule rule15 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str16 = python3Target1.getRuleFunctionContextStructName(rule15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "\\1" + "'", str3, "\\1");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "4.5.2.1" + "'", str4, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "__tsethi!" + "'", str6, "__tsethi!");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + ".5.2." + "'", str11, ".5.2.");
        org.junit.Assert.assertNotNull(sTGroup12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "\\n" + "'", str14, "\\n");
    }

    @Test
    public void test1367() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1367");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.lang.String str3 = python3Target1.encodeIntAsCharEscape(1);
        java.lang.String str4 = python3Target1.getVersion();
        java.lang.String str6 = python3Target1.getImplicitRuleLabel("_tsethi!");
        java.lang.String str8 = python3Target1.getImplicitRuleLabel("__tsethi!");
        java.lang.String str9 = python3Target1.getVersion();
        boolean boolean10 = python3Target1.wantsBaseVisitor();
        java.util.Set<java.lang.String> strSet11 = python3Target1.getBadWords();
        org.antlr.v4.tool.ast.GrammarAST grammarAST12 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str13 = python3Target1.getLoopLabel(grammarAST12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "\\1" + "'", str3, "\\1");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "4.5.2.1" + "'", str4, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "__tsethi!" + "'", str6, "__tsethi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "___tsethi!" + "'", str8, "___tsethi!");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "4.5.2.1" + "'", str9, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(strSet11);
    }

    @Test
    public void test1368() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1368");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        boolean boolean3 = python3Target1.wantsBaseVisitor();
        java.lang.String str4 = python3Target1.getLanguage();
        java.lang.String str7 = python3Target1.getTargetStringLiteralFromString("Python3", false);
        boolean boolean8 = python3Target1.templatesExist();
        java.lang.String str10 = python3Target1.getTargetStringLiteralFromString("hi!");
        org.stringtemplate.v4.STGroup sTGroup11 = python3Target1.getTemplates();
        org.antlr.v4.codegen.CodeGenerator codeGenerator12 = null;
        java.lang.String str15 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator12, "_\"hi!\"", false);
        java.lang.String str17 = python3Target1.encodeIntAsCharEscape((int) '4');
        boolean boolean18 = python3Target1.templatesExist();
        java.lang.String str20 = python3Target1.encodeIntAsCharEscape((int) (short) 1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Python3" + "'", str4, "Python3");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Python3" + "'", str7, "Python3");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\"hi!\"" + "'", str10, "\"hi!\"");
        org.junit.Assert.assertNotNull(sTGroup11);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "\\\"hi!" + "'", str15, "\\\"hi!");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "\\64" + "'", str17, "\\64");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "\\1" + "'", str20, "\\1");
    }

    @Test
    public void test1369() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1369");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = python3Target1.getCodeGenerator();
        java.lang.String str5 = python3Target1.encodeIntAsCharEscape((int) (short) 10);
        java.util.Set<java.lang.String> strSet6 = python3Target1.getBadWords();
        java.lang.String str7 = python3Target1.getLanguage();
        java.lang.String str9 = python3Target1.getListLabel("\\\\n");
        java.lang.String str11 = python3Target1.encodeIntAsCharEscape(100);
        org.antlr.v4.codegen.CodeGenerator codeGenerator12 = python3Target1.getCodeGenerator();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(codeGenerator3);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "\\n" + "'", str5, "\\n");
        org.junit.Assert.assertNotNull(strSet6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Python3" + "'", str7, "Python3");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\\\\n" + "'", str9, "\\\\n");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "d" + "'", str11, "d");
        org.junit.Assert.assertNull(codeGenerator12);
    }

    @Test
    public void test1370() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1370");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        boolean boolean3 = python3Target1.wantsBaseVisitor();
        java.lang.String str4 = python3Target1.getLanguage();
        java.lang.String str7 = python3Target1.getTargetStringLiteralFromString("Python3", false);
        java.lang.String str10 = python3Target1.getTargetStringLiteralFromString("Python3", true);
        java.lang.String str12 = python3Target1.getImplicitSetLabel("hi!");
        int int13 = python3Target1.getSerializedATNSegmentLimit();
        int int14 = python3Target1.getSerializedATNSegmentLimit();
        java.lang.String str16 = python3Target1.encodeIntAsCharEscape((int) '4');
        java.lang.String str18 = python3Target1.getImplicitRuleLabel("__tsetPython");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str20 = python3Target1.getElementListName("__tset\\\"4.5.2.1Context");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Python3" + "'", str4, "Python3");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Python3" + "'", str7, "Python3");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\"Python3\"" + "'", str10, "\"Python3\"");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "_tsethi!" + "'", str12, "_tsethi!");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 29 + "'", int13 == 29);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 29 + "'", int14 == 29);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "\\64" + "'", str16, "\\64");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "___tsetPython" + "'", str18, "___tsetPython");
    }

    @Test
    public void test1371() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1371");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        boolean boolean3 = python3Target1.wantsBaseVisitor();
        java.lang.String str4 = python3Target1.getLanguage();
        org.antlr.v4.tool.ast.GrammarAST grammarAST5 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean6 = python3Target1.grammarSymbolCausesIssueInGeneratedCode(grammarAST5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Python3" + "'", str4, "Python3");
    }

    @Test
    public void test1372() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1372");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        boolean boolean3 = python3Target1.wantsBaseVisitor();
        java.lang.String str4 = python3Target1.getLanguage();
        java.lang.String str7 = python3Target1.getTargetStringLiteralFromString("Python3", false);
        boolean boolean8 = python3Target1.templatesExist();
        java.lang.String str10 = python3Target1.getTargetStringLiteralFromString("hi!");
        java.lang.String str12 = python3Target1.getImplicitRuleLabel("\"hi!\"");
        java.lang.String str14 = python3Target1.getListLabel("\"\\\"\\\"\"");
        int int15 = python3Target1.getSerializedATNSegmentLimit();
        int int16 = python3Target1.getSerializedATNSegmentLimit();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Python3" + "'", str4, "Python3");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Python3" + "'", str7, "Python3");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\"hi!\"" + "'", str10, "\"hi!\"");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "_\"hi!\"" + "'", str12, "_\"hi!\"");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "\"\\\"\\\"\"" + "'", str14, "\"\\\"\\\"\"");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 29 + "'", int15 == 29);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 29 + "'", int16 == 29);
    }

    @Test
    public void test1373() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1373");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        boolean boolean3 = python3Target1.templatesExist();
        org.stringtemplate.v4.STGroup sTGroup4 = python3Target1.getTemplates();
        org.stringtemplate.v4.STGroup sTGroup5 = python3Target1.getTemplates();
        java.lang.String str7 = python3Target1.getImplicitRuleLabel("\"_Python3\"");
        boolean boolean8 = python3Target1.wantsBaseVisitor();
        java.lang.String str9 = python3Target1.getLanguage();
        java.lang.String str11 = python3Target1.encodeIntAsCharEscape((int) (byte) 0);
        java.lang.String str13 = python3Target1.getAltLabelContextStructName("\"_\\\"\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\1Context\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"\\\"\"");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(sTGroup4);
        org.junit.Assert.assertNotNull(sTGroup5);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "_\"_Python3\"" + "'", str7, "_\"_Python3\"");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Python3" + "'", str9, "Python3");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "\\0" + "'", str11, "\\0");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "\"_\\\"\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\1Context\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"\\\"\"Context" + "'", str13, "\"_\\\"\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\1Context\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"\\\"\"Context");
    }

    @Test
    public void test1374() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1374");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        boolean boolean3 = python3Target1.templatesExist();
        org.stringtemplate.v4.STGroup sTGroup4 = python3Target1.getTemplates();
        boolean boolean5 = python3Target1.supportsOverloadedMethods();
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = null;
        java.lang.String str9 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator6, "\\n", true);
        java.lang.String str11 = python3Target1.getTargetStringLiteralFromString("_tset_Python3");
        boolean boolean12 = python3Target1.templatesExist();
        org.antlr.v4.tool.ast.GrammarAST grammarAST13 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str14 = python3Target1.getLoopLabel(grammarAST13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(sTGroup4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\"\"" + "'", str9, "\"\"");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "\"_tset_Python3\"" + "'", str11, "\"_tset_Python3\"");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
    }

    @Test
    public void test1375() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1375");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        java.lang.String str4 = python3Target1.getListLabel("");
        java.lang.String str5 = python3Target1.getLanguage();
        java.lang.String str7 = python3Target1.getImplicitRuleLabel("\"\\\"Python3Contex\\\"\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = python3Target1.getCodeGenerator();
        org.antlr.v4.tool.ast.GrammarAST grammarAST9 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean10 = python3Target1.grammarSymbolCausesIssueInGeneratedCode(grammarAST9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Python3" + "'", str5, "Python3");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "_\"\\\"Python3Contex\\\"\"" + "'", str7, "_\"\\\"Python3Contex\\\"\"");
        org.junit.Assert.assertNull(codeGenerator8);
    }

    @Test
    public void test1376() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1376");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.lang.String str3 = python3Target1.encodeIntAsCharEscape(1);
        java.lang.String str4 = python3Target1.getVersion();
        java.lang.String str6 = python3Target1.getImplicitRuleLabel("_tsethi!");
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = null;
        java.lang.String str10 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator7, "_Python3", false);
        org.antlr.v4.codegen.CodeGenerator codeGenerator11 = python3Target1.getCodeGenerator();
        org.antlr.v4.tool.Grammar grammar12 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator13 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target14 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator13);
        java.util.Set<java.lang.String> strSet15 = python3Target14.getBadWords();
        boolean boolean16 = python3Target14.templatesExist();
        org.stringtemplate.v4.STGroup sTGroup17 = python3Target14.getTemplates();
        java.lang.String str20 = python3Target14.getTargetStringLiteralFromString("_\"\\\"Python3Contex\\\"\"", true);
        org.antlr.v4.tool.Grammar grammar21 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator22 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target23 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator22);
        boolean boolean24 = python3Target23.wantsBaseListener();
        boolean boolean25 = python3Target23.wantsBaseVisitor();
        java.lang.String str26 = python3Target23.getLanguage();
        java.lang.String str29 = python3Target23.getTargetStringLiteralFromString("Python3", false);
        java.lang.String str32 = python3Target23.getTargetStringLiteralFromString("Python3", true);
        java.lang.String str34 = python3Target23.getImplicitSetLabel("hi!");
        java.lang.String str36 = python3Target23.getTargetStringLiteralFromString("\"Python3Contex\"");
        java.lang.String str39 = python3Target23.getTargetStringLiteralFromString("4.5.2.1", true);
        int int40 = python3Target23.getInlineTestSetWordSize();
        org.antlr.v4.tool.Grammar grammar41 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator42 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target43 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator42);
        java.lang.String str45 = python3Target43.encodeIntAsCharEscape(1);
        org.stringtemplate.v4.STGroup sTGroup46 = python3Target43.getTemplates();
        boolean boolean47 = python3Target43.supportsOverloadedMethods();
        boolean boolean48 = python3Target43.templatesExist();
        org.antlr.v4.tool.Grammar grammar49 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator50 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target51 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator50);
        java.lang.String str53 = python3Target51.encodeIntAsCharEscape(1);
        java.lang.String str54 = python3Target51.getVersion();
        java.lang.String str56 = python3Target51.getImplicitRuleLabel("_tsethi!");
        java.lang.String str58 = python3Target51.getImplicitRuleLabel("__tsethi!");
        org.antlr.v4.codegen.CodeGenerator codeGenerator59 = python3Target51.getCodeGenerator();
        boolean boolean60 = python3Target51.supportsOverloadedMethods();
        java.lang.String str63 = python3Target51.getTargetStringLiteralFromString("\"_Python3\"", true);
        java.util.Set<java.lang.String> strSet64 = python3Target51.getBadWords();
        org.antlr.v4.tool.Grammar grammar65 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator66 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target67 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator66);
        boolean boolean68 = python3Target67.wantsBaseListener();
        org.antlr.v4.codegen.CodeGenerator codeGenerator69 = python3Target67.getCodeGenerator();
        java.lang.String str72 = python3Target67.getTargetStringLiteralFromString("\\n", false);
        org.antlr.v4.tool.Grammar grammar73 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator74 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target75 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator74);
        boolean boolean76 = python3Target75.wantsBaseListener();
        java.util.Set<java.lang.String> strSet77 = python3Target75.getBadWords();
        org.stringtemplate.v4.STGroup sTGroup78 = python3Target75.getTemplates();
        java.lang.String str80 = python3Target75.getImplicitRuleLabel("\"\\\\1\"");
        org.antlr.v4.tool.Grammar grammar81 = null;
        int[] intArray82 = new int[] {};
        java.lang.String[] strArray83 = python3Target75.getTokenTypesAsTargetLabels(grammar81, intArray82);
        java.lang.String[] strArray84 = python3Target67.getTokenTypesAsTargetLabels(grammar73, intArray82);
        java.lang.String[] strArray85 = python3Target51.getTokenTypesAsTargetLabels(grammar65, intArray82);
        java.lang.String[] strArray86 = python3Target43.getTokenTypesAsTargetLabels(grammar49, intArray82);
        java.lang.String[] strArray87 = python3Target23.getTokenTypesAsTargetLabels(grammar41, intArray82);
        java.lang.String[] strArray88 = python3Target14.getTokenTypesAsTargetLabels(grammar21, intArray82);
        java.lang.String[] strArray89 = python3Target1.getTokenTypesAsTargetLabels(grammar12, intArray82);
        java.lang.String str90 = python3Target1.getVersion();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "\\1" + "'", str3, "\\1");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "4.5.2.1" + "'", str4, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "__tsethi!" + "'", str6, "__tsethi!");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Python" + "'", str10, "Python");
        org.junit.Assert.assertNull(codeGenerator11);
        org.junit.Assert.assertNotNull(strSet15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(sTGroup17);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "\"_\\\"\\\\\\\"Python3Contex\\\\\\\"\\\"\"" + "'", str20, "\"_\\\"\\\\\\\"Python3Contex\\\\\\\"\\\"\"");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "Python3" + "'", str26, "Python3");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "Python3" + "'", str29, "Python3");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "\"Python3\"" + "'", str32, "\"Python3\"");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "_tsethi!" + "'", str34, "_tsethi!");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "\"\\\"Python3Contex\\\"\"" + "'", str36, "\"\\\"Python3Contex\\\"\"");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "\"4.5.2.1\"" + "'", str39, "\"4.5.2.1\"");
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 64 + "'", int40 == 64);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "\\1" + "'", str45, "\\1");
        org.junit.Assert.assertNotNull(sTGroup46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "\\1" + "'", str53, "\\1");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "4.5.2.1" + "'", str54, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "__tsethi!" + "'", str56, "__tsethi!");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "___tsethi!" + "'", str58, "___tsethi!");
        org.junit.Assert.assertNull(codeGenerator59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "\"\\\"_Python3\\\"\"" + "'", str63, "\"\\\"_Python3\\\"\"");
        org.junit.Assert.assertNotNull(strSet64);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNull(codeGenerator69);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "\\\\n" + "'", str72, "\\\\n");
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(strSet77);
        org.junit.Assert.assertNotNull(sTGroup78);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "_\"\\\\1\"" + "'", str80, "_\"\\\\1\"");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[]");
        org.junit.Assert.assertNotNull(strArray83);
        org.junit.Assert.assertNotNull(strArray84);
        org.junit.Assert.assertNotNull(strArray85);
        org.junit.Assert.assertNotNull(strArray86);
        org.junit.Assert.assertNotNull(strArray87);
        org.junit.Assert.assertNotNull(strArray88);
        org.junit.Assert.assertNotNull(strArray89);
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "4.5.2.1" + "'", str90, "4.5.2.1");
    }

    @Test
    public void test1377() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1377");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        java.lang.String str4 = python3Target1.getListLabel("");
        java.lang.String str5 = python3Target1.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = python3Target1.getCodeGenerator();
        java.lang.String str7 = python3Target1.getLanguage();
        boolean boolean8 = python3Target1.wantsBaseVisitor();
        java.lang.String str10 = python3Target1.encodeIntAsCharEscape((int) (byte) 100);
        java.lang.String str12 = python3Target1.encodeIntAsCharEscape((int) (short) 100);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Python3" + "'", str5, "Python3");
        org.junit.Assert.assertNull(codeGenerator6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Python3" + "'", str7, "Python3");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "d" + "'", str10, "d");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "d" + "'", str12, "d");
    }

    @Test
    public void test1378() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1378");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = python3Target1.getCodeGenerator();
        java.lang.String str5 = python3Target1.encodeIntAsCharEscape((int) (short) 10);
        java.util.Set<java.lang.String> strSet6 = python3Target1.getBadWords();
        java.lang.String str7 = python3Target1.getLanguage();
        java.lang.String str9 = python3Target1.getListLabel("\\\\n");
        java.lang.String str11 = python3Target1.getAltLabelContextStructName("\"\\\\64\"");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(codeGenerator3);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "\\n" + "'", str5, "\\n");
        org.junit.Assert.assertNotNull(strSet6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Python3" + "'", str7, "Python3");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\\\\n" + "'", str9, "\\\\n");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "\"\\\\64\"Context" + "'", str11, "\"\\\\64\"Context");
    }

    @Test
    public void test1379() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1379");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        boolean boolean3 = python3Target1.wantsBaseVisitor();
        java.lang.String str4 = python3Target1.getLanguage();
        java.lang.String str7 = python3Target1.getTargetStringLiteralFromString("Python3", false);
        boolean boolean8 = python3Target1.templatesExist();
        org.stringtemplate.v4.STGroup sTGroup9 = python3Target1.getTemplates();
        boolean boolean10 = python3Target1.supportsOverloadedMethods();
        java.lang.String str11 = python3Target1.getVersion();
        java.lang.String str13 = python3Target1.getAltLabelContextStructName("_hi!");
        java.lang.String str14 = python3Target1.getVersion();
        boolean boolean15 = python3Target1.wantsBaseVisitor();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Python3" + "'", str4, "Python3");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Python3" + "'", str7, "Python3");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(sTGroup9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "4.5.2.1" + "'", str11, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "_hi!Context" + "'", str13, "_hi!Context");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "4.5.2.1" + "'", str14, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test1380() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1380");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.lang.String str3 = python3Target1.encodeIntAsCharEscape(1);
        java.lang.String str4 = python3Target1.getVersion();
        java.lang.String str6 = python3Target1.getImplicitRuleLabel("_tsethi!");
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = null;
        java.lang.String str10 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator7, "_Python3", false);
        org.antlr.v4.codegen.CodeGenerator codeGenerator11 = python3Target1.getCodeGenerator();
        boolean boolean12 = python3Target1.supportsOverloadedMethods();
        boolean boolean13 = python3Target1.templatesExist();
        java.lang.String str14 = python3Target1.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup15 = python3Target1.getTemplates();
        int int16 = python3Target1.getSerializedATNSegmentLimit();
        org.antlr.v4.tool.Rule rule17 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str18 = python3Target1.getRuleFunctionContextStructName(rule17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "\\1" + "'", str3, "\\1");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "4.5.2.1" + "'", str4, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "__tsethi!" + "'", str6, "__tsethi!");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Python" + "'", str10, "Python");
        org.junit.Assert.assertNull(codeGenerator11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Python3" + "'", str14, "Python3");
        org.junit.Assert.assertNotNull(sTGroup15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 29 + "'", int16 == 29);
    }

    @Test
    public void test1381() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1381");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        boolean boolean3 = python3Target1.templatesExist();
        boolean boolean4 = python3Target1.wantsBaseListener();
        java.util.Set<java.lang.String> strSet5 = python3Target1.getBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = python3Target1.getCodeGenerator();
        org.antlr.v4.tool.Rule rule7 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str8 = python3Target1.getRuleFunctionContextStructName(rule7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNull(codeGenerator6);
    }

    @Test
    public void test1382() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1382");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        boolean boolean3 = python3Target1.wantsBaseVisitor();
        java.lang.String str4 = python3Target1.getLanguage();
        java.lang.String str7 = python3Target1.getTargetStringLiteralFromString("Python3", false);
        java.lang.String str10 = python3Target1.getTargetStringLiteralFromString("Python3", true);
        java.lang.String str12 = python3Target1.getImplicitSetLabel("hi!");
        java.lang.String str14 = python3Target1.getTargetStringLiteralFromString("\"Python3Contex\"");
        boolean boolean15 = python3Target1.supportsOverloadedMethods();
        int int16 = python3Target1.getSerializedATNSegmentLimit();
        java.lang.String str17 = python3Target1.getLanguage();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Python3" + "'", str4, "Python3");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Python3" + "'", str7, "Python3");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\"Python3\"" + "'", str10, "\"Python3\"");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "_tsethi!" + "'", str12, "_tsethi!");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "\"\\\"Python3Contex\\\"\"" + "'", str14, "\"\\\"Python3Contex\\\"\"");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 29 + "'", int16 == 29);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Python3" + "'", str17, "Python3");
    }

    @Test
    public void test1383() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1383");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        boolean boolean3 = python3Target1.wantsBaseVisitor();
        java.lang.String str4 = python3Target1.getLanguage();
        java.lang.String str7 = python3Target1.getTargetStringLiteralFromString("Python3", false);
        boolean boolean8 = python3Target1.templatesExist();
        org.stringtemplate.v4.STGroup sTGroup9 = python3Target1.getTemplates();
        boolean boolean10 = python3Target1.supportsOverloadedMethods();
        java.lang.String str11 = python3Target1.getVersion();
        java.lang.String str13 = python3Target1.getImplicitRuleLabel("\"4.5.2.1\"");
        java.lang.String str14 = python3Target1.getLanguage();
        org.antlr.v4.tool.Rule rule15 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str16 = python3Target1.getRuleFunctionContextStructName(rule15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Python3" + "'", str4, "Python3");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Python3" + "'", str7, "Python3");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(sTGroup9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "4.5.2.1" + "'", str11, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "_\"4.5.2.1\"" + "'", str13, "_\"4.5.2.1\"");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Python3" + "'", str14, "Python3");
    }

    @Test
    public void test1384() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1384");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        java.util.Set<java.lang.String> strSet3 = python3Target1.getBadWords();
        org.stringtemplate.v4.STGroup sTGroup4 = python3Target1.getTemplates();
        java.lang.String str6 = python3Target1.getListLabel("_Python3Context");
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = python3Target1.getCodeGenerator();
        java.util.Set<java.lang.String> strSet8 = python3Target1.getBadWords();
        int int9 = python3Target1.getSerializedATNSegmentLimit();
        java.lang.String str11 = python3Target1.getAltLabelContextStructName("_tset\\\\n");
        java.util.Set<java.lang.String> strSet12 = python3Target1.getBadWords();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNotNull(sTGroup4);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "_Python3Context" + "'", str6, "_Python3Context");
        org.junit.Assert.assertNull(codeGenerator7);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 29 + "'", int9 == 29);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "_tset\\\\nContext" + "'", str11, "_tset\\\\nContext");
        org.junit.Assert.assertNotNull(strSet12);
    }

    @Test
    public void test1385() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1385");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        boolean boolean3 = python3Target1.templatesExist();
        org.stringtemplate.v4.STGroup sTGroup4 = python3Target1.getTemplates();
        org.stringtemplate.v4.STGroup sTGroup5 = python3Target1.getTemplates();
        java.lang.String str7 = python3Target1.getImplicitRuleLabel("\"_Python3\"");
        java.lang.String str9 = python3Target1.encodeIntAsCharEscape(1);
        org.antlr.v4.tool.ast.GrammarAST grammarAST10 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str11 = python3Target1.getLoopCounter(grammarAST10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(sTGroup4);
        org.junit.Assert.assertNotNull(sTGroup5);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "_\"_Python3\"" + "'", str7, "_\"_Python3\"");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\\1" + "'", str9, "\\1");
    }

    @Test
    public void test1386() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1386");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        boolean boolean3 = python3Target1.wantsBaseListener();
        java.lang.String str6 = python3Target1.getTargetStringLiteralFromString("\\\\1", false);
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = null;
        java.lang.String str10 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator7, "\\\\n", false);
        java.lang.String str12 = python3Target1.getImplicitRuleLabel("\"_\\\\\\\"\\\\\\\"Python3Contex\\\\\\\"\"");
        java.lang.String str14 = python3Target1.getAltLabelContextStructName("\"\\\"\\\"\"");
        org.stringtemplate.v4.STGroup sTGroup15 = python3Target1.getTemplates();
        boolean boolean16 = python3Target1.wantsBaseVisitor();
        org.antlr.v4.tool.Grammar grammar17 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str19 = python3Target1.getTokenTypeAsTargetLabel(grammar17, (int) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\\\\\\\\1" + "'", str6, "\\\\\\\\1");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\\n" + "'", str10, "\\n");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "_\"_\\\\\\\"\\\\\\\"Python3Contex\\\\\\\"\"" + "'", str12, "_\"_\\\\\\\"\\\\\\\"Python3Contex\\\\\\\"\"");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "\"\\\"\\\"\"Context" + "'", str14, "\"\\\"\\\"\"Context");
        org.junit.Assert.assertNotNull(sTGroup15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    }

    @Test
    public void test1387() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1387");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        java.lang.String str4 = python3Target1.getAltLabelContextStructName("_Python3");
        org.antlr.v4.codegen.CodeGenerator codeGenerator5 = null;
        java.lang.String str8 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator5, "__tsethi!", false);
        java.lang.String str10 = python3Target1.encodeIntAsCharEscape((int) (short) 100);
        boolean boolean11 = python3Target1.supportsOverloadedMethods();
        int int12 = python3Target1.getInlineTestSetWordSize();
        int int13 = python3Target1.getSerializedATNSegmentLimit();
        int int14 = python3Target1.getInlineTestSetWordSize();
        int int15 = python3Target1.getSerializedATNSegmentLimit();
        org.antlr.v4.codegen.CodeGenerator codeGenerator16 = python3Target1.getCodeGenerator();
        java.lang.String str18 = python3Target1.encodeIntAsCharEscape(64);
        boolean boolean19 = python3Target1.supportsOverloadedMethods();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "_Python3Context" + "'", str4, "_Python3Context");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "_tsethi" + "'", str8, "_tsethi");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "d" + "'", str10, "d");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 64 + "'", int12 == 64);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 29 + "'", int13 == 29);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 64 + "'", int14 == 64);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 29 + "'", int15 == 29);
        org.junit.Assert.assertNull(codeGenerator16);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "@" + "'", str18, "@");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    }

    @Test
    public void test1388() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1388");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        java.util.Set<java.lang.String> strSet3 = python3Target1.getBadWords();
        java.util.Set<java.lang.String> strSet4 = python3Target1.getBadWords();
        boolean boolean5 = python3Target1.wantsBaseVisitor();
        int int6 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str8 = python3Target1.getImplicitRuleLabel("___\"___tsethi!\"");
        org.antlr.v4.tool.Rule rule9 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str10 = python3Target1.getRuleFunctionContextStructName(rule9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 64 + "'", int6 == 64);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "____\"___tsethi!\"" + "'", str8, "____\"___tsethi!\"");
    }

    @Test
    public void test1389() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1389");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        java.util.Set<java.lang.String> strSet3 = python3Target1.getBadWords();
        org.stringtemplate.v4.STGroup sTGroup4 = python3Target1.getTemplates();
        java.lang.String str6 = python3Target1.getListLabel("_Python3Context");
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = python3Target1.getCodeGenerator();
        java.util.Set<java.lang.String> strSet8 = python3Target1.getBadWords();
        int int9 = python3Target1.getSerializedATNSegmentLimit();
        java.lang.String str11 = python3Target1.getAltLabelContextStructName("_tset\\\\n");
        boolean boolean12 = python3Target1.wantsBaseListener();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNotNull(sTGroup4);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "_Python3Context" + "'", str6, "_Python3Context");
        org.junit.Assert.assertNull(codeGenerator7);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 29 + "'", int9 == 29);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "_tset\\\\nContext" + "'", str11, "_tset\\\\nContext");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test1390() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1390");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        java.lang.String str4 = python3Target1.getListLabel("");
        boolean boolean5 = python3Target1.wantsBaseListener();
        java.lang.String str6 = python3Target1.getVersion();
        java.lang.String str7 = python3Target1.getLanguage();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "4.5.2.1" + "'", str6, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Python3" + "'", str7, "Python3");
    }

    @Test
    public void test1391() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1391");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = python3Target1.getCodeGenerator();
        java.lang.String str6 = python3Target1.getTargetStringLiteralFromString("\\n", false);
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = null;
        java.lang.String str10 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator7, "\\\"\\\"Python3Contex\\\"", false);
        boolean boolean11 = python3Target1.templatesExist();
        java.lang.String str12 = python3Target1.getLanguage();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(codeGenerator3);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\\\\n" + "'", str6, "\\\\n");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\\\"\\\"Python3Contex\\\"" + "'", str10, "\\\"\\\"Python3Contex\\\"");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Python3" + "'", str12, "Python3");
    }

    @Test
    public void test1392() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1392");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        boolean boolean3 = python3Target1.wantsBaseVisitor();
        java.lang.String str4 = python3Target1.getLanguage();
        java.lang.String str7 = python3Target1.getTargetStringLiteralFromString("Python3", false);
        java.lang.String str10 = python3Target1.getTargetStringLiteralFromString("Python3", true);
        java.lang.String str12 = python3Target1.getImplicitSetLabel("hi!");
        java.lang.String str14 = python3Target1.getTargetStringLiteralFromString("\"Python3Contex\"");
        java.lang.String str15 = python3Target1.getLanguage();
        int int16 = python3Target1.getSerializedATNSegmentLimit();
        int int17 = python3Target1.getSerializedATNSegmentLimit();
        java.lang.String str18 = python3Target1.getVersion();
        boolean boolean19 = python3Target1.wantsBaseVisitor();
        boolean boolean20 = python3Target1.wantsBaseVisitor();
        boolean boolean21 = python3Target1.supportsOverloadedMethods();
        java.lang.String str23 = python3Target1.getAltLabelContextStructName("_tsethi");
        java.lang.String str25 = python3Target1.getImplicitRuleLabel("\"_tset\\\"ython\\\"\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator26 = python3Target1.getCodeGenerator();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Python3" + "'", str4, "Python3");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Python3" + "'", str7, "Python3");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\"Python3\"" + "'", str10, "\"Python3\"");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "_tsethi!" + "'", str12, "_tsethi!");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "\"\\\"Python3Contex\\\"\"" + "'", str14, "\"\\\"Python3Contex\\\"\"");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Python3" + "'", str15, "Python3");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 29 + "'", int16 == 29);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 29 + "'", int17 == 29);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "4.5.2.1" + "'", str18, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "_tsethiContext" + "'", str23, "_tsethiContext");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "_\"_tset\\\"ython\\\"\"" + "'", str25, "_\"_tset\\\"ython\\\"\"");
        org.junit.Assert.assertNull(codeGenerator26);
    }

    @Test
    public void test1393() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1393");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        boolean boolean3 = python3Target1.templatesExist();
        org.antlr.v4.tool.Rule rule4 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str5 = python3Target1.getRuleFunctionContextStructName(rule4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
    }

    @Test
    public void test1394() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1394");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        boolean boolean3 = python3Target1.wantsBaseVisitor();
        java.lang.String str4 = python3Target1.getLanguage();
        java.lang.String str7 = python3Target1.getTargetStringLiteralFromString("Python3", false);
        java.lang.String str10 = python3Target1.getTargetStringLiteralFromString("Python3", true);
        java.lang.String str12 = python3Target1.getImplicitSetLabel("hi!");
        java.lang.String str14 = python3Target1.getTargetStringLiteralFromString("\"Python3Contex\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator15 = python3Target1.getCodeGenerator();
        boolean boolean16 = python3Target1.templatesExist();
        java.lang.String str18 = python3Target1.getImplicitSetLabel("\"ython\"");
        boolean boolean19 = python3Target1.wantsBaseVisitor();
        java.lang.String str21 = python3Target1.encodeIntAsCharEscape(0);
        int int22 = python3Target1.getSerializedATNSegmentLimit();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Python3" + "'", str4, "Python3");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Python3" + "'", str7, "Python3");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\"Python3\"" + "'", str10, "\"Python3\"");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "_tsethi!" + "'", str12, "_tsethi!");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "\"\\\"Python3Contex\\\"\"" + "'", str14, "\"\\\"Python3Contex\\\"\"");
        org.junit.Assert.assertNull(codeGenerator15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "_tset\"ython\"" + "'", str18, "_tset\"ython\"");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "\\0" + "'", str21, "\\0");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 29 + "'", int22 == 29);
    }

    @Test
    public void test1395() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1395");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        java.lang.String str4 = python3Target1.getAltLabelContextStructName("_Python3");
        java.lang.String str6 = python3Target1.getListLabel("\"\\\"Python3Contex\\\"\"");
        boolean boolean7 = python3Target1.templatesExist();
        boolean boolean8 = python3Target1.wantsBaseVisitor();
        boolean boolean9 = python3Target1.supportsOverloadedMethods();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "_Python3Context" + "'", str4, "_Python3Context");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\"\\\"Python3Contex\\\"\"" + "'", str6, "\"\\\"Python3Contex\\\"\"");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test1396() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1396");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        boolean boolean3 = python3Target1.templatesExist();
        org.stringtemplate.v4.STGroup sTGroup4 = python3Target1.getTemplates();
        int int5 = python3Target1.getInlineTestSetWordSize();
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = python3Target1.getCodeGenerator();
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = null;
        java.lang.String str10 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator7, "hi!", false);
        java.lang.String str12 = python3Target1.getListLabel("\"Python3Contex\"");
        boolean boolean13 = python3Target1.wantsBaseListener();
        org.antlr.v4.tool.Grammar grammar14 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str16 = python3Target1.getTokenTypeAsTargetLabel(grammar14, 29);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(sTGroup4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 64 + "'", int5 == 64);
        org.junit.Assert.assertNull(codeGenerator6);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "i" + "'", str10, "i");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "\"Python3Contex\"" + "'", str12, "\"Python3Contex\"");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test1397() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1397");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        java.lang.String str4 = python3Target1.getAltLabelContextStructName("_Python3");
        org.antlr.v4.codegen.model.RuleFunction ruleFunction5 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str6 = python3Target1.getRuleFunctionContextStructName(ruleFunction5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "_Python3Context" + "'", str4, "_Python3Context");
    }

    @Test
    public void test1398() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1398");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.lang.String str3 = python3Target1.encodeIntAsCharEscape(1);
        org.stringtemplate.v4.STGroup sTGroup4 = python3Target1.getTemplates();
        boolean boolean5 = python3Target1.supportsOverloadedMethods();
        boolean boolean6 = python3Target1.supportsOverloadedMethods();
        java.lang.String str8 = python3Target1.getImplicitRuleLabel("");
        int int9 = python3Target1.getInlineTestSetWordSize();
        org.stringtemplate.v4.STGroup sTGroup10 = python3Target1.getTemplates();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "\\1" + "'", str3, "\\1");
        org.junit.Assert.assertNotNull(sTGroup4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "_" + "'", str8, "_");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 64 + "'", int9 == 64);
        org.junit.Assert.assertNotNull(sTGroup10);
    }

    @Test
    public void test1399() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1399");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        java.lang.String str4 = python3Target1.getAltLabelContextStructName("_Python3");
        org.antlr.v4.codegen.CodeGenerator codeGenerator5 = null;
        java.lang.String str8 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator5, "__tsethi!", false);
        java.lang.String str10 = python3Target1.encodeIntAsCharEscape((int) (short) 100);
        boolean boolean11 = python3Target1.supportsOverloadedMethods();
        int int12 = python3Target1.getInlineTestSetWordSize();
        int int13 = python3Target1.getSerializedATNSegmentLimit();
        java.lang.String str15 = python3Target1.getAltLabelContextStructName("\"hi!\"");
        int int16 = python3Target1.getSerializedATNSegmentLimit();
        java.lang.String str18 = python3Target1.getImplicitSetLabel("__tsettset_Python");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "_Python3Context" + "'", str4, "_Python3Context");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "_tsethi" + "'", str8, "_tsethi");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "d" + "'", str10, "d");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 64 + "'", int12 == 64);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 29 + "'", int13 == 29);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "\"hi!\"Context" + "'", str15, "\"hi!\"Context");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 29 + "'", int16 == 29);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "_tset__tsettset_Python" + "'", str18, "_tset__tsettset_Python");
    }

    @Test
    public void test1400() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1400");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        java.lang.String str4 = python3Target1.getListLabel("");
        java.lang.String str5 = python3Target1.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = python3Target1.getCodeGenerator();
        java.lang.String str7 = python3Target1.getLanguage();
        boolean boolean8 = python3Target1.wantsBaseVisitor();
        org.antlr.v4.codegen.CodeGenerator codeGenerator9 = python3Target1.getCodeGenerator();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Python3" + "'", str5, "Python3");
        org.junit.Assert.assertNull(codeGenerator6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Python3" + "'", str7, "Python3");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(codeGenerator9);
    }

    @Test
    public void test1401() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1401");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.lang.String str3 = python3Target1.encodeIntAsCharEscape(1);
        java.lang.String str4 = python3Target1.getVersion();
        java.lang.String str6 = python3Target1.getImplicitRuleLabel("_tsethi!");
        java.lang.String str8 = python3Target1.getImplicitRuleLabel("__tsethi!");
        org.antlr.v4.codegen.CodeGenerator codeGenerator9 = python3Target1.getCodeGenerator();
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = python3Target1.getCodeGenerator();
        java.lang.String str11 = python3Target1.getVersion();
        java.lang.Class<?> wildcardClass12 = python3Target1.getClass();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "\\1" + "'", str3, "\\1");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "4.5.2.1" + "'", str4, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "__tsethi!" + "'", str6, "__tsethi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "___tsethi!" + "'", str8, "___tsethi!");
        org.junit.Assert.assertNull(codeGenerator9);
        org.junit.Assert.assertNull(codeGenerator10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "4.5.2.1" + "'", str11, "4.5.2.1");
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test1402() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1402");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        int int3 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str5 = python3Target1.getListLabel("\"\\\"\\\\\"");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 64 + "'", int3 == 64);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "\"\\\"\\\\\"" + "'", str5, "\"\\\"\\\\\"");
    }

    @Test
    public void test1403() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1403");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        boolean boolean3 = python3Target1.wantsBaseVisitor();
        java.lang.String str4 = python3Target1.getLanguage();
        java.lang.String str7 = python3Target1.getTargetStringLiteralFromString("Python3", false);
        java.lang.String str9 = python3Target1.getImplicitRuleLabel("Python3");
        boolean boolean10 = python3Target1.supportsOverloadedMethods();
        org.antlr.v4.codegen.CodeGenerator codeGenerator11 = python3Target1.getCodeGenerator();
        int int12 = python3Target1.getSerializedATNSegmentLimit();
        java.lang.String str14 = python3Target1.getImplicitSetLabel("\\\"ContextContexContext");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Python3" + "'", str4, "Python3");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Python3" + "'", str7, "Python3");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "_Python3" + "'", str9, "_Python3");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(codeGenerator11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 29 + "'", int12 == 29);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "_tset\\\"ContextContexContext" + "'", str14, "_tset\\\"ContextContexContext");
    }

    @Test
    public void test1404() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1404");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.lang.String str3 = python3Target1.encodeIntAsCharEscape(1);
        org.antlr.v4.codegen.CodeGenerator codeGenerator4 = null;
        java.lang.String str7 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator4, "_Python3Context", true);
        java.lang.String str9 = python3Target1.getListLabel("hi!");
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = python3Target1.getCodeGenerator();
        java.lang.String str12 = python3Target1.getAltLabelContextStructName("_tset_Python3");
        java.lang.String str14 = python3Target1.getImplicitRuleLabel("_tset_Python3Context");
        boolean boolean15 = python3Target1.templatesExist();
        int int16 = python3Target1.getInlineTestSetWordSize();
        org.antlr.v4.codegen.CodeGenerator codeGenerator17 = null;
        java.lang.String str20 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator17, "__\\\"___tsethi!\\\"Context", false);
        org.stringtemplate.v4.STGroup sTGroup21 = python3Target1.getTemplates();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "\\1" + "'", str3, "\\1");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "\"Python3Contex\"" + "'", str7, "\"Python3Contex\"");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertNull(codeGenerator10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "_tset_Python3Context" + "'", str12, "_tset_Python3Context");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "__tset_Python3Context" + "'", str14, "__tset_Python3Context");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 64 + "'", int16 == 64);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "_\\\"___tsethi!\\\"Contex" + "'", str20, "_\\\"___tsethi!\\\"Contex");
        org.junit.Assert.assertNotNull(sTGroup21);
    }

    @Test
    public void test1405() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1405");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.lang.String str3 = python3Target1.encodeIntAsCharEscape(1);
        org.stringtemplate.v4.STGroup sTGroup4 = python3Target1.getTemplates();
        boolean boolean5 = python3Target1.supportsOverloadedMethods();
        boolean boolean6 = python3Target1.supportsOverloadedMethods();
        boolean boolean7 = python3Target1.wantsBaseListener();
        java.lang.String str9 = python3Target1.getAltLabelContextStructName("_tset");
        java.lang.String str11 = python3Target1.getImplicitSetLabel("_tset\"\\\\\\\"_tsethi\\\\\\\"\"");
        java.lang.String str13 = python3Target1.getImplicitRuleLabel("__\\\"___tsethi!\\\"Context");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "\\1" + "'", str3, "\\1");
        org.junit.Assert.assertNotNull(sTGroup4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "_tsetContext" + "'", str9, "_tsetContext");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "_tset_tset\"\\\\\\\"_tsethi\\\\\\\"\"" + "'", str11, "_tset_tset\"\\\\\\\"_tsethi\\\\\\\"\"");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "___\\\"___tsethi!\\\"Context" + "'", str13, "___\\\"___tsethi!\\\"Context");
    }

    @Test
    public void test1406() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1406");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        java.lang.String str4 = python3Target1.getListLabel("");
        boolean boolean5 = python3Target1.supportsOverloadedMethods();
        java.lang.String str8 = python3Target1.getTargetStringLiteralFromString("_\"hi!\"", false);
        boolean boolean9 = python3Target1.supportsOverloadedMethods();
        boolean boolean10 = python3Target1.wantsBaseVisitor();
        java.lang.String str12 = python3Target1.getImplicitRuleLabel("\".5.2.Context\"");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "_\\\"hi!\\\"" + "'", str8, "_\\\"hi!\\\"");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "_\".5.2.Context\"" + "'", str12, "_\".5.2.Context\"");
    }

    @Test
    public void test1407() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1407");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python3Target1.getBadWords();
        java.lang.String str3 = python3Target1.getVersion();
        java.lang.String str5 = python3Target1.getAltLabelContextStructName("\"_tset\\\"_tsethi\\\"\"");
        org.antlr.v4.tool.Grammar grammar6 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target8 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator7);
        java.lang.String str10 = python3Target8.encodeIntAsCharEscape(1);
        java.lang.String str11 = python3Target8.getVersion();
        java.lang.String str13 = python3Target8.getImplicitRuleLabel("_tsethi!");
        java.lang.String str15 = python3Target8.getImplicitRuleLabel("__tsethi!");
        org.antlr.v4.codegen.CodeGenerator codeGenerator16 = python3Target8.getCodeGenerator();
        boolean boolean17 = python3Target8.supportsOverloadedMethods();
        java.lang.String str20 = python3Target8.getTargetStringLiteralFromString("\"_Python3\"", true);
        java.util.Set<java.lang.String> strSet21 = python3Target8.getBadWords();
        org.antlr.v4.tool.Grammar grammar22 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator23 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target24 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator23);
        boolean boolean25 = python3Target24.wantsBaseListener();
        org.antlr.v4.codegen.CodeGenerator codeGenerator26 = python3Target24.getCodeGenerator();
        java.lang.String str29 = python3Target24.getTargetStringLiteralFromString("\\n", false);
        org.antlr.v4.tool.Grammar grammar30 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator31 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target32 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator31);
        boolean boolean33 = python3Target32.wantsBaseListener();
        java.util.Set<java.lang.String> strSet34 = python3Target32.getBadWords();
        org.stringtemplate.v4.STGroup sTGroup35 = python3Target32.getTemplates();
        java.lang.String str37 = python3Target32.getImplicitRuleLabel("\"\\\\1\"");
        org.antlr.v4.tool.Grammar grammar38 = null;
        int[] intArray39 = new int[] {};
        java.lang.String[] strArray40 = python3Target32.getTokenTypesAsTargetLabels(grammar38, intArray39);
        java.lang.String[] strArray41 = python3Target24.getTokenTypesAsTargetLabels(grammar30, intArray39);
        java.lang.String[] strArray42 = python3Target8.getTokenTypesAsTargetLabels(grammar22, intArray39);
        java.lang.String[] strArray43 = python3Target1.getTokenTypesAsTargetLabels(grammar6, intArray39);
        java.lang.String str45 = python3Target1.getTargetStringLiteralFromString("tsethi");
        java.lang.String str47 = python3Target1.getListLabel("\\64");
        java.lang.String str49 = python3Target1.getTargetStringLiteralFromString("_tset\\\"4.5.2.1Context");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str51 = python3Target1.getElementName("_\\\"_tset\\\\\\\"_tsethi\\\\\\\"\\\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "4.5.2.1" + "'", str3, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "\"_tset\\\"_tsethi\\\"\"Context" + "'", str5, "\"_tset\\\"_tsethi\\\"\"Context");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\\1" + "'", str10, "\\1");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "4.5.2.1" + "'", str11, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "__tsethi!" + "'", str13, "__tsethi!");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "___tsethi!" + "'", str15, "___tsethi!");
        org.junit.Assert.assertNull(codeGenerator16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "\"\\\"_Python3\\\"\"" + "'", str20, "\"\\\"_Python3\\\"\"");
        org.junit.Assert.assertNotNull(strSet21);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNull(codeGenerator26);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "\\\\n" + "'", str29, "\\\\n");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(strSet34);
        org.junit.Assert.assertNotNull(sTGroup35);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "_\"\\\\1\"" + "'", str37, "_\"\\\\1\"");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[]");
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "\"tsethi\"" + "'", str45, "\"tsethi\"");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "\\64" + "'", str47, "\\64");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "\"_tset\\\\\\\"4.5.2.1Context\"" + "'", str49, "\"_tset\\\\\\\"4.5.2.1Context\"");
    }

    @Test
    public void test1408() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1408");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        boolean boolean3 = python3Target1.wantsBaseVisitor();
        java.lang.String str4 = python3Target1.getLanguage();
        java.lang.String str7 = python3Target1.getTargetStringLiteralFromString("Python3", false);
        java.lang.String str10 = python3Target1.getTargetStringLiteralFromString("Python3", true);
        java.lang.String str12 = python3Target1.getImplicitSetLabel("hi!");
        java.lang.String str14 = python3Target1.getTargetStringLiteralFromString("\"Python3Contex\"");
        java.lang.String str15 = python3Target1.getVersion();
        org.antlr.v4.tool.Grammar grammar16 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str18 = python3Target1.getTokenTypeAsTargetLabel(grammar16, 64);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Python3" + "'", str4, "Python3");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Python3" + "'", str7, "Python3");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\"Python3\"" + "'", str10, "\"Python3\"");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "_tsethi!" + "'", str12, "_tsethi!");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "\"\\\"Python3Contex\\\"\"" + "'", str14, "\"\\\"Python3Contex\\\"\"");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "4.5.2.1" + "'", str15, "4.5.2.1");
    }

    @Test
    public void test1409() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1409");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        java.util.Set<java.lang.String> strSet3 = python3Target1.getBadWords();
        java.util.Set<java.lang.String> strSet4 = python3Target1.getBadWords();
        java.lang.String str5 = python3Target1.getLanguage();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Python3" + "'", str5, "Python3");
    }

    @Test
    public void test1410() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1410");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        boolean boolean3 = python3Target1.wantsBaseVisitor();
        java.lang.String str4 = python3Target1.getLanguage();
        java.lang.String str7 = python3Target1.getTargetStringLiteralFromString("Python3", false);
        java.lang.String str9 = python3Target1.encodeIntAsCharEscape((int) (byte) 10);
        java.lang.String str11 = python3Target1.getTargetStringLiteralFromString("_Python3");
        java.lang.String str13 = python3Target1.getAltLabelContextStructName("Python3");
        java.lang.String str14 = python3Target1.getVersion();
        java.lang.String str15 = python3Target1.getLanguage();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Python3" + "'", str4, "Python3");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Python3" + "'", str7, "Python3");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\\n" + "'", str9, "\\n");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "\"_Python3\"" + "'", str11, "\"_Python3\"");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Python3Context" + "'", str13, "Python3Context");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "4.5.2.1" + "'", str14, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Python3" + "'", str15, "Python3");
    }

    @Test
    public void test1411() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1411");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        java.util.Set<java.lang.String> strSet3 = python3Target1.getBadWords();
        org.stringtemplate.v4.STGroup sTGroup4 = python3Target1.getTemplates();
        java.lang.String str6 = python3Target1.getListLabel("_Python3Context");
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = python3Target1.getCodeGenerator();
        org.stringtemplate.v4.STGroup sTGroup8 = python3Target1.getTemplates();
        java.lang.String str10 = python3Target1.getImplicitRuleLabel("\"Python3\"");
        boolean boolean11 = python3Target1.wantsBaseVisitor();
        java.lang.String str13 = python3Target1.getImplicitSetLabel("_tset\"4.5.2.1\"");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str15 = python3Target1.getElementName("\"__tsethi\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNotNull(sTGroup4);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "_Python3Context" + "'", str6, "_Python3Context");
        org.junit.Assert.assertNull(codeGenerator7);
        org.junit.Assert.assertNotNull(sTGroup8);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "_\"Python3\"" + "'", str10, "_\"Python3\"");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "_tset_tset\"4.5.2.1\"" + "'", str13, "_tset_tset\"4.5.2.1\"");
    }

    @Test
    public void test1412() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1412");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        org.antlr.v4.codegen.CodeGenerator codeGenerator2 = python3Target1.getCodeGenerator();
        java.lang.String str3 = python3Target1.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup4 = python3Target1.getTemplates();
        java.lang.String str6 = python3Target1.getImplicitRuleLabel("_\"hi!\"");
        java.util.Set<java.lang.String> strSet7 = python3Target1.getBadWords();
        java.lang.String str9 = python3Target1.getAltLabelContextStructName("\"_\\\\\\\"hi!\\\\\\\"\"");
        int int10 = python3Target1.getSerializedATNSegmentLimit();
        java.lang.String str12 = python3Target1.getTargetStringLiteralFromString("\"\\\"ython\"");
        org.junit.Assert.assertNull(codeGenerator2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Python3" + "'", str3, "Python3");
        org.junit.Assert.assertNotNull(sTGroup4);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "__\"hi!\"" + "'", str6, "__\"hi!\"");
        org.junit.Assert.assertNotNull(strSet7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\"_\\\\\\\"hi!\\\\\\\"\"Context" + "'", str9, "\"_\\\\\\\"hi!\\\\\\\"\"Context");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 29 + "'", int10 == 29);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "\"\\\"\\\\\\\"ython\\\"\"" + "'", str12, "\"\\\"\\\\\\\"ython\\\"\"");
    }

    @Test
    public void test1413() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1413");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        boolean boolean3 = python3Target1.wantsBaseVisitor();
        java.lang.String str4 = python3Target1.getLanguage();
        java.lang.String str7 = python3Target1.getTargetStringLiteralFromString("Python3", false);
        java.lang.String str9 = python3Target1.encodeIntAsCharEscape((int) (byte) 10);
        java.lang.String str11 = python3Target1.getTargetStringLiteralFromString("_Python3");
        java.lang.String str12 = python3Target1.getLanguage();
        boolean boolean13 = python3Target1.templatesExist();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str15 = python3Target1.getElementListName("\"\\\"Python3Contex\\\"\"Context");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Python3" + "'", str4, "Python3");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Python3" + "'", str7, "Python3");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\\n" + "'", str9, "\\n");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "\"_Python3\"" + "'", str11, "\"_Python3\"");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Python3" + "'", str12, "Python3");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
    }

    @Test
    public void test1414() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1414");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        java.util.Set<java.lang.String> strSet3 = python3Target1.getBadWords();
        org.stringtemplate.v4.STGroup sTGroup4 = python3Target1.getTemplates();
        java.lang.String str6 = python3Target1.getListLabel("_Python3Context");
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = python3Target1.getCodeGenerator();
        java.util.Set<java.lang.String> strSet8 = python3Target1.getBadWords();
        java.lang.String str10 = python3Target1.encodeIntAsCharEscape(1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNotNull(sTGroup4);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "_Python3Context" + "'", str6, "_Python3Context");
        org.junit.Assert.assertNull(codeGenerator7);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\\1" + "'", str10, "\\1");
    }

    @Test
    public void test1415() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1415");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python3Target1.getBadWords();
        java.lang.String str3 = python3Target1.getVersion();
        java.lang.String str5 = python3Target1.getAltLabelContextStructName("\"_tset\\\"_tsethi\\\"\"");
        org.antlr.v4.tool.Grammar grammar6 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target8 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator7);
        java.lang.String str10 = python3Target8.encodeIntAsCharEscape(1);
        java.lang.String str11 = python3Target8.getVersion();
        java.lang.String str13 = python3Target8.getImplicitRuleLabel("_tsethi!");
        java.lang.String str15 = python3Target8.getImplicitRuleLabel("__tsethi!");
        org.antlr.v4.codegen.CodeGenerator codeGenerator16 = python3Target8.getCodeGenerator();
        boolean boolean17 = python3Target8.supportsOverloadedMethods();
        java.lang.String str20 = python3Target8.getTargetStringLiteralFromString("\"_Python3\"", true);
        java.util.Set<java.lang.String> strSet21 = python3Target8.getBadWords();
        org.antlr.v4.tool.Grammar grammar22 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator23 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target24 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator23);
        boolean boolean25 = python3Target24.wantsBaseListener();
        org.antlr.v4.codegen.CodeGenerator codeGenerator26 = python3Target24.getCodeGenerator();
        java.lang.String str29 = python3Target24.getTargetStringLiteralFromString("\\n", false);
        org.antlr.v4.tool.Grammar grammar30 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator31 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target32 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator31);
        boolean boolean33 = python3Target32.wantsBaseListener();
        java.util.Set<java.lang.String> strSet34 = python3Target32.getBadWords();
        org.stringtemplate.v4.STGroup sTGroup35 = python3Target32.getTemplates();
        java.lang.String str37 = python3Target32.getImplicitRuleLabel("\"\\\\1\"");
        org.antlr.v4.tool.Grammar grammar38 = null;
        int[] intArray39 = new int[] {};
        java.lang.String[] strArray40 = python3Target32.getTokenTypesAsTargetLabels(grammar38, intArray39);
        java.lang.String[] strArray41 = python3Target24.getTokenTypesAsTargetLabels(grammar30, intArray39);
        java.lang.String[] strArray42 = python3Target8.getTokenTypesAsTargetLabels(grammar22, intArray39);
        java.lang.String[] strArray43 = python3Target1.getTokenTypesAsTargetLabels(grammar6, intArray39);
        java.lang.String str45 = python3Target1.getTargetStringLiteralFromString("tsethi");
        java.lang.String str47 = python3Target1.getListLabel("\\64");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str49 = python3Target1.getElementName("\\\"\\\"Context");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "4.5.2.1" + "'", str3, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "\"_tset\\\"_tsethi\\\"\"Context" + "'", str5, "\"_tset\\\"_tsethi\\\"\"Context");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\\1" + "'", str10, "\\1");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "4.5.2.1" + "'", str11, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "__tsethi!" + "'", str13, "__tsethi!");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "___tsethi!" + "'", str15, "___tsethi!");
        org.junit.Assert.assertNull(codeGenerator16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "\"\\\"_Python3\\\"\"" + "'", str20, "\"\\\"_Python3\\\"\"");
        org.junit.Assert.assertNotNull(strSet21);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNull(codeGenerator26);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "\\\\n" + "'", str29, "\\\\n");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(strSet34);
        org.junit.Assert.assertNotNull(sTGroup35);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "_\"\\\\1\"" + "'", str37, "_\"\\\\1\"");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[]");
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "\"tsethi\"" + "'", str45, "\"tsethi\"");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "\\64" + "'", str47, "\\64");
    }

    @Test
    public void test1416() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1416");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python3Target1.getBadWords();
        java.lang.String str4 = python3Target1.getTargetStringLiteralFromString("\"_Python3\"");
        boolean boolean5 = python3Target1.templatesExist();
        org.antlr.v4.tool.Grammar grammar6 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target8 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator7);
        boolean boolean9 = python3Target8.wantsBaseListener();
        java.lang.String str11 = python3Target8.getAltLabelContextStructName("_Python3");
        java.lang.String str13 = python3Target8.getListLabel("\"\\\\1\"");
        boolean boolean14 = python3Target8.templatesExist();
        org.antlr.v4.tool.Grammar grammar15 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator16 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target17 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator16);
        boolean boolean18 = python3Target17.wantsBaseListener();
        java.util.Set<java.lang.String> strSet19 = python3Target17.getBadWords();
        org.stringtemplate.v4.STGroup sTGroup20 = python3Target17.getTemplates();
        java.lang.String str22 = python3Target17.getImplicitRuleLabel("\"\\\\1\"");
        org.antlr.v4.tool.Grammar grammar23 = null;
        int[] intArray24 = new int[] {};
        java.lang.String[] strArray25 = python3Target17.getTokenTypesAsTargetLabels(grammar23, intArray24);
        java.lang.String[] strArray26 = python3Target8.getTokenTypesAsTargetLabels(grammar15, intArray24);
        java.lang.String[] strArray27 = python3Target1.getTokenTypesAsTargetLabels(grammar6, intArray24);
        java.lang.String str29 = python3Target1.getImplicitSetLabel("___tsethi!");
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "\"\\\"_Python3\\\"\"" + "'", str4, "\"\\\"_Python3\\\"\"");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "_Python3Context" + "'", str11, "_Python3Context");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "\"\\\\1\"" + "'", str13, "\"\\\\1\"");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(strSet19);
        org.junit.Assert.assertNotNull(sTGroup20);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "_\"\\\\1\"" + "'", str22, "_\"\\\\1\"");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[]");
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "_tset___tsethi!" + "'", str29, "_tset___tsethi!");
    }

    @Test
    public void test1417() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1417");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = python3Target1.getCodeGenerator();
        java.lang.String str5 = python3Target1.encodeIntAsCharEscape((int) (short) 10);
        java.util.Set<java.lang.String> strSet6 = python3Target1.getBadWords();
        java.lang.String str7 = python3Target1.getLanguage();
        java.lang.String str9 = python3Target1.getListLabel("\\\\n");
        java.lang.String str11 = python3Target1.encodeIntAsCharEscape(100);
        boolean boolean12 = python3Target1.templatesExist();
        org.antlr.v4.codegen.CodeGenerator codeGenerator13 = python3Target1.getCodeGenerator();
        boolean boolean14 = python3Target1.supportsOverloadedMethods();
        java.lang.String str16 = python3Target1.getAltLabelContextStructName("_tset\\\"4.5.2.1");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str18 = python3Target1.getImplicitTokenLabel("\\\"_tset\\\\\\\"_tsethi\\\\\\\"\\\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(codeGenerator3);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "\\n" + "'", str5, "\\n");
        org.junit.Assert.assertNotNull(strSet6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Python3" + "'", str7, "Python3");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\\\\n" + "'", str9, "\\\\n");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "d" + "'", str11, "d");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNull(codeGenerator13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "_tset\\\"4.5.2.1Context" + "'", str16, "_tset\\\"4.5.2.1Context");
    }

    @Test
    public void test1418() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1418");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.lang.String str3 = python3Target1.encodeIntAsCharEscape(1);
        java.lang.String str4 = python3Target1.getVersion();
        java.lang.String str6 = python3Target1.getImplicitRuleLabel("_tsethi!");
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = null;
        java.lang.String str10 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator7, "_Python3", false);
        org.antlr.v4.codegen.CodeGenerator codeGenerator11 = python3Target1.getCodeGenerator();
        java.lang.String str14 = python3Target1.getTargetStringLiteralFromString("\"\"", true);
        boolean boolean15 = python3Target1.templatesExist();
        java.util.Set<java.lang.String> strSet16 = python3Target1.getBadWords();
        boolean boolean17 = python3Target1.wantsBaseVisitor();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str19 = python3Target1.getElementName("tset");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "\\1" + "'", str3, "\\1");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "4.5.2.1" + "'", str4, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "__tsethi!" + "'", str6, "__tsethi!");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Python" + "'", str10, "Python");
        org.junit.Assert.assertNull(codeGenerator11);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "\"\\\"\\\"\"" + "'", str14, "\"\\\"\\\"\"");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    }

    @Test
    public void test1419() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1419");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        java.lang.String str4 = python3Target1.getAltLabelContextStructName("_Python3");
        org.antlr.v4.codegen.CodeGenerator codeGenerator5 = null;
        java.lang.String str8 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator5, "__tsethi!", false);
        boolean boolean9 = python3Target1.wantsBaseListener();
        java.lang.String str11 = python3Target1.getImplicitSetLabel("");
        org.antlr.v4.tool.Grammar grammar12 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str14 = python3Target1.getTokenTypeAsTargetLabel(grammar12, 29);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "_Python3Context" + "'", str4, "_Python3Context");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "_tsethi" + "'", str8, "_tsethi");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "_tset" + "'", str11, "_tset");
    }

    @Test
    public void test1420() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1420");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.lang.String str3 = python3Target1.encodeIntAsCharEscape(1);
        java.lang.String str4 = python3Target1.getVersion();
        java.lang.String str6 = python3Target1.getImplicitRuleLabel("_tsethi!");
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = null;
        java.lang.String str10 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator7, "_Python3", false);
        java.lang.String str12 = python3Target1.getAltLabelContextStructName("__tset_Python3Context");
        java.lang.String str14 = python3Target1.getListLabel("\"__hi!\"");
        java.lang.String str16 = python3Target1.getImplicitRuleLabel("_tset\"_\\\"hi!\\\"ContextContextContext\"");
        org.antlr.v4.tool.Rule rule17 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str18 = python3Target1.getRuleFunctionContextStructName(rule17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "\\1" + "'", str3, "\\1");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "4.5.2.1" + "'", str4, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "__tsethi!" + "'", str6, "__tsethi!");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Python" + "'", str10, "Python");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "__tset_Python3ContextContext" + "'", str12, "__tset_Python3ContextContext");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "\"__hi!\"" + "'", str14, "\"__hi!\"");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "__tset\"_\\\"hi!\\\"ContextContextContext\"" + "'", str16, "__tset\"_\\\"hi!\\\"ContextContextContext\"");
    }

    @Test
    public void test1421() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1421");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        boolean boolean3 = python3Target1.templatesExist();
        org.stringtemplate.v4.STGroup sTGroup4 = python3Target1.getTemplates();
        int int5 = python3Target1.getInlineTestSetWordSize();
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = python3Target1.getCodeGenerator();
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = null;
        java.lang.String str10 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator7, "hi!", false);
        java.lang.String str13 = python3Target1.getTargetStringLiteralFromString("_\"\\\"Python3Contex\\\"\"", true);
        java.lang.String str15 = python3Target1.getAltLabelContextStructName("\"4.5.2.1\"");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(sTGroup4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 64 + "'", int5 == 64);
        org.junit.Assert.assertNull(codeGenerator6);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "i" + "'", str10, "i");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "\"_\\\"\\\\\\\"Python3Contex\\\\\\\"\\\"\"" + "'", str13, "\"_\\\"\\\\\\\"Python3Contex\\\\\\\"\\\"\"");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "\"4.5.2.1\"Context" + "'", str15, "\"4.5.2.1\"Context");
    }

    @Test
    public void test1422() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1422");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.lang.String str3 = python3Target1.encodeIntAsCharEscape(1);
        org.antlr.v4.codegen.CodeGenerator codeGenerator4 = null;
        java.lang.String str7 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator4, "_Python3Context", true);
        java.lang.String str9 = python3Target1.getListLabel("hi!");
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = python3Target1.getCodeGenerator();
        java.lang.String str12 = python3Target1.getAltLabelContextStructName("_tset_Python3");
        java.lang.String str14 = python3Target1.getTargetStringLiteralFromString("\"\\\\1\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator15 = null;
        java.lang.String str18 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator15, "\\\"hi!\\\"", false);
        java.lang.String str20 = python3Target1.getImplicitRuleLabel("___tsethi!");
        org.stringtemplate.v4.STGroup sTGroup21 = python3Target1.getTemplates();
        java.lang.String str22 = python3Target1.getVersion();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "\\1" + "'", str3, "\\1");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "\"Python3Contex\"" + "'", str7, "\"Python3Contex\"");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertNull(codeGenerator10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "_tset_Python3Context" + "'", str12, "_tset_Python3Context");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "\"\\\"\\\\\\\\1\\\"\"" + "'", str14, "\"\\\"\\\\\\\\1\\\"\"");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "\\\"hi!\\\"" + "'", str18, "\\\"hi!\\\"");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "____tsethi!" + "'", str20, "____tsethi!");
        org.junit.Assert.assertNotNull(sTGroup21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "4.5.2.1" + "'", str22, "4.5.2.1");
    }

    @Test
    public void test1423() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1423");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.lang.String str3 = python3Target1.encodeIntAsCharEscape(1);
        java.lang.String str4 = python3Target1.getVersion();
        java.lang.String str6 = python3Target1.getImplicitRuleLabel("_tsethi!");
        boolean boolean7 = python3Target1.templatesExist();
        java.lang.String str10 = python3Target1.getTargetStringLiteralFromString("\\1", true);
        java.lang.String str12 = python3Target1.getImplicitSetLabel("\\\\n");
        org.antlr.v4.codegen.CodeGenerator codeGenerator13 = python3Target1.getCodeGenerator();
        boolean boolean14 = python3Target1.supportsOverloadedMethods();
        org.antlr.v4.tool.ast.GrammarAST grammarAST15 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str16 = python3Target1.getLoopCounter(grammarAST15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "\\1" + "'", str3, "\\1");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "4.5.2.1" + "'", str4, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "__tsethi!" + "'", str6, "__tsethi!");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\"\\\\1\"" + "'", str10, "\"\\\\1\"");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "_tset\\\\n" + "'", str12, "_tset\\\\n");
        org.junit.Assert.assertNull(codeGenerator13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test1424() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1424");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        java.util.Set<java.lang.String> strSet3 = python3Target1.getBadWords();
        java.util.Set<java.lang.String> strSet4 = python3Target1.getBadWords();
        java.lang.String str6 = python3Target1.getImplicitRuleLabel("\\\"\\\"Python3Contex\\\"");
        java.lang.String str7 = python3Target1.getVersion();
        boolean boolean8 = python3Target1.wantsBaseListener();
        int int9 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str10 = python3Target1.getLanguage();
        boolean boolean11 = python3Target1.wantsBaseVisitor();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "_\\\"\\\"Python3Contex\\\"" + "'", str6, "_\\\"\\\"Python3Contex\\\"");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "4.5.2.1" + "'", str7, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 64 + "'", int9 == 64);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Python3" + "'", str10, "Python3");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test1425() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1425");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        java.lang.String str4 = python3Target1.getListLabel("");
        boolean boolean5 = python3Target1.supportsOverloadedMethods();
        int int6 = python3Target1.getSerializedATNSegmentLimit();
        java.lang.String str8 = python3Target1.getListLabel("_i");
        java.lang.String str10 = python3Target1.getImplicitRuleLabel("\\0");
        boolean boolean11 = python3Target1.supportsOverloadedMethods();
        org.antlr.v4.codegen.CodeGenerator codeGenerator12 = python3Target1.getCodeGenerator();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str14 = python3Target1.getElementName("_tset_iContext");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 29 + "'", int6 == 29);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "_i" + "'", str8, "_i");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "_\\0" + "'", str10, "_\\0");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(codeGenerator12);
    }

    @Test
    public void test1426() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1426");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getSerializedATNSegmentLimit();
        java.lang.String str4 = python3Target1.getTargetStringLiteralFromString("_");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 29 + "'", int2 == 29);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "\"_\"" + "'", str4, "\"_\"");
    }

    @Test
    public void test1427() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1427");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        java.util.Set<java.lang.String> strSet3 = python3Target1.getBadWords();
        java.util.Set<java.lang.String> strSet4 = python3Target1.getBadWords();
        boolean boolean5 = python3Target1.wantsBaseVisitor();
        int int6 = python3Target1.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet7 = python3Target1.getBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = python3Target1.getCodeGenerator();
        org.antlr.v4.codegen.model.RuleFunction ruleFunction9 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str10 = python3Target1.getRuleFunctionContextStructName(ruleFunction9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 64 + "'", int6 == 64);
        org.junit.Assert.assertNotNull(strSet7);
        org.junit.Assert.assertNull(codeGenerator8);
    }

    @Test
    public void test1428() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1428");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        java.lang.String str4 = python3Target1.getListLabel("");
        java.lang.String str5 = python3Target1.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = python3Target1.getCodeGenerator();
        int int7 = python3Target1.getSerializedATNSegmentLimit();
        boolean boolean8 = python3Target1.supportsOverloadedMethods();
        java.lang.String str11 = python3Target1.getTargetStringLiteralFromString("\"__hi!\"", false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Python3" + "'", str5, "Python3");
        org.junit.Assert.assertNull(codeGenerator6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 29 + "'", int7 == 29);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "\\\"__hi!\\\"" + "'", str11, "\\\"__hi!\\\"");
    }

    @Test
    public void test1429() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1429");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        boolean boolean3 = python3Target1.wantsBaseVisitor();
        java.lang.String str4 = python3Target1.getLanguage();
        java.lang.String str7 = python3Target1.getTargetStringLiteralFromString("Python3", false);
        boolean boolean8 = python3Target1.templatesExist();
        org.stringtemplate.v4.STGroup sTGroup9 = python3Target1.getTemplates();
        boolean boolean10 = python3Target1.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup11 = python3Target1.getTemplates();
        java.lang.String str13 = python3Target1.getListLabel("\"Python3Contex\"");
        java.lang.String str15 = python3Target1.getImplicitSetLabel("\"__\\\"___tsethi!\\\"Context\\\"Contex\"");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Python3" + "'", str4, "Python3");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Python3" + "'", str7, "Python3");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(sTGroup9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(sTGroup11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "\"Python3Contex\"" + "'", str13, "\"Python3Contex\"");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "_tset\"__\\\"___tsethi!\\\"Context\\\"Contex\"" + "'", str15, "_tset\"__\\\"___tsethi!\\\"Context\\\"Contex\"");
    }

    @Test
    public void test1430() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1430");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        java.lang.String str4 = python3Target1.getAltLabelContextStructName("_Python3");
        java.lang.String str6 = python3Target1.getImplicitSetLabel("i");
        boolean boolean7 = python3Target1.wantsBaseListener();
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = python3Target1.getCodeGenerator();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "_Python3Context" + "'", str4, "_Python3Context");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "_tseti" + "'", str6, "_tseti");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(codeGenerator8);
    }

    @Test
    public void test1431() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1431");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        boolean boolean3 = python3Target1.templatesExist();
        org.stringtemplate.v4.STGroup sTGroup4 = python3Target1.getTemplates();
        boolean boolean5 = python3Target1.supportsOverloadedMethods();
        java.lang.String str8 = python3Target1.getTargetStringLiteralFromString("_tsethi", false);
        java.lang.String str10 = python3Target1.getTargetStringLiteralFromString("\\\"hi!\\\"");
        boolean boolean11 = python3Target1.wantsBaseVisitor();
        org.antlr.v4.codegen.CodeGenerator codeGenerator12 = python3Target1.getCodeGenerator();
        java.lang.String str15 = python3Target1.getTargetStringLiteralFromString("Tset_tseContext", true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(sTGroup4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "_tsethi" + "'", str8, "_tsethi");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\"\\\\\\\"hi!\\\\\\\"\"" + "'", str10, "\"\\\\\\\"hi!\\\\\\\"\"");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(codeGenerator12);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "\"Tset_tseContext\"" + "'", str15, "\"Tset_tseContext\"");
    }

    @Test
    public void test1432() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1432");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        boolean boolean3 = python3Target1.templatesExist();
        int int4 = python3Target1.getSerializedATNSegmentLimit();
        java.lang.String str6 = python3Target1.getTargetStringLiteralFromString("\"Tset_tseContext\"");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 29 + "'", int4 == 29);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\"\\\"Tset_tseContext\\\"\"" + "'", str6, "\"\\\"Tset_tseContext\\\"\"");
    }

    @Test
    public void test1433() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1433");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        java.util.Set<java.lang.String> strSet3 = python3Target1.getBadWords();
        java.util.Set<java.lang.String> strSet4 = python3Target1.getBadWords();
        boolean boolean5 = python3Target1.wantsBaseVisitor();
        int int6 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str8 = python3Target1.getImplicitSetLabel("_tset_Python3");
        boolean boolean9 = python3Target1.templatesExist();
        java.lang.String str10 = python3Target1.getLanguage();
        java.util.Set<java.lang.String> strSet11 = python3Target1.getBadWords();
        java.lang.String str13 = python3Target1.getListLabel("_tset_tset\\\"4.5.2.1\\\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator14 = python3Target1.getCodeGenerator();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 64 + "'", int6 == 64);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "_tset_tset_Python3" + "'", str8, "_tset_tset_Python3");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Python3" + "'", str10, "Python3");
        org.junit.Assert.assertNotNull(strSet11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "_tset_tset\\\"4.5.2.1\\\"" + "'", str13, "_tset_tset\\\"4.5.2.1\\\"");
        org.junit.Assert.assertNull(codeGenerator14);
    }

    @Test
    public void test1434() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1434");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        boolean boolean3 = python3Target1.wantsBaseVisitor();
        java.lang.String str4 = python3Target1.getLanguage();
        java.lang.String str7 = python3Target1.getTargetStringLiteralFromString("Python3", false);
        boolean boolean8 = python3Target1.templatesExist();
        java.lang.String str10 = python3Target1.getTargetStringLiteralFromString("hi!");
        org.stringtemplate.v4.STGroup sTGroup11 = python3Target1.getTemplates();
        org.stringtemplate.v4.STGroup sTGroup12 = python3Target1.getTemplates();
        java.lang.String str13 = python3Target1.getLanguage();
        int int14 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str15 = python3Target1.getLanguage();
        org.antlr.v4.tool.ast.GrammarAST grammarAST16 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str17 = python3Target1.getLoopCounter(grammarAST16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Python3" + "'", str4, "Python3");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Python3" + "'", str7, "Python3");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\"hi!\"" + "'", str10, "\"hi!\"");
        org.junit.Assert.assertNotNull(sTGroup11);
        org.junit.Assert.assertNotNull(sTGroup12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Python3" + "'", str13, "Python3");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 64 + "'", int14 == 64);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Python3" + "'", str15, "Python3");
    }

    @Test
    public void test1435() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1435");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python3Target1.getBadWords();
        boolean boolean3 = python3Target1.templatesExist();
        org.stringtemplate.v4.STGroup sTGroup4 = python3Target1.getTemplates();
        java.lang.String str5 = python3Target1.getVersion();
        boolean boolean6 = python3Target1.wantsBaseListener();
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(sTGroup4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "4.5.2.1" + "'", str5, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    }

    @Test
    public void test1436() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1436");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        boolean boolean3 = python3Target1.wantsBaseVisitor();
        java.lang.String str4 = python3Target1.getLanguage();
        java.lang.String str7 = python3Target1.getTargetStringLiteralFromString("Python3", false);
        boolean boolean8 = python3Target1.templatesExist();
        java.lang.String str9 = python3Target1.getLanguage();
        java.lang.String str11 = python3Target1.getImplicitRuleLabel("_\"_Python3\"");
        boolean boolean12 = python3Target1.wantsBaseListener();
        java.lang.String str13 = python3Target1.getLanguage();
        java.lang.String str15 = python3Target1.getImplicitSetLabel("__\"hi!\"");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Python3" + "'", str4, "Python3");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Python3" + "'", str7, "Python3");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Python3" + "'", str9, "Python3");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "__\"_Python3\"" + "'", str11, "__\"_Python3\"");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Python3" + "'", str13, "Python3");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "_tset__\"hi!\"" + "'", str15, "_tset__\"hi!\"");
    }

    @Test
    public void test1437() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1437");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        java.lang.String str4 = python3Target1.getAltLabelContextStructName("_Python3");
        boolean boolean5 = python3Target1.templatesExist();
        int int6 = python3Target1.getInlineTestSetWordSize();
        boolean boolean7 = python3Target1.templatesExist();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "_Python3Context" + "'", str4, "_Python3Context");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 64 + "'", int6 == 64);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
    }

    @Test
    public void test1438() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1438");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        boolean boolean3 = python3Target1.wantsBaseVisitor();
        java.lang.String str4 = python3Target1.getLanguage();
        java.lang.String str7 = python3Target1.getTargetStringLiteralFromString("Python3", false);
        java.lang.String str9 = python3Target1.getImplicitRuleLabel("Python3");
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = null;
        java.lang.String str13 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator10, "\\35", false);
        java.lang.String str15 = python3Target1.getImplicitRuleLabel("\"hi!\"");
        java.lang.String str18 = python3Target1.getTargetStringLiteralFromString("\"Python3Context\"", true);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str20 = python3Target1.getImplicitTokenLabel("\\1");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Python3" + "'", str4, "Python3");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Python3" + "'", str7, "Python3");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "_Python3" + "'", str9, "_Python3");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "3" + "'", str13, "3");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "_\"hi!\"" + "'", str15, "_\"hi!\"");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "\"\\\"Python3Context\\\"\"" + "'", str18, "\"\\\"Python3Context\\\"\"");
    }

    @Test
    public void test1439() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1439");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        boolean boolean3 = python3Target1.wantsBaseVisitor();
        java.lang.String str4 = python3Target1.getLanguage();
        java.lang.String str7 = python3Target1.getTargetStringLiteralFromString("Python3", false);
        boolean boolean8 = python3Target1.templatesExist();
        java.lang.String str10 = python3Target1.getTargetStringLiteralFromString("hi!");
        org.stringtemplate.v4.STGroup sTGroup11 = python3Target1.getTemplates();
        org.antlr.v4.codegen.CodeGenerator codeGenerator12 = null;
        java.lang.String str15 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator12, "_\"hi!\"", false);
        java.lang.String str17 = python3Target1.encodeIntAsCharEscape((int) '4');
        boolean boolean18 = python3Target1.wantsBaseVisitor();
        java.lang.String str21 = python3Target1.getTargetStringLiteralFromString("_.5.2.", false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Python3" + "'", str4, "Python3");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Python3" + "'", str7, "Python3");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\"hi!\"" + "'", str10, "\"hi!\"");
        org.junit.Assert.assertNotNull(sTGroup11);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "\\\"hi!" + "'", str15, "\\\"hi!");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "\\64" + "'", str17, "\\64");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "_.5.2." + "'", str21, "_.5.2.");
    }

    @Test
    public void test1440() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1440");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        java.lang.String str4 = python3Target1.getAltLabelContextStructName("_Python3");
        java.lang.String str6 = python3Target1.getListLabel("\"\\\\1\"");
        boolean boolean7 = python3Target1.templatesExist();
        java.lang.String str9 = python3Target1.getListLabel("\"\\\"\\\\\"");
        int int10 = python3Target1.getInlineTestSetWordSize();
        org.antlr.v4.tool.ast.GrammarAST grammarAST11 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str12 = python3Target1.getLoopLabel(grammarAST11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "_Python3Context" + "'", str4, "_Python3Context");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\"\\\\1\"" + "'", str6, "\"\\\\1\"");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\"\\\"\\\\\"" + "'", str9, "\"\\\"\\\\\"");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 64 + "'", int10 == 64);
    }

    @Test
    public void test1441() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1441");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        java.lang.String str4 = python3Target1.getListLabel("");
        boolean boolean5 = python3Target1.wantsBaseListener();
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = python3Target1.getCodeGenerator();
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = python3Target1.getCodeGenerator();
        java.lang.String str9 = python3Target1.getAltLabelContextStructName("Python3");
        int int10 = python3Target1.getSerializedATNSegmentLimit();
        org.antlr.v4.tool.ast.GrammarAST grammarAST11 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str12 = python3Target1.getLoopCounter(grammarAST11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(codeGenerator6);
        org.junit.Assert.assertNull(codeGenerator7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Python3Context" + "'", str9, "Python3Context");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 29 + "'", int10 == 29);
    }

    @Test
    public void test1442() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1442");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        boolean boolean3 = python3Target1.wantsBaseVisitor();
        java.lang.String str4 = python3Target1.getLanguage();
        java.lang.String str7 = python3Target1.getTargetStringLiteralFromString("Python3", false);
        boolean boolean8 = python3Target1.templatesExist();
        java.lang.String str9 = python3Target1.getLanguage();
        boolean boolean10 = python3Target1.wantsBaseVisitor();
        org.stringtemplate.v4.STGroup sTGroup11 = python3Target1.getTemplates();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str13 = python3Target1.getElementListName("\"4.5.2.1\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Python3" + "'", str4, "Python3");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Python3" + "'", str7, "Python3");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Python3" + "'", str9, "Python3");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(sTGroup11);
    }

    @Test
    public void test1443() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1443");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        java.lang.String str4 = python3Target1.getListLabel("");
        boolean boolean5 = python3Target1.wantsBaseListener();
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = null;
        java.lang.String str9 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator6, "Python3", true);
        int int10 = python3Target1.getSerializedATNSegmentLimit();
        java.lang.String str12 = python3Target1.getTargetStringLiteralFromString("4.5.2.1");
        org.antlr.v4.tool.Rule rule13 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str14 = python3Target1.getRuleFunctionContextStructName(rule13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\"ython\"" + "'", str9, "\"ython\"");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 29 + "'", int10 == 29);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "\"4.5.2.1\"" + "'", str12, "\"4.5.2.1\"");
    }

    @Test
    public void test1444() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1444");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        java.lang.String str4 = python3Target1.getAltLabelContextStructName("_Python3");
        org.antlr.v4.codegen.CodeGenerator codeGenerator5 = null;
        java.lang.String str8 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator5, "__tsethi!", false);
        java.lang.String str10 = python3Target1.encodeIntAsCharEscape((int) (short) 100);
        boolean boolean11 = python3Target1.supportsOverloadedMethods();
        java.lang.String str13 = python3Target1.getImplicitSetLabel("_tset__tset_Python3Context");
        java.lang.String str15 = python3Target1.getListLabel("");
        java.lang.String str17 = python3Target1.encodeIntAsCharEscape(64);
        java.util.Set<java.lang.String> strSet18 = python3Target1.getBadWords();
        int int19 = python3Target1.getSerializedATNSegmentLimit();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "_Python3Context" + "'", str4, "_Python3Context");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "_tsethi" + "'", str8, "_tsethi");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "d" + "'", str10, "d");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "_tset_tset__tset_Python3Context" + "'", str13, "_tset_tset__tset_Python3Context");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "@" + "'", str17, "@");
        org.junit.Assert.assertNotNull(strSet18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 29 + "'", int19 == 29);
    }

    @Test
    public void test1445() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1445");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        boolean boolean3 = python3Target1.wantsBaseVisitor();
        java.lang.String str4 = python3Target1.getLanguage();
        java.lang.String str7 = python3Target1.getTargetStringLiteralFromString("Python3", false);
        java.lang.String str9 = python3Target1.encodeIntAsCharEscape((int) (byte) 10);
        int int10 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str11 = python3Target1.getVersion();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Python3" + "'", str4, "Python3");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Python3" + "'", str7, "Python3");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\\n" + "'", str9, "\\n");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 64 + "'", int10 == 64);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "4.5.2.1" + "'", str11, "4.5.2.1");
    }

    @Test
    public void test1446() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1446");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        boolean boolean3 = python3Target1.templatesExist();
        org.stringtemplate.v4.STGroup sTGroup4 = python3Target1.getTemplates();
        int int5 = python3Target1.getInlineTestSetWordSize();
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = python3Target1.getCodeGenerator();
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = null;
        java.lang.String str10 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator7, "hi!", false);
        java.lang.String str13 = python3Target1.getTargetStringLiteralFromString("_\"\\\"Python3Contex\\\"\"", true);
        int int14 = python3Target1.getSerializedATNSegmentLimit();
        org.stringtemplate.v4.STGroup sTGroup15 = python3Target1.getTemplates();
        org.antlr.v4.tool.Grammar grammar16 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator17 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target18 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator17);
        boolean boolean19 = python3Target18.wantsBaseListener();
        java.lang.String str21 = python3Target18.getAltLabelContextStructName("_Python3");
        java.lang.String str23 = python3Target18.getImplicitSetLabel("i");
        org.antlr.v4.tool.Grammar grammar24 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator25 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target26 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator25);
        boolean boolean27 = python3Target26.wantsBaseListener();
        java.lang.String str29 = python3Target26.getListLabel("");
        java.lang.String str30 = python3Target26.getLanguage();
        java.lang.String str32 = python3Target26.encodeIntAsCharEscape((int) '#');
        org.antlr.v4.tool.Grammar grammar33 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator34 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target35 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator34);
        boolean boolean36 = python3Target35.wantsBaseListener();
        java.util.Set<java.lang.String> strSet37 = python3Target35.getBadWords();
        org.stringtemplate.v4.STGroup sTGroup38 = python3Target35.getTemplates();
        java.lang.String str40 = python3Target35.getImplicitRuleLabel("\"\\\\1\"");
        org.antlr.v4.tool.Grammar grammar41 = null;
        int[] intArray42 = new int[] {};
        java.lang.String[] strArray43 = python3Target35.getTokenTypesAsTargetLabels(grammar41, intArray42);
        java.lang.String[] strArray44 = python3Target26.getTokenTypesAsTargetLabels(grammar33, intArray42);
        java.lang.String[] strArray45 = python3Target18.getTokenTypesAsTargetLabels(grammar24, intArray42);
        java.lang.String[] strArray46 = python3Target1.getTokenTypesAsTargetLabels(grammar16, intArray42);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(sTGroup4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 64 + "'", int5 == 64);
        org.junit.Assert.assertNull(codeGenerator6);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "i" + "'", str10, "i");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "\"_\\\"\\\\\\\"Python3Contex\\\\\\\"\\\"\"" + "'", str13, "\"_\\\"\\\\\\\"Python3Contex\\\\\\\"\\\"\"");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 29 + "'", int14 == 29);
        org.junit.Assert.assertNotNull(sTGroup15);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "_Python3Context" + "'", str21, "_Python3Context");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "_tseti" + "'", str23, "_tseti");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, "");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "Python3" + "'", str30, "Python3");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "#" + "'", str32, "#");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(strSet37);
        org.junit.Assert.assertNotNull(sTGroup38);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "_\"\\\\1\"" + "'", str40, "_\"\\\\1\"");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[]");
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertNotNull(strArray46);
    }

    @Test
    public void test1447() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1447");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        java.lang.String str4 = python3Target1.getAltLabelContextStructName("_Python3");
        org.antlr.v4.codegen.CodeGenerator codeGenerator5 = null;
        java.lang.String str8 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator5, "__tsethi!", false);
        java.lang.String str10 = python3Target1.encodeIntAsCharEscape((int) (short) 100);
        boolean boolean11 = python3Target1.supportsOverloadedMethods();
        int int12 = python3Target1.getInlineTestSetWordSize();
        int int13 = python3Target1.getSerializedATNSegmentLimit();
        java.lang.String str15 = python3Target1.getAltLabelContextStructName("\"hi!\"");
        boolean boolean16 = python3Target1.wantsBaseListener();
        java.lang.String str17 = python3Target1.getVersion();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str19 = python3Target1.getImplicitTokenLabel("_tset_Python3");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "_Python3Context" + "'", str4, "_Python3Context");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "_tsethi" + "'", str8, "_tsethi");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "d" + "'", str10, "d");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 64 + "'", int12 == 64);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 29 + "'", int13 == 29);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "\"hi!\"Context" + "'", str15, "\"hi!\"Context");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "4.5.2.1" + "'", str17, "4.5.2.1");
    }

    @Test
    public void test1448() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1448");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        boolean boolean3 = python3Target1.wantsBaseVisitor();
        java.lang.String str4 = python3Target1.getLanguage();
        java.lang.String str7 = python3Target1.getTargetStringLiteralFromString("Python3", false);
        boolean boolean8 = python3Target1.templatesExist();
        java.lang.String str10 = python3Target1.getTargetStringLiteralFromString("hi!");
        org.stringtemplate.v4.STGroup sTGroup11 = python3Target1.getTemplates();
        org.stringtemplate.v4.STGroup sTGroup12 = python3Target1.getTemplates();
        java.lang.String str14 = python3Target1.getListLabel("");
        org.antlr.v4.tool.Grammar grammar15 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator16 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target17 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator16);
        boolean boolean18 = python3Target17.wantsBaseListener();
        org.antlr.v4.codegen.CodeGenerator codeGenerator19 = python3Target17.getCodeGenerator();
        java.lang.String str22 = python3Target17.getTargetStringLiteralFromString("\\n", false);
        org.antlr.v4.codegen.CodeGenerator codeGenerator23 = null;
        java.lang.String str26 = python3Target17.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator23, "_\\\"\\\\1", true);
        org.antlr.v4.tool.Grammar grammar27 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator28 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target29 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator28);
        boolean boolean30 = python3Target29.wantsBaseListener();
        boolean boolean31 = python3Target29.templatesExist();
        org.stringtemplate.v4.STGroup sTGroup32 = python3Target29.getTemplates();
        org.stringtemplate.v4.STGroup sTGroup33 = python3Target29.getTemplates();
        java.lang.String str34 = python3Target29.getVersion();
        org.antlr.v4.tool.Grammar grammar35 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator36 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target37 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator36);
        boolean boolean38 = python3Target37.wantsBaseListener();
        boolean boolean39 = python3Target37.wantsBaseVisitor();
        java.lang.String str40 = python3Target37.getLanguage();
        org.antlr.v4.tool.Grammar grammar41 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator42 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target43 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator42);
        java.lang.String str45 = python3Target43.encodeIntAsCharEscape(1);
        org.stringtemplate.v4.STGroup sTGroup46 = python3Target43.getTemplates();
        boolean boolean47 = python3Target43.supportsOverloadedMethods();
        boolean boolean48 = python3Target43.templatesExist();
        org.antlr.v4.tool.Grammar grammar49 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator50 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target51 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator50);
        java.lang.String str53 = python3Target51.encodeIntAsCharEscape(1);
        java.lang.String str54 = python3Target51.getVersion();
        java.lang.String str56 = python3Target51.getImplicitRuleLabel("_tsethi!");
        java.lang.String str58 = python3Target51.getImplicitRuleLabel("__tsethi!");
        org.antlr.v4.codegen.CodeGenerator codeGenerator59 = python3Target51.getCodeGenerator();
        boolean boolean60 = python3Target51.supportsOverloadedMethods();
        java.lang.String str63 = python3Target51.getTargetStringLiteralFromString("\"_Python3\"", true);
        java.util.Set<java.lang.String> strSet64 = python3Target51.getBadWords();
        org.antlr.v4.tool.Grammar grammar65 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator66 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target67 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator66);
        boolean boolean68 = python3Target67.wantsBaseListener();
        org.antlr.v4.codegen.CodeGenerator codeGenerator69 = python3Target67.getCodeGenerator();
        java.lang.String str72 = python3Target67.getTargetStringLiteralFromString("\\n", false);
        org.antlr.v4.tool.Grammar grammar73 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator74 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target75 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator74);
        boolean boolean76 = python3Target75.wantsBaseListener();
        java.util.Set<java.lang.String> strSet77 = python3Target75.getBadWords();
        org.stringtemplate.v4.STGroup sTGroup78 = python3Target75.getTemplates();
        java.lang.String str80 = python3Target75.getImplicitRuleLabel("\"\\\\1\"");
        org.antlr.v4.tool.Grammar grammar81 = null;
        int[] intArray82 = new int[] {};
        java.lang.String[] strArray83 = python3Target75.getTokenTypesAsTargetLabels(grammar81, intArray82);
        java.lang.String[] strArray84 = python3Target67.getTokenTypesAsTargetLabels(grammar73, intArray82);
        java.lang.String[] strArray85 = python3Target51.getTokenTypesAsTargetLabels(grammar65, intArray82);
        java.lang.String[] strArray86 = python3Target43.getTokenTypesAsTargetLabels(grammar49, intArray82);
        java.lang.String[] strArray87 = python3Target37.getTokenTypesAsTargetLabels(grammar41, intArray82);
        java.lang.String[] strArray88 = python3Target29.getTokenTypesAsTargetLabels(grammar35, intArray82);
        java.lang.String[] strArray89 = python3Target17.getTokenTypesAsTargetLabels(grammar27, intArray82);
        java.lang.String[] strArray90 = python3Target1.getTokenTypesAsTargetLabels(grammar15, intArray82);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Python3" + "'", str4, "Python3");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Python3" + "'", str7, "Python3");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\"hi!\"" + "'", str10, "\"hi!\"");
        org.junit.Assert.assertNotNull(sTGroup11);
        org.junit.Assert.assertNotNull(sTGroup12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(codeGenerator19);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "\\\\n" + "'", str22, "\\\\n");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "\"\\\"\\\\\"" + "'", str26, "\"\\\"\\\\\"");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(sTGroup32);
        org.junit.Assert.assertNotNull(sTGroup33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "4.5.2.1" + "'", str34, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "Python3" + "'", str40, "Python3");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "\\1" + "'", str45, "\\1");
        org.junit.Assert.assertNotNull(sTGroup46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "\\1" + "'", str53, "\\1");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "4.5.2.1" + "'", str54, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "__tsethi!" + "'", str56, "__tsethi!");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "___tsethi!" + "'", str58, "___tsethi!");
        org.junit.Assert.assertNull(codeGenerator59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "\"\\\"_Python3\\\"\"" + "'", str63, "\"\\\"_Python3\\\"\"");
        org.junit.Assert.assertNotNull(strSet64);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNull(codeGenerator69);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "\\\\n" + "'", str72, "\\\\n");
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(strSet77);
        org.junit.Assert.assertNotNull(sTGroup78);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "_\"\\\\1\"" + "'", str80, "_\"\\\\1\"");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[]");
        org.junit.Assert.assertNotNull(strArray83);
        org.junit.Assert.assertNotNull(strArray84);
        org.junit.Assert.assertNotNull(strArray85);
        org.junit.Assert.assertNotNull(strArray86);
        org.junit.Assert.assertNotNull(strArray87);
        org.junit.Assert.assertNotNull(strArray88);
        org.junit.Assert.assertNotNull(strArray89);
        org.junit.Assert.assertNotNull(strArray90);
    }

    @Test
    public void test1449() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1449");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        java.util.Set<java.lang.String> strSet3 = python3Target1.getBadWords();
        org.stringtemplate.v4.STGroup sTGroup4 = python3Target1.getTemplates();
        java.util.Set<java.lang.String> strSet5 = python3Target1.getBadWords();
        java.util.Set<java.lang.String> strSet6 = python3Target1.getBadWords();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNotNull(sTGroup4);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(strSet6);
    }

    @Test
    public void test1450() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1450");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        boolean boolean3 = python3Target1.wantsBaseVisitor();
        java.lang.String str4 = python3Target1.getLanguage();
        java.lang.String str7 = python3Target1.getTargetStringLiteralFromString("Python3", false);
        java.lang.String str10 = python3Target1.getTargetStringLiteralFromString("Python3", true);
        java.lang.String str12 = python3Target1.getImplicitSetLabel("hi!");
        java.lang.String str14 = python3Target1.getTargetStringLiteralFromString("\"Python3Contex\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator15 = python3Target1.getCodeGenerator();
        boolean boolean16 = python3Target1.templatesExist();
        java.lang.String str18 = python3Target1.getImplicitSetLabel("\"ython\"");
        boolean boolean19 = python3Target1.wantsBaseVisitor();
        java.lang.String str21 = python3Target1.encodeIntAsCharEscape(0);
        java.lang.String str22 = python3Target1.getLanguage();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Python3" + "'", str4, "Python3");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Python3" + "'", str7, "Python3");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\"Python3\"" + "'", str10, "\"Python3\"");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "_tsethi!" + "'", str12, "_tsethi!");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "\"\\\"Python3Contex\\\"\"" + "'", str14, "\"\\\"Python3Contex\\\"\"");
        org.junit.Assert.assertNull(codeGenerator15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "_tset\"ython\"" + "'", str18, "_tset\"ython\"");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "\\0" + "'", str21, "\\0");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "Python3" + "'", str22, "Python3");
    }

    @Test
    public void test1451() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1451");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        boolean boolean3 = python3Target1.templatesExist();
        org.stringtemplate.v4.STGroup sTGroup4 = python3Target1.getTemplates();
        org.stringtemplate.v4.STGroup sTGroup5 = python3Target1.getTemplates();
        java.lang.String str6 = python3Target1.getLanguage();
        java.lang.String str9 = python3Target1.getTargetStringLiteralFromString("_\\\"\\\"Python3Contex\\\"", true);
        int int10 = python3Target1.getInlineTestSetWordSize();
        org.antlr.v4.tool.Grammar grammar11 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator12 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target13 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator12);
        boolean boolean14 = python3Target13.wantsBaseListener();
        java.util.Set<java.lang.String> strSet15 = python3Target13.getBadWords();
        org.antlr.v4.tool.Grammar grammar16 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator17 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target18 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator17);
        boolean boolean19 = python3Target18.wantsBaseListener();
        boolean boolean20 = python3Target18.wantsBaseVisitor();
        java.lang.String str21 = python3Target18.getLanguage();
        java.lang.String str24 = python3Target18.getTargetStringLiteralFromString("Python3", false);
        java.lang.String str26 = python3Target18.getImplicitRuleLabel("Python3");
        java.lang.String str28 = python3Target18.getImplicitSetLabel("_Python3");
        org.antlr.v4.tool.Grammar grammar29 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator30 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target31 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator30);
        java.lang.String str33 = python3Target31.encodeIntAsCharEscape(1);
        java.lang.String str34 = python3Target31.getVersion();
        java.lang.String str36 = python3Target31.getImplicitRuleLabel("_tsethi!");
        java.lang.String str38 = python3Target31.getImplicitRuleLabel("__tsethi!");
        org.antlr.v4.codegen.CodeGenerator codeGenerator39 = python3Target31.getCodeGenerator();
        boolean boolean40 = python3Target31.supportsOverloadedMethods();
        java.lang.String str43 = python3Target31.getTargetStringLiteralFromString("\"_Python3\"", true);
        java.util.Set<java.lang.String> strSet44 = python3Target31.getBadWords();
        org.antlr.v4.tool.Grammar grammar45 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator46 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target47 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator46);
        boolean boolean48 = python3Target47.wantsBaseListener();
        org.antlr.v4.codegen.CodeGenerator codeGenerator49 = python3Target47.getCodeGenerator();
        java.lang.String str52 = python3Target47.getTargetStringLiteralFromString("\\n", false);
        org.antlr.v4.tool.Grammar grammar53 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator54 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target55 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator54);
        boolean boolean56 = python3Target55.wantsBaseListener();
        java.util.Set<java.lang.String> strSet57 = python3Target55.getBadWords();
        org.stringtemplate.v4.STGroup sTGroup58 = python3Target55.getTemplates();
        java.lang.String str60 = python3Target55.getImplicitRuleLabel("\"\\\\1\"");
        org.antlr.v4.tool.Grammar grammar61 = null;
        int[] intArray62 = new int[] {};
        java.lang.String[] strArray63 = python3Target55.getTokenTypesAsTargetLabels(grammar61, intArray62);
        java.lang.String[] strArray64 = python3Target47.getTokenTypesAsTargetLabels(grammar53, intArray62);
        java.lang.String[] strArray65 = python3Target31.getTokenTypesAsTargetLabels(grammar45, intArray62);
        java.lang.String[] strArray66 = python3Target18.getTokenTypesAsTargetLabels(grammar29, intArray62);
        java.lang.String[] strArray67 = python3Target13.getTokenTypesAsTargetLabels(grammar16, intArray62);
        java.lang.String[] strArray68 = python3Target1.getTokenTypesAsTargetLabels(grammar11, intArray62);
        boolean boolean69 = python3Target1.supportsOverloadedMethods();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(sTGroup4);
        org.junit.Assert.assertNotNull(sTGroup5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Python3" + "'", str6, "Python3");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\"_\\\\\\\"\\\\\\\"Python3Contex\\\\\\\"\"" + "'", str9, "\"_\\\\\\\"\\\\\\\"Python3Contex\\\\\\\"\"");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 64 + "'", int10 == 64);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(strSet15);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Python3" + "'", str21, "Python3");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "Python3" + "'", str24, "Python3");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "_Python3" + "'", str26, "_Python3");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "_tset_Python3" + "'", str28, "_tset_Python3");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "\\1" + "'", str33, "\\1");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "4.5.2.1" + "'", str34, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "__tsethi!" + "'", str36, "__tsethi!");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "___tsethi!" + "'", str38, "___tsethi!");
        org.junit.Assert.assertNull(codeGenerator39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "\"\\\"_Python3\\\"\"" + "'", str43, "\"\\\"_Python3\\\"\"");
        org.junit.Assert.assertNotNull(strSet44);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNull(codeGenerator49);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "\\\\n" + "'", str52, "\\\\n");
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(strSet57);
        org.junit.Assert.assertNotNull(sTGroup58);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "_\"\\\\1\"" + "'", str60, "_\"\\\\1\"");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[]");
        org.junit.Assert.assertNotNull(strArray63);
        org.junit.Assert.assertNotNull(strArray64);
        org.junit.Assert.assertNotNull(strArray65);
        org.junit.Assert.assertNotNull(strArray66);
        org.junit.Assert.assertNotNull(strArray67);
        org.junit.Assert.assertNotNull(strArray68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
    }

    @Test
    public void test1452() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1452");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.lang.String str3 = python3Target1.encodeIntAsCharEscape(1);
        org.stringtemplate.v4.STGroup sTGroup4 = python3Target1.getTemplates();
        java.lang.String str6 = python3Target1.getImplicitRuleLabel(".5.2.");
        java.lang.String str8 = python3Target1.getImplicitRuleLabel(" ");
        java.lang.String str10 = python3Target1.getListLabel("_tset__Python3Context");
        org.antlr.v4.tool.Rule rule11 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str12 = python3Target1.getRuleFunctionContextStructName(rule11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "\\1" + "'", str3, "\\1");
        org.junit.Assert.assertNotNull(sTGroup4);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "_.5.2." + "'", str6, "_.5.2.");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "_ " + "'", str8, "_ ");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "_tset__Python3Context" + "'", str10, "_tset__Python3Context");
    }

    @Test
    public void test1453() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1453");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python3Target1.getBadWords();
        boolean boolean3 = python3Target1.templatesExist();
        java.util.Set<java.lang.String> strSet4 = python3Target1.getBadWords();
        java.lang.String str6 = python3Target1.getImplicitRuleLabel("_tset\"__\\\"___tsethi!\\\"Context\\\"Contex\"");
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "__tset\"__\\\"___tsethi!\\\"Context\\\"Contex\"" + "'", str6, "__tset\"__\\\"___tsethi!\\\"Context\\\"Contex\"");
    }

    @Test
    public void test1454() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1454");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        boolean boolean3 = python3Target1.wantsBaseVisitor();
        java.lang.String str4 = python3Target1.getLanguage();
        java.lang.String str6 = python3Target1.getTargetStringLiteralFromString("\"Python3Contex\"");
        java.lang.String str8 = python3Target1.getImplicitRuleLabel("_\"___tsethi!\"");
        org.stringtemplate.v4.STGroup sTGroup9 = python3Target1.getTemplates();
        java.lang.String str11 = python3Target1.getAltLabelContextStructName("\"__\\\"___tsethi!\\\"Context\\\"Contex\"");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Python3" + "'", str4, "Python3");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\"\\\"Python3Contex\\\"\"" + "'", str6, "\"\\\"Python3Contex\\\"\"");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "__\"___tsethi!\"" + "'", str8, "__\"___tsethi!\"");
        org.junit.Assert.assertNotNull(sTGroup9);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "\"__\\\"___tsethi!\\\"Context\\\"Contex\"Context" + "'", str11, "\"__\\\"___tsethi!\\\"Context\\\"Contex\"Context");
    }

    @Test
    public void test1455() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1455");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.lang.String str3 = python3Target1.encodeIntAsCharEscape(1);
        java.lang.String str4 = python3Target1.getVersion();
        java.lang.String str6 = python3Target1.getImplicitRuleLabel("_tsethi!");
        java.lang.String str8 = python3Target1.getImplicitRuleLabel("__tsethi!");
        java.lang.String str9 = python3Target1.getVersion();
        boolean boolean10 = python3Target1.wantsBaseVisitor();
        org.antlr.v4.tool.ast.GrammarAST grammarAST11 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str12 = python3Target1.getLoopLabel(grammarAST11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "\\1" + "'", str3, "\\1");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "4.5.2.1" + "'", str4, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "__tsethi!" + "'", str6, "__tsethi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "___tsethi!" + "'", str8, "___tsethi!");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "4.5.2.1" + "'", str9, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test1456() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1456");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        boolean boolean3 = python3Target1.templatesExist();
        org.stringtemplate.v4.STGroup sTGroup4 = python3Target1.getTemplates();
        org.stringtemplate.v4.STGroup sTGroup5 = python3Target1.getTemplates();
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = python3Target1.getCodeGenerator();
        int int7 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str9 = python3Target1.encodeIntAsCharEscape(10);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(sTGroup4);
        org.junit.Assert.assertNotNull(sTGroup5);
        org.junit.Assert.assertNull(codeGenerator6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 64 + "'", int7 == 64);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\\n" + "'", str9, "\\n");
    }

    @Test
    public void test1457() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1457");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        java.lang.String str4 = python3Target1.getListLabel("");
        boolean boolean5 = python3Target1.supportsOverloadedMethods();
        java.lang.String str7 = python3Target1.encodeIntAsCharEscape((int) ' ');
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = null;
        java.lang.String str11 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator8, "\"\\\"\\\"Python3Contex\\\"\"", false);
        int int12 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str14 = python3Target1.getListLabel("_tset\\\"___tsethi!Context");
        org.antlr.v4.codegen.CodeGenerator codeGenerator15 = null;
        java.lang.String str18 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator15, "i", false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + " " + "'", str7, " ");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "\\\"\\\"Python3Contex\\\"" + "'", str11, "\\\"\\\"Python3Contex\\\"");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 64 + "'", int12 == 64);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "_tset\\\"___tsethi!Context" + "'", str14, "_tset\\\"___tsethi!Context");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
    }

    @Test
    public void test1458() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1458");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        boolean boolean3 = python3Target1.templatesExist();
        java.lang.String str4 = python3Target1.getVersion();
        int int5 = python3Target1.getInlineTestSetWordSize();
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = python3Target1.getCodeGenerator();
        boolean boolean7 = python3Target1.wantsBaseVisitor();
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = null;
        java.lang.String str11 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator8, "", false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "4.5.2.1" + "'", str4, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 64 + "'", int5 == 64);
        org.junit.Assert.assertNull(codeGenerator6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
    }

    @Test
    public void test1459() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1459");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        java.lang.String str4 = python3Target1.getListLabel("");
        boolean boolean5 = python3Target1.supportsOverloadedMethods();
        java.lang.String str7 = python3Target1.encodeIntAsCharEscape((int) ' ');
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = null;
        java.lang.String str11 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator8, "\"\\\"\\\"Python3Contex\\\"\"", false);
        int int12 = python3Target1.getInlineTestSetWordSize();
        boolean boolean13 = python3Target1.templatesExist();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str15 = python3Target1.getImplicitTokenLabel("\"\\\"Python3Contex\\\"\"Context");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + " " + "'", str7, " ");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "\\\"\\\"Python3Contex\\\"" + "'", str11, "\\\"\\\"Python3Contex\\\"");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 64 + "'", int12 == 64);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
    }

    @Test
    public void test1460() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1460");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python3Target1.getBadWords();
        java.lang.String str4 = python3Target1.getTargetStringLiteralFromString("\"_Python3\"");
        java.lang.String str6 = python3Target1.getImplicitRuleLabel("_Python3ContextContext");
        java.lang.String str8 = python3Target1.encodeIntAsCharEscape((int) 'a');
        org.antlr.v4.codegen.model.RuleFunction ruleFunction9 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str10 = python3Target1.getRuleFunctionContextStructName(ruleFunction9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "\"\\\"_Python3\\\"\"" + "'", str4, "\"\\\"_Python3\\\"\"");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "__Python3ContextContext" + "'", str6, "__Python3ContextContext");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "a" + "'", str8, "a");
    }

    @Test
    public void test1461() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1461");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        java.lang.String str4 = python3Target1.getListLabel("");
        boolean boolean5 = python3Target1.supportsOverloadedMethods();
        java.lang.String str8 = python3Target1.getTargetStringLiteralFromString("_\"hi!\"", false);
        boolean boolean9 = python3Target1.supportsOverloadedMethods();
        boolean boolean10 = python3Target1.wantsBaseVisitor();
        int int11 = python3Target1.getSerializedATNSegmentLimit();
        org.stringtemplate.v4.STGroup sTGroup12 = python3Target1.getTemplates();
        java.lang.String str15 = python3Target1.getTargetStringLiteralFromString("_\"\\\"\\\"\"Context", true);
        boolean boolean16 = python3Target1.templatesExist();
        java.lang.String str18 = python3Target1.getListLabel("\"TsetPythonContexContext\"");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "_\\\"hi!\\\"" + "'", str8, "_\\\"hi!\\\"");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 29 + "'", int11 == 29);
        org.junit.Assert.assertNotNull(sTGroup12);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "\"_\\\"\\\\\\\"\\\\\\\"\\\"Context\"" + "'", str15, "\"_\\\"\\\\\\\"\\\\\\\"\\\"Context\"");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "\"TsetPythonContexContext\"" + "'", str18, "\"TsetPythonContexContext\"");
    }

    @Test
    public void test1462() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1462");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        java.lang.String str4 = python3Target1.getListLabel("");
        boolean boolean5 = python3Target1.supportsOverloadedMethods();
        java.lang.String str7 = python3Target1.encodeIntAsCharEscape((int) ' ');
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = null;
        java.lang.String str11 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator8, "\"\\\"\\\"Python3Contex\\\"\"", false);
        int int12 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str13 = python3Target1.getVersion();
        java.lang.String str15 = python3Target1.getImplicitRuleLabel("\"_tsethi!\"");
        boolean boolean16 = python3Target1.wantsBaseListener();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + " " + "'", str7, " ");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "\\\"\\\"Python3Contex\\\"" + "'", str11, "\\\"\\\"Python3Contex\\\"");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 64 + "'", int12 == 64);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "4.5.2.1" + "'", str13, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "_\"_tsethi!\"" + "'", str15, "_\"_tsethi!\"");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    }

    @Test
    public void test1463() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1463");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        boolean boolean3 = python3Target1.wantsBaseVisitor();
        java.lang.String str4 = python3Target1.getLanguage();
        java.lang.String str6 = python3Target1.getTargetStringLiteralFromString("\"Python3Contex\"");
        java.lang.String str8 = python3Target1.getImplicitRuleLabel("_\"___tsethi!\"");
        org.stringtemplate.v4.STGroup sTGroup9 = python3Target1.getTemplates();
        java.lang.String str11 = python3Target1.getAltLabelContextStructName("_\\\"_Python3\\\"ContextContext");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Python3" + "'", str4, "Python3");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\"\\\"Python3Contex\\\"\"" + "'", str6, "\"\\\"Python3Contex\\\"\"");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "__\"___tsethi!\"" + "'", str8, "__\"___tsethi!\"");
        org.junit.Assert.assertNotNull(sTGroup9);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "_\\\"_Python3\\\"ContextContextContext" + "'", str11, "_\\\"_Python3\\\"ContextContextContext");
    }

    @Test
    public void test1464() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1464");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        java.util.Set<java.lang.String> strSet3 = python3Target1.getBadWords();
        org.stringtemplate.v4.STGroup sTGroup4 = python3Target1.getTemplates();
        java.util.Set<java.lang.String> strSet5 = python3Target1.getBadWords();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str7 = python3Target1.getElementName("_tset_tset__\\\\\\\"\\\\\\\\\\\\\\\\1\\\\\\\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNotNull(sTGroup4);
        org.junit.Assert.assertNotNull(strSet5);
    }

    @Test
    public void test1465() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1465");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        java.lang.String str4 = python3Target1.getAltLabelContextStructName("_Python3");
        org.antlr.v4.codegen.CodeGenerator codeGenerator5 = null;
        java.lang.String str8 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator5, "__tsethi!", false);
        java.lang.String str10 = python3Target1.encodeIntAsCharEscape((int) (short) 100);
        boolean boolean11 = python3Target1.supportsOverloadedMethods();
        java.lang.String str12 = python3Target1.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator13 = python3Target1.getCodeGenerator();
        org.antlr.v4.tool.Rule rule14 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str15 = python3Target1.getRuleFunctionContextStructName(rule14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "_Python3Context" + "'", str4, "_Python3Context");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "_tsethi" + "'", str8, "_tsethi");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "d" + "'", str10, "d");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Python3" + "'", str12, "Python3");
        org.junit.Assert.assertNull(codeGenerator13);
    }

    @Test
    public void test1466() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1466");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.lang.String str3 = python3Target1.encodeIntAsCharEscape(1);
        java.lang.String str4 = python3Target1.getVersion();
        java.lang.String str6 = python3Target1.getImplicitRuleLabel("_tsethi!");
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = null;
        java.lang.String str10 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator7, "_Python3", false);
        org.antlr.v4.codegen.CodeGenerator codeGenerator11 = python3Target1.getCodeGenerator();
        boolean boolean12 = python3Target1.supportsOverloadedMethods();
        org.antlr.v4.codegen.CodeGenerator codeGenerator13 = null;
        java.lang.String str16 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator13, "", false);
        java.lang.String str18 = python3Target1.getImplicitRuleLabel("\"_\\\"\\\\\\\"Python3Contex\\\\\\\"\\\"\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator19 = null;
        java.lang.String str22 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator19, "\"\\\"hi!\\\"Context\"", true);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "\\1" + "'", str3, "\\1");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "4.5.2.1" + "'", str4, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "__tsethi!" + "'", str6, "__tsethi!");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Python" + "'", str10, "Python");
        org.junit.Assert.assertNull(codeGenerator11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "_\"_\\\"\\\\\\\"Python3Contex\\\\\\\"\\\"\"" + "'", str18, "_\"_\\\"\\\\\\\"Python3Contex\\\\\\\"\\\"\"");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "\"\\\"hi!\\\"Context\"" + "'", str22, "\"\\\"hi!\\\"Context\"");
    }

    @Test
    public void test1467() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1467");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        boolean boolean3 = python3Target1.wantsBaseVisitor();
        java.lang.String str4 = python3Target1.getLanguage();
        java.lang.String str7 = python3Target1.getTargetStringLiteralFromString("Python3", false);
        java.lang.String str9 = python3Target1.getImplicitRuleLabel("Python3");
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = null;
        java.lang.String str13 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator10, "\\35", false);
        boolean boolean14 = python3Target1.templatesExist();
        org.antlr.v4.codegen.model.RuleFunction ruleFunction15 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str16 = python3Target1.getRuleFunctionContextStructName(ruleFunction15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Python3" + "'", str4, "Python3");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Python3" + "'", str7, "Python3");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "_Python3" + "'", str9, "_Python3");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "3" + "'", str13, "3");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
    }

    @Test
    public void test1468() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1468");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.lang.String str3 = python3Target1.encodeIntAsCharEscape(1);
        org.antlr.v4.codegen.CodeGenerator codeGenerator4 = null;
        java.lang.String str7 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator4, "_Python3Context", true);
        java.lang.String str9 = python3Target1.getListLabel("hi!");
        org.antlr.v4.tool.Rule rule10 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str11 = python3Target1.getRuleFunctionContextStructName(rule10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "\\1" + "'", str3, "\\1");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "\"Python3Contex\"" + "'", str7, "\"Python3Contex\"");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
    }

    @Test
    public void test1469() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1469");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        java.util.Set<java.lang.String> strSet3 = python3Target1.getBadWords();
        java.util.Set<java.lang.String> strSet4 = python3Target1.getBadWords();
        java.lang.String str6 = python3Target1.getImplicitRuleLabel("\\\"\\\"Python3Contex\\\"");
        java.lang.String str7 = python3Target1.getVersion();
        boolean boolean8 = python3Target1.wantsBaseListener();
        int int9 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str10 = python3Target1.getLanguage();
        java.lang.String str13 = python3Target1.getTargetStringLiteralFromString("\"\\\"\\\\\\\"\\\\\\\\\\\\\\\"_Python3\\\\\\\\\\\\\\\"\\\\\\\"\\\"\"", true);
        org.antlr.v4.tool.ast.GrammarAST grammarAST14 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str15 = python3Target1.getLoopCounter(grammarAST14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "_\\\"\\\"Python3Contex\\\"" + "'", str6, "_\\\"\\\"Python3Contex\\\"");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "4.5.2.1" + "'", str7, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 64 + "'", int9 == 64);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Python3" + "'", str10, "Python3");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "\"\\\"\\\\\\\"\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"_Python3\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"\\\\\\\"\\\"\"" + "'", str13, "\"\\\"\\\\\\\"\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"_Python3\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"\\\\\\\"\\\"\"");
    }

    @Test
    public void test1470() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1470");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.lang.String str3 = python3Target1.encodeIntAsCharEscape(1);
        org.stringtemplate.v4.STGroup sTGroup4 = python3Target1.getTemplates();
        boolean boolean5 = python3Target1.supportsOverloadedMethods();
        boolean boolean6 = python3Target1.supportsOverloadedMethods();
        java.lang.String str8 = python3Target1.getImplicitRuleLabel("");
        org.antlr.v4.codegen.CodeGenerator codeGenerator9 = python3Target1.getCodeGenerator();
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = python3Target1.getCodeGenerator();
        org.antlr.v4.tool.Rule rule11 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str12 = python3Target1.getRuleFunctionContextStructName(rule11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "\\1" + "'", str3, "\\1");
        org.junit.Assert.assertNotNull(sTGroup4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "_" + "'", str8, "_");
        org.junit.Assert.assertNull(codeGenerator9);
        org.junit.Assert.assertNull(codeGenerator10);
    }

    @Test
    public void test1471() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1471");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        boolean boolean3 = python3Target1.wantsBaseVisitor();
        java.lang.String str4 = python3Target1.getLanguage();
        java.lang.String str7 = python3Target1.getTargetStringLiteralFromString("Python3", false);
        java.lang.String str10 = python3Target1.getTargetStringLiteralFromString("Python3", true);
        java.lang.String str12 = python3Target1.getImplicitSetLabel("hi!");
        java.lang.String str14 = python3Target1.getTargetStringLiteralFromString("\"Python3Contex\"");
        java.lang.String str15 = python3Target1.getLanguage();
        boolean boolean16 = python3Target1.templatesExist();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Python3" + "'", str4, "Python3");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Python3" + "'", str7, "Python3");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\"Python3\"" + "'", str10, "\"Python3\"");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "_tsethi!" + "'", str12, "_tsethi!");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "\"\\\"Python3Contex\\\"\"" + "'", str14, "\"\\\"Python3Contex\\\"\"");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Python3" + "'", str15, "Python3");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
    }

    @Test
    public void test1472() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1472");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python3Target1.getBadWords();
        boolean boolean3 = python3Target1.templatesExist();
        java.lang.String str5 = python3Target1.getImplicitSetLabel("_\"ython\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = null;
        java.lang.String str9 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator6, "\"_\\\"___tsethi!\\\"\"Context", false);
        org.antlr.v4.tool.Grammar grammar10 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str12 = python3Target1.getTokenTypeAsTargetLabel(grammar10, (int) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "_tset_\"ython\"" + "'", str5, "_tset_\"ython\"");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "_\\\"___tsethi!\\\"\\\"Contex" + "'", str9, "_\\\"___tsethi!\\\"\\\"Contex");
    }

    @Test
    public void test1473() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1473");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.lang.String str3 = python3Target1.encodeIntAsCharEscape(1);
        java.lang.String str4 = python3Target1.getVersion();
        java.lang.String str6 = python3Target1.getImplicitRuleLabel("_tsethi!");
        java.lang.String str8 = python3Target1.getImplicitRuleLabel("__tsethi!");
        java.lang.String str9 = python3Target1.getVersion();
        int int10 = python3Target1.getInlineTestSetWordSize();
        boolean boolean11 = python3Target1.templatesExist();
        org.stringtemplate.v4.STGroup sTGroup12 = python3Target1.getTemplates();
        java.lang.String str14 = python3Target1.getTargetStringLiteralFromString("__\\\"___tsethi!\\\"ContextContext");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "\\1" + "'", str3, "\\1");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "4.5.2.1" + "'", str4, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "__tsethi!" + "'", str6, "__tsethi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "___tsethi!" + "'", str8, "___tsethi!");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "4.5.2.1" + "'", str9, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 64 + "'", int10 == 64);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(sTGroup12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "\"__\\\\\\\"___tsethi!\\\\\\\"ContextContext\"" + "'", str14, "\"__\\\\\\\"___tsethi!\\\\\\\"ContextContext\"");
    }

    @Test
    public void test1474() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1474");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.lang.String str3 = python3Target1.encodeIntAsCharEscape(1);
        org.antlr.v4.codegen.CodeGenerator codeGenerator4 = null;
        java.lang.String str7 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator4, "_Python3Context", true);
        java.lang.String str9 = python3Target1.getListLabel("hi!");
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = python3Target1.getCodeGenerator();
        java.lang.String str12 = python3Target1.getAltLabelContextStructName("_tset_Python3");
        boolean boolean13 = python3Target1.templatesExist();
        boolean boolean14 = python3Target1.supportsOverloadedMethods();
        java.lang.String str16 = python3Target1.getListLabel("__\"___tsethi!\"");
        java.lang.String str18 = python3Target1.getAltLabelContextStructName("\"__\\\"___tsethi!\\\"Context\"");
        java.lang.String str20 = python3Target1.getImplicitRuleLabel("__\"_Python3\"");
        java.lang.String str22 = python3Target1.getAltLabelContextStructName("\"\\\"_\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"Python3Contex\\\\\\\\\\\\\\\"\\\"\"");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "\\1" + "'", str3, "\\1");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "\"Python3Contex\"" + "'", str7, "\"Python3Contex\"");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertNull(codeGenerator10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "_tset_Python3Context" + "'", str12, "_tset_Python3Context");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "__\"___tsethi!\"" + "'", str16, "__\"___tsethi!\"");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "\"__\\\"___tsethi!\\\"Context\"Context" + "'", str18, "\"__\\\"___tsethi!\\\"Context\"Context");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "___\"_Python3\"" + "'", str20, "___\"_Python3\"");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "\"\\\"_\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"Python3Contex\\\\\\\\\\\\\\\"\\\"\"Context" + "'", str22, "\"\\\"_\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"Python3Contex\\\\\\\\\\\\\\\"\\\"\"Context");
    }

    @Test
    public void test1475() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1475");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        org.antlr.v4.codegen.CodeGenerator codeGenerator2 = null;
        java.lang.String str5 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator2, "_Python3Context", true);
        boolean boolean6 = python3Target1.wantsBaseVisitor();
        int int7 = python3Target1.getSerializedATNSegmentLimit();
        java.util.Set<java.lang.String> strSet8 = python3Target1.getBadWords();
        java.lang.String str10 = python3Target1.getTargetStringLiteralFromString("_hi");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "\"Python3Contex\"" + "'", str5, "\"Python3Contex\"");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 29 + "'", int7 == 29);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\"_hi\"" + "'", str10, "\"_hi\"");
    }

    @Test
    public void test1476() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1476");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        boolean boolean3 = python3Target1.wantsBaseVisitor();
        java.lang.String str4 = python3Target1.getLanguage();
        java.lang.String str7 = python3Target1.getTargetStringLiteralFromString("Python3", false);
        boolean boolean8 = python3Target1.templatesExist();
        org.stringtemplate.v4.STGroup sTGroup9 = python3Target1.getTemplates();
        boolean boolean10 = python3Target1.supportsOverloadedMethods();
        java.lang.String str11 = python3Target1.getVersion();
        java.lang.String str12 = python3Target1.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator13 = python3Target1.getCodeGenerator();
        org.antlr.v4.codegen.CodeGenerator codeGenerator14 = python3Target1.getCodeGenerator();
        org.antlr.v4.tool.ast.GrammarAST grammarAST15 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str16 = python3Target1.getLoopCounter(grammarAST15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Python3" + "'", str4, "Python3");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Python3" + "'", str7, "Python3");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(sTGroup9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "4.5.2.1" + "'", str11, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Python3" + "'", str12, "Python3");
        org.junit.Assert.assertNull(codeGenerator13);
        org.junit.Assert.assertNull(codeGenerator14);
    }

    @Test
    public void test1477() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1477");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        boolean boolean3 = python3Target1.wantsBaseVisitor();
        java.lang.String str4 = python3Target1.getLanguage();
        java.lang.String str7 = python3Target1.getTargetStringLiteralFromString("Python3", false);
        java.lang.String str10 = python3Target1.getTargetStringLiteralFromString("Python3", true);
        java.lang.String str12 = python3Target1.getImplicitSetLabel("hi!");
        java.lang.String str14 = python3Target1.getTargetStringLiteralFromString("\"Python3Contex\"");
        java.lang.String str15 = python3Target1.getLanguage();
        boolean boolean16 = python3Target1.wantsBaseListener();
        org.antlr.v4.tool.Rule rule17 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str18 = python3Target1.getRuleFunctionContextStructName(rule17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Python3" + "'", str4, "Python3");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Python3" + "'", str7, "Python3");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\"Python3\"" + "'", str10, "\"Python3\"");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "_tsethi!" + "'", str12, "_tsethi!");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "\"\\\"Python3Contex\\\"\"" + "'", str14, "\"\\\"Python3Contex\\\"\"");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Python3" + "'", str15, "Python3");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    }

    @Test
    public void test1478() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1478");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.lang.String str3 = python3Target1.encodeIntAsCharEscape(1);
        java.lang.String str4 = python3Target1.getVersion();
        java.lang.String str6 = python3Target1.getImplicitRuleLabel("_tsethi!");
        java.lang.String str8 = python3Target1.getImplicitRuleLabel("__tsethi!");
        org.antlr.v4.codegen.CodeGenerator codeGenerator9 = python3Target1.getCodeGenerator();
        java.lang.String str11 = python3Target1.getListLabel("Python3");
        java.lang.String str13 = python3Target1.encodeIntAsCharEscape(29);
        java.lang.String str16 = python3Target1.getTargetStringLiteralFromString("tset", false);
        org.antlr.v4.tool.Rule rule17 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str18 = python3Target1.getRuleFunctionContextStructName(rule17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "\\1" + "'", str3, "\\1");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "4.5.2.1" + "'", str4, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "__tsethi!" + "'", str6, "__tsethi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "___tsethi!" + "'", str8, "___tsethi!");
        org.junit.Assert.assertNull(codeGenerator9);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Python3" + "'", str11, "Python3");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "\\35" + "'", str13, "\\35");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "tset" + "'", str16, "tset");
    }

    @Test
    public void test1479() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1479");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        org.antlr.v4.codegen.CodeGenerator codeGenerator2 = null;
        java.lang.String str5 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator2, "_Python3Context", true);
        java.lang.String str7 = python3Target1.getListLabel("Python");
        boolean boolean8 = python3Target1.wantsBaseListener();
        java.lang.Class<?> wildcardClass9 = python3Target1.getClass();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "\"Python3Contex\"" + "'", str5, "\"Python3Contex\"");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Python" + "'", str7, "Python");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test1480() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1480");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python3Target1.getBadWords();
        java.lang.String str3 = python3Target1.getVersion();
        java.lang.String str4 = python3Target1.getLanguage();
        org.antlr.v4.tool.Grammar grammar5 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target7 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator6);
        boolean boolean8 = python3Target7.wantsBaseListener();
        java.lang.String str10 = python3Target7.getListLabel("");
        boolean boolean11 = python3Target7.supportsOverloadedMethods();
        java.lang.String str13 = python3Target7.encodeIntAsCharEscape((int) ' ');
        org.antlr.v4.codegen.CodeGenerator codeGenerator14 = null;
        java.lang.String str17 = python3Target7.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator14, "\"\\\"\\\"Python3Contex\\\"\"", false);
        int int18 = python3Target7.getInlineTestSetWordSize();
        org.antlr.v4.tool.Grammar grammar19 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator20 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target21 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator20);
        java.lang.String str23 = python3Target21.encodeIntAsCharEscape(1);
        java.lang.String str24 = python3Target21.getVersion();
        java.lang.String str26 = python3Target21.getImplicitRuleLabel("_tsethi!");
        org.antlr.v4.codegen.CodeGenerator codeGenerator27 = null;
        java.lang.String str30 = python3Target21.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator27, "_Python3", false);
        org.antlr.v4.codegen.CodeGenerator codeGenerator31 = python3Target21.getCodeGenerator();
        boolean boolean32 = python3Target21.supportsOverloadedMethods();
        java.lang.String str34 = python3Target21.encodeIntAsCharEscape(64);
        org.antlr.v4.tool.Grammar grammar35 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator36 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target37 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator36);
        java.lang.String str39 = python3Target37.encodeIntAsCharEscape(1);
        java.lang.String str40 = python3Target37.getVersion();
        java.lang.String str42 = python3Target37.getImplicitRuleLabel("_tsethi!");
        java.lang.String str44 = python3Target37.getImplicitRuleLabel("__tsethi!");
        org.antlr.v4.codegen.CodeGenerator codeGenerator45 = python3Target37.getCodeGenerator();
        boolean boolean46 = python3Target37.supportsOverloadedMethods();
        java.lang.String str49 = python3Target37.getTargetStringLiteralFromString("\"_Python3\"", true);
        java.util.Set<java.lang.String> strSet50 = python3Target37.getBadWords();
        org.antlr.v4.tool.Grammar grammar51 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator52 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target53 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator52);
        boolean boolean54 = python3Target53.wantsBaseListener();
        org.antlr.v4.codegen.CodeGenerator codeGenerator55 = python3Target53.getCodeGenerator();
        java.lang.String str58 = python3Target53.getTargetStringLiteralFromString("\\n", false);
        org.antlr.v4.tool.Grammar grammar59 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator60 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target61 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator60);
        boolean boolean62 = python3Target61.wantsBaseListener();
        java.util.Set<java.lang.String> strSet63 = python3Target61.getBadWords();
        org.stringtemplate.v4.STGroup sTGroup64 = python3Target61.getTemplates();
        java.lang.String str66 = python3Target61.getImplicitRuleLabel("\"\\\\1\"");
        org.antlr.v4.tool.Grammar grammar67 = null;
        int[] intArray68 = new int[] {};
        java.lang.String[] strArray69 = python3Target61.getTokenTypesAsTargetLabels(grammar67, intArray68);
        java.lang.String[] strArray70 = python3Target53.getTokenTypesAsTargetLabels(grammar59, intArray68);
        java.lang.String[] strArray71 = python3Target37.getTokenTypesAsTargetLabels(grammar51, intArray68);
        java.lang.String[] strArray72 = python3Target21.getTokenTypesAsTargetLabels(grammar35, intArray68);
        java.lang.String[] strArray73 = python3Target7.getTokenTypesAsTargetLabels(grammar19, intArray68);
        java.lang.String[] strArray74 = python3Target1.getTokenTypesAsTargetLabels(grammar5, intArray68);
        org.antlr.v4.tool.Rule rule75 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str76 = python3Target1.getRuleFunctionContextStructName(rule75);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "4.5.2.1" + "'", str3, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Python3" + "'", str4, "Python3");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + " " + "'", str13, " ");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "\\\"\\\"Python3Contex\\\"" + "'", str17, "\\\"\\\"Python3Contex\\\"");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 64 + "'", int18 == 64);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "\\1" + "'", str23, "\\1");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "4.5.2.1" + "'", str24, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "__tsethi!" + "'", str26, "__tsethi!");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "Python" + "'", str30, "Python");
        org.junit.Assert.assertNull(codeGenerator31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "@" + "'", str34, "@");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "\\1" + "'", str39, "\\1");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "4.5.2.1" + "'", str40, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "__tsethi!" + "'", str42, "__tsethi!");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "___tsethi!" + "'", str44, "___tsethi!");
        org.junit.Assert.assertNull(codeGenerator45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "\"\\\"_Python3\\\"\"" + "'", str49, "\"\\\"_Python3\\\"\"");
        org.junit.Assert.assertNotNull(strSet50);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNull(codeGenerator55);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "\\\\n" + "'", str58, "\\\\n");
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(strSet63);
        org.junit.Assert.assertNotNull(sTGroup64);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "_\"\\\\1\"" + "'", str66, "_\"\\\\1\"");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[]");
        org.junit.Assert.assertNotNull(strArray69);
        org.junit.Assert.assertNotNull(strArray70);
        org.junit.Assert.assertNotNull(strArray71);
        org.junit.Assert.assertNotNull(strArray72);
        org.junit.Assert.assertNotNull(strArray73);
        org.junit.Assert.assertNotNull(strArray74);
    }

    @Test
    public void test1481() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1481");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        boolean boolean3 = python3Target1.wantsBaseVisitor();
        java.lang.String str4 = python3Target1.getLanguage();
        java.lang.String str7 = python3Target1.getTargetStringLiteralFromString("Python3", false);
        boolean boolean8 = python3Target1.templatesExist();
        org.stringtemplate.v4.STGroup sTGroup9 = python3Target1.getTemplates();
        boolean boolean10 = python3Target1.wantsBaseVisitor();
        org.antlr.v4.tool.Grammar grammar11 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator12 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target13 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator12);
        boolean boolean14 = python3Target13.wantsBaseListener();
        boolean boolean15 = python3Target13.wantsBaseVisitor();
        java.lang.String str16 = python3Target13.getLanguage();
        java.lang.String str19 = python3Target13.getTargetStringLiteralFromString("Python3", false);
        java.lang.String str22 = python3Target13.getTargetStringLiteralFromString("Python3", true);
        java.lang.String str24 = python3Target13.getImplicitSetLabel("hi!");
        java.lang.String str26 = python3Target13.getTargetStringLiteralFromString("\"Python3Contex\"");
        java.lang.String str29 = python3Target13.getTargetStringLiteralFromString("4.5.2.1", true);
        int int30 = python3Target13.getInlineTestSetWordSize();
        org.antlr.v4.tool.Grammar grammar31 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator32 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target33 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator32);
        boolean boolean34 = python3Target33.wantsBaseListener();
        java.lang.String str36 = python3Target33.getListLabel("");
        java.lang.String str37 = python3Target33.getLanguage();
        java.lang.String str39 = python3Target33.encodeIntAsCharEscape((int) '#');
        org.antlr.v4.tool.Grammar grammar40 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator41 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target42 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator41);
        boolean boolean43 = python3Target42.wantsBaseListener();
        java.util.Set<java.lang.String> strSet44 = python3Target42.getBadWords();
        org.stringtemplate.v4.STGroup sTGroup45 = python3Target42.getTemplates();
        java.lang.String str47 = python3Target42.getImplicitRuleLabel("\"\\\\1\"");
        org.antlr.v4.tool.Grammar grammar48 = null;
        int[] intArray49 = new int[] {};
        java.lang.String[] strArray50 = python3Target42.getTokenTypesAsTargetLabels(grammar48, intArray49);
        java.lang.String[] strArray51 = python3Target33.getTokenTypesAsTargetLabels(grammar40, intArray49);
        java.lang.String[] strArray52 = python3Target13.getTokenTypesAsTargetLabels(grammar31, intArray49);
        java.lang.String[] strArray53 = python3Target1.getTokenTypesAsTargetLabels(grammar11, intArray49);
        java.lang.String str56 = python3Target1.getTargetStringLiteralFromString("\"Tset_tseContext\"", false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Python3" + "'", str4, "Python3");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Python3" + "'", str7, "Python3");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(sTGroup9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Python3" + "'", str16, "Python3");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Python3" + "'", str19, "Python3");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "\"Python3\"" + "'", str22, "\"Python3\"");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "_tsethi!" + "'", str24, "_tsethi!");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "\"\\\"Python3Contex\\\"\"" + "'", str26, "\"\\\"Python3Contex\\\"\"");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "\"4.5.2.1\"" + "'", str29, "\"4.5.2.1\"");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 64 + "'", int30 == 64);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "Python3" + "'", str37, "Python3");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "#" + "'", str39, "#");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(strSet44);
        org.junit.Assert.assertNotNull(sTGroup45);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "_\"\\\\1\"" + "'", str47, "_\"\\\\1\"");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[]");
        org.junit.Assert.assertNotNull(strArray50);
        org.junit.Assert.assertNotNull(strArray51);
        org.junit.Assert.assertNotNull(strArray52);
        org.junit.Assert.assertNotNull(strArray53);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "\\\"Tset_tseContext\\\"" + "'", str56, "\\\"Tset_tseContext\\\"");
    }

    @Test
    public void test1482() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1482");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        java.util.Set<java.lang.String> strSet3 = python3Target1.getBadWords();
        boolean boolean4 = python3Target1.supportsOverloadedMethods();
        org.antlr.v4.tool.Rule rule5 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str6 = python3Target1.getRuleFunctionContextStructName(rule5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    }

    @Test
    public void test1483() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1483");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.lang.String str3 = python3Target1.encodeIntAsCharEscape(1);
        org.antlr.v4.codegen.CodeGenerator codeGenerator4 = null;
        java.lang.String str7 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator4, "_Python3Context", true);
        java.lang.String str9 = python3Target1.getListLabel("hi!");
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = python3Target1.getCodeGenerator();
        java.lang.String str12 = python3Target1.getAltLabelContextStructName("_tset_Python3");
        boolean boolean13 = python3Target1.templatesExist();
        org.antlr.v4.codegen.CodeGenerator codeGenerator14 = null;
        java.lang.String str17 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator14, "\"_tset\\\"ython\\\"\"", false);
        java.lang.String str18 = python3Target1.getVersion();
        java.lang.String str20 = python3Target1.encodeIntAsCharEscape((int) (byte) 0);
        java.util.Set<java.lang.String> strSet21 = python3Target1.getBadWords();
        boolean boolean22 = python3Target1.templatesExist();
        java.lang.String str23 = python3Target1.getLanguage();
        org.antlr.v4.tool.ast.GrammarAST grammarAST24 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean25 = python3Target1.grammarSymbolCausesIssueInGeneratedCode(grammarAST24);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "\\1" + "'", str3, "\\1");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "\"Python3Contex\"" + "'", str7, "\"Python3Contex\"");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertNull(codeGenerator10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "_tset_Python3Context" + "'", str12, "_tset_Python3Context");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "_tset\\\"ython\\\"" + "'", str17, "_tset\\\"ython\\\"");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "4.5.2.1" + "'", str18, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "\\0" + "'", str20, "\\0");
        org.junit.Assert.assertNotNull(strSet21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "Python3" + "'", str23, "Python3");
    }

    @Test
    public void test1484() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1484");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        boolean boolean3 = python3Target1.templatesExist();
        org.stringtemplate.v4.STGroup sTGroup4 = python3Target1.getTemplates();
        org.stringtemplate.v4.STGroup sTGroup5 = python3Target1.getTemplates();
        java.lang.String str7 = python3Target1.getImplicitRuleLabel("\"_Python3\"");
        org.stringtemplate.v4.STGroup sTGroup8 = python3Target1.getTemplates();
        java.lang.Class<?> wildcardClass9 = sTGroup8.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(sTGroup4);
        org.junit.Assert.assertNotNull(sTGroup5);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "_\"_Python3\"" + "'", str7, "_\"_Python3\"");
        org.junit.Assert.assertNotNull(sTGroup8);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test1485() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1485");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        java.lang.String str4 = python3Target1.getListLabel("");
        boolean boolean5 = python3Target1.wantsBaseListener();
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = python3Target1.getCodeGenerator();
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = null;
        java.lang.String str10 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator7, "_tset_\"_\\\"_Python3\\\"\"", true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(codeGenerator6);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\"tset_\\\"_\\\"_Python3\\\"\"" + "'", str10, "\"tset_\\\"_\\\"_Python3\\\"\"");
    }

    @Test
    public void test1486() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1486");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        java.lang.String str4 = python3Target1.getListLabel("");
        java.lang.String str5 = python3Target1.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = python3Target1.getCodeGenerator();
        java.lang.String str7 = python3Target1.getLanguage();
        boolean boolean8 = python3Target1.wantsBaseVisitor();
        java.lang.String str10 = python3Target1.getAltLabelContextStructName("\\\\\\\"\\\\\\\"Python3Contex\\\\\\\"");
        org.antlr.v4.tool.ast.GrammarAST grammarAST11 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str12 = python3Target1.getLoopCounter(grammarAST11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Python3" + "'", str5, "Python3");
        org.junit.Assert.assertNull(codeGenerator6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Python3" + "'", str7, "Python3");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\\\\\\\"\\\\\\\"Python3Contex\\\\\\\"Context" + "'", str10, "\\\\\\\"\\\\\\\"Python3Contex\\\\\\\"Context");
    }

    @Test
    public void test1487() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1487");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        boolean boolean3 = python3Target1.templatesExist();
        org.stringtemplate.v4.STGroup sTGroup4 = python3Target1.getTemplates();
        java.lang.String str6 = python3Target1.encodeIntAsCharEscape(1);
        boolean boolean7 = python3Target1.wantsBaseListener();
        boolean boolean8 = python3Target1.supportsOverloadedMethods();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(sTGroup4);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\\1" + "'", str6, "\\1");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test1488() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1488");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = python3Target1.getCodeGenerator();
        java.lang.String str5 = python3Target1.encodeIntAsCharEscape((int) (short) 10);
        java.util.Set<java.lang.String> strSet6 = python3Target1.getBadWords();
        java.lang.String str7 = python3Target1.getLanguage();
        java.lang.String str9 = python3Target1.getListLabel("\\\\n");
        java.lang.String str11 = python3Target1.encodeIntAsCharEscape(100);
        boolean boolean12 = python3Target1.templatesExist();
        org.antlr.v4.codegen.CodeGenerator codeGenerator13 = python3Target1.getCodeGenerator();
        java.lang.String str16 = python3Target1.getTargetStringLiteralFromString("\"\"Context", false);
        org.antlr.v4.tool.ast.GrammarAST grammarAST17 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str18 = python3Target1.getLoopCounter(grammarAST17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(codeGenerator3);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "\\n" + "'", str5, "\\n");
        org.junit.Assert.assertNotNull(strSet6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Python3" + "'", str7, "Python3");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\\\\n" + "'", str9, "\\\\n");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "d" + "'", str11, "d");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNull(codeGenerator13);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "\\\"\\\"Context" + "'", str16, "\\\"\\\"Context");
    }

    @Test
    public void test1489() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1489");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        boolean boolean3 = python3Target1.wantsBaseVisitor();
        java.lang.String str4 = python3Target1.getLanguage();
        java.lang.String str7 = python3Target1.getTargetStringLiteralFromString("Python3", false);
        java.lang.String str10 = python3Target1.getTargetStringLiteralFromString("Python3", true);
        java.lang.String str12 = python3Target1.getImplicitSetLabel("hi!");
        java.lang.String str14 = python3Target1.getTargetStringLiteralFromString("\"Python3Contex\"");
        java.lang.String str17 = python3Target1.getTargetStringLiteralFromString("4.5.2.1", true);
        java.lang.String str18 = python3Target1.getLanguage();
        java.lang.String str20 = python3Target1.getImplicitRuleLabel("_Python3");
        java.lang.String str22 = python3Target1.getAltLabelContextStructName("PythonContext");
        org.antlr.v4.codegen.CodeGenerator codeGenerator23 = null;
        java.lang.String str26 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator23, "\"\\\"\\\\\\\"_Python3\\\\\\\"\\\"\"", false);
        java.lang.String str28 = python3Target1.getImplicitRuleLabel("___Python3ContextContext");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Python3" + "'", str4, "Python3");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Python3" + "'", str7, "Python3");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\"Python3\"" + "'", str10, "\"Python3\"");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "_tsethi!" + "'", str12, "_tsethi!");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "\"\\\"Python3Contex\\\"\"" + "'", str14, "\"\\\"Python3Contex\\\"\"");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "\"4.5.2.1\"" + "'", str17, "\"4.5.2.1\"");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Python3" + "'", str18, "Python3");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "__Python3" + "'", str20, "__Python3");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "PythonContextContext" + "'", str22, "PythonContextContext");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "\\\"\\\\\\\"_Python3\\\\\\\"\\\"" + "'", str26, "\\\"\\\\\\\"_Python3\\\\\\\"\\\"");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "____Python3ContextContext" + "'", str28, "____Python3ContextContext");
    }

    @Test
    public void test1490() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1490");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        boolean boolean3 = python3Target1.wantsBaseVisitor();
        java.lang.String str4 = python3Target1.getLanguage();
        java.lang.String str7 = python3Target1.getTargetStringLiteralFromString("Python3", false);
        boolean boolean8 = python3Target1.templatesExist();
        java.lang.String str9 = python3Target1.getLanguage();
        boolean boolean10 = python3Target1.wantsBaseVisitor();
        int int11 = python3Target1.getSerializedATNSegmentLimit();
        boolean boolean12 = python3Target1.wantsBaseVisitor();
        java.util.Set<java.lang.String> strSet13 = python3Target1.getBadWords();
        java.util.Set<java.lang.String> strSet14 = python3Target1.getBadWords();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Python3" + "'", str4, "Python3");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Python3" + "'", str7, "Python3");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Python3" + "'", str9, "Python3");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 29 + "'", int11 == 29);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(strSet13);
        org.junit.Assert.assertNotNull(strSet14);
    }

    @Test
    public void test1491() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1491");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        boolean boolean3 = python3Target1.wantsBaseVisitor();
        java.lang.String str4 = python3Target1.getLanguage();
        java.lang.String str7 = python3Target1.getTargetStringLiteralFromString("Python3", false);
        boolean boolean8 = python3Target1.templatesExist();
        org.stringtemplate.v4.STGroup sTGroup9 = python3Target1.getTemplates();
        boolean boolean10 = python3Target1.supportsOverloadedMethods();
        java.lang.String str11 = python3Target1.getVersion();
        java.lang.String str13 = python3Target1.getAltLabelContextStructName("_hi!");
        boolean boolean14 = python3Target1.wantsBaseVisitor();
        org.antlr.v4.tool.ast.GrammarAST grammarAST15 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str16 = python3Target1.getLoopLabel(grammarAST15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Python3" + "'", str4, "Python3");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Python3" + "'", str7, "Python3");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(sTGroup9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "4.5.2.1" + "'", str11, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "_hi!Context" + "'", str13, "_hi!Context");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test1492() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1492");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.lang.String str3 = python3Target1.encodeIntAsCharEscape(1);
        java.lang.String str4 = python3Target1.getVersion();
        java.lang.String str6 = python3Target1.getImplicitRuleLabel("_tsethi!");
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = null;
        java.lang.String str10 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator7, "_Python3", false);
        org.antlr.v4.codegen.CodeGenerator codeGenerator11 = python3Target1.getCodeGenerator();
        boolean boolean12 = python3Target1.supportsOverloadedMethods();
        boolean boolean13 = python3Target1.templatesExist();
        java.lang.String str14 = python3Target1.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup15 = python3Target1.getTemplates();
        java.lang.String str16 = python3Target1.getVersion();
        java.lang.String str17 = python3Target1.getVersion();
        boolean boolean18 = python3Target1.supportsOverloadedMethods();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "\\1" + "'", str3, "\\1");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "4.5.2.1" + "'", str4, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "__tsethi!" + "'", str6, "__tsethi!");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Python" + "'", str10, "Python");
        org.junit.Assert.assertNull(codeGenerator11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Python3" + "'", str14, "Python3");
        org.junit.Assert.assertNotNull(sTGroup15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "4.5.2.1" + "'", str16, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "4.5.2.1" + "'", str17, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    }

    @Test
    public void test1493() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1493");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.lang.String str3 = python3Target1.encodeIntAsCharEscape(1);
        org.stringtemplate.v4.STGroup sTGroup4 = python3Target1.getTemplates();
        boolean boolean5 = python3Target1.templatesExist();
        java.lang.String str7 = python3Target1.getImplicitSetLabel("__hi!");
        boolean boolean8 = python3Target1.templatesExist();
        boolean boolean9 = python3Target1.templatesExist();
        int int10 = python3Target1.getInlineTestSetWordSize();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "\\1" + "'", str3, "\\1");
        org.junit.Assert.assertNotNull(sTGroup4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "_tset__hi!" + "'", str7, "_tset__hi!");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 64 + "'", int10 == 64);
    }

    @Test
    public void test1494() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1494");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        org.antlr.v4.codegen.CodeGenerator codeGenerator2 = python3Target1.getCodeGenerator();
        java.lang.String str3 = python3Target1.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup4 = python3Target1.getTemplates();
        java.lang.String str6 = python3Target1.getImplicitRuleLabel("_\"hi!\"");
        java.util.Set<java.lang.String> strSet7 = python3Target1.getBadWords();
        java.lang.String str9 = python3Target1.getAltLabelContextStructName("\"_\\\\\\\"hi!\\\\\\\"\"");
        int int10 = python3Target1.getInlineTestSetWordSize();
        org.junit.Assert.assertNull(codeGenerator2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Python3" + "'", str3, "Python3");
        org.junit.Assert.assertNotNull(sTGroup4);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "__\"hi!\"" + "'", str6, "__\"hi!\"");
        org.junit.Assert.assertNotNull(strSet7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\"_\\\\\\\"hi!\\\\\\\"\"Context" + "'", str9, "\"_\\\\\\\"hi!\\\\\\\"\"Context");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 64 + "'", int10 == 64);
    }

    @Test
    public void test1495() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1495");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        java.lang.String str4 = python3Target1.getListLabel("");
        boolean boolean5 = python3Target1.supportsOverloadedMethods();
        java.util.Set<java.lang.String> strSet6 = python3Target1.getBadWords();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(strSet6);
    }

    @Test
    public void test1496() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1496");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        boolean boolean3 = python3Target1.wantsBaseVisitor();
        java.lang.String str4 = python3Target1.getLanguage();
        java.lang.String str7 = python3Target1.getTargetStringLiteralFromString("Python3", false);
        boolean boolean8 = python3Target1.templatesExist();
        java.lang.String str9 = python3Target1.getLanguage();
        java.lang.String str11 = python3Target1.getImplicitRuleLabel("_\"_Python3\"");
        boolean boolean12 = python3Target1.wantsBaseListener();
        boolean boolean13 = python3Target1.wantsBaseVisitor();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Python3" + "'", str4, "Python3");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Python3" + "'", str7, "Python3");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Python3" + "'", str9, "Python3");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "__\"_Python3\"" + "'", str11, "__\"_Python3\"");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test1497() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1497");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        boolean boolean3 = python3Target1.wantsBaseVisitor();
        java.lang.String str4 = python3Target1.getLanguage();
        java.lang.String str7 = python3Target1.getTargetStringLiteralFromString("Python3", false);
        java.lang.String str10 = python3Target1.getTargetStringLiteralFromString("Python3", true);
        java.lang.String str12 = python3Target1.getImplicitSetLabel("hi!");
        java.lang.String str14 = python3Target1.getTargetStringLiteralFromString("\"Python3Contex\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator15 = python3Target1.getCodeGenerator();
        org.antlr.v4.codegen.CodeGenerator codeGenerator16 = null;
        java.lang.String str19 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator16, "", true);
        java.lang.String str21 = python3Target1.getAltLabelContextStructName("_\"Python\"");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Python3" + "'", str4, "Python3");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Python3" + "'", str7, "Python3");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\"Python3\"" + "'", str10, "\"Python3\"");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "_tsethi!" + "'", str12, "_tsethi!");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "\"\\\"Python3Contex\\\"\"" + "'", str14, "\"\\\"Python3Contex\\\"\"");
        org.junit.Assert.assertNull(codeGenerator15);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "\"\"" + "'", str19, "\"\"");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "_\"Python\"Context" + "'", str21, "_\"Python\"Context");
    }

    @Test
    public void test1498() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1498");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        boolean boolean3 = python3Target1.wantsBaseVisitor();
        java.lang.String str4 = python3Target1.getLanguage();
        java.lang.String str7 = python3Target1.getTargetStringLiteralFromString("Python3", false);
        boolean boolean8 = python3Target1.templatesExist();
        java.lang.String str10 = python3Target1.getTargetStringLiteralFromString("hi!");
        org.stringtemplate.v4.STGroup sTGroup11 = python3Target1.getTemplates();
        org.stringtemplate.v4.STGroup sTGroup12 = python3Target1.getTemplates();
        java.lang.String str13 = python3Target1.getLanguage();
        org.antlr.v4.tool.Grammar grammar14 = null;
        int[] intArray15 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String[] strArray16 = python3Target1.getTokenTypesAsTargetLabels(grammar14, intArray15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Python3" + "'", str4, "Python3");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Python3" + "'", str7, "Python3");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\"hi!\"" + "'", str10, "\"hi!\"");
        org.junit.Assert.assertNotNull(sTGroup11);
        org.junit.Assert.assertNotNull(sTGroup12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Python3" + "'", str13, "Python3");
    }

    @Test
    public void test1499() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1499");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseListener();
        java.lang.String str4 = python3Target1.getListLabel("");
        java.lang.String str5 = python3Target1.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = python3Target1.getCodeGenerator();
        int int7 = python3Target1.getInlineTestSetWordSize();
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = python3Target1.getCodeGenerator();
        boolean boolean9 = python3Target1.wantsBaseVisitor();
        java.lang.String str10 = python3Target1.getVersion();
        int int11 = python3Target1.getInlineTestSetWordSize();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Python3" + "'", str5, "Python3");
        org.junit.Assert.assertNull(codeGenerator6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 64 + "'", int7 == 64);
        org.junit.Assert.assertNull(codeGenerator8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "4.5.2.1" + "'", str10, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 64 + "'", int11 == 64);
    }

    @Test
    public void test1500() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1500");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        org.antlr.v4.codegen.CodeGenerator codeGenerator2 = null;
        java.lang.String str5 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator2, "_Python3Context", true);
        java.lang.String str7 = python3Target1.getListLabel("Python");
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = null;
        java.lang.String str11 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator8, "___tsethi!", true);
        int int12 = python3Target1.getSerializedATNSegmentLimit();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "\"Python3Contex\"" + "'", str5, "\"Python3Contex\"");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Python" + "'", str7, "Python");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "\"__tsethi\"" + "'", str11, "\"__tsethi\"");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 29 + "'", int12 == 29);
    }
}

