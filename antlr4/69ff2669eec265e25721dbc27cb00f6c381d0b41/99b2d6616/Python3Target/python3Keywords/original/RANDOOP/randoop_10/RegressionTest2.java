import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest2 {

    public static boolean debug = false;

    @Test
    public void test1001() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1001");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet3 = python3Target1.getBadWords();
        int int4 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str7 = python3Target1.getTargetStringLiteralFromString("_tset\"hi!\"", false);
        boolean boolean8 = python3Target1.supportsOverloadedMethods();
        java.lang.String str11 = python3Target1.getTargetStringLiteralFromString("\"\\\"hi!\\\"\"Context", false);
        java.lang.String str13 = python3Target1.encodeIntAsCharEscape((int) ' ');
        int int14 = python3Target1.getInlineTestSetWordSize();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 64 + "'", int4 == 64);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "_tset\\\"hi!\\\"" + "'", str7, "_tset\\\"hi!\\\"");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "\\\"\\\\\\\"hi!\\\\\\\"\\\"Context" + "'", str11, "\\\"\\\\\\\"hi!\\\\\\\"\\\"Context");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + " " + "'", str13, " ");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 64 + "'", int14 == 64);
    }

    @Test
    public void test1002() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1002");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str4 = python3Target1.getImplicitSetLabel("\"hi!\"");
        java.lang.String str6 = python3Target1.encodeIntAsCharEscape(0);
        java.lang.String str7 = python3Target1.getVersion();
        java.lang.String str9 = python3Target1.getImplicitRuleLabel("\"hi!\"Context");
        java.lang.String str11 = python3Target1.getTargetStringLiteralFromString("_Python3");
        boolean boolean12 = python3Target1.wantsBaseListener();
        org.antlr.v4.codegen.CodeGenerator codeGenerator13 = python3Target1.getCodeGenerator();
        int int14 = python3Target1.getSerializedATNSegmentLimit();
        java.lang.String str15 = python3Target1.getLanguage();
        int int16 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str18 = python3Target1.getImplicitSetLabel("\"_tset_\\\\\\\"hi!\\\\\\\"Contex\"");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "_tset\"hi!\"" + "'", str4, "_tset\"hi!\"");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\\0" + "'", str6, "\\0");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "4.5.2.1" + "'", str7, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "_\"hi!\"Context" + "'", str9, "_\"hi!\"Context");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "\"_Python3\"" + "'", str11, "\"_Python3\"");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(codeGenerator13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 29 + "'", int14 == 29);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Python3" + "'", str15, "Python3");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 64 + "'", int16 == 64);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "_tset\"_tset_\\\\\\\"hi!\\\\\\\"Contex\"" + "'", str18, "_tset\"_tset_\\\\\\\"hi!\\\\\\\"Contex\"");
    }

    @Test
    public void test1003() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1003");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet3 = python3Target1.getBadWords();
        int int4 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str6 = python3Target1.getAltLabelContextStructName("\"hi!\"");
        boolean boolean7 = python3Target1.templatesExist();
        int int8 = python3Target1.getSerializedATNSegmentLimit();
        boolean boolean9 = python3Target1.wantsBaseVisitor();
        org.stringtemplate.v4.STGroup sTGroup10 = python3Target1.getTemplates();
        org.antlr.v4.tool.Grammar grammar11 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str13 = python3Target1.getTokenTypeAsTargetLabel(grammar11, (int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 64 + "'", int4 == 64);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\"hi!\"Context" + "'", str6, "\"hi!\"Context");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 29 + "'", int8 == 29);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(sTGroup10);
    }

    @Test
    public void test1004() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1004");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet3 = python3Target1.getBadWords();
        boolean boolean4 = python3Target1.supportsOverloadedMethods();
        boolean boolean5 = python3Target1.wantsBaseVisitor();
        boolean boolean6 = python3Target1.templatesExist();
        int int7 = python3Target1.getInlineTestSetWordSize();
        boolean boolean8 = python3Target1.supportsOverloadedMethods();
        org.antlr.v4.tool.ast.GrammarAST grammarAST9 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean10 = python3Target1.grammarSymbolCausesIssueInGeneratedCode(grammarAST9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 64 + "'", int7 == 64);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test1005() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1005");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet3 = python3Target1.getBadWords();
        int int4 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str7 = python3Target1.getTargetStringLiteralFromString("_tset\"hi!\"", false);
        boolean boolean8 = python3Target1.supportsOverloadedMethods();
        org.antlr.v4.codegen.CodeGenerator codeGenerator9 = null;
        java.lang.String str12 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator9, "\".5.2.\"", false);
        boolean boolean13 = python3Target1.templatesExist();
        org.antlr.v4.tool.ast.GrammarAST grammarAST14 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str15 = python3Target1.getLoopLabel(grammarAST14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 64 + "'", int4 == 64);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "_tset\\\"hi!\\\"" + "'", str7, "_tset\\\"hi!\\\"");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + ".5.2." + "'", str12, ".5.2.");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
    }

    @Test
    public void test1006() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1006");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getSerializedATNSegmentLimit();
        int int3 = python3Target1.getInlineTestSetWordSize();
        int int4 = python3Target1.getSerializedATNSegmentLimit();
        org.antlr.v4.codegen.CodeGenerator codeGenerator5 = python3Target1.getCodeGenerator();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str7 = python3Target1.getElementListName("Tset_\\\\\\\"hi!\\\\\\\"ConteContext");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 29 + "'", int2 == 29);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 64 + "'", int3 == 64);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 29 + "'", int4 == 29);
        org.junit.Assert.assertNull(codeGenerator5);
    }

    @Test
    public void test1007() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1007");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str4 = python3Target1.getImplicitSetLabel("\"hi!\"");
        java.lang.String str6 = python3Target1.encodeIntAsCharEscape(0);
        java.lang.String str7 = python3Target1.getVersion();
        java.lang.String str9 = python3Target1.getTargetStringLiteralFromString("hi!");
        java.lang.String str11 = python3Target1.getListLabel("");
        int int12 = python3Target1.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet13 = python3Target1.getBadWords();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "_tset\"hi!\"" + "'", str4, "_tset\"hi!\"");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\\0" + "'", str6, "\\0");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "4.5.2.1" + "'", str7, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\"hi!\"" + "'", str9, "\"hi!\"");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 64 + "'", int12 == 64);
        org.junit.Assert.assertNotNull(strSet13);
    }

    @Test
    public void test1008() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1008");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet3 = python3Target1.getBadWords();
        java.lang.String str4 = python3Target1.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator5 = python3Target1.getCodeGenerator();
        org.stringtemplate.v4.STGroup sTGroup6 = python3Target1.getTemplates();
        boolean boolean7 = python3Target1.supportsOverloadedMethods();
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = null;
        java.lang.String str11 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator8, "tset\\\"hi!", false);
        boolean boolean12 = python3Target1.wantsBaseListener();
        java.lang.String str13 = python3Target1.getLanguage();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Python3" + "'", str4, "Python3");
        org.junit.Assert.assertNull(codeGenerator5);
        org.junit.Assert.assertNotNull(sTGroup6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "set\\\"hi" + "'", str11, "set\\\"hi");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Python3" + "'", str13, "Python3");
    }

    @Test
    public void test1009() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1009");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet3 = python3Target1.getBadWords();
        int int4 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str7 = python3Target1.getTargetStringLiteralFromString("_tset\"hi!\"", false);
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = python3Target1.getCodeGenerator();
        boolean boolean9 = python3Target1.templatesExist();
        java.lang.String str11 = python3Target1.getListLabel("\"hi!\"Context");
        java.lang.String str13 = python3Target1.getListLabel("Python3");
        java.lang.String str15 = python3Target1.getImplicitRuleLabel("\"\\\"hi!\\\"\"Context");
        boolean boolean16 = python3Target1.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup17 = python3Target1.getTemplates();
        boolean boolean18 = python3Target1.wantsBaseVisitor();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 64 + "'", int4 == 64);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "_tset\\\"hi!\\\"" + "'", str7, "_tset\\\"hi!\\\"");
        org.junit.Assert.assertNull(codeGenerator8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "\"hi!\"Context" + "'", str11, "\"hi!\"Context");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Python3" + "'", str13, "Python3");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "_\"\\\"hi!\\\"\"Context" + "'", str15, "_\"\\\"hi!\\\"\"Context");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(sTGroup17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    }

    @Test
    public void test1010() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1010");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.supportsOverloadedMethods();
        java.lang.String str4 = python3Target1.getListLabel("\"_Python3\"");
        java.lang.String str6 = python3Target1.getAltLabelContextStructName("\\0");
        java.lang.String str7 = python3Target1.getLanguage();
        java.lang.String str10 = python3Target1.getTargetStringLiteralFromString("__tset_tset_\"Python3\"", false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "\"_Python3\"" + "'", str4, "\"_Python3\"");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\\0Context" + "'", str6, "\\0Context");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Python3" + "'", str7, "Python3");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "__tset_tset_\\\"Python3\\\"" + "'", str10, "__tset_tset_\\\"Python3\\\"");
    }

    @Test
    public void test1011() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1011");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet3 = python3Target1.getBadWords();
        boolean boolean4 = python3Target1.supportsOverloadedMethods();
        boolean boolean5 = python3Target1.wantsBaseVisitor();
        boolean boolean6 = python3Target1.templatesExist();
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = python3Target1.getCodeGenerator();
        int int8 = python3Target1.getSerializedATNSegmentLimit();
        boolean boolean9 = python3Target1.wantsBaseVisitor();
        java.lang.String str11 = python3Target1.getListLabel("\"0Contex\"");
        boolean boolean12 = python3Target1.templatesExist();
        boolean boolean13 = python3Target1.wantsBaseVisitor();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(codeGenerator7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 29 + "'", int8 == 29);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "\"0Contex\"" + "'", str11, "\"0Contex\"");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test1012() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1012");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet3 = python3Target1.getBadWords();
        int int4 = python3Target1.getInlineTestSetWordSize();
        org.antlr.v4.codegen.CodeGenerator codeGenerator5 = python3Target1.getCodeGenerator();
        java.lang.String str6 = python3Target1.getLanguage();
        java.lang.String str8 = python3Target1.getListLabel("tset\\\"hi!");
        boolean boolean9 = python3Target1.wantsBaseVisitor();
        java.lang.String str12 = python3Target1.getTargetStringLiteralFromString("_tset_tset_\"hi!\"Context", true);
        org.antlr.v4.tool.ast.GrammarAST grammarAST13 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str14 = python3Target1.getLoopCounter(grammarAST13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 64 + "'", int4 == 64);
        org.junit.Assert.assertNull(codeGenerator5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Python3" + "'", str6, "Python3");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "tset\\\"hi!" + "'", str8, "tset\\\"hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "\"_tset_tset_\\\"hi!\\\"Context\"" + "'", str12, "\"_tset_tset_\\\"hi!\\\"Context\"");
    }

    @Test
    public void test1013() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1013");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.supportsOverloadedMethods();
        java.util.Set<java.lang.String> strSet3 = python3Target1.getBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator4 = python3Target1.getCodeGenerator();
        java.lang.String str6 = python3Target1.getListLabel("_tset\"hi!\"");
        boolean boolean7 = python3Target1.wantsBaseVisitor();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNull(codeGenerator4);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "_tset\"hi!\"" + "'", str6, "_tset\"hi!\"");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    public void test1014() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1014");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet3 = python3Target1.getBadWords();
        java.lang.String str4 = python3Target1.getLanguage();
        java.lang.String str6 = python3Target1.getImplicitSetLabel("_tset_\"hi!\"Context");
        java.lang.String str8 = python3Target1.encodeIntAsCharEscape((int) (short) 10);
        org.stringtemplate.v4.STGroup sTGroup9 = python3Target1.getTemplates();
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = python3Target1.getCodeGenerator();
        boolean boolean11 = python3Target1.wantsBaseVisitor();
        org.antlr.v4.tool.ast.GrammarAST grammarAST12 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str13 = python3Target1.getLoopLabel(grammarAST12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Python3" + "'", str4, "Python3");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "_tset_tset_\"hi!\"Context" + "'", str6, "_tset_tset_\"hi!\"Context");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\\n" + "'", str8, "\\n");
        org.junit.Assert.assertNotNull(sTGroup9);
        org.junit.Assert.assertNull(codeGenerator10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test1015() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1015");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.lang.String str3 = python3Target1.getTargetStringLiteralFromString("\"\\\"Python3\\\"Context\"");
        boolean boolean4 = python3Target1.templatesExist();
        java.lang.String str6 = python3Target1.getImplicitSetLabel("set_\\\\\\\"hi!\\\\\\\"Conte");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "\"\\\"\\\\\\\"Python3\\\\\\\"Context\\\"\"" + "'", str3, "\"\\\"\\\\\\\"Python3\\\\\\\"Context\\\"\"");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "_tsetset_\\\\\\\"hi!\\\\\\\"Conte" + "'", str6, "_tsetset_\\\\\\\"hi!\\\\\\\"Conte");
    }

    @Test
    public void test1016() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1016");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str4 = python3Target1.getImplicitSetLabel("\"hi!\"");
        java.lang.String str6 = python3Target1.encodeIntAsCharEscape(0);
        java.lang.String str7 = python3Target1.getVersion();
        java.lang.String str9 = python3Target1.getImplicitRuleLabel("\"hi!\"Context");
        java.lang.String str11 = python3Target1.getTargetStringLiteralFromString("_Python3");
        int int12 = python3Target1.getInlineTestSetWordSize();
        boolean boolean13 = python3Target1.wantsBaseListener();
        org.stringtemplate.v4.STGroup sTGroup14 = python3Target1.getTemplates();
        int int15 = python3Target1.getSerializedATNSegmentLimit();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str17 = python3Target1.getImplicitTokenLabel("\\64");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "_tset\"hi!\"" + "'", str4, "_tset\"hi!\"");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\\0" + "'", str6, "\\0");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "4.5.2.1" + "'", str7, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "_\"hi!\"Context" + "'", str9, "_\"hi!\"Context");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "\"_Python3\"" + "'", str11, "\"_Python3\"");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 64 + "'", int12 == 64);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(sTGroup14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 29 + "'", int15 == 29);
    }

    @Test
    public void test1017() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1017");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet3 = python3Target1.getBadWords();
        int int4 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str7 = python3Target1.getTargetStringLiteralFromString("_tset\"hi!\"", false);
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = python3Target1.getCodeGenerator();
        boolean boolean9 = python3Target1.supportsOverloadedMethods();
        boolean boolean10 = python3Target1.supportsOverloadedMethods();
        java.lang.String str11 = python3Target1.getLanguage();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str13 = python3Target1.getElementName("tset_\\\"hi!\\\"Conte");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 64 + "'", int4 == 64);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "_tset\\\"hi!\\\"" + "'", str7, "_tset\\\"hi!\\\"");
        org.junit.Assert.assertNull(codeGenerator8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Python3" + "'", str11, "Python3");
    }

    @Test
    public void test1018() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1018");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.lang.String str4 = python3Target1.getTargetStringLiteralFromString("tset\\\"hi!", true);
        org.antlr.v4.tool.Rule rule5 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str6 = python3Target1.getRuleFunctionContextStructName(rule5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "\"tset\\\\\\\"hi!\"" + "'", str4, "\"tset\\\\\\\"hi!\"");
    }

    @Test
    public void test1019() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1019");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str5 = python3Target1.getTargetStringLiteralFromString("", false);
        java.util.Set<java.lang.String> strSet6 = python3Target1.getBadWords();
        java.util.Set<java.lang.String> strSet7 = python3Target1.getBadWords();
        java.lang.String str9 = python3Target1.getImplicitRuleLabel("\"@\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = null;
        java.lang.String str13 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator10, "\\0ContextContext", false);
        java.lang.String str15 = python3Target1.getImplicitRuleLabel("\"\\\"_Python3\\\"\\\"ContextContex\"");
        java.lang.String str17 = python3Target1.getAltLabelContextStructName("_tset_tsettset\\\"\\\"_\\\\\\\"Python3\\\\\\\"\\\"Context");
        int int18 = python3Target1.getSerializedATNSegmentLimit();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNotNull(strSet6);
        org.junit.Assert.assertNotNull(strSet7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "_\"@\"" + "'", str9, "_\"@\"");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "0ContextContex" + "'", str13, "0ContextContex");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "_\"\\\"_Python3\\\"\\\"ContextContex\"" + "'", str15, "_\"\\\"_Python3\\\"\\\"ContextContex\"");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "_tset_tsettset\\\"\\\"_\\\\\\\"Python3\\\\\\\"\\\"ContextContext" + "'", str17, "_tset_tsettset\\\"\\\"_\\\\\\\"Python3\\\\\\\"\\\"ContextContext");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 29 + "'", int18 == 29);
    }

    @Test
    public void test1020() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1020");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet3 = python3Target1.getBadWords();
        java.lang.String str4 = python3Target1.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator5 = python3Target1.getCodeGenerator();
        org.stringtemplate.v4.STGroup sTGroup6 = python3Target1.getTemplates();
        boolean boolean7 = python3Target1.wantsBaseListener();
        boolean boolean8 = python3Target1.templatesExist();
        org.antlr.v4.codegen.CodeGenerator codeGenerator9 = python3Target1.getCodeGenerator();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass10 = codeGenerator9.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Python3" + "'", str4, "Python3");
        org.junit.Assert.assertNull(codeGenerator5);
        org.junit.Assert.assertNotNull(sTGroup6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNull(codeGenerator9);
    }

    @Test
    public void test1021() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1021");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.supportsOverloadedMethods();
        java.lang.String str4 = python3Target1.getListLabel("\"_Python3\"");
        java.lang.String str5 = python3Target1.getLanguage();
        java.util.Set<java.lang.String> strSet6 = python3Target1.getBadWords();
        int int7 = python3Target1.getInlineTestSetWordSize();
        boolean boolean8 = python3Target1.templatesExist();
        boolean boolean9 = python3Target1.wantsBaseListener();
        boolean boolean10 = python3Target1.wantsBaseListener();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "\"_Python3\"" + "'", str4, "\"_Python3\"");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Python3" + "'", str5, "Python3");
        org.junit.Assert.assertNotNull(strSet6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 64 + "'", int7 == 64);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test1022() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1022");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet3 = python3Target1.getBadWords();
        int int4 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str7 = python3Target1.getTargetStringLiteralFromString("_tset\"hi!\"", false);
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = python3Target1.getCodeGenerator();
        boolean boolean9 = python3Target1.supportsOverloadedMethods();
        java.lang.String str11 = python3Target1.getAltLabelContextStructName("\"Python3\"");
        boolean boolean12 = python3Target1.wantsBaseListener();
        org.stringtemplate.v4.STGroup sTGroup13 = python3Target1.getTemplates();
        boolean boolean14 = python3Target1.wantsBaseVisitor();
        java.lang.String str16 = python3Target1.encodeIntAsCharEscape((int) (short) 10);
        java.lang.String str18 = python3Target1.getImplicitRuleLabel("d");
        java.lang.String str20 = python3Target1.getImplicitRuleLabel("_tset\"\\\"hi!\\\"\"ContextContext");
        org.stringtemplate.v4.STGroup sTGroup21 = python3Target1.getTemplates();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 64 + "'", int4 == 64);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "_tset\\\"hi!\\\"" + "'", str7, "_tset\\\"hi!\\\"");
        org.junit.Assert.assertNull(codeGenerator8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "\"Python3\"Context" + "'", str11, "\"Python3\"Context");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(sTGroup13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "\\n" + "'", str16, "\\n");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "_d" + "'", str18, "_d");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "__tset\"\\\"hi!\\\"\"ContextContext" + "'", str20, "__tset\"\\\"hi!\\\"\"ContextContext");
        org.junit.Assert.assertNotNull(sTGroup21);
    }

    @Test
    public void test1023() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1023");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet3 = python3Target1.getBadWords();
        boolean boolean4 = python3Target1.supportsOverloadedMethods();
        boolean boolean5 = python3Target1.wantsBaseVisitor();
        boolean boolean6 = python3Target1.templatesExist();
        int int7 = python3Target1.getInlineTestSetWordSize();
        boolean boolean8 = python3Target1.supportsOverloadedMethods();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str10 = python3Target1.getImplicitTokenLabel("\"\\\"tset\\\\\\\\\\\\\\\"hi!\\\"\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 64 + "'", int7 == 64);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test1024() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1024");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet3 = python3Target1.getBadWords();
        int int4 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str7 = python3Target1.getTargetStringLiteralFromString("_tset\"hi!\"", false);
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = python3Target1.getCodeGenerator();
        boolean boolean9 = python3Target1.supportsOverloadedMethods();
        boolean boolean10 = python3Target1.supportsOverloadedMethods();
        boolean boolean11 = python3Target1.wantsBaseVisitor();
        java.lang.String str13 = python3Target1.getTargetStringLiteralFromString("\"_Python3\"");
        java.lang.String str14 = python3Target1.getVersion();
        boolean boolean15 = python3Target1.supportsOverloadedMethods();
        java.lang.String str17 = python3Target1.getTargetStringLiteralFromString("_Et\\\"hContext");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 64 + "'", int4 == 64);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "_tset\\\"hi!\\\"" + "'", str7, "_tset\\\"hi!\\\"");
        org.junit.Assert.assertNull(codeGenerator8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "\"\\\"_Python3\\\"\"" + "'", str13, "\"\\\"_Python3\\\"\"");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "4.5.2.1" + "'", str14, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "\"_Et\\\\\\\"hContext\"" + "'", str17, "\"_Et\\\\\\\"hContext\"");
    }

    @Test
    public void test1025() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1025");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet3 = python3Target1.getBadWords();
        int int4 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str7 = python3Target1.getTargetStringLiteralFromString("_tset\"hi!\"", false);
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = python3Target1.getCodeGenerator();
        boolean boolean9 = python3Target1.templatesExist();
        java.lang.String str11 = python3Target1.getListLabel("\"hi!\"Context");
        java.lang.String str13 = python3Target1.getListLabel("Python3");
        java.lang.String str15 = python3Target1.getImplicitRuleLabel("\"\\\"hi!\\\"\"Context");
        boolean boolean16 = python3Target1.supportsOverloadedMethods();
        java.lang.String str17 = python3Target1.getVersion();
        boolean boolean18 = python3Target1.wantsBaseVisitor();
        java.lang.String str21 = python3Target1.getTargetStringLiteralFromString("\"\\\"tset\\\\\\\"_Python3\\\"\"", true);
        boolean boolean22 = python3Target1.supportsOverloadedMethods();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str24 = python3Target1.getAltLabelContextStructName("");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 0");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 64 + "'", int4 == 64);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "_tset\\\"hi!\\\"" + "'", str7, "_tset\\\"hi!\\\"");
        org.junit.Assert.assertNull(codeGenerator8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "\"hi!\"Context" + "'", str11, "\"hi!\"Context");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Python3" + "'", str13, "Python3");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "_\"\\\"hi!\\\"\"Context" + "'", str15, "_\"\\\"hi!\\\"\"Context");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "4.5.2.1" + "'", str17, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "\"\\\"\\\\\\\"tset\\\\\\\\\\\\\\\"_Python3\\\\\\\"\\\"\"" + "'", str21, "\"\\\"\\\\\\\"tset\\\\\\\\\\\\\\\"_Python3\\\\\\\"\\\"\"");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
    }

    @Test
    public void test1026() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1026");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet3 = python3Target1.getBadWords();
        int int4 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str7 = python3Target1.getTargetStringLiteralFromString("_tset\"hi!\"", false);
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = python3Target1.getCodeGenerator();
        boolean boolean9 = python3Target1.supportsOverloadedMethods();
        java.lang.String str11 = python3Target1.getAltLabelContextStructName("\"Python3\"");
        boolean boolean12 = python3Target1.wantsBaseListener();
        org.stringtemplate.v4.STGroup sTGroup13 = python3Target1.getTemplates();
        int int14 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str17 = python3Target1.getTargetStringLiteralFromString("Tset\\\"hi!Context", true);
        java.lang.String str19 = python3Target1.encodeIntAsCharEscape(1);
        boolean boolean20 = python3Target1.wantsBaseListener();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 64 + "'", int4 == 64);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "_tset\\\"hi!\\\"" + "'", str7, "_tset\\\"hi!\\\"");
        org.junit.Assert.assertNull(codeGenerator8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "\"Python3\"Context" + "'", str11, "\"Python3\"Context");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(sTGroup13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 64 + "'", int14 == 64);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "\"Tset\\\\\\\"hi!Context\"" + "'", str17, "\"Tset\\\\\\\"hi!Context\"");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "\\1" + "'", str19, "\\1");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    }

    @Test
    public void test1027() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1027");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str4 = python3Target1.getImplicitSetLabel("\"hi!\"");
        java.lang.String str6 = python3Target1.encodeIntAsCharEscape(0);
        java.lang.String str7 = python3Target1.getVersion();
        java.lang.String str9 = python3Target1.getTargetStringLiteralFromString("hi!");
        boolean boolean10 = python3Target1.templatesExist();
        java.lang.String str12 = python3Target1.getImplicitRuleLabel("tset_\\\"hi!\\\"Contex");
        boolean boolean13 = python3Target1.wantsBaseVisitor();
        boolean boolean14 = python3Target1.templatesExist();
        java.lang.String str15 = python3Target1.getLanguage();
        java.lang.String str17 = python3Target1.getTargetStringLiteralFromString("set_\\\"hi!\\\"Conte");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str19 = python3Target1.getElementName("_tset\"Tset\\\\\\\"hi!Context\"Context");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "_tset\"hi!\"" + "'", str4, "_tset\"hi!\"");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\\0" + "'", str6, "\\0");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "4.5.2.1" + "'", str7, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\"hi!\"" + "'", str9, "\"hi!\"");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "_tset_\\\"hi!\\\"Contex" + "'", str12, "_tset_\\\"hi!\\\"Contex");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Python3" + "'", str15, "Python3");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "\"set_\\\\\\\"hi!\\\\\\\"Conte\"" + "'", str17, "\"set_\\\\\\\"hi!\\\\\\\"Conte\"");
    }

    @Test
    public void test1028() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1028");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet3 = python3Target1.getBadWords();
        boolean boolean4 = python3Target1.wantsBaseListener();
        java.lang.String str5 = python3Target1.getVersion();
        boolean boolean6 = python3Target1.templatesExist();
        java.util.Set<java.lang.String> strSet7 = python3Target1.getBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = python3Target1.getCodeGenerator();
        org.antlr.v4.codegen.CodeGenerator codeGenerator9 = python3Target1.getCodeGenerator();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "4.5.2.1" + "'", str5, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(strSet7);
        org.junit.Assert.assertNull(codeGenerator8);
        org.junit.Assert.assertNull(codeGenerator9);
    }

    @Test
    public void test1029() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1029");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet3 = python3Target1.getBadWords();
        int int4 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str7 = python3Target1.getTargetStringLiteralFromString("_tset\"hi!\"", false);
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = python3Target1.getCodeGenerator();
        boolean boolean9 = python3Target1.templatesExist();
        java.lang.String str11 = python3Target1.getListLabel("\"hi!\"Context");
        java.lang.String str13 = python3Target1.getListLabel("Python3");
        java.lang.String str14 = python3Target1.getLanguage();
        org.antlr.v4.tool.ast.GrammarAST grammarAST15 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str16 = python3Target1.getLoopCounter(grammarAST15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 64 + "'", int4 == 64);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "_tset\\\"hi!\\\"" + "'", str7, "_tset\\\"hi!\\\"");
        org.junit.Assert.assertNull(codeGenerator8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "\"hi!\"Context" + "'", str11, "\"hi!\"Context");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Python3" + "'", str13, "Python3");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Python3" + "'", str14, "Python3");
    }

    @Test
    public void test1030() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1030");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet3 = python3Target1.getBadWords();
        int int4 = python3Target1.getInlineTestSetWordSize();
        org.stringtemplate.v4.STGroup sTGroup5 = python3Target1.getTemplates();
        org.stringtemplate.v4.STGroup sTGroup6 = python3Target1.getTemplates();
        java.lang.String str8 = python3Target1.getImplicitSetLabel("");
        boolean boolean9 = python3Target1.wantsBaseListener();
        java.lang.String str11 = python3Target1.getImplicitSetLabel("\"\\\"#\\\"\"");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 64 + "'", int4 == 64);
        org.junit.Assert.assertNotNull(sTGroup5);
        org.junit.Assert.assertNotNull(sTGroup6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "_tset" + "'", str8, "_tset");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "_tset\"\\\"#\\\"\"" + "'", str11, "_tset\"\\\"#\\\"\"");
    }

    @Test
    public void test1031() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1031");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str4 = python3Target1.getImplicitSetLabel("\"hi!\"");
        java.lang.String str6 = python3Target1.encodeIntAsCharEscape(0);
        java.lang.String str7 = python3Target1.getVersion();
        java.lang.String str9 = python3Target1.getImplicitRuleLabel("\"hi!\"Context");
        java.lang.String str10 = python3Target1.getLanguage();
        java.lang.String str12 = python3Target1.getListLabel("_tset_\"hi!\"Context");
        java.lang.String str14 = python3Target1.getImplicitRuleLabel(" ");
        java.lang.String str16 = python3Target1.getImplicitSetLabel("");
        org.antlr.v4.codegen.CodeGenerator codeGenerator17 = python3Target1.getCodeGenerator();
        org.antlr.v4.tool.Rule rule18 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str19 = python3Target1.getRuleFunctionContextStructName(rule18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "_tset\"hi!\"" + "'", str4, "_tset\"hi!\"");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\\0" + "'", str6, "\\0");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "4.5.2.1" + "'", str7, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "_\"hi!\"Context" + "'", str9, "_\"hi!\"Context");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Python3" + "'", str10, "Python3");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "_tset_\"hi!\"Context" + "'", str12, "_tset_\"hi!\"Context");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "_ " + "'", str14, "_ ");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "_tset" + "'", str16, "_tset");
        org.junit.Assert.assertNull(codeGenerator17);
    }

    @Test
    public void test1032() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1032");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet3 = python3Target1.getBadWords();
        boolean boolean4 = python3Target1.supportsOverloadedMethods();
        boolean boolean5 = python3Target1.wantsBaseVisitor();
        boolean boolean6 = python3Target1.templatesExist();
        int int7 = python3Target1.getInlineTestSetWordSize();
        int int8 = python3Target1.getInlineTestSetWordSize();
        java.lang.Class<?> wildcardClass9 = python3Target1.getClass();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 64 + "'", int7 == 64);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 64 + "'", int8 == 64);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test1033() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1033");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet3 = python3Target1.getBadWords();
        int int4 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str7 = python3Target1.getTargetStringLiteralFromString("_tset\"hi!\"", false);
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = python3Target1.getCodeGenerator();
        boolean boolean9 = python3Target1.supportsOverloadedMethods();
        java.lang.String str11 = python3Target1.getAltLabelContextStructName("\"Python3\"");
        java.lang.String str13 = python3Target1.getImplicitRuleLabel("\"Python3\"");
        boolean boolean14 = python3Target1.wantsBaseVisitor();
        java.lang.String str16 = python3Target1.getTargetStringLiteralFromString("Tset_\\\"hi!\\\"ContexContext");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 64 + "'", int4 == 64);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "_tset\\\"hi!\\\"" + "'", str7, "_tset\\\"hi!\\\"");
        org.junit.Assert.assertNull(codeGenerator8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "\"Python3\"Context" + "'", str11, "\"Python3\"Context");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "_\"Python3\"" + "'", str13, "_\"Python3\"");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "\"Tset_\\\\\\\"hi!\\\\\\\"ContexContext\"" + "'", str16, "\"Tset_\\\\\\\"hi!\\\\\\\"ContexContext\"");
    }

    @Test
    public void test1034() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1034");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet3 = python3Target1.getBadWords();
        int int4 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str7 = python3Target1.getTargetStringLiteralFromString("_tset\"hi!\"", false);
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = python3Target1.getCodeGenerator();
        boolean boolean9 = python3Target1.supportsOverloadedMethods();
        java.lang.String str11 = python3Target1.getAltLabelContextStructName("\"Python3\"");
        java.lang.String str13 = python3Target1.getImplicitRuleLabel("");
        org.antlr.v4.codegen.CodeGenerator codeGenerator14 = null;
        java.lang.String str17 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator14, " ", false);
        int int18 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str21 = python3Target1.getTargetStringLiteralFromString("_tset_tset", true);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 64 + "'", int4 == 64);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "_tset\\\"hi!\\\"" + "'", str7, "_tset\\\"hi!\\\"");
        org.junit.Assert.assertNull(codeGenerator8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "\"Python3\"Context" + "'", str11, "\"Python3\"Context");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "_" + "'", str13, "_");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 64 + "'", int18 == 64);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "\"_tset_tset\"" + "'", str21, "\"_tset_tset\"");
    }

    @Test
    public void test1035() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1035");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet3 = python3Target1.getBadWords();
        int int4 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str7 = python3Target1.getTargetStringLiteralFromString("_tset\"hi!\"", false);
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = python3Target1.getCodeGenerator();
        boolean boolean9 = python3Target1.supportsOverloadedMethods();
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = python3Target1.getCodeGenerator();
        java.lang.Class<?> wildcardClass11 = python3Target1.getClass();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 64 + "'", int4 == 64);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "_tset\\\"hi!\\\"" + "'", str7, "_tset\\\"hi!\\\"");
        org.junit.Assert.assertNull(codeGenerator8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(codeGenerator10);
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test1036() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1036");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str4 = python3Target1.getImplicitSetLabel("\"hi!\"");
        java.lang.String str6 = python3Target1.encodeIntAsCharEscape(0);
        java.lang.String str7 = python3Target1.getVersion();
        java.lang.String str10 = python3Target1.getTargetStringLiteralFromString("Python3", true);
        boolean boolean11 = python3Target1.wantsBaseVisitor();
        java.util.Set<java.lang.String> strSet12 = python3Target1.getBadWords();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "_tset\"hi!\"" + "'", str4, "_tset\"hi!\"");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\\0" + "'", str6, "\\0");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "4.5.2.1" + "'", str7, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\"Python3\"" + "'", str10, "\"Python3\"");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(strSet12);
    }

    @Test
    public void test1037() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1037");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet3 = python3Target1.getBadWords();
        int int4 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str7 = python3Target1.getTargetStringLiteralFromString("_tset\"hi!\"", false);
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = python3Target1.getCodeGenerator();
        boolean boolean9 = python3Target1.supportsOverloadedMethods();
        java.lang.String str11 = python3Target1.getAltLabelContextStructName("\"Python3\"");
        boolean boolean12 = python3Target1.wantsBaseListener();
        org.stringtemplate.v4.STGroup sTGroup13 = python3Target1.getTemplates();
        org.antlr.v4.codegen.CodeGenerator codeGenerator14 = null;
        java.lang.String str17 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator14, "\"\\\"_tset\\\"\"", false);
        java.lang.String str18 = python3Target1.getVersion();
        int int19 = python3Target1.getSerializedATNSegmentLimit();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 64 + "'", int4 == 64);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "_tset\\\"hi!\\\"" + "'", str7, "_tset\\\"hi!\\\"");
        org.junit.Assert.assertNull(codeGenerator8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "\"Python3\"Context" + "'", str11, "\"Python3\"Context");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(sTGroup13);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "\\\"_tset\\\"" + "'", str17, "\\\"_tset\\\"");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "4.5.2.1" + "'", str18, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 29 + "'", int19 == 29);
    }

    @Test
    public void test1038() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1038");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str4 = python3Target1.getImplicitSetLabel("\"hi!\"");
        java.lang.String str6 = python3Target1.encodeIntAsCharEscape(0);
        boolean boolean7 = python3Target1.templatesExist();
        org.stringtemplate.v4.STGroup sTGroup8 = python3Target1.getTemplates();
        org.antlr.v4.codegen.CodeGenerator codeGenerator9 = null;
        java.lang.String str12 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator9, "_\"\\\"hi!\\\"\"", true);
        boolean boolean13 = python3Target1.wantsBaseVisitor();
        boolean boolean14 = python3Target1.wantsBaseVisitor();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str16 = python3Target1.getElementName("_tset\\\"hi!\\\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "_tset\"hi!\"" + "'", str4, "_tset\"hi!\"");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\\0" + "'", str6, "\\0");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(sTGroup8);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "\"\\\"\\\"hi!\\\"\"" + "'", str12, "\"\\\"\\\"hi!\\\"\"");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test1039() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1039");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet3 = python3Target1.getBadWords();
        int int4 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str7 = python3Target1.getTargetStringLiteralFromString("_tset\"hi!\"", false);
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = python3Target1.getCodeGenerator();
        boolean boolean9 = python3Target1.supportsOverloadedMethods();
        boolean boolean10 = python3Target1.wantsBaseListener();
        java.lang.String str12 = python3Target1.getImplicitSetLabel("");
        boolean boolean13 = python3Target1.wantsBaseVisitor();
        boolean boolean14 = python3Target1.templatesExist();
        boolean boolean15 = python3Target1.templatesExist();
        boolean boolean16 = python3Target1.templatesExist();
        org.antlr.v4.tool.Grammar grammar17 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator18 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target19 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator18);
        boolean boolean20 = python3Target19.supportsOverloadedMethods();
        java.lang.String str22 = python3Target19.getTargetStringLiteralFromString("_Python3");
        org.antlr.v4.tool.Grammar grammar23 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator24 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target25 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator24);
        int int26 = python3Target25.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet27 = python3Target25.getBadWords();
        int int28 = python3Target25.getInlineTestSetWordSize();
        org.antlr.v4.codegen.CodeGenerator codeGenerator29 = python3Target25.getCodeGenerator();
        java.lang.String str31 = python3Target25.getImplicitSetLabel("_\"hi!\"Context");
        java.lang.String str33 = python3Target25.getImplicitSetLabel("_tset");
        java.lang.String str35 = python3Target25.getImplicitSetLabel("\"\\\"Python3\\\"Context\"");
        int int36 = python3Target25.getSerializedATNSegmentLimit();
        org.antlr.v4.tool.Grammar grammar37 = null;
        int[] intArray38 = new int[] {};
        java.lang.String[] strArray39 = python3Target25.getTokenTypesAsTargetLabels(grammar37, intArray38);
        java.lang.String[] strArray40 = python3Target19.getTokenTypesAsTargetLabels(grammar23, intArray38);
        java.lang.String[] strArray41 = python3Target1.getTokenTypesAsTargetLabels(grammar17, intArray38);
        org.stringtemplate.v4.STGroup sTGroup42 = python3Target1.getTemplates();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 64 + "'", int4 == 64);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "_tset\\\"hi!\\\"" + "'", str7, "_tset\\\"hi!\\\"");
        org.junit.Assert.assertNull(codeGenerator8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "_tset" + "'", str12, "_tset");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "\"_Python3\"" + "'", str22, "\"_Python3\"");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 64 + "'", int26 == 64);
        org.junit.Assert.assertNotNull(strSet27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 64 + "'", int28 == 64);
        org.junit.Assert.assertNull(codeGenerator29);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "_tset_\"hi!\"Context" + "'", str31, "_tset_\"hi!\"Context");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "_tset_tset" + "'", str33, "_tset_tset");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "_tset\"\\\"Python3\\\"Context\"" + "'", str35, "_tset\"\\\"Python3\\\"Context\"");
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 29 + "'", int36 == 29);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[]");
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertNotNull(sTGroup42);
    }

    @Test
    public void test1040() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1040");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str4 = python3Target1.getImplicitSetLabel("\"hi!\"");
        java.lang.String str6 = python3Target1.encodeIntAsCharEscape(0);
        boolean boolean7 = python3Target1.templatesExist();
        java.util.Set<java.lang.String> strSet8 = python3Target1.getBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator9 = null;
        java.lang.String str12 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator9, "", true);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "_tset\"hi!\"" + "'", str4, "_tset\"hi!\"");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\\0" + "'", str6, "\\0");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "\"\"" + "'", str12, "\"\"");
    }

    @Test
    public void test1041() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1041");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet3 = python3Target1.getBadWords();
        int int4 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str7 = python3Target1.getTargetStringLiteralFromString("_tset\"hi!\"", false);
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = python3Target1.getCodeGenerator();
        boolean boolean9 = python3Target1.supportsOverloadedMethods();
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = python3Target1.getCodeGenerator();
        int int11 = python3Target1.getSerializedATNSegmentLimit();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str13 = python3Target1.getImplicitTokenLabel("\".5.2.\"Context");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 64 + "'", int4 == 64);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "_tset\\\"hi!\\\"" + "'", str7, "_tset\\\"hi!\\\"");
        org.junit.Assert.assertNull(codeGenerator8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(codeGenerator10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 29 + "'", int11 == 29);
    }

    @Test
    public void test1042() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1042");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet3 = python3Target1.getBadWords();
        int int4 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str7 = python3Target1.getTargetStringLiteralFromString("_tset\"hi!\"", false);
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = python3Target1.getCodeGenerator();
        boolean boolean9 = python3Target1.supportsOverloadedMethods();
        java.lang.String str11 = python3Target1.getAltLabelContextStructName("\"Python3\"");
        java.lang.String str13 = python3Target1.getImplicitRuleLabel("");
        org.antlr.v4.codegen.CodeGenerator codeGenerator14 = null;
        java.lang.String str17 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator14, " ", false);
        int int18 = python3Target1.getInlineTestSetWordSize();
        org.antlr.v4.codegen.CodeGenerator codeGenerator19 = null;
        java.lang.String str22 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator19, "\"\\\"_tset_\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"_\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"hi!\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"Contex\\\\\\\\\\\\\\\"Context\\\"\"", true);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 64 + "'", int4 == 64);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "_tset\\\"hi!\\\"" + "'", str7, "_tset\\\"hi!\\\"");
        org.junit.Assert.assertNull(codeGenerator8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "\"Python3\"Context" + "'", str11, "\"Python3\"Context");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "_" + "'", str13, "_");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 64 + "'", int18 == 64);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "\"\\\"_tset_\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"_\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"hi!\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"Contex\\\\\\\\\\\\\\\"Context\\\"\"" + "'", str22, "\"\\\"_tset_\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"_\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"hi!\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"Contex\\\\\\\\\\\\\\\"Context\\\"\"");
    }

    @Test
    public void test1043() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1043");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet3 = python3Target1.getBadWords();
        java.lang.String str4 = python3Target1.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator5 = python3Target1.getCodeGenerator();
        java.lang.String str7 = python3Target1.getTargetStringLiteralFromString("_Python3");
        int int8 = python3Target1.getSerializedATNSegmentLimit();
        java.lang.String str10 = python3Target1.getAltLabelContextStructName("\"\\\"hi!\\\"\"Context");
        java.lang.String str12 = python3Target1.getImplicitRuleLabel("\\35");
        java.lang.String str14 = python3Target1.getAltLabelContextStructName("_\"@\"");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str16 = python3Target1.getImplicitTokenLabel("tset_\\\"hi!\\\"Conte");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Python3" + "'", str4, "Python3");
        org.junit.Assert.assertNull(codeGenerator5);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "\"_Python3\"" + "'", str7, "\"_Python3\"");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 29 + "'", int8 == 29);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\"\\\"hi!\\\"\"ContextContext" + "'", str10, "\"\\\"hi!\\\"\"ContextContext");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "_\\35" + "'", str12, "_\\35");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "_\"@\"Context" + "'", str14, "_\"@\"Context");
    }

    @Test
    public void test1044() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1044");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.supportsOverloadedMethods();
        java.lang.String str4 = python3Target1.getListLabel("\"_Python3\"");
        int int5 = python3Target1.getInlineTestSetWordSize();
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = python3Target1.getCodeGenerator();
        java.util.Set<java.lang.String> strSet7 = python3Target1.getBadWords();
        java.lang.String str8 = python3Target1.getVersion();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str10 = python3Target1.getElementListName("_tset\"tset\\\\\\\"hi!\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "\"_Python3\"" + "'", str4, "\"_Python3\"");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 64 + "'", int5 == 64);
        org.junit.Assert.assertNull(codeGenerator6);
        org.junit.Assert.assertNotNull(strSet7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "4.5.2.1" + "'", str8, "4.5.2.1");
    }

    @Test
    public void test1045() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1045");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet3 = python3Target1.getBadWords();
        int int4 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str5 = python3Target1.getLanguage();
        java.lang.String str7 = python3Target1.getTargetStringLiteralFromString("\"_Python3\"");
        java.lang.Class<?> wildcardClass8 = python3Target1.getClass();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 64 + "'", int4 == 64);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Python3" + "'", str5, "Python3");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "\"\\\"_Python3\\\"\"" + "'", str7, "\"\\\"_Python3\\\"\"");
        org.junit.Assert.assertNotNull(wildcardClass8);
    }

    @Test
    public void test1046() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1046");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet3 = python3Target1.getBadWords();
        boolean boolean4 = python3Target1.wantsBaseListener();
        java.util.Set<java.lang.String> strSet5 = python3Target1.getBadWords();
        boolean boolean6 = python3Target1.templatesExist();
        java.lang.String str8 = python3Target1.getImplicitRuleLabel("\"\\\"#\\\"\"");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str10 = python3Target1.getElementListName("_tset_tset\"tset\\\"_Python3\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "_\"\\\"#\\\"\"" + "'", str8, "_\"\\\"#\\\"\"");
    }

    @Test
    public void test1047() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1047");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet3 = python3Target1.getBadWords();
        int int4 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str7 = python3Target1.getTargetStringLiteralFromString("_tset\"hi!\"", false);
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = python3Target1.getCodeGenerator();
        boolean boolean9 = python3Target1.supportsOverloadedMethods();
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = python3Target1.getCodeGenerator();
        int int11 = python3Target1.getSerializedATNSegmentLimit();
        java.lang.String str12 = python3Target1.getVersion();
        java.lang.String str15 = python3Target1.getTargetStringLiteralFromString("\"\\\"hi!\\\"Context\"", false);
        org.antlr.v4.tool.ast.GrammarAST grammarAST16 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean17 = python3Target1.grammarSymbolCausesIssueInGeneratedCode(grammarAST16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 64 + "'", int4 == 64);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "_tset\\\"hi!\\\"" + "'", str7, "_tset\\\"hi!\\\"");
        org.junit.Assert.assertNull(codeGenerator8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(codeGenerator10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 29 + "'", int11 == 29);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "4.5.2.1" + "'", str12, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "\\\"\\\\\\\"hi!\\\\\\\"Context\\\"" + "'", str15, "\\\"\\\\\\\"hi!\\\\\\\"Context\\\"");
    }

    @Test
    public void test1048() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1048");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet3 = python3Target1.getBadWords();
        int int4 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str7 = python3Target1.getTargetStringLiteralFromString("_tset\"hi!\"", false);
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = python3Target1.getCodeGenerator();
        boolean boolean9 = python3Target1.supportsOverloadedMethods();
        java.lang.String str11 = python3Target1.getAltLabelContextStructName("\"Python3\"");
        java.lang.String str13 = python3Target1.getImplicitRuleLabel("");
        java.lang.String str15 = python3Target1.getListLabel("");
        java.lang.String str17 = python3Target1.encodeIntAsCharEscape((int) ' ');
        boolean boolean18 = python3Target1.templatesExist();
        java.lang.String str19 = python3Target1.getLanguage();
        boolean boolean20 = python3Target1.wantsBaseVisitor();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 64 + "'", int4 == 64);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "_tset\\\"hi!\\\"" + "'", str7, "_tset\\\"hi!\\\"");
        org.junit.Assert.assertNull(codeGenerator8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "\"Python3\"Context" + "'", str11, "\"Python3\"Context");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "_" + "'", str13, "_");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + " " + "'", str17, " ");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Python3" + "'", str19, "Python3");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    }

    @Test
    public void test1049() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1049");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet3 = python3Target1.getBadWords();
        int int4 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str7 = python3Target1.getTargetStringLiteralFromString("_tset\"hi!\"", false);
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = python3Target1.getCodeGenerator();
        boolean boolean9 = python3Target1.templatesExist();
        java.lang.String str11 = python3Target1.getListLabel("\"hi!\"Context");
        java.lang.String str13 = python3Target1.getListLabel("Python3");
        java.lang.String str15 = python3Target1.getImplicitRuleLabel("\"\\\"hi!\\\"\"Context");
        java.lang.String str16 = python3Target1.getVersion();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 64 + "'", int4 == 64);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "_tset\\\"hi!\\\"" + "'", str7, "_tset\\\"hi!\\\"");
        org.junit.Assert.assertNull(codeGenerator8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "\"hi!\"Context" + "'", str11, "\"hi!\"Context");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Python3" + "'", str13, "Python3");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "_\"\\\"hi!\\\"\"Context" + "'", str15, "_\"\\\"hi!\\\"\"Context");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "4.5.2.1" + "'", str16, "4.5.2.1");
    }

    @Test
    public void test1050() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1050");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str4 = python3Target1.getImplicitSetLabel("\"hi!\"");
        java.lang.String str6 = python3Target1.encodeIntAsCharEscape(0);
        java.lang.String str7 = python3Target1.getVersion();
        java.lang.String str9 = python3Target1.getImplicitRuleLabel("\"hi!\"Context");
        java.lang.String str10 = python3Target1.getLanguage();
        java.lang.String str12 = python3Target1.getListLabel("_tset_\"hi!\"Context");
        int int13 = python3Target1.getInlineTestSetWordSize();
        org.antlr.v4.codegen.CodeGenerator codeGenerator14 = python3Target1.getCodeGenerator();
        java.lang.String str16 = python3Target1.getAltLabelContextStructName("\"\\\"\\\\\\\"\\\\\\\\\\\\\\\"Python3\\\\\\\\\\\\\\\"Context\\\\\\\"\\\"\"");
        boolean boolean17 = python3Target1.wantsBaseVisitor();
        java.lang.String str19 = python3Target1.getTargetStringLiteralFromString("_\"\\\"_Python3\\\"\"");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "_tset\"hi!\"" + "'", str4, "_tset\"hi!\"");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\\0" + "'", str6, "\\0");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "4.5.2.1" + "'", str7, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "_\"hi!\"Context" + "'", str9, "_\"hi!\"Context");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Python3" + "'", str10, "Python3");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "_tset_\"hi!\"Context" + "'", str12, "_tset_\"hi!\"Context");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 64 + "'", int13 == 64);
        org.junit.Assert.assertNull(codeGenerator14);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "\"\\\"\\\\\\\"\\\\\\\\\\\\\\\"Python3\\\\\\\\\\\\\\\"Context\\\\\\\"\\\"\"Context" + "'", str16, "\"\\\"\\\\\\\"\\\\\\\\\\\\\\\"Python3\\\\\\\\\\\\\\\"Context\\\\\\\"\\\"\"Context");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "\"_\\\"\\\\\\\"_Python3\\\\\\\"\\\"\"" + "'", str19, "\"_\\\"\\\\\\\"_Python3\\\\\\\"\\\"\"");
    }

    @Test
    public void test1051() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1051");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str4 = python3Target1.getImplicitSetLabel("\"hi!\"");
        java.lang.String str6 = python3Target1.encodeIntAsCharEscape(0);
        java.lang.String str7 = python3Target1.getVersion();
        java.lang.String str9 = python3Target1.getImplicitRuleLabel("\"hi!\"Context");
        java.lang.String str11 = python3Target1.getTargetStringLiteralFromString("_Python3");
        boolean boolean12 = python3Target1.wantsBaseListener();
        int int13 = python3Target1.getInlineTestSetWordSize();
        org.antlr.v4.codegen.model.RuleFunction ruleFunction14 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str15 = python3Target1.getRuleFunctionContextStructName(ruleFunction14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "_tset\"hi!\"" + "'", str4, "_tset\"hi!\"");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\\0" + "'", str6, "\\0");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "4.5.2.1" + "'", str7, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "_\"hi!\"Context" + "'", str9, "_\"hi!\"Context");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "\"_Python3\"" + "'", str11, "\"_Python3\"");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 64 + "'", int13 == 64);
    }

    @Test
    public void test1052() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1052");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet3 = python3Target1.getBadWords();
        int int4 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str5 = python3Target1.getLanguage();
        boolean boolean6 = python3Target1.templatesExist();
        boolean boolean7 = python3Target1.supportsOverloadedMethods();
        java.lang.String str9 = python3Target1.getAltLabelContextStructName("\"Tset\\\\\\\"hi!Context\"");
        boolean boolean10 = python3Target1.templatesExist();
        java.lang.String str12 = python3Target1.encodeIntAsCharEscape((int) (byte) 10);
        org.antlr.v4.tool.Grammar grammar13 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str15 = python3Target1.getTokenTypeAsTargetLabel(grammar13, (int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 64 + "'", int4 == 64);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Python3" + "'", str5, "Python3");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\"Tset\\\\\\\"hi!Context\"Context" + "'", str9, "\"Tset\\\\\\\"hi!Context\"Context");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "\\n" + "'", str12, "\\n");
    }

    @Test
    public void test1053() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1053");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet3 = python3Target1.getBadWords();
        int int4 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str7 = python3Target1.getTargetStringLiteralFromString("_tset\"hi!\"", false);
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = python3Target1.getCodeGenerator();
        boolean boolean9 = python3Target1.supportsOverloadedMethods();
        java.lang.String str11 = python3Target1.getAltLabelContextStructName("\"Python3\"");
        boolean boolean12 = python3Target1.wantsBaseListener();
        boolean boolean13 = python3Target1.templatesExist();
        java.lang.String str15 = python3Target1.getAltLabelContextStructName("DContext");
        org.antlr.v4.codegen.model.RuleFunction ruleFunction16 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str17 = python3Target1.getRuleFunctionContextStructName(ruleFunction16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 64 + "'", int4 == 64);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "_tset\\\"hi!\\\"" + "'", str7, "_tset\\\"hi!\\\"");
        org.junit.Assert.assertNull(codeGenerator8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "\"Python3\"Context" + "'", str11, "\"Python3\"Context");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "DContextContext" + "'", str15, "DContextContext");
    }

    @Test
    public void test1054() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1054");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet3 = python3Target1.getBadWords();
        int int4 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str7 = python3Target1.getTargetStringLiteralFromString("_tset\"hi!\"", false);
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = python3Target1.getCodeGenerator();
        boolean boolean9 = python3Target1.supportsOverloadedMethods();
        java.lang.String str11 = python3Target1.getAltLabelContextStructName("\"Python3\"");
        boolean boolean12 = python3Target1.wantsBaseListener();
        org.stringtemplate.v4.STGroup sTGroup13 = python3Target1.getTemplates();
        int int14 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str17 = python3Target1.getTargetStringLiteralFromString("Tset\\\"hi!Context", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator18 = null;
        java.lang.String str21 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator18, "_tsettset\\\"hi!", false);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 64 + "'", int4 == 64);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "_tset\\\"hi!\\\"" + "'", str7, "_tset\\\"hi!\\\"");
        org.junit.Assert.assertNull(codeGenerator8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "\"Python3\"Context" + "'", str11, "\"Python3\"Context");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(sTGroup13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 64 + "'", int14 == 64);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "\"Tset\\\\\\\"hi!Context\"" + "'", str17, "\"Tset\\\\\\\"hi!Context\"");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "tsettset\\\"hi" + "'", str21, "tsettset\\\"hi");
    }

    @Test
    public void test1055() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1055");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet3 = python3Target1.getBadWords();
        int int4 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str7 = python3Target1.getTargetStringLiteralFromString("_tset\"hi!\"", false);
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = python3Target1.getCodeGenerator();
        boolean boolean9 = python3Target1.templatesExist();
        java.util.Set<java.lang.String> strSet10 = python3Target1.getBadWords();
        java.lang.String str12 = python3Target1.getImplicitSetLabel("\"\\\\35\"");
        java.lang.String str14 = python3Target1.getImplicitSetLabel("_\"Python3\"Context");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 64 + "'", int4 == 64);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "_tset\\\"hi!\\\"" + "'", str7, "_tset\\\"hi!\\\"");
        org.junit.Assert.assertNull(codeGenerator8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(strSet10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "_tset\"\\\\35\"" + "'", str12, "_tset\"\\\\35\"");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "_tset_\"Python3\"Context" + "'", str14, "_tset_\"Python3\"Context");
    }

    @Test
    public void test1056() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1056");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str5 = python3Target1.getTargetStringLiteralFromString("", false);
        java.util.Set<java.lang.String> strSet6 = python3Target1.getBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = python3Target1.getCodeGenerator();
        boolean boolean8 = python3Target1.templatesExist();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str10 = python3Target1.getImplicitTokenLabel("tset_\\\"hi!\\\"Conte");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNotNull(strSet6);
        org.junit.Assert.assertNull(codeGenerator7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
    }

    @Test
    public void test1057() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1057");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str5 = python3Target1.getTargetStringLiteralFromString("", false);
        java.util.Set<java.lang.String> strSet6 = python3Target1.getBadWords();
        java.lang.String str8 = python3Target1.encodeIntAsCharEscape((int) (byte) 10);
        java.lang.String str11 = python3Target1.getTargetStringLiteralFromString("\"\\\\\\\"tset\\\\\\\\\\\\\\\"_Python3\\\\\\\"\"", true);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNotNull(strSet6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\\n" + "'", str8, "\\n");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "\"\\\"\\\\\\\\\\\\\\\"tset\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"_Python3\\\\\\\\\\\\\\\"\\\"\"" + "'", str11, "\"\\\"\\\\\\\\\\\\\\\"tset\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"_Python3\\\\\\\\\\\\\\\"\\\"\"");
    }

    @Test
    public void test1058() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1058");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        org.antlr.v4.codegen.CodeGenerator codeGenerator2 = null;
        java.lang.String str5 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator2, "4.5.2.1", true);
        java.lang.String str6 = python3Target1.getLanguage();
        java.lang.String str8 = python3Target1.getImplicitRuleLabel("\"\\\"_\\\"hi!\\\"Contex\"");
        boolean boolean9 = python3Target1.wantsBaseListener();
        java.lang.String str12 = python3Target1.getTargetStringLiteralFromString("\"@\"", false);
        java.lang.String str14 = python3Target1.getTargetStringLiteralFromString("hi!\\\"Contex");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "\".5.2.\"" + "'", str5, "\".5.2.\"");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Python3" + "'", str6, "Python3");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "_\"\\\"_\\\"hi!\\\"Contex\"" + "'", str8, "_\"\\\"_\\\"hi!\\\"Contex\"");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "\\\"@\\\"" + "'", str12, "\\\"@\\\"");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "\"hi!\\\\\\\"Contex\"" + "'", str14, "\"hi!\\\\\\\"Contex\"");
    }

    @Test
    public void test1059() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1059");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet3 = python3Target1.getBadWords();
        int int4 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str7 = python3Target1.getTargetStringLiteralFromString("_tset\"hi!\"", false);
        boolean boolean8 = python3Target1.supportsOverloadedMethods();
        java.lang.String str10 = python3Target1.getTargetStringLiteralFromString("\\\"\\\\\\\"hi!\\\\\\\"Conte\\\"");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 64 + "'", int4 == 64);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "_tset\\\"hi!\\\"" + "'", str7, "_tset\\\"hi!\\\"");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\"\\\\\\\"\\\\\\\\\\\\\\\"hi!\\\\\\\\\\\\\\\"Conte\\\\\\\"\"" + "'", str10, "\"\\\\\\\"\\\\\\\\\\\\\\\"hi!\\\\\\\\\\\\\\\"Conte\\\\\\\"\"");
    }

    @Test
    public void test1060() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1060");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet3 = python3Target1.getBadWords();
        boolean boolean4 = python3Target1.supportsOverloadedMethods();
        boolean boolean5 = python3Target1.wantsBaseVisitor();
        java.lang.String str6 = python3Target1.getLanguage();
        java.lang.String str8 = python3Target1.getImplicitRuleLabel("\"_\\\"tset4.5.2.1Contex\\\"\"");
        org.antlr.v4.tool.ast.GrammarAST grammarAST9 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str10 = python3Target1.getLoopCounter(grammarAST9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Python3" + "'", str6, "Python3");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "_\"_\\\"tset4.5.2.1Contex\\\"\"" + "'", str8, "_\"_\\\"tset4.5.2.1Contex\\\"\"");
    }

    @Test
    public void test1061() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1061");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet3 = python3Target1.getBadWords();
        int int4 = python3Target1.getInlineTestSetWordSize();
        org.antlr.v4.codegen.CodeGenerator codeGenerator5 = python3Target1.getCodeGenerator();
        java.lang.String str6 = python3Target1.getLanguage();
        java.lang.String str8 = python3Target1.getListLabel("tset\\\"hi!");
        org.antlr.v4.codegen.CodeGenerator codeGenerator9 = python3Target1.getCodeGenerator();
        boolean boolean10 = python3Target1.wantsBaseVisitor();
        java.lang.Class<?> wildcardClass11 = python3Target1.getClass();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 64 + "'", int4 == 64);
        org.junit.Assert.assertNull(codeGenerator5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Python3" + "'", str6, "Python3");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "tset\\\"hi!" + "'", str8, "tset\\\"hi!");
        org.junit.Assert.assertNull(codeGenerator9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test1062() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1062");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet3 = python3Target1.getBadWords();
        int int4 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str6 = python3Target1.getAltLabelContextStructName("\"hi!\"");
        boolean boolean7 = python3Target1.templatesExist();
        int int8 = python3Target1.getSerializedATNSegmentLimit();
        org.antlr.v4.codegen.CodeGenerator codeGenerator9 = null;
        java.lang.String str12 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator9, "_tset\"_Python3\"", true);
        org.antlr.v4.tool.Grammar grammar13 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator14 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target15 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator14);
        int int16 = python3Target15.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet17 = python3Target15.getBadWords();
        int int18 = python3Target15.getInlineTestSetWordSize();
        java.lang.String str21 = python3Target15.getTargetStringLiteralFromString("_tset\"hi!\"", false);
        org.antlr.v4.codegen.CodeGenerator codeGenerator22 = python3Target15.getCodeGenerator();
        boolean boolean23 = python3Target15.supportsOverloadedMethods();
        java.lang.String str25 = python3Target15.getAltLabelContextStructName("\"Python3\"");
        boolean boolean26 = python3Target15.wantsBaseListener();
        int int27 = python3Target15.getInlineTestSetWordSize();
        boolean boolean28 = python3Target15.wantsBaseListener();
        org.antlr.v4.tool.Grammar grammar29 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator30 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target31 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator30);
        int int32 = python3Target31.getInlineTestSetWordSize();
        java.lang.String str34 = python3Target31.getImplicitSetLabel("\"hi!\"");
        java.lang.String str36 = python3Target31.encodeIntAsCharEscape(0);
        java.lang.String str37 = python3Target31.getVersion();
        java.lang.String str39 = python3Target31.getTargetStringLiteralFromString("hi!");
        org.antlr.v4.tool.Grammar grammar40 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator41 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target42 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator41);
        boolean boolean43 = python3Target42.supportsOverloadedMethods();
        java.lang.String str45 = python3Target42.getTargetStringLiteralFromString("_Python3");
        org.antlr.v4.tool.Grammar grammar46 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator47 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target48 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator47);
        int int49 = python3Target48.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet50 = python3Target48.getBadWords();
        int int51 = python3Target48.getInlineTestSetWordSize();
        org.antlr.v4.codegen.CodeGenerator codeGenerator52 = python3Target48.getCodeGenerator();
        java.lang.String str54 = python3Target48.getImplicitSetLabel("_\"hi!\"Context");
        java.lang.String str56 = python3Target48.getImplicitSetLabel("_tset");
        java.lang.String str58 = python3Target48.getImplicitSetLabel("\"\\\"Python3\\\"Context\"");
        int int59 = python3Target48.getSerializedATNSegmentLimit();
        org.antlr.v4.tool.Grammar grammar60 = null;
        int[] intArray61 = new int[] {};
        java.lang.String[] strArray62 = python3Target48.getTokenTypesAsTargetLabels(grammar60, intArray61);
        java.lang.String[] strArray63 = python3Target42.getTokenTypesAsTargetLabels(grammar46, intArray61);
        java.lang.String[] strArray64 = python3Target31.getTokenTypesAsTargetLabels(grammar40, intArray61);
        java.lang.String[] strArray65 = python3Target15.getTokenTypesAsTargetLabels(grammar29, intArray61);
        java.lang.String[] strArray66 = python3Target1.getTokenTypesAsTargetLabels(grammar13, intArray61);
        boolean boolean67 = python3Target1.templatesExist();
        java.lang.String str69 = python3Target1.getTargetStringLiteralFromString("\".5.2.\"Context");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 64 + "'", int4 == 64);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\"hi!\"Context" + "'", str6, "\"hi!\"Context");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 29 + "'", int8 == 29);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "\"tset\\\"_Python3\"" + "'", str12, "\"tset\\\"_Python3\"");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 64 + "'", int16 == 64);
        org.junit.Assert.assertNotNull(strSet17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 64 + "'", int18 == 64);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "_tset\\\"hi!\\\"" + "'", str21, "_tset\\\"hi!\\\"");
        org.junit.Assert.assertNull(codeGenerator22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "\"Python3\"Context" + "'", str25, "\"Python3\"Context");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 64 + "'", int27 == 64);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 64 + "'", int32 == 64);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "_tset\"hi!\"" + "'", str34, "_tset\"hi!\"");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "\\0" + "'", str36, "\\0");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "4.5.2.1" + "'", str37, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "\"hi!\"" + "'", str39, "\"hi!\"");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "\"_Python3\"" + "'", str45, "\"_Python3\"");
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 64 + "'", int49 == 64);
        org.junit.Assert.assertNotNull(strSet50);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 64 + "'", int51 == 64);
        org.junit.Assert.assertNull(codeGenerator52);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "_tset_\"hi!\"Context" + "'", str54, "_tset_\"hi!\"Context");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "_tset_tset" + "'", str56, "_tset_tset");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "_tset\"\\\"Python3\\\"Context\"" + "'", str58, "_tset\"\\\"Python3\\\"Context\"");
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 29 + "'", int59 == 29);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[]");
        org.junit.Assert.assertNotNull(strArray62);
        org.junit.Assert.assertNotNull(strArray63);
        org.junit.Assert.assertNotNull(strArray64);
        org.junit.Assert.assertNotNull(strArray65);
        org.junit.Assert.assertNotNull(strArray66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "\"\\\".5.2.\\\"Context\"" + "'", str69, "\"\\\".5.2.\\\"Context\"");
    }

    @Test
    public void test1063() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1063");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet3 = python3Target1.getBadWords();
        java.lang.String str4 = python3Target1.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator5 = python3Target1.getCodeGenerator();
        java.lang.String str7 = python3Target1.getTargetStringLiteralFromString("_Python3");
        int int8 = python3Target1.getSerializedATNSegmentLimit();
        org.antlr.v4.tool.Grammar grammar9 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target11 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator10);
        int int12 = python3Target11.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet13 = python3Target11.getBadWords();
        java.lang.String str14 = python3Target11.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator15 = python3Target11.getCodeGenerator();
        java.lang.String str17 = python3Target11.getTargetStringLiteralFromString("_Python3");
        int int18 = python3Target11.getSerializedATNSegmentLimit();
        boolean boolean19 = python3Target11.wantsBaseListener();
        org.antlr.v4.tool.Grammar grammar20 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator21 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target22 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator21);
        int int23 = python3Target22.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet24 = python3Target22.getBadWords();
        int int25 = python3Target22.getInlineTestSetWordSize();
        java.lang.String str28 = python3Target22.getTargetStringLiteralFromString("_tset\"hi!\"", false);
        org.antlr.v4.codegen.CodeGenerator codeGenerator29 = python3Target22.getCodeGenerator();
        boolean boolean30 = python3Target22.supportsOverloadedMethods();
        boolean boolean31 = python3Target22.wantsBaseListener();
        java.lang.String str33 = python3Target22.getImplicitSetLabel("");
        boolean boolean34 = python3Target22.wantsBaseVisitor();
        boolean boolean35 = python3Target22.templatesExist();
        boolean boolean36 = python3Target22.templatesExist();
        boolean boolean37 = python3Target22.templatesExist();
        org.antlr.v4.tool.Grammar grammar38 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator39 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target40 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator39);
        boolean boolean41 = python3Target40.supportsOverloadedMethods();
        java.lang.String str43 = python3Target40.getTargetStringLiteralFromString("_Python3");
        org.antlr.v4.tool.Grammar grammar44 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator45 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target46 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator45);
        int int47 = python3Target46.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet48 = python3Target46.getBadWords();
        int int49 = python3Target46.getInlineTestSetWordSize();
        org.antlr.v4.codegen.CodeGenerator codeGenerator50 = python3Target46.getCodeGenerator();
        java.lang.String str52 = python3Target46.getImplicitSetLabel("_\"hi!\"Context");
        java.lang.String str54 = python3Target46.getImplicitSetLabel("_tset");
        java.lang.String str56 = python3Target46.getImplicitSetLabel("\"\\\"Python3\\\"Context\"");
        int int57 = python3Target46.getSerializedATNSegmentLimit();
        org.antlr.v4.tool.Grammar grammar58 = null;
        int[] intArray59 = new int[] {};
        java.lang.String[] strArray60 = python3Target46.getTokenTypesAsTargetLabels(grammar58, intArray59);
        java.lang.String[] strArray61 = python3Target40.getTokenTypesAsTargetLabels(grammar44, intArray59);
        java.lang.String[] strArray62 = python3Target22.getTokenTypesAsTargetLabels(grammar38, intArray59);
        java.lang.String[] strArray63 = python3Target11.getTokenTypesAsTargetLabels(grammar20, intArray59);
        java.lang.String[] strArray64 = python3Target1.getTokenTypesAsTargetLabels(grammar9, intArray59);
        boolean boolean65 = python3Target1.wantsBaseVisitor();
        org.antlr.v4.codegen.CodeGenerator codeGenerator66 = python3Target1.getCodeGenerator();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Python3" + "'", str4, "Python3");
        org.junit.Assert.assertNull(codeGenerator5);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "\"_Python3\"" + "'", str7, "\"_Python3\"");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 29 + "'", int8 == 29);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 64 + "'", int12 == 64);
        org.junit.Assert.assertNotNull(strSet13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Python3" + "'", str14, "Python3");
        org.junit.Assert.assertNull(codeGenerator15);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "\"_Python3\"" + "'", str17, "\"_Python3\"");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 29 + "'", int18 == 29);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 64 + "'", int23 == 64);
        org.junit.Assert.assertNotNull(strSet24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 64 + "'", int25 == 64);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "_tset\\\"hi!\\\"" + "'", str28, "_tset\\\"hi!\\\"");
        org.junit.Assert.assertNull(codeGenerator29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "_tset" + "'", str33, "_tset");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "\"_Python3\"" + "'", str43, "\"_Python3\"");
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 64 + "'", int47 == 64);
        org.junit.Assert.assertNotNull(strSet48);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 64 + "'", int49 == 64);
        org.junit.Assert.assertNull(codeGenerator50);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "_tset_\"hi!\"Context" + "'", str52, "_tset_\"hi!\"Context");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "_tset_tset" + "'", str54, "_tset_tset");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "_tset\"\\\"Python3\\\"Context\"" + "'", str56, "_tset\"\\\"Python3\\\"Context\"");
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 29 + "'", int57 == 29);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[]");
        org.junit.Assert.assertNotNull(strArray60);
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertNotNull(strArray62);
        org.junit.Assert.assertNotNull(strArray63);
        org.junit.Assert.assertNotNull(strArray64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNull(codeGenerator66);
    }

    @Test
    public void test1064() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1064");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet3 = python3Target1.getBadWords();
        java.lang.String str4 = python3Target1.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator5 = python3Target1.getCodeGenerator();
        java.lang.String str7 = python3Target1.getTargetStringLiteralFromString("_Python3");
        int int8 = python3Target1.getSerializedATNSegmentLimit();
        boolean boolean9 = python3Target1.wantsBaseListener();
        java.lang.String str11 = python3Target1.getImplicitSetLabel("tset_\\\"hi!\\\"Contex");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str13 = python3Target1.getElementListName("__tset\"tset\\\\\\\"hi!\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Python3" + "'", str4, "Python3");
        org.junit.Assert.assertNull(codeGenerator5);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "\"_Python3\"" + "'", str7, "\"_Python3\"");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 29 + "'", int8 == 29);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "_tsettset_\\\"hi!\\\"Contex" + "'", str11, "_tsettset_\\\"hi!\\\"Contex");
    }

    @Test
    public void test1065() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1065");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet3 = python3Target1.getBadWords();
        int int4 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str7 = python3Target1.getTargetStringLiteralFromString("_tset\"hi!\"", false);
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = python3Target1.getCodeGenerator();
        boolean boolean9 = python3Target1.supportsOverloadedMethods();
        boolean boolean10 = python3Target1.wantsBaseListener();
        java.util.Set<java.lang.String> strSet11 = python3Target1.getBadWords();
        org.antlr.v4.tool.ast.GrammarAST grammarAST12 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean13 = python3Target1.grammarSymbolCausesIssueInGeneratedCode(grammarAST12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 64 + "'", int4 == 64);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "_tset\\\"hi!\\\"" + "'", str7, "_tset\\\"hi!\\\"");
        org.junit.Assert.assertNull(codeGenerator8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(strSet11);
    }

    @Test
    public void test1066() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1066");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet3 = python3Target1.getBadWords();
        java.lang.String str4 = python3Target1.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator5 = python3Target1.getCodeGenerator();
        java.lang.String str7 = python3Target1.getTargetStringLiteralFromString("_Python3");
        boolean boolean8 = python3Target1.wantsBaseListener();
        java.lang.String str10 = python3Target1.getTargetStringLiteralFromString("");
        org.antlr.v4.codegen.CodeGenerator codeGenerator11 = null;
        java.lang.String str14 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator11, "_tset_\"hi!\"ContextContext", true);
        int int15 = python3Target1.getInlineTestSetWordSize();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Python3" + "'", str4, "Python3");
        org.junit.Assert.assertNull(codeGenerator5);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "\"_Python3\"" + "'", str7, "\"_Python3\"");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\"\"" + "'", str10, "\"\"");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "\"tset_\\\"hi!\\\"ContextContex\"" + "'", str14, "\"tset_\\\"hi!\\\"ContextContex\"");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 64 + "'", int15 == 64);
    }

    @Test
    public void test1067() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1067");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str4 = python3Target1.getImplicitSetLabel("\"hi!\"");
        java.lang.String str6 = python3Target1.encodeIntAsCharEscape(0);
        java.lang.String str8 = python3Target1.encodeIntAsCharEscape(100);
        org.antlr.v4.codegen.CodeGenerator codeGenerator9 = null;
        java.lang.String str12 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator9, "\\0Context", true);
        boolean boolean13 = python3Target1.wantsBaseVisitor();
        org.stringtemplate.v4.STGroup sTGroup14 = python3Target1.getTemplates();
        java.lang.String str16 = python3Target1.getListLabel("\"Tset\\\\\\\"hi!Context\"");
        java.lang.String str19 = python3Target1.getTargetStringLiteralFromString("__\"\\\"hi!\\\"\"", true);
        org.antlr.v4.tool.ast.GrammarAST grammarAST20 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str21 = python3Target1.getLoopCounter(grammarAST20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "_tset\"hi!\"" + "'", str4, "_tset\"hi!\"");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\\0" + "'", str6, "\\0");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "d" + "'", str8, "d");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "\"0Contex\"" + "'", str12, "\"0Contex\"");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(sTGroup14);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "\"Tset\\\\\\\"hi!Context\"" + "'", str16, "\"Tset\\\\\\\"hi!Context\"");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "\"__\\\"\\\\\\\"hi!\\\\\\\"\\\"\"" + "'", str19, "\"__\\\"\\\\\\\"hi!\\\\\\\"\\\"\"");
    }

    @Test
    public void test1068() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1068");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.supportsOverloadedMethods();
        java.lang.String str4 = python3Target1.getListLabel("\"_Python3\"");
        java.lang.String str5 = python3Target1.getLanguage();
        java.util.Set<java.lang.String> strSet6 = python3Target1.getBadWords();
        int int7 = python3Target1.getInlineTestSetWordSize();
        org.antlr.v4.tool.ast.GrammarAST grammarAST8 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str9 = python3Target1.getLoopCounter(grammarAST8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "\"_Python3\"" + "'", str4, "\"_Python3\"");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Python3" + "'", str5, "Python3");
        org.junit.Assert.assertNotNull(strSet6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 64 + "'", int7 == 64);
    }

    @Test
    public void test1069() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1069");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet3 = python3Target1.getBadWords();
        int int4 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str7 = python3Target1.getTargetStringLiteralFromString("_tset\"hi!\"", false);
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = python3Target1.getCodeGenerator();
        boolean boolean9 = python3Target1.templatesExist();
        java.lang.String str11 = python3Target1.getListLabel("\"hi!\"Context");
        java.lang.String str13 = python3Target1.getListLabel("Python3");
        java.lang.String str15 = python3Target1.getImplicitRuleLabel("\"\\\"hi!\\\"\"Context");
        boolean boolean16 = python3Target1.supportsOverloadedMethods();
        java.lang.String str17 = python3Target1.getVersion();
        boolean boolean18 = python3Target1.wantsBaseVisitor();
        java.lang.String str21 = python3Target1.getTargetStringLiteralFromString("\"\\\"tset\\\\\\\"_Python3\\\"\"", true);
        java.util.Set<java.lang.String> strSet22 = python3Target1.getBadWords();
        java.lang.Class<?> wildcardClass23 = strSet22.getClass();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 64 + "'", int4 == 64);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "_tset\\\"hi!\\\"" + "'", str7, "_tset\\\"hi!\\\"");
        org.junit.Assert.assertNull(codeGenerator8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "\"hi!\"Context" + "'", str11, "\"hi!\"Context");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Python3" + "'", str13, "Python3");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "_\"\\\"hi!\\\"\"Context" + "'", str15, "_\"\\\"hi!\\\"\"Context");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "4.5.2.1" + "'", str17, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "\"\\\"\\\\\\\"tset\\\\\\\\\\\\\\\"_Python3\\\\\\\"\\\"\"" + "'", str21, "\"\\\"\\\\\\\"tset\\\\\\\\\\\\\\\"_Python3\\\\\\\"\\\"\"");
        org.junit.Assert.assertNotNull(strSet22);
        org.junit.Assert.assertNotNull(wildcardClass23);
    }

    @Test
    public void test1070() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1070");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet3 = python3Target1.getBadWords();
        java.lang.String str4 = python3Target1.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator5 = python3Target1.getCodeGenerator();
        java.lang.String str7 = python3Target1.getTargetStringLiteralFromString("_Python3");
        int int8 = python3Target1.getSerializedATNSegmentLimit();
        java.lang.String str10 = python3Target1.getAltLabelContextStructName("\"\\\"hi!\\\"\"Context");
        boolean boolean11 = python3Target1.wantsBaseVisitor();
        java.lang.String str13 = python3Target1.getAltLabelContextStructName("_tset\"_tsettset\\\\\\\"hi!\"Context");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Python3" + "'", str4, "Python3");
        org.junit.Assert.assertNull(codeGenerator5);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "\"_Python3\"" + "'", str7, "\"_Python3\"");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 29 + "'", int8 == 29);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\"\\\"hi!\\\"\"ContextContext" + "'", str10, "\"\\\"hi!\\\"\"ContextContext");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "_tset\"_tsettset\\\\\\\"hi!\"ContextContext" + "'", str13, "_tset\"_tsettset\\\\\\\"hi!\"ContextContext");
    }

    @Test
    public void test1071() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1071");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet3 = python3Target1.getBadWords();
        int int4 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str7 = python3Target1.getTargetStringLiteralFromString("_tset\"hi!\"", false);
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = python3Target1.getCodeGenerator();
        boolean boolean9 = python3Target1.supportsOverloadedMethods();
        java.lang.String str11 = python3Target1.getAltLabelContextStructName("\"Python3\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator12 = null;
        java.lang.String str15 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator12, "\"_Python3\"", true);
        boolean boolean16 = python3Target1.wantsBaseVisitor();
        boolean boolean17 = python3Target1.supportsOverloadedMethods();
        java.lang.String str19 = python3Target1.getTargetStringLiteralFromString("\"_tsettset\\\\\\\"hi!\"");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 64 + "'", int4 == 64);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "_tset\\\"hi!\\\"" + "'", str7, "_tset\\\"hi!\\\"");
        org.junit.Assert.assertNull(codeGenerator8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "\"Python3\"Context" + "'", str11, "\"Python3\"Context");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "\"_Python3\"" + "'", str15, "\"_Python3\"");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "\"\\\"_tsettset\\\\\\\\\\\\\\\"hi!\\\"\"" + "'", str19, "\"\\\"_tsettset\\\\\\\\\\\\\\\"hi!\\\"\"");
    }

    @Test
    public void test1072() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1072");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str4 = python3Target1.getImplicitSetLabel("\"hi!\"");
        java.lang.String str6 = python3Target1.encodeIntAsCharEscape(0);
        java.lang.String str7 = python3Target1.getVersion();
        java.lang.String str9 = python3Target1.getTargetStringLiteralFromString("hi!");
        boolean boolean10 = python3Target1.templatesExist();
        boolean boolean11 = python3Target1.supportsOverloadedMethods();
        boolean boolean12 = python3Target1.supportsOverloadedMethods();
        org.antlr.v4.codegen.CodeGenerator codeGenerator13 = null;
        java.lang.String str16 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator13, "tset\\\"\\\"Python3\\\"Context", false);
        java.lang.String str19 = python3Target1.getTargetStringLiteralFromString("tset\\\"hi!", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator20 = python3Target1.getCodeGenerator();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "_tset\"hi!\"" + "'", str4, "_tset\"hi!\"");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\\0" + "'", str6, "\\0");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "4.5.2.1" + "'", str7, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\"hi!\"" + "'", str9, "\"hi!\"");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "set\\\"\\\"Python3\\\"Contex" + "'", str16, "set\\\"\\\"Python3\\\"Contex");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "\"tset\\\\\\\"hi!\"" + "'", str19, "\"tset\\\\\\\"hi!\"");
        org.junit.Assert.assertNull(codeGenerator20);
    }

    @Test
    public void test1073() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1073");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str4 = python3Target1.getImplicitSetLabel("\"hi!\"");
        java.lang.String str6 = python3Target1.encodeIntAsCharEscape(0);
        java.lang.String str7 = python3Target1.getVersion();
        java.lang.String str9 = python3Target1.getImplicitRuleLabel("\"hi!\"Context");
        java.lang.String str10 = python3Target1.getLanguage();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str12 = python3Target1.getImplicitTokenLabel("_d");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "_tset\"hi!\"" + "'", str4, "_tset\"hi!\"");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\\0" + "'", str6, "\\0");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "4.5.2.1" + "'", str7, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "_\"hi!\"Context" + "'", str9, "_\"hi!\"Context");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Python3" + "'", str10, "Python3");
    }

    @Test
    public void test1074() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1074");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str4 = python3Target1.getImplicitSetLabel("\"hi!\"");
        java.lang.String str6 = python3Target1.encodeIntAsCharEscape(0);
        boolean boolean7 = python3Target1.supportsOverloadedMethods();
        int int8 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str10 = python3Target1.getImplicitRuleLabel("_tset_\"hi!\"ContextContext");
        java.lang.String str12 = python3Target1.getAltLabelContextStructName("_tset__\"\\\"_\\\"hi!\\\"Contex\"Context");
        boolean boolean13 = python3Target1.wantsBaseListener();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "_tset\"hi!\"" + "'", str4, "_tset\"hi!\"");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\\0" + "'", str6, "\\0");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 64 + "'", int8 == 64);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "__tset_\"hi!\"ContextContext" + "'", str10, "__tset_\"hi!\"ContextContext");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "_tset__\"\\\"_\\\"hi!\\\"Contex\"ContextContext" + "'", str12, "_tset__\"\\\"_\\\"hi!\\\"Contex\"ContextContext");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test1075() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1075");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str4 = python3Target1.getImplicitSetLabel("\"hi!\"");
        org.stringtemplate.v4.STGroup sTGroup5 = python3Target1.getTemplates();
        org.antlr.v4.tool.Rule rule6 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str7 = python3Target1.getRuleFunctionContextStructName(rule6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "_tset\"hi!\"" + "'", str4, "_tset\"hi!\"");
        org.junit.Assert.assertNotNull(sTGroup5);
    }

    @Test
    public void test1076() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1076");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet3 = python3Target1.getBadWords();
        int int4 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str7 = python3Target1.getTargetStringLiteralFromString("_tset\"hi!\"", false);
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = python3Target1.getCodeGenerator();
        boolean boolean9 = python3Target1.templatesExist();
        java.util.Set<java.lang.String> strSet10 = python3Target1.getBadWords();
        java.lang.String str12 = python3Target1.getImplicitSetLabel("\"\\\\35\"");
        boolean boolean13 = python3Target1.wantsBaseVisitor();
        org.antlr.v4.tool.ast.GrammarAST grammarAST14 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str15 = python3Target1.getLoopCounter(grammarAST14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 64 + "'", int4 == 64);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "_tset\\\"hi!\\\"" + "'", str7, "_tset\\\"hi!\\\"");
        org.junit.Assert.assertNull(codeGenerator8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(strSet10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "_tset\"\\\\35\"" + "'", str12, "_tset\"\\\\35\"");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test1077() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1077");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet3 = python3Target1.getBadWords();
        int int4 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str7 = python3Target1.getTargetStringLiteralFromString("_tset\"hi!\"", false);
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = python3Target1.getCodeGenerator();
        boolean boolean9 = python3Target1.supportsOverloadedMethods();
        java.lang.String str11 = python3Target1.getAltLabelContextStructName("\"Python3\"");
        boolean boolean12 = python3Target1.wantsBaseListener();
        int int13 = python3Target1.getInlineTestSetWordSize();
        boolean boolean14 = python3Target1.wantsBaseListener();
        int int15 = python3Target1.getInlineTestSetWordSize();
        boolean boolean16 = python3Target1.wantsBaseListener();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 64 + "'", int4 == 64);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "_tset\\\"hi!\\\"" + "'", str7, "_tset\\\"hi!\\\"");
        org.junit.Assert.assertNull(codeGenerator8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "\"Python3\"Context" + "'", str11, "\"Python3\"Context");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 64 + "'", int13 == 64);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 64 + "'", int15 == 64);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    }

    @Test
    public void test1078() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1078");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet3 = python3Target1.getBadWords();
        int int4 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str7 = python3Target1.getTargetStringLiteralFromString("_tset\"hi!\"", false);
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = python3Target1.getCodeGenerator();
        boolean boolean9 = python3Target1.templatesExist();
        java.lang.String str11 = python3Target1.getListLabel("\"hi!\"Context");
        java.lang.String str13 = python3Target1.getListLabel("_tset");
        boolean boolean14 = python3Target1.templatesExist();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 64 + "'", int4 == 64);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "_tset\\\"hi!\\\"" + "'", str7, "_tset\\\"hi!\\\"");
        org.junit.Assert.assertNull(codeGenerator8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "\"hi!\"Context" + "'", str11, "\"hi!\"Context");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "_tset" + "'", str13, "_tset");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
    }

    @Test
    public void test1079() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1079");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet3 = python3Target1.getBadWords();
        int int4 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str6 = python3Target1.getAltLabelContextStructName("\"hi!\"");
        boolean boolean7 = python3Target1.templatesExist();
        int int8 = python3Target1.getSerializedATNSegmentLimit();
        org.antlr.v4.codegen.CodeGenerator codeGenerator9 = null;
        java.lang.String str12 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator9, "_tset\"_Python3\"", true);
        java.lang.String str13 = python3Target1.getLanguage();
        java.lang.String str14 = python3Target1.getVersion();
        java.lang.String str16 = python3Target1.getAltLabelContextStructName("\"\\\"_Python3\\\"\"Context");
        int int17 = python3Target1.getInlineTestSetWordSize();
        org.antlr.v4.tool.Rule rule18 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str19 = python3Target1.getRuleFunctionContextStructName(rule18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 64 + "'", int4 == 64);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\"hi!\"Context" + "'", str6, "\"hi!\"Context");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 29 + "'", int8 == 29);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "\"tset\\\"_Python3\"" + "'", str12, "\"tset\\\"_Python3\"");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Python3" + "'", str13, "Python3");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "4.5.2.1" + "'", str14, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "\"\\\"_Python3\\\"\"ContextContext" + "'", str16, "\"\\\"_Python3\\\"\"ContextContext");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 64 + "'", int17 == 64);
    }

    @Test
    public void test1080() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1080");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet3 = python3Target1.getBadWords();
        boolean boolean4 = python3Target1.supportsOverloadedMethods();
        boolean boolean5 = python3Target1.wantsBaseVisitor();
        boolean boolean6 = python3Target1.templatesExist();
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = python3Target1.getCodeGenerator();
        int int8 = python3Target1.getSerializedATNSegmentLimit();
        int int9 = python3Target1.getInlineTestSetWordSize();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str11 = python3Target1.getElementListName("\"set_\\\"hi!\\\"Cont\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(codeGenerator7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 29 + "'", int8 == 29);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 64 + "'", int9 == 64);
    }

    @Test
    public void test1081() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1081");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet3 = python3Target1.getBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator4 = null;
        java.lang.String str7 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator4, "\"hi!\"", true);
        java.lang.String str9 = python3Target1.getTargetStringLiteralFromString("\"tset_\\\\\\\"hi!\\\\\\\"Contex\"Context");
        boolean boolean10 = python3Target1.templatesExist();
        org.antlr.v4.tool.Rule rule11 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str12 = python3Target1.getRuleFunctionContextStructName(rule11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "\"hi!\"" + "'", str7, "\"hi!\"");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\"\\\"tset_\\\\\\\\\\\\\\\"hi!\\\\\\\\\\\\\\\"Contex\\\"Context\"" + "'", str9, "\"\\\"tset_\\\\\\\\\\\\\\\"hi!\\\\\\\\\\\\\\\"Contex\\\"Context\"");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
    }

    @Test
    public void test1082() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1082");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet3 = python3Target1.getBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator4 = null;
        java.lang.String str7 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator4, "\"hi!\"", true);
        java.lang.String str9 = python3Target1.getListLabel("_tset\\\"hi!\\\"");
        boolean boolean10 = python3Target1.supportsOverloadedMethods();
        java.lang.String str11 = python3Target1.getLanguage();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "\"hi!\"" + "'", str7, "\"hi!\"");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "_tset\\\"hi!\\\"" + "'", str9, "_tset\\\"hi!\\\"");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Python3" + "'", str11, "Python3");
    }

    @Test
    public void test1083() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1083");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet3 = python3Target1.getBadWords();
        boolean boolean4 = python3Target1.wantsBaseListener();
        java.util.Set<java.lang.String> strSet5 = python3Target1.getBadWords();
        boolean boolean6 = python3Target1.templatesExist();
        java.lang.String str7 = python3Target1.getLanguage();
        org.antlr.v4.tool.Grammar grammar8 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str10 = python3Target1.getTokenTypeAsTargetLabel(grammar8, 29);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Python3" + "'", str7, "Python3");
    }

    @Test
    public void test1084() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1084");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet3 = python3Target1.getBadWords();
        int int4 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str7 = python3Target1.getTargetStringLiteralFromString("_tset\"hi!\"", false);
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = python3Target1.getCodeGenerator();
        boolean boolean9 = python3Target1.templatesExist();
        org.antlr.v4.tool.Grammar grammar10 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator11 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target12 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator11);
        int int13 = python3Target12.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet14 = python3Target12.getBadWords();
        int int15 = python3Target12.getInlineTestSetWordSize();
        org.antlr.v4.codegen.CodeGenerator codeGenerator16 = python3Target12.getCodeGenerator();
        java.lang.String str18 = python3Target12.getImplicitSetLabel("_\"hi!\"Context");
        java.lang.String str20 = python3Target12.getImplicitSetLabel("_tset");
        java.lang.String str22 = python3Target12.getImplicitSetLabel("\"\\\"Python3\\\"Context\"");
        int int23 = python3Target12.getSerializedATNSegmentLimit();
        org.antlr.v4.tool.Grammar grammar24 = null;
        int[] intArray25 = new int[] {};
        java.lang.String[] strArray26 = python3Target12.getTokenTypesAsTargetLabels(grammar24, intArray25);
        java.lang.String[] strArray27 = python3Target1.getTokenTypesAsTargetLabels(grammar10, intArray25);
        org.antlr.v4.tool.ast.GrammarAST grammarAST28 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str29 = python3Target1.getLoopLabel(grammarAST28);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 64 + "'", int4 == 64);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "_tset\\\"hi!\\\"" + "'", str7, "_tset\\\"hi!\\\"");
        org.junit.Assert.assertNull(codeGenerator8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 64 + "'", int13 == 64);
        org.junit.Assert.assertNotNull(strSet14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 64 + "'", int15 == 64);
        org.junit.Assert.assertNull(codeGenerator16);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "_tset_\"hi!\"Context" + "'", str18, "_tset_\"hi!\"Context");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "_tset_tset" + "'", str20, "_tset_tset");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "_tset\"\\\"Python3\\\"Context\"" + "'", str22, "_tset\"\\\"Python3\\\"Context\"");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 29 + "'", int23 == 29);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[]");
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertNotNull(strArray27);
    }

    @Test
    public void test1085() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1085");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet3 = python3Target1.getBadWords();
        java.lang.String str4 = python3Target1.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator5 = python3Target1.getCodeGenerator();
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = python3Target1.getCodeGenerator();
        java.lang.String str8 = python3Target1.getImplicitSetLabel("\"\\\"_\\\"hi!\\\"Contex\"Context");
        int int9 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str12 = python3Target1.getTargetStringLiteralFromString("tset_\\\"hi!\\\"Contex", true);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Python3" + "'", str4, "Python3");
        org.junit.Assert.assertNull(codeGenerator5);
        org.junit.Assert.assertNull(codeGenerator6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "_tset\"\\\"_\\\"hi!\\\"Contex\"Context" + "'", str8, "_tset\"\\\"_\\\"hi!\\\"Contex\"Context");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 64 + "'", int9 == 64);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "\"tset_\\\\\\\"hi!\\\\\\\"Contex\"" + "'", str12, "\"tset_\\\\\\\"hi!\\\\\\\"Contex\"");
    }

    @Test
    public void test1086() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1086");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str4 = python3Target1.getImplicitSetLabel("\"hi!\"");
        java.lang.String str6 = python3Target1.encodeIntAsCharEscape(0);
        java.lang.String str7 = python3Target1.getVersion();
        java.lang.String str9 = python3Target1.getTargetStringLiteralFromString("hi!");
        boolean boolean10 = python3Target1.templatesExist();
        boolean boolean11 = python3Target1.supportsOverloadedMethods();
        boolean boolean12 = python3Target1.supportsOverloadedMethods();
        org.antlr.v4.codegen.CodeGenerator codeGenerator13 = null;
        java.lang.String str16 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator13, "tset\\\"\\\"Python3\\\"Context", false);
        java.lang.String str19 = python3Target1.getTargetStringLiteralFromString("tset\\\"hi!", true);
        boolean boolean20 = python3Target1.wantsBaseListener();
        org.antlr.v4.tool.ast.GrammarAST grammarAST21 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str22 = python3Target1.getLoopLabel(grammarAST21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "_tset\"hi!\"" + "'", str4, "_tset\"hi!\"");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\\0" + "'", str6, "\\0");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "4.5.2.1" + "'", str7, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\"hi!\"" + "'", str9, "\"hi!\"");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "set\\\"\\\"Python3\\\"Contex" + "'", str16, "set\\\"\\\"Python3\\\"Contex");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "\"tset\\\\\\\"hi!\"" + "'", str19, "\"tset\\\\\\\"hi!\"");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    }

    @Test
    public void test1087() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1087");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.supportsOverloadedMethods();
        java.util.Set<java.lang.String> strSet3 = python3Target1.getBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator4 = python3Target1.getCodeGenerator();
        java.lang.String str6 = python3Target1.getAltLabelContextStructName("\"\\\"_\\\"hi!\\\"Contex\"");
        java.lang.String str8 = python3Target1.getListLabel("_tset\"\\\"_\\\"hi!\\\"Contex\"");
        int int9 = python3Target1.getInlineTestSetWordSize();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNull(codeGenerator4);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\"\\\"_\\\"hi!\\\"Contex\"Context" + "'", str6, "\"\\\"_\\\"hi!\\\"Contex\"Context");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "_tset\"\\\"_\\\"hi!\\\"Contex\"" + "'", str8, "_tset\"\\\"_\\\"hi!\\\"Contex\"");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 64 + "'", int9 == 64);
    }

    @Test
    public void test1088() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1088");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet3 = python3Target1.getBadWords();
        java.lang.String str4 = python3Target1.getLanguage();
        java.lang.String str6 = python3Target1.getImplicitSetLabel("_tset_\"hi!\"Context");
        java.lang.String str8 = python3Target1.getListLabel("_tsettset\\\"hi!");
        org.antlr.v4.tool.ast.GrammarAST grammarAST9 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str10 = python3Target1.getLoopCounter(grammarAST9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Python3" + "'", str4, "Python3");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "_tset_tset_\"hi!\"Context" + "'", str6, "_tset_tset_\"hi!\"Context");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "_tsettset\\\"hi!" + "'", str8, "_tsettset\\\"hi!");
    }

    @Test
    public void test1089() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1089");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        org.antlr.v4.codegen.CodeGenerator codeGenerator2 = null;
        java.lang.String str5 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator2, "4.5.2.1", true);
        java.lang.String str7 = python3Target1.getTargetStringLiteralFromString("\"tset\\\"_Python3\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = python3Target1.getCodeGenerator();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str10 = python3Target1.getElementListName("\"tset_\\\\\\\"hi!\\\\\\\"Contex\"Context");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "\".5.2.\"" + "'", str5, "\".5.2.\"");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "\"\\\"tset\\\\\\\"_Python3\\\"\"" + "'", str7, "\"\\\"tset\\\\\\\"_Python3\\\"\"");
        org.junit.Assert.assertNull(codeGenerator8);
    }

    @Test
    public void test1090() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1090");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet3 = python3Target1.getBadWords();
        int int4 = python3Target1.getInlineTestSetWordSize();
        org.antlr.v4.codegen.CodeGenerator codeGenerator5 = python3Target1.getCodeGenerator();
        java.lang.String str6 = python3Target1.getLanguage();
        java.lang.String str8 = python3Target1.getListLabel("tset\\\"hi!");
        org.stringtemplate.v4.STGroup sTGroup9 = python3Target1.getTemplates();
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = null;
        java.lang.String str13 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator10, "_tset_\"hi!\"Context", false);
        java.lang.String str15 = python3Target1.getImplicitSetLabel("4.5.2.1");
        boolean boolean16 = python3Target1.supportsOverloadedMethods();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 64 + "'", int4 == 64);
        org.junit.Assert.assertNull(codeGenerator5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Python3" + "'", str6, "Python3");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "tset\\\"hi!" + "'", str8, "tset\\\"hi!");
        org.junit.Assert.assertNotNull(sTGroup9);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "tset_\\\"hi!\\\"Contex" + "'", str13, "tset_\\\"hi!\\\"Contex");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "_tset4.5.2.1" + "'", str15, "_tset4.5.2.1");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    }

    @Test
    public void test1091() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1091");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet3 = python3Target1.getBadWords();
        int int4 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str6 = python3Target1.getAltLabelContextStructName("\"hi!\"");
        java.lang.String str7 = python3Target1.getVersion();
        boolean boolean8 = python3Target1.supportsOverloadedMethods();
        java.util.Set<java.lang.String> strSet9 = python3Target1.getBadWords();
        boolean boolean10 = python3Target1.supportsOverloadedMethods();
        java.lang.String str13 = python3Target1.getTargetStringLiteralFromString("_tset", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator14 = python3Target1.getCodeGenerator();
        org.antlr.v4.tool.Grammar grammar15 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator16 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target17 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator16);
        int int18 = python3Target17.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet19 = python3Target17.getBadWords();
        int int20 = python3Target17.getInlineTestSetWordSize();
        java.lang.String str23 = python3Target17.getTargetStringLiteralFromString("_tset\"hi!\"", false);
        org.antlr.v4.codegen.CodeGenerator codeGenerator24 = python3Target17.getCodeGenerator();
        boolean boolean25 = python3Target17.templatesExist();
        org.antlr.v4.tool.Grammar grammar26 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator27 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target28 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator27);
        int int29 = python3Target28.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet30 = python3Target28.getBadWords();
        int int31 = python3Target28.getInlineTestSetWordSize();
        org.antlr.v4.codegen.CodeGenerator codeGenerator32 = python3Target28.getCodeGenerator();
        java.lang.String str34 = python3Target28.getImplicitSetLabel("_\"hi!\"Context");
        java.lang.String str36 = python3Target28.getImplicitSetLabel("_tset");
        java.lang.String str38 = python3Target28.getImplicitSetLabel("\"\\\"Python3\\\"Context\"");
        int int39 = python3Target28.getSerializedATNSegmentLimit();
        org.antlr.v4.tool.Grammar grammar40 = null;
        int[] intArray41 = new int[] {};
        java.lang.String[] strArray42 = python3Target28.getTokenTypesAsTargetLabels(grammar40, intArray41);
        java.lang.String[] strArray43 = python3Target17.getTokenTypesAsTargetLabels(grammar26, intArray41);
        java.lang.String[] strArray44 = python3Target1.getTokenTypesAsTargetLabels(grammar15, intArray41);
        int int45 = python3Target1.getSerializedATNSegmentLimit();
        org.antlr.v4.tool.ast.GrammarAST grammarAST46 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str47 = python3Target1.getLoopCounter(grammarAST46);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 64 + "'", int4 == 64);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\"hi!\"Context" + "'", str6, "\"hi!\"Context");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "4.5.2.1" + "'", str7, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(strSet9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "\"_tset\"" + "'", str13, "\"_tset\"");
        org.junit.Assert.assertNull(codeGenerator14);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 64 + "'", int18 == 64);
        org.junit.Assert.assertNotNull(strSet19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 64 + "'", int20 == 64);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "_tset\\\"hi!\\\"" + "'", str23, "_tset\\\"hi!\\\"");
        org.junit.Assert.assertNull(codeGenerator24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 64 + "'", int29 == 64);
        org.junit.Assert.assertNotNull(strSet30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 64 + "'", int31 == 64);
        org.junit.Assert.assertNull(codeGenerator32);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "_tset_\"hi!\"Context" + "'", str34, "_tset_\"hi!\"Context");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "_tset_tset" + "'", str36, "_tset_tset");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "_tset\"\\\"Python3\\\"Context\"" + "'", str38, "_tset\"\\\"Python3\\\"Context\"");
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 29 + "'", int39 == 29);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[]");
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 29 + "'", int45 == 29);
    }

    @Test
    public void test1092() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1092");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.supportsOverloadedMethods();
        java.lang.String str4 = python3Target1.getListLabel("\"_Python3\"");
        java.lang.String str6 = python3Target1.getAltLabelContextStructName("\\0");
        java.lang.String str8 = python3Target1.getAltLabelContextStructName("_Python3");
        java.lang.String str10 = python3Target1.encodeIntAsCharEscape((int) '#');
        boolean boolean11 = python3Target1.supportsOverloadedMethods();
        int int12 = python3Target1.getSerializedATNSegmentLimit();
        org.antlr.v4.tool.Grammar grammar13 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator14 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target15 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator14);
        int int16 = python3Target15.getInlineTestSetWordSize();
        java.lang.String str18 = python3Target15.getImplicitSetLabel("\"hi!\"");
        java.lang.String str20 = python3Target15.encodeIntAsCharEscape(0);
        java.lang.String str21 = python3Target15.getVersion();
        java.lang.String str23 = python3Target15.getTargetStringLiteralFromString("hi!");
        boolean boolean24 = python3Target15.templatesExist();
        java.lang.String str26 = python3Target15.getImplicitRuleLabel("tset_\\\"hi!\\\"Contex");
        boolean boolean27 = python3Target15.wantsBaseVisitor();
        boolean boolean28 = python3Target15.templatesExist();
        java.lang.String str29 = python3Target15.getLanguage();
        org.antlr.v4.tool.Grammar grammar30 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator31 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target32 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator31);
        int int33 = python3Target32.getInlineTestSetWordSize();
        java.lang.String str35 = python3Target32.getImplicitSetLabel("\"hi!\"");
        java.lang.String str37 = python3Target32.encodeIntAsCharEscape(0);
        java.lang.String str38 = python3Target32.getVersion();
        java.lang.String str41 = python3Target32.getTargetStringLiteralFromString("Python3", true);
        java.lang.String str43 = python3Target32.getImplicitRuleLabel("\"Python3\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator44 = python3Target32.getCodeGenerator();
        org.antlr.v4.tool.Grammar grammar45 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator46 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target47 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator46);
        org.antlr.v4.codegen.CodeGenerator codeGenerator48 = null;
        java.lang.String str51 = python3Target47.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator48, "4.5.2.1", true);
        boolean boolean52 = python3Target47.templatesExist();
        org.antlr.v4.tool.Grammar grammar53 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator54 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target55 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator54);
        int int56 = python3Target55.getInlineTestSetWordSize();
        java.lang.String str58 = python3Target55.getImplicitSetLabel("\"hi!\"");
        java.lang.String str60 = python3Target55.encodeIntAsCharEscape(0);
        java.lang.String str61 = python3Target55.getVersion();
        java.lang.String str63 = python3Target55.getTargetStringLiteralFromString("hi!");
        org.antlr.v4.tool.Grammar grammar64 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator65 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target66 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator65);
        boolean boolean67 = python3Target66.supportsOverloadedMethods();
        java.lang.String str69 = python3Target66.getTargetStringLiteralFromString("_Python3");
        org.antlr.v4.tool.Grammar grammar70 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator71 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target72 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator71);
        int int73 = python3Target72.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet74 = python3Target72.getBadWords();
        int int75 = python3Target72.getInlineTestSetWordSize();
        org.antlr.v4.codegen.CodeGenerator codeGenerator76 = python3Target72.getCodeGenerator();
        java.lang.String str78 = python3Target72.getImplicitSetLabel("_\"hi!\"Context");
        java.lang.String str80 = python3Target72.getImplicitSetLabel("_tset");
        java.lang.String str82 = python3Target72.getImplicitSetLabel("\"\\\"Python3\\\"Context\"");
        int int83 = python3Target72.getSerializedATNSegmentLimit();
        org.antlr.v4.tool.Grammar grammar84 = null;
        int[] intArray85 = new int[] {};
        java.lang.String[] strArray86 = python3Target72.getTokenTypesAsTargetLabels(grammar84, intArray85);
        java.lang.String[] strArray87 = python3Target66.getTokenTypesAsTargetLabels(grammar70, intArray85);
        java.lang.String[] strArray88 = python3Target55.getTokenTypesAsTargetLabels(grammar64, intArray85);
        java.lang.String[] strArray89 = python3Target47.getTokenTypesAsTargetLabels(grammar53, intArray85);
        java.lang.String[] strArray90 = python3Target32.getTokenTypesAsTargetLabels(grammar45, intArray85);
        java.lang.String[] strArray91 = python3Target15.getTokenTypesAsTargetLabels(grammar30, intArray85);
        java.lang.String[] strArray92 = python3Target1.getTokenTypesAsTargetLabels(grammar13, intArray85);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "\"_Python3\"" + "'", str4, "\"_Python3\"");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\\0Context" + "'", str6, "\\0Context");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "_Python3Context" + "'", str8, "_Python3Context");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "#" + "'", str10, "#");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 29 + "'", int12 == 29);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 64 + "'", int16 == 64);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "_tset\"hi!\"" + "'", str18, "_tset\"hi!\"");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "\\0" + "'", str20, "\\0");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "4.5.2.1" + "'", str21, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "\"hi!\"" + "'", str23, "\"hi!\"");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "_tset_\\\"hi!\\\"Contex" + "'", str26, "_tset_\\\"hi!\\\"Contex");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "Python3" + "'", str29, "Python3");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 64 + "'", int33 == 64);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "_tset\"hi!\"" + "'", str35, "_tset\"hi!\"");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "\\0" + "'", str37, "\\0");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "4.5.2.1" + "'", str38, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "\"Python3\"" + "'", str41, "\"Python3\"");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "_\"Python3\"" + "'", str43, "_\"Python3\"");
        org.junit.Assert.assertNull(codeGenerator44);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "\".5.2.\"" + "'", str51, "\".5.2.\"");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 64 + "'", int56 == 64);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "_tset\"hi!\"" + "'", str58, "_tset\"hi!\"");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "\\0" + "'", str60, "\\0");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "4.5.2.1" + "'", str61, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "\"hi!\"" + "'", str63, "\"hi!\"");
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "\"_Python3\"" + "'", str69, "\"_Python3\"");
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 64 + "'", int73 == 64);
        org.junit.Assert.assertNotNull(strSet74);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 64 + "'", int75 == 64);
        org.junit.Assert.assertNull(codeGenerator76);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "_tset_\"hi!\"Context" + "'", str78, "_tset_\"hi!\"Context");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "_tset_tset" + "'", str80, "_tset_tset");
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "_tset\"\\\"Python3\\\"Context\"" + "'", str82, "_tset\"\\\"Python3\\\"Context\"");
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 29 + "'", int83 == 29);
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[]");
        org.junit.Assert.assertNotNull(strArray86);
        org.junit.Assert.assertNotNull(strArray87);
        org.junit.Assert.assertNotNull(strArray88);
        org.junit.Assert.assertNotNull(strArray89);
        org.junit.Assert.assertNotNull(strArray90);
        org.junit.Assert.assertNotNull(strArray91);
        org.junit.Assert.assertNotNull(strArray92);
    }

    @Test
    public void test1093() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1093");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet3 = python3Target1.getBadWords();
        int int4 = python3Target1.getInlineTestSetWordSize();
        org.antlr.v4.codegen.CodeGenerator codeGenerator5 = python3Target1.getCodeGenerator();
        java.lang.String str6 = python3Target1.getLanguage();
        java.lang.String str8 = python3Target1.getListLabel("tset\\\"hi!");
        org.stringtemplate.v4.STGroup sTGroup9 = python3Target1.getTemplates();
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = null;
        java.lang.String str13 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator10, "_tset_\"hi!\"Context", false);
        org.antlr.v4.codegen.CodeGenerator codeGenerator14 = python3Target1.getCodeGenerator();
        org.antlr.v4.tool.ast.GrammarAST grammarAST15 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str16 = python3Target1.getLoopCounter(grammarAST15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 64 + "'", int4 == 64);
        org.junit.Assert.assertNull(codeGenerator5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Python3" + "'", str6, "Python3");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "tset\\\"hi!" + "'", str8, "tset\\\"hi!");
        org.junit.Assert.assertNotNull(sTGroup9);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "tset_\\\"hi!\\\"Contex" + "'", str13, "tset_\\\"hi!\\\"Contex");
        org.junit.Assert.assertNull(codeGenerator14);
    }

    @Test
    public void test1094() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1094");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet3 = python3Target1.getBadWords();
        java.lang.String str4 = python3Target1.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator5 = python3Target1.getCodeGenerator();
        org.stringtemplate.v4.STGroup sTGroup6 = python3Target1.getTemplates();
        boolean boolean7 = python3Target1.supportsOverloadedMethods();
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = null;
        java.lang.String str11 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator8, "tset\\\"hi!", false);
        java.lang.String str13 = python3Target1.getListLabel("_tset_\\\"hi!\\\"Contex");
        org.antlr.v4.codegen.CodeGenerator codeGenerator14 = null;
        java.lang.String str17 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator14, "#", false);
        int int18 = python3Target1.getSerializedATNSegmentLimit();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str20 = python3Target1.getElementName("\"_tset\\\"_Python3\\\"\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Python3" + "'", str4, "Python3");
        org.junit.Assert.assertNull(codeGenerator5);
        org.junit.Assert.assertNotNull(sTGroup6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "set\\\"hi" + "'", str11, "set\\\"hi");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "_tset_\\\"hi!\\\"Contex" + "'", str13, "_tset_\\\"hi!\\\"Contex");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 29 + "'", int18 == 29);
    }

    @Test
    public void test1095() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1095");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet3 = python3Target1.getBadWords();
        int int4 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str7 = python3Target1.getTargetStringLiteralFromString("_tset\"hi!\"", false);
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = python3Target1.getCodeGenerator();
        boolean boolean9 = python3Target1.supportsOverloadedMethods();
        boolean boolean10 = python3Target1.supportsOverloadedMethods();
        boolean boolean11 = python3Target1.wantsBaseVisitor();
        java.lang.String str13 = python3Target1.getTargetStringLiteralFromString("\"_Python3\"");
        java.lang.String str15 = python3Target1.getListLabel("\"\\\"_\\\"hi!\\\"Contex\"");
        java.util.Set<java.lang.String> strSet16 = python3Target1.getBadWords();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 64 + "'", int4 == 64);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "_tset\\\"hi!\\\"" + "'", str7, "_tset\\\"hi!\\\"");
        org.junit.Assert.assertNull(codeGenerator8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "\"\\\"_Python3\\\"\"" + "'", str13, "\"\\\"_Python3\\\"\"");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "\"\\\"_\\\"hi!\\\"Contex\"" + "'", str15, "\"\\\"_\\\"hi!\\\"Contex\"");
        org.junit.Assert.assertNotNull(strSet16);
    }

    @Test
    public void test1096() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1096");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getSerializedATNSegmentLimit();
        int int3 = python3Target1.getInlineTestSetWordSize();
        int int4 = python3Target1.getSerializedATNSegmentLimit();
        org.antlr.v4.codegen.CodeGenerator codeGenerator5 = python3Target1.getCodeGenerator();
        java.lang.String str6 = python3Target1.getLanguage();
        java.lang.String str8 = python3Target1.getAltLabelContextStructName("\"\\\"\\\\\\\"Python3\\\\\\\"Context\\\"\"");
        java.lang.Class<?> wildcardClass9 = python3Target1.getClass();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 29 + "'", int2 == 29);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 64 + "'", int3 == 64);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 29 + "'", int4 == 29);
        org.junit.Assert.assertNull(codeGenerator5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Python3" + "'", str6, "Python3");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\"\\\"\\\\\\\"Python3\\\\\\\"Context\\\"\"Context" + "'", str8, "\"\\\"\\\\\\\"Python3\\\\\\\"Context\\\"\"Context");
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test1097() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1097");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet3 = python3Target1.getBadWords();
        int int4 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str7 = python3Target1.getTargetStringLiteralFromString("_tset\"hi!\"", false);
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = python3Target1.getCodeGenerator();
        boolean boolean9 = python3Target1.supportsOverloadedMethods();
        boolean boolean10 = python3Target1.supportsOverloadedMethods();
        java.lang.String str11 = python3Target1.getVersion();
        java.lang.String str12 = python3Target1.getLanguage();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 64 + "'", int4 == 64);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "_tset\\\"hi!\\\"" + "'", str7, "_tset\\\"hi!\\\"");
        org.junit.Assert.assertNull(codeGenerator8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "4.5.2.1" + "'", str11, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Python3" + "'", str12, "Python3");
    }

    @Test
    public void test1098() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1098");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet3 = python3Target1.getBadWords();
        int int4 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str6 = python3Target1.getAltLabelContextStructName("\"hi!\"");
        java.lang.String str7 = python3Target1.getVersion();
        java.lang.String str9 = python3Target1.getImplicitRuleLabel("");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str11 = python3Target1.getElementName("\"et_\\\"hi!\\\"Cont\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 64 + "'", int4 == 64);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\"hi!\"Context" + "'", str6, "\"hi!\"Context");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "4.5.2.1" + "'", str7, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "_" + "'", str9, "_");
    }

    @Test
    public void test1099() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1099");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str4 = python3Target1.getImplicitSetLabel("\"hi!\"");
        java.lang.String str6 = python3Target1.encodeIntAsCharEscape(0);
        java.lang.String str7 = python3Target1.getVersion();
        java.lang.String str9 = python3Target1.getTargetStringLiteralFromString("hi!");
        java.lang.String str11 = python3Target1.getListLabel("");
        java.lang.String str12 = python3Target1.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator13 = null;
        java.lang.String str16 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator13, "_tset_tset_\"hi!\"Context", false);
        org.stringtemplate.v4.STGroup sTGroup17 = python3Target1.getTemplates();
        org.antlr.v4.tool.Grammar grammar18 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator19 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target20 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator19);
        int int21 = python3Target20.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet22 = python3Target20.getBadWords();
        boolean boolean23 = python3Target20.wantsBaseListener();
        int int24 = python3Target20.getSerializedATNSegmentLimit();
        boolean boolean25 = python3Target20.wantsBaseVisitor();
        org.antlr.v4.tool.Grammar grammar26 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator27 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target28 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator27);
        int int29 = python3Target28.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet30 = python3Target28.getBadWords();
        int int31 = python3Target28.getInlineTestSetWordSize();
        org.antlr.v4.codegen.CodeGenerator codeGenerator32 = python3Target28.getCodeGenerator();
        java.lang.String str34 = python3Target28.getImplicitSetLabel("_\"hi!\"Context");
        java.lang.String str36 = python3Target28.getImplicitSetLabel("_tset");
        java.lang.String str38 = python3Target28.getImplicitSetLabel("\"\\\"Python3\\\"Context\"");
        int int39 = python3Target28.getSerializedATNSegmentLimit();
        org.antlr.v4.tool.Grammar grammar40 = null;
        int[] intArray41 = new int[] {};
        java.lang.String[] strArray42 = python3Target28.getTokenTypesAsTargetLabels(grammar40, intArray41);
        java.lang.String[] strArray43 = python3Target20.getTokenTypesAsTargetLabels(grammar26, intArray41);
        java.lang.String[] strArray44 = python3Target1.getTokenTypesAsTargetLabels(grammar18, intArray41);
        boolean boolean45 = python3Target1.templatesExist();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "_tset\"hi!\"" + "'", str4, "_tset\"hi!\"");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\\0" + "'", str6, "\\0");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "4.5.2.1" + "'", str7, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\"hi!\"" + "'", str9, "\"hi!\"");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "4.5.2.1" + "'", str12, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "tset_tset_\\\"hi!\\\"Contex" + "'", str16, "tset_tset_\\\"hi!\\\"Contex");
        org.junit.Assert.assertNotNull(sTGroup17);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 64 + "'", int21 == 64);
        org.junit.Assert.assertNotNull(strSet22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 29 + "'", int24 == 29);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 64 + "'", int29 == 64);
        org.junit.Assert.assertNotNull(strSet30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 64 + "'", int31 == 64);
        org.junit.Assert.assertNull(codeGenerator32);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "_tset_\"hi!\"Context" + "'", str34, "_tset_\"hi!\"Context");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "_tset_tset" + "'", str36, "_tset_tset");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "_tset\"\\\"Python3\\\"Context\"" + "'", str38, "_tset\"\\\"Python3\\\"Context\"");
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 29 + "'", int39 == 29);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[]");
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
    }

    @Test
    public void test1100() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1100");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet3 = python3Target1.getBadWords();
        int int4 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str7 = python3Target1.getTargetStringLiteralFromString("_tset\"hi!\"", false);
        boolean boolean8 = python3Target1.supportsOverloadedMethods();
        org.antlr.v4.codegen.CodeGenerator codeGenerator9 = null;
        java.lang.String str12 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator9, "\".5.2.\"", false);
        java.lang.String str13 = python3Target1.getLanguage();
        org.antlr.v4.tool.ast.GrammarAST grammarAST14 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str15 = python3Target1.getLoopLabel(grammarAST14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 64 + "'", int4 == 64);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "_tset\\\"hi!\\\"" + "'", str7, "_tset\\\"hi!\\\"");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + ".5.2." + "'", str12, ".5.2.");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Python3" + "'", str13, "Python3");
    }

    @Test
    public void test1101() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1101");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str4 = python3Target1.getImplicitSetLabel("\"hi!\"");
        java.lang.String str6 = python3Target1.encodeIntAsCharEscape(0);
        java.lang.String str7 = python3Target1.getVersion();
        java.lang.String str9 = python3Target1.getImplicitRuleLabel("Python3");
        java.lang.String str12 = python3Target1.getTargetStringLiteralFromString("\"hi!\"", true);
        java.lang.String str13 = python3Target1.getLanguage();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "_tset\"hi!\"" + "'", str4, "_tset\"hi!\"");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\\0" + "'", str6, "\\0");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "4.5.2.1" + "'", str7, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "_Python3" + "'", str9, "_Python3");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "\"\\\"hi!\\\"\"" + "'", str12, "\"\\\"hi!\\\"\"");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Python3" + "'", str13, "Python3");
    }

    @Test
    public void test1102() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1102");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str5 = python3Target1.getTargetStringLiteralFromString("", false);
        java.util.Set<java.lang.String> strSet6 = python3Target1.getBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = python3Target1.getCodeGenerator();
        org.stringtemplate.v4.STGroup sTGroup8 = python3Target1.getTemplates();
        java.lang.String str9 = python3Target1.getLanguage();
        int int10 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str12 = python3Target1.getImplicitRuleLabel("_tset\"\\\"_Python3\\\"\"ContextContext");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNotNull(strSet6);
        org.junit.Assert.assertNull(codeGenerator7);
        org.junit.Assert.assertNotNull(sTGroup8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Python3" + "'", str9, "Python3");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 64 + "'", int10 == 64);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "__tset\"\\\"_Python3\\\"\"ContextContext" + "'", str12, "__tset\"\\\"_Python3\\\"\"ContextContext");
    }

    @Test
    public void test1103() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1103");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet3 = python3Target1.getBadWords();
        int int4 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str6 = python3Target1.getAltLabelContextStructName("\"hi!\"");
        boolean boolean7 = python3Target1.templatesExist();
        int int8 = python3Target1.getSerializedATNSegmentLimit();
        boolean boolean9 = python3Target1.wantsBaseVisitor();
        java.lang.String str11 = python3Target1.getAltLabelContextStructName("\"\\\"hi!\\\"\"");
        java.lang.String str14 = python3Target1.getTargetStringLiteralFromString("_Python3Context", true);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 64 + "'", int4 == 64);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\"hi!\"Context" + "'", str6, "\"hi!\"Context");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 29 + "'", int8 == 29);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "\"\\\"hi!\\\"\"Context" + "'", str11, "\"\\\"hi!\\\"\"Context");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "\"_Python3Context\"" + "'", str14, "\"_Python3Context\"");
    }

    @Test
    public void test1104() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1104");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        org.antlr.v4.codegen.CodeGenerator codeGenerator2 = null;
        java.lang.String str5 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator2, "4.5.2.1", true);
        java.lang.String str6 = python3Target1.getLanguage();
        java.lang.String str8 = python3Target1.getImplicitRuleLabel("\"\\\"_\\\"hi!\\\"Contex\"");
        boolean boolean9 = python3Target1.wantsBaseListener();
        java.lang.String str11 = python3Target1.getAltLabelContextStructName("__\"\\\"hi!\\\"\"");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "\".5.2.\"" + "'", str5, "\".5.2.\"");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Python3" + "'", str6, "Python3");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "_\"\\\"_\\\"hi!\\\"Contex\"" + "'", str8, "_\"\\\"_\\\"hi!\\\"Contex\"");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "__\"\\\"hi!\\\"\"Context" + "'", str11, "__\"\\\"hi!\\\"\"Context");
    }

    @Test
    public void test1105() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1105");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet3 = python3Target1.getBadWords();
        int int4 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str7 = python3Target1.getTargetStringLiteralFromString("_tset\"hi!\"", false);
        boolean boolean8 = python3Target1.supportsOverloadedMethods();
        java.lang.String str11 = python3Target1.getTargetStringLiteralFromString("\"\\\"hi!\\\"\"Context", false);
        java.lang.String str13 = python3Target1.getListLabel("_\"Python3\"");
        java.lang.String str15 = python3Target1.getTargetStringLiteralFromString("");
        java.lang.String str16 = python3Target1.getLanguage();
        org.antlr.v4.tool.ast.GrammarAST grammarAST17 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str18 = python3Target1.getLoopLabel(grammarAST17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 64 + "'", int4 == 64);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "_tset\\\"hi!\\\"" + "'", str7, "_tset\\\"hi!\\\"");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "\\\"\\\\\\\"hi!\\\\\\\"\\\"Context" + "'", str11, "\\\"\\\\\\\"hi!\\\\\\\"\\\"Context");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "_\"Python3\"" + "'", str13, "_\"Python3\"");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "\"\"" + "'", str15, "\"\"");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Python3" + "'", str16, "Python3");
    }

    @Test
    public void test1106() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1106");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str4 = python3Target1.getImplicitSetLabel("\"hi!\"");
        java.lang.String str6 = python3Target1.encodeIntAsCharEscape(0);
        boolean boolean7 = python3Target1.templatesExist();
        java.lang.String str8 = python3Target1.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator9 = null;
        java.lang.String str12 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator9, "_\"\\\"_\\\"hi!\\\"Contex\"Context", true);
        java.lang.String str14 = python3Target1.encodeIntAsCharEscape((int) (short) 0);
        org.stringtemplate.v4.STGroup sTGroup15 = python3Target1.getTemplates();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "_tset\"hi!\"" + "'", str4, "_tset\"hi!\"");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\\0" + "'", str6, "\\0");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "4.5.2.1" + "'", str8, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "\"\\\"\\\"_\\\"hi!\\\"Contex\\\"Contex\"" + "'", str12, "\"\\\"\\\"_\\\"hi!\\\"Contex\\\"Contex\"");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "\\0" + "'", str14, "\\0");
        org.junit.Assert.assertNotNull(sTGroup15);
    }

    @Test
    public void test1107() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1107");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet3 = python3Target1.getBadWords();
        int int4 = python3Target1.getInlineTestSetWordSize();
        org.antlr.v4.codegen.CodeGenerator codeGenerator5 = python3Target1.getCodeGenerator();
        java.lang.String str6 = python3Target1.getLanguage();
        java.lang.String str8 = python3Target1.getListLabel("tset\\\"hi!");
        org.stringtemplate.v4.STGroup sTGroup9 = python3Target1.getTemplates();
        int int10 = python3Target1.getInlineTestSetWordSize();
        org.antlr.v4.tool.ast.GrammarAST grammarAST11 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean12 = python3Target1.grammarSymbolCausesIssueInGeneratedCode(grammarAST11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 64 + "'", int4 == 64);
        org.junit.Assert.assertNull(codeGenerator5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Python3" + "'", str6, "Python3");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "tset\\\"hi!" + "'", str8, "tset\\\"hi!");
        org.junit.Assert.assertNotNull(sTGroup9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 64 + "'", int10 == 64);
    }

    @Test
    public void test1108() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1108");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str4 = python3Target1.getImplicitSetLabel("\"hi!\"");
        java.lang.String str6 = python3Target1.encodeIntAsCharEscape(0);
        java.lang.String str8 = python3Target1.encodeIntAsCharEscape(100);
        org.antlr.v4.codegen.CodeGenerator codeGenerator9 = null;
        java.lang.String str12 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator9, "\\0Context", true);
        boolean boolean13 = python3Target1.wantsBaseVisitor();
        java.lang.String str16 = python3Target1.getTargetStringLiteralFromString("\"\\\"hi!\\\"\"Context", true);
        boolean boolean17 = python3Target1.wantsBaseVisitor();
        java.lang.String str20 = python3Target1.getTargetStringLiteralFromString("\"hi!\"", false);
        java.lang.String str22 = python3Target1.getTargetStringLiteralFromString("set\\\"hi");
        boolean boolean23 = python3Target1.templatesExist();
        boolean boolean24 = python3Target1.templatesExist();
        org.antlr.v4.codegen.CodeGenerator codeGenerator25 = python3Target1.getCodeGenerator();
        int int26 = python3Target1.getSerializedATNSegmentLimit();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "_tset\"hi!\"" + "'", str4, "_tset\"hi!\"");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\\0" + "'", str6, "\\0");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "d" + "'", str8, "d");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "\"0Contex\"" + "'", str12, "\"0Contex\"");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "\"\\\"\\\\\\\"hi!\\\\\\\"\\\"Context\"" + "'", str16, "\"\\\"\\\\\\\"hi!\\\\\\\"\\\"Context\"");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "\\\"hi!\\\"" + "'", str20, "\\\"hi!\\\"");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "\"set\\\\\\\"hi\"" + "'", str22, "\"set\\\\\\\"hi\"");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(codeGenerator25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 29 + "'", int26 == 29);
    }

    @Test
    public void test1109() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1109");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet3 = python3Target1.getBadWords();
        int int4 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str7 = python3Target1.getTargetStringLiteralFromString("_tset\"hi!\"", false);
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = python3Target1.getCodeGenerator();
        boolean boolean9 = python3Target1.supportsOverloadedMethods();
        java.lang.String str11 = python3Target1.getAltLabelContextStructName("\"Python3\"");
        boolean boolean12 = python3Target1.wantsBaseListener();
        org.stringtemplate.v4.STGroup sTGroup13 = python3Target1.getTemplates();
        boolean boolean14 = python3Target1.wantsBaseVisitor();
        org.antlr.v4.codegen.CodeGenerator codeGenerator15 = python3Target1.getCodeGenerator();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str17 = python3Target1.getImplicitTokenLabel("_\"hi!\"Context");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 64 + "'", int4 == 64);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "_tset\\\"hi!\\\"" + "'", str7, "_tset\\\"hi!\\\"");
        org.junit.Assert.assertNull(codeGenerator8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "\"Python3\"Context" + "'", str11, "\"Python3\"Context");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(sTGroup13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(codeGenerator15);
    }

    @Test
    public void test1110() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1110");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str4 = python3Target1.getImplicitSetLabel("\"hi!\"");
        java.lang.String str6 = python3Target1.encodeIntAsCharEscape(0);
        boolean boolean7 = python3Target1.supportsOverloadedMethods();
        int int8 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str10 = python3Target1.getImplicitRuleLabel("_tset_\"hi!\"ContextContext");
        org.stringtemplate.v4.STGroup sTGroup11 = python3Target1.getTemplates();
        java.lang.String str12 = python3Target1.getVersion();
        java.lang.String str13 = python3Target1.getLanguage();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "_tset\"hi!\"" + "'", str4, "_tset\"hi!\"");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\\0" + "'", str6, "\\0");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 64 + "'", int8 == 64);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "__tset_\"hi!\"ContextContext" + "'", str10, "__tset_\"hi!\"ContextContext");
        org.junit.Assert.assertNotNull(sTGroup11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "4.5.2.1" + "'", str12, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Python3" + "'", str13, "Python3");
    }

    @Test
    public void test1111() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1111");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet3 = python3Target1.getBadWords();
        java.lang.String str4 = python3Target1.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator5 = python3Target1.getCodeGenerator();
        java.lang.String str7 = python3Target1.getTargetStringLiteralFromString("_Python3");
        int int8 = python3Target1.getSerializedATNSegmentLimit();
        boolean boolean9 = python3Target1.wantsBaseListener();
        java.lang.String str11 = python3Target1.getImplicitSetLabel("tset_\\\"hi!\\\"Contex");
        org.antlr.v4.tool.Grammar grammar12 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator13 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target14 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator13);
        int int15 = python3Target14.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet16 = python3Target14.getBadWords();
        int int17 = python3Target14.getInlineTestSetWordSize();
        java.lang.String str19 = python3Target14.getAltLabelContextStructName("\"hi!\"");
        boolean boolean20 = python3Target14.templatesExist();
        int int21 = python3Target14.getSerializedATNSegmentLimit();
        org.antlr.v4.codegen.CodeGenerator codeGenerator22 = null;
        java.lang.String str25 = python3Target14.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator22, "_tset\"_Python3\"", true);
        org.antlr.v4.tool.Grammar grammar26 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator27 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target28 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator27);
        int int29 = python3Target28.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet30 = python3Target28.getBadWords();
        int int31 = python3Target28.getInlineTestSetWordSize();
        java.lang.String str34 = python3Target28.getTargetStringLiteralFromString("_tset\"hi!\"", false);
        org.antlr.v4.codegen.CodeGenerator codeGenerator35 = python3Target28.getCodeGenerator();
        boolean boolean36 = python3Target28.supportsOverloadedMethods();
        java.lang.String str38 = python3Target28.getAltLabelContextStructName("\"Python3\"");
        boolean boolean39 = python3Target28.wantsBaseListener();
        int int40 = python3Target28.getInlineTestSetWordSize();
        boolean boolean41 = python3Target28.wantsBaseListener();
        org.antlr.v4.tool.Grammar grammar42 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator43 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target44 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator43);
        int int45 = python3Target44.getInlineTestSetWordSize();
        java.lang.String str47 = python3Target44.getImplicitSetLabel("\"hi!\"");
        java.lang.String str49 = python3Target44.encodeIntAsCharEscape(0);
        java.lang.String str50 = python3Target44.getVersion();
        java.lang.String str52 = python3Target44.getTargetStringLiteralFromString("hi!");
        org.antlr.v4.tool.Grammar grammar53 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator54 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target55 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator54);
        boolean boolean56 = python3Target55.supportsOverloadedMethods();
        java.lang.String str58 = python3Target55.getTargetStringLiteralFromString("_Python3");
        org.antlr.v4.tool.Grammar grammar59 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator60 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target61 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator60);
        int int62 = python3Target61.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet63 = python3Target61.getBadWords();
        int int64 = python3Target61.getInlineTestSetWordSize();
        org.antlr.v4.codegen.CodeGenerator codeGenerator65 = python3Target61.getCodeGenerator();
        java.lang.String str67 = python3Target61.getImplicitSetLabel("_\"hi!\"Context");
        java.lang.String str69 = python3Target61.getImplicitSetLabel("_tset");
        java.lang.String str71 = python3Target61.getImplicitSetLabel("\"\\\"Python3\\\"Context\"");
        int int72 = python3Target61.getSerializedATNSegmentLimit();
        org.antlr.v4.tool.Grammar grammar73 = null;
        int[] intArray74 = new int[] {};
        java.lang.String[] strArray75 = python3Target61.getTokenTypesAsTargetLabels(grammar73, intArray74);
        java.lang.String[] strArray76 = python3Target55.getTokenTypesAsTargetLabels(grammar59, intArray74);
        java.lang.String[] strArray77 = python3Target44.getTokenTypesAsTargetLabels(grammar53, intArray74);
        java.lang.String[] strArray78 = python3Target28.getTokenTypesAsTargetLabels(grammar42, intArray74);
        java.lang.String[] strArray79 = python3Target14.getTokenTypesAsTargetLabels(grammar26, intArray74);
        java.lang.String[] strArray80 = python3Target1.getTokenTypesAsTargetLabels(grammar12, intArray74);
        java.lang.String str82 = python3Target1.getImplicitRuleLabel("\"_tset\\\"_Python3\\\"\"");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Python3" + "'", str4, "Python3");
        org.junit.Assert.assertNull(codeGenerator5);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "\"_Python3\"" + "'", str7, "\"_Python3\"");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 29 + "'", int8 == 29);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "_tsettset_\\\"hi!\\\"Contex" + "'", str11, "_tsettset_\\\"hi!\\\"Contex");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 64 + "'", int15 == 64);
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 64 + "'", int17 == 64);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "\"hi!\"Context" + "'", str19, "\"hi!\"Context");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 29 + "'", int21 == 29);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "\"tset\\\"_Python3\"" + "'", str25, "\"tset\\\"_Python3\"");
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 64 + "'", int29 == 64);
        org.junit.Assert.assertNotNull(strSet30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 64 + "'", int31 == 64);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "_tset\\\"hi!\\\"" + "'", str34, "_tset\\\"hi!\\\"");
        org.junit.Assert.assertNull(codeGenerator35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "\"Python3\"Context" + "'", str38, "\"Python3\"Context");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 64 + "'", int40 == 64);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 64 + "'", int45 == 64);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "_tset\"hi!\"" + "'", str47, "_tset\"hi!\"");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "\\0" + "'", str49, "\\0");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "4.5.2.1" + "'", str50, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "\"hi!\"" + "'", str52, "\"hi!\"");
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "\"_Python3\"" + "'", str58, "\"_Python3\"");
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 64 + "'", int62 == 64);
        org.junit.Assert.assertNotNull(strSet63);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 64 + "'", int64 == 64);
        org.junit.Assert.assertNull(codeGenerator65);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "_tset_\"hi!\"Context" + "'", str67, "_tset_\"hi!\"Context");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "_tset_tset" + "'", str69, "_tset_tset");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "_tset\"\\\"Python3\\\"Context\"" + "'", str71, "_tset\"\\\"Python3\\\"Context\"");
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 29 + "'", int72 == 29);
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[]");
        org.junit.Assert.assertNotNull(strArray75);
        org.junit.Assert.assertNotNull(strArray76);
        org.junit.Assert.assertNotNull(strArray77);
        org.junit.Assert.assertNotNull(strArray78);
        org.junit.Assert.assertNotNull(strArray79);
        org.junit.Assert.assertNotNull(strArray80);
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "_\"_tset\\\"_Python3\\\"\"" + "'", str82, "_\"_tset\\\"_Python3\\\"\"");
    }

    @Test
    public void test1112() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1112");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.supportsOverloadedMethods();
        java.lang.String str4 = python3Target1.getListLabel("\"_Python3\"");
        java.lang.String str5 = python3Target1.getLanguage();
        java.lang.String str8 = python3Target1.getTargetStringLiteralFromString(" ", true);
        java.lang.String str10 = python3Target1.getTargetStringLiteralFromString("\"__\\\"\\\\\\\"hi!\\\\\\\"\\\"\"");
        org.antlr.v4.codegen.model.RuleFunction ruleFunction11 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str12 = python3Target1.getRuleFunctionContextStructName(ruleFunction11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "\"_Python3\"" + "'", str4, "\"_Python3\"");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Python3" + "'", str5, "Python3");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\" \"" + "'", str8, "\" \"");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\"\\\"__\\\\\\\"\\\\\\\\\\\\\\\"hi!\\\\\\\\\\\\\\\"\\\\\\\"\\\"\"" + "'", str10, "\"\\\"__\\\\\\\"\\\\\\\\\\\\\\\"hi!\\\\\\\\\\\\\\\"\\\\\\\"\\\"\"");
    }

    @Test
    public void test1113() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1113");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet3 = python3Target1.getBadWords();
        int int4 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str7 = python3Target1.getTargetStringLiteralFromString("_tset\"hi!\"", false);
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = python3Target1.getCodeGenerator();
        boolean boolean9 = python3Target1.templatesExist();
        java.lang.String str11 = python3Target1.getListLabel("\"hi!\"Context");
        boolean boolean12 = python3Target1.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup13 = python3Target1.getTemplates();
        java.util.Set<java.lang.String> strSet14 = python3Target1.getBadWords();
        java.lang.String str16 = python3Target1.encodeIntAsCharEscape((int) (short) 0);
        org.antlr.v4.tool.Grammar grammar17 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator18 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target19 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator18);
        int int20 = python3Target19.getInlineTestSetWordSize();
        java.lang.String str22 = python3Target19.getImplicitSetLabel("\"hi!\"");
        java.lang.String str24 = python3Target19.encodeIntAsCharEscape(0);
        boolean boolean25 = python3Target19.templatesExist();
        java.lang.String str28 = python3Target19.getTargetStringLiteralFromString("_tsettset\\\"hi!", true);
        boolean boolean29 = python3Target19.wantsBaseVisitor();
        org.antlr.v4.tool.Grammar grammar30 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator31 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target32 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator31);
        boolean boolean33 = python3Target32.supportsOverloadedMethods();
        java.lang.String str35 = python3Target32.getTargetStringLiteralFromString("_Python3");
        org.antlr.v4.tool.Grammar grammar36 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator37 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target38 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator37);
        int int39 = python3Target38.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet40 = python3Target38.getBadWords();
        int int41 = python3Target38.getInlineTestSetWordSize();
        org.antlr.v4.codegen.CodeGenerator codeGenerator42 = python3Target38.getCodeGenerator();
        java.lang.String str44 = python3Target38.getImplicitSetLabel("_\"hi!\"Context");
        java.lang.String str46 = python3Target38.getImplicitSetLabel("_tset");
        java.lang.String str48 = python3Target38.getImplicitSetLabel("\"\\\"Python3\\\"Context\"");
        int int49 = python3Target38.getSerializedATNSegmentLimit();
        org.antlr.v4.tool.Grammar grammar50 = null;
        int[] intArray51 = new int[] {};
        java.lang.String[] strArray52 = python3Target38.getTokenTypesAsTargetLabels(grammar50, intArray51);
        java.lang.String[] strArray53 = python3Target32.getTokenTypesAsTargetLabels(grammar36, intArray51);
        java.lang.String[] strArray54 = python3Target19.getTokenTypesAsTargetLabels(grammar30, intArray51);
        java.lang.String[] strArray55 = python3Target1.getTokenTypesAsTargetLabels(grammar17, intArray51);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 64 + "'", int4 == 64);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "_tset\\\"hi!\\\"" + "'", str7, "_tset\\\"hi!\\\"");
        org.junit.Assert.assertNull(codeGenerator8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "\"hi!\"Context" + "'", str11, "\"hi!\"Context");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(sTGroup13);
        org.junit.Assert.assertNotNull(strSet14);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "\\0" + "'", str16, "\\0");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 64 + "'", int20 == 64);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "_tset\"hi!\"" + "'", str22, "_tset\"hi!\"");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "\\0" + "'", str24, "\\0");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "\"_tsettset\\\\\\\"hi!\"" + "'", str28, "\"_tsettset\\\\\\\"hi!\"");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "\"_Python3\"" + "'", str35, "\"_Python3\"");
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 64 + "'", int39 == 64);
        org.junit.Assert.assertNotNull(strSet40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 64 + "'", int41 == 64);
        org.junit.Assert.assertNull(codeGenerator42);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "_tset_\"hi!\"Context" + "'", str44, "_tset_\"hi!\"Context");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "_tset_tset" + "'", str46, "_tset_tset");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "_tset\"\\\"Python3\\\"Context\"" + "'", str48, "_tset\"\\\"Python3\\\"Context\"");
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 29 + "'", int49 == 29);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[]");
        org.junit.Assert.assertNotNull(strArray52);
        org.junit.Assert.assertNotNull(strArray53);
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertNotNull(strArray55);
    }

    @Test
    public void test1114() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1114");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet3 = python3Target1.getBadWords();
        int int4 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str7 = python3Target1.getTargetStringLiteralFromString("_tset\"hi!\"", false);
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = python3Target1.getCodeGenerator();
        boolean boolean9 = python3Target1.supportsOverloadedMethods();
        java.lang.String str11 = python3Target1.getAltLabelContextStructName("\"Python3\"");
        boolean boolean12 = python3Target1.wantsBaseListener();
        org.stringtemplate.v4.STGroup sTGroup13 = python3Target1.getTemplates();
        boolean boolean14 = python3Target1.wantsBaseVisitor();
        java.lang.String str16 = python3Target1.encodeIntAsCharEscape((int) (short) 10);
        boolean boolean17 = python3Target1.wantsBaseListener();
        boolean boolean18 = python3Target1.wantsBaseListener();
        java.lang.String str19 = python3Target1.getVersion();
        java.lang.String str21 = python3Target1.getImplicitSetLabel("\"\\\"hi!\\\"\"Context");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 64 + "'", int4 == 64);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "_tset\\\"hi!\\\"" + "'", str7, "_tset\\\"hi!\\\"");
        org.junit.Assert.assertNull(codeGenerator8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "\"Python3\"Context" + "'", str11, "\"Python3\"Context");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(sTGroup13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "\\n" + "'", str16, "\\n");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "4.5.2.1" + "'", str19, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "_tset\"\\\"hi!\\\"\"Context" + "'", str21, "_tset\"\\\"hi!\\\"\"Context");
    }

    @Test
    public void test1115() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1115");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet3 = python3Target1.getBadWords();
        java.lang.String str6 = python3Target1.getTargetStringLiteralFromString("hi!", true);
        int int7 = python3Target1.getInlineTestSetWordSize();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\"hi!\"" + "'", str6, "\"hi!\"");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 64 + "'", int7 == 64);
    }

    @Test
    public void test1116() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1116");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet3 = python3Target1.getBadWords();
        java.lang.String str4 = python3Target1.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator5 = python3Target1.getCodeGenerator();
        java.lang.String str7 = python3Target1.getTargetStringLiteralFromString("_Python3");
        int int8 = python3Target1.getSerializedATNSegmentLimit();
        boolean boolean9 = python3Target1.wantsBaseListener();
        org.antlr.v4.tool.Grammar grammar10 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator11 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target12 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator11);
        int int13 = python3Target12.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet14 = python3Target12.getBadWords();
        int int15 = python3Target12.getInlineTestSetWordSize();
        java.lang.String str18 = python3Target12.getTargetStringLiteralFromString("_tset\"hi!\"", false);
        org.antlr.v4.codegen.CodeGenerator codeGenerator19 = python3Target12.getCodeGenerator();
        boolean boolean20 = python3Target12.supportsOverloadedMethods();
        boolean boolean21 = python3Target12.wantsBaseListener();
        java.lang.String str23 = python3Target12.getImplicitSetLabel("");
        boolean boolean24 = python3Target12.wantsBaseVisitor();
        boolean boolean25 = python3Target12.templatesExist();
        boolean boolean26 = python3Target12.templatesExist();
        boolean boolean27 = python3Target12.templatesExist();
        org.antlr.v4.tool.Grammar grammar28 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator29 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target30 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator29);
        boolean boolean31 = python3Target30.supportsOverloadedMethods();
        java.lang.String str33 = python3Target30.getTargetStringLiteralFromString("_Python3");
        org.antlr.v4.tool.Grammar grammar34 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator35 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target36 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator35);
        int int37 = python3Target36.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet38 = python3Target36.getBadWords();
        int int39 = python3Target36.getInlineTestSetWordSize();
        org.antlr.v4.codegen.CodeGenerator codeGenerator40 = python3Target36.getCodeGenerator();
        java.lang.String str42 = python3Target36.getImplicitSetLabel("_\"hi!\"Context");
        java.lang.String str44 = python3Target36.getImplicitSetLabel("_tset");
        java.lang.String str46 = python3Target36.getImplicitSetLabel("\"\\\"Python3\\\"Context\"");
        int int47 = python3Target36.getSerializedATNSegmentLimit();
        org.antlr.v4.tool.Grammar grammar48 = null;
        int[] intArray49 = new int[] {};
        java.lang.String[] strArray50 = python3Target36.getTokenTypesAsTargetLabels(grammar48, intArray49);
        java.lang.String[] strArray51 = python3Target30.getTokenTypesAsTargetLabels(grammar34, intArray49);
        java.lang.String[] strArray52 = python3Target12.getTokenTypesAsTargetLabels(grammar28, intArray49);
        java.lang.String[] strArray53 = python3Target1.getTokenTypesAsTargetLabels(grammar10, intArray49);
        org.stringtemplate.v4.STGroup sTGroup54 = python3Target1.getTemplates();
        org.antlr.v4.codegen.CodeGenerator codeGenerator55 = null;
        java.lang.String str58 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator55, "__ Context", false);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Python3" + "'", str4, "Python3");
        org.junit.Assert.assertNull(codeGenerator5);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "\"_Python3\"" + "'", str7, "\"_Python3\"");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 29 + "'", int8 == 29);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 64 + "'", int13 == 64);
        org.junit.Assert.assertNotNull(strSet14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 64 + "'", int15 == 64);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "_tset\\\"hi!\\\"" + "'", str18, "_tset\\\"hi!\\\"");
        org.junit.Assert.assertNull(codeGenerator19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "_tset" + "'", str23, "_tset");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "\"_Python3\"" + "'", str33, "\"_Python3\"");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 64 + "'", int37 == 64);
        org.junit.Assert.assertNotNull(strSet38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 64 + "'", int39 == 64);
        org.junit.Assert.assertNull(codeGenerator40);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "_tset_\"hi!\"Context" + "'", str42, "_tset_\"hi!\"Context");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "_tset_tset" + "'", str44, "_tset_tset");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "_tset\"\\\"Python3\\\"Context\"" + "'", str46, "_tset\"\\\"Python3\\\"Context\"");
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 29 + "'", int47 == 29);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[]");
        org.junit.Assert.assertNotNull(strArray50);
        org.junit.Assert.assertNotNull(strArray51);
        org.junit.Assert.assertNotNull(strArray52);
        org.junit.Assert.assertNotNull(strArray53);
        org.junit.Assert.assertNotNull(sTGroup54);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "_ Contex" + "'", str58, "_ Contex");
    }

    @Test
    public void test1117() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1117");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str4 = python3Target1.getImplicitSetLabel("\"hi!\"");
        java.lang.String str6 = python3Target1.encodeIntAsCharEscape(0);
        java.lang.String str7 = python3Target1.getVersion();
        java.lang.String str9 = python3Target1.getImplicitRuleLabel("\"hi!\"Context");
        java.lang.String str11 = python3Target1.getTargetStringLiteralFromString("_Python3");
        boolean boolean12 = python3Target1.wantsBaseListener();
        org.stringtemplate.v4.STGroup sTGroup13 = python3Target1.getTemplates();
        boolean boolean14 = python3Target1.templatesExist();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "_tset\"hi!\"" + "'", str4, "_tset\"hi!\"");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\\0" + "'", str6, "\\0");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "4.5.2.1" + "'", str7, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "_\"hi!\"Context" + "'", str9, "_\"hi!\"Context");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "\"_Python3\"" + "'", str11, "\"_Python3\"");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(sTGroup13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
    }

    @Test
    public void test1118() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1118");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet3 = python3Target1.getBadWords();
        int int4 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str7 = python3Target1.getTargetStringLiteralFromString("_tset\"hi!\"", false);
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = python3Target1.getCodeGenerator();
        boolean boolean9 = python3Target1.templatesExist();
        java.util.Set<java.lang.String> strSet10 = python3Target1.getBadWords();
        java.lang.String str12 = python3Target1.getImplicitSetLabel("\"\\\\35\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator13 = python3Target1.getCodeGenerator();
        org.antlr.v4.codegen.model.RuleFunction ruleFunction14 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str15 = python3Target1.getRuleFunctionContextStructName(ruleFunction14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 64 + "'", int4 == 64);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "_tset\\\"hi!\\\"" + "'", str7, "_tset\\\"hi!\\\"");
        org.junit.Assert.assertNull(codeGenerator8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(strSet10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "_tset\"\\\\35\"" + "'", str12, "_tset\"\\\\35\"");
        org.junit.Assert.assertNull(codeGenerator13);
    }

    @Test
    public void test1119() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1119");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet3 = python3Target1.getBadWords();
        int int4 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str7 = python3Target1.getTargetStringLiteralFromString("_tset\"hi!\"", false);
        java.lang.String str9 = python3Target1.encodeIntAsCharEscape((int) (byte) 100);
        java.lang.String str11 = python3Target1.getImplicitRuleLabel("\"\\\"_\\\"hi!\\\"Contex\"Context");
        java.lang.String str13 = python3Target1.getImplicitRuleLabel("_\"\\\"_\\\"hi!\\\"Contex\"Context");
        java.lang.String str14 = python3Target1.getVersion();
        org.antlr.v4.tool.Grammar grammar15 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str17 = python3Target1.getTokenTypeAsTargetLabel(grammar15, (int) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 64 + "'", int4 == 64);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "_tset\\\"hi!\\\"" + "'", str7, "_tset\\\"hi!\\\"");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "d" + "'", str9, "d");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "_\"\\\"_\\\"hi!\\\"Contex\"Context" + "'", str11, "_\"\\\"_\\\"hi!\\\"Contex\"Context");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "__\"\\\"_\\\"hi!\\\"Contex\"Context" + "'", str13, "__\"\\\"_\\\"hi!\\\"Contex\"Context");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "4.5.2.1" + "'", str14, "4.5.2.1");
    }

    @Test
    public void test1120() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1120");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.supportsOverloadedMethods();
        java.lang.String str4 = python3Target1.getListLabel("\"_Python3\"");
        java.lang.String str5 = python3Target1.getLanguage();
        java.lang.String str8 = python3Target1.getTargetStringLiteralFromString(" ", true);
        java.lang.String str11 = python3Target1.getTargetStringLiteralFromString("\\\\0", false);
        java.lang.String str13 = python3Target1.getImplicitRuleLabel("__tset");
        java.lang.String str16 = python3Target1.getTargetStringLiteralFromString("tset_tset_\\\"hi!\\\"Contex", false);
        org.antlr.v4.tool.ast.GrammarAST grammarAST17 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str18 = python3Target1.getLoopCounter(grammarAST17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "\"_Python3\"" + "'", str4, "\"_Python3\"");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Python3" + "'", str5, "Python3");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\" \"" + "'", str8, "\" \"");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "\\\\\\\\0" + "'", str11, "\\\\\\\\0");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "___tset" + "'", str13, "___tset");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "tset_tset_\\\\\\\"hi!\\\\\\\"Contex" + "'", str16, "tset_tset_\\\\\\\"hi!\\\\\\\"Contex");
    }

    @Test
    public void test1121() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1121");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str4 = python3Target1.getImplicitSetLabel("\"hi!\"");
        java.lang.String str6 = python3Target1.encodeIntAsCharEscape(0);
        java.lang.String str7 = python3Target1.getVersion();
        java.lang.String str9 = python3Target1.getImplicitRuleLabel("\"hi!\"Context");
        java.lang.String str11 = python3Target1.getTargetStringLiteralFromString("_Python3");
        boolean boolean12 = python3Target1.wantsBaseListener();
        org.antlr.v4.codegen.CodeGenerator codeGenerator13 = python3Target1.getCodeGenerator();
        int int14 = python3Target1.getSerializedATNSegmentLimit();
        java.lang.String str16 = python3Target1.getAltLabelContextStructName("\\\"\\\\\\\"tset_\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"tset\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"_Python3\\\\\\\\\\\\\\\"\\\\\\\"\\\"");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "_tset\"hi!\"" + "'", str4, "_tset\"hi!\"");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\\0" + "'", str6, "\\0");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "4.5.2.1" + "'", str7, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "_\"hi!\"Context" + "'", str9, "_\"hi!\"Context");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "\"_Python3\"" + "'", str11, "\"_Python3\"");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(codeGenerator13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 29 + "'", int14 == 29);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "\\\"\\\\\\\"tset_\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"tset\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"_Python3\\\\\\\\\\\\\\\"\\\\\\\"\\\"Context" + "'", str16, "\\\"\\\\\\\"tset_\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"tset\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"_Python3\\\\\\\\\\\\\\\"\\\\\\\"\\\"Context");
    }

    @Test
    public void test1122() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1122");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet3 = python3Target1.getBadWords();
        int int4 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str7 = python3Target1.getTargetStringLiteralFromString("_tset\"hi!\"", false);
        boolean boolean8 = python3Target1.supportsOverloadedMethods();
        org.antlr.v4.codegen.CodeGenerator codeGenerator9 = null;
        java.lang.String str12 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator9, "\".5.2.\"", false);
        java.lang.String str13 = python3Target1.getVersion();
        org.antlr.v4.tool.Grammar grammar14 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator15 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target16 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator15);
        int int17 = python3Target16.getInlineTestSetWordSize();
        java.lang.String str19 = python3Target16.getImplicitSetLabel("\"hi!\"");
        java.lang.String str21 = python3Target16.encodeIntAsCharEscape(0);
        java.lang.String str22 = python3Target16.getVersion();
        java.lang.String str24 = python3Target16.getTargetStringLiteralFromString("hi!");
        org.antlr.v4.tool.Grammar grammar25 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator26 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target27 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator26);
        boolean boolean28 = python3Target27.supportsOverloadedMethods();
        java.lang.String str30 = python3Target27.getTargetStringLiteralFromString("_Python3");
        org.antlr.v4.tool.Grammar grammar31 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator32 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target33 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator32);
        int int34 = python3Target33.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet35 = python3Target33.getBadWords();
        int int36 = python3Target33.getInlineTestSetWordSize();
        org.antlr.v4.codegen.CodeGenerator codeGenerator37 = python3Target33.getCodeGenerator();
        java.lang.String str39 = python3Target33.getImplicitSetLabel("_\"hi!\"Context");
        java.lang.String str41 = python3Target33.getImplicitSetLabel("_tset");
        java.lang.String str43 = python3Target33.getImplicitSetLabel("\"\\\"Python3\\\"Context\"");
        int int44 = python3Target33.getSerializedATNSegmentLimit();
        org.antlr.v4.tool.Grammar grammar45 = null;
        int[] intArray46 = new int[] {};
        java.lang.String[] strArray47 = python3Target33.getTokenTypesAsTargetLabels(grammar45, intArray46);
        java.lang.String[] strArray48 = python3Target27.getTokenTypesAsTargetLabels(grammar31, intArray46);
        java.lang.String[] strArray49 = python3Target16.getTokenTypesAsTargetLabels(grammar25, intArray46);
        java.lang.String[] strArray50 = python3Target1.getTokenTypesAsTargetLabels(grammar14, intArray46);
        org.antlr.v4.codegen.CodeGenerator codeGenerator51 = null;
        java.lang.String str54 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator51, "", false);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 64 + "'", int4 == 64);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "_tset\\\"hi!\\\"" + "'", str7, "_tset\\\"hi!\\\"");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + ".5.2." + "'", str12, ".5.2.");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "4.5.2.1" + "'", str13, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 64 + "'", int17 == 64);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "_tset\"hi!\"" + "'", str19, "_tset\"hi!\"");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "\\0" + "'", str21, "\\0");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "4.5.2.1" + "'", str22, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "\"hi!\"" + "'", str24, "\"hi!\"");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "\"_Python3\"" + "'", str30, "\"_Python3\"");
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 64 + "'", int34 == 64);
        org.junit.Assert.assertNotNull(strSet35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 64 + "'", int36 == 64);
        org.junit.Assert.assertNull(codeGenerator37);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "_tset_\"hi!\"Context" + "'", str39, "_tset_\"hi!\"Context");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "_tset_tset" + "'", str41, "_tset_tset");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "_tset\"\\\"Python3\\\"Context\"" + "'", str43, "_tset\"\\\"Python3\\\"Context\"");
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 29 + "'", int44 == 29);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[]");
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertNotNull(strArray49);
        org.junit.Assert.assertNotNull(strArray50);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "" + "'", str54, "");
    }

    @Test
    public void test1123() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1123");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet3 = python3Target1.getBadWords();
        java.lang.String str4 = python3Target1.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator5 = python3Target1.getCodeGenerator();
        java.lang.String str7 = python3Target1.getTargetStringLiteralFromString("_Python3");
        int int8 = python3Target1.getSerializedATNSegmentLimit();
        java.lang.String str10 = python3Target1.getAltLabelContextStructName("\"\\\"hi!\\\"\"Context");
        java.lang.String str12 = python3Target1.getImplicitRuleLabel("\\35");
        java.lang.String str14 = python3Target1.getAltLabelContextStructName("_\"@\"");
        java.lang.String str16 = python3Target1.getImplicitSetLabel("_tset\"tset\\\\\\\"hi!\"");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Python3" + "'", str4, "Python3");
        org.junit.Assert.assertNull(codeGenerator5);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "\"_Python3\"" + "'", str7, "\"_Python3\"");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 29 + "'", int8 == 29);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\"\\\"hi!\\\"\"ContextContext" + "'", str10, "\"\\\"hi!\\\"\"ContextContext");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "_\\35" + "'", str12, "_\\35");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "_\"@\"Context" + "'", str14, "_\"@\"Context");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "_tset_tset\"tset\\\\\\\"hi!\"" + "'", str16, "_tset_tset\"tset\\\\\\\"hi!\"");
    }

    @Test
    public void test1124() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1124");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet3 = python3Target1.getBadWords();
        int int4 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str7 = python3Target1.getTargetStringLiteralFromString("_tset\"hi!\"", false);
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = python3Target1.getCodeGenerator();
        boolean boolean9 = python3Target1.templatesExist();
        java.lang.String str11 = python3Target1.getListLabel("\"hi!\"Context");
        java.lang.String str13 = python3Target1.getListLabel("Python3");
        java.lang.String str14 = python3Target1.getLanguage();
        java.lang.String str16 = python3Target1.getImplicitRuleLabel("_\"tset4.5.2.1Contex\"");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str18 = python3Target1.getImplicitTokenLabel("\"\\\" \\\"\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 64 + "'", int4 == 64);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "_tset\\\"hi!\\\"" + "'", str7, "_tset\\\"hi!\\\"");
        org.junit.Assert.assertNull(codeGenerator8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "\"hi!\"Context" + "'", str11, "\"hi!\"Context");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Python3" + "'", str13, "Python3");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Python3" + "'", str14, "Python3");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "__\"tset4.5.2.1Contex\"" + "'", str16, "__\"tset4.5.2.1Contex\"");
    }

    @Test
    public void test1125() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1125");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet3 = python3Target1.getBadWords();
        java.lang.String str5 = python3Target1.getAltLabelContextStructName("_tset4.5.2.1");
        java.lang.String str7 = python3Target1.getImplicitRuleLabel("");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "_tset4.5.2.1Context" + "'", str5, "_tset4.5.2.1Context");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "_" + "'", str7, "_");
    }

    @Test
    public void test1126() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1126");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet3 = python3Target1.getBadWords();
        int int4 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str7 = python3Target1.getTargetStringLiteralFromString("_tset\"hi!\"", false);
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = python3Target1.getCodeGenerator();
        java.lang.String str9 = python3Target1.getLanguage();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 64 + "'", int4 == 64);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "_tset\\\"hi!\\\"" + "'", str7, "_tset\\\"hi!\\\"");
        org.junit.Assert.assertNull(codeGenerator8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Python3" + "'", str9, "Python3");
    }

    @Test
    public void test1127() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1127");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet3 = python3Target1.getBadWords();
        int int4 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str6 = python3Target1.getAltLabelContextStructName("\"hi!\"");
        java.lang.String str7 = python3Target1.getVersion();
        boolean boolean8 = python3Target1.supportsOverloadedMethods();
        java.lang.String str9 = python3Target1.getVersion();
        org.antlr.v4.tool.Grammar grammar10 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str12 = python3Target1.getTokenTypeAsTargetLabel(grammar10, (int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 64 + "'", int4 == 64);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\"hi!\"Context" + "'", str6, "\"hi!\"Context");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "4.5.2.1" + "'", str7, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "4.5.2.1" + "'", str9, "4.5.2.1");
    }

    @Test
    public void test1128() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1128");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str5 = python3Target1.getTargetStringLiteralFromString("", false);
        java.util.Set<java.lang.String> strSet6 = python3Target1.getBadWords();
        java.util.Set<java.lang.String> strSet7 = python3Target1.getBadWords();
        java.lang.String str9 = python3Target1.getImplicitRuleLabel("\"@\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = null;
        java.lang.String str13 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator10, "\\0ContextContext", false);
        java.lang.String str15 = python3Target1.getImplicitRuleLabel("\"\\\"_Python3\\\"\\\"ContextContex\"");
        java.util.Set<java.lang.String> strSet16 = python3Target1.getBadWords();
        org.antlr.v4.tool.Rule rule17 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str18 = python3Target1.getRuleFunctionContextStructName(rule17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNotNull(strSet6);
        org.junit.Assert.assertNotNull(strSet7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "_\"@\"" + "'", str9, "_\"@\"");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "0ContextContex" + "'", str13, "0ContextContex");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "_\"\\\"_Python3\\\"\\\"ContextContex\"" + "'", str15, "_\"\\\"_Python3\\\"\\\"ContextContex\"");
        org.junit.Assert.assertNotNull(strSet16);
    }

    @Test
    public void test1129() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1129");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.supportsOverloadedMethods();
        java.lang.String str4 = python3Target1.getListLabel("\"_Python3\"");
        int int5 = python3Target1.getSerializedATNSegmentLimit();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str7 = python3Target1.getElementName("\"\\\"_\\\"\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "\"_Python3\"" + "'", str4, "\"_Python3\"");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 29 + "'", int5 == 29);
    }

    @Test
    public void test1130() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1130");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.supportsOverloadedMethods();
        java.lang.String str4 = python3Target1.getListLabel("\"_Python3\"");
        int int5 = python3Target1.getInlineTestSetWordSize();
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = python3Target1.getCodeGenerator();
        java.lang.String str8 = python3Target1.getAltLabelContextStructName("\"\\\"_tset\\\\\\\"\\\\\\\\\\\\\\\"_\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"hi!\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"Contex\\\\\\\\\\\\\\\"\\\\\\\"\\\"Context\"");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "\"_Python3\"" + "'", str4, "\"_Python3\"");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 64 + "'", int5 == 64);
        org.junit.Assert.assertNull(codeGenerator6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\"\\\"_tset\\\\\\\"\\\\\\\\\\\\\\\"_\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"hi!\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"Contex\\\\\\\\\\\\\\\"\\\\\\\"\\\"Context\"Context" + "'", str8, "\"\\\"_tset\\\\\\\"\\\\\\\\\\\\\\\"_\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"hi!\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"Contex\\\\\\\\\\\\\\\"\\\\\\\"\\\"Context\"Context");
    }

    @Test
    public void test1131() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1131");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet3 = python3Target1.getBadWords();
        int int4 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str7 = python3Target1.getTargetStringLiteralFromString("_tset\"hi!\"", false);
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = python3Target1.getCodeGenerator();
        boolean boolean9 = python3Target1.templatesExist();
        java.lang.String str11 = python3Target1.getListLabel("\"hi!\"Context");
        java.lang.String str13 = python3Target1.getListLabel("Python3");
        java.lang.String str14 = python3Target1.getLanguage();
        java.lang.String str16 = python3Target1.getImplicitRuleLabel("_\"tset4.5.2.1Contex\"");
        java.lang.Class<?> wildcardClass17 = python3Target1.getClass();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 64 + "'", int4 == 64);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "_tset\\\"hi!\\\"" + "'", str7, "_tset\\\"hi!\\\"");
        org.junit.Assert.assertNull(codeGenerator8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "\"hi!\"Context" + "'", str11, "\"hi!\"Context");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Python3" + "'", str13, "Python3");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Python3" + "'", str14, "Python3");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "__\"tset4.5.2.1Contex\"" + "'", str16, "__\"tset4.5.2.1Contex\"");
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test1132() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1132");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet3 = python3Target1.getBadWords();
        boolean boolean4 = python3Target1.supportsOverloadedMethods();
        boolean boolean5 = python3Target1.wantsBaseVisitor();
        boolean boolean6 = python3Target1.templatesExist();
        int int7 = python3Target1.getInlineTestSetWordSize();
        int int8 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str10 = python3Target1.getListLabel("\"hi!\"Context");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 64 + "'", int7 == 64);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 64 + "'", int8 == 64);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\"hi!\"Context" + "'", str10, "\"hi!\"Context");
    }

    @Test
    public void test1133() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1133");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet3 = python3Target1.getBadWords();
        java.lang.String str4 = python3Target1.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator5 = python3Target1.getCodeGenerator();
        java.lang.String str7 = python3Target1.getTargetStringLiteralFromString("_Python3");
        int int8 = python3Target1.getSerializedATNSegmentLimit();
        java.lang.String str10 = python3Target1.getImplicitSetLabel("\"tset\\\"_Python3\"");
        java.lang.Class<?> wildcardClass11 = python3Target1.getClass();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Python3" + "'", str4, "Python3");
        org.junit.Assert.assertNull(codeGenerator5);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "\"_Python3\"" + "'", str7, "\"_Python3\"");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 29 + "'", int8 == 29);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "_tset\"tset\\\"_Python3\"" + "'", str10, "_tset\"tset\\\"_Python3\"");
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test1134() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1134");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet3 = python3Target1.getBadWords();
        int int4 = python3Target1.getInlineTestSetWordSize();
        org.stringtemplate.v4.STGroup sTGroup5 = python3Target1.getTemplates();
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = null;
        java.lang.String str9 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator6, "_tset\"hi!\"", false);
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = null;
        java.lang.String str13 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator10, "", false);
        org.antlr.v4.codegen.model.RuleFunction ruleFunction14 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str15 = python3Target1.getRuleFunctionContextStructName(ruleFunction14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 64 + "'", int4 == 64);
        org.junit.Assert.assertNotNull(sTGroup5);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "tset\\\"hi!" + "'", str9, "tset\\\"hi!");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
    }

    @Test
    public void test1135() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1135");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str4 = python3Target1.getImplicitSetLabel("\"hi!\"");
        java.lang.String str6 = python3Target1.encodeIntAsCharEscape(0);
        boolean boolean7 = python3Target1.supportsOverloadedMethods();
        int int8 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str10 = python3Target1.getImplicitRuleLabel("_tset_\"hi!\"ContextContext");
        org.stringtemplate.v4.STGroup sTGroup11 = python3Target1.getTemplates();
        java.lang.String str13 = python3Target1.getListLabel("_tset\"_tsettset\\\\\\\"hi!\"Context");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "_tset\"hi!\"" + "'", str4, "_tset\"hi!\"");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\\0" + "'", str6, "\\0");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 64 + "'", int8 == 64);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "__tset_\"hi!\"ContextContext" + "'", str10, "__tset_\"hi!\"ContextContext");
        org.junit.Assert.assertNotNull(sTGroup11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "_tset\"_tsettset\\\\\\\"hi!\"Context" + "'", str13, "_tset\"_tsettset\\\\\\\"hi!\"Context");
    }

    @Test
    public void test1136() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1136");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet3 = python3Target1.getBadWords();
        int int4 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str6 = python3Target1.getAltLabelContextStructName("\"hi!\"");
        java.lang.String str7 = python3Target1.getVersion();
        java.lang.String str9 = python3Target1.getImplicitRuleLabel("");
        java.lang.String str11 = python3Target1.getImplicitRuleLabel("_\\0Context");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 64 + "'", int4 == 64);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\"hi!\"Context" + "'", str6, "\"hi!\"Context");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "4.5.2.1" + "'", str7, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "_" + "'", str9, "_");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "__\\0Context" + "'", str11, "__\\0Context");
    }

    @Test
    public void test1137() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1137");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet3 = python3Target1.getBadWords();
        int int4 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str7 = python3Target1.getTargetStringLiteralFromString("_tset\"hi!\"", false);
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = python3Target1.getCodeGenerator();
        boolean boolean9 = python3Target1.supportsOverloadedMethods();
        boolean boolean10 = python3Target1.supportsOverloadedMethods();
        boolean boolean11 = python3Target1.wantsBaseVisitor();
        java.lang.String str13 = python3Target1.getImplicitSetLabel("\"\\\"_\\\\\\\"hi!\\\\\\\"Contex\\\"\"");
        org.antlr.v4.tool.Grammar grammar14 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator15 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target16 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator15);
        org.antlr.v4.codegen.CodeGenerator codeGenerator17 = null;
        java.lang.String str20 = python3Target16.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator17, "4.5.2.1", true);
        boolean boolean21 = python3Target16.templatesExist();
        org.antlr.v4.tool.Grammar grammar22 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator23 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target24 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator23);
        int int25 = python3Target24.getInlineTestSetWordSize();
        java.lang.String str27 = python3Target24.getImplicitSetLabel("\"hi!\"");
        java.lang.String str29 = python3Target24.encodeIntAsCharEscape(0);
        java.lang.String str30 = python3Target24.getVersion();
        java.lang.String str32 = python3Target24.getTargetStringLiteralFromString("hi!");
        org.antlr.v4.tool.Grammar grammar33 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator34 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target35 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator34);
        boolean boolean36 = python3Target35.supportsOverloadedMethods();
        java.lang.String str38 = python3Target35.getTargetStringLiteralFromString("_Python3");
        org.antlr.v4.tool.Grammar grammar39 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator40 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target41 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator40);
        int int42 = python3Target41.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet43 = python3Target41.getBadWords();
        int int44 = python3Target41.getInlineTestSetWordSize();
        org.antlr.v4.codegen.CodeGenerator codeGenerator45 = python3Target41.getCodeGenerator();
        java.lang.String str47 = python3Target41.getImplicitSetLabel("_\"hi!\"Context");
        java.lang.String str49 = python3Target41.getImplicitSetLabel("_tset");
        java.lang.String str51 = python3Target41.getImplicitSetLabel("\"\\\"Python3\\\"Context\"");
        int int52 = python3Target41.getSerializedATNSegmentLimit();
        org.antlr.v4.tool.Grammar grammar53 = null;
        int[] intArray54 = new int[] {};
        java.lang.String[] strArray55 = python3Target41.getTokenTypesAsTargetLabels(grammar53, intArray54);
        java.lang.String[] strArray56 = python3Target35.getTokenTypesAsTargetLabels(grammar39, intArray54);
        java.lang.String[] strArray57 = python3Target24.getTokenTypesAsTargetLabels(grammar33, intArray54);
        java.lang.String[] strArray58 = python3Target16.getTokenTypesAsTargetLabels(grammar22, intArray54);
        java.lang.String[] strArray59 = python3Target1.getTokenTypesAsTargetLabels(grammar14, intArray54);
        java.lang.String str61 = python3Target1.getListLabel("_tset_tsettset\\\"\\\"_\\\\\\\"Python3\\\\\\\"\\\"Context");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 64 + "'", int4 == 64);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "_tset\\\"hi!\\\"" + "'", str7, "_tset\\\"hi!\\\"");
        org.junit.Assert.assertNull(codeGenerator8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "_tset\"\\\"_\\\\\\\"hi!\\\\\\\"Contex\\\"\"" + "'", str13, "_tset\"\\\"_\\\\\\\"hi!\\\\\\\"Contex\\\"\"");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "\".5.2.\"" + "'", str20, "\".5.2.\"");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 64 + "'", int25 == 64);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "_tset\"hi!\"" + "'", str27, "_tset\"hi!\"");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "\\0" + "'", str29, "\\0");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "4.5.2.1" + "'", str30, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "\"hi!\"" + "'", str32, "\"hi!\"");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "\"_Python3\"" + "'", str38, "\"_Python3\"");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 64 + "'", int42 == 64);
        org.junit.Assert.assertNotNull(strSet43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 64 + "'", int44 == 64);
        org.junit.Assert.assertNull(codeGenerator45);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "_tset_\"hi!\"Context" + "'", str47, "_tset_\"hi!\"Context");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "_tset_tset" + "'", str49, "_tset_tset");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "_tset\"\\\"Python3\\\"Context\"" + "'", str51, "_tset\"\\\"Python3\\\"Context\"");
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 29 + "'", int52 == 29);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[]");
        org.junit.Assert.assertNotNull(strArray55);
        org.junit.Assert.assertNotNull(strArray56);
        org.junit.Assert.assertNotNull(strArray57);
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertNotNull(strArray59);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "_tset_tsettset\\\"\\\"_\\\\\\\"Python3\\\\\\\"\\\"Context" + "'", str61, "_tset_tsettset\\\"\\\"_\\\\\\\"Python3\\\\\\\"\\\"Context");
    }

    @Test
    public void test1138() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1138");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet3 = python3Target1.getBadWords();
        int int4 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str7 = python3Target1.getTargetStringLiteralFromString("_tset\"hi!\"", false);
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = python3Target1.getCodeGenerator();
        boolean boolean9 = python3Target1.templatesExist();
        java.lang.String str11 = python3Target1.getListLabel("\"hi!\"Context");
        boolean boolean12 = python3Target1.wantsBaseListener();
        java.lang.String str14 = python3Target1.getTargetStringLiteralFromString("\"__\\\"\\\\\\\"hi!\\\\\\\"\\\"\"");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 64 + "'", int4 == 64);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "_tset\\\"hi!\\\"" + "'", str7, "_tset\\\"hi!\\\"");
        org.junit.Assert.assertNull(codeGenerator8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "\"hi!\"Context" + "'", str11, "\"hi!\"Context");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "\"\\\"__\\\\\\\"\\\\\\\\\\\\\\\"hi!\\\\\\\\\\\\\\\"\\\\\\\"\\\"\"" + "'", str14, "\"\\\"__\\\\\\\"\\\\\\\\\\\\\\\"hi!\\\\\\\\\\\\\\\"\\\\\\\"\\\"\"");
    }

    @Test
    public void test1139() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1139");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet3 = python3Target1.getBadWords();
        int int4 = python3Target1.getInlineTestSetWordSize();
        org.antlr.v4.codegen.CodeGenerator codeGenerator5 = python3Target1.getCodeGenerator();
        java.lang.String str6 = python3Target1.getLanguage();
        java.lang.String str8 = python3Target1.getListLabel("tset\\\"hi!");
        boolean boolean9 = python3Target1.wantsBaseVisitor();
        java.lang.String str12 = python3Target1.getTargetStringLiteralFromString("_tset_tset_\"hi!\"Context", true);
        int int13 = python3Target1.getSerializedATNSegmentLimit();
        java.lang.String str15 = python3Target1.getListLabel("_\"\\\"_Python3\\\"\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator16 = python3Target1.getCodeGenerator();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 64 + "'", int4 == 64);
        org.junit.Assert.assertNull(codeGenerator5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Python3" + "'", str6, "Python3");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "tset\\\"hi!" + "'", str8, "tset\\\"hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "\"_tset_tset_\\\"hi!\\\"Context\"" + "'", str12, "\"_tset_tset_\\\"hi!\\\"Context\"");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 29 + "'", int13 == 29);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "_\"\\\"_Python3\\\"\"" + "'", str15, "_\"\\\"_Python3\\\"\"");
        org.junit.Assert.assertNull(codeGenerator16);
    }

    @Test
    public void test1140() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1140");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str4 = python3Target1.getImplicitSetLabel("\"hi!\"");
        java.lang.String str6 = python3Target1.encodeIntAsCharEscape(0);
        boolean boolean7 = python3Target1.templatesExist();
        org.stringtemplate.v4.STGroup sTGroup8 = python3Target1.getTemplates();
        org.antlr.v4.codegen.CodeGenerator codeGenerator9 = null;
        java.lang.String str12 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator9, "_\"\\\"hi!\\\"\"", true);
        boolean boolean13 = python3Target1.wantsBaseVisitor();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str15 = python3Target1.getElementListName("__tset\"\\\"_\\\\\\\"Python3\\\\\\\"\\\"Context\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "_tset\"hi!\"" + "'", str4, "_tset\"hi!\"");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\\0" + "'", str6, "\\0");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(sTGroup8);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "\"\\\"\\\"hi!\\\"\"" + "'", str12, "\"\\\"\\\"hi!\\\"\"");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test1141() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1141");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.supportsOverloadedMethods();
        java.lang.String str4 = python3Target1.getTargetStringLiteralFromString("_Python3");
        boolean boolean5 = python3Target1.supportsOverloadedMethods();
        org.antlr.v4.codegen.model.RuleFunction ruleFunction6 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str7 = python3Target1.getRuleFunctionContextStructName(ruleFunction6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "\"_Python3\"" + "'", str4, "\"_Python3\"");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
    }

    @Test
    public void test1142() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1142");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str4 = python3Target1.getImplicitSetLabel("\"hi!\"");
        java.lang.String str6 = python3Target1.encodeIntAsCharEscape(0);
        java.lang.String str8 = python3Target1.encodeIntAsCharEscape(100);
        org.antlr.v4.codegen.CodeGenerator codeGenerator9 = null;
        java.lang.String str12 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator9, "\\0Context", true);
        boolean boolean13 = python3Target1.wantsBaseVisitor();
        int int14 = python3Target1.getInlineTestSetWordSize();
        org.antlr.v4.codegen.CodeGenerator codeGenerator15 = python3Target1.getCodeGenerator();
        java.util.Set<java.lang.String> strSet16 = python3Target1.getBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator17 = python3Target1.getCodeGenerator();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "_tset\"hi!\"" + "'", str4, "_tset\"hi!\"");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\\0" + "'", str6, "\\0");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "d" + "'", str8, "d");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "\"0Contex\"" + "'", str12, "\"0Contex\"");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 64 + "'", int14 == 64);
        org.junit.Assert.assertNull(codeGenerator15);
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertNull(codeGenerator17);
    }

    @Test
    public void test1143() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1143");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str4 = python3Target1.getImplicitSetLabel("\"hi!\"");
        java.lang.String str6 = python3Target1.encodeIntAsCharEscape(0);
        boolean boolean7 = python3Target1.supportsOverloadedMethods();
        int int8 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str10 = python3Target1.getImplicitRuleLabel("_tset_\"hi!\"ContextContext");
        org.antlr.v4.codegen.CodeGenerator codeGenerator11 = python3Target1.getCodeGenerator();
        java.lang.String str13 = python3Target1.getImplicitRuleLabel("\"_tsettset\\\\\\\"\\\\\\\"Python3\\\\\\\"Context\"");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "_tset\"hi!\"" + "'", str4, "_tset\"hi!\"");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\\0" + "'", str6, "\\0");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 64 + "'", int8 == 64);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "__tset_\"hi!\"ContextContext" + "'", str10, "__tset_\"hi!\"ContextContext");
        org.junit.Assert.assertNull(codeGenerator11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "_\"_tsettset\\\\\\\"\\\\\\\"Python3\\\\\\\"Context\"" + "'", str13, "_\"_tsettset\\\\\\\"\\\\\\\"Python3\\\\\\\"Context\"");
    }

    @Test
    public void test1144() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1144");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet3 = python3Target1.getBadWords();
        int int4 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str7 = python3Target1.getTargetStringLiteralFromString("_tset\"hi!\"", false);
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = python3Target1.getCodeGenerator();
        boolean boolean9 = python3Target1.supportsOverloadedMethods();
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = python3Target1.getCodeGenerator();
        int int11 = python3Target1.getSerializedATNSegmentLimit();
        java.lang.String str12 = python3Target1.getVersion();
        java.lang.String str14 = python3Target1.getTargetStringLiteralFromString("_\"\\\"_Python3\\\"\"");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 64 + "'", int4 == 64);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "_tset\\\"hi!\\\"" + "'", str7, "_tset\\\"hi!\\\"");
        org.junit.Assert.assertNull(codeGenerator8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(codeGenerator10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 29 + "'", int11 == 29);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "4.5.2.1" + "'", str12, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "\"_\\\"\\\\\\\"_Python3\\\\\\\"\\\"\"" + "'", str14, "\"_\\\"\\\\\\\"_Python3\\\\\\\"\\\"\"");
    }

    @Test
    public void test1145() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1145");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet3 = python3Target1.getBadWords();
        boolean boolean4 = python3Target1.wantsBaseListener();
        int int5 = python3Target1.getSerializedATNSegmentLimit();
        boolean boolean6 = python3Target1.wantsBaseVisitor();
        org.antlr.v4.tool.Grammar grammar7 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target9 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator8);
        int int10 = python3Target9.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet11 = python3Target9.getBadWords();
        int int12 = python3Target9.getInlineTestSetWordSize();
        org.antlr.v4.codegen.CodeGenerator codeGenerator13 = python3Target9.getCodeGenerator();
        java.lang.String str15 = python3Target9.getImplicitSetLabel("_\"hi!\"Context");
        java.lang.String str17 = python3Target9.getImplicitSetLabel("_tset");
        java.lang.String str19 = python3Target9.getImplicitSetLabel("\"\\\"Python3\\\"Context\"");
        int int20 = python3Target9.getSerializedATNSegmentLimit();
        org.antlr.v4.tool.Grammar grammar21 = null;
        int[] intArray22 = new int[] {};
        java.lang.String[] strArray23 = python3Target9.getTokenTypesAsTargetLabels(grammar21, intArray22);
        java.lang.String[] strArray24 = python3Target1.getTokenTypesAsTargetLabels(grammar7, intArray22);
        java.lang.String str25 = python3Target1.getLanguage();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 29 + "'", int5 == 29);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 64 + "'", int10 == 64);
        org.junit.Assert.assertNotNull(strSet11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 64 + "'", int12 == 64);
        org.junit.Assert.assertNull(codeGenerator13);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "_tset_\"hi!\"Context" + "'", str15, "_tset_\"hi!\"Context");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "_tset_tset" + "'", str17, "_tset_tset");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "_tset\"\\\"Python3\\\"Context\"" + "'", str19, "_tset\"\\\"Python3\\\"Context\"");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 29 + "'", int20 == 29);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[]");
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Python3" + "'", str25, "Python3");
    }

    @Test
    public void test1146() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1146");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet3 = python3Target1.getBadWords();
        int int4 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str7 = python3Target1.getTargetStringLiteralFromString("_tset\"hi!\"", false);
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = python3Target1.getCodeGenerator();
        boolean boolean9 = python3Target1.supportsOverloadedMethods();
        boolean boolean10 = python3Target1.wantsBaseListener();
        java.lang.String str12 = python3Target1.getImplicitSetLabel("");
        boolean boolean13 = python3Target1.wantsBaseVisitor();
        boolean boolean14 = python3Target1.templatesExist();
        boolean boolean15 = python3Target1.templatesExist();
        java.lang.String str18 = python3Target1.getTargetStringLiteralFromString("\"\\\\\\\"\\\\\\\\\\\\\\\"hi!\\\\\\\\\\\\\\\"\\\\\\\"Context\"ContextContext", true);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 64 + "'", int4 == 64);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "_tset\\\"hi!\\\"" + "'", str7, "_tset\\\"hi!\\\"");
        org.junit.Assert.assertNull(codeGenerator8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "_tset" + "'", str12, "_tset");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "\"\\\"\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"hi!\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"Context\\\"ContextContext\"" + "'", str18, "\"\\\"\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"hi!\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"Context\\\"ContextContext\"");
    }

    @Test
    public void test1147() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1147");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str4 = python3Target1.getImplicitSetLabel("\"hi!\"");
        java.lang.String str6 = python3Target1.encodeIntAsCharEscape(0);
        java.lang.String str7 = python3Target1.getVersion();
        java.lang.String str9 = python3Target1.getImplicitRuleLabel("Python3");
        java.lang.String str12 = python3Target1.getTargetStringLiteralFromString("\"hi!\"", true);
        java.lang.String str15 = python3Target1.getTargetStringLiteralFromString("_\"\\\"_Python3\\\"\"", false);
        int int16 = python3Target1.getInlineTestSetWordSize();
        org.antlr.v4.codegen.CodeGenerator codeGenerator17 = python3Target1.getCodeGenerator();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "_tset\"hi!\"" + "'", str4, "_tset\"hi!\"");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\\0" + "'", str6, "\\0");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "4.5.2.1" + "'", str7, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "_Python3" + "'", str9, "_Python3");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "\"\\\"hi!\\\"\"" + "'", str12, "\"\\\"hi!\\\"\"");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "_\\\"\\\\\\\"_Python3\\\\\\\"\\\"" + "'", str15, "_\\\"\\\\\\\"_Python3\\\\\\\"\\\"");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 64 + "'", int16 == 64);
        org.junit.Assert.assertNull(codeGenerator17);
    }

    @Test
    public void test1148() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1148");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet3 = python3Target1.getBadWords();
        int int4 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str7 = python3Target1.getTargetStringLiteralFromString("_tset\"hi!\"", false);
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = python3Target1.getCodeGenerator();
        boolean boolean9 = python3Target1.templatesExist();
        java.lang.String str11 = python3Target1.getImplicitSetLabel("\"\\\"Python3\\\"Context\"");
        java.lang.String str13 = python3Target1.getTargetStringLiteralFromString("_tset_\\\"hi!\\\"Contex");
        int int14 = python3Target1.getInlineTestSetWordSize();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str16 = python3Target1.getElementListName("_tsetd");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 64 + "'", int4 == 64);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "_tset\\\"hi!\\\"" + "'", str7, "_tset\\\"hi!\\\"");
        org.junit.Assert.assertNull(codeGenerator8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "_tset\"\\\"Python3\\\"Context\"" + "'", str11, "_tset\"\\\"Python3\\\"Context\"");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "\"_tset_\\\\\\\"hi!\\\\\\\"Contex\"" + "'", str13, "\"_tset_\\\\\\\"hi!\\\\\\\"Contex\"");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 64 + "'", int14 == 64);
    }

    @Test
    public void test1149() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1149");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet3 = python3Target1.getBadWords();
        int int4 = python3Target1.getInlineTestSetWordSize();
        org.stringtemplate.v4.STGroup sTGroup5 = python3Target1.getTemplates();
        org.stringtemplate.v4.STGroup sTGroup6 = python3Target1.getTemplates();
        int int7 = python3Target1.getSerializedATNSegmentLimit();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 64 + "'", int4 == 64);
        org.junit.Assert.assertNotNull(sTGroup5);
        org.junit.Assert.assertNotNull(sTGroup6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 29 + "'", int7 == 29);
    }

    @Test
    public void test1150() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1150");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.supportsOverloadedMethods();
        java.lang.String str4 = python3Target1.getListLabel("\"_Python3\"");
        java.lang.String str5 = python3Target1.getLanguage();
        java.util.Set<java.lang.String> strSet6 = python3Target1.getBadWords();
        java.lang.String str8 = python3Target1.getImplicitRuleLabel("_Python3Context");
        java.lang.String str9 = python3Target1.getLanguage();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "\"_Python3\"" + "'", str4, "\"_Python3\"");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Python3" + "'", str5, "Python3");
        org.junit.Assert.assertNotNull(strSet6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "__Python3Context" + "'", str8, "__Python3Context");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Python3" + "'", str9, "Python3");
    }

    @Test
    public void test1151() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1151");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet3 = python3Target1.getBadWords();
        int int4 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str5 = python3Target1.getLanguage();
        boolean boolean6 = python3Target1.templatesExist();
        boolean boolean7 = python3Target1.supportsOverloadedMethods();
        int int8 = python3Target1.getInlineTestSetWordSize();
        org.antlr.v4.tool.Grammar grammar9 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str11 = python3Target1.getTokenTypeAsTargetLabel(grammar9, (int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 64 + "'", int4 == 64);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Python3" + "'", str5, "Python3");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 64 + "'", int8 == 64);
    }

    @Test
    public void test1152() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1152");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet3 = python3Target1.getBadWords();
        java.lang.String str4 = python3Target1.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator5 = python3Target1.getCodeGenerator();
        org.stringtemplate.v4.STGroup sTGroup6 = python3Target1.getTemplates();
        boolean boolean7 = python3Target1.supportsOverloadedMethods();
        java.lang.String str9 = python3Target1.encodeIntAsCharEscape((int) '#');
        java.lang.String str11 = python3Target1.encodeIntAsCharEscape((int) '#');
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str13 = python3Target1.getImplicitTokenLabel("\"tset_\\\\\\\"hi!\\\\\\\"Contex\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Python3" + "'", str4, "Python3");
        org.junit.Assert.assertNull(codeGenerator5);
        org.junit.Assert.assertNotNull(sTGroup6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "#" + "'", str9, "#");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "#" + "'", str11, "#");
    }

    @Test
    public void test1153() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1153");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str4 = python3Target1.getImplicitSetLabel("\"hi!\"");
        java.lang.String str6 = python3Target1.encodeIntAsCharEscape(0);
        boolean boolean7 = python3Target1.supportsOverloadedMethods();
        int int8 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str10 = python3Target1.getImplicitRuleLabel("_tset_\"hi!\"ContextContext");
        org.antlr.v4.codegen.CodeGenerator codeGenerator11 = python3Target1.getCodeGenerator();
        org.antlr.v4.codegen.CodeGenerator codeGenerator12 = null;
        java.lang.String str15 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator12, "__\"\\\"_\\\"hi!\\\"Contex\"Context", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator16 = python3Target1.getCodeGenerator();
        java.lang.String str18 = python3Target1.getTargetStringLiteralFromString("\"#\"");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "_tset\"hi!\"" + "'", str4, "_tset\"hi!\"");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\\0" + "'", str6, "\\0");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 64 + "'", int8 == 64);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "__tset_\"hi!\"ContextContext" + "'", str10, "__tset_\"hi!\"ContextContext");
        org.junit.Assert.assertNull(codeGenerator11);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "\"_\\\"\\\"_\\\"hi!\\\"Contex\\\"Contex\"" + "'", str15, "\"_\\\"\\\"_\\\"hi!\\\"Contex\\\"Contex\"");
        org.junit.Assert.assertNull(codeGenerator16);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "\"\\\"#\\\"\"" + "'", str18, "\"\\\"#\\\"\"");
    }

    @Test
    public void test1154() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1154");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str4 = python3Target1.getImplicitSetLabel("\"hi!\"");
        java.lang.String str6 = python3Target1.encodeIntAsCharEscape(0);
        java.lang.String str8 = python3Target1.encodeIntAsCharEscape(100);
        org.antlr.v4.codegen.CodeGenerator codeGenerator9 = null;
        java.lang.String str12 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator9, "\\0Context", true);
        boolean boolean13 = python3Target1.wantsBaseVisitor();
        org.stringtemplate.v4.STGroup sTGroup14 = python3Target1.getTemplates();
        int int15 = python3Target1.getSerializedATNSegmentLimit();
        org.antlr.v4.codegen.CodeGenerator codeGenerator16 = null;
        java.lang.String str19 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator16, "\\n", true);
        boolean boolean20 = python3Target1.wantsBaseVisitor();
        org.antlr.v4.tool.ast.GrammarAST grammarAST21 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str22 = python3Target1.getLoopCounter(grammarAST21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "_tset\"hi!\"" + "'", str4, "_tset\"hi!\"");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\\0" + "'", str6, "\\0");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "d" + "'", str8, "d");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "\"0Contex\"" + "'", str12, "\"0Contex\"");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(sTGroup14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 29 + "'", int15 == 29);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "\"\"" + "'", str19, "\"\"");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    }

    @Test
    public void test1155() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1155");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.supportsOverloadedMethods();
        java.lang.String str4 = python3Target1.getListLabel("\"_Python3\"");
        java.lang.String str5 = python3Target1.getLanguage();
        java.lang.String str8 = python3Target1.getTargetStringLiteralFromString(" ", true);
        java.lang.String str11 = python3Target1.getTargetStringLiteralFromString("\\\\0", false);
        java.lang.String str13 = python3Target1.getImplicitRuleLabel("__tset");
        java.lang.String str16 = python3Target1.getTargetStringLiteralFromString("tset_tset_\\\"hi!\\\"Contex", false);
        int int17 = python3Target1.getInlineTestSetWordSize();
        org.antlr.v4.tool.ast.GrammarAST grammarAST18 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean19 = python3Target1.grammarSymbolCausesIssueInGeneratedCode(grammarAST18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "\"_Python3\"" + "'", str4, "\"_Python3\"");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Python3" + "'", str5, "Python3");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\" \"" + "'", str8, "\" \"");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "\\\\\\\\0" + "'", str11, "\\\\\\\\0");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "___tset" + "'", str13, "___tset");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "tset_tset_\\\\\\\"hi!\\\\\\\"Contex" + "'", str16, "tset_tset_\\\\\\\"hi!\\\\\\\"Contex");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 64 + "'", int17 == 64);
    }

    @Test
    public void test1156() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1156");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet3 = python3Target1.getBadWords();
        int int4 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str7 = python3Target1.getTargetStringLiteralFromString("_tset\"hi!\"", false);
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = python3Target1.getCodeGenerator();
        boolean boolean9 = python3Target1.supportsOverloadedMethods();
        java.lang.String str11 = python3Target1.getAltLabelContextStructName("\"Python3\"");
        java.lang.String str13 = python3Target1.getImplicitRuleLabel("\"Python3\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator14 = null;
        java.lang.String str17 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator14, "\\\"\\\\\\\"_\\\\\\\"hi!\\\\\\\"Contex\\\"", false);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 64 + "'", int4 == 64);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "_tset\\\"hi!\\\"" + "'", str7, "_tset\\\"hi!\\\"");
        org.junit.Assert.assertNull(codeGenerator8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "\"Python3\"Context" + "'", str11, "\"Python3\"Context");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "_\"Python3\"" + "'", str13, "_\"Python3\"");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "\\\"\\\\\\\"_\\\\\\\"hi!\\\\\\\"Contex\\\"" + "'", str17, "\\\"\\\\\\\"_\\\\\\\"hi!\\\\\\\"Contex\\\"");
    }

    @Test
    public void test1157() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1157");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet3 = python3Target1.getBadWords();
        java.lang.String str4 = python3Target1.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator5 = python3Target1.getCodeGenerator();
        java.lang.String str7 = python3Target1.getTargetStringLiteralFromString("_Python3");
        int int8 = python3Target1.getSerializedATNSegmentLimit();
        boolean boolean9 = python3Target1.templatesExist();
        java.lang.String str11 = python3Target1.getImplicitSetLabel("_Python3");
        boolean boolean12 = python3Target1.wantsBaseVisitor();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Python3" + "'", str4, "Python3");
        org.junit.Assert.assertNull(codeGenerator5);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "\"_Python3\"" + "'", str7, "\"_Python3\"");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 29 + "'", int8 == 29);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "_tset_Python3" + "'", str11, "_tset_Python3");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test1158() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1158");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.lang.String str3 = python3Target1.getTargetStringLiteralFromString("\"\\\"Python3\\\"Context\"");
        boolean boolean4 = python3Target1.templatesExist();
        boolean boolean5 = python3Target1.templatesExist();
        java.lang.String str6 = python3Target1.getLanguage();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "\"\\\"\\\\\\\"Python3\\\\\\\"Context\\\"\"" + "'", str3, "\"\\\"\\\\\\\"Python3\\\\\\\"Context\\\"\"");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Python3" + "'", str6, "Python3");
    }

    @Test
    public void test1159() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1159");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str4 = python3Target1.getImplicitSetLabel("\"hi!\"");
        java.lang.String str6 = python3Target1.encodeIntAsCharEscape(0);
        java.lang.String str7 = python3Target1.getVersion();
        java.lang.String str9 = python3Target1.getTargetStringLiteralFromString("hi!");
        int int10 = python3Target1.getInlineTestSetWordSize();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str12 = python3Target1.getElementListName("_tset\\\"hi!\\\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "_tset\"hi!\"" + "'", str4, "_tset\"hi!\"");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\\0" + "'", str6, "\\0");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "4.5.2.1" + "'", str7, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\"hi!\"" + "'", str9, "\"hi!\"");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 64 + "'", int10 == 64);
    }

    @Test
    public void test1160() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1160");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet3 = python3Target1.getBadWords();
        int int4 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str7 = python3Target1.getTargetStringLiteralFromString("_tset\"hi!\"", false);
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = python3Target1.getCodeGenerator();
        boolean boolean9 = python3Target1.supportsOverloadedMethods();
        boolean boolean10 = python3Target1.supportsOverloadedMethods();
        boolean boolean11 = python3Target1.wantsBaseVisitor();
        int int12 = python3Target1.getSerializedATNSegmentLimit();
        int int13 = python3Target1.getSerializedATNSegmentLimit();
        java.util.Set<java.lang.String> strSet14 = python3Target1.getBadWords();
        java.util.Set<java.lang.String> strSet15 = python3Target1.getBadWords();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 64 + "'", int4 == 64);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "_tset\\\"hi!\\\"" + "'", str7, "_tset\\\"hi!\\\"");
        org.junit.Assert.assertNull(codeGenerator8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 29 + "'", int12 == 29);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 29 + "'", int13 == 29);
        org.junit.Assert.assertNotNull(strSet14);
        org.junit.Assert.assertNotNull(strSet15);
    }

    @Test
    public void test1161() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1161");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.lang.String str4 = python3Target1.getTargetStringLiteralFromString("Python3", false);
        int int5 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str6 = python3Target1.getLanguage();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Python3" + "'", str4, "Python3");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 64 + "'", int5 == 64);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Python3" + "'", str6, "Python3");
    }

    @Test
    public void test1162() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1162");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.lang.String str3 = python3Target1.getImplicitRuleLabel("\"tset4.5.2.1Contex\"");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str5 = python3Target1.getElementName("\\\\\\\\0");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "_\"tset4.5.2.1Contex\"" + "'", str3, "_\"tset4.5.2.1Contex\"");
    }

    @Test
    public void test1163() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1163");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getSerializedATNSegmentLimit();
        boolean boolean3 = python3Target1.wantsBaseVisitor();
        org.stringtemplate.v4.STGroup sTGroup4 = python3Target1.getTemplates();
        java.lang.String str6 = python3Target1.getAltLabelContextStructName("_tset\"\\\"tset\\\\\\\"_Python3\\\"\"Context");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 29 + "'", int2 == 29);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(sTGroup4);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "_tset\"\\\"tset\\\\\\\"_Python3\\\"\"ContextContext" + "'", str6, "_tset\"\\\"tset\\\\\\\"_Python3\\\"\"ContextContext");
    }

    @Test
    public void test1164() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1164");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet3 = python3Target1.getBadWords();
        int int4 = python3Target1.getInlineTestSetWordSize();
        org.stringtemplate.v4.STGroup sTGroup5 = python3Target1.getTemplates();
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = null;
        java.lang.String str9 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator6, "_tset\"hi!\"", false);
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = null;
        java.lang.String str13 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator10, "", false);
        org.antlr.v4.codegen.CodeGenerator codeGenerator14 = null;
        java.lang.String str17 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator14, "", true);
        boolean boolean18 = python3Target1.wantsBaseListener();
        org.antlr.v4.tool.Grammar grammar19 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator20 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target21 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator20);
        int int22 = python3Target21.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet23 = python3Target21.getBadWords();
        java.lang.String str24 = python3Target21.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator25 = python3Target21.getCodeGenerator();
        org.stringtemplate.v4.STGroup sTGroup26 = python3Target21.getTemplates();
        boolean boolean27 = python3Target21.supportsOverloadedMethods();
        org.antlr.v4.codegen.CodeGenerator codeGenerator28 = null;
        java.lang.String str31 = python3Target21.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator28, "tset\\\"hi!", false);
        org.antlr.v4.tool.Grammar grammar32 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator33 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target34 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator33);
        int int35 = python3Target34.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet36 = python3Target34.getBadWords();
        int int37 = python3Target34.getInlineTestSetWordSize();
        java.lang.String str40 = python3Target34.getTargetStringLiteralFromString("_tset\"hi!\"", false);
        org.antlr.v4.codegen.CodeGenerator codeGenerator41 = python3Target34.getCodeGenerator();
        boolean boolean42 = python3Target34.supportsOverloadedMethods();
        java.lang.String str44 = python3Target34.getAltLabelContextStructName("\"Python3\"");
        boolean boolean45 = python3Target34.wantsBaseListener();
        int int46 = python3Target34.getInlineTestSetWordSize();
        boolean boolean47 = python3Target34.wantsBaseListener();
        org.antlr.v4.tool.Grammar grammar48 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator49 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target50 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator49);
        int int51 = python3Target50.getInlineTestSetWordSize();
        java.lang.String str53 = python3Target50.getImplicitSetLabel("\"hi!\"");
        java.lang.String str55 = python3Target50.encodeIntAsCharEscape(0);
        java.lang.String str56 = python3Target50.getVersion();
        java.lang.String str58 = python3Target50.getTargetStringLiteralFromString("hi!");
        org.antlr.v4.tool.Grammar grammar59 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator60 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target61 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator60);
        boolean boolean62 = python3Target61.supportsOverloadedMethods();
        java.lang.String str64 = python3Target61.getTargetStringLiteralFromString("_Python3");
        org.antlr.v4.tool.Grammar grammar65 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator66 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target67 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator66);
        int int68 = python3Target67.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet69 = python3Target67.getBadWords();
        int int70 = python3Target67.getInlineTestSetWordSize();
        org.antlr.v4.codegen.CodeGenerator codeGenerator71 = python3Target67.getCodeGenerator();
        java.lang.String str73 = python3Target67.getImplicitSetLabel("_\"hi!\"Context");
        java.lang.String str75 = python3Target67.getImplicitSetLabel("_tset");
        java.lang.String str77 = python3Target67.getImplicitSetLabel("\"\\\"Python3\\\"Context\"");
        int int78 = python3Target67.getSerializedATNSegmentLimit();
        org.antlr.v4.tool.Grammar grammar79 = null;
        int[] intArray80 = new int[] {};
        java.lang.String[] strArray81 = python3Target67.getTokenTypesAsTargetLabels(grammar79, intArray80);
        java.lang.String[] strArray82 = python3Target61.getTokenTypesAsTargetLabels(grammar65, intArray80);
        java.lang.String[] strArray83 = python3Target50.getTokenTypesAsTargetLabels(grammar59, intArray80);
        java.lang.String[] strArray84 = python3Target34.getTokenTypesAsTargetLabels(grammar48, intArray80);
        java.lang.String[] strArray85 = python3Target21.getTokenTypesAsTargetLabels(grammar32, intArray80);
        java.lang.String[] strArray86 = python3Target1.getTokenTypesAsTargetLabels(grammar19, intArray80);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 64 + "'", int4 == 64);
        org.junit.Assert.assertNotNull(sTGroup5);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "tset\\\"hi!" + "'", str9, "tset\\\"hi!");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "\"\"" + "'", str17, "\"\"");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 64 + "'", int22 == 64);
        org.junit.Assert.assertNotNull(strSet23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "Python3" + "'", str24, "Python3");
        org.junit.Assert.assertNull(codeGenerator25);
        org.junit.Assert.assertNotNull(sTGroup26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "set\\\"hi" + "'", str31, "set\\\"hi");
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 64 + "'", int35 == 64);
        org.junit.Assert.assertNotNull(strSet36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 64 + "'", int37 == 64);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "_tset\\\"hi!\\\"" + "'", str40, "_tset\\\"hi!\\\"");
        org.junit.Assert.assertNull(codeGenerator41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "\"Python3\"Context" + "'", str44, "\"Python3\"Context");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 64 + "'", int46 == 64);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 64 + "'", int51 == 64);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "_tset\"hi!\"" + "'", str53, "_tset\"hi!\"");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "\\0" + "'", str55, "\\0");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "4.5.2.1" + "'", str56, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "\"hi!\"" + "'", str58, "\"hi!\"");
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "\"_Python3\"" + "'", str64, "\"_Python3\"");
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 64 + "'", int68 == 64);
        org.junit.Assert.assertNotNull(strSet69);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 64 + "'", int70 == 64);
        org.junit.Assert.assertNull(codeGenerator71);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "_tset_\"hi!\"Context" + "'", str73, "_tset_\"hi!\"Context");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "_tset_tset" + "'", str75, "_tset_tset");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "_tset\"\\\"Python3\\\"Context\"" + "'", str77, "_tset\"\\\"Python3\\\"Context\"");
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 29 + "'", int78 == 29);
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[]");
        org.junit.Assert.assertNotNull(strArray81);
        org.junit.Assert.assertNotNull(strArray82);
        org.junit.Assert.assertNotNull(strArray83);
        org.junit.Assert.assertNotNull(strArray84);
        org.junit.Assert.assertNotNull(strArray85);
        org.junit.Assert.assertNotNull(strArray86);
    }

    @Test
    public void test1165() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1165");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str4 = python3Target1.getImplicitSetLabel("\"hi!\"");
        java.lang.String str6 = python3Target1.encodeIntAsCharEscape(0);
        java.lang.String str7 = python3Target1.getVersion();
        java.lang.String str9 = python3Target1.getImplicitRuleLabel("Python3");
        java.lang.String str12 = python3Target1.getTargetStringLiteralFromString("\"hi!\"", true);
        int int13 = python3Target1.getSerializedATNSegmentLimit();
        java.lang.String str14 = python3Target1.getLanguage();
        java.util.Set<java.lang.String> strSet15 = python3Target1.getBadWords();
        org.antlr.v4.codegen.model.RuleFunction ruleFunction16 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str17 = python3Target1.getRuleFunctionContextStructName(ruleFunction16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "_tset\"hi!\"" + "'", str4, "_tset\"hi!\"");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\\0" + "'", str6, "\\0");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "4.5.2.1" + "'", str7, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "_Python3" + "'", str9, "_Python3");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "\"\\\"hi!\\\"\"" + "'", str12, "\"\\\"hi!\\\"\"");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 29 + "'", int13 == 29);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Python3" + "'", str14, "Python3");
        org.junit.Assert.assertNotNull(strSet15);
    }

    @Test
    public void test1166() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1166");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str4 = python3Target1.getImplicitSetLabel("\"hi!\"");
        java.lang.String str6 = python3Target1.encodeIntAsCharEscape(0);
        java.lang.String str7 = python3Target1.getVersion();
        java.lang.String str10 = python3Target1.getTargetStringLiteralFromString("Python3", true);
        org.antlr.v4.tool.ast.GrammarAST grammarAST11 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean12 = python3Target1.grammarSymbolCausesIssueInGeneratedCode(grammarAST11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "_tset\"hi!\"" + "'", str4, "_tset\"hi!\"");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\\0" + "'", str6, "\\0");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "4.5.2.1" + "'", str7, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\"Python3\"" + "'", str10, "\"Python3\"");
    }

    @Test
    public void test1167() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1167");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet3 = python3Target1.getBadWords();
        int int4 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str7 = python3Target1.getTargetStringLiteralFromString("_tset\"hi!\"", false);
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = python3Target1.getCodeGenerator();
        boolean boolean9 = python3Target1.supportsOverloadedMethods();
        java.lang.String str11 = python3Target1.getAltLabelContextStructName("\"Python3\"");
        java.lang.String str13 = python3Target1.getImplicitRuleLabel("");
        java.lang.String str15 = python3Target1.getListLabel("_tset_\"hi!\"ContextContext");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str17 = python3Target1.getElementName("\"__tsettset\\\\\\\"hi!Context\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 64 + "'", int4 == 64);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "_tset\\\"hi!\\\"" + "'", str7, "_tset\\\"hi!\\\"");
        org.junit.Assert.assertNull(codeGenerator8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "\"Python3\"Context" + "'", str11, "\"Python3\"Context");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "_" + "'", str13, "_");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "_tset_\"hi!\"ContextContext" + "'", str15, "_tset_\"hi!\"ContextContext");
    }

    @Test
    public void test1168() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1168");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str4 = python3Target1.getImplicitSetLabel("\"hi!\"");
        java.lang.String str6 = python3Target1.encodeIntAsCharEscape(0);
        boolean boolean7 = python3Target1.templatesExist();
        org.stringtemplate.v4.STGroup sTGroup8 = python3Target1.getTemplates();
        boolean boolean9 = python3Target1.wantsBaseListener();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str11 = python3Target1.getElementName("");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "_tset\"hi!\"" + "'", str4, "_tset\"hi!\"");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\\0" + "'", str6, "\\0");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(sTGroup8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test1169() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1169");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str4 = python3Target1.getImplicitSetLabel("\"hi!\"");
        java.lang.String str6 = python3Target1.encodeIntAsCharEscape(0);
        boolean boolean7 = python3Target1.supportsOverloadedMethods();
        int int8 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str10 = python3Target1.getImplicitRuleLabel("_tset_\"hi!\"ContextContext");
        java.lang.String str12 = python3Target1.getAltLabelContextStructName("_tset__\"\\\"_\\\"hi!\\\"Contex\"Context");
        org.antlr.v4.tool.Grammar grammar13 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator14 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target15 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator14);
        org.antlr.v4.codegen.CodeGenerator codeGenerator16 = null;
        java.lang.String str19 = python3Target15.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator16, "4.5.2.1", true);
        boolean boolean20 = python3Target15.templatesExist();
        org.antlr.v4.tool.Grammar grammar21 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator22 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target23 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator22);
        int int24 = python3Target23.getInlineTestSetWordSize();
        java.lang.String str26 = python3Target23.getImplicitSetLabel("\"hi!\"");
        java.lang.String str28 = python3Target23.encodeIntAsCharEscape(0);
        java.lang.String str29 = python3Target23.getVersion();
        java.lang.String str31 = python3Target23.getTargetStringLiteralFromString("hi!");
        org.antlr.v4.tool.Grammar grammar32 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator33 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target34 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator33);
        boolean boolean35 = python3Target34.supportsOverloadedMethods();
        java.lang.String str37 = python3Target34.getTargetStringLiteralFromString("_Python3");
        org.antlr.v4.tool.Grammar grammar38 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator39 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target40 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator39);
        int int41 = python3Target40.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet42 = python3Target40.getBadWords();
        int int43 = python3Target40.getInlineTestSetWordSize();
        org.antlr.v4.codegen.CodeGenerator codeGenerator44 = python3Target40.getCodeGenerator();
        java.lang.String str46 = python3Target40.getImplicitSetLabel("_\"hi!\"Context");
        java.lang.String str48 = python3Target40.getImplicitSetLabel("_tset");
        java.lang.String str50 = python3Target40.getImplicitSetLabel("\"\\\"Python3\\\"Context\"");
        int int51 = python3Target40.getSerializedATNSegmentLimit();
        org.antlr.v4.tool.Grammar grammar52 = null;
        int[] intArray53 = new int[] {};
        java.lang.String[] strArray54 = python3Target40.getTokenTypesAsTargetLabels(grammar52, intArray53);
        java.lang.String[] strArray55 = python3Target34.getTokenTypesAsTargetLabels(grammar38, intArray53);
        java.lang.String[] strArray56 = python3Target23.getTokenTypesAsTargetLabels(grammar32, intArray53);
        java.lang.String[] strArray57 = python3Target15.getTokenTypesAsTargetLabels(grammar21, intArray53);
        java.lang.String[] strArray58 = python3Target1.getTokenTypesAsTargetLabels(grammar13, intArray53);
        boolean boolean59 = python3Target1.wantsBaseListener();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "_tset\"hi!\"" + "'", str4, "_tset\"hi!\"");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\\0" + "'", str6, "\\0");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 64 + "'", int8 == 64);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "__tset_\"hi!\"ContextContext" + "'", str10, "__tset_\"hi!\"ContextContext");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "_tset__\"\\\"_\\\"hi!\\\"Contex\"ContextContext" + "'", str12, "_tset__\"\\\"_\\\"hi!\\\"Contex\"ContextContext");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "\".5.2.\"" + "'", str19, "\".5.2.\"");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 64 + "'", int24 == 64);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "_tset\"hi!\"" + "'", str26, "_tset\"hi!\"");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "\\0" + "'", str28, "\\0");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "4.5.2.1" + "'", str29, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "\"hi!\"" + "'", str31, "\"hi!\"");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "\"_Python3\"" + "'", str37, "\"_Python3\"");
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 64 + "'", int41 == 64);
        org.junit.Assert.assertNotNull(strSet42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 64 + "'", int43 == 64);
        org.junit.Assert.assertNull(codeGenerator44);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "_tset_\"hi!\"Context" + "'", str46, "_tset_\"hi!\"Context");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "_tset_tset" + "'", str48, "_tset_tset");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "_tset\"\\\"Python3\\\"Context\"" + "'", str50, "_tset\"\\\"Python3\\\"Context\"");
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 29 + "'", int51 == 29);
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[]");
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertNotNull(strArray55);
        org.junit.Assert.assertNotNull(strArray56);
        org.junit.Assert.assertNotNull(strArray57);
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
    }

    @Test
    public void test1170() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1170");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet3 = python3Target1.getBadWords();
        int int4 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str7 = python3Target1.getTargetStringLiteralFromString("_tset\"hi!\"", false);
        boolean boolean8 = python3Target1.supportsOverloadedMethods();
        java.lang.String str11 = python3Target1.getTargetStringLiteralFromString("\"\\\"hi!\\\"\"Context", false);
        java.lang.String str13 = python3Target1.getListLabel("_\"Python3\"");
        java.lang.String str15 = python3Target1.getTargetStringLiteralFromString("");
        java.lang.String str16 = python3Target1.getLanguage();
        boolean boolean17 = python3Target1.wantsBaseVisitor();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 64 + "'", int4 == 64);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "_tset\\\"hi!\\\"" + "'", str7, "_tset\\\"hi!\\\"");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "\\\"\\\\\\\"hi!\\\\\\\"\\\"Context" + "'", str11, "\\\"\\\\\\\"hi!\\\\\\\"\\\"Context");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "_\"Python3\"" + "'", str13, "_\"Python3\"");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "\"\"" + "'", str15, "\"\"");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Python3" + "'", str16, "Python3");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    }

    @Test
    public void test1171() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1171");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet3 = python3Target1.getBadWords();
        java.lang.String str4 = python3Target1.getLanguage();
        java.lang.String str6 = python3Target1.getTargetStringLiteralFromString("Python3");
        boolean boolean7 = python3Target1.templatesExist();
        org.stringtemplate.v4.STGroup sTGroup8 = python3Target1.getTemplates();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str10 = python3Target1.getElementListName("\"_\\\"tset4.5.2.1Contex\\\"\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Python3" + "'", str4, "Python3");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\"Python3\"" + "'", str6, "\"Python3\"");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(sTGroup8);
    }

    @Test
    public void test1172() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1172");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str4 = python3Target1.getImplicitSetLabel("\"hi!\"");
        java.lang.String str6 = python3Target1.encodeIntAsCharEscape(0);
        java.lang.String str7 = python3Target1.getVersion();
        java.lang.String str9 = python3Target1.getImplicitRuleLabel("\"hi!\"Context");
        java.lang.String str10 = python3Target1.getLanguage();
        java.lang.String str12 = python3Target1.getListLabel("_tset_\"hi!\"Context");
        java.lang.String str14 = python3Target1.getImplicitRuleLabel(" ");
        java.lang.String str17 = python3Target1.getTargetStringLiteralFromString("\"_\\\"Python3\\\"\"Context", true);
        boolean boolean18 = python3Target1.wantsBaseListener();
        boolean boolean19 = python3Target1.supportsOverloadedMethods();
        boolean boolean20 = python3Target1.supportsOverloadedMethods();
        org.antlr.v4.tool.Grammar grammar21 = null;
        int[] intArray22 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String[] strArray23 = python3Target1.getTokenTypesAsTargetLabels(grammar21, intArray22);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "_tset\"hi!\"" + "'", str4, "_tset\"hi!\"");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\\0" + "'", str6, "\\0");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "4.5.2.1" + "'", str7, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "_\"hi!\"Context" + "'", str9, "_\"hi!\"Context");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Python3" + "'", str10, "Python3");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "_tset_\"hi!\"Context" + "'", str12, "_tset_\"hi!\"Context");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "_ " + "'", str14, "_ ");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "\"\\\"_\\\\\\\"Python3\\\\\\\"\\\"Context\"" + "'", str17, "\"\\\"_\\\\\\\"Python3\\\\\\\"\\\"Context\"");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    }

    @Test
    public void test1173() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1173");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str4 = python3Target1.getImplicitSetLabel("\"hi!\"");
        java.lang.String str6 = python3Target1.encodeIntAsCharEscape(0);
        boolean boolean7 = python3Target1.supportsOverloadedMethods();
        java.lang.String str8 = python3Target1.getVersion();
        java.lang.Class<?> wildcardClass9 = python3Target1.getClass();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "_tset\"hi!\"" + "'", str4, "_tset\"hi!\"");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\\0" + "'", str6, "\\0");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "4.5.2.1" + "'", str8, "4.5.2.1");
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test1174() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1174");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.supportsOverloadedMethods();
        java.lang.String str4 = python3Target1.getListLabel("\"_Python3\"");
        int int5 = python3Target1.getInlineTestSetWordSize();
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = python3Target1.getCodeGenerator();
        org.antlr.v4.tool.Grammar grammar7 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target9 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator8);
        int int10 = python3Target9.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet11 = python3Target9.getBadWords();
        int int12 = python3Target9.getInlineTestSetWordSize();
        java.lang.String str15 = python3Target9.getTargetStringLiteralFromString("_tset\"hi!\"", false);
        org.antlr.v4.codegen.CodeGenerator codeGenerator16 = python3Target9.getCodeGenerator();
        boolean boolean17 = python3Target9.supportsOverloadedMethods();
        java.lang.String str19 = python3Target9.getAltLabelContextStructName("\"Python3\"");
        boolean boolean20 = python3Target9.wantsBaseListener();
        org.stringtemplate.v4.STGroup sTGroup21 = python3Target9.getTemplates();
        org.stringtemplate.v4.STGroup sTGroup22 = python3Target9.getTemplates();
        java.util.Set<java.lang.String> strSet23 = python3Target9.getBadWords();
        java.lang.String str25 = python3Target9.encodeIntAsCharEscape((int) '4');
        java.lang.String str26 = python3Target9.getLanguage();
        org.antlr.v4.tool.Grammar grammar27 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator28 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target29 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator28);
        org.antlr.v4.codegen.CodeGenerator codeGenerator30 = null;
        java.lang.String str33 = python3Target29.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator30, "4.5.2.1", true);
        boolean boolean34 = python3Target29.templatesExist();
        org.antlr.v4.tool.Grammar grammar35 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator36 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target37 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator36);
        int int38 = python3Target37.getInlineTestSetWordSize();
        java.lang.String str40 = python3Target37.getImplicitSetLabel("\"hi!\"");
        java.lang.String str42 = python3Target37.encodeIntAsCharEscape(0);
        java.lang.String str43 = python3Target37.getVersion();
        java.lang.String str45 = python3Target37.getTargetStringLiteralFromString("hi!");
        org.antlr.v4.tool.Grammar grammar46 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator47 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target48 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator47);
        boolean boolean49 = python3Target48.supportsOverloadedMethods();
        java.lang.String str51 = python3Target48.getTargetStringLiteralFromString("_Python3");
        org.antlr.v4.tool.Grammar grammar52 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator53 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target54 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator53);
        int int55 = python3Target54.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet56 = python3Target54.getBadWords();
        int int57 = python3Target54.getInlineTestSetWordSize();
        org.antlr.v4.codegen.CodeGenerator codeGenerator58 = python3Target54.getCodeGenerator();
        java.lang.String str60 = python3Target54.getImplicitSetLabel("_\"hi!\"Context");
        java.lang.String str62 = python3Target54.getImplicitSetLabel("_tset");
        java.lang.String str64 = python3Target54.getImplicitSetLabel("\"\\\"Python3\\\"Context\"");
        int int65 = python3Target54.getSerializedATNSegmentLimit();
        org.antlr.v4.tool.Grammar grammar66 = null;
        int[] intArray67 = new int[] {};
        java.lang.String[] strArray68 = python3Target54.getTokenTypesAsTargetLabels(grammar66, intArray67);
        java.lang.String[] strArray69 = python3Target48.getTokenTypesAsTargetLabels(grammar52, intArray67);
        java.lang.String[] strArray70 = python3Target37.getTokenTypesAsTargetLabels(grammar46, intArray67);
        java.lang.String[] strArray71 = python3Target29.getTokenTypesAsTargetLabels(grammar35, intArray67);
        java.lang.String[] strArray72 = python3Target9.getTokenTypesAsTargetLabels(grammar27, intArray67);
        java.lang.String[] strArray73 = python3Target1.getTokenTypesAsTargetLabels(grammar7, intArray67);
        org.antlr.v4.codegen.model.RuleFunction ruleFunction74 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str75 = python3Target1.getRuleFunctionContextStructName(ruleFunction74);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "\"_Python3\"" + "'", str4, "\"_Python3\"");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 64 + "'", int5 == 64);
        org.junit.Assert.assertNull(codeGenerator6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 64 + "'", int10 == 64);
        org.junit.Assert.assertNotNull(strSet11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 64 + "'", int12 == 64);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "_tset\\\"hi!\\\"" + "'", str15, "_tset\\\"hi!\\\"");
        org.junit.Assert.assertNull(codeGenerator16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "\"Python3\"Context" + "'", str19, "\"Python3\"Context");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(sTGroup21);
        org.junit.Assert.assertNotNull(sTGroup22);
        org.junit.Assert.assertNotNull(strSet23);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "\\64" + "'", str25, "\\64");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "Python3" + "'", str26, "Python3");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "\".5.2.\"" + "'", str33, "\".5.2.\"");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 64 + "'", int38 == 64);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "_tset\"hi!\"" + "'", str40, "_tset\"hi!\"");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "\\0" + "'", str42, "\\0");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "4.5.2.1" + "'", str43, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "\"hi!\"" + "'", str45, "\"hi!\"");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "\"_Python3\"" + "'", str51, "\"_Python3\"");
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 64 + "'", int55 == 64);
        org.junit.Assert.assertNotNull(strSet56);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 64 + "'", int57 == 64);
        org.junit.Assert.assertNull(codeGenerator58);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "_tset_\"hi!\"Context" + "'", str60, "_tset_\"hi!\"Context");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "_tset_tset" + "'", str62, "_tset_tset");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "_tset\"\\\"Python3\\\"Context\"" + "'", str64, "_tset\"\\\"Python3\\\"Context\"");
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 29 + "'", int65 == 29);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[]");
        org.junit.Assert.assertNotNull(strArray68);
        org.junit.Assert.assertNotNull(strArray69);
        org.junit.Assert.assertNotNull(strArray70);
        org.junit.Assert.assertNotNull(strArray71);
        org.junit.Assert.assertNotNull(strArray72);
        org.junit.Assert.assertNotNull(strArray73);
    }

    @Test
    public void test1175() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1175");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet3 = python3Target1.getBadWords();
        int int4 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str7 = python3Target1.getTargetStringLiteralFromString("_tset\"hi!\"", false);
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = python3Target1.getCodeGenerator();
        boolean boolean9 = python3Target1.supportsOverloadedMethods();
        boolean boolean10 = python3Target1.supportsOverloadedMethods();
        java.lang.String str11 = python3Target1.getVersion();
        int int12 = python3Target1.getSerializedATNSegmentLimit();
        java.lang.String str13 = python3Target1.getLanguage();
        int int14 = python3Target1.getInlineTestSetWordSize();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str16 = python3Target1.getElementName("__ ");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 64 + "'", int4 == 64);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "_tset\\\"hi!\\\"" + "'", str7, "_tset\\\"hi!\\\"");
        org.junit.Assert.assertNull(codeGenerator8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "4.5.2.1" + "'", str11, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 29 + "'", int12 == 29);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Python3" + "'", str13, "Python3");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 64 + "'", int14 == 64);
    }

    @Test
    public void test1176() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1176");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet3 = python3Target1.getBadWords();
        int int4 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str7 = python3Target1.getTargetStringLiteralFromString("_tset\"hi!\"", false);
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = python3Target1.getCodeGenerator();
        boolean boolean9 = python3Target1.templatesExist();
        java.lang.String str11 = python3Target1.getListLabel("\"hi!\"Context");
        java.lang.String str13 = python3Target1.getListLabel("Python3");
        java.lang.String str15 = python3Target1.getImplicitRuleLabel("\"\\\"hi!\\\"\"Context");
        boolean boolean16 = python3Target1.supportsOverloadedMethods();
        java.lang.String str17 = python3Target1.getVersion();
        boolean boolean18 = python3Target1.wantsBaseVisitor();
        java.lang.Class<?> wildcardClass19 = python3Target1.getClass();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 64 + "'", int4 == 64);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "_tset\\\"hi!\\\"" + "'", str7, "_tset\\\"hi!\\\"");
        org.junit.Assert.assertNull(codeGenerator8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "\"hi!\"Context" + "'", str11, "\"hi!\"Context");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Python3" + "'", str13, "Python3");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "_\"\\\"hi!\\\"\"Context" + "'", str15, "_\"\\\"hi!\\\"\"Context");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "4.5.2.1" + "'", str17, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test1177() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1177");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet3 = python3Target1.getBadWords();
        java.lang.String str4 = python3Target1.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator5 = python3Target1.getCodeGenerator();
        org.stringtemplate.v4.STGroup sTGroup6 = python3Target1.getTemplates();
        boolean boolean7 = python3Target1.wantsBaseListener();
        boolean boolean8 = python3Target1.wantsBaseListener();
        java.lang.String str10 = python3Target1.getImplicitSetLabel("_\"Python3\"");
        int int11 = python3Target1.getInlineTestSetWordSize();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str13 = python3Target1.getImplicitTokenLabel("\"\\\"\\\\\\\\35\\\"\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Python3" + "'", str4, "Python3");
        org.junit.Assert.assertNull(codeGenerator5);
        org.junit.Assert.assertNotNull(sTGroup6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "_tset_\"Python3\"" + "'", str10, "_tset_\"Python3\"");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 64 + "'", int11 == 64);
    }

    @Test
    public void test1178() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1178");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str4 = python3Target1.getImplicitSetLabel("\"hi!\"");
        java.lang.String str6 = python3Target1.encodeIntAsCharEscape(0);
        java.lang.String str7 = python3Target1.getVersion();
        java.lang.String str9 = python3Target1.getImplicitRuleLabel("Python3");
        java.lang.String str12 = python3Target1.getTargetStringLiteralFromString("\"hi!\"", true);
        int int13 = python3Target1.getSerializedATNSegmentLimit();
        java.lang.String str14 = python3Target1.getVersion();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "_tset\"hi!\"" + "'", str4, "_tset\"hi!\"");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\\0" + "'", str6, "\\0");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "4.5.2.1" + "'", str7, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "_Python3" + "'", str9, "_Python3");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "\"\\\"hi!\\\"\"" + "'", str12, "\"\\\"hi!\\\"\"");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 29 + "'", int13 == 29);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "4.5.2.1" + "'", str14, "4.5.2.1");
    }

    @Test
    public void test1179() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1179");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet3 = python3Target1.getBadWords();
        java.lang.String str4 = python3Target1.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator5 = python3Target1.getCodeGenerator();
        org.stringtemplate.v4.STGroup sTGroup6 = python3Target1.getTemplates();
        boolean boolean7 = python3Target1.wantsBaseListener();
        boolean boolean8 = python3Target1.templatesExist();
        org.antlr.v4.codegen.CodeGenerator codeGenerator9 = python3Target1.getCodeGenerator();
        java.lang.String str11 = python3Target1.getListLabel("\"\\\\\\\"\\\\\\\\\\\\\\\"hi!\\\\\\\\\\\\\\\"\\\\\\\"Context\"");
        org.stringtemplate.v4.STGroup sTGroup12 = python3Target1.getTemplates();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Python3" + "'", str4, "Python3");
        org.junit.Assert.assertNull(codeGenerator5);
        org.junit.Assert.assertNotNull(sTGroup6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNull(codeGenerator9);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "\"\\\\\\\"\\\\\\\\\\\\\\\"hi!\\\\\\\\\\\\\\\"\\\\\\\"Context\"" + "'", str11, "\"\\\\\\\"\\\\\\\\\\\\\\\"hi!\\\\\\\\\\\\\\\"\\\\\\\"Context\"");
        org.junit.Assert.assertNotNull(sTGroup12);
    }

    @Test
    public void test1180() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1180");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str4 = python3Target1.getImplicitSetLabel("\"hi!\"");
        org.stringtemplate.v4.STGroup sTGroup5 = python3Target1.getTemplates();
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = null;
        java.lang.String str9 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator6, "\".5.2.\"", false);
        java.lang.String str11 = python3Target1.getAltLabelContextStructName("\"__\\\"\\\\\\\"hi!\\\\\\\"\\\"\"");
        org.antlr.v4.tool.ast.GrammarAST grammarAST12 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean13 = python3Target1.grammarSymbolCausesIssueInGeneratedCode(grammarAST12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "_tset\"hi!\"" + "'", str4, "_tset\"hi!\"");
        org.junit.Assert.assertNotNull(sTGroup5);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + ".5.2." + "'", str9, ".5.2.");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "\"__\\\"\\\\\\\"hi!\\\\\\\"\\\"\"Context" + "'", str11, "\"__\\\"\\\\\\\"hi!\\\\\\\"\\\"\"Context");
    }

    @Test
    public void test1181() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1181");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet3 = python3Target1.getBadWords();
        int int4 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str7 = python3Target1.getTargetStringLiteralFromString("_tset\"hi!\"", false);
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = python3Target1.getCodeGenerator();
        boolean boolean9 = python3Target1.supportsOverloadedMethods();
        boolean boolean10 = python3Target1.wantsBaseListener();
        boolean boolean11 = python3Target1.wantsBaseVisitor();
        java.lang.String str13 = python3Target1.getListLabel("\"\\\"\\\\\\\"tset\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"hi!\\\\\\\"\\\"\"");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 64 + "'", int4 == 64);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "_tset\\\"hi!\\\"" + "'", str7, "_tset\\\"hi!\\\"");
        org.junit.Assert.assertNull(codeGenerator8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "\"\\\"\\\\\\\"tset\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"hi!\\\\\\\"\\\"\"" + "'", str13, "\"\\\"\\\\\\\"tset\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"hi!\\\\\\\"\\\"\"");
    }

    @Test
    public void test1182() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1182");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet3 = python3Target1.getBadWords();
        int int4 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str7 = python3Target1.getTargetStringLiteralFromString("_tset\"hi!\"", false);
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = python3Target1.getCodeGenerator();
        boolean boolean9 = python3Target1.supportsOverloadedMethods();
        java.lang.String str11 = python3Target1.getAltLabelContextStructName("\"Python3\"");
        boolean boolean12 = python3Target1.wantsBaseListener();
        org.stringtemplate.v4.STGroup sTGroup13 = python3Target1.getTemplates();
        int int14 = python3Target1.getSerializedATNSegmentLimit();
        java.lang.String str16 = python3Target1.getImplicitRuleLabel("_tset\".5.2.\"");
        java.lang.String str19 = python3Target1.getTargetStringLiteralFromString("\"_\\\"Python3\\\"\"", false);
        java.lang.String str21 = python3Target1.getImplicitSetLabel("_tset\"\\\"hi!\\\"\"ContextContext");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 64 + "'", int4 == 64);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "_tset\\\"hi!\\\"" + "'", str7, "_tset\\\"hi!\\\"");
        org.junit.Assert.assertNull(codeGenerator8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "\"Python3\"Context" + "'", str11, "\"Python3\"Context");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(sTGroup13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 29 + "'", int14 == 29);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "__tset\".5.2.\"" + "'", str16, "__tset\".5.2.\"");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "\\\"_\\\\\\\"Python3\\\\\\\"\\\"" + "'", str19, "\\\"_\\\\\\\"Python3\\\\\\\"\\\"");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "_tset_tset\"\\\"hi!\\\"\"ContextContext" + "'", str21, "_tset_tset\"\\\"hi!\\\"\"ContextContext");
    }

    @Test
    public void test1183() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1183");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet3 = python3Target1.getBadWords();
        int int4 = python3Target1.getInlineTestSetWordSize();
        org.antlr.v4.codegen.CodeGenerator codeGenerator5 = python3Target1.getCodeGenerator();
        java.lang.String str7 = python3Target1.getImplicitSetLabel("tset\\\"hi!");
        java.lang.String str10 = python3Target1.getTargetStringLiteralFromString("_\\\\\\\"tset\\\\\\\\\\\\\\\"_Python3\\\\\\\"", true);
        java.lang.String str13 = python3Target1.getTargetStringLiteralFromString("_\"@\"", true);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 64 + "'", int4 == 64);
        org.junit.Assert.assertNull(codeGenerator5);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "_tsettset\\\"hi!" + "'", str7, "_tsettset\\\"hi!");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\"_\\\\\\\\\\\\\\\"tset\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"_Python3\\\\\\\\\\\\\\\"\"" + "'", str10, "\"_\\\\\\\\\\\\\\\"tset\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"_Python3\\\\\\\\\\\\\\\"\"");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "\"_\\\"@\\\"\"" + "'", str13, "\"_\\\"@\\\"\"");
    }

    @Test
    public void test1184() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1184");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str4 = python3Target1.getImplicitSetLabel("\"hi!\"");
        java.lang.String str6 = python3Target1.encodeIntAsCharEscape(0);
        java.lang.String str7 = python3Target1.getVersion();
        java.lang.String str9 = python3Target1.getImplicitRuleLabel("\"hi!\"Context");
        java.lang.String str10 = python3Target1.getLanguage();
        boolean boolean11 = python3Target1.wantsBaseListener();
        int int12 = python3Target1.getSerializedATNSegmentLimit();
        org.antlr.v4.tool.ast.GrammarAST grammarAST13 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean14 = python3Target1.grammarSymbolCausesIssueInGeneratedCode(grammarAST13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "_tset\"hi!\"" + "'", str4, "_tset\"hi!\"");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\\0" + "'", str6, "\\0");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "4.5.2.1" + "'", str7, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "_\"hi!\"Context" + "'", str9, "_\"hi!\"Context");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Python3" + "'", str10, "Python3");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 29 + "'", int12 == 29);
    }

    @Test
    public void test1185() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1185");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet3 = python3Target1.getBadWords();
        int int4 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str7 = python3Target1.getTargetStringLiteralFromString("_tset\"hi!\"", false);
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = python3Target1.getCodeGenerator();
        boolean boolean9 = python3Target1.templatesExist();
        java.util.Set<java.lang.String> strSet10 = python3Target1.getBadWords();
        int int11 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str13 = python3Target1.getImplicitSetLabel("\"tset\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"Python3\\\\\\\\\\\\\\\"Context\"");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 64 + "'", int4 == 64);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "_tset\\\"hi!\\\"" + "'", str7, "_tset\\\"hi!\\\"");
        org.junit.Assert.assertNull(codeGenerator8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(strSet10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 64 + "'", int11 == 64);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "_tset\"tset\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"Python3\\\\\\\\\\\\\\\"Context\"" + "'", str13, "_tset\"tset\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"Python3\\\\\\\\\\\\\\\"Context\"");
    }

    @Test
    public void test1186() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1186");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str5 = python3Target1.getTargetStringLiteralFromString("", false);
        java.util.Set<java.lang.String> strSet6 = python3Target1.getBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = null;
        java.lang.String str10 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator7, "__\"hi!\"Context", true);
        java.lang.String str12 = python3Target1.getImplicitRuleLabel("Et\\\"hContext");
        org.antlr.v4.tool.ast.GrammarAST grammarAST13 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean14 = python3Target1.grammarSymbolCausesIssueInGeneratedCode(grammarAST13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNotNull(strSet6);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\"_\\\"hi!\\\"Contex\"" + "'", str10, "\"_\\\"hi!\\\"Contex\"");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "_Et\\\"hContext" + "'", str12, "_Et\\\"hContext");
    }

    @Test
    public void test1187() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1187");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet3 = python3Target1.getBadWords();
        int int4 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str7 = python3Target1.getTargetStringLiteralFromString("_tset\"hi!\"", false);
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = python3Target1.getCodeGenerator();
        int int9 = python3Target1.getInlineTestSetWordSize();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 64 + "'", int4 == 64);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "_tset\\\"hi!\\\"" + "'", str7, "_tset\\\"hi!\\\"");
        org.junit.Assert.assertNull(codeGenerator8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 64 + "'", int9 == 64);
    }

    @Test
    public void test1188() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1188");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet3 = python3Target1.getBadWords();
        int int4 = python3Target1.getInlineTestSetWordSize();
        boolean boolean5 = python3Target1.wantsBaseListener();
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = python3Target1.getCodeGenerator();
        java.lang.String str7 = python3Target1.getLanguage();
        java.lang.String str10 = python3Target1.getTargetStringLiteralFromString("__Python3Context", true);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 64 + "'", int4 == 64);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(codeGenerator6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Python3" + "'", str7, "Python3");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\"__Python3Context\"" + "'", str10, "\"__Python3Context\"");
    }

    @Test
    public void test1189() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1189");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet3 = python3Target1.getBadWords();
        int int4 = python3Target1.getInlineTestSetWordSize();
        org.antlr.v4.codegen.CodeGenerator codeGenerator5 = python3Target1.getCodeGenerator();
        java.lang.String str6 = python3Target1.getLanguage();
        java.lang.String str8 = python3Target1.getListLabel("tset\\\"hi!");
        java.lang.String str10 = python3Target1.getTargetStringLiteralFromString("\"_tset_tset_\\\"hi!\\\"Context\"");
        java.util.Set<java.lang.String> strSet11 = python3Target1.getBadWords();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 64 + "'", int4 == 64);
        org.junit.Assert.assertNull(codeGenerator5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Python3" + "'", str6, "Python3");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "tset\\\"hi!" + "'", str8, "tset\\\"hi!");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\"\\\"_tset_tset_\\\\\\\"hi!\\\\\\\"Context\\\"\"" + "'", str10, "\"\\\"_tset_tset_\\\\\\\"hi!\\\\\\\"Context\\\"\"");
        org.junit.Assert.assertNotNull(strSet11);
    }

    @Test
    public void test1190() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1190");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet3 = python3Target1.getBadWords();
        int int4 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str7 = python3Target1.getTargetStringLiteralFromString("_tset\"hi!\"", false);
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = python3Target1.getCodeGenerator();
        boolean boolean9 = python3Target1.supportsOverloadedMethods();
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = python3Target1.getCodeGenerator();
        boolean boolean11 = python3Target1.templatesExist();
        boolean boolean12 = python3Target1.supportsOverloadedMethods();
        org.antlr.v4.codegen.model.RuleFunction ruleFunction13 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str14 = python3Target1.getRuleFunctionContextStructName(ruleFunction13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 64 + "'", int4 == 64);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "_tset\\\"hi!\\\"" + "'", str7, "_tset\\\"hi!\\\"");
        org.junit.Assert.assertNull(codeGenerator8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(codeGenerator10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test1191() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1191");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet3 = python3Target1.getBadWords();
        boolean boolean4 = python3Target1.wantsBaseListener();
        java.lang.String str5 = python3Target1.getVersion();
        boolean boolean6 = python3Target1.templatesExist();
        java.util.Set<java.lang.String> strSet7 = python3Target1.getBadWords();
        java.lang.String str9 = python3Target1.encodeIntAsCharEscape((int) ' ');
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = python3Target1.getCodeGenerator();
        java.lang.String str12 = python3Target1.getImplicitRuleLabel("_tset_tset_\"Python3\"");
        org.antlr.v4.tool.Grammar grammar13 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str15 = python3Target1.getTokenTypeAsTargetLabel(grammar13, 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "4.5.2.1" + "'", str5, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(strSet7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + " " + "'", str9, " ");
        org.junit.Assert.assertNull(codeGenerator10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "__tset_tset_\"Python3\"" + "'", str12, "__tset_tset_\"Python3\"");
    }

    @Test
    public void test1192() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1192");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getSerializedATNSegmentLimit();
        int int3 = python3Target1.getInlineTestSetWordSize();
        org.antlr.v4.tool.Rule rule4 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str5 = python3Target1.getRuleFunctionContextStructName(rule4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 29 + "'", int2 == 29);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 64 + "'", int3 == 64);
    }

    @Test
    public void test1193() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1193");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet3 = python3Target1.getBadWords();
        boolean boolean4 = python3Target1.wantsBaseListener();
        int int5 = python3Target1.getSerializedATNSegmentLimit();
        int int6 = python3Target1.getSerializedATNSegmentLimit();
        java.util.Set<java.lang.String> strSet7 = python3Target1.getBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = null;
        java.lang.String str11 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator8, "_tset_\"\\\"_\\\"hi!\\\"Contex\"Context", true);
        java.lang.String str13 = python3Target1.getImplicitSetLabel("\"\\\"_\\\\\\\"hi!\\\\\\\"Contex\\\"\"");
        java.lang.String str15 = python3Target1.getListLabel("_\"Python3\"");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 29 + "'", int5 == 29);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 29 + "'", int6 == 29);
        org.junit.Assert.assertNotNull(strSet7);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "\"tset_\\\"\\\"_\\\"hi!\\\"Contex\\\"Contex\"" + "'", str11, "\"tset_\\\"\\\"_\\\"hi!\\\"Contex\\\"Contex\"");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "_tset\"\\\"_\\\\\\\"hi!\\\\\\\"Contex\\\"\"" + "'", str13, "_tset\"\\\"_\\\\\\\"hi!\\\\\\\"Contex\\\"\"");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "_\"Python3\"" + "'", str15, "_\"Python3\"");
    }

    @Test
    public void test1194() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1194");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet3 = python3Target1.getBadWords();
        int int4 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str7 = python3Target1.getTargetStringLiteralFromString("_tset\"hi!\"", false);
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = python3Target1.getCodeGenerator();
        boolean boolean9 = python3Target1.supportsOverloadedMethods();
        java.lang.String str11 = python3Target1.getAltLabelContextStructName("\"Python3\"");
        boolean boolean12 = python3Target1.wantsBaseListener();
        org.stringtemplate.v4.STGroup sTGroup13 = python3Target1.getTemplates();
        boolean boolean14 = python3Target1.wantsBaseVisitor();
        java.lang.String str16 = python3Target1.encodeIntAsCharEscape((int) (short) 10);
        boolean boolean17 = python3Target1.wantsBaseListener();
        java.lang.String str19 = python3Target1.getImplicitRuleLabel("\\\"hi!\\\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator20 = python3Target1.getCodeGenerator();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 64 + "'", int4 == 64);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "_tset\\\"hi!\\\"" + "'", str7, "_tset\\\"hi!\\\"");
        org.junit.Assert.assertNull(codeGenerator8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "\"Python3\"Context" + "'", str11, "\"Python3\"Context");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(sTGroup13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "\\n" + "'", str16, "\\n");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "_\\\"hi!\\\"" + "'", str19, "_\\\"hi!\\\"");
        org.junit.Assert.assertNull(codeGenerator20);
    }

    @Test
    public void test1195() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1195");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet3 = python3Target1.getBadWords();
        int int4 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str7 = python3Target1.getTargetStringLiteralFromString("_tset\"hi!\"", false);
        boolean boolean8 = python3Target1.supportsOverloadedMethods();
        org.antlr.v4.codegen.CodeGenerator codeGenerator9 = null;
        java.lang.String str12 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator9, "\".5.2.\"", false);
        boolean boolean13 = python3Target1.supportsOverloadedMethods();
        java.lang.String str15 = python3Target1.getImplicitSetLabel("\\\\\\\\0");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 64 + "'", int4 == 64);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "_tset\\\"hi!\\\"" + "'", str7, "_tset\\\"hi!\\\"");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + ".5.2." + "'", str12, ".5.2.");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "_tset\\\\\\\\0" + "'", str15, "_tset\\\\\\\\0");
    }

    @Test
    public void test1196() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1196");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str4 = python3Target1.getImplicitSetLabel("\"hi!\"");
        java.lang.String str6 = python3Target1.encodeIntAsCharEscape(0);
        java.lang.String str7 = python3Target1.getVersion();
        java.lang.String str9 = python3Target1.getTargetStringLiteralFromString("hi!");
        boolean boolean10 = python3Target1.templatesExist();
        java.lang.String str12 = python3Target1.getImplicitRuleLabel("tset_\\\"hi!\\\"Contex");
        boolean boolean13 = python3Target1.wantsBaseVisitor();
        java.lang.String str16 = python3Target1.getTargetStringLiteralFromString("Python3", true);
        int int17 = python3Target1.getInlineTestSetWordSize();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "_tset\"hi!\"" + "'", str4, "_tset\"hi!\"");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\\0" + "'", str6, "\\0");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "4.5.2.1" + "'", str7, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\"hi!\"" + "'", str9, "\"hi!\"");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "_tset_\\\"hi!\\\"Contex" + "'", str12, "_tset_\\\"hi!\\\"Contex");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "\"Python3\"" + "'", str16, "\"Python3\"");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 64 + "'", int17 == 64);
    }

    @Test
    public void test1197() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1197");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str4 = python3Target1.getImplicitSetLabel("\"hi!\"");
        java.lang.String str6 = python3Target1.encodeIntAsCharEscape(0);
        java.lang.String str7 = python3Target1.getVersion();
        java.lang.String str9 = python3Target1.getImplicitRuleLabel("Python3");
        java.lang.String str12 = python3Target1.getTargetStringLiteralFromString("\"hi!\"", true);
        int int13 = python3Target1.getSerializedATNSegmentLimit();
        java.lang.String str14 = python3Target1.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup15 = python3Target1.getTemplates();
        java.lang.String str18 = python3Target1.getTargetStringLiteralFromString("\"_tset\\\"\\\\\\\"_\\\\\\\\\\\\\\\"hi!\\\\\\\\\\\\\\\"Contex\\\\\\\"\\\"\"", false);
        java.util.Set<java.lang.String> strSet19 = python3Target1.getBadWords();
        java.util.Set<java.lang.String> strSet20 = python3Target1.getBadWords();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "_tset\"hi!\"" + "'", str4, "_tset\"hi!\"");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\\0" + "'", str6, "\\0");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "4.5.2.1" + "'", str7, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "_Python3" + "'", str9, "_Python3");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "\"\\\"hi!\\\"\"" + "'", str12, "\"\\\"hi!\\\"\"");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 29 + "'", int13 == 29);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Python3" + "'", str14, "Python3");
        org.junit.Assert.assertNotNull(sTGroup15);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "\\\"_tset\\\\\\\"\\\\\\\\\\\\\\\"_\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"hi!\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"Contex\\\\\\\\\\\\\\\"\\\\\\\"\\\"" + "'", str18, "\\\"_tset\\\\\\\"\\\\\\\\\\\\\\\"_\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"hi!\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"Contex\\\\\\\\\\\\\\\"\\\\\\\"\\\"");
        org.junit.Assert.assertNotNull(strSet19);
        org.junit.Assert.assertNotNull(strSet20);
    }

    @Test
    public void test1198() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1198");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getSerializedATNSegmentLimit();
        int int3 = python3Target1.getInlineTestSetWordSize();
        int int4 = python3Target1.getSerializedATNSegmentLimit();
        org.antlr.v4.codegen.CodeGenerator codeGenerator5 = python3Target1.getCodeGenerator();
        java.lang.String str6 = python3Target1.getLanguage();
        boolean boolean7 = python3Target1.templatesExist();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 29 + "'", int2 == 29);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 64 + "'", int3 == 64);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 29 + "'", int4 == 29);
        org.junit.Assert.assertNull(codeGenerator5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Python3" + "'", str6, "Python3");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
    }

    @Test
    public void test1199() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1199");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str5 = python3Target1.getTargetStringLiteralFromString("", false);
        java.util.Set<java.lang.String> strSet6 = python3Target1.getBadWords();
        java.util.Set<java.lang.String> strSet7 = python3Target1.getBadWords();
        java.lang.String str9 = python3Target1.getImplicitRuleLabel("\"@\"");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str11 = python3Target1.getAltLabelContextStructName("");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 0");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNotNull(strSet6);
        org.junit.Assert.assertNotNull(strSet7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "_\"@\"" + "'", str9, "_\"@\"");
    }

    @Test
    public void test1200() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1200");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet3 = python3Target1.getBadWords();
        int int4 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str7 = python3Target1.getTargetStringLiteralFromString("_tset\"hi!\"", false);
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = python3Target1.getCodeGenerator();
        boolean boolean9 = python3Target1.templatesExist();
        java.lang.String str11 = python3Target1.getListLabel("\"hi!\"Context");
        boolean boolean12 = python3Target1.supportsOverloadedMethods();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str14 = python3Target1.getElementListName("_tset\"_tset_\\\\\\\"hi!\\\\\\\"Contex\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 64 + "'", int4 == 64);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "_tset\\\"hi!\\\"" + "'", str7, "_tset\\\"hi!\\\"");
        org.junit.Assert.assertNull(codeGenerator8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "\"hi!\"Context" + "'", str11, "\"hi!\"Context");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test1201() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1201");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet3 = python3Target1.getBadWords();
        int int4 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str7 = python3Target1.getTargetStringLiteralFromString("_tset\"hi!\"", false);
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = python3Target1.getCodeGenerator();
        boolean boolean9 = python3Target1.supportsOverloadedMethods();
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = python3Target1.getCodeGenerator();
        int int11 = python3Target1.getSerializedATNSegmentLimit();
        java.lang.String str12 = python3Target1.getVersion();
        java.lang.String str13 = python3Target1.getVersion();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str15 = python3Target1.getElementListName("\"_tsettset\\\\\\\"hi!\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 64 + "'", int4 == 64);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "_tset\\\"hi!\\\"" + "'", str7, "_tset\\\"hi!\\\"");
        org.junit.Assert.assertNull(codeGenerator8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(codeGenerator10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 29 + "'", int11 == 29);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "4.5.2.1" + "'", str12, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "4.5.2.1" + "'", str13, "4.5.2.1");
    }

    @Test
    public void test1202() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1202");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet3 = python3Target1.getBadWords();
        java.lang.String str4 = python3Target1.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator5 = python3Target1.getCodeGenerator();
        org.stringtemplate.v4.STGroup sTGroup6 = python3Target1.getTemplates();
        boolean boolean7 = python3Target1.wantsBaseListener();
        boolean boolean8 = python3Target1.templatesExist();
        org.antlr.v4.codegen.CodeGenerator codeGenerator9 = python3Target1.getCodeGenerator();
        boolean boolean10 = python3Target1.supportsOverloadedMethods();
        int int11 = python3Target1.getSerializedATNSegmentLimit();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str13 = python3Target1.getElementName("_\" \"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Python3" + "'", str4, "Python3");
        org.junit.Assert.assertNull(codeGenerator5);
        org.junit.Assert.assertNotNull(sTGroup6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNull(codeGenerator9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 29 + "'", int11 == 29);
    }

    @Test
    public void test1203() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1203");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str4 = python3Target1.getImplicitSetLabel("\"hi!\"");
        java.lang.String str6 = python3Target1.encodeIntAsCharEscape(0);
        java.lang.String str7 = python3Target1.getVersion();
        org.stringtemplate.v4.STGroup sTGroup8 = python3Target1.getTemplates();
        java.lang.String str11 = python3Target1.getTargetStringLiteralFromString("\"\\\\35\"", true);
        org.antlr.v4.codegen.model.RuleFunction ruleFunction12 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str13 = python3Target1.getRuleFunctionContextStructName(ruleFunction12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "_tset\"hi!\"" + "'", str4, "_tset\"hi!\"");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\\0" + "'", str6, "\\0");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "4.5.2.1" + "'", str7, "4.5.2.1");
        org.junit.Assert.assertNotNull(sTGroup8);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "\"\\\"\\\\\\\\35\\\"\"" + "'", str11, "\"\\\"\\\\\\\\35\\\"\"");
    }

    @Test
    public void test1204() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1204");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet3 = python3Target1.getBadWords();
        java.lang.String str4 = python3Target1.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator5 = python3Target1.getCodeGenerator();
        org.stringtemplate.v4.STGroup sTGroup6 = python3Target1.getTemplates();
        boolean boolean7 = python3Target1.wantsBaseListener();
        boolean boolean8 = python3Target1.wantsBaseListener();
        java.lang.String str10 = python3Target1.getImplicitRuleLabel("_Python3");
        java.lang.String str11 = python3Target1.getVersion();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Python3" + "'", str4, "Python3");
        org.junit.Assert.assertNull(codeGenerator5);
        org.junit.Assert.assertNotNull(sTGroup6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "__Python3" + "'", str10, "__Python3");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "4.5.2.1" + "'", str11, "4.5.2.1");
    }

    @Test
    public void test1205() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1205");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        org.antlr.v4.codegen.CodeGenerator codeGenerator2 = null;
        java.lang.String str5 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator2, "4.5.2.1", true);
        java.lang.String str6 = python3Target1.getLanguage();
        java.lang.String str8 = python3Target1.getImplicitRuleLabel("\"\\\"_\\\"hi!\\\"Contex\"");
        boolean boolean9 = python3Target1.wantsBaseListener();
        java.lang.String str12 = python3Target1.getTargetStringLiteralFromString("\"@\"", false);
        java.lang.String str14 = python3Target1.getListLabel("\"\\\"\\\"hi!\\\"\"");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "\".5.2.\"" + "'", str5, "\".5.2.\"");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Python3" + "'", str6, "Python3");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "_\"\\\"_\\\"hi!\\\"Contex\"" + "'", str8, "_\"\\\"_\\\"hi!\\\"Contex\"");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "\\\"@\\\"" + "'", str12, "\\\"@\\\"");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "\"\\\"\\\"hi!\\\"\"" + "'", str14, "\"\\\"\\\"hi!\\\"\"");
    }

    @Test
    public void test1206() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1206");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str4 = python3Target1.getImplicitSetLabel("\"hi!\"");
        java.lang.String str6 = python3Target1.encodeIntAsCharEscape(0);
        java.lang.String str7 = python3Target1.getVersion();
        java.lang.String str9 = python3Target1.getTargetStringLiteralFromString("hi!");
        java.lang.String str11 = python3Target1.getListLabel("");
        int int12 = python3Target1.getInlineTestSetWordSize();
        boolean boolean13 = python3Target1.wantsBaseListener();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "_tset\"hi!\"" + "'", str4, "_tset\"hi!\"");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\\0" + "'", str6, "\\0");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "4.5.2.1" + "'", str7, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\"hi!\"" + "'", str9, "\"hi!\"");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 64 + "'", int12 == 64);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test1207() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1207");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str4 = python3Target1.getImplicitSetLabel("\"hi!\"");
        java.lang.String str6 = python3Target1.encodeIntAsCharEscape(0);
        java.lang.String str7 = python3Target1.getVersion();
        java.lang.String str9 = python3Target1.getTargetStringLiteralFromString("hi!");
        java.lang.String str12 = python3Target1.getTargetStringLiteralFromString("_\"Python3\"", true);
        int int13 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str15 = python3Target1.getListLabel("\\\"\\\\\\\"\\\\\\\\\\\\\\\"Python3\\\\\\\\\\\\\\\"Context\\\\\\\"\\\"Context");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "_tset\"hi!\"" + "'", str4, "_tset\"hi!\"");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\\0" + "'", str6, "\\0");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "4.5.2.1" + "'", str7, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\"hi!\"" + "'", str9, "\"hi!\"");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "\"_\\\"Python3\\\"\"" + "'", str12, "\"_\\\"Python3\\\"\"");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 64 + "'", int13 == 64);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "\\\"\\\\\\\"\\\\\\\\\\\\\\\"Python3\\\\\\\\\\\\\\\"Context\\\\\\\"\\\"Context" + "'", str15, "\\\"\\\\\\\"\\\\\\\\\\\\\\\"Python3\\\\\\\\\\\\\\\"Context\\\\\\\"\\\"Context");
    }

    @Test
    public void test1208() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1208");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str5 = python3Target1.getTargetStringLiteralFromString("", false);
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = null;
        java.lang.String str9 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator6, "", false);
        java.lang.String str11 = python3Target1.encodeIntAsCharEscape((int) (short) 10);
        java.lang.String str13 = python3Target1.getAltLabelContextStructName("\"\\\"tset\\\\\\\"_Python3\\\"\"Context");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "\\n" + "'", str11, "\\n");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "\"\\\"tset\\\\\\\"_Python3\\\"\"ContextContext" + "'", str13, "\"\\\"tset\\\\\\\"_Python3\\\"\"ContextContext");
    }

    @Test
    public void test1209() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1209");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.lang.String str3 = python3Target1.getImplicitRuleLabel("_\"hi!\"Context");
        java.lang.String str4 = python3Target1.getLanguage();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str6 = python3Target1.getImplicitTokenLabel("\"_tset\\\"\\\\\\\"_\\\\\\\\\\\\\\\"hi!\\\\\\\\\\\\\\\"Contex\\\\\\\"\\\"\"Context");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "__\"hi!\"Context" + "'", str3, "__\"hi!\"Context");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Python3" + "'", str4, "Python3");
    }

    @Test
    public void test1210() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1210");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet3 = python3Target1.getBadWords();
        int int4 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str7 = python3Target1.getTargetStringLiteralFromString("_tset\"hi!\"", false);
        java.lang.String str9 = python3Target1.encodeIntAsCharEscape((int) (byte) 100);
        java.lang.String str11 = python3Target1.getImplicitRuleLabel("\"\\\"_\\\"hi!\\\"Contex\"Context");
        java.lang.String str13 = python3Target1.getImplicitRuleLabel("_\"\\\"_\\\"hi!\\\"Contex\"Context");
        java.lang.String str14 = python3Target1.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator15 = python3Target1.getCodeGenerator();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str17 = python3Target1.getImplicitTokenLabel("__\"\\\"hi!\\\"\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 64 + "'", int4 == 64);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "_tset\\\"hi!\\\"" + "'", str7, "_tset\\\"hi!\\\"");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "d" + "'", str9, "d");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "_\"\\\"_\\\"hi!\\\"Contex\"Context" + "'", str11, "_\"\\\"_\\\"hi!\\\"Contex\"Context");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "__\"\\\"_\\\"hi!\\\"Contex\"Context" + "'", str13, "__\"\\\"_\\\"hi!\\\"Contex\"Context");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "4.5.2.1" + "'", str14, "4.5.2.1");
        org.junit.Assert.assertNull(codeGenerator15);
    }

    @Test
    public void test1211() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1211");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.lang.String str3 = python3Target1.getImplicitRuleLabel("\"tset4.5.2.1Contex\"");
        int int4 = python3Target1.getSerializedATNSegmentLimit();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "_\"tset4.5.2.1Contex\"" + "'", str3, "_\"tset4.5.2.1Contex\"");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 29 + "'", int4 == 29);
    }

    @Test
    public void test1212() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1212");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str4 = python3Target1.getImplicitSetLabel("\"hi!\"");
        java.lang.String str6 = python3Target1.encodeIntAsCharEscape(0);
        java.lang.String str7 = python3Target1.getVersion();
        java.lang.String str9 = python3Target1.getTargetStringLiteralFromString("hi!");
        boolean boolean10 = python3Target1.templatesExist();
        java.lang.String str12 = python3Target1.getImplicitRuleLabel("tset_\\\"hi!\\\"Contex");
        boolean boolean13 = python3Target1.wantsBaseVisitor();
        boolean boolean14 = python3Target1.templatesExist();
        java.lang.String str15 = python3Target1.getLanguage();
        java.lang.String str17 = python3Target1.getTargetStringLiteralFromString("set_\\\"hi!\\\"Conte");
        boolean boolean18 = python3Target1.supportsOverloadedMethods();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str20 = python3Target1.getElementListName("\"\\\"\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"hi!\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"Context\\\"ContextContext\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "_tset\"hi!\"" + "'", str4, "_tset\"hi!\"");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\\0" + "'", str6, "\\0");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "4.5.2.1" + "'", str7, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\"hi!\"" + "'", str9, "\"hi!\"");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "_tset_\\\"hi!\\\"Contex" + "'", str12, "_tset_\\\"hi!\\\"Contex");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Python3" + "'", str15, "Python3");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "\"set_\\\\\\\"hi!\\\\\\\"Conte\"" + "'", str17, "\"set_\\\\\\\"hi!\\\\\\\"Conte\"");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    }

    @Test
    public void test1213() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1213");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet3 = python3Target1.getBadWords();
        boolean boolean4 = python3Target1.supportsOverloadedMethods();
        boolean boolean5 = python3Target1.wantsBaseVisitor();
        boolean boolean6 = python3Target1.templatesExist();
        int int7 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str8 = python3Target1.getVersion();
        java.lang.String str9 = python3Target1.getVersion();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str11 = python3Target1.getImplicitTokenLabel("_tset\\\"\\\"_\\\"hi!\\\"Contex");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 64 + "'", int7 == 64);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "4.5.2.1" + "'", str8, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "4.5.2.1" + "'", str9, "4.5.2.1");
    }

    @Test
    public void test1214() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1214");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.supportsOverloadedMethods();
        java.lang.String str4 = python3Target1.getTargetStringLiteralFromString("_Python3");
        java.lang.String str7 = python3Target1.getTargetStringLiteralFromString("\"Python3\"Context", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = python3Target1.getCodeGenerator();
        java.lang.String str10 = python3Target1.encodeIntAsCharEscape((int) '#');
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "\"_Python3\"" + "'", str4, "\"_Python3\"");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "\"\\\"Python3\\\"Context\"" + "'", str7, "\"\\\"Python3\\\"Context\"");
        org.junit.Assert.assertNull(codeGenerator8);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "#" + "'", str10, "#");
    }

    @Test
    public void test1215() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1215");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str4 = python3Target1.getImplicitSetLabel("\"hi!\"");
        java.lang.String str6 = python3Target1.encodeIntAsCharEscape(0);
        boolean boolean7 = python3Target1.supportsOverloadedMethods();
        int int8 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str10 = python3Target1.getImplicitRuleLabel("_tset_\"hi!\"ContextContext");
        org.stringtemplate.v4.STGroup sTGroup11 = python3Target1.getTemplates();
        boolean boolean12 = python3Target1.supportsOverloadedMethods();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "_tset\"hi!\"" + "'", str4, "_tset\"hi!\"");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\\0" + "'", str6, "\\0");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 64 + "'", int8 == 64);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "__tset_\"hi!\"ContextContext" + "'", str10, "__tset_\"hi!\"ContextContext");
        org.junit.Assert.assertNotNull(sTGroup11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test1216() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1216");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str5 = python3Target1.getTargetStringLiteralFromString("", false);
        boolean boolean6 = python3Target1.wantsBaseVisitor();
        int int7 = python3Target1.getSerializedATNSegmentLimit();
        java.lang.String str8 = python3Target1.getVersion();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 29 + "'", int7 == 29);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "4.5.2.1" + "'", str8, "4.5.2.1");
    }

    @Test
    public void test1217() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1217");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str4 = python3Target1.getImplicitSetLabel("\"hi!\"");
        java.lang.String str6 = python3Target1.encodeIntAsCharEscape(0);
        java.lang.String str8 = python3Target1.encodeIntAsCharEscape(100);
        org.antlr.v4.codegen.CodeGenerator codeGenerator9 = null;
        java.lang.String str12 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator9, "\\0Context", true);
        boolean boolean13 = python3Target1.wantsBaseVisitor();
        int int14 = python3Target1.getInlineTestSetWordSize();
        boolean boolean15 = python3Target1.wantsBaseListener();
        java.lang.String str17 = python3Target1.getImplicitSetLabel("\"tset\\\"_Python3\"");
        org.antlr.v4.tool.ast.GrammarAST grammarAST18 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean19 = python3Target1.grammarSymbolCausesIssueInGeneratedCode(grammarAST18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "_tset\"hi!\"" + "'", str4, "_tset\"hi!\"");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\\0" + "'", str6, "\\0");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "d" + "'", str8, "d");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "\"0Contex\"" + "'", str12, "\"0Contex\"");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 64 + "'", int14 == 64);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "_tset\"tset\\\"_Python3\"" + "'", str17, "_tset\"tset\\\"_Python3\"");
    }

    @Test
    public void test1218() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1218");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str4 = python3Target1.getImplicitSetLabel("\"hi!\"");
        java.lang.String str6 = python3Target1.encodeIntAsCharEscape(0);
        boolean boolean7 = python3Target1.templatesExist();
        java.lang.String str10 = python3Target1.getTargetStringLiteralFromString("_\"\\\"hi!\\\"\"Context", false);
        int int11 = python3Target1.getSerializedATNSegmentLimit();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "_tset\"hi!\"" + "'", str4, "_tset\"hi!\"");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\\0" + "'", str6, "\\0");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "_\\\"\\\\\\\"hi!\\\\\\\"\\\"Context" + "'", str10, "_\\\"\\\\\\\"hi!\\\\\\\"\\\"Context");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 29 + "'", int11 == 29);
    }

    @Test
    public void test1219() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1219");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str4 = python3Target1.getImplicitSetLabel("\"hi!\"");
        java.lang.String str6 = python3Target1.encodeIntAsCharEscape(0);
        java.lang.String str7 = python3Target1.getVersion();
        java.lang.String str9 = python3Target1.getImplicitRuleLabel("\"hi!\"Context");
        java.lang.String str10 = python3Target1.getLanguage();
        boolean boolean11 = python3Target1.wantsBaseListener();
        java.lang.String str12 = python3Target1.getLanguage();
        boolean boolean13 = python3Target1.wantsBaseVisitor();
        java.lang.String str15 = python3Target1.getImplicitRuleLabel("\" \"");
        int int16 = python3Target1.getSerializedATNSegmentLimit();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "_tset\"hi!\"" + "'", str4, "_tset\"hi!\"");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\\0" + "'", str6, "\\0");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "4.5.2.1" + "'", str7, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "_\"hi!\"Context" + "'", str9, "_\"hi!\"Context");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Python3" + "'", str10, "Python3");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Python3" + "'", str12, "Python3");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "_\" \"" + "'", str15, "_\" \"");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 29 + "'", int16 == 29);
    }

    @Test
    public void test1220() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1220");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet3 = python3Target1.getBadWords();
        int int4 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str7 = python3Target1.getTargetStringLiteralFromString("_tset\"hi!\"", false);
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = python3Target1.getCodeGenerator();
        boolean boolean9 = python3Target1.supportsOverloadedMethods();
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = python3Target1.getCodeGenerator();
        int int11 = python3Target1.getSerializedATNSegmentLimit();
        java.lang.String str13 = python3Target1.getAltLabelContextStructName("\"tset_\\\\\\\"hi!\\\\\\\"Contex\"");
        int int14 = python3Target1.getSerializedATNSegmentLimit();
        java.lang.String str15 = python3Target1.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator16 = null;
        java.lang.String str19 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator16, "\"@\"", true);
        org.antlr.v4.tool.Grammar grammar20 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str22 = python3Target1.getTokenTypeAsTargetLabel(grammar20, 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 64 + "'", int4 == 64);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "_tset\\\"hi!\\\"" + "'", str7, "_tset\\\"hi!\\\"");
        org.junit.Assert.assertNull(codeGenerator8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(codeGenerator10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 29 + "'", int11 == 29);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "\"tset_\\\\\\\"hi!\\\\\\\"Contex\"Context" + "'", str13, "\"tset_\\\\\\\"hi!\\\\\\\"Contex\"Context");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 29 + "'", int14 == 29);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "4.5.2.1" + "'", str15, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "\"@\"" + "'", str19, "\"@\"");
    }

    @Test
    public void test1221() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1221");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet3 = python3Target1.getBadWords();
        int int4 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str7 = python3Target1.getTargetStringLiteralFromString("_tset\"hi!\"", false);
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = python3Target1.getCodeGenerator();
        boolean boolean9 = python3Target1.supportsOverloadedMethods();
        java.lang.String str11 = python3Target1.getAltLabelContextStructName("\"Python3\"");
        boolean boolean12 = python3Target1.wantsBaseListener();
        int int13 = python3Target1.getInlineTestSetWordSize();
        boolean boolean14 = python3Target1.wantsBaseListener();
        org.antlr.v4.tool.Grammar grammar15 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator16 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target17 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator16);
        int int18 = python3Target17.getInlineTestSetWordSize();
        java.lang.String str20 = python3Target17.getImplicitSetLabel("\"hi!\"");
        java.lang.String str22 = python3Target17.encodeIntAsCharEscape(0);
        java.lang.String str23 = python3Target17.getVersion();
        java.lang.String str25 = python3Target17.getTargetStringLiteralFromString("hi!");
        org.antlr.v4.tool.Grammar grammar26 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator27 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target28 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator27);
        boolean boolean29 = python3Target28.supportsOverloadedMethods();
        java.lang.String str31 = python3Target28.getTargetStringLiteralFromString("_Python3");
        org.antlr.v4.tool.Grammar grammar32 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator33 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target34 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator33);
        int int35 = python3Target34.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet36 = python3Target34.getBadWords();
        int int37 = python3Target34.getInlineTestSetWordSize();
        org.antlr.v4.codegen.CodeGenerator codeGenerator38 = python3Target34.getCodeGenerator();
        java.lang.String str40 = python3Target34.getImplicitSetLabel("_\"hi!\"Context");
        java.lang.String str42 = python3Target34.getImplicitSetLabel("_tset");
        java.lang.String str44 = python3Target34.getImplicitSetLabel("\"\\\"Python3\\\"Context\"");
        int int45 = python3Target34.getSerializedATNSegmentLimit();
        org.antlr.v4.tool.Grammar grammar46 = null;
        int[] intArray47 = new int[] {};
        java.lang.String[] strArray48 = python3Target34.getTokenTypesAsTargetLabels(grammar46, intArray47);
        java.lang.String[] strArray49 = python3Target28.getTokenTypesAsTargetLabels(grammar32, intArray47);
        java.lang.String[] strArray50 = python3Target17.getTokenTypesAsTargetLabels(grammar26, intArray47);
        java.lang.String[] strArray51 = python3Target1.getTokenTypesAsTargetLabels(grammar15, intArray47);
        java.lang.String str52 = python3Target1.getVersion();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 64 + "'", int4 == 64);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "_tset\\\"hi!\\\"" + "'", str7, "_tset\\\"hi!\\\"");
        org.junit.Assert.assertNull(codeGenerator8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "\"Python3\"Context" + "'", str11, "\"Python3\"Context");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 64 + "'", int13 == 64);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 64 + "'", int18 == 64);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "_tset\"hi!\"" + "'", str20, "_tset\"hi!\"");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "\\0" + "'", str22, "\\0");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "4.5.2.1" + "'", str23, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "\"hi!\"" + "'", str25, "\"hi!\"");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "\"_Python3\"" + "'", str31, "\"_Python3\"");
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 64 + "'", int35 == 64);
        org.junit.Assert.assertNotNull(strSet36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 64 + "'", int37 == 64);
        org.junit.Assert.assertNull(codeGenerator38);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "_tset_\"hi!\"Context" + "'", str40, "_tset_\"hi!\"Context");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "_tset_tset" + "'", str42, "_tset_tset");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "_tset\"\\\"Python3\\\"Context\"" + "'", str44, "_tset\"\\\"Python3\\\"Context\"");
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 29 + "'", int45 == 29);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[]");
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertNotNull(strArray49);
        org.junit.Assert.assertNotNull(strArray50);
        org.junit.Assert.assertNotNull(strArray51);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "4.5.2.1" + "'", str52, "4.5.2.1");
    }

    @Test
    public void test1222() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1222");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet3 = python3Target1.getBadWords();
        int int4 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str6 = python3Target1.getAltLabelContextStructName("\"hi!\"");
        java.lang.String str7 = python3Target1.getVersion();
        boolean boolean8 = python3Target1.supportsOverloadedMethods();
        java.util.Set<java.lang.String> strSet9 = python3Target1.getBadWords();
        boolean boolean10 = python3Target1.supportsOverloadedMethods();
        java.lang.String str13 = python3Target1.getTargetStringLiteralFromString("_tset", true);
        java.lang.String str15 = python3Target1.getTargetStringLiteralFromString("\"tset\\\"_Python3\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator16 = python3Target1.getCodeGenerator();
        int int17 = python3Target1.getSerializedATNSegmentLimit();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str19 = python3Target1.encodeIntAsCharEscape((int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot encode the specified value: -1");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 64 + "'", int4 == 64);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\"hi!\"Context" + "'", str6, "\"hi!\"Context");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "4.5.2.1" + "'", str7, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(strSet9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "\"_tset\"" + "'", str13, "\"_tset\"");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "\"\\\"tset\\\\\\\"_Python3\\\"\"" + "'", str15, "\"\\\"tset\\\\\\\"_Python3\\\"\"");
        org.junit.Assert.assertNull(codeGenerator16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 29 + "'", int17 == 29);
    }

    @Test
    public void test1223() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1223");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet3 = python3Target1.getBadWords();
        java.lang.String str6 = python3Target1.getTargetStringLiteralFromString("hi!", true);
        java.lang.String str8 = python3Target1.getTargetStringLiteralFromString("");
        int int9 = python3Target1.getSerializedATNSegmentLimit();
        org.antlr.v4.codegen.model.RuleFunction ruleFunction10 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str11 = python3Target1.getRuleFunctionContextStructName(ruleFunction10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\"hi!\"" + "'", str6, "\"hi!\"");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\"\"" + "'", str8, "\"\"");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 29 + "'", int9 == 29);
    }

    @Test
    public void test1224() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1224");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str4 = python3Target1.getImplicitSetLabel("\"hi!\"");
        java.lang.String str6 = python3Target1.encodeIntAsCharEscape(0);
        java.lang.String str7 = python3Target1.getVersion();
        java.lang.String str10 = python3Target1.getTargetStringLiteralFromString("Python3", true);
        java.lang.String str12 = python3Target1.getImplicitRuleLabel("\"Python3\"");
        boolean boolean13 = python3Target1.templatesExist();
        java.lang.String str15 = python3Target1.getImplicitSetLabel("\"Tset_\\\\\\\"hi!\\\\\\\"ContexContext\"");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "_tset\"hi!\"" + "'", str4, "_tset\"hi!\"");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\\0" + "'", str6, "\\0");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "4.5.2.1" + "'", str7, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\"Python3\"" + "'", str10, "\"Python3\"");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "_\"Python3\"" + "'", str12, "_\"Python3\"");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "_tset\"Tset_\\\\\\\"hi!\\\\\\\"ContexContext\"" + "'", str15, "_tset\"Tset_\\\\\\\"hi!\\\\\\\"ContexContext\"");
    }

    @Test
    public void test1225() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1225");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet3 = python3Target1.getBadWords();
        int int4 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str6 = python3Target1.getAltLabelContextStructName("\"hi!\"");
        boolean boolean7 = python3Target1.templatesExist();
        int int8 = python3Target1.getSerializedATNSegmentLimit();
        org.antlr.v4.codegen.CodeGenerator codeGenerator9 = null;
        java.lang.String str12 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator9, "_tset\"_Python3\"", true);
        java.lang.String str13 = python3Target1.getVersion();
        java.util.Set<java.lang.String> strSet14 = python3Target1.getBadWords();
        org.antlr.v4.tool.ast.GrammarAST grammarAST15 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str16 = python3Target1.getLoopLabel(grammarAST15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 64 + "'", int4 == 64);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\"hi!\"Context" + "'", str6, "\"hi!\"Context");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 29 + "'", int8 == 29);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "\"tset\\\"_Python3\"" + "'", str12, "\"tset\\\"_Python3\"");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "4.5.2.1" + "'", str13, "4.5.2.1");
        org.junit.Assert.assertNotNull(strSet14);
    }

    @Test
    public void test1226() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1226");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet3 = python3Target1.getBadWords();
        java.lang.String str4 = python3Target1.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator5 = python3Target1.getCodeGenerator();
        java.lang.String str7 = python3Target1.getTargetStringLiteralFromString("_Python3");
        int int8 = python3Target1.getSerializedATNSegmentLimit();
        java.lang.String str10 = python3Target1.getImplicitSetLabel("\"tset\\\"_Python3\"");
        int int11 = python3Target1.getSerializedATNSegmentLimit();
        java.lang.String str12 = python3Target1.getLanguage();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Python3" + "'", str4, "Python3");
        org.junit.Assert.assertNull(codeGenerator5);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "\"_Python3\"" + "'", str7, "\"_Python3\"");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 29 + "'", int8 == 29);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "_tset\"tset\\\"_Python3\"" + "'", str10, "_tset\"tset\\\"_Python3\"");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 29 + "'", int11 == 29);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Python3" + "'", str12, "Python3");
    }

    @Test
    public void test1227() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1227");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet3 = python3Target1.getBadWords();
        java.lang.String str4 = python3Target1.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator5 = python3Target1.getCodeGenerator();
        org.stringtemplate.v4.STGroup sTGroup6 = python3Target1.getTemplates();
        boolean boolean7 = python3Target1.wantsBaseListener();
        boolean boolean8 = python3Target1.wantsBaseListener();
        java.lang.String str10 = python3Target1.encodeIntAsCharEscape(0);
        java.lang.String str11 = python3Target1.getLanguage();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Python3" + "'", str4, "Python3");
        org.junit.Assert.assertNull(codeGenerator5);
        org.junit.Assert.assertNotNull(sTGroup6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\\0" + "'", str10, "\\0");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Python3" + "'", str11, "Python3");
    }

    @Test
    public void test1228() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1228");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str4 = python3Target1.getImplicitSetLabel("\"hi!\"");
        java.lang.String str6 = python3Target1.encodeIntAsCharEscape(0);
        boolean boolean7 = python3Target1.supportsOverloadedMethods();
        java.lang.String str9 = python3Target1.getListLabel("_tset\\\"\\\"_\\\"hi!\\\"Contex");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "_tset\"hi!\"" + "'", str4, "_tset\"hi!\"");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\\0" + "'", str6, "\\0");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "_tset\\\"\\\"_\\\"hi!\\\"Contex" + "'", str9, "_tset\\\"\\\"_\\\"hi!\\\"Contex");
    }

    @Test
    public void test1229() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1229");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet3 = python3Target1.getBadWords();
        java.lang.String str4 = python3Target1.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator5 = python3Target1.getCodeGenerator();
        org.stringtemplate.v4.STGroup sTGroup6 = python3Target1.getTemplates();
        boolean boolean7 = python3Target1.supportsOverloadedMethods();
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = null;
        java.lang.String str11 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator8, "tset\\\"hi!", false);
        int int12 = python3Target1.getInlineTestSetWordSize();
        org.antlr.v4.codegen.model.RuleFunction ruleFunction13 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str14 = python3Target1.getRuleFunctionContextStructName(ruleFunction13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Python3" + "'", str4, "Python3");
        org.junit.Assert.assertNull(codeGenerator5);
        org.junit.Assert.assertNotNull(sTGroup6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "set\\\"hi" + "'", str11, "set\\\"hi");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 64 + "'", int12 == 64);
    }

    @Test
    public void test1230() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1230");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet3 = python3Target1.getBadWords();
        int int4 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str7 = python3Target1.getTargetStringLiteralFromString("_tset\"hi!\"", false);
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = python3Target1.getCodeGenerator();
        boolean boolean9 = python3Target1.supportsOverloadedMethods();
        boolean boolean10 = python3Target1.supportsOverloadedMethods();
        java.lang.String str12 = python3Target1.getImplicitRuleLabel("_\"hi!\"Context");
        java.lang.String str14 = python3Target1.getImplicitRuleLabel("\"_\\\"hi!\\\"Contex\"");
        java.lang.String str15 = python3Target1.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator16 = null;
        java.lang.String str19 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator16, "set\\\"hi", false);
        boolean boolean20 = python3Target1.templatesExist();
        org.antlr.v4.codegen.model.RuleFunction ruleFunction21 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str22 = python3Target1.getRuleFunctionContextStructName(ruleFunction21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 64 + "'", int4 == 64);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "_tset\\\"hi!\\\"" + "'", str7, "_tset\\\"hi!\\\"");
        org.junit.Assert.assertNull(codeGenerator8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "__\"hi!\"Context" + "'", str12, "__\"hi!\"Context");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "_\"_\\\"hi!\\\"Contex\"" + "'", str14, "_\"_\\\"hi!\\\"Contex\"");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "4.5.2.1" + "'", str15, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "et\\\"h" + "'", str19, "et\\\"h");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
    }

    @Test
    public void test1231() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1231");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet3 = python3Target1.getBadWords();
        java.lang.String str4 = python3Target1.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator5 = python3Target1.getCodeGenerator();
        java.lang.String str7 = python3Target1.getTargetStringLiteralFromString("_Python3");
        java.lang.String str8 = python3Target1.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup9 = python3Target1.getTemplates();
        boolean boolean10 = python3Target1.templatesExist();
        org.stringtemplate.v4.STGroup sTGroup11 = python3Target1.getTemplates();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Python3" + "'", str4, "Python3");
        org.junit.Assert.assertNull(codeGenerator5);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "\"_Python3\"" + "'", str7, "\"_Python3\"");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Python3" + "'", str8, "Python3");
        org.junit.Assert.assertNotNull(sTGroup9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(sTGroup11);
    }

    @Test
    public void test1232() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1232");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet3 = python3Target1.getBadWords();
        int int4 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str6 = python3Target1.getAltLabelContextStructName("\"hi!\"");
        boolean boolean7 = python3Target1.templatesExist();
        int int8 = python3Target1.getSerializedATNSegmentLimit();
        org.antlr.v4.codegen.CodeGenerator codeGenerator9 = null;
        java.lang.String str12 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator9, "_tset\"_Python3\"", true);
        java.lang.String str13 = python3Target1.getLanguage();
        java.lang.String str14 = python3Target1.getVersion();
        java.lang.String str16 = python3Target1.getAltLabelContextStructName("\"\\\"_Python3\\\"\"Context");
        org.antlr.v4.tool.ast.GrammarAST grammarAST17 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str18 = python3Target1.getLoopLabel(grammarAST17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 64 + "'", int4 == 64);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\"hi!\"Context" + "'", str6, "\"hi!\"Context");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 29 + "'", int8 == 29);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "\"tset\\\"_Python3\"" + "'", str12, "\"tset\\\"_Python3\"");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Python3" + "'", str13, "Python3");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "4.5.2.1" + "'", str14, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "\"\\\"_Python3\\\"\"ContextContext" + "'", str16, "\"\\\"_Python3\\\"\"ContextContext");
    }

    @Test
    public void test1233() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1233");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getSerializedATNSegmentLimit();
        boolean boolean3 = python3Target1.supportsOverloadedMethods();
        int int4 = python3Target1.getSerializedATNSegmentLimit();
        org.antlr.v4.tool.Grammar grammar5 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target7 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator6);
        int int8 = python3Target7.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet9 = python3Target7.getBadWords();
        int int10 = python3Target7.getInlineTestSetWordSize();
        java.lang.String str12 = python3Target7.getAltLabelContextStructName("\"hi!\"");
        java.lang.String str13 = python3Target7.getVersion();
        boolean boolean14 = python3Target7.supportsOverloadedMethods();
        java.util.Set<java.lang.String> strSet15 = python3Target7.getBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator16 = python3Target7.getCodeGenerator();
        org.antlr.v4.tool.Grammar grammar17 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator18 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target19 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator18);
        int int20 = python3Target19.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet21 = python3Target19.getBadWords();
        int int22 = python3Target19.getInlineTestSetWordSize();
        java.lang.String str25 = python3Target19.getTargetStringLiteralFromString("_tset\"hi!\"", false);
        org.antlr.v4.codegen.CodeGenerator codeGenerator26 = python3Target19.getCodeGenerator();
        boolean boolean27 = python3Target19.templatesExist();
        org.antlr.v4.tool.Grammar grammar28 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator29 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target30 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator29);
        int int31 = python3Target30.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet32 = python3Target30.getBadWords();
        int int33 = python3Target30.getInlineTestSetWordSize();
        org.antlr.v4.codegen.CodeGenerator codeGenerator34 = python3Target30.getCodeGenerator();
        java.lang.String str36 = python3Target30.getImplicitSetLabel("_\"hi!\"Context");
        java.lang.String str38 = python3Target30.getImplicitSetLabel("_tset");
        java.lang.String str40 = python3Target30.getImplicitSetLabel("\"\\\"Python3\\\"Context\"");
        int int41 = python3Target30.getSerializedATNSegmentLimit();
        org.antlr.v4.tool.Grammar grammar42 = null;
        int[] intArray43 = new int[] {};
        java.lang.String[] strArray44 = python3Target30.getTokenTypesAsTargetLabels(grammar42, intArray43);
        java.lang.String[] strArray45 = python3Target19.getTokenTypesAsTargetLabels(grammar28, intArray43);
        java.lang.String[] strArray46 = python3Target7.getTokenTypesAsTargetLabels(grammar17, intArray43);
        java.lang.String[] strArray47 = python3Target1.getTokenTypesAsTargetLabels(grammar5, intArray43);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str49 = python3Target1.getElementListName("tset\\\"hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 29 + "'", int2 == 29);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 29 + "'", int4 == 29);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 64 + "'", int8 == 64);
        org.junit.Assert.assertNotNull(strSet9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 64 + "'", int10 == 64);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "\"hi!\"Context" + "'", str12, "\"hi!\"Context");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "4.5.2.1" + "'", str13, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(strSet15);
        org.junit.Assert.assertNull(codeGenerator16);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 64 + "'", int20 == 64);
        org.junit.Assert.assertNotNull(strSet21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 64 + "'", int22 == 64);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "_tset\\\"hi!\\\"" + "'", str25, "_tset\\\"hi!\\\"");
        org.junit.Assert.assertNull(codeGenerator26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 64 + "'", int31 == 64);
        org.junit.Assert.assertNotNull(strSet32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 64 + "'", int33 == 64);
        org.junit.Assert.assertNull(codeGenerator34);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "_tset_\"hi!\"Context" + "'", str36, "_tset_\"hi!\"Context");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "_tset_tset" + "'", str38, "_tset_tset");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "_tset\"\\\"Python3\\\"Context\"" + "'", str40, "_tset\"\\\"Python3\\\"Context\"");
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 29 + "'", int41 == 29);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[]");
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertNotNull(strArray47);
    }

    @Test
    public void test1234() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1234");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet3 = python3Target1.getBadWords();
        int int4 = python3Target1.getInlineTestSetWordSize();
        boolean boolean5 = python3Target1.wantsBaseListener();
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = python3Target1.getCodeGenerator();
        java.lang.String str7 = python3Target1.getLanguage();
        int int8 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str10 = python3Target1.getImplicitSetLabel("tset\\\"hi!");
        boolean boolean11 = python3Target1.wantsBaseVisitor();
        int int12 = python3Target1.getSerializedATNSegmentLimit();
        org.antlr.v4.codegen.model.RuleFunction ruleFunction13 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str14 = python3Target1.getRuleFunctionContextStructName(ruleFunction13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 64 + "'", int4 == 64);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(codeGenerator6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Python3" + "'", str7, "Python3");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 64 + "'", int8 == 64);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "_tsettset\\\"hi!" + "'", str10, "_tsettset\\\"hi!");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 29 + "'", int12 == 29);
    }

    @Test
    public void test1235() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1235");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet3 = python3Target1.getBadWords();
        int int4 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str7 = python3Target1.getTargetStringLiteralFromString("_tset\"hi!\"", false);
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = python3Target1.getCodeGenerator();
        boolean boolean9 = python3Target1.supportsOverloadedMethods();
        java.lang.String str11 = python3Target1.getAltLabelContextStructName("\"Python3\"");
        boolean boolean12 = python3Target1.wantsBaseListener();
        boolean boolean13 = python3Target1.templatesExist();
        org.stringtemplate.v4.STGroup sTGroup14 = python3Target1.getTemplates();
        org.antlr.v4.tool.Grammar grammar15 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator16 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target17 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator16);
        int int18 = python3Target17.getInlineTestSetWordSize();
        java.lang.String str20 = python3Target17.getImplicitSetLabel("\"hi!\"");
        java.lang.String str22 = python3Target17.encodeIntAsCharEscape(0);
        java.lang.String str23 = python3Target17.getVersion();
        java.lang.String str26 = python3Target17.getTargetStringLiteralFromString("Python3", true);
        java.lang.String str28 = python3Target17.getImplicitRuleLabel("\"Python3\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator29 = python3Target17.getCodeGenerator();
        org.antlr.v4.tool.Grammar grammar30 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator31 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target32 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator31);
        org.antlr.v4.codegen.CodeGenerator codeGenerator33 = null;
        java.lang.String str36 = python3Target32.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator33, "4.5.2.1", true);
        boolean boolean37 = python3Target32.templatesExist();
        org.antlr.v4.tool.Grammar grammar38 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator39 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target40 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator39);
        int int41 = python3Target40.getInlineTestSetWordSize();
        java.lang.String str43 = python3Target40.getImplicitSetLabel("\"hi!\"");
        java.lang.String str45 = python3Target40.encodeIntAsCharEscape(0);
        java.lang.String str46 = python3Target40.getVersion();
        java.lang.String str48 = python3Target40.getTargetStringLiteralFromString("hi!");
        org.antlr.v4.tool.Grammar grammar49 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator50 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target51 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator50);
        boolean boolean52 = python3Target51.supportsOverloadedMethods();
        java.lang.String str54 = python3Target51.getTargetStringLiteralFromString("_Python3");
        org.antlr.v4.tool.Grammar grammar55 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator56 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target57 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator56);
        int int58 = python3Target57.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet59 = python3Target57.getBadWords();
        int int60 = python3Target57.getInlineTestSetWordSize();
        org.antlr.v4.codegen.CodeGenerator codeGenerator61 = python3Target57.getCodeGenerator();
        java.lang.String str63 = python3Target57.getImplicitSetLabel("_\"hi!\"Context");
        java.lang.String str65 = python3Target57.getImplicitSetLabel("_tset");
        java.lang.String str67 = python3Target57.getImplicitSetLabel("\"\\\"Python3\\\"Context\"");
        int int68 = python3Target57.getSerializedATNSegmentLimit();
        org.antlr.v4.tool.Grammar grammar69 = null;
        int[] intArray70 = new int[] {};
        java.lang.String[] strArray71 = python3Target57.getTokenTypesAsTargetLabels(grammar69, intArray70);
        java.lang.String[] strArray72 = python3Target51.getTokenTypesAsTargetLabels(grammar55, intArray70);
        java.lang.String[] strArray73 = python3Target40.getTokenTypesAsTargetLabels(grammar49, intArray70);
        java.lang.String[] strArray74 = python3Target32.getTokenTypesAsTargetLabels(grammar38, intArray70);
        java.lang.String[] strArray75 = python3Target17.getTokenTypesAsTargetLabels(grammar30, intArray70);
        java.lang.String[] strArray76 = python3Target1.getTokenTypesAsTargetLabels(grammar15, intArray70);
        org.antlr.v4.tool.ast.GrammarAST grammarAST77 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str78 = python3Target1.getLoopCounter(grammarAST77);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 64 + "'", int4 == 64);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "_tset\\\"hi!\\\"" + "'", str7, "_tset\\\"hi!\\\"");
        org.junit.Assert.assertNull(codeGenerator8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "\"Python3\"Context" + "'", str11, "\"Python3\"Context");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(sTGroup14);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 64 + "'", int18 == 64);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "_tset\"hi!\"" + "'", str20, "_tset\"hi!\"");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "\\0" + "'", str22, "\\0");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "4.5.2.1" + "'", str23, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "\"Python3\"" + "'", str26, "\"Python3\"");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "_\"Python3\"" + "'", str28, "_\"Python3\"");
        org.junit.Assert.assertNull(codeGenerator29);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "\".5.2.\"" + "'", str36, "\".5.2.\"");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 64 + "'", int41 == 64);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "_tset\"hi!\"" + "'", str43, "_tset\"hi!\"");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "\\0" + "'", str45, "\\0");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "4.5.2.1" + "'", str46, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "\"hi!\"" + "'", str48, "\"hi!\"");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "\"_Python3\"" + "'", str54, "\"_Python3\"");
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 64 + "'", int58 == 64);
        org.junit.Assert.assertNotNull(strSet59);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 64 + "'", int60 == 64);
        org.junit.Assert.assertNull(codeGenerator61);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "_tset_\"hi!\"Context" + "'", str63, "_tset_\"hi!\"Context");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "_tset_tset" + "'", str65, "_tset_tset");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "_tset\"\\\"Python3\\\"Context\"" + "'", str67, "_tset\"\\\"Python3\\\"Context\"");
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 29 + "'", int68 == 29);
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[]");
        org.junit.Assert.assertNotNull(strArray71);
        org.junit.Assert.assertNotNull(strArray72);
        org.junit.Assert.assertNotNull(strArray73);
        org.junit.Assert.assertNotNull(strArray74);
        org.junit.Assert.assertNotNull(strArray75);
        org.junit.Assert.assertNotNull(strArray76);
    }

    @Test
    public void test1236() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1236");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        org.antlr.v4.codegen.CodeGenerator codeGenerator2 = null;
        java.lang.String str5 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator2, "4.5.2.1", true);
        java.lang.String str7 = python3Target1.getTargetStringLiteralFromString("\"tset\\\"_Python3\"");
        org.stringtemplate.v4.STGroup sTGroup8 = python3Target1.getTemplates();
        java.lang.String str10 = python3Target1.getImplicitRuleLabel("\"_Et\\\\\\\"hContext\"");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "\".5.2.\"" + "'", str5, "\".5.2.\"");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "\"\\\"tset\\\\\\\"_Python3\\\"\"" + "'", str7, "\"\\\"tset\\\\\\\"_Python3\\\"\"");
        org.junit.Assert.assertNotNull(sTGroup8);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "_\"_Et\\\\\\\"hContext\"" + "'", str10, "_\"_Et\\\\\\\"hContext\"");
    }

    @Test
    public void test1237() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1237");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str4 = python3Target1.getImplicitSetLabel("\"hi!\"");
        java.lang.String str6 = python3Target1.encodeIntAsCharEscape(0);
        boolean boolean7 = python3Target1.supportsOverloadedMethods();
        int int8 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str10 = python3Target1.getImplicitRuleLabel("_tset_\"hi!\"ContextContext");
        boolean boolean11 = python3Target1.supportsOverloadedMethods();
        java.lang.String str14 = python3Target1.getTargetStringLiteralFromString("\"hi!\"", true);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str16 = python3Target1.encodeIntAsCharEscape((int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot encode the specified value: -1");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "_tset\"hi!\"" + "'", str4, "_tset\"hi!\"");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\\0" + "'", str6, "\\0");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 64 + "'", int8 == 64);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "__tset_\"hi!\"ContextContext" + "'", str10, "__tset_\"hi!\"ContextContext");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "\"\\\"hi!\\\"\"" + "'", str14, "\"\\\"hi!\\\"\"");
    }

    @Test
    public void test1238() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1238");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet3 = python3Target1.getBadWords();
        int int4 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str7 = python3Target1.getTargetStringLiteralFromString("_tset\"hi!\"", false);
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = python3Target1.getCodeGenerator();
        boolean boolean9 = python3Target1.supportsOverloadedMethods();
        java.lang.String str11 = python3Target1.getAltLabelContextStructName("\"Python3\"");
        java.lang.String str13 = python3Target1.getImplicitRuleLabel("");
        java.lang.String str15 = python3Target1.getListLabel("_tset_\"hi!\"ContextContext");
        java.lang.String str17 = python3Target1.encodeIntAsCharEscape(10);
        java.lang.String str19 = python3Target1.getImplicitSetLabel("\"_tsettset\\\\\\\"hi!\"");
        java.lang.String str21 = python3Target1.encodeIntAsCharEscape(0);
        boolean boolean22 = python3Target1.templatesExist();
        java.lang.String str25 = python3Target1.getTargetStringLiteralFromString("\"\\\"_\\\"hi!\\\"Contex\"", false);
        org.antlr.v4.codegen.CodeGenerator codeGenerator26 = null;
        java.lang.String str29 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator26, "__Python3", false);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str31 = python3Target1.getImplicitTokenLabel("_tsettset_\\\"hi!\\\"Conte");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 64 + "'", int4 == 64);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "_tset\\\"hi!\\\"" + "'", str7, "_tset\\\"hi!\\\"");
        org.junit.Assert.assertNull(codeGenerator8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "\"Python3\"Context" + "'", str11, "\"Python3\"Context");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "_" + "'", str13, "_");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "_tset_\"hi!\"ContextContext" + "'", str15, "_tset_\"hi!\"ContextContext");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "\\n" + "'", str17, "\\n");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "_tset\"_tsettset\\\\\\\"hi!\"" + "'", str19, "_tset\"_tsettset\\\\\\\"hi!\"");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "\\0" + "'", str21, "\\0");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "\\\"\\\\\\\"_\\\\\\\"hi!\\\\\\\"Contex\\\"" + "'", str25, "\\\"\\\\\\\"_\\\\\\\"hi!\\\\\\\"Contex\\\"");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "_Python" + "'", str29, "_Python");
    }

    @Test
    public void test1239() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1239");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet3 = python3Target1.getBadWords();
        int int4 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str7 = python3Target1.getTargetStringLiteralFromString("_tset\"hi!\"", false);
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = python3Target1.getCodeGenerator();
        boolean boolean9 = python3Target1.supportsOverloadedMethods();
        boolean boolean10 = python3Target1.supportsOverloadedMethods();
        java.lang.String str11 = python3Target1.getVersion();
        int int12 = python3Target1.getInlineTestSetWordSize();
        int int13 = python3Target1.getInlineTestSetWordSize();
        boolean boolean14 = python3Target1.supportsOverloadedMethods();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 64 + "'", int4 == 64);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "_tset\\\"hi!\\\"" + "'", str7, "_tset\\\"hi!\\\"");
        org.junit.Assert.assertNull(codeGenerator8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "4.5.2.1" + "'", str11, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 64 + "'", int12 == 64);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 64 + "'", int13 == 64);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test1240() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1240");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet3 = python3Target1.getBadWords();
        int int4 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str7 = python3Target1.getTargetStringLiteralFromString("_tset\"hi!\"", false);
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = python3Target1.getCodeGenerator();
        boolean boolean9 = python3Target1.supportsOverloadedMethods();
        java.lang.String str11 = python3Target1.getAltLabelContextStructName("\"Python3\"");
        boolean boolean12 = python3Target1.wantsBaseListener();
        org.stringtemplate.v4.STGroup sTGroup13 = python3Target1.getTemplates();
        boolean boolean14 = python3Target1.wantsBaseListener();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str16 = python3Target1.getElementListName("");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 64 + "'", int4 == 64);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "_tset\\\"hi!\\\"" + "'", str7, "_tset\\\"hi!\\\"");
        org.junit.Assert.assertNull(codeGenerator8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "\"Python3\"Context" + "'", str11, "\"Python3\"Context");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(sTGroup13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test1241() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1241");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getSerializedATNSegmentLimit();
        boolean boolean3 = python3Target1.supportsOverloadedMethods();
        java.lang.String str6 = python3Target1.getTargetStringLiteralFromString("\\0", false);
        org.antlr.v4.tool.Grammar grammar7 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str9 = python3Target1.getTokenTypeAsTargetLabel(grammar7, 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 29 + "'", int2 == 29);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\\\\0" + "'", str6, "\\\\0");
    }

    @Test
    public void test1242() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1242");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet3 = python3Target1.getBadWords();
        int int4 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str6 = python3Target1.getAltLabelContextStructName("\"hi!\"");
        boolean boolean7 = python3Target1.templatesExist();
        int int8 = python3Target1.getSerializedATNSegmentLimit();
        org.antlr.v4.codegen.CodeGenerator codeGenerator9 = null;
        java.lang.String str12 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator9, "_tset\"_Python3\"", true);
        java.lang.String str13 = python3Target1.getLanguage();
        java.lang.String str14 = python3Target1.getVersion();
        java.lang.String str16 = python3Target1.getImplicitSetLabel("");
        java.lang.String str18 = python3Target1.encodeIntAsCharEscape((int) '#');
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str20 = python3Target1.getImplicitTokenLabel("_\" \"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 64 + "'", int4 == 64);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\"hi!\"Context" + "'", str6, "\"hi!\"Context");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 29 + "'", int8 == 29);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "\"tset\\\"_Python3\"" + "'", str12, "\"tset\\\"_Python3\"");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Python3" + "'", str13, "Python3");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "4.5.2.1" + "'", str14, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "_tset" + "'", str16, "_tset");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "#" + "'", str18, "#");
    }

    @Test
    public void test1243() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1243");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str4 = python3Target1.getImplicitSetLabel("\"hi!\"");
        java.lang.String str6 = python3Target1.encodeIntAsCharEscape(0);
        java.lang.String str7 = python3Target1.getVersion();
        java.lang.String str9 = python3Target1.getImplicitRuleLabel("Python3");
        java.lang.String str12 = python3Target1.getTargetStringLiteralFromString("\"hi!\"", true);
        int int13 = python3Target1.getSerializedATNSegmentLimit();
        java.lang.String str15 = python3Target1.getImplicitSetLabel("et\\\"h");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "_tset\"hi!\"" + "'", str4, "_tset\"hi!\"");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\\0" + "'", str6, "\\0");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "4.5.2.1" + "'", str7, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "_Python3" + "'", str9, "_Python3");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "\"\\\"hi!\\\"\"" + "'", str12, "\"\\\"hi!\\\"\"");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 29 + "'", int13 == 29);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "_tsetet\\\"h" + "'", str15, "_tsetet\\\"h");
    }

    @Test
    public void test1244() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1244");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet3 = python3Target1.getBadWords();
        boolean boolean4 = python3Target1.wantsBaseListener();
        java.lang.String str5 = python3Target1.getVersion();
        boolean boolean6 = python3Target1.templatesExist();
        org.stringtemplate.v4.STGroup sTGroup7 = python3Target1.getTemplates();
        java.lang.Class<?> wildcardClass8 = sTGroup7.getClass();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "4.5.2.1" + "'", str5, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(sTGroup7);
        org.junit.Assert.assertNotNull(wildcardClass8);
    }

    @Test
    public void test1245() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1245");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet3 = python3Target1.getBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator4 = null;
        java.lang.String str7 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator4, " ", false);
        org.antlr.v4.tool.Grammar grammar8 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator9 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target10 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator9);
        int int11 = python3Target10.getInlineTestSetWordSize();
        java.lang.String str13 = python3Target10.getImplicitSetLabel("\"hi!\"");
        java.lang.String str15 = python3Target10.encodeIntAsCharEscape(0);
        boolean boolean16 = python3Target10.templatesExist();
        java.lang.String str19 = python3Target10.getTargetStringLiteralFromString("_tsettset\\\"hi!", true);
        boolean boolean20 = python3Target10.wantsBaseVisitor();
        org.antlr.v4.tool.Grammar grammar21 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator22 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target23 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator22);
        boolean boolean24 = python3Target23.supportsOverloadedMethods();
        java.lang.String str26 = python3Target23.getTargetStringLiteralFromString("_Python3");
        org.antlr.v4.tool.Grammar grammar27 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator28 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target29 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator28);
        int int30 = python3Target29.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet31 = python3Target29.getBadWords();
        int int32 = python3Target29.getInlineTestSetWordSize();
        org.antlr.v4.codegen.CodeGenerator codeGenerator33 = python3Target29.getCodeGenerator();
        java.lang.String str35 = python3Target29.getImplicitSetLabel("_\"hi!\"Context");
        java.lang.String str37 = python3Target29.getImplicitSetLabel("_tset");
        java.lang.String str39 = python3Target29.getImplicitSetLabel("\"\\\"Python3\\\"Context\"");
        int int40 = python3Target29.getSerializedATNSegmentLimit();
        org.antlr.v4.tool.Grammar grammar41 = null;
        int[] intArray42 = new int[] {};
        java.lang.String[] strArray43 = python3Target29.getTokenTypesAsTargetLabels(grammar41, intArray42);
        java.lang.String[] strArray44 = python3Target23.getTokenTypesAsTargetLabels(grammar27, intArray42);
        java.lang.String[] strArray45 = python3Target10.getTokenTypesAsTargetLabels(grammar21, intArray42);
        java.lang.String[] strArray46 = python3Target1.getTokenTypesAsTargetLabels(grammar8, intArray42);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 64 + "'", int11 == 64);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "_tset\"hi!\"" + "'", str13, "_tset\"hi!\"");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "\\0" + "'", str15, "\\0");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "\"_tsettset\\\\\\\"hi!\"" + "'", str19, "\"_tsettset\\\\\\\"hi!\"");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "\"_Python3\"" + "'", str26, "\"_Python3\"");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 64 + "'", int30 == 64);
        org.junit.Assert.assertNotNull(strSet31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 64 + "'", int32 == 64);
        org.junit.Assert.assertNull(codeGenerator33);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "_tset_\"hi!\"Context" + "'", str35, "_tset_\"hi!\"Context");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "_tset_tset" + "'", str37, "_tset_tset");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "_tset\"\\\"Python3\\\"Context\"" + "'", str39, "_tset\"\\\"Python3\\\"Context\"");
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 29 + "'", int40 == 29);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[]");
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertNotNull(strArray46);
    }

    @Test
    public void test1246() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1246");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str4 = python3Target1.getImplicitSetLabel("\"hi!\"");
        java.lang.String str6 = python3Target1.encodeIntAsCharEscape(0);
        boolean boolean7 = python3Target1.templatesExist();
        java.lang.String str8 = python3Target1.getVersion();
        boolean boolean9 = python3Target1.supportsOverloadedMethods();
        java.lang.String str10 = python3Target1.getLanguage();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str12 = python3Target1.getImplicitTokenLabel("\"Python3\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "_tset\"hi!\"" + "'", str4, "_tset\"hi!\"");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\\0" + "'", str6, "\\0");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "4.5.2.1" + "'", str8, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Python3" + "'", str10, "Python3");
    }

    @Test
    public void test1247() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1247");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str5 = python3Target1.getTargetStringLiteralFromString("", false);
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = null;
        java.lang.String str9 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator6, "", false);
        java.lang.String str11 = python3Target1.getAltLabelContextStructName("d");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str13 = python3Target1.getElementListName("_\" \"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "DContext" + "'", str11, "DContext");
    }

    @Test
    public void test1248() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1248");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet3 = python3Target1.getBadWords();
        int int4 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str7 = python3Target1.getTargetStringLiteralFromString("_tset\"hi!\"", false);
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = python3Target1.getCodeGenerator();
        boolean boolean9 = python3Target1.supportsOverloadedMethods();
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = python3Target1.getCodeGenerator();
        java.lang.String str12 = python3Target1.getImplicitSetLabel("\\\"\\\"_\\\"hi!\\\"Contex");
        boolean boolean13 = python3Target1.templatesExist();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 64 + "'", int4 == 64);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "_tset\\\"hi!\\\"" + "'", str7, "_tset\\\"hi!\\\"");
        org.junit.Assert.assertNull(codeGenerator8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(codeGenerator10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "_tset\\\"\\\"_\\\"hi!\\\"Contex" + "'", str12, "_tset\\\"\\\"_\\\"hi!\\\"Contex");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
    }

    @Test
    public void test1249() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1249");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet3 = python3Target1.getBadWords();
        int int4 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str6 = python3Target1.getAltLabelContextStructName("\"hi!\"");
        int int7 = python3Target1.getSerializedATNSegmentLimit();
        int int8 = python3Target1.getInlineTestSetWordSize();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 64 + "'", int4 == 64);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\"hi!\"Context" + "'", str6, "\"hi!\"Context");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 29 + "'", int7 == 29);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 64 + "'", int8 == 64);
    }

    @Test
    public void test1250() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1250");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str4 = python3Target1.getImplicitSetLabel("\"hi!\"");
        java.lang.String str6 = python3Target1.encodeIntAsCharEscape(0);
        java.lang.String str7 = python3Target1.getVersion();
        java.lang.String str9 = python3Target1.getImplicitRuleLabel("Python3");
        java.lang.String str12 = python3Target1.getTargetStringLiteralFromString("\"hi!\"", true);
        org.antlr.v4.tool.ast.GrammarAST grammarAST13 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean14 = python3Target1.grammarSymbolCausesIssueInGeneratedCode(grammarAST13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "_tset\"hi!\"" + "'", str4, "_tset\"hi!\"");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\\0" + "'", str6, "\\0");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "4.5.2.1" + "'", str7, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "_Python3" + "'", str9, "_Python3");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "\"\\\"hi!\\\"\"" + "'", str12, "\"\\\"hi!\\\"\"");
    }

    @Test
    public void test1251() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1251");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet3 = python3Target1.getBadWords();
        int int4 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str7 = python3Target1.getTargetStringLiteralFromString("_tset\"hi!\"", false);
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = python3Target1.getCodeGenerator();
        boolean boolean9 = python3Target1.templatesExist();
        java.lang.String str11 = python3Target1.getListLabel("\"hi!\"Context");
        java.lang.String str13 = python3Target1.getListLabel("Python3");
        java.lang.String str14 = python3Target1.getLanguage();
        java.lang.String str16 = python3Target1.getImplicitRuleLabel("_\"tset4.5.2.1Contex\"");
        org.antlr.v4.tool.ast.GrammarAST grammarAST17 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str18 = python3Target1.getLoopLabel(grammarAST17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 64 + "'", int4 == 64);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "_tset\\\"hi!\\\"" + "'", str7, "_tset\\\"hi!\\\"");
        org.junit.Assert.assertNull(codeGenerator8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "\"hi!\"Context" + "'", str11, "\"hi!\"Context");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Python3" + "'", str13, "Python3");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Python3" + "'", str14, "Python3");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "__\"tset4.5.2.1Contex\"" + "'", str16, "__\"tset4.5.2.1Contex\"");
    }

    @Test
    public void test1252() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1252");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet3 = python3Target1.getBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator4 = null;
        java.lang.String str7 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator4, "\"hi!\"", true);
        java.lang.String str9 = python3Target1.getListLabel("_tset\\\"hi!\\\"");
        boolean boolean10 = python3Target1.wantsBaseListener();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str12 = python3Target1.getImplicitTokenLabel("hi!\\\"Contex");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "\"hi!\"" + "'", str7, "\"hi!\"");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "_tset\\\"hi!\\\"" + "'", str9, "_tset\\\"hi!\\\"");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test1253() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1253");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet3 = python3Target1.getBadWords();
        boolean boolean4 = python3Target1.supportsOverloadedMethods();
        boolean boolean5 = python3Target1.wantsBaseVisitor();
        java.lang.String str6 = python3Target1.getLanguage();
        java.lang.String str7 = python3Target1.getLanguage();
        org.antlr.v4.codegen.model.RuleFunction ruleFunction8 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str9 = python3Target1.getRuleFunctionContextStructName(ruleFunction8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Python3" + "'", str6, "Python3");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Python3" + "'", str7, "Python3");
    }

    @Test
    public void test1254() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1254");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet3 = python3Target1.getBadWords();
        int int4 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str7 = python3Target1.getTargetStringLiteralFromString("_tset\"hi!\"", false);
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = python3Target1.getCodeGenerator();
        boolean boolean9 = python3Target1.supportsOverloadedMethods();
        java.lang.String str11 = python3Target1.getAltLabelContextStructName("\"Python3\"");
        boolean boolean12 = python3Target1.wantsBaseListener();
        boolean boolean13 = python3Target1.templatesExist();
        java.lang.String str16 = python3Target1.getTargetStringLiteralFromString("", true);
        org.antlr.v4.tool.Rule rule17 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str18 = python3Target1.getRuleFunctionContextStructName(rule17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 64 + "'", int4 == 64);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "_tset\\\"hi!\\\"" + "'", str7, "_tset\\\"hi!\\\"");
        org.junit.Assert.assertNull(codeGenerator8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "\"Python3\"Context" + "'", str11, "\"Python3\"Context");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "\"\"" + "'", str16, "\"\"");
    }

    @Test
    public void test1255() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1255");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str4 = python3Target1.getImplicitSetLabel("\"hi!\"");
        java.lang.String str6 = python3Target1.encodeIntAsCharEscape(0);
        java.lang.String str7 = python3Target1.getVersion();
        java.lang.String str9 = python3Target1.getTargetStringLiteralFromString("hi!");
        org.antlr.v4.tool.Grammar grammar10 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator11 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target12 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator11);
        boolean boolean13 = python3Target12.supportsOverloadedMethods();
        java.lang.String str15 = python3Target12.getTargetStringLiteralFromString("_Python3");
        org.antlr.v4.tool.Grammar grammar16 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator17 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target18 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator17);
        int int19 = python3Target18.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet20 = python3Target18.getBadWords();
        int int21 = python3Target18.getInlineTestSetWordSize();
        org.antlr.v4.codegen.CodeGenerator codeGenerator22 = python3Target18.getCodeGenerator();
        java.lang.String str24 = python3Target18.getImplicitSetLabel("_\"hi!\"Context");
        java.lang.String str26 = python3Target18.getImplicitSetLabel("_tset");
        java.lang.String str28 = python3Target18.getImplicitSetLabel("\"\\\"Python3\\\"Context\"");
        int int29 = python3Target18.getSerializedATNSegmentLimit();
        org.antlr.v4.tool.Grammar grammar30 = null;
        int[] intArray31 = new int[] {};
        java.lang.String[] strArray32 = python3Target18.getTokenTypesAsTargetLabels(grammar30, intArray31);
        java.lang.String[] strArray33 = python3Target12.getTokenTypesAsTargetLabels(grammar16, intArray31);
        java.lang.String[] strArray34 = python3Target1.getTokenTypesAsTargetLabels(grammar10, intArray31);
        org.antlr.v4.codegen.CodeGenerator codeGenerator35 = python3Target1.getCodeGenerator();
        java.lang.String str37 = python3Target1.getImplicitSetLabel("_\\35");
        java.util.Set<java.lang.String> strSet38 = python3Target1.getBadWords();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "_tset\"hi!\"" + "'", str4, "_tset\"hi!\"");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\\0" + "'", str6, "\\0");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "4.5.2.1" + "'", str7, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\"hi!\"" + "'", str9, "\"hi!\"");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "\"_Python3\"" + "'", str15, "\"_Python3\"");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 64 + "'", int19 == 64);
        org.junit.Assert.assertNotNull(strSet20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 64 + "'", int21 == 64);
        org.junit.Assert.assertNull(codeGenerator22);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "_tset_\"hi!\"Context" + "'", str24, "_tset_\"hi!\"Context");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "_tset_tset" + "'", str26, "_tset_tset");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "_tset\"\\\"Python3\\\"Context\"" + "'", str28, "_tset\"\\\"Python3\\\"Context\"");
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 29 + "'", int29 == 29);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[]");
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertNull(codeGenerator35);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "_tset_\\35" + "'", str37, "_tset_\\35");
        org.junit.Assert.assertNotNull(strSet38);
    }

    @Test
    public void test1256() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1256");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet3 = python3Target1.getBadWords();
        int int4 = python3Target1.getInlineTestSetWordSize();
        org.antlr.v4.codegen.CodeGenerator codeGenerator5 = python3Target1.getCodeGenerator();
        java.lang.String str7 = python3Target1.getImplicitSetLabel("_\"hi!\"Context");
        java.lang.String str9 = python3Target1.getImplicitSetLabel("_tset");
        int int10 = python3Target1.getInlineTestSetWordSize();
        org.antlr.v4.tool.ast.GrammarAST grammarAST11 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean12 = python3Target1.grammarSymbolCausesIssueInGeneratedCode(grammarAST11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 64 + "'", int4 == 64);
        org.junit.Assert.assertNull(codeGenerator5);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "_tset_\"hi!\"Context" + "'", str7, "_tset_\"hi!\"Context");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "_tset_tset" + "'", str9, "_tset_tset");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 64 + "'", int10 == 64);
    }

    @Test
    public void test1257() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1257");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet3 = python3Target1.getBadWords();
        int int4 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str7 = python3Target1.getTargetStringLiteralFromString("_tset\"hi!\"", false);
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = python3Target1.getCodeGenerator();
        boolean boolean9 = python3Target1.supportsOverloadedMethods();
        boolean boolean10 = python3Target1.wantsBaseListener();
        java.lang.String str12 = python3Target1.getImplicitSetLabel("");
        boolean boolean13 = python3Target1.wantsBaseVisitor();
        boolean boolean14 = python3Target1.templatesExist();
        boolean boolean15 = python3Target1.templatesExist();
        boolean boolean16 = python3Target1.templatesExist();
        org.antlr.v4.tool.Grammar grammar17 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator18 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target19 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator18);
        boolean boolean20 = python3Target19.supportsOverloadedMethods();
        java.lang.String str22 = python3Target19.getTargetStringLiteralFromString("_Python3");
        org.antlr.v4.tool.Grammar grammar23 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator24 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target25 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator24);
        int int26 = python3Target25.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet27 = python3Target25.getBadWords();
        int int28 = python3Target25.getInlineTestSetWordSize();
        org.antlr.v4.codegen.CodeGenerator codeGenerator29 = python3Target25.getCodeGenerator();
        java.lang.String str31 = python3Target25.getImplicitSetLabel("_\"hi!\"Context");
        java.lang.String str33 = python3Target25.getImplicitSetLabel("_tset");
        java.lang.String str35 = python3Target25.getImplicitSetLabel("\"\\\"Python3\\\"Context\"");
        int int36 = python3Target25.getSerializedATNSegmentLimit();
        org.antlr.v4.tool.Grammar grammar37 = null;
        int[] intArray38 = new int[] {};
        java.lang.String[] strArray39 = python3Target25.getTokenTypesAsTargetLabels(grammar37, intArray38);
        java.lang.String[] strArray40 = python3Target19.getTokenTypesAsTargetLabels(grammar23, intArray38);
        java.lang.String[] strArray41 = python3Target1.getTokenTypesAsTargetLabels(grammar17, intArray38);
        java.lang.Class<?> wildcardClass42 = python3Target1.getClass();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 64 + "'", int4 == 64);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "_tset\\\"hi!\\\"" + "'", str7, "_tset\\\"hi!\\\"");
        org.junit.Assert.assertNull(codeGenerator8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "_tset" + "'", str12, "_tset");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "\"_Python3\"" + "'", str22, "\"_Python3\"");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 64 + "'", int26 == 64);
        org.junit.Assert.assertNotNull(strSet27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 64 + "'", int28 == 64);
        org.junit.Assert.assertNull(codeGenerator29);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "_tset_\"hi!\"Context" + "'", str31, "_tset_\"hi!\"Context");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "_tset_tset" + "'", str33, "_tset_tset");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "_tset\"\\\"Python3\\\"Context\"" + "'", str35, "_tset\"\\\"Python3\\\"Context\"");
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 29 + "'", int36 == 29);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[]");
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertNotNull(wildcardClass42);
    }

    @Test
    public void test1258() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1258");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet3 = python3Target1.getBadWords();
        int int4 = python3Target1.getInlineTestSetWordSize();
        org.antlr.v4.codegen.CodeGenerator codeGenerator5 = python3Target1.getCodeGenerator();
        java.lang.String str6 = python3Target1.getLanguage();
        java.lang.String str8 = python3Target1.getListLabel("tset\\\"hi!");
        java.lang.String str10 = python3Target1.getTargetStringLiteralFromString("\"_tset_tset_\\\"hi!\\\"Context\"");
        org.antlr.v4.codegen.model.RuleFunction ruleFunction11 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str12 = python3Target1.getRuleFunctionContextStructName(ruleFunction11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 64 + "'", int4 == 64);
        org.junit.Assert.assertNull(codeGenerator5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Python3" + "'", str6, "Python3");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "tset\\\"hi!" + "'", str8, "tset\\\"hi!");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\"\\\"_tset_tset_\\\\\\\"hi!\\\\\\\"Context\\\"\"" + "'", str10, "\"\\\"_tset_tset_\\\\\\\"hi!\\\\\\\"Context\\\"\"");
    }

    @Test
    public void test1259() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1259");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet3 = python3Target1.getBadWords();
        int int4 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str7 = python3Target1.getTargetStringLiteralFromString("_tset\"hi!\"", false);
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = python3Target1.getCodeGenerator();
        boolean boolean9 = python3Target1.supportsOverloadedMethods();
        java.lang.String str11 = python3Target1.getAltLabelContextStructName("\"Python3\"");
        java.lang.String str14 = python3Target1.getTargetStringLiteralFromString("tset_\\\"hi!\\\"Contex", true);
        boolean boolean15 = python3Target1.templatesExist();
        boolean boolean16 = python3Target1.wantsBaseVisitor();
        org.antlr.v4.codegen.model.RuleFunction ruleFunction17 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str18 = python3Target1.getRuleFunctionContextStructName(ruleFunction17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 64 + "'", int4 == 64);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "_tset\\\"hi!\\\"" + "'", str7, "_tset\\\"hi!\\\"");
        org.junit.Assert.assertNull(codeGenerator8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "\"Python3\"Context" + "'", str11, "\"Python3\"Context");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "\"tset_\\\\\\\"hi!\\\\\\\"Contex\"" + "'", str14, "\"tset_\\\\\\\"hi!\\\\\\\"Contex\"");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    }

    @Test
    public void test1260() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1260");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str4 = python3Target1.getImplicitSetLabel("\"hi!\"");
        java.lang.String str6 = python3Target1.encodeIntAsCharEscape(0);
        java.lang.String str7 = python3Target1.getVersion();
        java.lang.String str9 = python3Target1.getImplicitRuleLabel("\"hi!\"Context");
        java.lang.String str10 = python3Target1.getLanguage();
        java.lang.String str12 = python3Target1.getListLabel("_tset_\"hi!\"Context");
        org.stringtemplate.v4.STGroup sTGroup13 = python3Target1.getTemplates();
        boolean boolean14 = python3Target1.wantsBaseVisitor();
        java.lang.String str16 = python3Target1.encodeIntAsCharEscape((int) (byte) 100);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "_tset\"hi!\"" + "'", str4, "_tset\"hi!\"");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\\0" + "'", str6, "\\0");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "4.5.2.1" + "'", str7, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "_\"hi!\"Context" + "'", str9, "_\"hi!\"Context");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Python3" + "'", str10, "Python3");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "_tset_\"hi!\"Context" + "'", str12, "_tset_\"hi!\"Context");
        org.junit.Assert.assertNotNull(sTGroup13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "d" + "'", str16, "d");
    }

    @Test
    public void test1261() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1261");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet3 = python3Target1.getBadWords();
        boolean boolean4 = python3Target1.wantsBaseListener();
        int int5 = python3Target1.getSerializedATNSegmentLimit();
        int int6 = python3Target1.getSerializedATNSegmentLimit();
        java.util.Set<java.lang.String> strSet7 = python3Target1.getBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = null;
        java.lang.String str11 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator8, "_tset_\"\\\"_\\\"hi!\\\"Contex\"Context", true);
        java.lang.String str13 = python3Target1.getImplicitSetLabel("\"\\\"_\\\\\\\"hi!\\\\\\\"Contex\\\"\"");
        java.lang.String str15 = python3Target1.getImplicitRuleLabel("_Python3Contex");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 29 + "'", int5 == 29);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 29 + "'", int6 == 29);
        org.junit.Assert.assertNotNull(strSet7);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "\"tset_\\\"\\\"_\\\"hi!\\\"Contex\\\"Contex\"" + "'", str11, "\"tset_\\\"\\\"_\\\"hi!\\\"Contex\\\"Contex\"");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "_tset\"\\\"_\\\\\\\"hi!\\\\\\\"Contex\\\"\"" + "'", str13, "_tset\"\\\"_\\\\\\\"hi!\\\\\\\"Contex\\\"\"");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "__Python3Contex" + "'", str15, "__Python3Contex");
    }

    @Test
    public void test1262() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1262");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet3 = python3Target1.getBadWords();
        int int4 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str7 = python3Target1.getTargetStringLiteralFromString("_tset\"hi!\"", false);
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = python3Target1.getCodeGenerator();
        boolean boolean9 = python3Target1.supportsOverloadedMethods();
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = python3Target1.getCodeGenerator();
        boolean boolean11 = python3Target1.wantsBaseVisitor();
        org.antlr.v4.tool.ast.GrammarAST grammarAST12 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str13 = python3Target1.getLoopCounter(grammarAST12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 64 + "'", int4 == 64);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "_tset\\\"hi!\\\"" + "'", str7, "_tset\\\"hi!\\\"");
        org.junit.Assert.assertNull(codeGenerator8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(codeGenerator10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test1263() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1263");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str4 = python3Target1.getImplicitSetLabel("\"hi!\"");
        java.lang.String str6 = python3Target1.encodeIntAsCharEscape(0);
        java.lang.String str7 = python3Target1.getVersion();
        java.lang.String str9 = python3Target1.getTargetStringLiteralFromString("hi!");
        boolean boolean10 = python3Target1.templatesExist();
        java.lang.String str12 = python3Target1.getImplicitRuleLabel("tset_\\\"hi!\\\"Contex");
        boolean boolean13 = python3Target1.wantsBaseVisitor();
        java.lang.String str16 = python3Target1.getTargetStringLiteralFromString("Python3", true);
        int int17 = python3Target1.getSerializedATNSegmentLimit();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "_tset\"hi!\"" + "'", str4, "_tset\"hi!\"");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\\0" + "'", str6, "\\0");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "4.5.2.1" + "'", str7, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\"hi!\"" + "'", str9, "\"hi!\"");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "_tset_\\\"hi!\\\"Contex" + "'", str12, "_tset_\\\"hi!\\\"Contex");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "\"Python3\"" + "'", str16, "\"Python3\"");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 29 + "'", int17 == 29);
    }

    @Test
    public void test1264() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1264");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet3 = python3Target1.getBadWords();
        int int4 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str7 = python3Target1.getTargetStringLiteralFromString("_tset\"hi!\"", false);
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = python3Target1.getCodeGenerator();
        boolean boolean9 = python3Target1.templatesExist();
        java.util.Set<java.lang.String> strSet10 = python3Target1.getBadWords();
        org.antlr.v4.tool.ast.GrammarAST grammarAST11 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean12 = python3Target1.grammarSymbolCausesIssueInGeneratedCode(grammarAST11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 64 + "'", int4 == 64);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "_tset\\\"hi!\\\"" + "'", str7, "_tset\\\"hi!\\\"");
        org.junit.Assert.assertNull(codeGenerator8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(strSet10);
    }

    @Test
    public void test1265() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1265");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet3 = python3Target1.getBadWords();
        int int4 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str7 = python3Target1.getTargetStringLiteralFromString("_tset\"hi!\"", false);
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = python3Target1.getCodeGenerator();
        boolean boolean9 = python3Target1.supportsOverloadedMethods();
        java.lang.String str11 = python3Target1.getAltLabelContextStructName("\"Python3\"");
        java.lang.String str13 = python3Target1.getImplicitRuleLabel("");
        java.lang.String str15 = python3Target1.getListLabel("");
        java.lang.String str17 = python3Target1.getImplicitRuleLabel("_tsettset\\\"hi!Context");
        int int18 = python3Target1.getInlineTestSetWordSize();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 64 + "'", int4 == 64);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "_tset\\\"hi!\\\"" + "'", str7, "_tset\\\"hi!\\\"");
        org.junit.Assert.assertNull(codeGenerator8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "\"Python3\"Context" + "'", str11, "\"Python3\"Context");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "_" + "'", str13, "_");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "__tsettset\\\"hi!Context" + "'", str17, "__tsettset\\\"hi!Context");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 64 + "'", int18 == 64);
    }

    @Test
    public void test1266() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1266");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.supportsOverloadedMethods();
        java.lang.String str4 = python3Target1.getListLabel("\"_Python3\"");
        int int5 = python3Target1.getSerializedATNSegmentLimit();
        org.stringtemplate.v4.STGroup sTGroup6 = python3Target1.getTemplates();
        boolean boolean7 = python3Target1.wantsBaseVisitor();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "\"_Python3\"" + "'", str4, "\"_Python3\"");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 29 + "'", int5 == 29);
        org.junit.Assert.assertNotNull(sTGroup6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    public void test1267() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1267");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet3 = python3Target1.getBadWords();
        int int4 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str7 = python3Target1.getTargetStringLiteralFromString("_tset\"hi!\"", false);
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = python3Target1.getCodeGenerator();
        boolean boolean9 = python3Target1.supportsOverloadedMethods();
        boolean boolean10 = python3Target1.supportsOverloadedMethods();
        java.lang.String str12 = python3Target1.getImplicitRuleLabel("_\"hi!\"Context");
        java.lang.String str14 = python3Target1.encodeIntAsCharEscape(29);
        int int15 = python3Target1.getInlineTestSetWordSize();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 64 + "'", int4 == 64);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "_tset\\\"hi!\\\"" + "'", str7, "_tset\\\"hi!\\\"");
        org.junit.Assert.assertNull(codeGenerator8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "__\"hi!\"Context" + "'", str12, "__\"hi!\"Context");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "\\35" + "'", str14, "\\35");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 64 + "'", int15 == 64);
    }

    @Test
    public void test1268() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1268");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str5 = python3Target1.getTargetStringLiteralFromString("", false);
        java.util.Set<java.lang.String> strSet6 = python3Target1.getBadWords();
        java.util.Set<java.lang.String> strSet7 = python3Target1.getBadWords();
        java.lang.String str9 = python3Target1.getImplicitRuleLabel("\"@\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = null;
        java.lang.String str13 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator10, "\\0ContextContext", false);
        java.lang.String str15 = python3Target1.getImplicitRuleLabel("\"\\\"_Python3\\\"\\\"ContextContex\"");
        int int16 = python3Target1.getSerializedATNSegmentLimit();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNotNull(strSet6);
        org.junit.Assert.assertNotNull(strSet7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "_\"@\"" + "'", str9, "_\"@\"");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "0ContextContex" + "'", str13, "0ContextContex");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "_\"\\\"_Python3\\\"\\\"ContextContex\"" + "'", str15, "_\"\\\"_Python3\\\"\\\"ContextContex\"");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 29 + "'", int16 == 29);
    }

    @Test
    public void test1269() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1269");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet3 = python3Target1.getBadWords();
        int int4 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str7 = python3Target1.getTargetStringLiteralFromString("_tset\"hi!\"", false);
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = python3Target1.getCodeGenerator();
        boolean boolean9 = python3Target1.supportsOverloadedMethods();
        boolean boolean10 = python3Target1.supportsOverloadedMethods();
        boolean boolean11 = python3Target1.wantsBaseVisitor();
        java.lang.String str13 = python3Target1.getImplicitSetLabel("\"\\\"_\\\\\\\"hi!\\\\\\\"Contex\\\"\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator14 = python3Target1.getCodeGenerator();
        org.antlr.v4.tool.ast.GrammarAST grammarAST15 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str16 = python3Target1.getLoopLabel(grammarAST15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 64 + "'", int4 == 64);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "_tset\\\"hi!\\\"" + "'", str7, "_tset\\\"hi!\\\"");
        org.junit.Assert.assertNull(codeGenerator8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "_tset\"\\\"_\\\\\\\"hi!\\\\\\\"Contex\\\"\"" + "'", str13, "_tset\"\\\"_\\\\\\\"hi!\\\\\\\"Contex\\\"\"");
        org.junit.Assert.assertNull(codeGenerator14);
    }

    @Test
    public void test1270() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1270");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet3 = python3Target1.getBadWords();
        boolean boolean4 = python3Target1.supportsOverloadedMethods();
        boolean boolean5 = python3Target1.wantsBaseVisitor();
        boolean boolean6 = python3Target1.templatesExist();
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = python3Target1.getCodeGenerator();
        int int8 = python3Target1.getSerializedATNSegmentLimit();
        boolean boolean9 = python3Target1.wantsBaseVisitor();
        java.lang.String str11 = python3Target1.getListLabel("\"0Contex\"");
        boolean boolean12 = python3Target1.templatesExist();
        java.lang.String str14 = python3Target1.getTargetStringLiteralFromString("__tset\\\"hi!\\\"");
        java.lang.String str16 = python3Target1.getAltLabelContextStructName("\"\\\"_Python3\\\"\"Context");
        java.lang.String str17 = python3Target1.getVersion();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(codeGenerator7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 29 + "'", int8 == 29);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "\"0Contex\"" + "'", str11, "\"0Contex\"");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "\"__tset\\\\\\\"hi!\\\\\\\"\"" + "'", str14, "\"__tset\\\\\\\"hi!\\\\\\\"\"");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "\"\\\"_Python3\\\"\"ContextContext" + "'", str16, "\"\\\"_Python3\\\"\"ContextContext");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "4.5.2.1" + "'", str17, "4.5.2.1");
    }

    @Test
    public void test1271() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1271");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str4 = python3Target1.getImplicitSetLabel("\"hi!\"");
        java.lang.String str6 = python3Target1.encodeIntAsCharEscape(0);
        java.lang.String str8 = python3Target1.encodeIntAsCharEscape(100);
        org.antlr.v4.codegen.CodeGenerator codeGenerator9 = null;
        java.lang.String str12 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator9, "\\0Context", true);
        boolean boolean13 = python3Target1.wantsBaseVisitor();
        java.lang.String str16 = python3Target1.getTargetStringLiteralFromString("\"\\\"hi!\\\"\"Context", true);
        java.lang.String str18 = python3Target1.getImplicitRuleLabel("_tset_\"Python3\"");
        boolean boolean19 = python3Target1.wantsBaseListener();
        java.lang.String str21 = python3Target1.getTargetStringLiteralFromString("\"tset\\\"_Python3\"");
        int int22 = python3Target1.getSerializedATNSegmentLimit();
        org.antlr.v4.codegen.model.RuleFunction ruleFunction23 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str24 = python3Target1.getRuleFunctionContextStructName(ruleFunction23);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "_tset\"hi!\"" + "'", str4, "_tset\"hi!\"");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\\0" + "'", str6, "\\0");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "d" + "'", str8, "d");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "\"0Contex\"" + "'", str12, "\"0Contex\"");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "\"\\\"\\\\\\\"hi!\\\\\\\"\\\"Context\"" + "'", str16, "\"\\\"\\\\\\\"hi!\\\\\\\"\\\"Context\"");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "__tset_\"Python3\"" + "'", str18, "__tset_\"Python3\"");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "\"\\\"tset\\\\\\\"_Python3\\\"\"" + "'", str21, "\"\\\"tset\\\\\\\"_Python3\\\"\"");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 29 + "'", int22 == 29);
    }

    @Test
    public void test1272() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1272");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str4 = python3Target1.getImplicitSetLabel("\"hi!\"");
        java.lang.String str6 = python3Target1.encodeIntAsCharEscape(0);
        java.lang.String str7 = python3Target1.getVersion();
        java.lang.String str9 = python3Target1.getImplicitRuleLabel("\"hi!\"Context");
        java.lang.String str11 = python3Target1.getTargetStringLiteralFromString("_Python3");
        int int12 = python3Target1.getInlineTestSetWordSize();
        boolean boolean13 = python3Target1.wantsBaseListener();
        org.stringtemplate.v4.STGroup sTGroup14 = python3Target1.getTemplates();
        org.antlr.v4.tool.ast.GrammarAST grammarAST15 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str16 = python3Target1.getLoopLabel(grammarAST15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "_tset\"hi!\"" + "'", str4, "_tset\"hi!\"");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\\0" + "'", str6, "\\0");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "4.5.2.1" + "'", str7, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "_\"hi!\"Context" + "'", str9, "_\"hi!\"Context");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "\"_Python3\"" + "'", str11, "\"_Python3\"");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 64 + "'", int12 == 64);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(sTGroup14);
    }

    @Test
    public void test1273() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1273");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet3 = python3Target1.getBadWords();
        int int4 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str6 = python3Target1.getAltLabelContextStructName("\"hi!\"");
        int int7 = python3Target1.getSerializedATNSegmentLimit();
        java.lang.String str8 = python3Target1.getVersion();
        int int9 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str10 = python3Target1.getLanguage();
        java.lang.String str11 = python3Target1.getLanguage();
        java.lang.Class<?> wildcardClass12 = python3Target1.getClass();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 64 + "'", int4 == 64);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\"hi!\"Context" + "'", str6, "\"hi!\"Context");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 29 + "'", int7 == 29);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "4.5.2.1" + "'", str8, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 64 + "'", int9 == 64);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Python3" + "'", str10, "Python3");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Python3" + "'", str11, "Python3");
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test1274() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1274");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet3 = python3Target1.getBadWords();
        int int4 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str6 = python3Target1.getAltLabelContextStructName("\"hi!\"");
        java.lang.String str7 = python3Target1.getVersion();
        java.lang.String str9 = python3Target1.getImplicitRuleLabel("");
        java.lang.String str11 = python3Target1.encodeIntAsCharEscape((int) (byte) 1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 64 + "'", int4 == 64);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\"hi!\"Context" + "'", str6, "\"hi!\"Context");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "4.5.2.1" + "'", str7, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "_" + "'", str9, "_");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "\\1" + "'", str11, "\\1");
    }

    @Test
    public void test1275() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1275");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str4 = python3Target1.getImplicitSetLabel("\"hi!\"");
        java.lang.String str6 = python3Target1.encodeIntAsCharEscape(0);
        java.lang.String str7 = python3Target1.getVersion();
        java.lang.String str9 = python3Target1.getImplicitRuleLabel("Python3");
        java.lang.String str12 = python3Target1.getTargetStringLiteralFromString("\"hi!\"", true);
        int int13 = python3Target1.getSerializedATNSegmentLimit();
        java.lang.String str14 = python3Target1.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup15 = python3Target1.getTemplates();
        java.lang.String str18 = python3Target1.getTargetStringLiteralFromString("\"_tset\\\"\\\\\\\"_\\\\\\\\\\\\\\\"hi!\\\\\\\\\\\\\\\"Contex\\\\\\\"\\\"\"", false);
        java.lang.String str20 = python3Target1.getAltLabelContextStructName("_\\35");
        boolean boolean21 = python3Target1.supportsOverloadedMethods();
        java.util.Set<java.lang.String> strSet22 = python3Target1.getBadWords();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "_tset\"hi!\"" + "'", str4, "_tset\"hi!\"");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\\0" + "'", str6, "\\0");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "4.5.2.1" + "'", str7, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "_Python3" + "'", str9, "_Python3");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "\"\\\"hi!\\\"\"" + "'", str12, "\"\\\"hi!\\\"\"");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 29 + "'", int13 == 29);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Python3" + "'", str14, "Python3");
        org.junit.Assert.assertNotNull(sTGroup15);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "\\\"_tset\\\\\\\"\\\\\\\\\\\\\\\"_\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"hi!\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"Contex\\\\\\\\\\\\\\\"\\\\\\\"\\\"" + "'", str18, "\\\"_tset\\\\\\\"\\\\\\\\\\\\\\\"_\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"hi!\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"Contex\\\\\\\\\\\\\\\"\\\\\\\"\\\"");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "_\\35Context" + "'", str20, "_\\35Context");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(strSet22);
    }

    @Test
    public void test1276() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1276");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet3 = python3Target1.getBadWords();
        java.lang.String str4 = python3Target1.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator5 = python3Target1.getCodeGenerator();
        org.stringtemplate.v4.STGroup sTGroup6 = python3Target1.getTemplates();
        boolean boolean7 = python3Target1.supportsOverloadedMethods();
        java.lang.String str9 = python3Target1.encodeIntAsCharEscape((int) '#');
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = python3Target1.getCodeGenerator();
        int int11 = python3Target1.getSerializedATNSegmentLimit();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Python3" + "'", str4, "Python3");
        org.junit.Assert.assertNull(codeGenerator5);
        org.junit.Assert.assertNotNull(sTGroup6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "#" + "'", str9, "#");
        org.junit.Assert.assertNull(codeGenerator10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 29 + "'", int11 == 29);
    }

    @Test
    public void test1277() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1277");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.supportsOverloadedMethods();
        java.lang.String str4 = python3Target1.getListLabel("\"_Python3\"");
        java.lang.String str6 = python3Target1.getAltLabelContextStructName("\\0");
        java.lang.String str8 = python3Target1.getAltLabelContextStructName("_Python3");
        java.lang.String str10 = python3Target1.encodeIntAsCharEscape((int) '#');
        boolean boolean11 = python3Target1.templatesExist();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "\"_Python3\"" + "'", str4, "\"_Python3\"");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\\0Context" + "'", str6, "\\0Context");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "_Python3Context" + "'", str8, "_Python3Context");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "#" + "'", str10, "#");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
    }

    @Test
    public void test1278() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1278");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str4 = python3Target1.getImplicitSetLabel("\"hi!\"");
        java.lang.String str6 = python3Target1.encodeIntAsCharEscape(0);
        boolean boolean7 = python3Target1.templatesExist();
        java.util.Set<java.lang.String> strSet8 = python3Target1.getBadWords();
        java.lang.Class<?> wildcardClass9 = strSet8.getClass();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "_tset\"hi!\"" + "'", str4, "_tset\"hi!\"");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\\0" + "'", str6, "\\0");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test1279() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1279");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet3 = python3Target1.getBadWords();
        int int4 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str6 = python3Target1.getAltLabelContextStructName("\"hi!\"");
        boolean boolean7 = python3Target1.templatesExist();
        int int8 = python3Target1.getSerializedATNSegmentLimit();
        boolean boolean9 = python3Target1.wantsBaseVisitor();
        java.lang.String str11 = python3Target1.getAltLabelContextStructName("\"\\\"hi!\\\"\"");
        org.antlr.v4.tool.Grammar grammar12 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator13 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target14 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator13);
        boolean boolean15 = python3Target14.supportsOverloadedMethods();
        java.util.Set<java.lang.String> strSet16 = python3Target14.getBadWords();
        java.util.Set<java.lang.String> strSet17 = python3Target14.getBadWords();
        java.lang.String str18 = python3Target14.getVersion();
        org.antlr.v4.tool.Grammar grammar19 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator20 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target21 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator20);
        int int22 = python3Target21.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet23 = python3Target21.getBadWords();
        int int24 = python3Target21.getInlineTestSetWordSize();
        java.lang.String str27 = python3Target21.getTargetStringLiteralFromString("_tset\"hi!\"", false);
        org.antlr.v4.codegen.CodeGenerator codeGenerator28 = python3Target21.getCodeGenerator();
        boolean boolean29 = python3Target21.templatesExist();
        org.antlr.v4.tool.Grammar grammar30 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator31 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target32 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator31);
        int int33 = python3Target32.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet34 = python3Target32.getBadWords();
        int int35 = python3Target32.getInlineTestSetWordSize();
        org.antlr.v4.codegen.CodeGenerator codeGenerator36 = python3Target32.getCodeGenerator();
        java.lang.String str38 = python3Target32.getImplicitSetLabel("_\"hi!\"Context");
        java.lang.String str40 = python3Target32.getImplicitSetLabel("_tset");
        java.lang.String str42 = python3Target32.getImplicitSetLabel("\"\\\"Python3\\\"Context\"");
        int int43 = python3Target32.getSerializedATNSegmentLimit();
        org.antlr.v4.tool.Grammar grammar44 = null;
        int[] intArray45 = new int[] {};
        java.lang.String[] strArray46 = python3Target32.getTokenTypesAsTargetLabels(grammar44, intArray45);
        java.lang.String[] strArray47 = python3Target21.getTokenTypesAsTargetLabels(grammar30, intArray45);
        java.lang.String[] strArray48 = python3Target14.getTokenTypesAsTargetLabels(grammar19, intArray45);
        java.lang.String[] strArray49 = python3Target1.getTokenTypesAsTargetLabels(grammar12, intArray45);
        boolean boolean50 = python3Target1.templatesExist();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 64 + "'", int4 == 64);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\"hi!\"Context" + "'", str6, "\"hi!\"Context");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 29 + "'", int8 == 29);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "\"\\\"hi!\\\"\"Context" + "'", str11, "\"\\\"hi!\\\"\"Context");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertNotNull(strSet17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "4.5.2.1" + "'", str18, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 64 + "'", int22 == 64);
        org.junit.Assert.assertNotNull(strSet23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 64 + "'", int24 == 64);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "_tset\\\"hi!\\\"" + "'", str27, "_tset\\\"hi!\\\"");
        org.junit.Assert.assertNull(codeGenerator28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 64 + "'", int33 == 64);
        org.junit.Assert.assertNotNull(strSet34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 64 + "'", int35 == 64);
        org.junit.Assert.assertNull(codeGenerator36);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "_tset_\"hi!\"Context" + "'", str38, "_tset_\"hi!\"Context");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "_tset_tset" + "'", str40, "_tset_tset");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "_tset\"\\\"Python3\\\"Context\"" + "'", str42, "_tset\"\\\"Python3\\\"Context\"");
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 29 + "'", int43 == 29);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[]");
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertNotNull(strArray49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
    }

    @Test
    public void test1280() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1280");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str4 = python3Target1.getImplicitSetLabel("\"hi!\"");
        java.lang.String str6 = python3Target1.encodeIntAsCharEscape(0);
        boolean boolean7 = python3Target1.supportsOverloadedMethods();
        int int8 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str10 = python3Target1.getImplicitRuleLabel("_tset_\"hi!\"ContextContext");
        org.stringtemplate.v4.STGroup sTGroup11 = python3Target1.getTemplates();
        org.stringtemplate.v4.STGroup sTGroup12 = python3Target1.getTemplates();
        org.antlr.v4.tool.Rule rule13 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str14 = python3Target1.getRuleFunctionContextStructName(rule13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "_tset\"hi!\"" + "'", str4, "_tset\"hi!\"");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\\0" + "'", str6, "\\0");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 64 + "'", int8 == 64);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "__tset_\"hi!\"ContextContext" + "'", str10, "__tset_\"hi!\"ContextContext");
        org.junit.Assert.assertNotNull(sTGroup11);
        org.junit.Assert.assertNotNull(sTGroup12);
    }

    @Test
    public void test1281() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1281");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        org.antlr.v4.codegen.CodeGenerator codeGenerator2 = null;
        java.lang.String str5 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator2, "4.5.2.1", true);
        boolean boolean6 = python3Target1.templatesExist();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str8 = python3Target1.getElementListName("\\\"\\\\\\\"hi!\\\\\\\"\\\"Context");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "\".5.2.\"" + "'", str5, "\".5.2.\"");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
    }

    @Test
    public void test1282() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1282");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet3 = python3Target1.getBadWords();
        int int4 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str6 = python3Target1.getAltLabelContextStructName("\"hi!\"");
        int int7 = python3Target1.getSerializedATNSegmentLimit();
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = python3Target1.getCodeGenerator();
        java.lang.String str11 = python3Target1.getTargetStringLiteralFromString("\\\"tset\\\\\\\"_Python3\\\"", true);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 64 + "'", int4 == 64);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\"hi!\"Context" + "'", str6, "\"hi!\"Context");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 29 + "'", int7 == 29);
        org.junit.Assert.assertNull(codeGenerator8);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "\"\\\\\\\"tset\\\\\\\\\\\\\\\"_Python3\\\\\\\"\"" + "'", str11, "\"\\\\\\\"tset\\\\\\\\\\\\\\\"_Python3\\\\\\\"\"");
    }

    @Test
    public void test1283() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1283");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet3 = python3Target1.getBadWords();
        int int4 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str6 = python3Target1.getAltLabelContextStructName("\"hi!\"");
        boolean boolean7 = python3Target1.templatesExist();
        int int8 = python3Target1.getSerializedATNSegmentLimit();
        boolean boolean9 = python3Target1.wantsBaseVisitor();
        java.lang.String str11 = python3Target1.getAltLabelContextStructName("\"\\\"hi!\\\"\"");
        org.antlr.v4.tool.Grammar grammar12 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator13 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target14 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator13);
        boolean boolean15 = python3Target14.supportsOverloadedMethods();
        java.util.Set<java.lang.String> strSet16 = python3Target14.getBadWords();
        java.util.Set<java.lang.String> strSet17 = python3Target14.getBadWords();
        java.lang.String str18 = python3Target14.getVersion();
        org.antlr.v4.tool.Grammar grammar19 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator20 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target21 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator20);
        int int22 = python3Target21.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet23 = python3Target21.getBadWords();
        int int24 = python3Target21.getInlineTestSetWordSize();
        java.lang.String str27 = python3Target21.getTargetStringLiteralFromString("_tset\"hi!\"", false);
        org.antlr.v4.codegen.CodeGenerator codeGenerator28 = python3Target21.getCodeGenerator();
        boolean boolean29 = python3Target21.templatesExist();
        org.antlr.v4.tool.Grammar grammar30 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator31 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target32 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator31);
        int int33 = python3Target32.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet34 = python3Target32.getBadWords();
        int int35 = python3Target32.getInlineTestSetWordSize();
        org.antlr.v4.codegen.CodeGenerator codeGenerator36 = python3Target32.getCodeGenerator();
        java.lang.String str38 = python3Target32.getImplicitSetLabel("_\"hi!\"Context");
        java.lang.String str40 = python3Target32.getImplicitSetLabel("_tset");
        java.lang.String str42 = python3Target32.getImplicitSetLabel("\"\\\"Python3\\\"Context\"");
        int int43 = python3Target32.getSerializedATNSegmentLimit();
        org.antlr.v4.tool.Grammar grammar44 = null;
        int[] intArray45 = new int[] {};
        java.lang.String[] strArray46 = python3Target32.getTokenTypesAsTargetLabels(grammar44, intArray45);
        java.lang.String[] strArray47 = python3Target21.getTokenTypesAsTargetLabels(grammar30, intArray45);
        java.lang.String[] strArray48 = python3Target14.getTokenTypesAsTargetLabels(grammar19, intArray45);
        java.lang.String[] strArray49 = python3Target1.getTokenTypesAsTargetLabels(grammar12, intArray45);
        java.lang.String str50 = python3Target1.getVersion();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 64 + "'", int4 == 64);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\"hi!\"Context" + "'", str6, "\"hi!\"Context");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 29 + "'", int8 == 29);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "\"\\\"hi!\\\"\"Context" + "'", str11, "\"\\\"hi!\\\"\"Context");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertNotNull(strSet17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "4.5.2.1" + "'", str18, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 64 + "'", int22 == 64);
        org.junit.Assert.assertNotNull(strSet23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 64 + "'", int24 == 64);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "_tset\\\"hi!\\\"" + "'", str27, "_tset\\\"hi!\\\"");
        org.junit.Assert.assertNull(codeGenerator28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 64 + "'", int33 == 64);
        org.junit.Assert.assertNotNull(strSet34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 64 + "'", int35 == 64);
        org.junit.Assert.assertNull(codeGenerator36);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "_tset_\"hi!\"Context" + "'", str38, "_tset_\"hi!\"Context");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "_tset_tset" + "'", str40, "_tset_tset");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "_tset\"\\\"Python3\\\"Context\"" + "'", str42, "_tset\"\\\"Python3\\\"Context\"");
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 29 + "'", int43 == 29);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[]");
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertNotNull(strArray49);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "4.5.2.1" + "'", str50, "4.5.2.1");
    }

    @Test
    public void test1284() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1284");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str4 = python3Target1.getImplicitSetLabel("\"hi!\"");
        java.lang.String str6 = python3Target1.encodeIntAsCharEscape(0);
        java.lang.String str7 = python3Target1.getVersion();
        java.lang.String str9 = python3Target1.getTargetStringLiteralFromString("hi!");
        java.lang.String str11 = python3Target1.encodeIntAsCharEscape((int) (short) 10);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str13 = python3Target1.getImplicitTokenLabel("_tset\\\"_tset_\\\\\\\\\\\\\\\"hi!\\\\\\\\\\\\\\\"Contex\\\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "_tset\"hi!\"" + "'", str4, "_tset\"hi!\"");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\\0" + "'", str6, "\\0");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "4.5.2.1" + "'", str7, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\"hi!\"" + "'", str9, "\"hi!\"");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "\\n" + "'", str11, "\\n");
    }

    @Test
    public void test1285() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1285");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet3 = python3Target1.getBadWords();
        int int4 = python3Target1.getInlineTestSetWordSize();
        org.antlr.v4.codegen.CodeGenerator codeGenerator5 = python3Target1.getCodeGenerator();
        java.lang.String str6 = python3Target1.getLanguage();
        java.lang.String str8 = python3Target1.getListLabel("tset\\\"hi!");
        org.stringtemplate.v4.STGroup sTGroup9 = python3Target1.getTemplates();
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = null;
        java.lang.String str13 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator10, "_tset_\"hi!\"Context", false);
        boolean boolean14 = python3Target1.supportsOverloadedMethods();
        boolean boolean15 = python3Target1.wantsBaseVisitor();
        java.lang.String str17 = python3Target1.getTargetStringLiteralFromString("__\"\\\"hi!\\\"\"Context");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 64 + "'", int4 == 64);
        org.junit.Assert.assertNull(codeGenerator5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Python3" + "'", str6, "Python3");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "tset\\\"hi!" + "'", str8, "tset\\\"hi!");
        org.junit.Assert.assertNotNull(sTGroup9);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "tset_\\\"hi!\\\"Contex" + "'", str13, "tset_\\\"hi!\\\"Contex");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "\"__\\\"\\\\\\\"hi!\\\\\\\"\\\"Context\"" + "'", str17, "\"__\\\"\\\\\\\"hi!\\\\\\\"\\\"Context\"");
    }

    @Test
    public void test1286() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1286");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str4 = python3Target1.getImplicitSetLabel("\"hi!\"");
        java.lang.String str6 = python3Target1.encodeIntAsCharEscape(0);
        boolean boolean7 = python3Target1.templatesExist();
        org.stringtemplate.v4.STGroup sTGroup8 = python3Target1.getTemplates();
        java.lang.String str10 = python3Target1.encodeIntAsCharEscape(64);
        org.antlr.v4.tool.Grammar grammar11 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str13 = python3Target1.getTokenTypeAsTargetLabel(grammar11, (int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "_tset\"hi!\"" + "'", str4, "_tset\"hi!\"");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\\0" + "'", str6, "\\0");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(sTGroup8);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "@" + "'", str10, "@");
    }

    @Test
    public void test1287() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1287");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str5 = python3Target1.getTargetStringLiteralFromString("", false);
        boolean boolean6 = python3Target1.wantsBaseVisitor();
        boolean boolean7 = python3Target1.wantsBaseVisitor();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    public void test1288() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1288");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet3 = python3Target1.getBadWords();
        int int4 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str7 = python3Target1.getTargetStringLiteralFromString("_tset\"hi!\"", false);
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = python3Target1.getCodeGenerator();
        boolean boolean9 = python3Target1.supportsOverloadedMethods();
        boolean boolean10 = python3Target1.supportsOverloadedMethods();
        java.lang.String str11 = python3Target1.getVersion();
        int int12 = python3Target1.getSerializedATNSegmentLimit();
        java.lang.String str13 = python3Target1.getLanguage();
        int int14 = python3Target1.getInlineTestSetWordSize();
        org.antlr.v4.tool.ast.GrammarAST grammarAST15 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str16 = python3Target1.getLoopLabel(grammarAST15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 64 + "'", int4 == 64);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "_tset\\\"hi!\\\"" + "'", str7, "_tset\\\"hi!\\\"");
        org.junit.Assert.assertNull(codeGenerator8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "4.5.2.1" + "'", str11, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 29 + "'", int12 == 29);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Python3" + "'", str13, "Python3");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 64 + "'", int14 == 64);
    }

    @Test
    public void test1289() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1289");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet3 = python3Target1.getBadWords();
        int int4 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str7 = python3Target1.getTargetStringLiteralFromString("_tset\"hi!\"", false);
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = python3Target1.getCodeGenerator();
        boolean boolean9 = python3Target1.supportsOverloadedMethods();
        java.lang.String str11 = python3Target1.getAltLabelContextStructName("\"Python3\"");
        boolean boolean12 = python3Target1.wantsBaseListener();
        org.stringtemplate.v4.STGroup sTGroup13 = python3Target1.getTemplates();
        org.stringtemplate.v4.STGroup sTGroup14 = python3Target1.getTemplates();
        java.util.Set<java.lang.String> strSet15 = python3Target1.getBadWords();
        java.lang.String str17 = python3Target1.encodeIntAsCharEscape((int) '4');
        java.lang.String str18 = python3Target1.getLanguage();
        org.antlr.v4.tool.Rule rule19 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str20 = python3Target1.getRuleFunctionContextStructName(rule19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 64 + "'", int4 == 64);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "_tset\\\"hi!\\\"" + "'", str7, "_tset\\\"hi!\\\"");
        org.junit.Assert.assertNull(codeGenerator8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "\"Python3\"Context" + "'", str11, "\"Python3\"Context");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(sTGroup13);
        org.junit.Assert.assertNotNull(sTGroup14);
        org.junit.Assert.assertNotNull(strSet15);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "\\64" + "'", str17, "\\64");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Python3" + "'", str18, "Python3");
    }

    @Test
    public void test1290() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1290");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet3 = python3Target1.getBadWords();
        int int4 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str7 = python3Target1.getTargetStringLiteralFromString("_tset\"hi!\"", false);
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = python3Target1.getCodeGenerator();
        boolean boolean9 = python3Target1.supportsOverloadedMethods();
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = python3Target1.getCodeGenerator();
        java.util.Set<java.lang.String> strSet11 = python3Target1.getBadWords();
        int int12 = python3Target1.getSerializedATNSegmentLimit();
        java.lang.String str15 = python3Target1.getTargetStringLiteralFromString("_\"tset4.5.2.1Contex\"", false);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 64 + "'", int4 == 64);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "_tset\\\"hi!\\\"" + "'", str7, "_tset\\\"hi!\\\"");
        org.junit.Assert.assertNull(codeGenerator8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(codeGenerator10);
        org.junit.Assert.assertNotNull(strSet11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 29 + "'", int12 == 29);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "_\\\"tset4.5.2.1Contex\\\"" + "'", str15, "_\\\"tset4.5.2.1Contex\\\"");
    }

    @Test
    public void test1291() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1291");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet3 = python3Target1.getBadWords();
        int int4 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str5 = python3Target1.getLanguage();
        boolean boolean6 = python3Target1.templatesExist();
        boolean boolean7 = python3Target1.supportsOverloadedMethods();
        java.lang.String str9 = python3Target1.getAltLabelContextStructName("\"Tset\\\\\\\"hi!Context\"");
        int int10 = python3Target1.getInlineTestSetWordSize();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 64 + "'", int4 == 64);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Python3" + "'", str5, "Python3");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\"Tset\\\\\\\"hi!Context\"Context" + "'", str9, "\"Tset\\\\\\\"hi!Context\"Context");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 64 + "'", int10 == 64);
    }

    @Test
    public void test1292() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1292");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet3 = python3Target1.getBadWords();
        boolean boolean4 = python3Target1.supportsOverloadedMethods();
        boolean boolean5 = python3Target1.wantsBaseVisitor();
        boolean boolean6 = python3Target1.templatesExist();
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = python3Target1.getCodeGenerator();
        int int8 = python3Target1.getSerializedATNSegmentLimit();
        boolean boolean9 = python3Target1.wantsBaseVisitor();
        org.antlr.v4.tool.Rule rule10 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str11 = python3Target1.getRuleFunctionContextStructName(rule10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(codeGenerator7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 29 + "'", int8 == 29);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test1293() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1293");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet3 = python3Target1.getBadWords();
        int int4 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str7 = python3Target1.getTargetStringLiteralFromString("_tset\"hi!\"", false);
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = python3Target1.getCodeGenerator();
        boolean boolean9 = python3Target1.supportsOverloadedMethods();
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = python3Target1.getCodeGenerator();
        int int11 = python3Target1.getSerializedATNSegmentLimit();
        boolean boolean12 = python3Target1.wantsBaseListener();
        java.lang.String str14 = python3Target1.getTargetStringLiteralFromString("\" \"");
        int int15 = python3Target1.getSerializedATNSegmentLimit();
        java.lang.String str17 = python3Target1.encodeIntAsCharEscape(0);
        org.antlr.v4.tool.ast.GrammarAST grammarAST18 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean19 = python3Target1.grammarSymbolCausesIssueInGeneratedCode(grammarAST18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 64 + "'", int4 == 64);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "_tset\\\"hi!\\\"" + "'", str7, "_tset\\\"hi!\\\"");
        org.junit.Assert.assertNull(codeGenerator8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(codeGenerator10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 29 + "'", int11 == 29);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "\"\\\" \\\"\"" + "'", str14, "\"\\\" \\\"\"");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 29 + "'", int15 == 29);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "\\0" + "'", str17, "\\0");
    }

    @Test
    public void test1294() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1294");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet3 = python3Target1.getBadWords();
        boolean boolean4 = python3Target1.wantsBaseListener();
        java.lang.String str5 = python3Target1.getVersion();
        java.lang.String str6 = python3Target1.getLanguage();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "4.5.2.1" + "'", str5, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Python3" + "'", str6, "Python3");
    }

    @Test
    public void test1295() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1295");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str4 = python3Target1.getImplicitSetLabel("\"hi!\"");
        java.lang.String str6 = python3Target1.encodeIntAsCharEscape(0);
        java.lang.String str7 = python3Target1.getVersion();
        java.lang.String str9 = python3Target1.getTargetStringLiteralFromString("hi!");
        java.lang.String str11 = python3Target1.getListLabel("");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str13 = python3Target1.getElementName("\"\\\"\\\"_\\\"hi!\\\"Contex\\\"Contex\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "_tset\"hi!\"" + "'", str4, "_tset\"hi!\"");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\\0" + "'", str6, "\\0");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "4.5.2.1" + "'", str7, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\"hi!\"" + "'", str9, "\"hi!\"");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
    }

    @Test
    public void test1296() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1296");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet3 = python3Target1.getBadWords();
        int int4 = python3Target1.getInlineTestSetWordSize();
        org.antlr.v4.codegen.CodeGenerator codeGenerator5 = python3Target1.getCodeGenerator();
        java.lang.String str6 = python3Target1.getLanguage();
        java.lang.String str8 = python3Target1.getListLabel("tset\\\"hi!");
        boolean boolean9 = python3Target1.wantsBaseVisitor();
        java.lang.String str12 = python3Target1.getTargetStringLiteralFromString("_tset_tset_\"hi!\"Context", true);
        int int13 = python3Target1.getSerializedATNSegmentLimit();
        java.lang.String str15 = python3Target1.encodeIntAsCharEscape(64);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 64 + "'", int4 == 64);
        org.junit.Assert.assertNull(codeGenerator5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Python3" + "'", str6, "Python3");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "tset\\\"hi!" + "'", str8, "tset\\\"hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "\"_tset_tset_\\\"hi!\\\"Context\"" + "'", str12, "\"_tset_tset_\\\"hi!\\\"Context\"");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 29 + "'", int13 == 29);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "@" + "'", str15, "@");
    }

    @Test
    public void test1297() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1297");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str4 = python3Target1.getImplicitSetLabel("\"hi!\"");
        java.lang.String str6 = python3Target1.encodeIntAsCharEscape(0);
        java.lang.String str7 = python3Target1.getVersion();
        java.lang.String str10 = python3Target1.getTargetStringLiteralFromString("Python3", true);
        java.lang.String str12 = python3Target1.getImplicitRuleLabel("\"Python3\"");
        boolean boolean13 = python3Target1.templatesExist();
        java.lang.String str14 = python3Target1.getLanguage();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "_tset\"hi!\"" + "'", str4, "_tset\"hi!\"");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\\0" + "'", str6, "\\0");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "4.5.2.1" + "'", str7, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\"Python3\"" + "'", str10, "\"Python3\"");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "_\"Python3\"" + "'", str12, "_\"Python3\"");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Python3" + "'", str14, "Python3");
    }

    @Test
    public void test1298() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1298");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str4 = python3Target1.getImplicitSetLabel("\"hi!\"");
        java.lang.String str6 = python3Target1.encodeIntAsCharEscape(0);
        java.lang.String str7 = python3Target1.getVersion();
        java.lang.String str9 = python3Target1.getTargetStringLiteralFromString("hi!");
        java.lang.String str11 = python3Target1.getAltLabelContextStructName("\"\\\"hi!\\\"\"Context");
        java.lang.String str12 = python3Target1.getVersion();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "_tset\"hi!\"" + "'", str4, "_tset\"hi!\"");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\\0" + "'", str6, "\\0");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "4.5.2.1" + "'", str7, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\"hi!\"" + "'", str9, "\"hi!\"");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "\"\\\"hi!\\\"\"ContextContext" + "'", str11, "\"\\\"hi!\\\"\"ContextContext");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "4.5.2.1" + "'", str12, "4.5.2.1");
    }

    @Test
    public void test1299() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1299");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str4 = python3Target1.getImplicitSetLabel("\"hi!\"");
        java.lang.String str6 = python3Target1.encodeIntAsCharEscape(0);
        java.lang.String str7 = python3Target1.getVersion();
        boolean boolean8 = python3Target1.templatesExist();
        boolean boolean9 = python3Target1.wantsBaseVisitor();
        org.antlr.v4.tool.Rule rule10 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str11 = python3Target1.getRuleFunctionContextStructName(rule10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "_tset\"hi!\"" + "'", str4, "_tset\"hi!\"");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\\0" + "'", str6, "\\0");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "4.5.2.1" + "'", str7, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test1300() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1300");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet3 = python3Target1.getBadWords();
        java.lang.String str4 = python3Target1.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator5 = python3Target1.getCodeGenerator();
        java.lang.String str7 = python3Target1.getTargetStringLiteralFromString("_Python3");
        int int8 = python3Target1.getSerializedATNSegmentLimit();
        boolean boolean9 = python3Target1.wantsBaseListener();
        boolean boolean10 = python3Target1.supportsOverloadedMethods();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Python3" + "'", str4, "Python3");
        org.junit.Assert.assertNull(codeGenerator5);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "\"_Python3\"" + "'", str7, "\"_Python3\"");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 29 + "'", int8 == 29);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test1301() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1301");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.lang.String str3 = python3Target1.getImplicitRuleLabel("_\"hi!\"Context");
        java.lang.String str4 = python3Target1.getLanguage();
        boolean boolean5 = python3Target1.wantsBaseVisitor();
        java.lang.String str7 = python3Target1.getImplicitRuleLabel("\"hi!\"ContextContext");
        java.lang.String str9 = python3Target1.getTargetStringLiteralFromString("_\"tset4.5.2.1Contex\"");
        org.antlr.v4.codegen.model.RuleFunction ruleFunction10 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str11 = python3Target1.getRuleFunctionContextStructName(ruleFunction10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "__\"hi!\"Context" + "'", str3, "__\"hi!\"Context");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Python3" + "'", str4, "Python3");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "_\"hi!\"ContextContext" + "'", str7, "_\"hi!\"ContextContext");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\"_\\\"tset4.5.2.1Contex\\\"\"" + "'", str9, "\"_\\\"tset4.5.2.1Contex\\\"\"");
    }

    @Test
    public void test1302() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1302");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet3 = python3Target1.getBadWords();
        int int4 = python3Target1.getInlineTestSetWordSize();
        org.antlr.v4.codegen.CodeGenerator codeGenerator5 = python3Target1.getCodeGenerator();
        java.lang.String str6 = python3Target1.getLanguage();
        java.lang.String str8 = python3Target1.getListLabel("tset\\\"hi!");
        org.stringtemplate.v4.STGroup sTGroup9 = python3Target1.getTemplates();
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = null;
        java.lang.String str13 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator10, "_tset_\"hi!\"Context", false);
        java.lang.String str15 = python3Target1.getImplicitSetLabel("4.5.2.1");
        java.lang.String str16 = python3Target1.getLanguage();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 64 + "'", int4 == 64);
        org.junit.Assert.assertNull(codeGenerator5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Python3" + "'", str6, "Python3");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "tset\\\"hi!" + "'", str8, "tset\\\"hi!");
        org.junit.Assert.assertNotNull(sTGroup9);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "tset_\\\"hi!\\\"Contex" + "'", str13, "tset_\\\"hi!\\\"Contex");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "_tset4.5.2.1" + "'", str15, "_tset4.5.2.1");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Python3" + "'", str16, "Python3");
    }

    @Test
    public void test1303() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1303");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet3 = python3Target1.getBadWords();
        int int4 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str7 = python3Target1.getTargetStringLiteralFromString("_tset\"hi!\"", false);
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = python3Target1.getCodeGenerator();
        boolean boolean9 = python3Target1.supportsOverloadedMethods();
        boolean boolean10 = python3Target1.supportsOverloadedMethods();
        java.lang.String str12 = python3Target1.getImplicitRuleLabel("_\"hi!\"Context");
        boolean boolean13 = python3Target1.wantsBaseListener();
        java.lang.String str15 = python3Target1.getImplicitRuleLabel("__tset\"\\\"_\\\\\\\"Python3\\\\\\\"\\\"Context\"");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 64 + "'", int4 == 64);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "_tset\\\"hi!\\\"" + "'", str7, "_tset\\\"hi!\\\"");
        org.junit.Assert.assertNull(codeGenerator8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "__\"hi!\"Context" + "'", str12, "__\"hi!\"Context");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "___tset\"\\\"_\\\\\\\"Python3\\\\\\\"\\\"Context\"" + "'", str15, "___tset\"\\\"_\\\\\\\"Python3\\\\\\\"\\\"Context\"");
    }

    @Test
    public void test1304() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1304");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet3 = python3Target1.getBadWords();
        int int4 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str7 = python3Target1.getTargetStringLiteralFromString("_tset\"hi!\"", false);
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = python3Target1.getCodeGenerator();
        boolean boolean9 = python3Target1.supportsOverloadedMethods();
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = python3Target1.getCodeGenerator();
        org.antlr.v4.codegen.CodeGenerator codeGenerator11 = python3Target1.getCodeGenerator();
        org.antlr.v4.codegen.CodeGenerator codeGenerator12 = python3Target1.getCodeGenerator();
        boolean boolean13 = python3Target1.wantsBaseVisitor();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 64 + "'", int4 == 64);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "_tset\\\"hi!\\\"" + "'", str7, "_tset\\\"hi!\\\"");
        org.junit.Assert.assertNull(codeGenerator8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(codeGenerator10);
        org.junit.Assert.assertNull(codeGenerator11);
        org.junit.Assert.assertNull(codeGenerator12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test1305() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1305");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet3 = python3Target1.getBadWords();
        int int4 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str7 = python3Target1.getTargetStringLiteralFromString("_tset\"hi!\"", false);
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = python3Target1.getCodeGenerator();
        boolean boolean9 = python3Target1.supportsOverloadedMethods();
        boolean boolean10 = python3Target1.wantsBaseListener();
        java.lang.String str12 = python3Target1.getImplicitSetLabel("");
        boolean boolean13 = python3Target1.wantsBaseVisitor();
        boolean boolean14 = python3Target1.templatesExist();
        boolean boolean15 = python3Target1.templatesExist();
        boolean boolean16 = python3Target1.templatesExist();
        org.antlr.v4.tool.Grammar grammar17 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator18 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target19 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator18);
        boolean boolean20 = python3Target19.supportsOverloadedMethods();
        java.lang.String str22 = python3Target19.getTargetStringLiteralFromString("_Python3");
        org.antlr.v4.tool.Grammar grammar23 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator24 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target25 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator24);
        int int26 = python3Target25.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet27 = python3Target25.getBadWords();
        int int28 = python3Target25.getInlineTestSetWordSize();
        org.antlr.v4.codegen.CodeGenerator codeGenerator29 = python3Target25.getCodeGenerator();
        java.lang.String str31 = python3Target25.getImplicitSetLabel("_\"hi!\"Context");
        java.lang.String str33 = python3Target25.getImplicitSetLabel("_tset");
        java.lang.String str35 = python3Target25.getImplicitSetLabel("\"\\\"Python3\\\"Context\"");
        int int36 = python3Target25.getSerializedATNSegmentLimit();
        org.antlr.v4.tool.Grammar grammar37 = null;
        int[] intArray38 = new int[] {};
        java.lang.String[] strArray39 = python3Target25.getTokenTypesAsTargetLabels(grammar37, intArray38);
        java.lang.String[] strArray40 = python3Target19.getTokenTypesAsTargetLabels(grammar23, intArray38);
        java.lang.String[] strArray41 = python3Target1.getTokenTypesAsTargetLabels(grammar17, intArray38);
        org.antlr.v4.tool.Grammar grammar42 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str44 = python3Target1.getTokenTypeAsTargetLabel(grammar42, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 64 + "'", int4 == 64);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "_tset\\\"hi!\\\"" + "'", str7, "_tset\\\"hi!\\\"");
        org.junit.Assert.assertNull(codeGenerator8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "_tset" + "'", str12, "_tset");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "\"_Python3\"" + "'", str22, "\"_Python3\"");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 64 + "'", int26 == 64);
        org.junit.Assert.assertNotNull(strSet27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 64 + "'", int28 == 64);
        org.junit.Assert.assertNull(codeGenerator29);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "_tset_\"hi!\"Context" + "'", str31, "_tset_\"hi!\"Context");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "_tset_tset" + "'", str33, "_tset_tset");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "_tset\"\\\"Python3\\\"Context\"" + "'", str35, "_tset\"\\\"Python3\\\"Context\"");
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 29 + "'", int36 == 29);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[]");
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertNotNull(strArray41);
    }

    @Test
    public void test1306() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1306");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet3 = python3Target1.getBadWords();
        int int4 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str6 = python3Target1.getAltLabelContextStructName("\"hi!\"");
        boolean boolean7 = python3Target1.templatesExist();
        int int8 = python3Target1.getSerializedATNSegmentLimit();
        boolean boolean9 = python3Target1.wantsBaseVisitor();
        java.lang.String str11 = python3Target1.getAltLabelContextStructName("\"\\\"hi!\\\"\"");
        java.lang.String str13 = python3Target1.getImplicitRuleLabel("tset_\\\"hi!\\\"Contex");
        org.antlr.v4.tool.ast.GrammarAST grammarAST14 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean15 = python3Target1.grammarSymbolCausesIssueInGeneratedCode(grammarAST14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 64 + "'", int4 == 64);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\"hi!\"Context" + "'", str6, "\"hi!\"Context");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 29 + "'", int8 == 29);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "\"\\\"hi!\\\"\"Context" + "'", str11, "\"\\\"hi!\\\"\"Context");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "_tset_\\\"hi!\\\"Contex" + "'", str13, "_tset_\\\"hi!\\\"Contex");
    }

    @Test
    public void test1307() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1307");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet3 = python3Target1.getBadWords();
        java.lang.String str4 = python3Target1.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator5 = python3Target1.getCodeGenerator();
        org.stringtemplate.v4.STGroup sTGroup6 = python3Target1.getTemplates();
        boolean boolean7 = python3Target1.wantsBaseListener();
        boolean boolean8 = python3Target1.wantsBaseListener();
        java.util.Set<java.lang.String> strSet9 = python3Target1.getBadWords();
        java.util.Set<java.lang.String> strSet10 = python3Target1.getBadWords();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Python3" + "'", str4, "Python3");
        org.junit.Assert.assertNull(codeGenerator5);
        org.junit.Assert.assertNotNull(sTGroup6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(strSet9);
        org.junit.Assert.assertNotNull(strSet10);
    }

    @Test
    public void test1308() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1308");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str5 = python3Target1.getTargetStringLiteralFromString("", false);
        java.util.Set<java.lang.String> strSet6 = python3Target1.getBadWords();
        java.util.Set<java.lang.String> strSet7 = python3Target1.getBadWords();
        java.lang.String str9 = python3Target1.getImplicitRuleLabel("\"@\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = null;
        java.lang.String str13 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator10, "\\0ContextContext", false);
        java.lang.String str15 = python3Target1.getImplicitRuleLabel("\"\\\"_Python3\\\"\\\"ContextContex\"");
        org.antlr.v4.tool.Grammar grammar16 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator17 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target18 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator17);
        int int19 = python3Target18.getInlineTestSetWordSize();
        java.lang.String str21 = python3Target18.getImplicitSetLabel("\"hi!\"");
        java.lang.String str23 = python3Target18.encodeIntAsCharEscape(0);
        java.lang.String str24 = python3Target18.getVersion();
        java.lang.String str26 = python3Target18.getTargetStringLiteralFromString("hi!");
        java.lang.String str28 = python3Target18.getListLabel("");
        java.lang.String str29 = python3Target18.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator30 = null;
        java.lang.String str33 = python3Target18.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator30, "_tset_tset_\"hi!\"Context", false);
        org.stringtemplate.v4.STGroup sTGroup34 = python3Target18.getTemplates();
        org.antlr.v4.tool.Grammar grammar35 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator36 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target37 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator36);
        int int38 = python3Target37.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet39 = python3Target37.getBadWords();
        boolean boolean40 = python3Target37.wantsBaseListener();
        int int41 = python3Target37.getSerializedATNSegmentLimit();
        boolean boolean42 = python3Target37.wantsBaseVisitor();
        org.antlr.v4.tool.Grammar grammar43 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator44 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target45 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator44);
        int int46 = python3Target45.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet47 = python3Target45.getBadWords();
        int int48 = python3Target45.getInlineTestSetWordSize();
        org.antlr.v4.codegen.CodeGenerator codeGenerator49 = python3Target45.getCodeGenerator();
        java.lang.String str51 = python3Target45.getImplicitSetLabel("_\"hi!\"Context");
        java.lang.String str53 = python3Target45.getImplicitSetLabel("_tset");
        java.lang.String str55 = python3Target45.getImplicitSetLabel("\"\\\"Python3\\\"Context\"");
        int int56 = python3Target45.getSerializedATNSegmentLimit();
        org.antlr.v4.tool.Grammar grammar57 = null;
        int[] intArray58 = new int[] {};
        java.lang.String[] strArray59 = python3Target45.getTokenTypesAsTargetLabels(grammar57, intArray58);
        java.lang.String[] strArray60 = python3Target37.getTokenTypesAsTargetLabels(grammar43, intArray58);
        java.lang.String[] strArray61 = python3Target18.getTokenTypesAsTargetLabels(grammar35, intArray58);
        java.lang.String[] strArray62 = python3Target1.getTokenTypesAsTargetLabels(grammar16, intArray58);
        java.lang.String str64 = python3Target1.getImplicitSetLabel("\"__Python3Context\"");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNotNull(strSet6);
        org.junit.Assert.assertNotNull(strSet7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "_\"@\"" + "'", str9, "_\"@\"");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "0ContextContex" + "'", str13, "0ContextContex");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "_\"\\\"_Python3\\\"\\\"ContextContex\"" + "'", str15, "_\"\\\"_Python3\\\"\\\"ContextContex\"");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 64 + "'", int19 == 64);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "_tset\"hi!\"" + "'", str21, "_tset\"hi!\"");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "\\0" + "'", str23, "\\0");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "4.5.2.1" + "'", str24, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "\"hi!\"" + "'", str26, "\"hi!\"");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "4.5.2.1" + "'", str29, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "tset_tset_\\\"hi!\\\"Contex" + "'", str33, "tset_tset_\\\"hi!\\\"Contex");
        org.junit.Assert.assertNotNull(sTGroup34);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 64 + "'", int38 == 64);
        org.junit.Assert.assertNotNull(strSet39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 29 + "'", int41 == 29);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 64 + "'", int46 == 64);
        org.junit.Assert.assertNotNull(strSet47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 64 + "'", int48 == 64);
        org.junit.Assert.assertNull(codeGenerator49);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "_tset_\"hi!\"Context" + "'", str51, "_tset_\"hi!\"Context");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "_tset_tset" + "'", str53, "_tset_tset");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "_tset\"\\\"Python3\\\"Context\"" + "'", str55, "_tset\"\\\"Python3\\\"Context\"");
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 29 + "'", int56 == 29);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[]");
        org.junit.Assert.assertNotNull(strArray59);
        org.junit.Assert.assertNotNull(strArray60);
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertNotNull(strArray62);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "_tset\"__Python3Context\"" + "'", str64, "_tset\"__Python3Context\"");
    }

    @Test
    public void test1309() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1309");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str4 = python3Target1.getImplicitSetLabel("\"hi!\"");
        java.lang.String str6 = python3Target1.encodeIntAsCharEscape(0);
        java.lang.String str8 = python3Target1.encodeIntAsCharEscape(100);
        org.antlr.v4.codegen.CodeGenerator codeGenerator9 = null;
        java.lang.String str12 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator9, "\\0Context", true);
        boolean boolean13 = python3Target1.wantsBaseVisitor();
        org.stringtemplate.v4.STGroup sTGroup14 = python3Target1.getTemplates();
        int int15 = python3Target1.getSerializedATNSegmentLimit();
        org.antlr.v4.codegen.CodeGenerator codeGenerator16 = null;
        java.lang.String str19 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator16, "\\n", true);
        boolean boolean20 = python3Target1.wantsBaseVisitor();
        org.antlr.v4.codegen.CodeGenerator codeGenerator21 = python3Target1.getCodeGenerator();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "_tset\"hi!\"" + "'", str4, "_tset\"hi!\"");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\\0" + "'", str6, "\\0");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "d" + "'", str8, "d");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "\"0Contex\"" + "'", str12, "\"0Contex\"");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(sTGroup14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 29 + "'", int15 == 29);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "\"\"" + "'", str19, "\"\"");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(codeGenerator21);
    }

    @Test
    public void test1310() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1310");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet3 = python3Target1.getBadWords();
        int int4 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str7 = python3Target1.getTargetStringLiteralFromString("_tset\"hi!\"", false);
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = python3Target1.getCodeGenerator();
        boolean boolean9 = python3Target1.supportsOverloadedMethods();
        boolean boolean10 = python3Target1.wantsBaseListener();
        java.lang.String str12 = python3Target1.getImplicitSetLabel("");
        java.lang.String str14 = python3Target1.getImplicitRuleLabel("\\0");
        boolean boolean15 = python3Target1.templatesExist();
        java.lang.String str16 = python3Target1.getLanguage();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 64 + "'", int4 == 64);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "_tset\\\"hi!\\\"" + "'", str7, "_tset\\\"hi!\\\"");
        org.junit.Assert.assertNull(codeGenerator8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "_tset" + "'", str12, "_tset");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "_\\0" + "'", str14, "_\\0");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Python3" + "'", str16, "Python3");
    }

    @Test
    public void test1311() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1311");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet3 = python3Target1.getBadWords();
        int int4 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str6 = python3Target1.getAltLabelContextStructName("\"hi!\"");
        boolean boolean7 = python3Target1.templatesExist();
        int int8 = python3Target1.getSerializedATNSegmentLimit();
        boolean boolean9 = python3Target1.wantsBaseVisitor();
        org.stringtemplate.v4.STGroup sTGroup10 = python3Target1.getTemplates();
        java.lang.String str12 = python3Target1.encodeIntAsCharEscape(0);
        boolean boolean13 = python3Target1.wantsBaseVisitor();
        java.lang.String str15 = python3Target1.getImplicitSetLabel("_\"set\\\\\\\"hi\"");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 64 + "'", int4 == 64);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\"hi!\"Context" + "'", str6, "\"hi!\"Context");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 29 + "'", int8 == 29);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(sTGroup10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "\\0" + "'", str12, "\\0");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "_tset_\"set\\\\\\\"hi\"" + "'", str15, "_tset_\"set\\\\\\\"hi\"");
    }

    @Test
    public void test1312() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1312");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str4 = python3Target1.getImplicitSetLabel("\"hi!\"");
        java.lang.String str6 = python3Target1.encodeIntAsCharEscape(0);
        java.lang.String str7 = python3Target1.getVersion();
        int int8 = python3Target1.getInlineTestSetWordSize();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str10 = python3Target1.getImplicitTokenLabel("\"\\\"tset\\\\\\\"_Python3\\\"\"Context");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "_tset\"hi!\"" + "'", str4, "_tset\"hi!\"");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\\0" + "'", str6, "\\0");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "4.5.2.1" + "'", str7, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 64 + "'", int8 == 64);
    }

    @Test
    public void test1313() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1313");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet3 = python3Target1.getBadWords();
        boolean boolean4 = python3Target1.wantsBaseListener();
        java.util.Set<java.lang.String> strSet5 = python3Target1.getBadWords();
        boolean boolean6 = python3Target1.templatesExist();
        java.lang.String str8 = python3Target1.getAltLabelContextStructName("\"\\\"_\\\\\\\"\\\\\\\"_\\\\\\\"hi!\\\\\\\"Contex\\\\\\\"Contex\\\"\"");
        org.antlr.v4.tool.Rule rule9 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str10 = python3Target1.getRuleFunctionContextStructName(rule9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\"\\\"_\\\\\\\"\\\\\\\"_\\\\\\\"hi!\\\\\\\"Contex\\\\\\\"Contex\\\"\"Context" + "'", str8, "\"\\\"_\\\\\\\"\\\\\\\"_\\\\\\\"hi!\\\\\\\"Contex\\\\\\\"Contex\\\"\"Context");
    }

    @Test
    public void test1314() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1314");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet3 = python3Target1.getBadWords();
        int int4 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str7 = python3Target1.getTargetStringLiteralFromString("_tset\"hi!\"", false);
        boolean boolean8 = python3Target1.supportsOverloadedMethods();
        java.lang.String str11 = python3Target1.getTargetStringLiteralFromString("\"\\\"hi!\\\"\"Context", false);
        org.antlr.v4.tool.Grammar grammar12 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator13 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target14 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator13);
        int int15 = python3Target14.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet16 = python3Target14.getBadWords();
        int int17 = python3Target14.getInlineTestSetWordSize();
        java.lang.String str19 = python3Target14.getAltLabelContextStructName("\"hi!\"");
        boolean boolean20 = python3Target14.templatesExist();
        int int21 = python3Target14.getSerializedATNSegmentLimit();
        boolean boolean22 = python3Target14.wantsBaseVisitor();
        java.lang.String str24 = python3Target14.getAltLabelContextStructName("\"\\\"hi!\\\"\"");
        java.lang.String str26 = python3Target14.getImplicitRuleLabel("tset_\\\"hi!\\\"Contex");
        org.antlr.v4.tool.Grammar grammar27 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator28 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target29 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator28);
        int int30 = python3Target29.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet31 = python3Target29.getBadWords();
        int int32 = python3Target29.getInlineTestSetWordSize();
        org.antlr.v4.codegen.CodeGenerator codeGenerator33 = python3Target29.getCodeGenerator();
        java.lang.String str35 = python3Target29.getImplicitSetLabel("_\"hi!\"Context");
        java.lang.String str37 = python3Target29.getImplicitSetLabel("_tset");
        java.lang.String str39 = python3Target29.getImplicitSetLabel("\"\\\"Python3\\\"Context\"");
        int int40 = python3Target29.getSerializedATNSegmentLimit();
        org.antlr.v4.tool.Grammar grammar41 = null;
        int[] intArray42 = new int[] {};
        java.lang.String[] strArray43 = python3Target29.getTokenTypesAsTargetLabels(grammar41, intArray42);
        java.lang.String[] strArray44 = python3Target14.getTokenTypesAsTargetLabels(grammar27, intArray42);
        java.lang.String[] strArray45 = python3Target1.getTokenTypesAsTargetLabels(grammar12, intArray42);
        boolean boolean46 = python3Target1.wantsBaseListener();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 64 + "'", int4 == 64);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "_tset\\\"hi!\\\"" + "'", str7, "_tset\\\"hi!\\\"");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "\\\"\\\\\\\"hi!\\\\\\\"\\\"Context" + "'", str11, "\\\"\\\\\\\"hi!\\\\\\\"\\\"Context");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 64 + "'", int15 == 64);
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 64 + "'", int17 == 64);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "\"hi!\"Context" + "'", str19, "\"hi!\"Context");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 29 + "'", int21 == 29);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "\"\\\"hi!\\\"\"Context" + "'", str24, "\"\\\"hi!\\\"\"Context");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "_tset_\\\"hi!\\\"Contex" + "'", str26, "_tset_\\\"hi!\\\"Contex");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 64 + "'", int30 == 64);
        org.junit.Assert.assertNotNull(strSet31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 64 + "'", int32 == 64);
        org.junit.Assert.assertNull(codeGenerator33);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "_tset_\"hi!\"Context" + "'", str35, "_tset_\"hi!\"Context");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "_tset_tset" + "'", str37, "_tset_tset");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "_tset\"\\\"Python3\\\"Context\"" + "'", str39, "_tset\"\\\"Python3\\\"Context\"");
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 29 + "'", int40 == 29);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[]");
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
    }

    @Test
    public void test1315() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1315");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet3 = python3Target1.getBadWords();
        int int4 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str6 = python3Target1.getAltLabelContextStructName("\"hi!\"");
        int int7 = python3Target1.getSerializedATNSegmentLimit();
        java.lang.String str8 = python3Target1.getVersion();
        int int9 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str10 = python3Target1.getLanguage();
        java.lang.String str12 = python3Target1.getAltLabelContextStructName("_tset__tset");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 64 + "'", int4 == 64);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\"hi!\"Context" + "'", str6, "\"hi!\"Context");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 29 + "'", int7 == 29);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "4.5.2.1" + "'", str8, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 64 + "'", int9 == 64);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Python3" + "'", str10, "Python3");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "_tset__tsetContext" + "'", str12, "_tset__tsetContext");
    }

    @Test
    public void test1316() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1316");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet3 = python3Target1.getBadWords();
        int int4 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str7 = python3Target1.getTargetStringLiteralFromString("_tset\"hi!\"", false);
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = python3Target1.getCodeGenerator();
        boolean boolean9 = python3Target1.supportsOverloadedMethods();
        java.lang.String str11 = python3Target1.getAltLabelContextStructName("\"Python3\"");
        boolean boolean12 = python3Target1.wantsBaseListener();
        boolean boolean13 = python3Target1.templatesExist();
        org.stringtemplate.v4.STGroup sTGroup14 = python3Target1.getTemplates();
        org.antlr.v4.tool.Grammar grammar15 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator16 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target17 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator16);
        int int18 = python3Target17.getInlineTestSetWordSize();
        java.lang.String str20 = python3Target17.getImplicitSetLabel("\"hi!\"");
        java.lang.String str22 = python3Target17.encodeIntAsCharEscape(0);
        java.lang.String str23 = python3Target17.getVersion();
        java.lang.String str26 = python3Target17.getTargetStringLiteralFromString("Python3", true);
        java.lang.String str28 = python3Target17.getImplicitRuleLabel("\"Python3\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator29 = python3Target17.getCodeGenerator();
        org.antlr.v4.tool.Grammar grammar30 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator31 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target32 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator31);
        org.antlr.v4.codegen.CodeGenerator codeGenerator33 = null;
        java.lang.String str36 = python3Target32.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator33, "4.5.2.1", true);
        boolean boolean37 = python3Target32.templatesExist();
        org.antlr.v4.tool.Grammar grammar38 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator39 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target40 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator39);
        int int41 = python3Target40.getInlineTestSetWordSize();
        java.lang.String str43 = python3Target40.getImplicitSetLabel("\"hi!\"");
        java.lang.String str45 = python3Target40.encodeIntAsCharEscape(0);
        java.lang.String str46 = python3Target40.getVersion();
        java.lang.String str48 = python3Target40.getTargetStringLiteralFromString("hi!");
        org.antlr.v4.tool.Grammar grammar49 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator50 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target51 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator50);
        boolean boolean52 = python3Target51.supportsOverloadedMethods();
        java.lang.String str54 = python3Target51.getTargetStringLiteralFromString("_Python3");
        org.antlr.v4.tool.Grammar grammar55 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator56 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target57 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator56);
        int int58 = python3Target57.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet59 = python3Target57.getBadWords();
        int int60 = python3Target57.getInlineTestSetWordSize();
        org.antlr.v4.codegen.CodeGenerator codeGenerator61 = python3Target57.getCodeGenerator();
        java.lang.String str63 = python3Target57.getImplicitSetLabel("_\"hi!\"Context");
        java.lang.String str65 = python3Target57.getImplicitSetLabel("_tset");
        java.lang.String str67 = python3Target57.getImplicitSetLabel("\"\\\"Python3\\\"Context\"");
        int int68 = python3Target57.getSerializedATNSegmentLimit();
        org.antlr.v4.tool.Grammar grammar69 = null;
        int[] intArray70 = new int[] {};
        java.lang.String[] strArray71 = python3Target57.getTokenTypesAsTargetLabels(grammar69, intArray70);
        java.lang.String[] strArray72 = python3Target51.getTokenTypesAsTargetLabels(grammar55, intArray70);
        java.lang.String[] strArray73 = python3Target40.getTokenTypesAsTargetLabels(grammar49, intArray70);
        java.lang.String[] strArray74 = python3Target32.getTokenTypesAsTargetLabels(grammar38, intArray70);
        java.lang.String[] strArray75 = python3Target17.getTokenTypesAsTargetLabels(grammar30, intArray70);
        java.lang.String[] strArray76 = python3Target1.getTokenTypesAsTargetLabels(grammar15, intArray70);
        java.lang.String str78 = python3Target1.getListLabel("tset_\\\\\\\"hi!\\\\\\\"Conte");
        java.lang.String str80 = python3Target1.getTargetStringLiteralFromString("@");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 64 + "'", int4 == 64);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "_tset\\\"hi!\\\"" + "'", str7, "_tset\\\"hi!\\\"");
        org.junit.Assert.assertNull(codeGenerator8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "\"Python3\"Context" + "'", str11, "\"Python3\"Context");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(sTGroup14);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 64 + "'", int18 == 64);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "_tset\"hi!\"" + "'", str20, "_tset\"hi!\"");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "\\0" + "'", str22, "\\0");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "4.5.2.1" + "'", str23, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "\"Python3\"" + "'", str26, "\"Python3\"");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "_\"Python3\"" + "'", str28, "_\"Python3\"");
        org.junit.Assert.assertNull(codeGenerator29);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "\".5.2.\"" + "'", str36, "\".5.2.\"");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 64 + "'", int41 == 64);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "_tset\"hi!\"" + "'", str43, "_tset\"hi!\"");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "\\0" + "'", str45, "\\0");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "4.5.2.1" + "'", str46, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "\"hi!\"" + "'", str48, "\"hi!\"");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "\"_Python3\"" + "'", str54, "\"_Python3\"");
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 64 + "'", int58 == 64);
        org.junit.Assert.assertNotNull(strSet59);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 64 + "'", int60 == 64);
        org.junit.Assert.assertNull(codeGenerator61);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "_tset_\"hi!\"Context" + "'", str63, "_tset_\"hi!\"Context");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "_tset_tset" + "'", str65, "_tset_tset");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "_tset\"\\\"Python3\\\"Context\"" + "'", str67, "_tset\"\\\"Python3\\\"Context\"");
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 29 + "'", int68 == 29);
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[]");
        org.junit.Assert.assertNotNull(strArray71);
        org.junit.Assert.assertNotNull(strArray72);
        org.junit.Assert.assertNotNull(strArray73);
        org.junit.Assert.assertNotNull(strArray74);
        org.junit.Assert.assertNotNull(strArray75);
        org.junit.Assert.assertNotNull(strArray76);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "tset_\\\\\\\"hi!\\\\\\\"Conte" + "'", str78, "tset_\\\\\\\"hi!\\\\\\\"Conte");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "\"@\"" + "'", str80, "\"@\"");
    }

    @Test
    public void test1317() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1317");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet3 = python3Target1.getBadWords();
        int int4 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str7 = python3Target1.getTargetStringLiteralFromString("_tset\"hi!\"", false);
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = python3Target1.getCodeGenerator();
        boolean boolean9 = python3Target1.supportsOverloadedMethods();
        boolean boolean10 = python3Target1.supportsOverloadedMethods();
        java.lang.String str11 = python3Target1.getVersion();
        int int12 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str14 = python3Target1.encodeIntAsCharEscape((int) (short) 0);
        java.lang.String str16 = python3Target1.encodeIntAsCharEscape((int) (byte) 1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 64 + "'", int4 == 64);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "_tset\\\"hi!\\\"" + "'", str7, "_tset\\\"hi!\\\"");
        org.junit.Assert.assertNull(codeGenerator8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "4.5.2.1" + "'", str11, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 64 + "'", int12 == 64);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "\\0" + "'", str14, "\\0");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "\\1" + "'", str16, "\\1");
    }

    @Test
    public void test1318() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1318");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet3 = python3Target1.getBadWords();
        int int4 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str7 = python3Target1.getTargetStringLiteralFromString("_tset\"hi!\"", false);
        boolean boolean8 = python3Target1.supportsOverloadedMethods();
        org.antlr.v4.codegen.CodeGenerator codeGenerator9 = null;
        java.lang.String str12 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator9, "\".5.2.\"", false);
        java.lang.String str13 = python3Target1.getVersion();
        org.antlr.v4.tool.Grammar grammar14 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str16 = python3Target1.getTokenTypeAsTargetLabel(grammar14, 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 64 + "'", int4 == 64);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "_tset\\\"hi!\\\"" + "'", str7, "_tset\\\"hi!\\\"");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + ".5.2." + "'", str12, ".5.2.");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "4.5.2.1" + "'", str13, "4.5.2.1");
    }

    @Test
    public void test1319() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1319");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet3 = python3Target1.getBadWords();
        int int4 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str7 = python3Target1.getTargetStringLiteralFromString("_tset\"hi!\"", false);
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = python3Target1.getCodeGenerator();
        boolean boolean9 = python3Target1.supportsOverloadedMethods();
        java.lang.String str11 = python3Target1.getAltLabelContextStructName("\"Python3\"");
        boolean boolean12 = python3Target1.wantsBaseListener();
        java.lang.String str13 = python3Target1.getVersion();
        boolean boolean14 = python3Target1.wantsBaseVisitor();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 64 + "'", int4 == 64);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "_tset\\\"hi!\\\"" + "'", str7, "_tset\\\"hi!\\\"");
        org.junit.Assert.assertNull(codeGenerator8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "\"Python3\"Context" + "'", str11, "\"Python3\"Context");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "4.5.2.1" + "'", str13, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test1320() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1320");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.supportsOverloadedMethods();
        java.util.Set<java.lang.String> strSet3 = python3Target1.getBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator4 = python3Target1.getCodeGenerator();
        java.lang.String str6 = python3Target1.getAltLabelContextStructName("\"\\\"_\\\"hi!\\\"Contex\"");
        java.lang.String str8 = python3Target1.getListLabel("_tset\"\\\"_\\\"hi!\\\"Contex\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator9 = null;
        java.lang.String str12 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator9, "\"_\\\"Python3\\\"\"", true);
        java.lang.String str14 = python3Target1.getImplicitSetLabel("\"_\\\"\\\\\\\"_Python3\\\\\\\"\\\"\"");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNull(codeGenerator4);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\"\\\"_\\\"hi!\\\"Contex\"Context" + "'", str6, "\"\\\"_\\\"hi!\\\"Contex\"Context");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "_tset\"\\\"_\\\"hi!\\\"Contex\"" + "'", str8, "_tset\"\\\"_\\\"hi!\\\"Contex\"");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "\"_\\\"Python3\\\"\"" + "'", str12, "\"_\\\"Python3\\\"\"");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "_tset\"_\\\"\\\\\\\"_Python3\\\\\\\"\\\"\"" + "'", str14, "_tset\"_\\\"\\\\\\\"_Python3\\\\\\\"\\\"\"");
    }

    @Test
    public void test1321() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1321");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str4 = python3Target1.getImplicitSetLabel("\"hi!\"");
        java.lang.String str6 = python3Target1.encodeIntAsCharEscape(0);
        java.lang.String str7 = python3Target1.getVersion();
        java.lang.String str9 = python3Target1.getImplicitRuleLabel("Python3");
        java.lang.String str12 = python3Target1.getTargetStringLiteralFromString("\"hi!\"", true);
        int int13 = python3Target1.getSerializedATNSegmentLimit();
        java.lang.String str14 = python3Target1.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup15 = python3Target1.getTemplates();
        java.lang.String str18 = python3Target1.getTargetStringLiteralFromString("\"_tset\\\"\\\\\\\"_\\\\\\\\\\\\\\\"hi!\\\\\\\\\\\\\\\"Contex\\\\\\\"\\\"\"", false);
        java.lang.String str20 = python3Target1.getAltLabelContextStructName("_\\35");
        int int21 = python3Target1.getSerializedATNSegmentLimit();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "_tset\"hi!\"" + "'", str4, "_tset\"hi!\"");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\\0" + "'", str6, "\\0");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "4.5.2.1" + "'", str7, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "_Python3" + "'", str9, "_Python3");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "\"\\\"hi!\\\"\"" + "'", str12, "\"\\\"hi!\\\"\"");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 29 + "'", int13 == 29);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Python3" + "'", str14, "Python3");
        org.junit.Assert.assertNotNull(sTGroup15);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "\\\"_tset\\\\\\\"\\\\\\\\\\\\\\\"_\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"hi!\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"Contex\\\\\\\\\\\\\\\"\\\\\\\"\\\"" + "'", str18, "\\\"_tset\\\\\\\"\\\\\\\\\\\\\\\"_\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"hi!\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"Contex\\\\\\\\\\\\\\\"\\\\\\\"\\\"");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "_\\35Context" + "'", str20, "_\\35Context");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 29 + "'", int21 == 29);
    }

    @Test
    public void test1322() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1322");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet3 = python3Target1.getBadWords();
        int int4 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str6 = python3Target1.getAltLabelContextStructName("\"hi!\"");
        boolean boolean7 = python3Target1.templatesExist();
        int int8 = python3Target1.getSerializedATNSegmentLimit();
        org.antlr.v4.codegen.CodeGenerator codeGenerator9 = null;
        java.lang.String str12 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator9, "_tset\"_Python3\"", true);
        org.antlr.v4.tool.Grammar grammar13 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator14 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target15 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator14);
        int int16 = python3Target15.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet17 = python3Target15.getBadWords();
        int int18 = python3Target15.getInlineTestSetWordSize();
        java.lang.String str21 = python3Target15.getTargetStringLiteralFromString("_tset\"hi!\"", false);
        org.antlr.v4.codegen.CodeGenerator codeGenerator22 = python3Target15.getCodeGenerator();
        boolean boolean23 = python3Target15.supportsOverloadedMethods();
        java.lang.String str25 = python3Target15.getAltLabelContextStructName("\"Python3\"");
        boolean boolean26 = python3Target15.wantsBaseListener();
        int int27 = python3Target15.getInlineTestSetWordSize();
        boolean boolean28 = python3Target15.wantsBaseListener();
        org.antlr.v4.tool.Grammar grammar29 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator30 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target31 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator30);
        int int32 = python3Target31.getInlineTestSetWordSize();
        java.lang.String str34 = python3Target31.getImplicitSetLabel("\"hi!\"");
        java.lang.String str36 = python3Target31.encodeIntAsCharEscape(0);
        java.lang.String str37 = python3Target31.getVersion();
        java.lang.String str39 = python3Target31.getTargetStringLiteralFromString("hi!");
        org.antlr.v4.tool.Grammar grammar40 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator41 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target42 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator41);
        boolean boolean43 = python3Target42.supportsOverloadedMethods();
        java.lang.String str45 = python3Target42.getTargetStringLiteralFromString("_Python3");
        org.antlr.v4.tool.Grammar grammar46 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator47 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target48 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator47);
        int int49 = python3Target48.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet50 = python3Target48.getBadWords();
        int int51 = python3Target48.getInlineTestSetWordSize();
        org.antlr.v4.codegen.CodeGenerator codeGenerator52 = python3Target48.getCodeGenerator();
        java.lang.String str54 = python3Target48.getImplicitSetLabel("_\"hi!\"Context");
        java.lang.String str56 = python3Target48.getImplicitSetLabel("_tset");
        java.lang.String str58 = python3Target48.getImplicitSetLabel("\"\\\"Python3\\\"Context\"");
        int int59 = python3Target48.getSerializedATNSegmentLimit();
        org.antlr.v4.tool.Grammar grammar60 = null;
        int[] intArray61 = new int[] {};
        java.lang.String[] strArray62 = python3Target48.getTokenTypesAsTargetLabels(grammar60, intArray61);
        java.lang.String[] strArray63 = python3Target42.getTokenTypesAsTargetLabels(grammar46, intArray61);
        java.lang.String[] strArray64 = python3Target31.getTokenTypesAsTargetLabels(grammar40, intArray61);
        java.lang.String[] strArray65 = python3Target15.getTokenTypesAsTargetLabels(grammar29, intArray61);
        java.lang.String[] strArray66 = python3Target1.getTokenTypesAsTargetLabels(grammar13, intArray61);
        org.stringtemplate.v4.STGroup sTGroup67 = python3Target1.getTemplates();
        java.lang.String str68 = python3Target1.getLanguage();
        org.antlr.v4.tool.ast.GrammarAST grammarAST69 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str70 = python3Target1.getLoopCounter(grammarAST69);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 64 + "'", int4 == 64);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\"hi!\"Context" + "'", str6, "\"hi!\"Context");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 29 + "'", int8 == 29);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "\"tset\\\"_Python3\"" + "'", str12, "\"tset\\\"_Python3\"");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 64 + "'", int16 == 64);
        org.junit.Assert.assertNotNull(strSet17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 64 + "'", int18 == 64);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "_tset\\\"hi!\\\"" + "'", str21, "_tset\\\"hi!\\\"");
        org.junit.Assert.assertNull(codeGenerator22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "\"Python3\"Context" + "'", str25, "\"Python3\"Context");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 64 + "'", int27 == 64);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 64 + "'", int32 == 64);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "_tset\"hi!\"" + "'", str34, "_tset\"hi!\"");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "\\0" + "'", str36, "\\0");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "4.5.2.1" + "'", str37, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "\"hi!\"" + "'", str39, "\"hi!\"");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "\"_Python3\"" + "'", str45, "\"_Python3\"");
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 64 + "'", int49 == 64);
        org.junit.Assert.assertNotNull(strSet50);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 64 + "'", int51 == 64);
        org.junit.Assert.assertNull(codeGenerator52);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "_tset_\"hi!\"Context" + "'", str54, "_tset_\"hi!\"Context");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "_tset_tset" + "'", str56, "_tset_tset");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "_tset\"\\\"Python3\\\"Context\"" + "'", str58, "_tset\"\\\"Python3\\\"Context\"");
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 29 + "'", int59 == 29);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[]");
        org.junit.Assert.assertNotNull(strArray62);
        org.junit.Assert.assertNotNull(strArray63);
        org.junit.Assert.assertNotNull(strArray64);
        org.junit.Assert.assertNotNull(strArray65);
        org.junit.Assert.assertNotNull(strArray66);
        org.junit.Assert.assertNotNull(sTGroup67);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "Python3" + "'", str68, "Python3");
    }

    @Test
    public void test1323() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1323");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet3 = python3Target1.getBadWords();
        java.lang.String str4 = python3Target1.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator5 = python3Target1.getCodeGenerator();
        org.stringtemplate.v4.STGroup sTGroup6 = python3Target1.getTemplates();
        boolean boolean7 = python3Target1.wantsBaseListener();
        boolean boolean8 = python3Target1.templatesExist();
        org.antlr.v4.codegen.CodeGenerator codeGenerator9 = python3Target1.getCodeGenerator();
        boolean boolean10 = python3Target1.supportsOverloadedMethods();
        java.lang.String str12 = python3Target1.getListLabel("\".5.2.\"");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str14 = python3Target1.getAltLabelContextStructName("");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 0");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Python3" + "'", str4, "Python3");
        org.junit.Assert.assertNull(codeGenerator5);
        org.junit.Assert.assertNotNull(sTGroup6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNull(codeGenerator9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "\".5.2.\"" + "'", str12, "\".5.2.\"");
    }

    @Test
    public void test1324() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1324");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet3 = python3Target1.getBadWords();
        int int4 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str7 = python3Target1.getTargetStringLiteralFromString("_tset\"hi!\"", false);
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = python3Target1.getCodeGenerator();
        boolean boolean9 = python3Target1.supportsOverloadedMethods();
        boolean boolean10 = python3Target1.supportsOverloadedMethods();
        boolean boolean11 = python3Target1.wantsBaseVisitor();
        java.lang.String str13 = python3Target1.getImplicitSetLabel("\"\\\"_\\\\\\\"hi!\\\\\\\"Contex\\\"\"");
        java.lang.String str15 = python3Target1.getTargetStringLiteralFromString("Et\\\"hContext");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 64 + "'", int4 == 64);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "_tset\\\"hi!\\\"" + "'", str7, "_tset\\\"hi!\\\"");
        org.junit.Assert.assertNull(codeGenerator8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "_tset\"\\\"_\\\\\\\"hi!\\\\\\\"Contex\\\"\"" + "'", str13, "_tset\"\\\"_\\\\\\\"hi!\\\\\\\"Contex\\\"\"");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "\"Et\\\\\\\"hContext\"" + "'", str15, "\"Et\\\\\\\"hContext\"");
    }

    @Test
    public void test1325() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1325");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet3 = python3Target1.getBadWords();
        int int4 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str7 = python3Target1.getTargetStringLiteralFromString("_tset\"hi!\"", false);
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = python3Target1.getCodeGenerator();
        boolean boolean9 = python3Target1.supportsOverloadedMethods();
        boolean boolean10 = python3Target1.wantsBaseListener();
        java.lang.String str12 = python3Target1.encodeIntAsCharEscape((int) (byte) 0);
        org.antlr.v4.tool.Grammar grammar13 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator14 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target15 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator14);
        org.antlr.v4.codegen.CodeGenerator codeGenerator16 = null;
        java.lang.String str19 = python3Target15.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator16, "4.5.2.1", true);
        java.lang.String str20 = python3Target15.getLanguage();
        org.antlr.v4.tool.Grammar grammar21 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator22 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target23 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator22);
        org.antlr.v4.codegen.CodeGenerator codeGenerator24 = null;
        java.lang.String str27 = python3Target23.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator24, "4.5.2.1", true);
        boolean boolean28 = python3Target23.templatesExist();
        org.antlr.v4.tool.Grammar grammar29 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator30 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target31 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator30);
        int int32 = python3Target31.getInlineTestSetWordSize();
        java.lang.String str34 = python3Target31.getImplicitSetLabel("\"hi!\"");
        java.lang.String str36 = python3Target31.encodeIntAsCharEscape(0);
        java.lang.String str37 = python3Target31.getVersion();
        java.lang.String str39 = python3Target31.getTargetStringLiteralFromString("hi!");
        org.antlr.v4.tool.Grammar grammar40 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator41 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target42 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator41);
        boolean boolean43 = python3Target42.supportsOverloadedMethods();
        java.lang.String str45 = python3Target42.getTargetStringLiteralFromString("_Python3");
        org.antlr.v4.tool.Grammar grammar46 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator47 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target48 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator47);
        int int49 = python3Target48.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet50 = python3Target48.getBadWords();
        int int51 = python3Target48.getInlineTestSetWordSize();
        org.antlr.v4.codegen.CodeGenerator codeGenerator52 = python3Target48.getCodeGenerator();
        java.lang.String str54 = python3Target48.getImplicitSetLabel("_\"hi!\"Context");
        java.lang.String str56 = python3Target48.getImplicitSetLabel("_tset");
        java.lang.String str58 = python3Target48.getImplicitSetLabel("\"\\\"Python3\\\"Context\"");
        int int59 = python3Target48.getSerializedATNSegmentLimit();
        org.antlr.v4.tool.Grammar grammar60 = null;
        int[] intArray61 = new int[] {};
        java.lang.String[] strArray62 = python3Target48.getTokenTypesAsTargetLabels(grammar60, intArray61);
        java.lang.String[] strArray63 = python3Target42.getTokenTypesAsTargetLabels(grammar46, intArray61);
        java.lang.String[] strArray64 = python3Target31.getTokenTypesAsTargetLabels(grammar40, intArray61);
        java.lang.String[] strArray65 = python3Target23.getTokenTypesAsTargetLabels(grammar29, intArray61);
        java.lang.String[] strArray66 = python3Target15.getTokenTypesAsTargetLabels(grammar21, intArray61);
        java.lang.String[] strArray67 = python3Target1.getTokenTypesAsTargetLabels(grammar13, intArray61);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 64 + "'", int4 == 64);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "_tset\\\"hi!\\\"" + "'", str7, "_tset\\\"hi!\\\"");
        org.junit.Assert.assertNull(codeGenerator8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "\\0" + "'", str12, "\\0");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "\".5.2.\"" + "'", str19, "\".5.2.\"");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "Python3" + "'", str20, "Python3");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "\".5.2.\"" + "'", str27, "\".5.2.\"");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 64 + "'", int32 == 64);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "_tset\"hi!\"" + "'", str34, "_tset\"hi!\"");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "\\0" + "'", str36, "\\0");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "4.5.2.1" + "'", str37, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "\"hi!\"" + "'", str39, "\"hi!\"");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "\"_Python3\"" + "'", str45, "\"_Python3\"");
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 64 + "'", int49 == 64);
        org.junit.Assert.assertNotNull(strSet50);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 64 + "'", int51 == 64);
        org.junit.Assert.assertNull(codeGenerator52);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "_tset_\"hi!\"Context" + "'", str54, "_tset_\"hi!\"Context");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "_tset_tset" + "'", str56, "_tset_tset");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "_tset\"\\\"Python3\\\"Context\"" + "'", str58, "_tset\"\\\"Python3\\\"Context\"");
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 29 + "'", int59 == 29);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[]");
        org.junit.Assert.assertNotNull(strArray62);
        org.junit.Assert.assertNotNull(strArray63);
        org.junit.Assert.assertNotNull(strArray64);
        org.junit.Assert.assertNotNull(strArray65);
        org.junit.Assert.assertNotNull(strArray66);
        org.junit.Assert.assertNotNull(strArray67);
    }

    @Test
    public void test1326() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1326");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet3 = python3Target1.getBadWords();
        int int4 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str7 = python3Target1.getTargetStringLiteralFromString("_tset\"hi!\"", false);
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = python3Target1.getCodeGenerator();
        boolean boolean9 = python3Target1.templatesExist();
        java.util.Set<java.lang.String> strSet10 = python3Target1.getBadWords();
        java.lang.String str12 = python3Target1.getImplicitSetLabel("\"\\\\35\"");
        boolean boolean13 = python3Target1.wantsBaseVisitor();
        java.lang.String str15 = python3Target1.getTargetStringLiteralFromString("\"__\\\"\\\\\\\"hi!\\\\\\\"\\\"\"Context");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 64 + "'", int4 == 64);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "_tset\\\"hi!\\\"" + "'", str7, "_tset\\\"hi!\\\"");
        org.junit.Assert.assertNull(codeGenerator8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(strSet10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "_tset\"\\\\35\"" + "'", str12, "_tset\"\\\\35\"");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "\"\\\"__\\\\\\\"\\\\\\\\\\\\\\\"hi!\\\\\\\\\\\\\\\"\\\\\\\"\\\"Context\"" + "'", str15, "\"\\\"__\\\\\\\"\\\\\\\\\\\\\\\"hi!\\\\\\\\\\\\\\\"\\\\\\\"\\\"Context\"");
    }

    @Test
    public void test1327() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1327");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet3 = python3Target1.getBadWords();
        int int4 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str7 = python3Target1.getTargetStringLiteralFromString("_tset\"hi!\"", false);
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = python3Target1.getCodeGenerator();
        boolean boolean9 = python3Target1.templatesExist();
        java.lang.String str11 = python3Target1.getImplicitSetLabel("\"\\\"Python3\\\"Context\"");
        java.lang.String str13 = python3Target1.getTargetStringLiteralFromString("\"\\\"_\\\"\"");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 64 + "'", int4 == 64);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "_tset\\\"hi!\\\"" + "'", str7, "_tset\\\"hi!\\\"");
        org.junit.Assert.assertNull(codeGenerator8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "_tset\"\\\"Python3\\\"Context\"" + "'", str11, "_tset\"\\\"Python3\\\"Context\"");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "\"\\\"\\\\\\\"_\\\\\\\"\\\"\"" + "'", str13, "\"\\\"\\\\\\\"_\\\\\\\"\\\"\"");
    }

    @Test
    public void test1328() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1328");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet3 = python3Target1.getBadWords();
        int int4 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str7 = python3Target1.getTargetStringLiteralFromString("_tset\"hi!\"", false);
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = python3Target1.getCodeGenerator();
        boolean boolean9 = python3Target1.supportsOverloadedMethods();
        java.lang.String str11 = python3Target1.getAltLabelContextStructName("\"Python3\"");
        boolean boolean12 = python3Target1.wantsBaseListener();
        boolean boolean13 = python3Target1.templatesExist();
        java.lang.String str15 = python3Target1.getAltLabelContextStructName("DContext");
        org.antlr.v4.codegen.CodeGenerator codeGenerator16 = null;
        java.lang.String str19 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator16, "_tset4.5.2.1Context", false);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 64 + "'", int4 == 64);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "_tset\\\"hi!\\\"" + "'", str7, "_tset\\\"hi!\\\"");
        org.junit.Assert.assertNull(codeGenerator8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "\"Python3\"Context" + "'", str11, "\"Python3\"Context");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "DContextContext" + "'", str15, "DContextContext");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "tset4.5.2.1Contex" + "'", str19, "tset4.5.2.1Contex");
    }

    @Test
    public void test1329() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1329");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str5 = python3Target1.getTargetStringLiteralFromString("", false);
        java.util.Set<java.lang.String> strSet6 = python3Target1.getBadWords();
        java.util.Set<java.lang.String> strSet7 = python3Target1.getBadWords();
        java.lang.String str9 = python3Target1.getTargetStringLiteralFromString("\"\\\"\\\\\\\"Python3\\\\\\\"Context\\\"\"");
        boolean boolean10 = python3Target1.wantsBaseVisitor();
        java.lang.String str11 = python3Target1.getVersion();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNotNull(strSet6);
        org.junit.Assert.assertNotNull(strSet7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\"\\\"\\\\\\\"\\\\\\\\\\\\\\\"Python3\\\\\\\\\\\\\\\"Context\\\\\\\"\\\"\"" + "'", str9, "\"\\\"\\\\\\\"\\\\\\\\\\\\\\\"Python3\\\\\\\\\\\\\\\"Context\\\\\\\"\\\"\"");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "4.5.2.1" + "'", str11, "4.5.2.1");
    }

    @Test
    public void test1330() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1330");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str4 = python3Target1.getImplicitSetLabel("\"hi!\"");
        java.lang.String str6 = python3Target1.encodeIntAsCharEscape(0);
        java.lang.String str7 = python3Target1.getVersion();
        java.lang.String str9 = python3Target1.getImplicitRuleLabel("\"hi!\"Context");
        java.lang.String str11 = python3Target1.getTargetStringLiteralFromString("_Python3");
        int int12 = python3Target1.getInlineTestSetWordSize();
        boolean boolean13 = python3Target1.wantsBaseListener();
        org.antlr.v4.tool.ast.GrammarAST grammarAST14 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str15 = python3Target1.getLoopCounter(grammarAST14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "_tset\"hi!\"" + "'", str4, "_tset\"hi!\"");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\\0" + "'", str6, "\\0");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "4.5.2.1" + "'", str7, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "_\"hi!\"Context" + "'", str9, "_\"hi!\"Context");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "\"_Python3\"" + "'", str11, "\"_Python3\"");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 64 + "'", int12 == 64);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test1331() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1331");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str4 = python3Target1.getImplicitSetLabel("\"hi!\"");
        org.stringtemplate.v4.STGroup sTGroup5 = python3Target1.getTemplates();
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = null;
        java.lang.String str9 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator6, "\".5.2.\"", false);
        java.lang.String str10 = python3Target1.getLanguage();
        org.antlr.v4.tool.ast.GrammarAST grammarAST11 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str12 = python3Target1.getLoopLabel(grammarAST11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "_tset\"hi!\"" + "'", str4, "_tset\"hi!\"");
        org.junit.Assert.assertNotNull(sTGroup5);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + ".5.2." + "'", str9, ".5.2.");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Python3" + "'", str10, "Python3");
    }

    @Test
    public void test1332() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1332");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet3 = python3Target1.getBadWords();
        boolean boolean4 = python3Target1.wantsBaseListener();
        java.lang.String str5 = python3Target1.getVersion();
        boolean boolean6 = python3Target1.templatesExist();
        java.util.Set<java.lang.String> strSet7 = python3Target1.getBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = python3Target1.getCodeGenerator();
        boolean boolean9 = python3Target1.wantsBaseVisitor();
        boolean boolean10 = python3Target1.supportsOverloadedMethods();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "4.5.2.1" + "'", str5, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(strSet7);
        org.junit.Assert.assertNull(codeGenerator8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test1333() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1333");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet3 = python3Target1.getBadWords();
        int int4 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str7 = python3Target1.getTargetStringLiteralFromString("_tset\"hi!\"", false);
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = python3Target1.getCodeGenerator();
        boolean boolean9 = python3Target1.supportsOverloadedMethods();
        boolean boolean10 = python3Target1.supportsOverloadedMethods();
        boolean boolean11 = python3Target1.wantsBaseVisitor();
        java.lang.String str13 = python3Target1.getImplicitSetLabel("\"\\\"_\\\\\\\"hi!\\\\\\\"Contex\\\"\"");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str15 = python3Target1.getElementName("\"__\\\"\\\\\\\"hi!\\\\\\\"\\\"Context\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 64 + "'", int4 == 64);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "_tset\\\"hi!\\\"" + "'", str7, "_tset\\\"hi!\\\"");
        org.junit.Assert.assertNull(codeGenerator8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "_tset\"\\\"_\\\\\\\"hi!\\\\\\\"Contex\\\"\"" + "'", str13, "_tset\"\\\"_\\\\\\\"hi!\\\\\\\"Contex\\\"\"");
    }

    @Test
    public void test1334() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1334");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str4 = python3Target1.getImplicitSetLabel("\"hi!\"");
        java.lang.String str6 = python3Target1.encodeIntAsCharEscape(0);
        java.lang.String str7 = python3Target1.getVersion();
        java.lang.String str9 = python3Target1.getImplicitRuleLabel("\"hi!\"Context");
        java.lang.String str11 = python3Target1.getTargetStringLiteralFromString("_Python3");
        org.antlr.v4.codegen.model.RuleFunction ruleFunction12 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str13 = python3Target1.getRuleFunctionContextStructName(ruleFunction12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "_tset\"hi!\"" + "'", str4, "_tset\"hi!\"");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\\0" + "'", str6, "\\0");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "4.5.2.1" + "'", str7, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "_\"hi!\"Context" + "'", str9, "_\"hi!\"Context");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "\"_Python3\"" + "'", str11, "\"_Python3\"");
    }

    @Test
    public void test1335() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1335");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str4 = python3Target1.getImplicitSetLabel("\"hi!\"");
        java.lang.String str6 = python3Target1.encodeIntAsCharEscape(0);
        boolean boolean7 = python3Target1.supportsOverloadedMethods();
        int int8 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str10 = python3Target1.getImplicitRuleLabel("_tset_\"hi!\"ContextContext");
        boolean boolean11 = python3Target1.supportsOverloadedMethods();
        java.lang.String str14 = python3Target1.getTargetStringLiteralFromString("\"hi!\"", true);
        org.antlr.v4.tool.Grammar grammar15 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str17 = python3Target1.getTokenTypeAsTargetLabel(grammar15, (int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "_tset\"hi!\"" + "'", str4, "_tset\"hi!\"");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\\0" + "'", str6, "\\0");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 64 + "'", int8 == 64);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "__tset_\"hi!\"ContextContext" + "'", str10, "__tset_\"hi!\"ContextContext");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "\"\\\"hi!\\\"\"" + "'", str14, "\"\\\"hi!\\\"\"");
    }

    @Test
    public void test1336() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1336");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet3 = python3Target1.getBadWords();
        int int4 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str7 = python3Target1.getTargetStringLiteralFromString("_tset\"hi!\"", false);
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = python3Target1.getCodeGenerator();
        boolean boolean9 = python3Target1.templatesExist();
        java.lang.String str11 = python3Target1.getListLabel("\"hi!\"Context");
        java.lang.String str14 = python3Target1.getTargetStringLiteralFromString("4.5.2.1", true);
        org.antlr.v4.tool.Grammar grammar15 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator16 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target17 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator16);
        int int18 = python3Target17.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet19 = python3Target17.getBadWords();
        boolean boolean20 = python3Target17.wantsBaseListener();
        int int21 = python3Target17.getSerializedATNSegmentLimit();
        boolean boolean22 = python3Target17.wantsBaseVisitor();
        org.antlr.v4.tool.Grammar grammar23 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator24 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target25 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator24);
        int int26 = python3Target25.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet27 = python3Target25.getBadWords();
        int int28 = python3Target25.getInlineTestSetWordSize();
        org.antlr.v4.codegen.CodeGenerator codeGenerator29 = python3Target25.getCodeGenerator();
        java.lang.String str31 = python3Target25.getImplicitSetLabel("_\"hi!\"Context");
        java.lang.String str33 = python3Target25.getImplicitSetLabel("_tset");
        java.lang.String str35 = python3Target25.getImplicitSetLabel("\"\\\"Python3\\\"Context\"");
        int int36 = python3Target25.getSerializedATNSegmentLimit();
        org.antlr.v4.tool.Grammar grammar37 = null;
        int[] intArray38 = new int[] {};
        java.lang.String[] strArray39 = python3Target25.getTokenTypesAsTargetLabels(grammar37, intArray38);
        java.lang.String[] strArray40 = python3Target17.getTokenTypesAsTargetLabels(grammar23, intArray38);
        java.lang.String[] strArray41 = python3Target1.getTokenTypesAsTargetLabels(grammar15, intArray38);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str43 = python3Target1.getElementListName("_tset\"_tsettset\\\\\\\"hi!\"Context");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 64 + "'", int4 == 64);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "_tset\\\"hi!\\\"" + "'", str7, "_tset\\\"hi!\\\"");
        org.junit.Assert.assertNull(codeGenerator8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "\"hi!\"Context" + "'", str11, "\"hi!\"Context");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "\"4.5.2.1\"" + "'", str14, "\"4.5.2.1\"");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 64 + "'", int18 == 64);
        org.junit.Assert.assertNotNull(strSet19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 29 + "'", int21 == 29);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 64 + "'", int26 == 64);
        org.junit.Assert.assertNotNull(strSet27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 64 + "'", int28 == 64);
        org.junit.Assert.assertNull(codeGenerator29);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "_tset_\"hi!\"Context" + "'", str31, "_tset_\"hi!\"Context");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "_tset_tset" + "'", str33, "_tset_tset");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "_tset\"\\\"Python3\\\"Context\"" + "'", str35, "_tset\"\\\"Python3\\\"Context\"");
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 29 + "'", int36 == 29);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[]");
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertNotNull(strArray41);
    }

    @Test
    public void test1337() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1337");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getSerializedATNSegmentLimit();
        boolean boolean3 = python3Target1.supportsOverloadedMethods();
        java.lang.String str6 = python3Target1.getTargetStringLiteralFromString("\\0", false);
        java.lang.String str8 = python3Target1.getTargetStringLiteralFromString("\"#\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator9 = null;
        java.lang.String str12 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator9, "_tset\"\\\"_\\\\\\\"Python3\\\\\\\"\\\"Context\"", false);
        java.lang.String str14 = python3Target1.getTargetStringLiteralFromString("\"\\\\35\"");
        org.antlr.v4.tool.ast.GrammarAST grammarAST15 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str16 = python3Target1.getLoopCounter(grammarAST15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 29 + "'", int2 == 29);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\\\\0" + "'", str6, "\\\\0");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\"\\\"#\\\"\"" + "'", str8, "\"\\\"#\\\"\"");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "tset\\\"\\\"_\\\\\\\"Python3\\\\\\\"\\\"Context" + "'", str12, "tset\\\"\\\"_\\\\\\\"Python3\\\\\\\"\\\"Context");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "\"\\\"\\\\\\\\35\\\"\"" + "'", str14, "\"\\\"\\\\\\\\35\\\"\"");
    }

    @Test
    public void test1338() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1338");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet3 = python3Target1.getBadWords();
        int int4 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str7 = python3Target1.getTargetStringLiteralFromString("_tset\"hi!\"", false);
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = python3Target1.getCodeGenerator();
        boolean boolean9 = python3Target1.supportsOverloadedMethods();
        java.lang.String str11 = python3Target1.getAltLabelContextStructName("\"Python3\"");
        boolean boolean12 = python3Target1.wantsBaseListener();
        int int13 = python3Target1.getInlineTestSetWordSize();
        boolean boolean14 = python3Target1.wantsBaseListener();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str16 = python3Target1.getImplicitTokenLabel("_\"\\\"_\\\"hi!\\\"Contex\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 64 + "'", int4 == 64);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "_tset\\\"hi!\\\"" + "'", str7, "_tset\\\"hi!\\\"");
        org.junit.Assert.assertNull(codeGenerator8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "\"Python3\"Context" + "'", str11, "\"Python3\"Context");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 64 + "'", int13 == 64);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test1339() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1339");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str4 = python3Target1.getImplicitSetLabel("\"hi!\"");
        java.lang.String str6 = python3Target1.encodeIntAsCharEscape(0);
        java.lang.String str7 = python3Target1.getVersion();
        java.lang.String str10 = python3Target1.getTargetStringLiteralFromString("Python3", true);
        java.lang.String str12 = python3Target1.getImplicitRuleLabel("\"Python3\"");
        java.lang.String str14 = python3Target1.getAltLabelContextStructName("\"\\\"_tset\\\\\\\"\\\\\\\\\\\\\\\"_\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"hi!\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"Contex\\\\\\\\\\\\\\\"\\\\\\\"\\\"Context\"");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "_tset\"hi!\"" + "'", str4, "_tset\"hi!\"");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\\0" + "'", str6, "\\0");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "4.5.2.1" + "'", str7, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\"Python3\"" + "'", str10, "\"Python3\"");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "_\"Python3\"" + "'", str12, "_\"Python3\"");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "\"\\\"_tset\\\\\\\"\\\\\\\\\\\\\\\"_\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"hi!\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"Contex\\\\\\\\\\\\\\\"\\\\\\\"\\\"Context\"Context" + "'", str14, "\"\\\"_tset\\\\\\\"\\\\\\\\\\\\\\\"_\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"hi!\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"Contex\\\\\\\\\\\\\\\"\\\\\\\"\\\"Context\"Context");
    }

    @Test
    public void test1340() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1340");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet3 = python3Target1.getBadWords();
        int int4 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str7 = python3Target1.getTargetStringLiteralFromString("_tset\"hi!\"", false);
        java.lang.String str9 = python3Target1.encodeIntAsCharEscape((int) (byte) 100);
        java.lang.String str11 = python3Target1.getImplicitRuleLabel("\"\\\"_\\\"hi!\\\"Contex\"Context");
        java.lang.String str13 = python3Target1.getImplicitRuleLabel("_\"\\\"_\\\"hi!\\\"Contex\"Context");
        java.util.Set<java.lang.String> strSet14 = python3Target1.getBadWords();
        int int15 = python3Target1.getInlineTestSetWordSize();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 64 + "'", int4 == 64);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "_tset\\\"hi!\\\"" + "'", str7, "_tset\\\"hi!\\\"");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "d" + "'", str9, "d");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "_\"\\\"_\\\"hi!\\\"Contex\"Context" + "'", str11, "_\"\\\"_\\\"hi!\\\"Contex\"Context");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "__\"\\\"_\\\"hi!\\\"Contex\"Context" + "'", str13, "__\"\\\"_\\\"hi!\\\"Contex\"Context");
        org.junit.Assert.assertNotNull(strSet14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 64 + "'", int15 == 64);
    }

    @Test
    public void test1341() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1341");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet3 = python3Target1.getBadWords();
        int int4 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str6 = python3Target1.getAltLabelContextStructName("\"hi!\"");
        boolean boolean7 = python3Target1.templatesExist();
        org.stringtemplate.v4.STGroup sTGroup8 = python3Target1.getTemplates();
        org.antlr.v4.tool.ast.GrammarAST grammarAST9 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str10 = python3Target1.getLoopLabel(grammarAST9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 64 + "'", int4 == 64);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\"hi!\"Context" + "'", str6, "\"hi!\"Context");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(sTGroup8);
    }

    @Test
    public void test1342() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1342");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet3 = python3Target1.getBadWords();
        int int4 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str6 = python3Target1.getAltLabelContextStructName("\"hi!\"");
        java.lang.String str7 = python3Target1.getVersion();
        boolean boolean8 = python3Target1.supportsOverloadedMethods();
        java.util.Set<java.lang.String> strSet9 = python3Target1.getBadWords();
        boolean boolean10 = python3Target1.supportsOverloadedMethods();
        java.lang.String str11 = python3Target1.getVersion();
        org.antlr.v4.codegen.model.RuleFunction ruleFunction12 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str13 = python3Target1.getRuleFunctionContextStructName(ruleFunction12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 64 + "'", int4 == 64);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\"hi!\"Context" + "'", str6, "\"hi!\"Context");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "4.5.2.1" + "'", str7, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(strSet9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "4.5.2.1" + "'", str11, "4.5.2.1");
    }

    @Test
    public void test1343() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1343");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet3 = python3Target1.getBadWords();
        boolean boolean4 = python3Target1.supportsOverloadedMethods();
        boolean boolean5 = python3Target1.wantsBaseVisitor();
        int int6 = python3Target1.getInlineTestSetWordSize();
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = null;
        java.lang.String str10 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator7, "\"_tset4.5.2.1\"", true);
        boolean boolean11 = python3Target1.supportsOverloadedMethods();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 64 + "'", int6 == 64);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\"_tset4.5.2.1\"" + "'", str10, "\"_tset4.5.2.1\"");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test1344() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1344");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str4 = python3Target1.getImplicitSetLabel("\"hi!\"");
        java.lang.String str6 = python3Target1.encodeIntAsCharEscape(0);
        boolean boolean7 = python3Target1.supportsOverloadedMethods();
        int int8 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str10 = python3Target1.getImplicitRuleLabel("_tset_\"hi!\"ContextContext");
        org.antlr.v4.codegen.CodeGenerator codeGenerator11 = python3Target1.getCodeGenerator();
        org.antlr.v4.codegen.CodeGenerator codeGenerator12 = null;
        java.lang.String str15 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator12, "__\"\\\"_\\\"hi!\\\"Contex\"Context", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator16 = python3Target1.getCodeGenerator();
        org.antlr.v4.tool.Grammar grammar17 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator18 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target19 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator18);
        boolean boolean20 = python3Target19.supportsOverloadedMethods();
        java.util.Set<java.lang.String> strSet21 = python3Target19.getBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator22 = python3Target19.getCodeGenerator();
        java.lang.String str24 = python3Target19.getAltLabelContextStructName("\"\\\"_\\\"hi!\\\"Contex\"");
        java.lang.String str26 = python3Target19.getListLabel("_tset\"\\\"_\\\"hi!\\\"Contex\"");
        org.antlr.v4.tool.Grammar grammar27 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator28 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target29 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator28);
        int int30 = python3Target29.getInlineTestSetWordSize();
        java.lang.String str32 = python3Target29.getImplicitSetLabel("\"hi!\"");
        java.lang.String str34 = python3Target29.encodeIntAsCharEscape(0);
        java.lang.String str35 = python3Target29.getVersion();
        java.lang.String str37 = python3Target29.getTargetStringLiteralFromString("hi!");
        java.lang.String str39 = python3Target29.getListLabel("");
        java.lang.String str40 = python3Target29.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator41 = null;
        java.lang.String str44 = python3Target29.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator41, "_tset_tset_\"hi!\"Context", false);
        org.stringtemplate.v4.STGroup sTGroup45 = python3Target29.getTemplates();
        org.antlr.v4.tool.Grammar grammar46 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator47 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target48 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator47);
        int int49 = python3Target48.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet50 = python3Target48.getBadWords();
        boolean boolean51 = python3Target48.wantsBaseListener();
        int int52 = python3Target48.getSerializedATNSegmentLimit();
        boolean boolean53 = python3Target48.wantsBaseVisitor();
        org.antlr.v4.tool.Grammar grammar54 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator55 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target56 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator55);
        int int57 = python3Target56.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet58 = python3Target56.getBadWords();
        int int59 = python3Target56.getInlineTestSetWordSize();
        org.antlr.v4.codegen.CodeGenerator codeGenerator60 = python3Target56.getCodeGenerator();
        java.lang.String str62 = python3Target56.getImplicitSetLabel("_\"hi!\"Context");
        java.lang.String str64 = python3Target56.getImplicitSetLabel("_tset");
        java.lang.String str66 = python3Target56.getImplicitSetLabel("\"\\\"Python3\\\"Context\"");
        int int67 = python3Target56.getSerializedATNSegmentLimit();
        org.antlr.v4.tool.Grammar grammar68 = null;
        int[] intArray69 = new int[] {};
        java.lang.String[] strArray70 = python3Target56.getTokenTypesAsTargetLabels(grammar68, intArray69);
        java.lang.String[] strArray71 = python3Target48.getTokenTypesAsTargetLabels(grammar54, intArray69);
        java.lang.String[] strArray72 = python3Target29.getTokenTypesAsTargetLabels(grammar46, intArray69);
        java.lang.String[] strArray73 = python3Target19.getTokenTypesAsTargetLabels(grammar27, intArray69);
        java.lang.String[] strArray74 = python3Target1.getTokenTypesAsTargetLabels(grammar17, intArray69);
        org.antlr.v4.codegen.model.RuleFunction ruleFunction75 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str76 = python3Target1.getRuleFunctionContextStructName(ruleFunction75);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "_tset\"hi!\"" + "'", str4, "_tset\"hi!\"");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\\0" + "'", str6, "\\0");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 64 + "'", int8 == 64);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "__tset_\"hi!\"ContextContext" + "'", str10, "__tset_\"hi!\"ContextContext");
        org.junit.Assert.assertNull(codeGenerator11);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "\"_\\\"\\\"_\\\"hi!\\\"Contex\\\"Contex\"" + "'", str15, "\"_\\\"\\\"_\\\"hi!\\\"Contex\\\"Contex\"");
        org.junit.Assert.assertNull(codeGenerator16);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(strSet21);
        org.junit.Assert.assertNull(codeGenerator22);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "\"\\\"_\\\"hi!\\\"Contex\"Context" + "'", str24, "\"\\\"_\\\"hi!\\\"Contex\"Context");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "_tset\"\\\"_\\\"hi!\\\"Contex\"" + "'", str26, "_tset\"\\\"_\\\"hi!\\\"Contex\"");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 64 + "'", int30 == 64);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "_tset\"hi!\"" + "'", str32, "_tset\"hi!\"");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "\\0" + "'", str34, "\\0");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "4.5.2.1" + "'", str35, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "\"hi!\"" + "'", str37, "\"hi!\"");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "" + "'", str39, "");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "4.5.2.1" + "'", str40, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "tset_tset_\\\"hi!\\\"Contex" + "'", str44, "tset_tset_\\\"hi!\\\"Contex");
        org.junit.Assert.assertNotNull(sTGroup45);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 64 + "'", int49 == 64);
        org.junit.Assert.assertNotNull(strSet50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 29 + "'", int52 == 29);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 64 + "'", int57 == 64);
        org.junit.Assert.assertNotNull(strSet58);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 64 + "'", int59 == 64);
        org.junit.Assert.assertNull(codeGenerator60);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "_tset_\"hi!\"Context" + "'", str62, "_tset_\"hi!\"Context");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "_tset_tset" + "'", str64, "_tset_tset");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "_tset\"\\\"Python3\\\"Context\"" + "'", str66, "_tset\"\\\"Python3\\\"Context\"");
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 29 + "'", int67 == 29);
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[]");
        org.junit.Assert.assertNotNull(strArray70);
        org.junit.Assert.assertNotNull(strArray71);
        org.junit.Assert.assertNotNull(strArray72);
        org.junit.Assert.assertNotNull(strArray73);
        org.junit.Assert.assertNotNull(strArray74);
    }

    @Test
    public void test1345() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1345");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str5 = python3Target1.getTargetStringLiteralFromString("", false);
        java.util.Set<java.lang.String> strSet6 = python3Target1.getBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = null;
        java.lang.String str10 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator7, "__\"hi!\"Context", true);
        java.lang.String str12 = python3Target1.getImplicitRuleLabel("Et\\\"hContext");
        org.antlr.v4.codegen.CodeGenerator codeGenerator13 = null;
        java.lang.String str16 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator13, "_tset\"_Python3\"", true);
        java.lang.String str18 = python3Target1.getTargetStringLiteralFromString("tset\\\\\\\"\\\\\\\"Python3\\\\\\\"Context");
        java.lang.String str21 = python3Target1.getTargetStringLiteralFromString("\"\\\"_tset\\\\\\\"\\\\\\\\\\\\\\\"_\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"hi!\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"Contex\\\\\\\\\\\\\\\"\\\\\\\"\\\"Context\"", false);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNotNull(strSet6);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\"_\\\"hi!\\\"Contex\"" + "'", str10, "\"_\\\"hi!\\\"Contex\"");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "_Et\\\"hContext" + "'", str12, "_Et\\\"hContext");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "\"tset\\\"_Python3\"" + "'", str16, "\"tset\\\"_Python3\"");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "\"tset\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"Python3\\\\\\\\\\\\\\\"Context\"" + "'", str18, "\"tset\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"Python3\\\\\\\\\\\\\\\"Context\"");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "\\\"\\\\\\\"_tset\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"_\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"hi!\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"Contex\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"\\\\\\\"Context\\\"" + "'", str21, "\\\"\\\\\\\"_tset\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"_\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"hi!\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"Contex\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"\\\\\\\"Context\\\"");
    }

    @Test
    public void test1346() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1346");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet3 = python3Target1.getBadWords();
        java.lang.String str4 = python3Target1.getLanguage();
        java.lang.String str6 = python3Target1.getImplicitSetLabel("_tset_\"hi!\"Context");
        java.lang.String str8 = python3Target1.getListLabel("_tsettset\\\"hi!");
        java.lang.String str10 = python3Target1.getAltLabelContextStructName("\"\\\"_Python3\\\"\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator11 = python3Target1.getCodeGenerator();
        java.util.Set<java.lang.String> strSet12 = python3Target1.getBadWords();
        boolean boolean13 = python3Target1.templatesExist();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Python3" + "'", str4, "Python3");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "_tset_tset_\"hi!\"Context" + "'", str6, "_tset_tset_\"hi!\"Context");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "_tsettset\\\"hi!" + "'", str8, "_tsettset\\\"hi!");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\"\\\"_Python3\\\"\"Context" + "'", str10, "\"\\\"_Python3\\\"\"Context");
        org.junit.Assert.assertNull(codeGenerator11);
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
    }

    @Test
    public void test1347() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1347");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet3 = python3Target1.getBadWords();
        int int4 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str7 = python3Target1.getTargetStringLiteralFromString("_tset\"hi!\"", false);
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = python3Target1.getCodeGenerator();
        boolean boolean9 = python3Target1.supportsOverloadedMethods();
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = python3Target1.getCodeGenerator();
        int int11 = python3Target1.getSerializedATNSegmentLimit();
        java.lang.String str13 = python3Target1.getAltLabelContextStructName("\"tset_\\\\\\\"hi!\\\\\\\"Contex\"");
        int int14 = python3Target1.getSerializedATNSegmentLimit();
        java.lang.String str15 = python3Target1.getVersion();
        org.stringtemplate.v4.STGroup sTGroup16 = python3Target1.getTemplates();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 64 + "'", int4 == 64);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "_tset\\\"hi!\\\"" + "'", str7, "_tset\\\"hi!\\\"");
        org.junit.Assert.assertNull(codeGenerator8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(codeGenerator10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 29 + "'", int11 == 29);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "\"tset_\\\\\\\"hi!\\\\\\\"Contex\"Context" + "'", str13, "\"tset_\\\\\\\"hi!\\\\\\\"Contex\"Context");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 29 + "'", int14 == 29);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "4.5.2.1" + "'", str15, "4.5.2.1");
        org.junit.Assert.assertNotNull(sTGroup16);
    }

    @Test
    public void test1348() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1348");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet3 = python3Target1.getBadWords();
        int int4 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str7 = python3Target1.getTargetStringLiteralFromString("_tset\"hi!\"", false);
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = python3Target1.getCodeGenerator();
        boolean boolean9 = python3Target1.templatesExist();
        java.lang.String str11 = python3Target1.getListLabel("\"hi!\"Context");
        boolean boolean12 = python3Target1.supportsOverloadedMethods();
        boolean boolean13 = python3Target1.supportsOverloadedMethods();
        java.lang.String str16 = python3Target1.getTargetStringLiteralFromString("_tset\"Tset\\\\\\\"hi!Context\"Context", false);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 64 + "'", int4 == 64);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "_tset\\\"hi!\\\"" + "'", str7, "_tset\\\"hi!\\\"");
        org.junit.Assert.assertNull(codeGenerator8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "\"hi!\"Context" + "'", str11, "\"hi!\"Context");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "_tset\\\"Tset\\\\\\\\\\\\\\\"hi!Context\\\"Context" + "'", str16, "_tset\\\"Tset\\\\\\\\\\\\\\\"hi!Context\\\"Context");
    }

    @Test
    public void test1349() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1349");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet3 = python3Target1.getBadWords();
        int int4 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str6 = python3Target1.getAltLabelContextStructName("\"hi!\"");
        boolean boolean7 = python3Target1.templatesExist();
        int int8 = python3Target1.getSerializedATNSegmentLimit();
        org.antlr.v4.codegen.CodeGenerator codeGenerator9 = null;
        java.lang.String str12 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator9, "_tset\"_Python3\"", true);
        boolean boolean13 = python3Target1.supportsOverloadedMethods();
        java.lang.String str15 = python3Target1.getListLabel("\"tset_\\\\\\\"hi!\\\\\\\"Contex\"");
        int int16 = python3Target1.getSerializedATNSegmentLimit();
        java.lang.String str18 = python3Target1.getImplicitRuleLabel("\\0ContextContextContext");
        java.lang.String str20 = python3Target1.getImplicitRuleLabel("__tset_\"hi!\"ContextContext");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 64 + "'", int4 == 64);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\"hi!\"Context" + "'", str6, "\"hi!\"Context");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 29 + "'", int8 == 29);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "\"tset\\\"_Python3\"" + "'", str12, "\"tset\\\"_Python3\"");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "\"tset_\\\\\\\"hi!\\\\\\\"Contex\"" + "'", str15, "\"tset_\\\\\\\"hi!\\\\\\\"Contex\"");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 29 + "'", int16 == 29);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "_\\0ContextContextContext" + "'", str18, "_\\0ContextContextContext");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "___tset_\"hi!\"ContextContext" + "'", str20, "___tset_\"hi!\"ContextContext");
    }

    @Test
    public void test1350() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1350");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet3 = python3Target1.getBadWords();
        java.lang.String str4 = python3Target1.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator5 = python3Target1.getCodeGenerator();
        java.lang.String str7 = python3Target1.getTargetStringLiteralFromString("_Python3");
        int int8 = python3Target1.getSerializedATNSegmentLimit();
        java.lang.String str10 = python3Target1.getAltLabelContextStructName("\"\\\"hi!\\\"\"Context");
        java.lang.String str12 = python3Target1.getImplicitRuleLabel("\\35");
        java.lang.String str14 = python3Target1.getAltLabelContextStructName("_\"@\"");
        boolean boolean15 = python3Target1.wantsBaseVisitor();
        java.lang.String str17 = python3Target1.encodeIntAsCharEscape((int) (byte) 1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Python3" + "'", str4, "Python3");
        org.junit.Assert.assertNull(codeGenerator5);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "\"_Python3\"" + "'", str7, "\"_Python3\"");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 29 + "'", int8 == 29);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\"\\\"hi!\\\"\"ContextContext" + "'", str10, "\"\\\"hi!\\\"\"ContextContext");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "_\\35" + "'", str12, "_\\35");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "_\"@\"Context" + "'", str14, "_\"@\"Context");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "\\1" + "'", str17, "\\1");
    }

    @Test
    public void test1351() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1351");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet3 = python3Target1.getBadWords();
        boolean boolean4 = python3Target1.wantsBaseListener();
        java.util.Set<java.lang.String> strSet5 = python3Target1.getBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = python3Target1.getCodeGenerator();
        org.antlr.v4.tool.Rule rule7 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str8 = python3Target1.getRuleFunctionContextStructName(rule7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNull(codeGenerator6);
    }

    @Test
    public void test1352() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1352");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str5 = python3Target1.getTargetStringLiteralFromString("", false);
        java.util.Set<java.lang.String> strSet6 = python3Target1.getBadWords();
        java.util.Set<java.lang.String> strSet7 = python3Target1.getBadWords();
        java.lang.String str9 = python3Target1.getImplicitRuleLabel("\"@\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = null;
        java.lang.String str13 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator10, "\\0ContextContext", false);
        java.lang.String str15 = python3Target1.getImplicitRuleLabel("\"\\\"_Python3\\\"\\\"ContextContex\"");
        org.antlr.v4.tool.Grammar grammar16 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator17 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target18 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator17);
        int int19 = python3Target18.getInlineTestSetWordSize();
        java.lang.String str21 = python3Target18.getImplicitSetLabel("\"hi!\"");
        java.lang.String str23 = python3Target18.encodeIntAsCharEscape(0);
        java.lang.String str24 = python3Target18.getVersion();
        java.lang.String str26 = python3Target18.getTargetStringLiteralFromString("hi!");
        java.lang.String str28 = python3Target18.getListLabel("");
        java.lang.String str29 = python3Target18.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator30 = null;
        java.lang.String str33 = python3Target18.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator30, "_tset_tset_\"hi!\"Context", false);
        org.stringtemplate.v4.STGroup sTGroup34 = python3Target18.getTemplates();
        org.antlr.v4.tool.Grammar grammar35 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator36 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target37 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator36);
        int int38 = python3Target37.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet39 = python3Target37.getBadWords();
        boolean boolean40 = python3Target37.wantsBaseListener();
        int int41 = python3Target37.getSerializedATNSegmentLimit();
        boolean boolean42 = python3Target37.wantsBaseVisitor();
        org.antlr.v4.tool.Grammar grammar43 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator44 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target45 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator44);
        int int46 = python3Target45.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet47 = python3Target45.getBadWords();
        int int48 = python3Target45.getInlineTestSetWordSize();
        org.antlr.v4.codegen.CodeGenerator codeGenerator49 = python3Target45.getCodeGenerator();
        java.lang.String str51 = python3Target45.getImplicitSetLabel("_\"hi!\"Context");
        java.lang.String str53 = python3Target45.getImplicitSetLabel("_tset");
        java.lang.String str55 = python3Target45.getImplicitSetLabel("\"\\\"Python3\\\"Context\"");
        int int56 = python3Target45.getSerializedATNSegmentLimit();
        org.antlr.v4.tool.Grammar grammar57 = null;
        int[] intArray58 = new int[] {};
        java.lang.String[] strArray59 = python3Target45.getTokenTypesAsTargetLabels(grammar57, intArray58);
        java.lang.String[] strArray60 = python3Target37.getTokenTypesAsTargetLabels(grammar43, intArray58);
        java.lang.String[] strArray61 = python3Target18.getTokenTypesAsTargetLabels(grammar35, intArray58);
        java.lang.String[] strArray62 = python3Target1.getTokenTypesAsTargetLabels(grammar16, intArray58);
        java.lang.String str64 = python3Target1.encodeIntAsCharEscape((int) '4');
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNotNull(strSet6);
        org.junit.Assert.assertNotNull(strSet7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "_\"@\"" + "'", str9, "_\"@\"");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "0ContextContex" + "'", str13, "0ContextContex");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "_\"\\\"_Python3\\\"\\\"ContextContex\"" + "'", str15, "_\"\\\"_Python3\\\"\\\"ContextContex\"");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 64 + "'", int19 == 64);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "_tset\"hi!\"" + "'", str21, "_tset\"hi!\"");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "\\0" + "'", str23, "\\0");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "4.5.2.1" + "'", str24, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "\"hi!\"" + "'", str26, "\"hi!\"");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "4.5.2.1" + "'", str29, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "tset_tset_\\\"hi!\\\"Contex" + "'", str33, "tset_tset_\\\"hi!\\\"Contex");
        org.junit.Assert.assertNotNull(sTGroup34);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 64 + "'", int38 == 64);
        org.junit.Assert.assertNotNull(strSet39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 29 + "'", int41 == 29);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 64 + "'", int46 == 64);
        org.junit.Assert.assertNotNull(strSet47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 64 + "'", int48 == 64);
        org.junit.Assert.assertNull(codeGenerator49);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "_tset_\"hi!\"Context" + "'", str51, "_tset_\"hi!\"Context");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "_tset_tset" + "'", str53, "_tset_tset");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "_tset\"\\\"Python3\\\"Context\"" + "'", str55, "_tset\"\\\"Python3\\\"Context\"");
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 29 + "'", int56 == 29);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[]");
        org.junit.Assert.assertNotNull(strArray59);
        org.junit.Assert.assertNotNull(strArray60);
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertNotNull(strArray62);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "\\64" + "'", str64, "\\64");
    }

    @Test
    public void test1353() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1353");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.lang.String str4 = python3Target1.getTargetStringLiteralFromString("tset\\\"hi!", true);
        java.util.Set<java.lang.String> strSet5 = python3Target1.getBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = python3Target1.getCodeGenerator();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "\"tset\\\\\\\"hi!\"" + "'", str4, "\"tset\\\\\\\"hi!\"");
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNull(codeGenerator6);
    }

    @Test
    public void test1354() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1354");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str4 = python3Target1.getImplicitSetLabel("\"hi!\"");
        java.lang.String str6 = python3Target1.encodeIntAsCharEscape(0);
        java.lang.String str8 = python3Target1.encodeIntAsCharEscape(100);
        org.antlr.v4.codegen.CodeGenerator codeGenerator9 = null;
        java.lang.String str12 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator9, "\\0Context", true);
        boolean boolean13 = python3Target1.wantsBaseVisitor();
        java.lang.String str16 = python3Target1.getTargetStringLiteralFromString("\"\\\"hi!\\\"\"Context", true);
        boolean boolean17 = python3Target1.wantsBaseVisitor();
        java.lang.String str19 = python3Target1.getImplicitRuleLabel("");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "_tset\"hi!\"" + "'", str4, "_tset\"hi!\"");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\\0" + "'", str6, "\\0");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "d" + "'", str8, "d");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "\"0Contex\"" + "'", str12, "\"0Contex\"");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "\"\\\"\\\\\\\"hi!\\\\\\\"\\\"Context\"" + "'", str16, "\"\\\"\\\\\\\"hi!\\\\\\\"\\\"Context\"");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "_" + "'", str19, "_");
    }

    @Test
    public void test1355() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1355");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str4 = python3Target1.getImplicitSetLabel("\"hi!\"");
        java.lang.String str6 = python3Target1.encodeIntAsCharEscape(0);
        java.lang.String str7 = python3Target1.getVersion();
        java.lang.String str9 = python3Target1.getImplicitRuleLabel("\"hi!\"Context");
        java.lang.String str10 = python3Target1.getLanguage();
        java.lang.String str12 = python3Target1.getListLabel("_tset_\"hi!\"Context");
        int int13 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str14 = python3Target1.getLanguage();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "_tset\"hi!\"" + "'", str4, "_tset\"hi!\"");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\\0" + "'", str6, "\\0");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "4.5.2.1" + "'", str7, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "_\"hi!\"Context" + "'", str9, "_\"hi!\"Context");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Python3" + "'", str10, "Python3");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "_tset_\"hi!\"Context" + "'", str12, "_tset_\"hi!\"Context");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 64 + "'", int13 == 64);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Python3" + "'", str14, "Python3");
    }

    @Test
    public void test1356() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1356");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str4 = python3Target1.getImplicitSetLabel("\"hi!\"");
        org.stringtemplate.v4.STGroup sTGroup5 = python3Target1.getTemplates();
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = null;
        java.lang.String str9 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator6, "\".5.2.\"", false);
        java.lang.String str11 = python3Target1.getAltLabelContextStructName("\"__\\\"\\\\\\\"hi!\\\\\\\"\\\"\"");
        java.lang.String str12 = python3Target1.getVersion();
        boolean boolean13 = python3Target1.templatesExist();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "_tset\"hi!\"" + "'", str4, "_tset\"hi!\"");
        org.junit.Assert.assertNotNull(sTGroup5);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + ".5.2." + "'", str9, ".5.2.");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "\"__\\\"\\\\\\\"hi!\\\\\\\"\\\"\"Context" + "'", str11, "\"__\\\"\\\\\\\"hi!\\\\\\\"\\\"\"Context");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "4.5.2.1" + "'", str12, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
    }

    @Test
    public void test1357() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1357");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str4 = python3Target1.getImplicitSetLabel("\"hi!\"");
        org.stringtemplate.v4.STGroup sTGroup5 = python3Target1.getTemplates();
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = null;
        java.lang.String str9 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator6, "\".5.2.\"", false);
        java.lang.String str11 = python3Target1.getListLabel("#");
        org.stringtemplate.v4.STGroup sTGroup12 = python3Target1.getTemplates();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "_tset\"hi!\"" + "'", str4, "_tset\"hi!\"");
        org.junit.Assert.assertNotNull(sTGroup5);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + ".5.2." + "'", str9, ".5.2.");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "#" + "'", str11, "#");
        org.junit.Assert.assertNotNull(sTGroup12);
    }

    @Test
    public void test1358() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1358");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet3 = python3Target1.getBadWords();
        boolean boolean4 = python3Target1.supportsOverloadedMethods();
        boolean boolean5 = python3Target1.wantsBaseVisitor();
        int int6 = python3Target1.getInlineTestSetWordSize();
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = null;
        java.lang.String str10 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator7, "\"_tset4.5.2.1\"", true);
        java.lang.String str11 = python3Target1.getLanguage();
        java.lang.String str14 = python3Target1.getTargetStringLiteralFromString("tset\\\\\\\"\\\\\\\"Python3\\\\\\\"Context", true);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 64 + "'", int6 == 64);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\"_tset4.5.2.1\"" + "'", str10, "\"_tset4.5.2.1\"");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Python3" + "'", str11, "Python3");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "\"tset\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"Python3\\\\\\\\\\\\\\\"Context\"" + "'", str14, "\"tset\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"Python3\\\\\\\\\\\\\\\"Context\"");
    }

    @Test
    public void test1359() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1359");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet3 = python3Target1.getBadWords();
        int int4 = python3Target1.getInlineTestSetWordSize();
        org.antlr.v4.codegen.CodeGenerator codeGenerator5 = python3Target1.getCodeGenerator();
        java.lang.String str6 = python3Target1.getLanguage();
        java.lang.String str8 = python3Target1.getListLabel("tset\\\"hi!");
        org.stringtemplate.v4.STGroup sTGroup9 = python3Target1.getTemplates();
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = null;
        java.lang.String str13 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator10, "_tset_\"hi!\"Context", false);
        org.antlr.v4.codegen.CodeGenerator codeGenerator14 = python3Target1.getCodeGenerator();
        java.lang.String str16 = python3Target1.getListLabel("\"_\\\"\\\\\\\"_Python3\\\\\\\"\\\"\"");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 64 + "'", int4 == 64);
        org.junit.Assert.assertNull(codeGenerator5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Python3" + "'", str6, "Python3");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "tset\\\"hi!" + "'", str8, "tset\\\"hi!");
        org.junit.Assert.assertNotNull(sTGroup9);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "tset_\\\"hi!\\\"Contex" + "'", str13, "tset_\\\"hi!\\\"Contex");
        org.junit.Assert.assertNull(codeGenerator14);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "\"_\\\"\\\\\\\"_Python3\\\\\\\"\\\"\"" + "'", str16, "\"_\\\"\\\\\\\"_Python3\\\\\\\"\\\"\"");
    }

    @Test
    public void test1360() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1360");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet3 = python3Target1.getBadWords();
        int int4 = python3Target1.getInlineTestSetWordSize();
        boolean boolean5 = python3Target1.wantsBaseListener();
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = python3Target1.getCodeGenerator();
        java.lang.String str7 = python3Target1.getLanguage();
        int int8 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str10 = python3Target1.getImplicitSetLabel("tset\\\"hi!");
        boolean boolean11 = python3Target1.wantsBaseVisitor();
        java.lang.String str12 = python3Target1.getVersion();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 64 + "'", int4 == 64);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(codeGenerator6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Python3" + "'", str7, "Python3");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 64 + "'", int8 == 64);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "_tsettset\\\"hi!" + "'", str10, "_tsettset\\\"hi!");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "4.5.2.1" + "'", str12, "4.5.2.1");
    }

    @Test
    public void test1361() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1361");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str4 = python3Target1.getImplicitSetLabel("\"hi!\"");
        java.lang.String str6 = python3Target1.encodeIntAsCharEscape(0);
        java.lang.String str7 = python3Target1.getVersion();
        java.lang.String str9 = python3Target1.getImplicitRuleLabel("Python3");
        java.lang.String str12 = python3Target1.getTargetStringLiteralFromString("\"hi!\"", true);
        boolean boolean13 = python3Target1.templatesExist();
        boolean boolean14 = python3Target1.supportsOverloadedMethods();
        boolean boolean15 = python3Target1.wantsBaseListener();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "_tset\"hi!\"" + "'", str4, "_tset\"hi!\"");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\\0" + "'", str6, "\\0");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "4.5.2.1" + "'", str7, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "_Python3" + "'", str9, "_Python3");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "\"\\\"hi!\\\"\"" + "'", str12, "\"\\\"hi!\\\"\"");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test1362() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1362");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet3 = python3Target1.getBadWords();
        int int4 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str7 = python3Target1.getTargetStringLiteralFromString("_tset\"hi!\"", false);
        boolean boolean8 = python3Target1.supportsOverloadedMethods();
        org.antlr.v4.codegen.CodeGenerator codeGenerator9 = null;
        java.lang.String str12 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator9, "\".5.2.\"", false);
        boolean boolean13 = python3Target1.templatesExist();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str15 = python3Target1.getElementListName("\"_\\\\0Context\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 64 + "'", int4 == 64);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "_tset\\\"hi!\\\"" + "'", str7, "_tset\\\"hi!\\\"");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + ".5.2." + "'", str12, ".5.2.");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
    }

    @Test
    public void test1363() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1363");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet3 = python3Target1.getBadWords();
        java.lang.String str4 = python3Target1.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator5 = python3Target1.getCodeGenerator();
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = python3Target1.getCodeGenerator();
        java.lang.String str8 = python3Target1.getImplicitSetLabel("\"\\\"_\\\"hi!\\\"Contex\"Context");
        java.lang.String str10 = python3Target1.getTargetStringLiteralFromString("_tsettset\\\"\\\"Python3\\\"Context");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str12 = python3Target1.getElementName("\"\\\"\\\\\\\"\\\\\\\\\\\\\\\"Python3\\\\\\\\\\\\\\\"Context\\\\\\\"\\\"\"Context");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Python3" + "'", str4, "Python3");
        org.junit.Assert.assertNull(codeGenerator5);
        org.junit.Assert.assertNull(codeGenerator6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "_tset\"\\\"_\\\"hi!\\\"Contex\"Context" + "'", str8, "_tset\"\\\"_\\\"hi!\\\"Contex\"Context");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\"_tsettset\\\\\\\"\\\\\\\"Python3\\\\\\\"Context\"" + "'", str10, "\"_tsettset\\\\\\\"\\\\\\\"Python3\\\\\\\"Context\"");
    }

    @Test
    public void test1364() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1364");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet3 = python3Target1.getBadWords();
        boolean boolean4 = python3Target1.wantsBaseListener();
        int int5 = python3Target1.getSerializedATNSegmentLimit();
        int int6 = python3Target1.getSerializedATNSegmentLimit();
        boolean boolean7 = python3Target1.wantsBaseVisitor();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 29 + "'", int5 == 29);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 29 + "'", int6 == 29);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    public void test1365() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1365");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet3 = python3Target1.getBadWords();
        int int4 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str7 = python3Target1.getTargetStringLiteralFromString("_tset\"hi!\"", false);
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = python3Target1.getCodeGenerator();
        boolean boolean9 = python3Target1.supportsOverloadedMethods();
        boolean boolean10 = python3Target1.supportsOverloadedMethods();
        java.lang.String str11 = python3Target1.getVersion();
        int int12 = python3Target1.getSerializedATNSegmentLimit();
        java.lang.String str13 = python3Target1.getLanguage();
        java.lang.String str15 = python3Target1.getAltLabelContextStructName("\"\\\\\\\"\\\\\\\\\\\\\\\"hi!\\\\\\\\\\\\\\\"\\\\\\\"Context\"");
        java.util.Set<java.lang.String> strSet16 = python3Target1.getBadWords();
        int int17 = python3Target1.getSerializedATNSegmentLimit();
        org.antlr.v4.tool.ast.GrammarAST grammarAST18 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean19 = python3Target1.grammarSymbolCausesIssueInGeneratedCode(grammarAST18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 64 + "'", int4 == 64);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "_tset\\\"hi!\\\"" + "'", str7, "_tset\\\"hi!\\\"");
        org.junit.Assert.assertNull(codeGenerator8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "4.5.2.1" + "'", str11, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 29 + "'", int12 == 29);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Python3" + "'", str13, "Python3");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "\"\\\\\\\"\\\\\\\\\\\\\\\"hi!\\\\\\\\\\\\\\\"\\\\\\\"Context\"Context" + "'", str15, "\"\\\\\\\"\\\\\\\\\\\\\\\"hi!\\\\\\\\\\\\\\\"\\\\\\\"Context\"Context");
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 29 + "'", int17 == 29);
    }

    @Test
    public void test1366() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1366");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str4 = python3Target1.getImplicitSetLabel("\"hi!\"");
        java.lang.String str6 = python3Target1.encodeIntAsCharEscape(0);
        java.lang.String str7 = python3Target1.getVersion();
        java.lang.String str10 = python3Target1.getTargetStringLiteralFromString("Python3", true);
        java.lang.String str12 = python3Target1.getImplicitRuleLabel("\"Python3\"");
        java.lang.String str13 = python3Target1.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator14 = null;
        java.lang.String str17 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator14, "\"\\\"\\\\\\\"\\\\\\\\\\\\\\\"Python3\\\\\\\\\\\\\\\"Context\\\\\\\"\\\"\"", false);
        org.antlr.v4.tool.Grammar grammar18 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator19 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target20 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator19);
        int int21 = python3Target20.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet22 = python3Target20.getBadWords();
        int int23 = python3Target20.getInlineTestSetWordSize();
        java.lang.String str26 = python3Target20.getTargetStringLiteralFromString("_tset\"hi!\"", false);
        org.antlr.v4.codegen.CodeGenerator codeGenerator27 = python3Target20.getCodeGenerator();
        boolean boolean28 = python3Target20.supportsOverloadedMethods();
        boolean boolean29 = python3Target20.supportsOverloadedMethods();
        boolean boolean30 = python3Target20.wantsBaseVisitor();
        java.lang.String str32 = python3Target20.getImplicitSetLabel("\"\\\"_\\\\\\\"hi!\\\\\\\"Contex\\\"\"");
        org.antlr.v4.tool.Grammar grammar33 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator34 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target35 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator34);
        org.antlr.v4.codegen.CodeGenerator codeGenerator36 = null;
        java.lang.String str39 = python3Target35.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator36, "4.5.2.1", true);
        boolean boolean40 = python3Target35.templatesExist();
        org.antlr.v4.tool.Grammar grammar41 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator42 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target43 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator42);
        int int44 = python3Target43.getInlineTestSetWordSize();
        java.lang.String str46 = python3Target43.getImplicitSetLabel("\"hi!\"");
        java.lang.String str48 = python3Target43.encodeIntAsCharEscape(0);
        java.lang.String str49 = python3Target43.getVersion();
        java.lang.String str51 = python3Target43.getTargetStringLiteralFromString("hi!");
        org.antlr.v4.tool.Grammar grammar52 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator53 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target54 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator53);
        boolean boolean55 = python3Target54.supportsOverloadedMethods();
        java.lang.String str57 = python3Target54.getTargetStringLiteralFromString("_Python3");
        org.antlr.v4.tool.Grammar grammar58 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator59 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target60 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator59);
        int int61 = python3Target60.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet62 = python3Target60.getBadWords();
        int int63 = python3Target60.getInlineTestSetWordSize();
        org.antlr.v4.codegen.CodeGenerator codeGenerator64 = python3Target60.getCodeGenerator();
        java.lang.String str66 = python3Target60.getImplicitSetLabel("_\"hi!\"Context");
        java.lang.String str68 = python3Target60.getImplicitSetLabel("_tset");
        java.lang.String str70 = python3Target60.getImplicitSetLabel("\"\\\"Python3\\\"Context\"");
        int int71 = python3Target60.getSerializedATNSegmentLimit();
        org.antlr.v4.tool.Grammar grammar72 = null;
        int[] intArray73 = new int[] {};
        java.lang.String[] strArray74 = python3Target60.getTokenTypesAsTargetLabels(grammar72, intArray73);
        java.lang.String[] strArray75 = python3Target54.getTokenTypesAsTargetLabels(grammar58, intArray73);
        java.lang.String[] strArray76 = python3Target43.getTokenTypesAsTargetLabels(grammar52, intArray73);
        java.lang.String[] strArray77 = python3Target35.getTokenTypesAsTargetLabels(grammar41, intArray73);
        java.lang.String[] strArray78 = python3Target20.getTokenTypesAsTargetLabels(grammar33, intArray73);
        java.lang.String[] strArray79 = python3Target1.getTokenTypesAsTargetLabels(grammar18, intArray73);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "_tset\"hi!\"" + "'", str4, "_tset\"hi!\"");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\\0" + "'", str6, "\\0");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "4.5.2.1" + "'", str7, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\"Python3\"" + "'", str10, "\"Python3\"");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "_\"Python3\"" + "'", str12, "_\"Python3\"");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Python3" + "'", str13, "Python3");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "\\\"\\\\\\\"\\\\\\\\\\\\\\\"Python3\\\\\\\\\\\\\\\"Context\\\\\\\"\\\"" + "'", str17, "\\\"\\\\\\\"\\\\\\\\\\\\\\\"Python3\\\\\\\\\\\\\\\"Context\\\\\\\"\\\"");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 64 + "'", int21 == 64);
        org.junit.Assert.assertNotNull(strSet22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 64 + "'", int23 == 64);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "_tset\\\"hi!\\\"" + "'", str26, "_tset\\\"hi!\\\"");
        org.junit.Assert.assertNull(codeGenerator27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "_tset\"\\\"_\\\\\\\"hi!\\\\\\\"Contex\\\"\"" + "'", str32, "_tset\"\\\"_\\\\\\\"hi!\\\\\\\"Contex\\\"\"");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "\".5.2.\"" + "'", str39, "\".5.2.\"");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 64 + "'", int44 == 64);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "_tset\"hi!\"" + "'", str46, "_tset\"hi!\"");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "\\0" + "'", str48, "\\0");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "4.5.2.1" + "'", str49, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "\"hi!\"" + "'", str51, "\"hi!\"");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "\"_Python3\"" + "'", str57, "\"_Python3\"");
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 64 + "'", int61 == 64);
        org.junit.Assert.assertNotNull(strSet62);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 64 + "'", int63 == 64);
        org.junit.Assert.assertNull(codeGenerator64);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "_tset_\"hi!\"Context" + "'", str66, "_tset_\"hi!\"Context");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "_tset_tset" + "'", str68, "_tset_tset");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "_tset\"\\\"Python3\\\"Context\"" + "'", str70, "_tset\"\\\"Python3\\\"Context\"");
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 29 + "'", int71 == 29);
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[]");
        org.junit.Assert.assertNotNull(strArray74);
        org.junit.Assert.assertNotNull(strArray75);
        org.junit.Assert.assertNotNull(strArray76);
        org.junit.Assert.assertNotNull(strArray77);
        org.junit.Assert.assertNotNull(strArray78);
        org.junit.Assert.assertNotNull(strArray79);
    }

    @Test
    public void test1367() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1367");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet3 = python3Target1.getBadWords();
        int int4 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str5 = python3Target1.getLanguage();
        boolean boolean6 = python3Target1.templatesExist();
        boolean boolean7 = python3Target1.supportsOverloadedMethods();
        java.lang.String str9 = python3Target1.getAltLabelContextStructName("\"Tset\\\\\\\"hi!Context\"");
        boolean boolean10 = python3Target1.templatesExist();
        java.lang.String str12 = python3Target1.encodeIntAsCharEscape((int) (byte) 10);
        boolean boolean13 = python3Target1.templatesExist();
        org.antlr.v4.codegen.CodeGenerator codeGenerator14 = python3Target1.getCodeGenerator();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 64 + "'", int4 == 64);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Python3" + "'", str5, "Python3");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\"Tset\\\\\\\"hi!Context\"Context" + "'", str9, "\"Tset\\\\\\\"hi!Context\"Context");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "\\n" + "'", str12, "\\n");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(codeGenerator14);
    }

    @Test
    public void test1368() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1368");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.supportsOverloadedMethods();
        java.lang.String str4 = python3Target1.getTargetStringLiteralFromString("_Python3");
        boolean boolean5 = python3Target1.supportsOverloadedMethods();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str7 = python3Target1.getElementListName("_\"_\\\"tset4.5.2.1Contex\\\"\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "\"_Python3\"" + "'", str4, "\"_Python3\"");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
    }

    @Test
    public void test1369() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1369");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet3 = python3Target1.getBadWords();
        int int4 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str7 = python3Target1.getTargetStringLiteralFromString("_tset\"hi!\"", false);
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = python3Target1.getCodeGenerator();
        boolean boolean9 = python3Target1.templatesExist();
        java.lang.String str11 = python3Target1.getListLabel("\"hi!\"Context");
        boolean boolean12 = python3Target1.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup13 = python3Target1.getTemplates();
        java.lang.String str15 = python3Target1.getAltLabelContextStructName("_tset\"\\\"Python3\\\"Context\"");
        java.lang.String str16 = python3Target1.getLanguage();
        java.lang.String str17 = python3Target1.getVersion();
        org.antlr.v4.tool.Grammar grammar18 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator19 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target20 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator19);
        int int21 = python3Target20.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet22 = python3Target20.getBadWords();
        int int23 = python3Target20.getInlineTestSetWordSize();
        java.lang.String str26 = python3Target20.getTargetStringLiteralFromString("_tset\"hi!\"", false);
        org.antlr.v4.codegen.CodeGenerator codeGenerator27 = python3Target20.getCodeGenerator();
        boolean boolean28 = python3Target20.supportsOverloadedMethods();
        java.lang.String str30 = python3Target20.getAltLabelContextStructName("\"Python3\"");
        boolean boolean31 = python3Target20.wantsBaseListener();
        int int32 = python3Target20.getInlineTestSetWordSize();
        boolean boolean33 = python3Target20.wantsBaseListener();
        org.antlr.v4.tool.Grammar grammar34 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator35 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target36 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator35);
        int int37 = python3Target36.getInlineTestSetWordSize();
        java.lang.String str39 = python3Target36.getImplicitSetLabel("\"hi!\"");
        java.lang.String str41 = python3Target36.encodeIntAsCharEscape(0);
        java.lang.String str42 = python3Target36.getVersion();
        java.lang.String str44 = python3Target36.getTargetStringLiteralFromString("hi!");
        org.antlr.v4.tool.Grammar grammar45 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator46 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target47 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator46);
        boolean boolean48 = python3Target47.supportsOverloadedMethods();
        java.lang.String str50 = python3Target47.getTargetStringLiteralFromString("_Python3");
        org.antlr.v4.tool.Grammar grammar51 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator52 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target53 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator52);
        int int54 = python3Target53.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet55 = python3Target53.getBadWords();
        int int56 = python3Target53.getInlineTestSetWordSize();
        org.antlr.v4.codegen.CodeGenerator codeGenerator57 = python3Target53.getCodeGenerator();
        java.lang.String str59 = python3Target53.getImplicitSetLabel("_\"hi!\"Context");
        java.lang.String str61 = python3Target53.getImplicitSetLabel("_tset");
        java.lang.String str63 = python3Target53.getImplicitSetLabel("\"\\\"Python3\\\"Context\"");
        int int64 = python3Target53.getSerializedATNSegmentLimit();
        org.antlr.v4.tool.Grammar grammar65 = null;
        int[] intArray66 = new int[] {};
        java.lang.String[] strArray67 = python3Target53.getTokenTypesAsTargetLabels(grammar65, intArray66);
        java.lang.String[] strArray68 = python3Target47.getTokenTypesAsTargetLabels(grammar51, intArray66);
        java.lang.String[] strArray69 = python3Target36.getTokenTypesAsTargetLabels(grammar45, intArray66);
        java.lang.String[] strArray70 = python3Target20.getTokenTypesAsTargetLabels(grammar34, intArray66);
        java.lang.String[] strArray71 = python3Target1.getTokenTypesAsTargetLabels(grammar18, intArray66);
        org.antlr.v4.tool.ast.GrammarAST grammarAST72 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str73 = python3Target1.getLoopLabel(grammarAST72);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 64 + "'", int4 == 64);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "_tset\\\"hi!\\\"" + "'", str7, "_tset\\\"hi!\\\"");
        org.junit.Assert.assertNull(codeGenerator8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "\"hi!\"Context" + "'", str11, "\"hi!\"Context");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(sTGroup13);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "_tset\"\\\"Python3\\\"Context\"Context" + "'", str15, "_tset\"\\\"Python3\\\"Context\"Context");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Python3" + "'", str16, "Python3");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "4.5.2.1" + "'", str17, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 64 + "'", int21 == 64);
        org.junit.Assert.assertNotNull(strSet22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 64 + "'", int23 == 64);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "_tset\\\"hi!\\\"" + "'", str26, "_tset\\\"hi!\\\"");
        org.junit.Assert.assertNull(codeGenerator27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "\"Python3\"Context" + "'", str30, "\"Python3\"Context");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 64 + "'", int32 == 64);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 64 + "'", int37 == 64);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "_tset\"hi!\"" + "'", str39, "_tset\"hi!\"");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "\\0" + "'", str41, "\\0");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "4.5.2.1" + "'", str42, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "\"hi!\"" + "'", str44, "\"hi!\"");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "\"_Python3\"" + "'", str50, "\"_Python3\"");
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 64 + "'", int54 == 64);
        org.junit.Assert.assertNotNull(strSet55);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 64 + "'", int56 == 64);
        org.junit.Assert.assertNull(codeGenerator57);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "_tset_\"hi!\"Context" + "'", str59, "_tset_\"hi!\"Context");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "_tset_tset" + "'", str61, "_tset_tset");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "_tset\"\\\"Python3\\\"Context\"" + "'", str63, "_tset\"\\\"Python3\\\"Context\"");
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 29 + "'", int64 == 29);
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[]");
        org.junit.Assert.assertNotNull(strArray67);
        org.junit.Assert.assertNotNull(strArray68);
        org.junit.Assert.assertNotNull(strArray69);
        org.junit.Assert.assertNotNull(strArray70);
        org.junit.Assert.assertNotNull(strArray71);
    }

    @Test
    public void test1370() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1370");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str4 = python3Target1.getImplicitSetLabel("\"hi!\"");
        java.lang.String str6 = python3Target1.encodeIntAsCharEscape(0);
        java.lang.String str7 = python3Target1.getVersion();
        java.lang.String str9 = python3Target1.getImplicitRuleLabel("\"hi!\"Context");
        java.lang.String str10 = python3Target1.getLanguage();
        java.lang.String str12 = python3Target1.getListLabel("_tset_\"hi!\"Context");
        int int13 = python3Target1.getInlineTestSetWordSize();
        org.antlr.v4.codegen.CodeGenerator codeGenerator14 = python3Target1.getCodeGenerator();
        java.lang.String str16 = python3Target1.getAltLabelContextStructName("\"\\\"\\\\\\\"\\\\\\\\\\\\\\\"Python3\\\\\\\\\\\\\\\"Context\\\\\\\"\\\"\"");
        java.lang.String str19 = python3Target1.getTargetStringLiteralFromString("_\"@\"Context", true);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "_tset\"hi!\"" + "'", str4, "_tset\"hi!\"");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\\0" + "'", str6, "\\0");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "4.5.2.1" + "'", str7, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "_\"hi!\"Context" + "'", str9, "_\"hi!\"Context");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Python3" + "'", str10, "Python3");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "_tset_\"hi!\"Context" + "'", str12, "_tset_\"hi!\"Context");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 64 + "'", int13 == 64);
        org.junit.Assert.assertNull(codeGenerator14);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "\"\\\"\\\\\\\"\\\\\\\\\\\\\\\"Python3\\\\\\\\\\\\\\\"Context\\\\\\\"\\\"\"Context" + "'", str16, "\"\\\"\\\\\\\"\\\\\\\\\\\\\\\"Python3\\\\\\\\\\\\\\\"Context\\\\\\\"\\\"\"Context");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "\"_\\\"@\\\"Context\"" + "'", str19, "\"_\\\"@\\\"Context\"");
    }

    @Test
    public void test1371() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1371");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str4 = python3Target1.getImplicitSetLabel("\"hi!\"");
        java.lang.String str6 = python3Target1.encodeIntAsCharEscape(0);
        boolean boolean7 = python3Target1.templatesExist();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str9 = python3Target1.getImplicitTokenLabel("\"\\\"\\\\\\\"_\\\\\\\"hi!\\\\\\\"Contex\\\"Context\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "_tset\"hi!\"" + "'", str4, "_tset\"hi!\"");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\\0" + "'", str6, "\\0");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
    }

    @Test
    public void test1372() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1372");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet3 = python3Target1.getBadWords();
        int int4 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str7 = python3Target1.getTargetStringLiteralFromString("_tset\"hi!\"", false);
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = python3Target1.getCodeGenerator();
        boolean boolean9 = python3Target1.supportsOverloadedMethods();
        java.lang.String str11 = python3Target1.getAltLabelContextStructName("\"Python3\"");
        java.lang.String str13 = python3Target1.getImplicitRuleLabel("");
        org.antlr.v4.codegen.CodeGenerator codeGenerator14 = null;
        java.lang.String str17 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator14, " ", false);
        int int18 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str20 = python3Target1.getTargetStringLiteralFromString("\".5.2.\"");
        org.antlr.v4.tool.ast.GrammarAST grammarAST21 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean22 = python3Target1.grammarSymbolCausesIssueInGeneratedCode(grammarAST21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 64 + "'", int4 == 64);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "_tset\\\"hi!\\\"" + "'", str7, "_tset\\\"hi!\\\"");
        org.junit.Assert.assertNull(codeGenerator8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "\"Python3\"Context" + "'", str11, "\"Python3\"Context");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "_" + "'", str13, "_");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 64 + "'", int18 == 64);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "\"\\\".5.2.\\\"\"" + "'", str20, "\"\\\".5.2.\\\"\"");
    }

    @Test
    public void test1373() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1373");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.lang.String str3 = python3Target1.getImplicitRuleLabel("_\"hi!\"Context");
        java.lang.String str4 = python3Target1.getLanguage();
        boolean boolean5 = python3Target1.wantsBaseVisitor();
        java.lang.String str7 = python3Target1.getImplicitRuleLabel("\"hi!\"ContextContext");
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = null;
        java.lang.String str11 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator8, "\\0Context", false);
        org.antlr.v4.tool.ast.GrammarAST grammarAST12 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean13 = python3Target1.grammarSymbolCausesIssueInGeneratedCode(grammarAST12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "__\"hi!\"Context" + "'", str3, "__\"hi!\"Context");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Python3" + "'", str4, "Python3");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "_\"hi!\"ContextContext" + "'", str7, "_\"hi!\"ContextContext");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "0Contex" + "'", str11, "0Contex");
    }

    @Test
    public void test1374() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1374");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet3 = python3Target1.getBadWords();
        int int4 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str7 = python3Target1.getTargetStringLiteralFromString("_tset\"hi!\"", false);
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = python3Target1.getCodeGenerator();
        boolean boolean9 = python3Target1.supportsOverloadedMethods();
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = python3Target1.getCodeGenerator();
        int int11 = python3Target1.getSerializedATNSegmentLimit();
        java.lang.String str13 = python3Target1.getAltLabelContextStructName("\"tset_\\\\\\\"hi!\\\\\\\"Contex\"");
        org.antlr.v4.tool.Grammar grammar14 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator15 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target16 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator15);
        int int17 = python3Target16.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet18 = python3Target16.getBadWords();
        int int19 = python3Target16.getInlineTestSetWordSize();
        java.lang.String str22 = python3Target16.getTargetStringLiteralFromString("_tset\"hi!\"", false);
        boolean boolean23 = python3Target16.supportsOverloadedMethods();
        org.antlr.v4.codegen.CodeGenerator codeGenerator24 = null;
        java.lang.String str27 = python3Target16.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator24, "\".5.2.\"", false);
        java.lang.String str28 = python3Target16.getVersion();
        org.antlr.v4.tool.Grammar grammar29 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator30 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target31 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator30);
        int int32 = python3Target31.getInlineTestSetWordSize();
        java.lang.String str34 = python3Target31.getImplicitSetLabel("\"hi!\"");
        java.lang.String str36 = python3Target31.encodeIntAsCharEscape(0);
        java.lang.String str37 = python3Target31.getVersion();
        java.lang.String str39 = python3Target31.getTargetStringLiteralFromString("hi!");
        org.antlr.v4.tool.Grammar grammar40 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator41 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target42 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator41);
        boolean boolean43 = python3Target42.supportsOverloadedMethods();
        java.lang.String str45 = python3Target42.getTargetStringLiteralFromString("_Python3");
        org.antlr.v4.tool.Grammar grammar46 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator47 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target48 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator47);
        int int49 = python3Target48.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet50 = python3Target48.getBadWords();
        int int51 = python3Target48.getInlineTestSetWordSize();
        org.antlr.v4.codegen.CodeGenerator codeGenerator52 = python3Target48.getCodeGenerator();
        java.lang.String str54 = python3Target48.getImplicitSetLabel("_\"hi!\"Context");
        java.lang.String str56 = python3Target48.getImplicitSetLabel("_tset");
        java.lang.String str58 = python3Target48.getImplicitSetLabel("\"\\\"Python3\\\"Context\"");
        int int59 = python3Target48.getSerializedATNSegmentLimit();
        org.antlr.v4.tool.Grammar grammar60 = null;
        int[] intArray61 = new int[] {};
        java.lang.String[] strArray62 = python3Target48.getTokenTypesAsTargetLabels(grammar60, intArray61);
        java.lang.String[] strArray63 = python3Target42.getTokenTypesAsTargetLabels(grammar46, intArray61);
        java.lang.String[] strArray64 = python3Target31.getTokenTypesAsTargetLabels(grammar40, intArray61);
        java.lang.String[] strArray65 = python3Target16.getTokenTypesAsTargetLabels(grammar29, intArray61);
        java.lang.String[] strArray66 = python3Target1.getTokenTypesAsTargetLabels(grammar14, intArray61);
        org.antlr.v4.codegen.model.RuleFunction ruleFunction67 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str68 = python3Target1.getRuleFunctionContextStructName(ruleFunction67);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 64 + "'", int4 == 64);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "_tset\\\"hi!\\\"" + "'", str7, "_tset\\\"hi!\\\"");
        org.junit.Assert.assertNull(codeGenerator8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(codeGenerator10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 29 + "'", int11 == 29);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "\"tset_\\\\\\\"hi!\\\\\\\"Contex\"Context" + "'", str13, "\"tset_\\\\\\\"hi!\\\\\\\"Contex\"Context");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 64 + "'", int17 == 64);
        org.junit.Assert.assertNotNull(strSet18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 64 + "'", int19 == 64);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "_tset\\\"hi!\\\"" + "'", str22, "_tset\\\"hi!\\\"");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + ".5.2." + "'", str27, ".5.2.");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "4.5.2.1" + "'", str28, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 64 + "'", int32 == 64);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "_tset\"hi!\"" + "'", str34, "_tset\"hi!\"");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "\\0" + "'", str36, "\\0");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "4.5.2.1" + "'", str37, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "\"hi!\"" + "'", str39, "\"hi!\"");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "\"_Python3\"" + "'", str45, "\"_Python3\"");
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 64 + "'", int49 == 64);
        org.junit.Assert.assertNotNull(strSet50);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 64 + "'", int51 == 64);
        org.junit.Assert.assertNull(codeGenerator52);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "_tset_\"hi!\"Context" + "'", str54, "_tset_\"hi!\"Context");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "_tset_tset" + "'", str56, "_tset_tset");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "_tset\"\\\"Python3\\\"Context\"" + "'", str58, "_tset\"\\\"Python3\\\"Context\"");
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 29 + "'", int59 == 29);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[]");
        org.junit.Assert.assertNotNull(strArray62);
        org.junit.Assert.assertNotNull(strArray63);
        org.junit.Assert.assertNotNull(strArray64);
        org.junit.Assert.assertNotNull(strArray65);
        org.junit.Assert.assertNotNull(strArray66);
    }

    @Test
    public void test1375() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1375");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.supportsOverloadedMethods();
        java.lang.String str4 = python3Target1.getListLabel("\"_Python3\"");
        java.lang.String str5 = python3Target1.getLanguage();
        java.lang.String str8 = python3Target1.getTargetStringLiteralFromString(" ", true);
        java.lang.String str10 = python3Target1.getTargetStringLiteralFromString("\"__\\\"\\\\\\\"hi!\\\\\\\"\\\"\"");
        org.antlr.v4.tool.ast.GrammarAST grammarAST11 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str12 = python3Target1.getLoopCounter(grammarAST11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "\"_Python3\"" + "'", str4, "\"_Python3\"");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Python3" + "'", str5, "Python3");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\" \"" + "'", str8, "\" \"");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\"\\\"__\\\\\\\"\\\\\\\\\\\\\\\"hi!\\\\\\\\\\\\\\\"\\\\\\\"\\\"\"" + "'", str10, "\"\\\"__\\\\\\\"\\\\\\\\\\\\\\\"hi!\\\\\\\\\\\\\\\"\\\\\\\"\\\"\"");
    }

    @Test
    public void test1376() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1376");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet3 = python3Target1.getBadWords();
        int int4 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str7 = python3Target1.getTargetStringLiteralFromString("_tset\"hi!\"", false);
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = python3Target1.getCodeGenerator();
        boolean boolean9 = python3Target1.templatesExist();
        java.lang.String str11 = python3Target1.getListLabel("\"hi!\"Context");
        org.antlr.v4.codegen.CodeGenerator codeGenerator12 = null;
        java.lang.String str15 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator12, "tset_\\\"hi!\\\"Contex", false);
        java.lang.Class<?> wildcardClass16 = python3Target1.getClass();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 64 + "'", int4 == 64);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "_tset\\\"hi!\\\"" + "'", str7, "_tset\\\"hi!\\\"");
        org.junit.Assert.assertNull(codeGenerator8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "\"hi!\"Context" + "'", str11, "\"hi!\"Context");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "set_\\\"hi!\\\"Conte" + "'", str15, "set_\\\"hi!\\\"Conte");
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test1377() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1377");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet3 = python3Target1.getBadWords();
        java.lang.String str4 = python3Target1.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator5 = python3Target1.getCodeGenerator();
        org.stringtemplate.v4.STGroup sTGroup6 = python3Target1.getTemplates();
        boolean boolean7 = python3Target1.supportsOverloadedMethods();
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = python3Target1.getCodeGenerator();
        int int9 = python3Target1.getSerializedATNSegmentLimit();
        java.util.Set<java.lang.String> strSet10 = python3Target1.getBadWords();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Python3" + "'", str4, "Python3");
        org.junit.Assert.assertNull(codeGenerator5);
        org.junit.Assert.assertNotNull(sTGroup6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(codeGenerator8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 29 + "'", int9 == 29);
        org.junit.Assert.assertNotNull(strSet10);
    }

    @Test
    public void test1378() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1378");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet3 = python3Target1.getBadWords();
        int int4 = python3Target1.getInlineTestSetWordSize();
        org.antlr.v4.codegen.CodeGenerator codeGenerator5 = python3Target1.getCodeGenerator();
        java.lang.String str7 = python3Target1.getImplicitSetLabel("tset\\\"hi!");
        java.lang.String str9 = python3Target1.encodeIntAsCharEscape((int) '#');
        java.lang.String str11 = python3Target1.getTargetStringLiteralFromString("_tsettset\\\"\\\"_\\\\\\\"Python3\\\\\\\"\\\"Context");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str13 = python3Target1.getElementListName("");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 64 + "'", int4 == 64);
        org.junit.Assert.assertNull(codeGenerator5);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "_tsettset\\\"hi!" + "'", str7, "_tsettset\\\"hi!");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "#" + "'", str9, "#");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "\"_tsettset\\\\\\\"\\\\\\\"_\\\\\\\\\\\\\\\"Python3\\\\\\\\\\\\\\\"\\\\\\\"Context\"" + "'", str11, "\"_tsettset\\\\\\\"\\\\\\\"_\\\\\\\\\\\\\\\"Python3\\\\\\\\\\\\\\\"\\\\\\\"Context\"");
    }

    @Test
    public void test1379() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1379");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet3 = python3Target1.getBadWords();
        int int4 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str7 = python3Target1.getTargetStringLiteralFromString("_tset\"hi!\"", false);
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = python3Target1.getCodeGenerator();
        boolean boolean9 = python3Target1.supportsOverloadedMethods();
        java.lang.String str11 = python3Target1.getAltLabelContextStructName("\"Python3\"");
        java.lang.String str13 = python3Target1.getImplicitRuleLabel("");
        java.lang.String str15 = python3Target1.getListLabel("_tset_\"hi!\"ContextContext");
        java.lang.String str17 = python3Target1.encodeIntAsCharEscape(10);
        java.lang.String str19 = python3Target1.getImplicitSetLabel("\"_tsettset\\\\\\\"hi!\"");
        java.lang.String str21 = python3Target1.encodeIntAsCharEscape(0);
        boolean boolean22 = python3Target1.templatesExist();
        java.lang.String str23 = python3Target1.getVersion();
        int int24 = python3Target1.getSerializedATNSegmentLimit();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 64 + "'", int4 == 64);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "_tset\\\"hi!\\\"" + "'", str7, "_tset\\\"hi!\\\"");
        org.junit.Assert.assertNull(codeGenerator8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "\"Python3\"Context" + "'", str11, "\"Python3\"Context");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "_" + "'", str13, "_");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "_tset_\"hi!\"ContextContext" + "'", str15, "_tset_\"hi!\"ContextContext");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "\\n" + "'", str17, "\\n");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "_tset\"_tsettset\\\\\\\"hi!\"" + "'", str19, "_tset\"_tsettset\\\\\\\"hi!\"");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "\\0" + "'", str21, "\\0");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "4.5.2.1" + "'", str23, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 29 + "'", int24 == 29);
    }

    @Test
    public void test1380() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1380");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet3 = python3Target1.getBadWords();
        boolean boolean4 = python3Target1.supportsOverloadedMethods();
        boolean boolean5 = python3Target1.wantsBaseVisitor();
        boolean boolean6 = python3Target1.templatesExist();
        int int7 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str8 = python3Target1.getVersion();
        java.lang.String str9 = python3Target1.getVersion();
        java.lang.String str10 = python3Target1.getLanguage();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 64 + "'", int7 == 64);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "4.5.2.1" + "'", str8, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "4.5.2.1" + "'", str9, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Python3" + "'", str10, "Python3");
    }

    @Test
    public void test1381() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1381");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str4 = python3Target1.getImplicitSetLabel("\"hi!\"");
        java.lang.String str6 = python3Target1.encodeIntAsCharEscape(0);
        java.lang.String str7 = python3Target1.getVersion();
        java.lang.String str9 = python3Target1.getImplicitRuleLabel("\"hi!\"Context");
        java.lang.String str11 = python3Target1.getTargetStringLiteralFromString("_Python3");
        java.lang.String str12 = python3Target1.getVersion();
        boolean boolean13 = python3Target1.supportsOverloadedMethods();
        org.antlr.v4.tool.Rule rule14 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str15 = python3Target1.getRuleFunctionContextStructName(rule14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "_tset\"hi!\"" + "'", str4, "_tset\"hi!\"");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\\0" + "'", str6, "\\0");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "4.5.2.1" + "'", str7, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "_\"hi!\"Context" + "'", str9, "_\"hi!\"Context");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "\"_Python3\"" + "'", str11, "\"_Python3\"");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "4.5.2.1" + "'", str12, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test1382() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1382");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet3 = python3Target1.getBadWords();
        int int4 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str7 = python3Target1.getTargetStringLiteralFromString("_tset\"hi!\"", false);
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = python3Target1.getCodeGenerator();
        boolean boolean9 = python3Target1.supportsOverloadedMethods();
        java.lang.String str11 = python3Target1.getAltLabelContextStructName("\"Python3\"");
        boolean boolean12 = python3Target1.wantsBaseListener();
        org.stringtemplate.v4.STGroup sTGroup13 = python3Target1.getTemplates();
        int int14 = python3Target1.getInlineTestSetWordSize();
        boolean boolean15 = python3Target1.templatesExist();
        org.antlr.v4.tool.ast.GrammarAST grammarAST16 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean17 = python3Target1.grammarSymbolCausesIssueInGeneratedCode(grammarAST16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 64 + "'", int4 == 64);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "_tset\\\"hi!\\\"" + "'", str7, "_tset\\\"hi!\\\"");
        org.junit.Assert.assertNull(codeGenerator8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "\"Python3\"Context" + "'", str11, "\"Python3\"Context");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(sTGroup13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 64 + "'", int14 == 64);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
    }

    @Test
    public void test1383() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1383");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet3 = python3Target1.getBadWords();
        boolean boolean4 = python3Target1.wantsBaseListener();
        int int5 = python3Target1.getSerializedATNSegmentLimit();
        boolean boolean6 = python3Target1.wantsBaseVisitor();
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = null;
        java.lang.String str10 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator7, "\"_tset_tset_\\\"hi!\\\"Context\"", true);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 29 + "'", int5 == 29);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\"_tset_tset_\\\"hi!\\\"Context\"" + "'", str10, "\"_tset_tset_\\\"hi!\\\"Context\"");
    }

    @Test
    public void test1384() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1384");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str4 = python3Target1.getImplicitSetLabel("\"hi!\"");
        java.lang.String str6 = python3Target1.encodeIntAsCharEscape(0);
        java.lang.String str7 = python3Target1.getVersion();
        java.lang.String str9 = python3Target1.getImplicitRuleLabel("Python3");
        java.lang.String str12 = python3Target1.getTargetStringLiteralFromString("\"hi!\"", true);
        int int13 = python3Target1.getSerializedATNSegmentLimit();
        java.lang.String str14 = python3Target1.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup15 = python3Target1.getTemplates();
        boolean boolean16 = python3Target1.supportsOverloadedMethods();
        java.lang.String str18 = python3Target1.getImplicitSetLabel("_\\\\\\\"tset\\\\\\\\\\\\\\\"_Python3\\\\\\\"");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "_tset\"hi!\"" + "'", str4, "_tset\"hi!\"");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\\0" + "'", str6, "\\0");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "4.5.2.1" + "'", str7, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "_Python3" + "'", str9, "_Python3");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "\"\\\"hi!\\\"\"" + "'", str12, "\"\\\"hi!\\\"\"");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 29 + "'", int13 == 29);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Python3" + "'", str14, "Python3");
        org.junit.Assert.assertNotNull(sTGroup15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "_tset_\\\\\\\"tset\\\\\\\\\\\\\\\"_Python3\\\\\\\"" + "'", str18, "_tset_\\\\\\\"tset\\\\\\\\\\\\\\\"_Python3\\\\\\\"");
    }

    @Test
    public void test1385() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1385");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet3 = python3Target1.getBadWords();
        java.lang.String str4 = python3Target1.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator5 = python3Target1.getCodeGenerator();
        org.stringtemplate.v4.STGroup sTGroup6 = python3Target1.getTemplates();
        boolean boolean7 = python3Target1.supportsOverloadedMethods();
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = null;
        java.lang.String str11 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator8, "tset\\\"hi!", false);
        java.lang.String str13 = python3Target1.encodeIntAsCharEscape(64);
        org.antlr.v4.codegen.CodeGenerator codeGenerator14 = null;
        java.lang.String str17 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator14, "_\"_\\\"hi!\\\"Contex\"", true);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str19 = python3Target1.encodeIntAsCharEscape((int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot encode the specified value: -1");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Python3" + "'", str4, "Python3");
        org.junit.Assert.assertNull(codeGenerator5);
        org.junit.Assert.assertNotNull(sTGroup6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "set\\\"hi" + "'", str11, "set\\\"hi");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "@" + "'", str13, "@");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "\"\\\"_\\\"hi!\\\"Contex\"" + "'", str17, "\"\\\"_\\\"hi!\\\"Contex\"");
    }

    @Test
    public void test1386() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1386");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet3 = python3Target1.getBadWords();
        int int4 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str7 = python3Target1.getTargetStringLiteralFromString("_tset\"hi!\"", false);
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = python3Target1.getCodeGenerator();
        boolean boolean9 = python3Target1.supportsOverloadedMethods();
        java.lang.String str11 = python3Target1.getAltLabelContextStructName("\"Python3\"");
        boolean boolean12 = python3Target1.wantsBaseListener();
        int int13 = python3Target1.getInlineTestSetWordSize();
        boolean boolean14 = python3Target1.wantsBaseListener();
        java.lang.String str16 = python3Target1.getTargetStringLiteralFromString("\"_tset\"");
        java.lang.String str18 = python3Target1.encodeIntAsCharEscape(0);
        java.util.Set<java.lang.String> strSet19 = python3Target1.getBadWords();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 64 + "'", int4 == 64);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "_tset\\\"hi!\\\"" + "'", str7, "_tset\\\"hi!\\\"");
        org.junit.Assert.assertNull(codeGenerator8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "\"Python3\"Context" + "'", str11, "\"Python3\"Context");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 64 + "'", int13 == 64);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "\"\\\"_tset\\\"\"" + "'", str16, "\"\\\"_tset\\\"\"");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "\\0" + "'", str18, "\\0");
        org.junit.Assert.assertNotNull(strSet19);
    }

    @Test
    public void test1387() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1387");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet3 = python3Target1.getBadWords();
        int int4 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str6 = python3Target1.getAltLabelContextStructName("\"hi!\"");
        java.lang.String str7 = python3Target1.getVersion();
        boolean boolean8 = python3Target1.supportsOverloadedMethods();
        org.antlr.v4.codegen.CodeGenerator codeGenerator9 = python3Target1.getCodeGenerator();
        java.lang.String str11 = python3Target1.getImplicitSetLabel("\"\\\"_\\\\\\\"Python3\\\\\\\"\\\"Context\"");
        java.lang.String str12 = python3Target1.getLanguage();
        int int13 = python3Target1.getInlineTestSetWordSize();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 64 + "'", int4 == 64);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\"hi!\"Context" + "'", str6, "\"hi!\"Context");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "4.5.2.1" + "'", str7, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(codeGenerator9);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "_tset\"\\\"_\\\\\\\"Python3\\\\\\\"\\\"Context\"" + "'", str11, "_tset\"\\\"_\\\\\\\"Python3\\\\\\\"\\\"Context\"");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Python3" + "'", str12, "Python3");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 64 + "'", int13 == 64);
    }

    @Test
    public void test1388() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1388");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str4 = python3Target1.getImplicitSetLabel("\"hi!\"");
        java.lang.String str6 = python3Target1.encodeIntAsCharEscape(0);
        java.lang.String str7 = python3Target1.getVersion();
        java.lang.String str9 = python3Target1.getImplicitRuleLabel("\"hi!\"Context");
        java.lang.String str11 = python3Target1.getTargetStringLiteralFromString("_Python3");
        int int12 = python3Target1.getInlineTestSetWordSize();
        boolean boolean13 = python3Target1.templatesExist();
        org.antlr.v4.tool.Grammar grammar14 = null;
        int[] intArray15 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String[] strArray16 = python3Target1.getTokenTypesAsTargetLabels(grammar14, intArray15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "_tset\"hi!\"" + "'", str4, "_tset\"hi!\"");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\\0" + "'", str6, "\\0");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "4.5.2.1" + "'", str7, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "_\"hi!\"Context" + "'", str9, "_\"hi!\"Context");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "\"_Python3\"" + "'", str11, "\"_Python3\"");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 64 + "'", int12 == 64);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
    }

    @Test
    public void test1389() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1389");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        org.antlr.v4.codegen.CodeGenerator codeGenerator2 = null;
        java.lang.String str5 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator2, "4.5.2.1", true);
        java.lang.String str6 = python3Target1.getLanguage();
        boolean boolean7 = python3Target1.wantsBaseVisitor();
        boolean boolean8 = python3Target1.supportsOverloadedMethods();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "\".5.2.\"" + "'", str5, "\".5.2.\"");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Python3" + "'", str6, "Python3");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test1390() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1390");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str5 = python3Target1.getTargetStringLiteralFromString("", false);
        java.lang.String str6 = python3Target1.getVersion();
        boolean boolean7 = python3Target1.supportsOverloadedMethods();
        org.antlr.v4.tool.ast.GrammarAST grammarAST8 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str9 = python3Target1.getLoopCounter(grammarAST8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "4.5.2.1" + "'", str6, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    public void test1391() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1391");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet3 = python3Target1.getBadWords();
        int int4 = python3Target1.getInlineTestSetWordSize();
        org.stringtemplate.v4.STGroup sTGroup5 = python3Target1.getTemplates();
        org.stringtemplate.v4.STGroup sTGroup6 = python3Target1.getTemplates();
        java.lang.String str8 = python3Target1.getImplicitSetLabel("");
        boolean boolean9 = python3Target1.wantsBaseListener();
        boolean boolean10 = python3Target1.templatesExist();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 64 + "'", int4 == 64);
        org.junit.Assert.assertNotNull(sTGroup5);
        org.junit.Assert.assertNotNull(sTGroup6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "_tset" + "'", str8, "_tset");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
    }

    @Test
    public void test1392() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1392");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet3 = python3Target1.getBadWords();
        int int4 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str7 = python3Target1.getTargetStringLiteralFromString("_tset\"hi!\"", false);
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = python3Target1.getCodeGenerator();
        boolean boolean9 = python3Target1.supportsOverloadedMethods();
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = python3Target1.getCodeGenerator();
        org.antlr.v4.codegen.CodeGenerator codeGenerator11 = python3Target1.getCodeGenerator();
        org.antlr.v4.codegen.CodeGenerator codeGenerator12 = python3Target1.getCodeGenerator();
        boolean boolean13 = python3Target1.templatesExist();
        java.lang.String str14 = python3Target1.getLanguage();
        org.antlr.v4.tool.ast.GrammarAST grammarAST15 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str16 = python3Target1.getLoopCounter(grammarAST15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 64 + "'", int4 == 64);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "_tset\\\"hi!\\\"" + "'", str7, "_tset\\\"hi!\\\"");
        org.junit.Assert.assertNull(codeGenerator8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(codeGenerator10);
        org.junit.Assert.assertNull(codeGenerator11);
        org.junit.Assert.assertNull(codeGenerator12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Python3" + "'", str14, "Python3");
    }

    @Test
    public void test1393() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1393");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet3 = python3Target1.getBadWords();
        int int4 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str7 = python3Target1.getTargetStringLiteralFromString("_tset\"hi!\"", false);
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = python3Target1.getCodeGenerator();
        boolean boolean9 = python3Target1.templatesExist();
        org.stringtemplate.v4.STGroup sTGroup10 = python3Target1.getTemplates();
        java.lang.String str12 = python3Target1.getImplicitSetLabel("_tset\"tset\\\"_Python3\"");
        java.lang.String str14 = python3Target1.getImplicitSetLabel("");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 64 + "'", int4 == 64);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "_tset\\\"hi!\\\"" + "'", str7, "_tset\\\"hi!\\\"");
        org.junit.Assert.assertNull(codeGenerator8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(sTGroup10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "_tset_tset\"tset\\\"_Python3\"" + "'", str12, "_tset_tset\"tset\\\"_Python3\"");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "_tset" + "'", str14, "_tset");
    }

    @Test
    public void test1394() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1394");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str4 = python3Target1.getImplicitSetLabel("\"hi!\"");
        java.lang.String str6 = python3Target1.encodeIntAsCharEscape(0);
        java.lang.String str7 = python3Target1.getVersion();
        java.lang.String str10 = python3Target1.getTargetStringLiteralFromString("Python3", true);
        java.lang.String str12 = python3Target1.getImplicitRuleLabel("\"Python3\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator13 = python3Target1.getCodeGenerator();
        int int14 = python3Target1.getSerializedATNSegmentLimit();
        java.lang.String str16 = python3Target1.getListLabel("_tset4.5.2.1");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str18 = python3Target1.encodeIntAsCharEscape((int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot encode the specified value: -1");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "_tset\"hi!\"" + "'", str4, "_tset\"hi!\"");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\\0" + "'", str6, "\\0");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "4.5.2.1" + "'", str7, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\"Python3\"" + "'", str10, "\"Python3\"");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "_\"Python3\"" + "'", str12, "_\"Python3\"");
        org.junit.Assert.assertNull(codeGenerator13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 29 + "'", int14 == 29);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "_tset4.5.2.1" + "'", str16, "_tset4.5.2.1");
    }

    @Test
    public void test1395() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1395");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str5 = python3Target1.getTargetStringLiteralFromString("", false);
        java.util.Set<java.lang.String> strSet6 = python3Target1.getBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = python3Target1.getCodeGenerator();
        boolean boolean8 = python3Target1.templatesExist();
        boolean boolean9 = python3Target1.supportsOverloadedMethods();
        java.lang.String str11 = python3Target1.getTargetStringLiteralFromString("_tset_\\35");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNotNull(strSet6);
        org.junit.Assert.assertNull(codeGenerator7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "\"_tset_\\\\35\"" + "'", str11, "\"_tset_\\\\35\"");
    }

    @Test
    public void test1396() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1396");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str4 = python3Target1.getImplicitSetLabel("\"hi!\"");
        java.lang.String str6 = python3Target1.encodeIntAsCharEscape(0);
        java.lang.String str7 = python3Target1.getVersion();
        java.lang.String str9 = python3Target1.getTargetStringLiteralFromString("hi!");
        org.antlr.v4.tool.Grammar grammar10 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator11 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target12 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator11);
        boolean boolean13 = python3Target12.supportsOverloadedMethods();
        java.lang.String str15 = python3Target12.getTargetStringLiteralFromString("_Python3");
        org.antlr.v4.tool.Grammar grammar16 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator17 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target18 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator17);
        int int19 = python3Target18.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet20 = python3Target18.getBadWords();
        int int21 = python3Target18.getInlineTestSetWordSize();
        org.antlr.v4.codegen.CodeGenerator codeGenerator22 = python3Target18.getCodeGenerator();
        java.lang.String str24 = python3Target18.getImplicitSetLabel("_\"hi!\"Context");
        java.lang.String str26 = python3Target18.getImplicitSetLabel("_tset");
        java.lang.String str28 = python3Target18.getImplicitSetLabel("\"\\\"Python3\\\"Context\"");
        int int29 = python3Target18.getSerializedATNSegmentLimit();
        org.antlr.v4.tool.Grammar grammar30 = null;
        int[] intArray31 = new int[] {};
        java.lang.String[] strArray32 = python3Target18.getTokenTypesAsTargetLabels(grammar30, intArray31);
        java.lang.String[] strArray33 = python3Target12.getTokenTypesAsTargetLabels(grammar16, intArray31);
        java.lang.String[] strArray34 = python3Target1.getTokenTypesAsTargetLabels(grammar10, intArray31);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str36 = python3Target1.getImplicitTokenLabel("\"set_\\\\\\\\\\\\\\\"hi!\\\\\\\\\\\\\\\"Conte\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "_tset\"hi!\"" + "'", str4, "_tset\"hi!\"");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\\0" + "'", str6, "\\0");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "4.5.2.1" + "'", str7, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\"hi!\"" + "'", str9, "\"hi!\"");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "\"_Python3\"" + "'", str15, "\"_Python3\"");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 64 + "'", int19 == 64);
        org.junit.Assert.assertNotNull(strSet20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 64 + "'", int21 == 64);
        org.junit.Assert.assertNull(codeGenerator22);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "_tset_\"hi!\"Context" + "'", str24, "_tset_\"hi!\"Context");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "_tset_tset" + "'", str26, "_tset_tset");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "_tset\"\\\"Python3\\\"Context\"" + "'", str28, "_tset\"\\\"Python3\\\"Context\"");
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 29 + "'", int29 == 29);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[]");
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertNotNull(strArray34);
    }

    @Test
    public void test1397() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1397");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet3 = python3Target1.getBadWords();
        int int4 = python3Target1.getInlineTestSetWordSize();
        org.stringtemplate.v4.STGroup sTGroup5 = python3Target1.getTemplates();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str7 = python3Target1.getImplicitTokenLabel("\"\\\"_\\\"\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 64 + "'", int4 == 64);
        org.junit.Assert.assertNotNull(sTGroup5);
    }

    @Test
    public void test1398() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1398");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet3 = python3Target1.getBadWords();
        int int4 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str7 = python3Target1.getTargetStringLiteralFromString("_tset\"hi!\"", false);
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = python3Target1.getCodeGenerator();
        boolean boolean9 = python3Target1.supportsOverloadedMethods();
        java.lang.String str11 = python3Target1.getAltLabelContextStructName("\"Python3\"");
        boolean boolean12 = python3Target1.wantsBaseListener();
        org.stringtemplate.v4.STGroup sTGroup13 = python3Target1.getTemplates();
        boolean boolean14 = python3Target1.wantsBaseVisitor();
        org.antlr.v4.codegen.CodeGenerator codeGenerator15 = python3Target1.getCodeGenerator();
        java.lang.String str17 = python3Target1.getListLabel("\"\\\\\\\"\\\\\\\\\\\\\\\"hi!\\\\\\\\\\\\\\\"\\\\\\\"Context\"");
        org.stringtemplate.v4.STGroup sTGroup18 = python3Target1.getTemplates();
        boolean boolean19 = python3Target1.wantsBaseVisitor();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 64 + "'", int4 == 64);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "_tset\\\"hi!\\\"" + "'", str7, "_tset\\\"hi!\\\"");
        org.junit.Assert.assertNull(codeGenerator8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "\"Python3\"Context" + "'", str11, "\"Python3\"Context");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(sTGroup13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(codeGenerator15);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "\"\\\\\\\"\\\\\\\\\\\\\\\"hi!\\\\\\\\\\\\\\\"\\\\\\\"Context\"" + "'", str17, "\"\\\\\\\"\\\\\\\\\\\\\\\"hi!\\\\\\\\\\\\\\\"\\\\\\\"Context\"");
        org.junit.Assert.assertNotNull(sTGroup18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    }

    @Test
    public void test1399() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1399");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        org.antlr.v4.codegen.CodeGenerator codeGenerator2 = null;
        java.lang.String str5 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator2, "4.5.2.1", true);
        java.lang.String str6 = python3Target1.getLanguage();
        java.lang.String str8 = python3Target1.getImplicitRuleLabel("\"\\\"_\\\"hi!\\\"Contex\"");
        boolean boolean9 = python3Target1.wantsBaseListener();
        java.lang.String str10 = python3Target1.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator11 = python3Target1.getCodeGenerator();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "\".5.2.\"" + "'", str5, "\".5.2.\"");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Python3" + "'", str6, "Python3");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "_\"\\\"_\\\"hi!\\\"Contex\"" + "'", str8, "_\"\\\"_\\\"hi!\\\"Contex\"");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Python3" + "'", str10, "Python3");
        org.junit.Assert.assertNull(codeGenerator11);
    }

    @Test
    public void test1400() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1400");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.supportsOverloadedMethods();
        java.lang.String str4 = python3Target1.getListLabel("\"_Python3\"");
        int int5 = python3Target1.getSerializedATNSegmentLimit();
        org.stringtemplate.v4.STGroup sTGroup6 = python3Target1.getTemplates();
        boolean boolean7 = python3Target1.templatesExist();
        org.antlr.v4.tool.ast.GrammarAST grammarAST8 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str9 = python3Target1.getLoopLabel(grammarAST8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "\"_Python3\"" + "'", str4, "\"_Python3\"");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 29 + "'", int5 == 29);
        org.junit.Assert.assertNotNull(sTGroup6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
    }

    @Test
    public void test1401() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1401");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str4 = python3Target1.getImplicitSetLabel("\"hi!\"");
        java.lang.String str6 = python3Target1.encodeIntAsCharEscape(0);
        java.lang.String str7 = python3Target1.getVersion();
        java.lang.String str9 = python3Target1.getImplicitRuleLabel("\"hi!\"Context");
        java.lang.String str11 = python3Target1.getTargetStringLiteralFromString("_Python3");
        int int12 = python3Target1.getInlineTestSetWordSize();
        boolean boolean13 = python3Target1.templatesExist();
        org.antlr.v4.tool.Grammar grammar14 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str16 = python3Target1.getTokenTypeAsTargetLabel(grammar14, (int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "_tset\"hi!\"" + "'", str4, "_tset\"hi!\"");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\\0" + "'", str6, "\\0");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "4.5.2.1" + "'", str7, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "_\"hi!\"Context" + "'", str9, "_\"hi!\"Context");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "\"_Python3\"" + "'", str11, "\"_Python3\"");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 64 + "'", int12 == 64);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
    }

    @Test
    public void test1402() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1402");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet3 = python3Target1.getBadWords();
        java.lang.String str4 = python3Target1.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator5 = python3Target1.getCodeGenerator();
        java.lang.String str7 = python3Target1.getTargetStringLiteralFromString("_Python3");
        java.lang.String str8 = python3Target1.getLanguage();
        org.antlr.v4.tool.Rule rule9 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str10 = python3Target1.getRuleFunctionContextStructName(rule9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Python3" + "'", str4, "Python3");
        org.junit.Assert.assertNull(codeGenerator5);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "\"_Python3\"" + "'", str7, "\"_Python3\"");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Python3" + "'", str8, "Python3");
    }

    @Test
    public void test1403() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1403");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet3 = python3Target1.getBadWords();
        int int4 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str7 = python3Target1.getTargetStringLiteralFromString("_tset\"hi!\"", false);
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = python3Target1.getCodeGenerator();
        boolean boolean9 = python3Target1.supportsOverloadedMethods();
        boolean boolean10 = python3Target1.supportsOverloadedMethods();
        boolean boolean11 = python3Target1.wantsBaseVisitor();
        int int12 = python3Target1.getSerializedATNSegmentLimit();
        int int13 = python3Target1.getSerializedATNSegmentLimit();
        java.lang.String str15 = python3Target1.getTargetStringLiteralFromString("#");
        java.lang.String str17 = python3Target1.getImplicitSetLabel("hi!");
        java.lang.String str20 = python3Target1.getTargetStringLiteralFromString("\"\\\"_tset4.5.2.1\\\"\"", false);
        java.lang.String str21 = python3Target1.getLanguage();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 64 + "'", int4 == 64);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "_tset\\\"hi!\\\"" + "'", str7, "_tset\\\"hi!\\\"");
        org.junit.Assert.assertNull(codeGenerator8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 29 + "'", int12 == 29);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 29 + "'", int13 == 29);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "\"#\"" + "'", str15, "\"#\"");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "_tsethi!" + "'", str17, "_tsethi!");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "\\\"\\\\\\\"_tset4.5.2.1\\\\\\\"\\\"" + "'", str20, "\\\"\\\\\\\"_tset4.5.2.1\\\\\\\"\\\"");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Python3" + "'", str21, "Python3");
    }

    @Test
    public void test1404() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1404");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet3 = python3Target1.getBadWords();
        int int4 = python3Target1.getInlineTestSetWordSize();
        org.antlr.v4.codegen.CodeGenerator codeGenerator5 = python3Target1.getCodeGenerator();
        java.lang.String str6 = python3Target1.getLanguage();
        java.lang.String str8 = python3Target1.getListLabel("tset\\\"hi!");
        org.stringtemplate.v4.STGroup sTGroup9 = python3Target1.getTemplates();
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = null;
        java.lang.String str13 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator10, "_tset_\"hi!\"Context", false);
        java.lang.String str15 = python3Target1.getImplicitSetLabel("4.5.2.1");
        org.stringtemplate.v4.STGroup sTGroup16 = python3Target1.getTemplates();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 64 + "'", int4 == 64);
        org.junit.Assert.assertNull(codeGenerator5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Python3" + "'", str6, "Python3");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "tset\\\"hi!" + "'", str8, "tset\\\"hi!");
        org.junit.Assert.assertNotNull(sTGroup9);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "tset_\\\"hi!\\\"Contex" + "'", str13, "tset_\\\"hi!\\\"Contex");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "_tset4.5.2.1" + "'", str15, "_tset4.5.2.1");
        org.junit.Assert.assertNotNull(sTGroup16);
    }

    @Test
    public void test1405() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1405");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet3 = python3Target1.getBadWords();
        int int4 = python3Target1.getInlineTestSetWordSize();
        org.antlr.v4.codegen.CodeGenerator codeGenerator5 = python3Target1.getCodeGenerator();
        java.lang.String str7 = python3Target1.getImplicitSetLabel("tset\\\"hi!");
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = null;
        java.lang.String str11 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator8, "\\0Context", true);
        java.lang.String str13 = python3Target1.getImplicitSetLabel("_tset");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 64 + "'", int4 == 64);
        org.junit.Assert.assertNull(codeGenerator5);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "_tsettset\\\"hi!" + "'", str7, "_tsettset\\\"hi!");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "\"0Contex\"" + "'", str11, "\"0Contex\"");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "_tset_tset" + "'", str13, "_tset_tset");
    }

    @Test
    public void test1406() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1406");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet3 = python3Target1.getBadWords();
        int int4 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str7 = python3Target1.getTargetStringLiteralFromString("_tset\"hi!\"", false);
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = python3Target1.getCodeGenerator();
        boolean boolean9 = python3Target1.supportsOverloadedMethods();
        boolean boolean10 = python3Target1.supportsOverloadedMethods();
        java.lang.String str12 = python3Target1.getImplicitRuleLabel("_\"hi!\"Context");
        java.lang.String str14 = python3Target1.encodeIntAsCharEscape(29);
        boolean boolean15 = python3Target1.supportsOverloadedMethods();
        java.lang.String str16 = python3Target1.getLanguage();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str18 = python3Target1.getElementListName("_tset4.5.2.1");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 64 + "'", int4 == 64);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "_tset\\\"hi!\\\"" + "'", str7, "_tset\\\"hi!\\\"");
        org.junit.Assert.assertNull(codeGenerator8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "__\"hi!\"Context" + "'", str12, "__\"hi!\"Context");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "\\35" + "'", str14, "\\35");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Python3" + "'", str16, "Python3");
    }

    @Test
    public void test1407() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1407");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet3 = python3Target1.getBadWords();
        int int4 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str7 = python3Target1.getTargetStringLiteralFromString("_tset\"hi!\"", false);
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = python3Target1.getCodeGenerator();
        boolean boolean9 = python3Target1.supportsOverloadedMethods();
        java.lang.String str11 = python3Target1.getAltLabelContextStructName("\"Python3\"");
        java.lang.String str13 = python3Target1.getImplicitRuleLabel("");
        org.antlr.v4.codegen.CodeGenerator codeGenerator14 = null;
        java.lang.String str17 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator14, " ", false);
        int int18 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str20 = python3Target1.getAltLabelContextStructName(".5.2.");
        boolean boolean21 = python3Target1.wantsBaseListener();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 64 + "'", int4 == 64);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "_tset\\\"hi!\\\"" + "'", str7, "_tset\\\"hi!\\\"");
        org.junit.Assert.assertNull(codeGenerator8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "\"Python3\"Context" + "'", str11, "\"Python3\"Context");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "_" + "'", str13, "_");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 64 + "'", int18 == 64);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + ".5.2.Context" + "'", str20, ".5.2.Context");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
    }

    @Test
    public void test1408() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1408");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet3 = python3Target1.getBadWords();
        int int4 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str7 = python3Target1.getTargetStringLiteralFromString("_tset\"hi!\"", false);
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = python3Target1.getCodeGenerator();
        boolean boolean9 = python3Target1.supportsOverloadedMethods();
        java.lang.String str11 = python3Target1.getAltLabelContextStructName("\"Python3\"");
        boolean boolean12 = python3Target1.wantsBaseListener();
        int int13 = python3Target1.getInlineTestSetWordSize();
        boolean boolean14 = python3Target1.wantsBaseListener();
        java.lang.String str16 = python3Target1.getTargetStringLiteralFromString("\"_tset\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator17 = null;
        java.lang.String str20 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator17, "\"_\"", true);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str22 = python3Target1.getAltLabelContextStructName("");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 0");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 64 + "'", int4 == 64);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "_tset\\\"hi!\\\"" + "'", str7, "_tset\\\"hi!\\\"");
        org.junit.Assert.assertNull(codeGenerator8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "\"Python3\"Context" + "'", str11, "\"Python3\"Context");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 64 + "'", int13 == 64);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "\"\\\"_tset\\\"\"" + "'", str16, "\"\\\"_tset\\\"\"");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "\"_\"" + "'", str20, "\"_\"");
    }

    @Test
    public void test1409() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1409");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet3 = python3Target1.getBadWords();
        boolean boolean4 = python3Target1.wantsBaseListener();
        java.util.Set<java.lang.String> strSet5 = python3Target1.getBadWords();
        boolean boolean6 = python3Target1.templatesExist();
        java.lang.String str8 = python3Target1.getImplicitRuleLabel("\"\\\"#\\\"\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator9 = null;
        java.lang.String str12 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator9, "\"hi!\\\\\\\"Contex\"", true);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "_\"\\\"#\\\"\"" + "'", str8, "_\"\\\"#\\\"\"");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "\"hi!\\\\\\\"Contex\"" + "'", str12, "\"hi!\\\\\\\"Contex\"");
    }

    @Test
    public void test1410() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1410");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet3 = python3Target1.getBadWords();
        int int4 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str6 = python3Target1.getAltLabelContextStructName("\"hi!\"");
        java.lang.String str7 = python3Target1.getVersion();
        boolean boolean8 = python3Target1.supportsOverloadedMethods();
        java.util.Set<java.lang.String> strSet9 = python3Target1.getBadWords();
        boolean boolean10 = python3Target1.supportsOverloadedMethods();
        java.lang.String str13 = python3Target1.getTargetStringLiteralFromString("_tset", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator14 = python3Target1.getCodeGenerator();
        java.lang.String str15 = python3Target1.getVersion();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str17 = python3Target1.getElementName("\"tset_\\\\\\\"hi!\\\\\\\"Contex\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 64 + "'", int4 == 64);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\"hi!\"Context" + "'", str6, "\"hi!\"Context");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "4.5.2.1" + "'", str7, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(strSet9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "\"_tset\"" + "'", str13, "\"_tset\"");
        org.junit.Assert.assertNull(codeGenerator14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "4.5.2.1" + "'", str15, "4.5.2.1");
    }

    @Test
    public void test1411() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1411");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str5 = python3Target1.getTargetStringLiteralFromString("", false);
        org.antlr.v4.tool.Rule rule6 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str7 = python3Target1.getRuleFunctionContextStructName(rule6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
    }

    @Test
    public void test1412() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1412");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet3 = python3Target1.getBadWords();
        boolean boolean4 = python3Target1.wantsBaseListener();
        java.lang.String str5 = python3Target1.getVersion();
        boolean boolean6 = python3Target1.templatesExist();
        java.util.Set<java.lang.String> strSet7 = python3Target1.getBadWords();
        java.lang.String str9 = python3Target1.encodeIntAsCharEscape((int) ' ');
        org.antlr.v4.tool.ast.GrammarAST grammarAST10 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str11 = python3Target1.getLoopLabel(grammarAST10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "4.5.2.1" + "'", str5, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(strSet7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + " " + "'", str9, " ");
    }

    @Test
    public void test1413() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1413");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet3 = python3Target1.getBadWords();
        boolean boolean4 = python3Target1.supportsOverloadedMethods();
        boolean boolean5 = python3Target1.wantsBaseVisitor();
        int int6 = python3Target1.getInlineTestSetWordSize();
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = null;
        java.lang.String str10 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator7, "\"_tset4.5.2.1\"", true);
        java.lang.String str11 = python3Target1.getLanguage();
        java.lang.String str13 = python3Target1.encodeIntAsCharEscape((int) (short) 1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 64 + "'", int6 == 64);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\"_tset4.5.2.1\"" + "'", str10, "\"_tset4.5.2.1\"");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Python3" + "'", str11, "Python3");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "\\1" + "'", str13, "\\1");
    }

    @Test
    public void test1414() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1414");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        org.antlr.v4.codegen.CodeGenerator codeGenerator2 = null;
        java.lang.String str5 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator2, "4.5.2.1", true);
        boolean boolean6 = python3Target1.templatesExist();
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = python3Target1.getCodeGenerator();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "\".5.2.\"" + "'", str5, "\".5.2.\"");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(codeGenerator7);
    }

    @Test
    public void test1415() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1415");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.supportsOverloadedMethods();
        java.lang.String str4 = python3Target1.getListLabel("\"_Python3\"");
        java.lang.String str5 = python3Target1.getLanguage();
        java.lang.String str8 = python3Target1.getTargetStringLiteralFromString(" ", true);
        java.lang.String str11 = python3Target1.getTargetStringLiteralFromString("\\\\0", false);
        org.antlr.v4.codegen.CodeGenerator codeGenerator12 = null;
        java.lang.String str15 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator12, "__tset_tset\".5.2.\"", false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "\"_Python3\"" + "'", str4, "\"_Python3\"");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Python3" + "'", str5, "Python3");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\" \"" + "'", str8, "\" \"");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "\\\\\\\\0" + "'", str11, "\\\\\\\\0");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "_tset_tset\\\".5.2." + "'", str15, "_tset_tset\\\".5.2.");
    }

    @Test
    public void test1416() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1416");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        org.antlr.v4.codegen.CodeGenerator codeGenerator2 = null;
        java.lang.String str5 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator2, "4.5.2.1", true);
        java.lang.String str6 = python3Target1.getVersion();
        int int7 = python3Target1.getSerializedATNSegmentLimit();
        java.lang.String str9 = python3Target1.getListLabel("tset_\\\"hi!\\\"Contex");
        java.lang.String str11 = python3Target1.getImplicitRuleLabel("\"\"");
        java.lang.String str12 = python3Target1.getVersion();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str14 = python3Target1.getImplicitTokenLabel("_tset0Contex");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "\".5.2.\"" + "'", str5, "\".5.2.\"");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "4.5.2.1" + "'", str6, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 29 + "'", int7 == 29);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "tset_\\\"hi!\\\"Contex" + "'", str9, "tset_\\\"hi!\\\"Contex");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "_\"\"" + "'", str11, "_\"\"");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "4.5.2.1" + "'", str12, "4.5.2.1");
    }

    @Test
    public void test1417() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1417");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str4 = python3Target1.getImplicitSetLabel("\"hi!\"");
        java.lang.String str6 = python3Target1.encodeIntAsCharEscape(0);
        java.lang.String str7 = python3Target1.getVersion();
        java.lang.String str9 = python3Target1.getImplicitRuleLabel("\"hi!\"Context");
        java.lang.String str10 = python3Target1.getLanguage();
        java.lang.String str12 = python3Target1.getListLabel("_tset_\"hi!\"Context");
        int int13 = python3Target1.getInlineTestSetWordSize();
        org.antlr.v4.codegen.CodeGenerator codeGenerator14 = python3Target1.getCodeGenerator();
        java.lang.String str16 = python3Target1.getAltLabelContextStructName("\"\\\"\\\\\\\"\\\\\\\\\\\\\\\"Python3\\\\\\\\\\\\\\\"Context\\\\\\\"\\\"\"");
        boolean boolean17 = python3Target1.supportsOverloadedMethods();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "_tset\"hi!\"" + "'", str4, "_tset\"hi!\"");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\\0" + "'", str6, "\\0");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "4.5.2.1" + "'", str7, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "_\"hi!\"Context" + "'", str9, "_\"hi!\"Context");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Python3" + "'", str10, "Python3");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "_tset_\"hi!\"Context" + "'", str12, "_tset_\"hi!\"Context");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 64 + "'", int13 == 64);
        org.junit.Assert.assertNull(codeGenerator14);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "\"\\\"\\\\\\\"\\\\\\\\\\\\\\\"Python3\\\\\\\\\\\\\\\"Context\\\\\\\"\\\"\"Context" + "'", str16, "\"\\\"\\\\\\\"\\\\\\\\\\\\\\\"Python3\\\\\\\\\\\\\\\"Context\\\\\\\"\\\"\"Context");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    }

    @Test
    public void test1418() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1418");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet3 = python3Target1.getBadWords();
        java.lang.String str4 = python3Target1.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator5 = python3Target1.getCodeGenerator();
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = python3Target1.getCodeGenerator();
        java.lang.String str8 = python3Target1.getImplicitSetLabel("\"\\\"_\\\"hi!\\\"Contex\"Context");
        int int9 = python3Target1.getInlineTestSetWordSize();
        boolean boolean10 = python3Target1.supportsOverloadedMethods();
        int int11 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str13 = python3Target1.getAltLabelContextStructName("Et\\\"hContext");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Python3" + "'", str4, "Python3");
        org.junit.Assert.assertNull(codeGenerator5);
        org.junit.Assert.assertNull(codeGenerator6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "_tset\"\\\"_\\\"hi!\\\"Contex\"Context" + "'", str8, "_tset\"\\\"_\\\"hi!\\\"Contex\"Context");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 64 + "'", int9 == 64);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 64 + "'", int11 == 64);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Et\\\"hContextContext" + "'", str13, "Et\\\"hContextContext");
    }

    @Test
    public void test1419() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1419");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet3 = python3Target1.getBadWords();
        int int4 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str7 = python3Target1.getTargetStringLiteralFromString("_tset\"hi!\"", false);
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = python3Target1.getCodeGenerator();
        boolean boolean9 = python3Target1.supportsOverloadedMethods();
        java.lang.String str11 = python3Target1.getAltLabelContextStructName("\"Python3\"");
        boolean boolean12 = python3Target1.wantsBaseListener();
        org.stringtemplate.v4.STGroup sTGroup13 = python3Target1.getTemplates();
        java.util.Set<java.lang.String> strSet14 = python3Target1.getBadWords();
        java.lang.String str15 = python3Target1.getLanguage();
        org.antlr.v4.tool.ast.GrammarAST grammarAST16 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str17 = python3Target1.getLoopLabel(grammarAST16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 64 + "'", int4 == 64);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "_tset\\\"hi!\\\"" + "'", str7, "_tset\\\"hi!\\\"");
        org.junit.Assert.assertNull(codeGenerator8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "\"Python3\"Context" + "'", str11, "\"Python3\"Context");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(sTGroup13);
        org.junit.Assert.assertNotNull(strSet14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Python3" + "'", str15, "Python3");
    }

    @Test
    public void test1420() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1420");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet3 = python3Target1.getBadWords();
        java.lang.String str4 = python3Target1.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator5 = python3Target1.getCodeGenerator();
        java.lang.String str7 = python3Target1.getTargetStringLiteralFromString("_Python3");
        int int8 = python3Target1.getSerializedATNSegmentLimit();
        java.lang.String str10 = python3Target1.getImplicitSetLabel("\"tset\\\"_Python3\"");
        int int11 = python3Target1.getSerializedATNSegmentLimit();
        org.antlr.v4.tool.ast.GrammarAST grammarAST12 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean13 = python3Target1.grammarSymbolCausesIssueInGeneratedCode(grammarAST12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Python3" + "'", str4, "Python3");
        org.junit.Assert.assertNull(codeGenerator5);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "\"_Python3\"" + "'", str7, "\"_Python3\"");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 29 + "'", int8 == 29);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "_tset\"tset\\\"_Python3\"" + "'", str10, "_tset\"tset\\\"_Python3\"");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 29 + "'", int11 == 29);
    }

    @Test
    public void test1421() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1421");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.supportsOverloadedMethods();
        java.lang.String str4 = python3Target1.getListLabel("\"_Python3\"");
        java.lang.String str6 = python3Target1.getAltLabelContextStructName("\\0");
        java.lang.String str8 = python3Target1.getAltLabelContextStructName("_Python3");
        int int9 = python3Target1.getSerializedATNSegmentLimit();
        java.lang.String str10 = python3Target1.getLanguage();
        java.lang.String str11 = python3Target1.getVersion();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "\"_Python3\"" + "'", str4, "\"_Python3\"");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\\0Context" + "'", str6, "\\0Context");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "_Python3Context" + "'", str8, "_Python3Context");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 29 + "'", int9 == 29);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Python3" + "'", str10, "Python3");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "4.5.2.1" + "'", str11, "4.5.2.1");
    }

    @Test
    public void test1422() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1422");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet3 = python3Target1.getBadWords();
        int int4 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str7 = python3Target1.getTargetStringLiteralFromString("_tset\"hi!\"", false);
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = python3Target1.getCodeGenerator();
        boolean boolean9 = python3Target1.supportsOverloadedMethods();
        boolean boolean10 = python3Target1.wantsBaseListener();
        java.lang.String str12 = python3Target1.encodeIntAsCharEscape(0);
        boolean boolean13 = python3Target1.wantsBaseVisitor();
        java.lang.String str15 = python3Target1.encodeIntAsCharEscape((int) (short) 100);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 64 + "'", int4 == 64);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "_tset\\\"hi!\\\"" + "'", str7, "_tset\\\"hi!\\\"");
        org.junit.Assert.assertNull(codeGenerator8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "\\0" + "'", str12, "\\0");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "d" + "'", str15, "d");
    }

    @Test
    public void test1423() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1423");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.supportsOverloadedMethods();
        java.util.Set<java.lang.String> strSet3 = python3Target1.getBadWords();
        java.util.Set<java.lang.String> strSet4 = python3Target1.getBadWords();
        java.lang.String str6 = python3Target1.getTargetStringLiteralFromString("_\"tset4.5.2.1Contex\"");
        java.lang.String str8 = python3Target1.getListLabel("\"\\\"tse\\\"\"");
        org.antlr.v4.tool.Rule rule9 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str10 = python3Target1.getRuleFunctionContextStructName(rule9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\"_\\\"tset4.5.2.1Contex\\\"\"" + "'", str6, "\"_\\\"tset4.5.2.1Contex\\\"\"");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\"\\\"tse\\\"\"" + "'", str8, "\"\\\"tse\\\"\"");
    }

    @Test
    public void test1424() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1424");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet3 = python3Target1.getBadWords();
        int int4 = python3Target1.getInlineTestSetWordSize();
        org.antlr.v4.codegen.CodeGenerator codeGenerator5 = python3Target1.getCodeGenerator();
        java.lang.String str6 = python3Target1.getLanguage();
        java.lang.String str8 = python3Target1.getListLabel("tset\\\"hi!");
        boolean boolean9 = python3Target1.wantsBaseVisitor();
        java.lang.String str12 = python3Target1.getTargetStringLiteralFromString("_tset_tset_\"hi!\"Context", true);
        int int13 = python3Target1.getSerializedATNSegmentLimit();
        org.antlr.v4.codegen.CodeGenerator codeGenerator14 = python3Target1.getCodeGenerator();
        org.antlr.v4.codegen.CodeGenerator codeGenerator15 = null;
        java.lang.String str18 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator15, "_tset\"tset\\\"_Python3\"", true);
        org.antlr.v4.tool.Rule rule19 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str20 = python3Target1.getRuleFunctionContextStructName(rule19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 64 + "'", int4 == 64);
        org.junit.Assert.assertNull(codeGenerator5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Python3" + "'", str6, "Python3");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "tset\\\"hi!" + "'", str8, "tset\\\"hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "\"_tset_tset_\\\"hi!\\\"Context\"" + "'", str12, "\"_tset_tset_\\\"hi!\\\"Context\"");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 29 + "'", int13 == 29);
        org.junit.Assert.assertNull(codeGenerator14);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "\"tset\\\"tset\\\"_Python3\"" + "'", str18, "\"tset\\\"tset\\\"_Python3\"");
    }

    @Test
    public void test1425() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1425");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        org.antlr.v4.codegen.CodeGenerator codeGenerator2 = null;
        java.lang.String str5 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator2, "4.5.2.1", true);
        java.lang.String str6 = python3Target1.getLanguage();
        java.lang.String str8 = python3Target1.getImplicitRuleLabel("\"\\\"_\\\"hi!\\\"Contex\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator9 = python3Target1.getCodeGenerator();
        int int10 = python3Target1.getSerializedATNSegmentLimit();
        org.antlr.v4.codegen.CodeGenerator codeGenerator11 = null;
        java.lang.String str14 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator11, "_tset\\\"hi!\\\"", true);
        java.lang.String str15 = python3Target1.getLanguage();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "\".5.2.\"" + "'", str5, "\".5.2.\"");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Python3" + "'", str6, "Python3");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "_\"\\\"_\\\"hi!\\\"Contex\"" + "'", str8, "_\"\\\"_\\\"hi!\\\"Contex\"");
        org.junit.Assert.assertNull(codeGenerator9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 29 + "'", int10 == 29);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "\"tset\\\"hi!\\\"\"" + "'", str14, "\"tset\\\"hi!\\\"\"");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Python3" + "'", str15, "Python3");
    }

    @Test
    public void test1426() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1426");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str4 = python3Target1.getImplicitSetLabel("\"hi!\"");
        java.lang.String str6 = python3Target1.encodeIntAsCharEscape(0);
        java.lang.String str7 = python3Target1.getVersion();
        java.lang.String str9 = python3Target1.getTargetStringLiteralFromString("hi!");
        boolean boolean10 = python3Target1.templatesExist();
        boolean boolean11 = python3Target1.supportsOverloadedMethods();
        boolean boolean12 = python3Target1.supportsOverloadedMethods();
        org.antlr.v4.codegen.CodeGenerator codeGenerator13 = null;
        java.lang.String str16 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator13, "tset\\\"\\\"Python3\\\"Context", false);
        java.lang.String str19 = python3Target1.getTargetStringLiteralFromString("tset\\\"hi!", true);
        java.lang.String str20 = python3Target1.getVersion();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "_tset\"hi!\"" + "'", str4, "_tset\"hi!\"");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\\0" + "'", str6, "\\0");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "4.5.2.1" + "'", str7, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\"hi!\"" + "'", str9, "\"hi!\"");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "set\\\"\\\"Python3\\\"Contex" + "'", str16, "set\\\"\\\"Python3\\\"Contex");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "\"tset\\\\\\\"hi!\"" + "'", str19, "\"tset\\\\\\\"hi!\"");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "4.5.2.1" + "'", str20, "4.5.2.1");
    }

    @Test
    public void test1427() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1427");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet3 = python3Target1.getBadWords();
        int int4 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str7 = python3Target1.getTargetStringLiteralFromString("_tset\"hi!\"", false);
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = python3Target1.getCodeGenerator();
        boolean boolean9 = python3Target1.supportsOverloadedMethods();
        java.lang.String str12 = python3Target1.getTargetStringLiteralFromString("_Python3", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator13 = python3Target1.getCodeGenerator();
        java.lang.String str15 = python3Target1.getListLabel("");
        org.antlr.v4.codegen.CodeGenerator codeGenerator16 = null;
        java.lang.String str19 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator16, "__tset", true);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 64 + "'", int4 == 64);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "_tset\\\"hi!\\\"" + "'", str7, "_tset\\\"hi!\\\"");
        org.junit.Assert.assertNull(codeGenerator8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "\"_Python3\"" + "'", str12, "\"_Python3\"");
        org.junit.Assert.assertNull(codeGenerator13);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "\"_tse\"" + "'", str19, "\"_tse\"");
    }

    @Test
    public void test1428() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1428");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str4 = python3Target1.getImplicitSetLabel("\"hi!\"");
        java.lang.String str6 = python3Target1.encodeIntAsCharEscape(0);
        java.lang.String str8 = python3Target1.encodeIntAsCharEscape(100);
        org.antlr.v4.codegen.CodeGenerator codeGenerator9 = null;
        java.lang.String str12 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator9, "\\0Context", true);
        boolean boolean13 = python3Target1.wantsBaseVisitor();
        java.lang.String str16 = python3Target1.getTargetStringLiteralFromString("\"\\\"hi!\\\"\"Context", true);
        java.lang.String str18 = python3Target1.getImplicitRuleLabel("_tset_\"Python3\"");
        boolean boolean19 = python3Target1.wantsBaseListener();
        java.lang.String str21 = python3Target1.getTargetStringLiteralFromString("\"tset\\\"_Python3\"");
        java.lang.String str23 = python3Target1.encodeIntAsCharEscape(0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "_tset\"hi!\"" + "'", str4, "_tset\"hi!\"");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\\0" + "'", str6, "\\0");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "d" + "'", str8, "d");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "\"0Contex\"" + "'", str12, "\"0Contex\"");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "\"\\\"\\\\\\\"hi!\\\\\\\"\\\"Context\"" + "'", str16, "\"\\\"\\\\\\\"hi!\\\\\\\"\\\"Context\"");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "__tset_\"Python3\"" + "'", str18, "__tset_\"Python3\"");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "\"\\\"tset\\\\\\\"_Python3\\\"\"" + "'", str21, "\"\\\"tset\\\\\\\"_Python3\\\"\"");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "\\0" + "'", str23, "\\0");
    }

    @Test
    public void test1429() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1429");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str4 = python3Target1.getImplicitSetLabel("\"hi!\"");
        java.lang.String str6 = python3Target1.encodeIntAsCharEscape(0);
        java.lang.String str7 = python3Target1.getVersion();
        java.lang.String str9 = python3Target1.getImplicitRuleLabel("\"hi!\"Context");
        java.lang.String str11 = python3Target1.getTargetStringLiteralFromString("_Python3");
        int int12 = python3Target1.getInlineTestSetWordSize();
        boolean boolean13 = python3Target1.wantsBaseListener();
        org.stringtemplate.v4.STGroup sTGroup14 = python3Target1.getTemplates();
        int int15 = python3Target1.getSerializedATNSegmentLimit();
        org.antlr.v4.tool.ast.GrammarAST grammarAST16 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str17 = python3Target1.getLoopCounter(grammarAST16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "_tset\"hi!\"" + "'", str4, "_tset\"hi!\"");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\\0" + "'", str6, "\\0");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "4.5.2.1" + "'", str7, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "_\"hi!\"Context" + "'", str9, "_\"hi!\"Context");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "\"_Python3\"" + "'", str11, "\"_Python3\"");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 64 + "'", int12 == 64);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(sTGroup14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 29 + "'", int15 == 29);
    }

    @Test
    public void test1430() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1430");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet3 = python3Target1.getBadWords();
        int int4 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str7 = python3Target1.getTargetStringLiteralFromString("_tset\"hi!\"", false);
        boolean boolean8 = python3Target1.supportsOverloadedMethods();
        org.antlr.v4.codegen.CodeGenerator codeGenerator9 = null;
        java.lang.String str12 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator9, "\".5.2.\"", false);
        java.lang.String str14 = python3Target1.getListLabel("_tset\"_Python3\"");
        java.util.Set<java.lang.String> strSet15 = python3Target1.getBadWords();
        org.antlr.v4.tool.Grammar grammar16 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator17 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target18 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator17);
        int int19 = python3Target18.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet20 = python3Target18.getBadWords();
        int int21 = python3Target18.getInlineTestSetWordSize();
        java.lang.String str23 = python3Target18.getAltLabelContextStructName("\"hi!\"");
        java.lang.String str24 = python3Target18.getVersion();
        boolean boolean25 = python3Target18.supportsOverloadedMethods();
        java.util.Set<java.lang.String> strSet26 = python3Target18.getBadWords();
        boolean boolean27 = python3Target18.supportsOverloadedMethods();
        java.lang.String str30 = python3Target18.getTargetStringLiteralFromString("_tset", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator31 = python3Target18.getCodeGenerator();
        org.antlr.v4.tool.Grammar grammar32 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator33 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target34 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator33);
        int int35 = python3Target34.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet36 = python3Target34.getBadWords();
        int int37 = python3Target34.getInlineTestSetWordSize();
        java.lang.String str40 = python3Target34.getTargetStringLiteralFromString("_tset\"hi!\"", false);
        org.antlr.v4.codegen.CodeGenerator codeGenerator41 = python3Target34.getCodeGenerator();
        boolean boolean42 = python3Target34.templatesExist();
        org.antlr.v4.tool.Grammar grammar43 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator44 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target45 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator44);
        int int46 = python3Target45.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet47 = python3Target45.getBadWords();
        int int48 = python3Target45.getInlineTestSetWordSize();
        org.antlr.v4.codegen.CodeGenerator codeGenerator49 = python3Target45.getCodeGenerator();
        java.lang.String str51 = python3Target45.getImplicitSetLabel("_\"hi!\"Context");
        java.lang.String str53 = python3Target45.getImplicitSetLabel("_tset");
        java.lang.String str55 = python3Target45.getImplicitSetLabel("\"\\\"Python3\\\"Context\"");
        int int56 = python3Target45.getSerializedATNSegmentLimit();
        org.antlr.v4.tool.Grammar grammar57 = null;
        int[] intArray58 = new int[] {};
        java.lang.String[] strArray59 = python3Target45.getTokenTypesAsTargetLabels(grammar57, intArray58);
        java.lang.String[] strArray60 = python3Target34.getTokenTypesAsTargetLabels(grammar43, intArray58);
        java.lang.String[] strArray61 = python3Target18.getTokenTypesAsTargetLabels(grammar32, intArray58);
        java.lang.String[] strArray62 = python3Target1.getTokenTypesAsTargetLabels(grammar16, intArray58);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 64 + "'", int4 == 64);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "_tset\\\"hi!\\\"" + "'", str7, "_tset\\\"hi!\\\"");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + ".5.2." + "'", str12, ".5.2.");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "_tset\"_Python3\"" + "'", str14, "_tset\"_Python3\"");
        org.junit.Assert.assertNotNull(strSet15);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 64 + "'", int19 == 64);
        org.junit.Assert.assertNotNull(strSet20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 64 + "'", int21 == 64);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "\"hi!\"Context" + "'", str23, "\"hi!\"Context");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "4.5.2.1" + "'", str24, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(strSet26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "\"_tset\"" + "'", str30, "\"_tset\"");
        org.junit.Assert.assertNull(codeGenerator31);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 64 + "'", int35 == 64);
        org.junit.Assert.assertNotNull(strSet36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 64 + "'", int37 == 64);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "_tset\\\"hi!\\\"" + "'", str40, "_tset\\\"hi!\\\"");
        org.junit.Assert.assertNull(codeGenerator41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 64 + "'", int46 == 64);
        org.junit.Assert.assertNotNull(strSet47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 64 + "'", int48 == 64);
        org.junit.Assert.assertNull(codeGenerator49);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "_tset_\"hi!\"Context" + "'", str51, "_tset_\"hi!\"Context");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "_tset_tset" + "'", str53, "_tset_tset");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "_tset\"\\\"Python3\\\"Context\"" + "'", str55, "_tset\"\\\"Python3\\\"Context\"");
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 29 + "'", int56 == 29);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[]");
        org.junit.Assert.assertNotNull(strArray59);
        org.junit.Assert.assertNotNull(strArray60);
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertNotNull(strArray62);
    }

    @Test
    public void test1431() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1431");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.supportsOverloadedMethods();
        java.lang.String str4 = python3Target1.getListLabel("\"_Python3\"");
        int int5 = python3Target1.getSerializedATNSegmentLimit();
        org.stringtemplate.v4.STGroup sTGroup6 = python3Target1.getTemplates();
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = python3Target1.getCodeGenerator();
        org.antlr.v4.codegen.model.RuleFunction ruleFunction8 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str9 = python3Target1.getRuleFunctionContextStructName(ruleFunction8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "\"_Python3\"" + "'", str4, "\"_Python3\"");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 29 + "'", int5 == 29);
        org.junit.Assert.assertNotNull(sTGroup6);
        org.junit.Assert.assertNull(codeGenerator7);
    }

    @Test
    public void test1432() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1432");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet3 = python3Target1.getBadWords();
        int int4 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str7 = python3Target1.getTargetStringLiteralFromString("_tset\"hi!\"", false);
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = python3Target1.getCodeGenerator();
        boolean boolean9 = python3Target1.templatesExist();
        java.lang.String str11 = python3Target1.getListLabel("\"hi!\"Context");
        java.lang.String str13 = python3Target1.getListLabel("Python3");
        java.lang.String str15 = python3Target1.getImplicitRuleLabel("\"\\\"hi!\\\"\"Context");
        boolean boolean16 = python3Target1.supportsOverloadedMethods();
        java.lang.String str18 = python3Target1.getListLabel("_tset4.5.2.1");
        java.lang.String str20 = python3Target1.getTargetStringLiteralFromString("_tsettset\\\"\\\"_\\\\\\\"Python3\\\\\\\"\\\"Context");
        java.lang.Class<?> wildcardClass21 = python3Target1.getClass();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 64 + "'", int4 == 64);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "_tset\\\"hi!\\\"" + "'", str7, "_tset\\\"hi!\\\"");
        org.junit.Assert.assertNull(codeGenerator8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "\"hi!\"Context" + "'", str11, "\"hi!\"Context");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Python3" + "'", str13, "Python3");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "_\"\\\"hi!\\\"\"Context" + "'", str15, "_\"\\\"hi!\\\"\"Context");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "_tset4.5.2.1" + "'", str18, "_tset4.5.2.1");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "\"_tsettset\\\\\\\"\\\\\\\"_\\\\\\\\\\\\\\\"Python3\\\\\\\\\\\\\\\"\\\\\\\"Context\"" + "'", str20, "\"_tsettset\\\\\\\"\\\\\\\"_\\\\\\\\\\\\\\\"Python3\\\\\\\\\\\\\\\"\\\\\\\"Context\"");
        org.junit.Assert.assertNotNull(wildcardClass21);
    }

    @Test
    public void test1433() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1433");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet3 = python3Target1.getBadWords();
        int int4 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str7 = python3Target1.getTargetStringLiteralFromString("_tset\"hi!\"", false);
        java.lang.String str9 = python3Target1.encodeIntAsCharEscape((int) (byte) 100);
        java.lang.String str11 = python3Target1.getImplicitRuleLabel("\"\\\"_\\\"hi!\\\"Contex\"Context");
        java.lang.String str13 = python3Target1.getImplicitRuleLabel("_\"\\\"_\\\"hi!\\\"Contex\"Context");
        java.util.Set<java.lang.String> strSet14 = python3Target1.getBadWords();
        java.lang.String str16 = python3Target1.getListLabel("__tset\"\\\"_\\\\\\\"Python3\\\\\\\"\\\"Context\"");
        java.lang.String str18 = python3Target1.getImplicitSetLabel("tset4.5.2.1Contex");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 64 + "'", int4 == 64);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "_tset\\\"hi!\\\"" + "'", str7, "_tset\\\"hi!\\\"");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "d" + "'", str9, "d");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "_\"\\\"_\\\"hi!\\\"Contex\"Context" + "'", str11, "_\"\\\"_\\\"hi!\\\"Contex\"Context");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "__\"\\\"_\\\"hi!\\\"Contex\"Context" + "'", str13, "__\"\\\"_\\\"hi!\\\"Contex\"Context");
        org.junit.Assert.assertNotNull(strSet14);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "__tset\"\\\"_\\\\\\\"Python3\\\\\\\"\\\"Context\"" + "'", str16, "__tset\"\\\"_\\\\\\\"Python3\\\\\\\"\\\"Context\"");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "_tsettset4.5.2.1Contex" + "'", str18, "_tsettset4.5.2.1Contex");
    }

    @Test
    public void test1434() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1434");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet3 = python3Target1.getBadWords();
        int int4 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str7 = python3Target1.getTargetStringLiteralFromString("_tset\"hi!\"", false);
        java.lang.String str9 = python3Target1.encodeIntAsCharEscape((int) (byte) 100);
        java.lang.String str11 = python3Target1.getImplicitRuleLabel("\"\\\"_\\\"hi!\\\"Contex\"Context");
        java.lang.String str13 = python3Target1.getImplicitRuleLabel("_\"\\\"_\\\"hi!\\\"Contex\"Context");
        java.util.Set<java.lang.String> strSet14 = python3Target1.getBadWords();
        java.lang.String str16 = python3Target1.getListLabel("__tset\"\\\"_\\\\\\\"Python3\\\\\\\"\\\"Context\"");
        org.antlr.v4.tool.Rule rule17 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str18 = python3Target1.getRuleFunctionContextStructName(rule17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 64 + "'", int4 == 64);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "_tset\\\"hi!\\\"" + "'", str7, "_tset\\\"hi!\\\"");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "d" + "'", str9, "d");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "_\"\\\"_\\\"hi!\\\"Contex\"Context" + "'", str11, "_\"\\\"_\\\"hi!\\\"Contex\"Context");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "__\"\\\"_\\\"hi!\\\"Contex\"Context" + "'", str13, "__\"\\\"_\\\"hi!\\\"Contex\"Context");
        org.junit.Assert.assertNotNull(strSet14);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "__tset\"\\\"_\\\\\\\"Python3\\\\\\\"\\\"Context\"" + "'", str16, "__tset\"\\\"_\\\\\\\"Python3\\\\\\\"\\\"Context\"");
    }

    @Test
    public void test1435() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1435");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.supportsOverloadedMethods();
        java.lang.String str4 = python3Target1.getListLabel("\"_Python3\"");
        java.lang.String str6 = python3Target1.getAltLabelContextStructName("\\0");
        java.lang.String str8 = python3Target1.getAltLabelContextStructName("_Python3");
        int int9 = python3Target1.getSerializedATNSegmentLimit();
        java.lang.String str11 = python3Target1.getAltLabelContextStructName("\"_\\\\\\\"\\\\\\\\\\\\\\\"hi!\\\\\\\\\\\\\\\"\\\\\\\"Context\"");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "\"_Python3\"" + "'", str4, "\"_Python3\"");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\\0Context" + "'", str6, "\\0Context");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "_Python3Context" + "'", str8, "_Python3Context");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 29 + "'", int9 == 29);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "\"_\\\\\\\"\\\\\\\\\\\\\\\"hi!\\\\\\\\\\\\\\\"\\\\\\\"Context\"Context" + "'", str11, "\"_\\\\\\\"\\\\\\\\\\\\\\\"hi!\\\\\\\\\\\\\\\"\\\\\\\"Context\"Context");
    }

    @Test
    public void test1436() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1436");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet3 = python3Target1.getBadWords();
        int int4 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str7 = python3Target1.getTargetStringLiteralFromString("_tset\"hi!\"", false);
        boolean boolean8 = python3Target1.supportsOverloadedMethods();
        org.antlr.v4.codegen.CodeGenerator codeGenerator9 = null;
        java.lang.String str12 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator9, "\".5.2.\"", false);
        java.lang.String str13 = python3Target1.getVersion();
        org.antlr.v4.tool.Grammar grammar14 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator15 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target16 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator15);
        int int17 = python3Target16.getInlineTestSetWordSize();
        java.lang.String str19 = python3Target16.getImplicitSetLabel("\"hi!\"");
        java.lang.String str21 = python3Target16.encodeIntAsCharEscape(0);
        java.lang.String str22 = python3Target16.getVersion();
        java.lang.String str24 = python3Target16.getTargetStringLiteralFromString("hi!");
        org.antlr.v4.tool.Grammar grammar25 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator26 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target27 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator26);
        boolean boolean28 = python3Target27.supportsOverloadedMethods();
        java.lang.String str30 = python3Target27.getTargetStringLiteralFromString("_Python3");
        org.antlr.v4.tool.Grammar grammar31 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator32 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target33 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator32);
        int int34 = python3Target33.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet35 = python3Target33.getBadWords();
        int int36 = python3Target33.getInlineTestSetWordSize();
        org.antlr.v4.codegen.CodeGenerator codeGenerator37 = python3Target33.getCodeGenerator();
        java.lang.String str39 = python3Target33.getImplicitSetLabel("_\"hi!\"Context");
        java.lang.String str41 = python3Target33.getImplicitSetLabel("_tset");
        java.lang.String str43 = python3Target33.getImplicitSetLabel("\"\\\"Python3\\\"Context\"");
        int int44 = python3Target33.getSerializedATNSegmentLimit();
        org.antlr.v4.tool.Grammar grammar45 = null;
        int[] intArray46 = new int[] {};
        java.lang.String[] strArray47 = python3Target33.getTokenTypesAsTargetLabels(grammar45, intArray46);
        java.lang.String[] strArray48 = python3Target27.getTokenTypesAsTargetLabels(grammar31, intArray46);
        java.lang.String[] strArray49 = python3Target16.getTokenTypesAsTargetLabels(grammar25, intArray46);
        java.lang.String[] strArray50 = python3Target1.getTokenTypesAsTargetLabels(grammar14, intArray46);
        boolean boolean51 = python3Target1.supportsOverloadedMethods();
        org.antlr.v4.tool.Rule rule52 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str53 = python3Target1.getRuleFunctionContextStructName(rule52);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 64 + "'", int4 == 64);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "_tset\\\"hi!\\\"" + "'", str7, "_tset\\\"hi!\\\"");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + ".5.2." + "'", str12, ".5.2.");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "4.5.2.1" + "'", str13, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 64 + "'", int17 == 64);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "_tset\"hi!\"" + "'", str19, "_tset\"hi!\"");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "\\0" + "'", str21, "\\0");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "4.5.2.1" + "'", str22, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "\"hi!\"" + "'", str24, "\"hi!\"");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "\"_Python3\"" + "'", str30, "\"_Python3\"");
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 64 + "'", int34 == 64);
        org.junit.Assert.assertNotNull(strSet35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 64 + "'", int36 == 64);
        org.junit.Assert.assertNull(codeGenerator37);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "_tset_\"hi!\"Context" + "'", str39, "_tset_\"hi!\"Context");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "_tset_tset" + "'", str41, "_tset_tset");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "_tset\"\\\"Python3\\\"Context\"" + "'", str43, "_tset\"\\\"Python3\\\"Context\"");
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 29 + "'", int44 == 29);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[]");
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertNotNull(strArray49);
        org.junit.Assert.assertNotNull(strArray50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
    }

    @Test
    public void test1437() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1437");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet3 = python3Target1.getBadWords();
        int int4 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str5 = python3Target1.getLanguage();
        boolean boolean6 = python3Target1.templatesExist();
        boolean boolean7 = python3Target1.supportsOverloadedMethods();
        java.lang.String str9 = python3Target1.getAltLabelContextStructName("\"Tset\\\\\\\"hi!Context\"");
        java.lang.String str11 = python3Target1.getListLabel("\"\\\"\\\\\\\"_Python3\\\\\\\"\\\"ContextContext\"");
        java.lang.Class<?> wildcardClass12 = python3Target1.getClass();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 64 + "'", int4 == 64);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Python3" + "'", str5, "Python3");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\"Tset\\\\\\\"hi!Context\"Context" + "'", str9, "\"Tset\\\\\\\"hi!Context\"Context");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "\"\\\"\\\\\\\"_Python3\\\\\\\"\\\"ContextContext\"" + "'", str11, "\"\\\"\\\\\\\"_Python3\\\\\\\"\\\"ContextContext\"");
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test1438() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1438");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.wantsBaseVisitor();
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = python3Target1.getCodeGenerator();
        java.lang.String str4 = python3Target1.getVersion();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(codeGenerator3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "4.5.2.1" + "'", str4, "4.5.2.1");
    }

    @Test
    public void test1439() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1439");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet3 = python3Target1.getBadWords();
        java.lang.String str4 = python3Target1.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator5 = python3Target1.getCodeGenerator();
        java.lang.String str7 = python3Target1.getImplicitSetLabel("\"_Python3\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = null;
        java.lang.String str11 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator8, "\"\\\"tset\\\\\\\"_Python3\\\"\"", false);
        org.antlr.v4.codegen.model.RuleFunction ruleFunction12 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str13 = python3Target1.getRuleFunctionContextStructName(ruleFunction12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Python3" + "'", str4, "Python3");
        org.junit.Assert.assertNull(codeGenerator5);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "_tset\"_Python3\"" + "'", str7, "_tset\"_Python3\"");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "\\\"tset\\\\\\\"_Python3\\\"" + "'", str11, "\\\"tset\\\\\\\"_Python3\\\"");
    }

    @Test
    public void test1440() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1440");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet3 = python3Target1.getBadWords();
        int int4 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str7 = python3Target1.getTargetStringLiteralFromString("_tset\"hi!\"", false);
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = python3Target1.getCodeGenerator();
        boolean boolean9 = python3Target1.templatesExist();
        java.lang.String str11 = python3Target1.getListLabel("\"hi!\"Context");
        java.lang.String str13 = python3Target1.getListLabel("Python3");
        java.lang.String str15 = python3Target1.getImplicitRuleLabel("\"\\\"hi!\\\"\"Context");
        boolean boolean16 = python3Target1.supportsOverloadedMethods();
        boolean boolean17 = python3Target1.supportsOverloadedMethods();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 64 + "'", int4 == 64);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "_tset\\\"hi!\\\"" + "'", str7, "_tset\\\"hi!\\\"");
        org.junit.Assert.assertNull(codeGenerator8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "\"hi!\"Context" + "'", str11, "\"hi!\"Context");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Python3" + "'", str13, "Python3");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "_\"\\\"hi!\\\"\"Context" + "'", str15, "_\"\\\"hi!\\\"\"Context");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    }

    @Test
    public void test1441() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1441");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet3 = python3Target1.getBadWords();
        int int4 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str6 = python3Target1.getAltLabelContextStructName("\"hi!\"");
        java.lang.String str7 = python3Target1.getVersion();
        boolean boolean8 = python3Target1.supportsOverloadedMethods();
        org.antlr.v4.codegen.CodeGenerator codeGenerator9 = python3Target1.getCodeGenerator();
        org.stringtemplate.v4.STGroup sTGroup10 = python3Target1.getTemplates();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 64 + "'", int4 == 64);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\"hi!\"Context" + "'", str6, "\"hi!\"Context");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "4.5.2.1" + "'", str7, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(codeGenerator9);
        org.junit.Assert.assertNotNull(sTGroup10);
    }

    @Test
    public void test1442() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1442");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str5 = python3Target1.getTargetStringLiteralFromString("", false);
        java.util.Set<java.lang.String> strSet6 = python3Target1.getBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = null;
        java.lang.String str10 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator7, "__\"hi!\"Context", true);
        java.lang.String str12 = python3Target1.getImplicitRuleLabel("Et\\\"hContext");
        org.antlr.v4.codegen.CodeGenerator codeGenerator13 = null;
        java.lang.String str16 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator13, "_tset\"_Python3\"", true);
        java.lang.String str18 = python3Target1.getTargetStringLiteralFromString("tset\\\\\\\"\\\\\\\"Python3\\\\\\\"Context");
        java.lang.String str20 = python3Target1.getTargetStringLiteralFromString("\"\\\"_tset_\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"_\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"hi!\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"Contex\\\\\\\\\\\\\\\"Context\\\"\"");
        java.lang.Class<?> wildcardClass21 = python3Target1.getClass();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNotNull(strSet6);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\"_\\\"hi!\\\"Contex\"" + "'", str10, "\"_\\\"hi!\\\"Contex\"");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "_Et\\\"hContext" + "'", str12, "_Et\\\"hContext");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "\"tset\\\"_Python3\"" + "'", str16, "\"tset\\\"_Python3\"");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "\"tset\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"Python3\\\\\\\\\\\\\\\"Context\"" + "'", str18, "\"tset\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"Python3\\\\\\\\\\\\\\\"Context\"");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "\"\\\"\\\\\\\"_tset_\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"_\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"hi!\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"Contex\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"Context\\\\\\\"\\\"\"" + "'", str20, "\"\\\"\\\\\\\"_tset_\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"_\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"hi!\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"Contex\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"Context\\\\\\\"\\\"\"");
        org.junit.Assert.assertNotNull(wildcardClass21);
    }

    @Test
    public void test1443() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1443");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str4 = python3Target1.getImplicitSetLabel("\"hi!\"");
        java.lang.String str6 = python3Target1.encodeIntAsCharEscape(0);
        java.lang.String str7 = python3Target1.getVersion();
        java.lang.String str10 = python3Target1.getTargetStringLiteralFromString("Python3", true);
        boolean boolean11 = python3Target1.wantsBaseVisitor();
        java.lang.String str13 = python3Target1.getListLabel("_tset\\\"\\\\\\\"hi!\\\\\\\"\\\"Context");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "_tset\"hi!\"" + "'", str4, "_tset\"hi!\"");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\\0" + "'", str6, "\\0");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "4.5.2.1" + "'", str7, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\"Python3\"" + "'", str10, "\"Python3\"");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "_tset\\\"\\\\\\\"hi!\\\\\\\"\\\"Context" + "'", str13, "_tset\\\"\\\\\\\"hi!\\\\\\\"\\\"Context");
    }

    @Test
    public void test1444() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1444");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet3 = python3Target1.getBadWords();
        int int4 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str7 = python3Target1.getTargetStringLiteralFromString("_tset\"hi!\"", false);
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = python3Target1.getCodeGenerator();
        boolean boolean9 = python3Target1.supportsOverloadedMethods();
        java.lang.String str11 = python3Target1.getAltLabelContextStructName("\"Python3\"");
        int int12 = python3Target1.getSerializedATNSegmentLimit();
        org.stringtemplate.v4.STGroup sTGroup13 = python3Target1.getTemplates();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 64 + "'", int4 == 64);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "_tset\\\"hi!\\\"" + "'", str7, "_tset\\\"hi!\\\"");
        org.junit.Assert.assertNull(codeGenerator8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "\"Python3\"Context" + "'", str11, "\"Python3\"Context");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 29 + "'", int12 == 29);
        org.junit.Assert.assertNotNull(sTGroup13);
    }

    @Test
    public void test1445() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1445");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str4 = python3Target1.getListLabel("\"\\\"\\\"_Python3\\\"\"");
        java.lang.String str6 = python3Target1.getImplicitRuleLabel("_tset\"\\\"_\\\\\\\"hi!\\\\\\\"Contex\\\"\"");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "\"\\\"\\\"_Python3\\\"\"" + "'", str4, "\"\\\"\\\"_Python3\\\"\"");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "__tset\"\\\"_\\\\\\\"hi!\\\\\\\"Contex\\\"\"" + "'", str6, "__tset\"\\\"_\\\\\\\"hi!\\\\\\\"Contex\\\"\"");
    }

    @Test
    public void test1446() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1446");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet3 = python3Target1.getBadWords();
        int int4 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str7 = python3Target1.getTargetStringLiteralFromString("_tset\"hi!\"", false);
        boolean boolean8 = python3Target1.supportsOverloadedMethods();
        java.lang.String str10 = python3Target1.getAltLabelContextStructName("\"\\\"_\\\"hi!\\\"Contex\"");
        boolean boolean11 = python3Target1.wantsBaseVisitor();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 64 + "'", int4 == 64);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "_tset\\\"hi!\\\"" + "'", str7, "_tset\\\"hi!\\\"");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\"\\\"_\\\"hi!\\\"Contex\"Context" + "'", str10, "\"\\\"_\\\"hi!\\\"Contex\"Context");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test1447() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1447");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        org.antlr.v4.codegen.CodeGenerator codeGenerator2 = null;
        java.lang.String str5 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator2, "4.5.2.1", true);
        java.lang.String str6 = python3Target1.getVersion();
        int int7 = python3Target1.getSerializedATNSegmentLimit();
        java.lang.String str9 = python3Target1.getListLabel("tset_\\\"hi!\\\"Contex");
        java.lang.String str11 = python3Target1.encodeIntAsCharEscape(1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "\".5.2.\"" + "'", str5, "\".5.2.\"");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "4.5.2.1" + "'", str6, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 29 + "'", int7 == 29);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "tset_\\\"hi!\\\"Contex" + "'", str9, "tset_\\\"hi!\\\"Contex");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "\\1" + "'", str11, "\\1");
    }

    @Test
    public void test1448() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1448");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str5 = python3Target1.getTargetStringLiteralFromString("", false);
        java.util.Set<java.lang.String> strSet6 = python3Target1.getBadWords();
        java.lang.String str8 = python3Target1.getListLabel("\\0");
        int int9 = python3Target1.getSerializedATNSegmentLimit();
        java.lang.String str11 = python3Target1.getImplicitRuleLabel("_tset\\\"hi!\\\"");
        org.antlr.v4.tool.Grammar grammar12 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator13 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target14 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator13);
        int int15 = python3Target14.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet16 = python3Target14.getBadWords();
        int int17 = python3Target14.getInlineTestSetWordSize();
        java.lang.String str20 = python3Target14.getTargetStringLiteralFromString("_tset\"hi!\"", false);
        org.antlr.v4.codegen.CodeGenerator codeGenerator21 = python3Target14.getCodeGenerator();
        boolean boolean22 = python3Target14.templatesExist();
        java.lang.String str24 = python3Target14.getListLabel("\"hi!\"Context");
        java.lang.String str27 = python3Target14.getTargetStringLiteralFromString("4.5.2.1", true);
        org.antlr.v4.tool.Grammar grammar28 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator29 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target30 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator29);
        int int31 = python3Target30.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet32 = python3Target30.getBadWords();
        boolean boolean33 = python3Target30.wantsBaseListener();
        int int34 = python3Target30.getSerializedATNSegmentLimit();
        boolean boolean35 = python3Target30.wantsBaseVisitor();
        org.antlr.v4.tool.Grammar grammar36 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator37 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target38 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator37);
        int int39 = python3Target38.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet40 = python3Target38.getBadWords();
        int int41 = python3Target38.getInlineTestSetWordSize();
        org.antlr.v4.codegen.CodeGenerator codeGenerator42 = python3Target38.getCodeGenerator();
        java.lang.String str44 = python3Target38.getImplicitSetLabel("_\"hi!\"Context");
        java.lang.String str46 = python3Target38.getImplicitSetLabel("_tset");
        java.lang.String str48 = python3Target38.getImplicitSetLabel("\"\\\"Python3\\\"Context\"");
        int int49 = python3Target38.getSerializedATNSegmentLimit();
        org.antlr.v4.tool.Grammar grammar50 = null;
        int[] intArray51 = new int[] {};
        java.lang.String[] strArray52 = python3Target38.getTokenTypesAsTargetLabels(grammar50, intArray51);
        java.lang.String[] strArray53 = python3Target30.getTokenTypesAsTargetLabels(grammar36, intArray51);
        java.lang.String[] strArray54 = python3Target14.getTokenTypesAsTargetLabels(grammar28, intArray51);
        java.lang.String[] strArray55 = python3Target1.getTokenTypesAsTargetLabels(grammar12, intArray51);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNotNull(strSet6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\\0" + "'", str8, "\\0");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 29 + "'", int9 == 29);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "__tset\\\"hi!\\\"" + "'", str11, "__tset\\\"hi!\\\"");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 64 + "'", int15 == 64);
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 64 + "'", int17 == 64);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "_tset\\\"hi!\\\"" + "'", str20, "_tset\\\"hi!\\\"");
        org.junit.Assert.assertNull(codeGenerator21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "\"hi!\"Context" + "'", str24, "\"hi!\"Context");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "\"4.5.2.1\"" + "'", str27, "\"4.5.2.1\"");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 64 + "'", int31 == 64);
        org.junit.Assert.assertNotNull(strSet32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 29 + "'", int34 == 29);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 64 + "'", int39 == 64);
        org.junit.Assert.assertNotNull(strSet40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 64 + "'", int41 == 64);
        org.junit.Assert.assertNull(codeGenerator42);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "_tset_\"hi!\"Context" + "'", str44, "_tset_\"hi!\"Context");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "_tset_tset" + "'", str46, "_tset_tset");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "_tset\"\\\"Python3\\\"Context\"" + "'", str48, "_tset\"\\\"Python3\\\"Context\"");
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 29 + "'", int49 == 29);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[]");
        org.junit.Assert.assertNotNull(strArray52);
        org.junit.Assert.assertNotNull(strArray53);
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertNotNull(strArray55);
    }

    @Test
    public void test1449() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1449");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.lang.String str4 = python3Target1.getTargetStringLiteralFromString("Python3", false);
        java.util.Set<java.lang.String> strSet5 = python3Target1.getBadWords();
        boolean boolean6 = python3Target1.wantsBaseVisitor();
        java.lang.String str7 = python3Target1.getVersion();
        org.stringtemplate.v4.STGroup sTGroup8 = python3Target1.getTemplates();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Python3" + "'", str4, "Python3");
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "4.5.2.1" + "'", str7, "4.5.2.1");
        org.junit.Assert.assertNotNull(sTGroup8);
    }

    @Test
    public void test1450() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1450");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet3 = python3Target1.getBadWords();
        int int4 = python3Target1.getInlineTestSetWordSize();
        org.antlr.v4.codegen.CodeGenerator codeGenerator5 = python3Target1.getCodeGenerator();
        java.lang.String str6 = python3Target1.getLanguage();
        java.lang.String str8 = python3Target1.getListLabel("tset\\\"hi!");
        org.stringtemplate.v4.STGroup sTGroup9 = python3Target1.getTemplates();
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = null;
        java.lang.String str13 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator10, "_tset_\"hi!\"Context", false);
        boolean boolean14 = python3Target1.templatesExist();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 64 + "'", int4 == 64);
        org.junit.Assert.assertNull(codeGenerator5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Python3" + "'", str6, "Python3");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "tset\\\"hi!" + "'", str8, "tset\\\"hi!");
        org.junit.Assert.assertNotNull(sTGroup9);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "tset_\\\"hi!\\\"Contex" + "'", str13, "tset_\\\"hi!\\\"Contex");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
    }

    @Test
    public void test1451() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1451");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet3 = python3Target1.getBadWords();
        int int4 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str6 = python3Target1.getAltLabelContextStructName("\"hi!\"");
        boolean boolean7 = python3Target1.templatesExist();
        int int8 = python3Target1.getSerializedATNSegmentLimit();
        org.antlr.v4.codegen.CodeGenerator codeGenerator9 = null;
        java.lang.String str12 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator9, "_tset\"_Python3\"", true);
        org.antlr.v4.tool.Grammar grammar13 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator14 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target15 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator14);
        int int16 = python3Target15.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet17 = python3Target15.getBadWords();
        int int18 = python3Target15.getInlineTestSetWordSize();
        java.lang.String str21 = python3Target15.getTargetStringLiteralFromString("_tset\"hi!\"", false);
        org.antlr.v4.codegen.CodeGenerator codeGenerator22 = python3Target15.getCodeGenerator();
        boolean boolean23 = python3Target15.supportsOverloadedMethods();
        java.lang.String str25 = python3Target15.getAltLabelContextStructName("\"Python3\"");
        boolean boolean26 = python3Target15.wantsBaseListener();
        int int27 = python3Target15.getInlineTestSetWordSize();
        boolean boolean28 = python3Target15.wantsBaseListener();
        org.antlr.v4.tool.Grammar grammar29 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator30 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target31 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator30);
        int int32 = python3Target31.getInlineTestSetWordSize();
        java.lang.String str34 = python3Target31.getImplicitSetLabel("\"hi!\"");
        java.lang.String str36 = python3Target31.encodeIntAsCharEscape(0);
        java.lang.String str37 = python3Target31.getVersion();
        java.lang.String str39 = python3Target31.getTargetStringLiteralFromString("hi!");
        org.antlr.v4.tool.Grammar grammar40 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator41 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target42 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator41);
        boolean boolean43 = python3Target42.supportsOverloadedMethods();
        java.lang.String str45 = python3Target42.getTargetStringLiteralFromString("_Python3");
        org.antlr.v4.tool.Grammar grammar46 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator47 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target48 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator47);
        int int49 = python3Target48.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet50 = python3Target48.getBadWords();
        int int51 = python3Target48.getInlineTestSetWordSize();
        org.antlr.v4.codegen.CodeGenerator codeGenerator52 = python3Target48.getCodeGenerator();
        java.lang.String str54 = python3Target48.getImplicitSetLabel("_\"hi!\"Context");
        java.lang.String str56 = python3Target48.getImplicitSetLabel("_tset");
        java.lang.String str58 = python3Target48.getImplicitSetLabel("\"\\\"Python3\\\"Context\"");
        int int59 = python3Target48.getSerializedATNSegmentLimit();
        org.antlr.v4.tool.Grammar grammar60 = null;
        int[] intArray61 = new int[] {};
        java.lang.String[] strArray62 = python3Target48.getTokenTypesAsTargetLabels(grammar60, intArray61);
        java.lang.String[] strArray63 = python3Target42.getTokenTypesAsTargetLabels(grammar46, intArray61);
        java.lang.String[] strArray64 = python3Target31.getTokenTypesAsTargetLabels(grammar40, intArray61);
        java.lang.String[] strArray65 = python3Target15.getTokenTypesAsTargetLabels(grammar29, intArray61);
        java.lang.String[] strArray66 = python3Target1.getTokenTypesAsTargetLabels(grammar13, intArray61);
        java.lang.String str67 = python3Target1.getVersion();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 64 + "'", int4 == 64);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\"hi!\"Context" + "'", str6, "\"hi!\"Context");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 29 + "'", int8 == 29);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "\"tset\\\"_Python3\"" + "'", str12, "\"tset\\\"_Python3\"");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 64 + "'", int16 == 64);
        org.junit.Assert.assertNotNull(strSet17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 64 + "'", int18 == 64);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "_tset\\\"hi!\\\"" + "'", str21, "_tset\\\"hi!\\\"");
        org.junit.Assert.assertNull(codeGenerator22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "\"Python3\"Context" + "'", str25, "\"Python3\"Context");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 64 + "'", int27 == 64);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 64 + "'", int32 == 64);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "_tset\"hi!\"" + "'", str34, "_tset\"hi!\"");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "\\0" + "'", str36, "\\0");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "4.5.2.1" + "'", str37, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "\"hi!\"" + "'", str39, "\"hi!\"");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "\"_Python3\"" + "'", str45, "\"_Python3\"");
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 64 + "'", int49 == 64);
        org.junit.Assert.assertNotNull(strSet50);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 64 + "'", int51 == 64);
        org.junit.Assert.assertNull(codeGenerator52);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "_tset_\"hi!\"Context" + "'", str54, "_tset_\"hi!\"Context");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "_tset_tset" + "'", str56, "_tset_tset");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "_tset\"\\\"Python3\\\"Context\"" + "'", str58, "_tset\"\\\"Python3\\\"Context\"");
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 29 + "'", int59 == 29);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[]");
        org.junit.Assert.assertNotNull(strArray62);
        org.junit.Assert.assertNotNull(strArray63);
        org.junit.Assert.assertNotNull(strArray64);
        org.junit.Assert.assertNotNull(strArray65);
        org.junit.Assert.assertNotNull(strArray66);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "4.5.2.1" + "'", str67, "4.5.2.1");
    }

    @Test
    public void test1452() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1452");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str5 = python3Target1.getTargetStringLiteralFromString("", false);
        java.util.Set<java.lang.String> strSet6 = python3Target1.getBadWords();
        java.util.Set<java.lang.String> strSet7 = python3Target1.getBadWords();
        java.lang.String str9 = python3Target1.getTargetStringLiteralFromString("\"\\\"\\\\\\\"Python3\\\\\\\"Context\\\"\"");
        boolean boolean10 = python3Target1.wantsBaseVisitor();
        org.stringtemplate.v4.STGroup sTGroup11 = python3Target1.getTemplates();
        org.antlr.v4.tool.Grammar grammar12 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator13 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target14 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator13);
        int int15 = python3Target14.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet16 = python3Target14.getBadWords();
        java.lang.String str17 = python3Target14.getLanguage();
        java.lang.String str19 = python3Target14.getImplicitSetLabel("_tset_\"hi!\"Context");
        java.lang.String str21 = python3Target14.getListLabel("_tsettset\\\"hi!");
        java.lang.String str23 = python3Target14.getAltLabelContextStructName("\"\\\"_Python3\\\"\"");
        org.antlr.v4.tool.Grammar grammar24 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator25 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target26 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator25);
        int int27 = python3Target26.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet28 = python3Target26.getBadWords();
        int int29 = python3Target26.getInlineTestSetWordSize();
        java.lang.String str31 = python3Target26.getAltLabelContextStructName("\"hi!\"");
        java.lang.String str32 = python3Target26.getVersion();
        boolean boolean33 = python3Target26.supportsOverloadedMethods();
        java.util.Set<java.lang.String> strSet34 = python3Target26.getBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator35 = python3Target26.getCodeGenerator();
        org.antlr.v4.tool.Grammar grammar36 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator37 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target38 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator37);
        int int39 = python3Target38.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet40 = python3Target38.getBadWords();
        int int41 = python3Target38.getInlineTestSetWordSize();
        java.lang.String str44 = python3Target38.getTargetStringLiteralFromString("_tset\"hi!\"", false);
        org.antlr.v4.codegen.CodeGenerator codeGenerator45 = python3Target38.getCodeGenerator();
        boolean boolean46 = python3Target38.templatesExist();
        org.antlr.v4.tool.Grammar grammar47 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator48 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target49 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator48);
        int int50 = python3Target49.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet51 = python3Target49.getBadWords();
        int int52 = python3Target49.getInlineTestSetWordSize();
        org.antlr.v4.codegen.CodeGenerator codeGenerator53 = python3Target49.getCodeGenerator();
        java.lang.String str55 = python3Target49.getImplicitSetLabel("_\"hi!\"Context");
        java.lang.String str57 = python3Target49.getImplicitSetLabel("_tset");
        java.lang.String str59 = python3Target49.getImplicitSetLabel("\"\\\"Python3\\\"Context\"");
        int int60 = python3Target49.getSerializedATNSegmentLimit();
        org.antlr.v4.tool.Grammar grammar61 = null;
        int[] intArray62 = new int[] {};
        java.lang.String[] strArray63 = python3Target49.getTokenTypesAsTargetLabels(grammar61, intArray62);
        java.lang.String[] strArray64 = python3Target38.getTokenTypesAsTargetLabels(grammar47, intArray62);
        java.lang.String[] strArray65 = python3Target26.getTokenTypesAsTargetLabels(grammar36, intArray62);
        java.lang.String[] strArray66 = python3Target14.getTokenTypesAsTargetLabels(grammar24, intArray62);
        java.lang.String[] strArray67 = python3Target1.getTokenTypesAsTargetLabels(grammar12, intArray62);
        boolean boolean68 = python3Target1.wantsBaseListener();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNotNull(strSet6);
        org.junit.Assert.assertNotNull(strSet7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\"\\\"\\\\\\\"\\\\\\\\\\\\\\\"Python3\\\\\\\\\\\\\\\"Context\\\\\\\"\\\"\"" + "'", str9, "\"\\\"\\\\\\\"\\\\\\\\\\\\\\\"Python3\\\\\\\\\\\\\\\"Context\\\\\\\"\\\"\"");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(sTGroup11);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 64 + "'", int15 == 64);
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Python3" + "'", str17, "Python3");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "_tset_tset_\"hi!\"Context" + "'", str19, "_tset_tset_\"hi!\"Context");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "_tsettset\\\"hi!" + "'", str21, "_tsettset\\\"hi!");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "\"\\\"_Python3\\\"\"Context" + "'", str23, "\"\\\"_Python3\\\"\"Context");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 64 + "'", int27 == 64);
        org.junit.Assert.assertNotNull(strSet28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 64 + "'", int29 == 64);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "\"hi!\"Context" + "'", str31, "\"hi!\"Context");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "4.5.2.1" + "'", str32, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(strSet34);
        org.junit.Assert.assertNull(codeGenerator35);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 64 + "'", int39 == 64);
        org.junit.Assert.assertNotNull(strSet40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 64 + "'", int41 == 64);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "_tset\\\"hi!\\\"" + "'", str44, "_tset\\\"hi!\\\"");
        org.junit.Assert.assertNull(codeGenerator45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 64 + "'", int50 == 64);
        org.junit.Assert.assertNotNull(strSet51);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 64 + "'", int52 == 64);
        org.junit.Assert.assertNull(codeGenerator53);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "_tset_\"hi!\"Context" + "'", str55, "_tset_\"hi!\"Context");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "_tset_tset" + "'", str57, "_tset_tset");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "_tset\"\\\"Python3\\\"Context\"" + "'", str59, "_tset\"\\\"Python3\\\"Context\"");
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 29 + "'", int60 == 29);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[]");
        org.junit.Assert.assertNotNull(strArray63);
        org.junit.Assert.assertNotNull(strArray64);
        org.junit.Assert.assertNotNull(strArray65);
        org.junit.Assert.assertNotNull(strArray66);
        org.junit.Assert.assertNotNull(strArray67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
    }

    @Test
    public void test1453() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1453");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet3 = python3Target1.getBadWords();
        int int4 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str7 = python3Target1.getTargetStringLiteralFromString("_tset\"hi!\"", false);
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = python3Target1.getCodeGenerator();
        boolean boolean9 = python3Target1.templatesExist();
        java.util.Set<java.lang.String> strSet10 = python3Target1.getBadWords();
        java.lang.String str12 = python3Target1.getListLabel("_tset_\"Python3\"");
        org.antlr.v4.tool.ast.GrammarAST grammarAST13 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean14 = python3Target1.grammarSymbolCausesIssueInGeneratedCode(grammarAST13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 64 + "'", int4 == 64);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "_tset\\\"hi!\\\"" + "'", str7, "_tset\\\"hi!\\\"");
        org.junit.Assert.assertNull(codeGenerator8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(strSet10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "_tset_\"Python3\"" + "'", str12, "_tset_\"Python3\"");
    }

    @Test
    public void test1454() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1454");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet3 = python3Target1.getBadWords();
        int int4 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str7 = python3Target1.getTargetStringLiteralFromString("_tset\"hi!\"", false);
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = python3Target1.getCodeGenerator();
        boolean boolean9 = python3Target1.supportsOverloadedMethods();
        boolean boolean10 = python3Target1.supportsOverloadedMethods();
        boolean boolean11 = python3Target1.wantsBaseVisitor();
        int int12 = python3Target1.getSerializedATNSegmentLimit();
        int int13 = python3Target1.getSerializedATNSegmentLimit();
        java.lang.String str15 = python3Target1.encodeIntAsCharEscape(29);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 64 + "'", int4 == 64);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "_tset\\\"hi!\\\"" + "'", str7, "_tset\\\"hi!\\\"");
        org.junit.Assert.assertNull(codeGenerator8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 29 + "'", int12 == 29);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 29 + "'", int13 == 29);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "\\35" + "'", str15, "\\35");
    }

    @Test
    public void test1455() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1455");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet3 = python3Target1.getBadWords();
        java.lang.String str4 = python3Target1.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator5 = python3Target1.getCodeGenerator();
        org.stringtemplate.v4.STGroup sTGroup6 = python3Target1.getTemplates();
        boolean boolean7 = python3Target1.wantsBaseListener();
        boolean boolean8 = python3Target1.wantsBaseListener();
        org.antlr.v4.codegen.CodeGenerator codeGenerator9 = python3Target1.getCodeGenerator();
        org.antlr.v4.tool.Grammar grammar10 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator11 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target12 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator11);
        int int13 = python3Target12.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet14 = python3Target12.getBadWords();
        int int15 = python3Target12.getInlineTestSetWordSize();
        java.lang.String str18 = python3Target12.getTargetStringLiteralFromString("_tset\"hi!\"", false);
        org.antlr.v4.codegen.CodeGenerator codeGenerator19 = python3Target12.getCodeGenerator();
        boolean boolean20 = python3Target12.supportsOverloadedMethods();
        org.antlr.v4.codegen.CodeGenerator codeGenerator21 = python3Target12.getCodeGenerator();
        int int22 = python3Target12.getSerializedATNSegmentLimit();
        java.lang.String str24 = python3Target12.getAltLabelContextStructName("\"tset_\\\\\\\"hi!\\\\\\\"Contex\"");
        org.antlr.v4.tool.Grammar grammar25 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator26 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target27 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator26);
        int int28 = python3Target27.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet29 = python3Target27.getBadWords();
        int int30 = python3Target27.getInlineTestSetWordSize();
        java.lang.String str33 = python3Target27.getTargetStringLiteralFromString("_tset\"hi!\"", false);
        boolean boolean34 = python3Target27.supportsOverloadedMethods();
        org.antlr.v4.codegen.CodeGenerator codeGenerator35 = null;
        java.lang.String str38 = python3Target27.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator35, "\".5.2.\"", false);
        java.lang.String str39 = python3Target27.getVersion();
        org.antlr.v4.tool.Grammar grammar40 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator41 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target42 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator41);
        int int43 = python3Target42.getInlineTestSetWordSize();
        java.lang.String str45 = python3Target42.getImplicitSetLabel("\"hi!\"");
        java.lang.String str47 = python3Target42.encodeIntAsCharEscape(0);
        java.lang.String str48 = python3Target42.getVersion();
        java.lang.String str50 = python3Target42.getTargetStringLiteralFromString("hi!");
        org.antlr.v4.tool.Grammar grammar51 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator52 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target53 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator52);
        boolean boolean54 = python3Target53.supportsOverloadedMethods();
        java.lang.String str56 = python3Target53.getTargetStringLiteralFromString("_Python3");
        org.antlr.v4.tool.Grammar grammar57 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator58 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target59 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator58);
        int int60 = python3Target59.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet61 = python3Target59.getBadWords();
        int int62 = python3Target59.getInlineTestSetWordSize();
        org.antlr.v4.codegen.CodeGenerator codeGenerator63 = python3Target59.getCodeGenerator();
        java.lang.String str65 = python3Target59.getImplicitSetLabel("_\"hi!\"Context");
        java.lang.String str67 = python3Target59.getImplicitSetLabel("_tset");
        java.lang.String str69 = python3Target59.getImplicitSetLabel("\"\\\"Python3\\\"Context\"");
        int int70 = python3Target59.getSerializedATNSegmentLimit();
        org.antlr.v4.tool.Grammar grammar71 = null;
        int[] intArray72 = new int[] {};
        java.lang.String[] strArray73 = python3Target59.getTokenTypesAsTargetLabels(grammar71, intArray72);
        java.lang.String[] strArray74 = python3Target53.getTokenTypesAsTargetLabels(grammar57, intArray72);
        java.lang.String[] strArray75 = python3Target42.getTokenTypesAsTargetLabels(grammar51, intArray72);
        java.lang.String[] strArray76 = python3Target27.getTokenTypesAsTargetLabels(grammar40, intArray72);
        java.lang.String[] strArray77 = python3Target12.getTokenTypesAsTargetLabels(grammar25, intArray72);
        java.lang.String[] strArray78 = python3Target1.getTokenTypesAsTargetLabels(grammar10, intArray72);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Python3" + "'", str4, "Python3");
        org.junit.Assert.assertNull(codeGenerator5);
        org.junit.Assert.assertNotNull(sTGroup6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(codeGenerator9);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 64 + "'", int13 == 64);
        org.junit.Assert.assertNotNull(strSet14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 64 + "'", int15 == 64);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "_tset\\\"hi!\\\"" + "'", str18, "_tset\\\"hi!\\\"");
        org.junit.Assert.assertNull(codeGenerator19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(codeGenerator21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 29 + "'", int22 == 29);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "\"tset_\\\\\\\"hi!\\\\\\\"Contex\"Context" + "'", str24, "\"tset_\\\\\\\"hi!\\\\\\\"Contex\"Context");
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 64 + "'", int28 == 64);
        org.junit.Assert.assertNotNull(strSet29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 64 + "'", int30 == 64);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "_tset\\\"hi!\\\"" + "'", str33, "_tset\\\"hi!\\\"");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + ".5.2." + "'", str38, ".5.2.");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "4.5.2.1" + "'", str39, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 64 + "'", int43 == 64);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "_tset\"hi!\"" + "'", str45, "_tset\"hi!\"");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "\\0" + "'", str47, "\\0");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "4.5.2.1" + "'", str48, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "\"hi!\"" + "'", str50, "\"hi!\"");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "\"_Python3\"" + "'", str56, "\"_Python3\"");
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 64 + "'", int60 == 64);
        org.junit.Assert.assertNotNull(strSet61);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 64 + "'", int62 == 64);
        org.junit.Assert.assertNull(codeGenerator63);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "_tset_\"hi!\"Context" + "'", str65, "_tset_\"hi!\"Context");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "_tset_tset" + "'", str67, "_tset_tset");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "_tset\"\\\"Python3\\\"Context\"" + "'", str69, "_tset\"\\\"Python3\\\"Context\"");
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 29 + "'", int70 == 29);
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[]");
        org.junit.Assert.assertNotNull(strArray73);
        org.junit.Assert.assertNotNull(strArray74);
        org.junit.Assert.assertNotNull(strArray75);
        org.junit.Assert.assertNotNull(strArray76);
        org.junit.Assert.assertNotNull(strArray77);
        org.junit.Assert.assertNotNull(strArray78);
    }

    @Test
    public void test1456() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1456");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet3 = python3Target1.getBadWords();
        int int4 = python3Target1.getInlineTestSetWordSize();
        org.stringtemplate.v4.STGroup sTGroup5 = python3Target1.getTemplates();
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = null;
        java.lang.String str9 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator6, "_tset\"hi!\"", false);
        boolean boolean10 = python3Target1.templatesExist();
        org.stringtemplate.v4.STGroup sTGroup11 = python3Target1.getTemplates();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 64 + "'", int4 == 64);
        org.junit.Assert.assertNotNull(sTGroup5);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "tset\\\"hi!" + "'", str9, "tset\\\"hi!");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(sTGroup11);
    }

    @Test
    public void test1457() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1457");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet3 = python3Target1.getBadWords();
        boolean boolean4 = python3Target1.wantsBaseListener();
        java.util.Set<java.lang.String> strSet5 = python3Target1.getBadWords();
        boolean boolean6 = python3Target1.templatesExist();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str8 = python3Target1.getImplicitTokenLabel("\"_tset_\\\\\\\"\\\\\\\\\\\\\\\"_\\\\\\\\\\\\\\\"hi!\\\\\\\\\\\\\\\"Contex\\\\\\\"Context\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
    }

    @Test
    public void test1458() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1458");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet3 = python3Target1.getBadWords();
        int int4 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str7 = python3Target1.getTargetStringLiteralFromString("_tset\"hi!\"", false);
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = python3Target1.getCodeGenerator();
        boolean boolean9 = python3Target1.supportsOverloadedMethods();
        java.lang.String str11 = python3Target1.getAltLabelContextStructName("\"Python3\"");
        boolean boolean12 = python3Target1.wantsBaseListener();
        org.stringtemplate.v4.STGroup sTGroup13 = python3Target1.getTemplates();
        int int14 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str17 = python3Target1.getTargetStringLiteralFromString("Tset\\\"hi!Context", true);
        java.lang.String str18 = python3Target1.getVersion();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str20 = python3Target1.getElementName("0");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 64 + "'", int4 == 64);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "_tset\\\"hi!\\\"" + "'", str7, "_tset\\\"hi!\\\"");
        org.junit.Assert.assertNull(codeGenerator8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "\"Python3\"Context" + "'", str11, "\"Python3\"Context");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(sTGroup13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 64 + "'", int14 == 64);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "\"Tset\\\\\\\"hi!Context\"" + "'", str17, "\"Tset\\\\\\\"hi!Context\"");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "4.5.2.1" + "'", str18, "4.5.2.1");
    }

    @Test
    public void test1459() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1459");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str4 = python3Target1.getImplicitSetLabel("\"hi!\"");
        java.lang.String str6 = python3Target1.encodeIntAsCharEscape(0);
        java.lang.String str8 = python3Target1.encodeIntAsCharEscape(100);
        org.antlr.v4.codegen.CodeGenerator codeGenerator9 = null;
        java.lang.String str12 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator9, "\\0Context", true);
        boolean boolean13 = python3Target1.wantsBaseVisitor();
        int int14 = python3Target1.getInlineTestSetWordSize();
        org.antlr.v4.tool.Grammar grammar15 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str17 = python3Target1.getTokenTypeAsTargetLabel(grammar15, 64);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "_tset\"hi!\"" + "'", str4, "_tset\"hi!\"");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\\0" + "'", str6, "\\0");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "d" + "'", str8, "d");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "\"0Contex\"" + "'", str12, "\"0Contex\"");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 64 + "'", int14 == 64);
    }

    @Test
    public void test1460() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1460");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        int int3 = python3Target1.getSerializedATNSegmentLimit();
        org.antlr.v4.tool.Rule rule4 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str5 = python3Target1.getRuleFunctionContextStructName(rule4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 29 + "'", int3 == 29);
    }

    @Test
    public void test1461() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1461");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str4 = python3Target1.getImplicitSetLabel("\"hi!\"");
        java.lang.String str6 = python3Target1.encodeIntAsCharEscape(0);
        java.lang.String str7 = python3Target1.getVersion();
        org.stringtemplate.v4.STGroup sTGroup8 = python3Target1.getTemplates();
        org.antlr.v4.tool.Grammar grammar9 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str11 = python3Target1.getTokenTypeAsTargetLabel(grammar9, (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "_tset\"hi!\"" + "'", str4, "_tset\"hi!\"");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\\0" + "'", str6, "\\0");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "4.5.2.1" + "'", str7, "4.5.2.1");
        org.junit.Assert.assertNotNull(sTGroup8);
    }

    @Test
    public void test1462() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1462");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str4 = python3Target1.getImplicitSetLabel("\"hi!\"");
        java.lang.String str6 = python3Target1.encodeIntAsCharEscape(0);
        boolean boolean7 = python3Target1.supportsOverloadedMethods();
        int int8 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str10 = python3Target1.getImplicitRuleLabel("_tset_\"hi!\"ContextContext");
        org.antlr.v4.codegen.CodeGenerator codeGenerator11 = python3Target1.getCodeGenerator();
        org.antlr.v4.codegen.CodeGenerator codeGenerator12 = null;
        java.lang.String str15 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator12, "__\"\\\"_\\\"hi!\\\"Contex\"Context", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator16 = python3Target1.getCodeGenerator();
        java.lang.String str18 = python3Target1.getListLabel("\\\"\\\\\\\"\\\\\\\\\\\\\\\"Python3\\\\\\\\\\\\\\\"Context\\\\\\\"\\\"Context");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "_tset\"hi!\"" + "'", str4, "_tset\"hi!\"");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\\0" + "'", str6, "\\0");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 64 + "'", int8 == 64);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "__tset_\"hi!\"ContextContext" + "'", str10, "__tset_\"hi!\"ContextContext");
        org.junit.Assert.assertNull(codeGenerator11);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "\"_\\\"\\\"_\\\"hi!\\\"Contex\\\"Contex\"" + "'", str15, "\"_\\\"\\\"_\\\"hi!\\\"Contex\\\"Contex\"");
        org.junit.Assert.assertNull(codeGenerator16);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "\\\"\\\\\\\"\\\\\\\\\\\\\\\"Python3\\\\\\\\\\\\\\\"Context\\\\\\\"\\\"Context" + "'", str18, "\\\"\\\\\\\"\\\\\\\\\\\\\\\"Python3\\\\\\\\\\\\\\\"Context\\\\\\\"\\\"Context");
    }

    @Test
    public void test1463() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1463");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet3 = python3Target1.getBadWords();
        int int4 = python3Target1.getInlineTestSetWordSize();
        org.antlr.v4.codegen.CodeGenerator codeGenerator5 = python3Target1.getCodeGenerator();
        java.lang.String str7 = python3Target1.getImplicitSetLabel("_\"hi!\"Context");
        java.lang.String str9 = python3Target1.getImplicitSetLabel("_tset");
        java.lang.String str11 = python3Target1.encodeIntAsCharEscape((int) (short) 0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 64 + "'", int4 == 64);
        org.junit.Assert.assertNull(codeGenerator5);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "_tset_\"hi!\"Context" + "'", str7, "_tset_\"hi!\"Context");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "_tset_tset" + "'", str9, "_tset_tset");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "\\0" + "'", str11, "\\0");
    }

    @Test
    public void test1464() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1464");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet3 = python3Target1.getBadWords();
        int int4 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str7 = python3Target1.getTargetStringLiteralFromString("_tset\"hi!\"", false);
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = python3Target1.getCodeGenerator();
        boolean boolean9 = python3Target1.supportsOverloadedMethods();
        java.lang.String str11 = python3Target1.getAltLabelContextStructName("\"Python3\"");
        boolean boolean12 = python3Target1.wantsBaseListener();
        org.stringtemplate.v4.STGroup sTGroup13 = python3Target1.getTemplates();
        org.stringtemplate.v4.STGroup sTGroup14 = python3Target1.getTemplates();
        java.util.Set<java.lang.String> strSet15 = python3Target1.getBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator16 = python3Target1.getCodeGenerator();
        boolean boolean17 = python3Target1.wantsBaseVisitor();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 64 + "'", int4 == 64);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "_tset\\\"hi!\\\"" + "'", str7, "_tset\\\"hi!\\\"");
        org.junit.Assert.assertNull(codeGenerator8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "\"Python3\"Context" + "'", str11, "\"Python3\"Context");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(sTGroup13);
        org.junit.Assert.assertNotNull(sTGroup14);
        org.junit.Assert.assertNotNull(strSet15);
        org.junit.Assert.assertNull(codeGenerator16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    }

    @Test
    public void test1465() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1465");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet3 = python3Target1.getBadWords();
        int int4 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str7 = python3Target1.getTargetStringLiteralFromString("_tset\"hi!\"", false);
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = python3Target1.getCodeGenerator();
        boolean boolean9 = python3Target1.supportsOverloadedMethods();
        java.lang.String str11 = python3Target1.getAltLabelContextStructName("\"Python3\"");
        boolean boolean12 = python3Target1.wantsBaseListener();
        org.stringtemplate.v4.STGroup sTGroup13 = python3Target1.getTemplates();
        org.antlr.v4.codegen.CodeGenerator codeGenerator14 = null;
        java.lang.String str17 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator14, "\"\\\"_tset\\\"\"", false);
        java.lang.String str18 = python3Target1.getVersion();
        java.lang.String str19 = python3Target1.getLanguage();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 64 + "'", int4 == 64);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "_tset\\\"hi!\\\"" + "'", str7, "_tset\\\"hi!\\\"");
        org.junit.Assert.assertNull(codeGenerator8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "\"Python3\"Context" + "'", str11, "\"Python3\"Context");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(sTGroup13);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "\\\"_tset\\\"" + "'", str17, "\\\"_tset\\\"");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "4.5.2.1" + "'", str18, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Python3" + "'", str19, "Python3");
    }

    @Test
    public void test1466() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1466");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str4 = python3Target1.getImplicitSetLabel("\"hi!\"");
        java.lang.String str6 = python3Target1.encodeIntAsCharEscape(0);
        boolean boolean7 = python3Target1.supportsOverloadedMethods();
        int int8 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str10 = python3Target1.getImplicitRuleLabel("_tset_\"hi!\"ContextContext");
        org.stringtemplate.v4.STGroup sTGroup11 = python3Target1.getTemplates();
        org.stringtemplate.v4.STGroup sTGroup12 = python3Target1.getTemplates();
        java.lang.String str13 = python3Target1.getVersion();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "_tset\"hi!\"" + "'", str4, "_tset\"hi!\"");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\\0" + "'", str6, "\\0");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 64 + "'", int8 == 64);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "__tset_\"hi!\"ContextContext" + "'", str10, "__tset_\"hi!\"ContextContext");
        org.junit.Assert.assertNotNull(sTGroup11);
        org.junit.Assert.assertNotNull(sTGroup12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "4.5.2.1" + "'", str13, "4.5.2.1");
    }

    @Test
    public void test1467() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1467");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str4 = python3Target1.getImplicitSetLabel("\"hi!\"");
        java.lang.String str6 = python3Target1.encodeIntAsCharEscape(0);
        java.lang.String str7 = python3Target1.getVersion();
        java.lang.String str9 = python3Target1.getTargetStringLiteralFromString("hi!");
        java.lang.String str11 = python3Target1.encodeIntAsCharEscape((int) (short) 10);
        int int12 = python3Target1.getInlineTestSetWordSize();
        int int13 = python3Target1.getSerializedATNSegmentLimit();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "_tset\"hi!\"" + "'", str4, "_tset\"hi!\"");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\\0" + "'", str6, "\\0");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "4.5.2.1" + "'", str7, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\"hi!\"" + "'", str9, "\"hi!\"");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "\\n" + "'", str11, "\\n");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 64 + "'", int12 == 64);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 29 + "'", int13 == 29);
    }

    @Test
    public void test1468() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1468");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        org.antlr.v4.codegen.CodeGenerator codeGenerator2 = null;
        java.lang.String str5 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator2, "4.5.2.1", true);
        java.lang.String str6 = python3Target1.getVersion();
        int int7 = python3Target1.getSerializedATNSegmentLimit();
        java.lang.String str9 = python3Target1.getListLabel("tset_\\\"hi!\\\"Contex");
        boolean boolean10 = python3Target1.wantsBaseVisitor();
        org.antlr.v4.codegen.CodeGenerator codeGenerator11 = null;
        java.lang.String str14 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator11, "Tset_\\\"hi!\\\"ContexContext", false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "\".5.2.\"" + "'", str5, "\".5.2.\"");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "4.5.2.1" + "'", str6, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 29 + "'", int7 == 29);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "tset_\\\"hi!\\\"Contex" + "'", str9, "tset_\\\"hi!\\\"Contex");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "set_\\\"hi!\\\"ContexContex" + "'", str14, "set_\\\"hi!\\\"ContexContex");
    }

    @Test
    public void test1469() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1469");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.supportsOverloadedMethods();
        java.lang.String str4 = python3Target1.getListLabel("\"_Python3\"");
        java.lang.String str6 = python3Target1.getAltLabelContextStructName("\\0");
        boolean boolean7 = python3Target1.templatesExist();
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = null;
        java.lang.String str11 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator8, "d", false);
        java.util.Set<java.lang.String> strSet12 = python3Target1.getBadWords();
        java.lang.String str15 = python3Target1.getTargetStringLiteralFromString("\\\"_\\\\\\\"Python3\\\\\\\"\\\"", true);
        java.util.Set<java.lang.String> strSet16 = python3Target1.getBadWords();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "\"_Python3\"" + "'", str4, "\"_Python3\"");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\\0Context" + "'", str6, "\\0Context");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "\"\\\\\\\"_\\\\\\\\\\\\\\\"Python3\\\\\\\\\\\\\\\"\\\\\\\"\"" + "'", str15, "\"\\\\\\\"_\\\\\\\\\\\\\\\"Python3\\\\\\\\\\\\\\\"\\\\\\\"\"");
        org.junit.Assert.assertNotNull(strSet16);
    }

    @Test
    public void test1470() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1470");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet3 = python3Target1.getBadWords();
        int int4 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str7 = python3Target1.getTargetStringLiteralFromString("_tset\"hi!\"", false);
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = python3Target1.getCodeGenerator();
        boolean boolean9 = python3Target1.templatesExist();
        java.lang.String str11 = python3Target1.getListLabel("\"hi!\"Context");
        java.lang.String str13 = python3Target1.getListLabel("_tset");
        boolean boolean14 = python3Target1.wantsBaseVisitor();
        java.lang.String str16 = python3Target1.getListLabel("_tset\"\\\"_\\\\\\\"Python3\\\\\\\"\\\"Context\"");
        java.lang.String str17 = python3Target1.getVersion();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 64 + "'", int4 == 64);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "_tset\\\"hi!\\\"" + "'", str7, "_tset\\\"hi!\\\"");
        org.junit.Assert.assertNull(codeGenerator8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "\"hi!\"Context" + "'", str11, "\"hi!\"Context");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "_tset" + "'", str13, "_tset");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "_tset\"\\\"_\\\\\\\"Python3\\\\\\\"\\\"Context\"" + "'", str16, "_tset\"\\\"_\\\\\\\"Python3\\\\\\\"\\\"Context\"");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "4.5.2.1" + "'", str17, "4.5.2.1");
    }

    @Test
    public void test1471() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1471");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet3 = python3Target1.getBadWords();
        int int4 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str7 = python3Target1.getTargetStringLiteralFromString("_tset\"hi!\"", false);
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = python3Target1.getCodeGenerator();
        boolean boolean9 = python3Target1.supportsOverloadedMethods();
        boolean boolean10 = python3Target1.supportsOverloadedMethods();
        boolean boolean11 = python3Target1.wantsBaseVisitor();
        int int12 = python3Target1.getSerializedATNSegmentLimit();
        int int13 = python3Target1.getSerializedATNSegmentLimit();
        java.lang.String str15 = python3Target1.getTargetStringLiteralFromString("#");
        java.lang.String str17 = python3Target1.getImplicitSetLabel("hi!");
        boolean boolean18 = python3Target1.wantsBaseVisitor();
        java.lang.String str21 = python3Target1.getTargetStringLiteralFromString("", true);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 64 + "'", int4 == 64);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "_tset\\\"hi!\\\"" + "'", str7, "_tset\\\"hi!\\\"");
        org.junit.Assert.assertNull(codeGenerator8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 29 + "'", int12 == 29);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 29 + "'", int13 == 29);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "\"#\"" + "'", str15, "\"#\"");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "_tsethi!" + "'", str17, "_tsethi!");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "\"\"" + "'", str21, "\"\"");
    }

    @Test
    public void test1472() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1472");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet3 = python3Target1.getBadWords();
        int int4 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str7 = python3Target1.getTargetStringLiteralFromString("_tset\"hi!\"", false);
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = python3Target1.getCodeGenerator();
        boolean boolean9 = python3Target1.supportsOverloadedMethods();
        boolean boolean10 = python3Target1.supportsOverloadedMethods();
        boolean boolean11 = python3Target1.wantsBaseVisitor();
        java.lang.String str13 = python3Target1.getTargetStringLiteralFromString("\"_Python3\"");
        java.lang.String str14 = python3Target1.getVersion();
        java.lang.String str16 = python3Target1.getTargetStringLiteralFromString("DContext");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 64 + "'", int4 == 64);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "_tset\\\"hi!\\\"" + "'", str7, "_tset\\\"hi!\\\"");
        org.junit.Assert.assertNull(codeGenerator8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "\"\\\"_Python3\\\"\"" + "'", str13, "\"\\\"_Python3\\\"\"");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "4.5.2.1" + "'", str14, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "\"DContext\"" + "'", str16, "\"DContext\"");
    }

    @Test
    public void test1473() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1473");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet3 = python3Target1.getBadWords();
        int int4 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str7 = python3Target1.getTargetStringLiteralFromString("_tset\"hi!\"", false);
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = python3Target1.getCodeGenerator();
        boolean boolean9 = python3Target1.templatesExist();
        java.lang.String str11 = python3Target1.getListLabel("\"hi!\"Context");
        java.lang.String str13 = python3Target1.getListLabel("Python3");
        java.lang.String str15 = python3Target1.getImplicitRuleLabel("\"\\\"hi!\\\"\"Context");
        boolean boolean16 = python3Target1.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup17 = python3Target1.getTemplates();
        org.antlr.v4.codegen.CodeGenerator codeGenerator18 = python3Target1.getCodeGenerator();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 64 + "'", int4 == 64);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "_tset\\\"hi!\\\"" + "'", str7, "_tset\\\"hi!\\\"");
        org.junit.Assert.assertNull(codeGenerator8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "\"hi!\"Context" + "'", str11, "\"hi!\"Context");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Python3" + "'", str13, "Python3");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "_\"\\\"hi!\\\"\"Context" + "'", str15, "_\"\\\"hi!\\\"\"Context");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(sTGroup17);
        org.junit.Assert.assertNull(codeGenerator18);
    }

    @Test
    public void test1474() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1474");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str5 = python3Target1.getTargetStringLiteralFromString("", false);
        java.util.Set<java.lang.String> strSet6 = python3Target1.getBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = null;
        java.lang.String str10 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator7, "__\"hi!\"Context", true);
        java.lang.String str12 = python3Target1.getImplicitRuleLabel("Et\\\"hContext");
        org.antlr.v4.codegen.CodeGenerator codeGenerator13 = null;
        java.lang.String str16 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator13, "_tset\"_Python3\"", true);
        java.lang.String str18 = python3Target1.getTargetStringLiteralFromString("tset\\\\\\\"\\\\\\\"Python3\\\\\\\"Context");
        boolean boolean19 = python3Target1.wantsBaseVisitor();
        org.antlr.v4.tool.ast.GrammarAST grammarAST20 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str21 = python3Target1.getLoopCounter(grammarAST20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNotNull(strSet6);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\"_\\\"hi!\\\"Contex\"" + "'", str10, "\"_\\\"hi!\\\"Contex\"");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "_Et\\\"hContext" + "'", str12, "_Et\\\"hContext");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "\"tset\\\"_Python3\"" + "'", str16, "\"tset\\\"_Python3\"");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "\"tset\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"Python3\\\\\\\\\\\\\\\"Context\"" + "'", str18, "\"tset\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"Python3\\\\\\\\\\\\\\\"Context\"");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    }

    @Test
    public void test1475() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1475");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet3 = python3Target1.getBadWords();
        int int4 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str7 = python3Target1.getTargetStringLiteralFromString("_tset\"hi!\"", false);
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = python3Target1.getCodeGenerator();
        boolean boolean9 = python3Target1.supportsOverloadedMethods();
        java.lang.String str11 = python3Target1.getAltLabelContextStructName("\"Python3\"");
        java.lang.String str13 = python3Target1.getImplicitRuleLabel("");
        java.lang.String str15 = python3Target1.getListLabel("_tset_\"hi!\"ContextContext");
        java.lang.String str17 = python3Target1.encodeIntAsCharEscape(10);
        java.lang.String str19 = python3Target1.getImplicitSetLabel("\"_tsettset\\\\\\\"hi!\"");
        boolean boolean20 = python3Target1.supportsOverloadedMethods();
        boolean boolean21 = python3Target1.wantsBaseListener();
        boolean boolean22 = python3Target1.wantsBaseListener();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 64 + "'", int4 == 64);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "_tset\\\"hi!\\\"" + "'", str7, "_tset\\\"hi!\\\"");
        org.junit.Assert.assertNull(codeGenerator8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "\"Python3\"Context" + "'", str11, "\"Python3\"Context");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "_" + "'", str13, "_");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "_tset_\"hi!\"ContextContext" + "'", str15, "_tset_\"hi!\"ContextContext");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "\\n" + "'", str17, "\\n");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "_tset\"_tsettset\\\\\\\"hi!\"" + "'", str19, "_tset\"_tsettset\\\\\\\"hi!\"");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
    }

    @Test
    public void test1476() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1476");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet3 = python3Target1.getBadWords();
        int int4 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str7 = python3Target1.getTargetStringLiteralFromString("_tset\"hi!\"", false);
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = python3Target1.getCodeGenerator();
        boolean boolean9 = python3Target1.templatesExist();
        java.lang.String str11 = python3Target1.getListLabel("\"hi!\"Context");
        java.lang.String str13 = python3Target1.getListLabel("_tset");
        boolean boolean14 = python3Target1.wantsBaseListener();
        java.lang.String str16 = python3Target1.getAltLabelContextStructName("\\0ContextContext");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str18 = python3Target1.getImplicitTokenLabel("\\nContext");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 64 + "'", int4 == 64);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "_tset\\\"hi!\\\"" + "'", str7, "_tset\\\"hi!\\\"");
        org.junit.Assert.assertNull(codeGenerator8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "\"hi!\"Context" + "'", str11, "\"hi!\"Context");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "_tset" + "'", str13, "_tset");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "\\0ContextContextContext" + "'", str16, "\\0ContextContextContext");
    }

    @Test
    public void test1477() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1477");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet3 = python3Target1.getBadWords();
        int int4 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str7 = python3Target1.getTargetStringLiteralFromString("_tset\"hi!\"", false);
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = python3Target1.getCodeGenerator();
        boolean boolean9 = python3Target1.supportsOverloadedMethods();
        java.lang.String str11 = python3Target1.getAltLabelContextStructName("\"Python3\"");
        boolean boolean12 = python3Target1.wantsBaseListener();
        org.stringtemplate.v4.STGroup sTGroup13 = python3Target1.getTemplates();
        org.stringtemplate.v4.STGroup sTGroup14 = python3Target1.getTemplates();
        java.util.Set<java.lang.String> strSet15 = python3Target1.getBadWords();
        java.lang.String str17 = python3Target1.encodeIntAsCharEscape((int) '4');
        java.lang.String str20 = python3Target1.getTargetStringLiteralFromString("\"_tsettset\\\\\\\"\\\\\\\"_\\\\\\\\\\\\\\\"Python3\\\\\\\\\\\\\\\"\\\\\\\"Context\"", false);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 64 + "'", int4 == 64);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "_tset\\\"hi!\\\"" + "'", str7, "_tset\\\"hi!\\\"");
        org.junit.Assert.assertNull(codeGenerator8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "\"Python3\"Context" + "'", str11, "\"Python3\"Context");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(sTGroup13);
        org.junit.Assert.assertNotNull(sTGroup14);
        org.junit.Assert.assertNotNull(strSet15);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "\\64" + "'", str17, "\\64");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "\\\"_tsettset\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"_\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"Python3\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"Context\\\"" + "'", str20, "\\\"_tsettset\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"_\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"Python3\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"Context\\\"");
    }

    @Test
    public void test1478() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1478");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet3 = python3Target1.getBadWords();
        int int4 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str7 = python3Target1.getTargetStringLiteralFromString("_tset\"hi!\"", false);
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = python3Target1.getCodeGenerator();
        boolean boolean9 = python3Target1.supportsOverloadedMethods();
        boolean boolean10 = python3Target1.supportsOverloadedMethods();
        java.lang.String str12 = python3Target1.getImplicitRuleLabel("_\"hi!\"Context");
        java.lang.String str14 = python3Target1.getImplicitRuleLabel("\"_\\\"hi!\\\"Contex\"");
        java.lang.String str15 = python3Target1.getVersion();
        org.antlr.v4.tool.ast.GrammarAST grammarAST16 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str17 = python3Target1.getLoopLabel(grammarAST16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 64 + "'", int4 == 64);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "_tset\\\"hi!\\\"" + "'", str7, "_tset\\\"hi!\\\"");
        org.junit.Assert.assertNull(codeGenerator8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "__\"hi!\"Context" + "'", str12, "__\"hi!\"Context");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "_\"_\\\"hi!\\\"Contex\"" + "'", str14, "_\"_\\\"hi!\\\"Contex\"");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "4.5.2.1" + "'", str15, "4.5.2.1");
    }

    @Test
    public void test1479() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1479");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str4 = python3Target1.getImplicitSetLabel("\"hi!\"");
        java.lang.String str6 = python3Target1.encodeIntAsCharEscape(0);
        java.lang.String str7 = python3Target1.getVersion();
        java.lang.String str9 = python3Target1.getTargetStringLiteralFromString("hi!");
        java.lang.String str11 = python3Target1.getListLabel("");
        int int12 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str14 = python3Target1.getTargetStringLiteralFromString("\"tset\\\\\\\"hi!\"");
        boolean boolean15 = python3Target1.supportsOverloadedMethods();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "_tset\"hi!\"" + "'", str4, "_tset\"hi!\"");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\\0" + "'", str6, "\\0");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "4.5.2.1" + "'", str7, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\"hi!\"" + "'", str9, "\"hi!\"");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 64 + "'", int12 == 64);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "\"\\\"tset\\\\\\\\\\\\\\\"hi!\\\"\"" + "'", str14, "\"\\\"tset\\\\\\\\\\\\\\\"hi!\\\"\"");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test1480() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1480");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str4 = python3Target1.getImplicitSetLabel("\"hi!\"");
        java.lang.String str6 = python3Target1.encodeIntAsCharEscape(0);
        java.lang.String str7 = python3Target1.getVersion();
        java.lang.String str9 = python3Target1.getImplicitRuleLabel("\"hi!\"Context");
        java.lang.String str11 = python3Target1.getTargetStringLiteralFromString("_Python3");
        boolean boolean12 = python3Target1.wantsBaseListener();
        org.stringtemplate.v4.STGroup sTGroup13 = python3Target1.getTemplates();
        org.antlr.v4.tool.ast.GrammarAST grammarAST14 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str15 = python3Target1.getLoopCounter(grammarAST14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "_tset\"hi!\"" + "'", str4, "_tset\"hi!\"");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\\0" + "'", str6, "\\0");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "4.5.2.1" + "'", str7, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "_\"hi!\"Context" + "'", str9, "_\"hi!\"Context");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "\"_Python3\"" + "'", str11, "\"_Python3\"");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(sTGroup13);
    }

    @Test
    public void test1481() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1481");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet3 = python3Target1.getBadWords();
        java.lang.String str4 = python3Target1.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator5 = python3Target1.getCodeGenerator();
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = python3Target1.getCodeGenerator();
        java.lang.String str8 = python3Target1.getImplicitSetLabel("\"\\\"_\\\"hi!\\\"Contex\"Context");
        int int9 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str11 = python3Target1.getImplicitRuleLabel("_\\nContext");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str13 = python3Target1.getElementListName("\"\\\"\\\\\\\"hi!\\\\\\\"\\\"Context\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Python3" + "'", str4, "Python3");
        org.junit.Assert.assertNull(codeGenerator5);
        org.junit.Assert.assertNull(codeGenerator6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "_tset\"\\\"_\\\"hi!\\\"Contex\"Context" + "'", str8, "_tset\"\\\"_\\\"hi!\\\"Contex\"Context");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 64 + "'", int9 == 64);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "__\\nContext" + "'", str11, "__\\nContext");
    }

    @Test
    public void test1482() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1482");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str4 = python3Target1.getImplicitSetLabel("\"hi!\"");
        java.lang.String str6 = python3Target1.encodeIntAsCharEscape(0);
        java.lang.String str7 = python3Target1.getVersion();
        java.lang.String str9 = python3Target1.getTargetStringLiteralFromString("hi!");
        boolean boolean10 = python3Target1.templatesExist();
        boolean boolean11 = python3Target1.wantsBaseListener();
        org.antlr.v4.tool.Rule rule12 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str13 = python3Target1.getRuleFunctionContextStructName(rule12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "_tset\"hi!\"" + "'", str4, "_tset\"hi!\"");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\\0" + "'", str6, "\\0");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "4.5.2.1" + "'", str7, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\"hi!\"" + "'", str9, "\"hi!\"");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test1483() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1483");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet3 = python3Target1.getBadWords();
        int int4 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str7 = python3Target1.getTargetStringLiteralFromString("_tset\"hi!\"", false);
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = python3Target1.getCodeGenerator();
        boolean boolean9 = python3Target1.templatesExist();
        java.lang.String str11 = python3Target1.getListLabel("\"hi!\"Context");
        java.lang.String str13 = python3Target1.getListLabel("Python3");
        java.lang.String str14 = python3Target1.getLanguage();
        java.lang.String str15 = python3Target1.getVersion();
        int int16 = python3Target1.getSerializedATNSegmentLimit();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 64 + "'", int4 == 64);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "_tset\\\"hi!\\\"" + "'", str7, "_tset\\\"hi!\\\"");
        org.junit.Assert.assertNull(codeGenerator8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "\"hi!\"Context" + "'", str11, "\"hi!\"Context");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Python3" + "'", str13, "Python3");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Python3" + "'", str14, "Python3");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "4.5.2.1" + "'", str15, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 29 + "'", int16 == 29);
    }

    @Test
    public void test1484() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1484");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet3 = python3Target1.getBadWords();
        int int4 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str7 = python3Target1.getTargetStringLiteralFromString("_tset\"hi!\"", false);
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = python3Target1.getCodeGenerator();
        boolean boolean9 = python3Target1.supportsOverloadedMethods();
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = python3Target1.getCodeGenerator();
        org.stringtemplate.v4.STGroup sTGroup11 = python3Target1.getTemplates();
        java.lang.String str13 = python3Target1.encodeIntAsCharEscape((int) (short) 100);
        java.lang.String str15 = python3Target1.encodeIntAsCharEscape((int) (byte) 0);
        java.lang.String str17 = python3Target1.encodeIntAsCharEscape((int) (short) 100);
        int int18 = python3Target1.getSerializedATNSegmentLimit();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 64 + "'", int4 == 64);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "_tset\\\"hi!\\\"" + "'", str7, "_tset\\\"hi!\\\"");
        org.junit.Assert.assertNull(codeGenerator8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(codeGenerator10);
        org.junit.Assert.assertNotNull(sTGroup11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "d" + "'", str13, "d");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "\\0" + "'", str15, "\\0");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "d" + "'", str17, "d");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 29 + "'", int18 == 29);
    }

    @Test
    public void test1485() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1485");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getSerializedATNSegmentLimit();
        int int3 = python3Target1.getInlineTestSetWordSize();
        int int4 = python3Target1.getSerializedATNSegmentLimit();
        boolean boolean5 = python3Target1.wantsBaseListener();
        java.lang.String str6 = python3Target1.getVersion();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 29 + "'", int2 == 29);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 64 + "'", int3 == 64);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 29 + "'", int4 == 29);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "4.5.2.1" + "'", str6, "4.5.2.1");
    }

    @Test
    public void test1486() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1486");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet3 = python3Target1.getBadWords();
        int int4 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str7 = python3Target1.getTargetStringLiteralFromString("_tset\"hi!\"", false);
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = python3Target1.getCodeGenerator();
        boolean boolean9 = python3Target1.supportsOverloadedMethods();
        java.util.Set<java.lang.String> strSet10 = python3Target1.getBadWords();
        java.lang.String str12 = python3Target1.encodeIntAsCharEscape((int) (byte) 10);
        java.lang.String str14 = python3Target1.getAltLabelContextStructName("\"\\\\\\\"\\\\\\\\\\\\\\\"hi!\\\\\\\\\\\\\\\"\\\\\\\"Context\"Context");
        java.lang.String str15 = python3Target1.getVersion();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 64 + "'", int4 == 64);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "_tset\\\"hi!\\\"" + "'", str7, "_tset\\\"hi!\\\"");
        org.junit.Assert.assertNull(codeGenerator8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(strSet10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "\\n" + "'", str12, "\\n");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "\"\\\\\\\"\\\\\\\\\\\\\\\"hi!\\\\\\\\\\\\\\\"\\\\\\\"Context\"ContextContext" + "'", str14, "\"\\\\\\\"\\\\\\\\\\\\\\\"hi!\\\\\\\\\\\\\\\"\\\\\\\"Context\"ContextContext");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "4.5.2.1" + "'", str15, "4.5.2.1");
    }

    @Test
    public void test1487() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1487");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet3 = python3Target1.getBadWords();
        int int4 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str7 = python3Target1.getTargetStringLiteralFromString("_tset\"hi!\"", false);
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = python3Target1.getCodeGenerator();
        boolean boolean9 = python3Target1.supportsOverloadedMethods();
        java.lang.String str11 = python3Target1.getAltLabelContextStructName("\"Python3\"");
        boolean boolean12 = python3Target1.wantsBaseListener();
        org.stringtemplate.v4.STGroup sTGroup13 = python3Target1.getTemplates();
        org.stringtemplate.v4.STGroup sTGroup14 = python3Target1.getTemplates();
        java.util.Set<java.lang.String> strSet15 = python3Target1.getBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator16 = python3Target1.getCodeGenerator();
        org.antlr.v4.tool.Grammar grammar17 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator18 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target19 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator18);
        int int20 = python3Target19.getInlineTestSetWordSize();
        java.lang.String str23 = python3Target19.getTargetStringLiteralFromString("", false);
        java.util.Set<java.lang.String> strSet24 = python3Target19.getBadWords();
        java.util.Set<java.lang.String> strSet25 = python3Target19.getBadWords();
        java.lang.String str27 = python3Target19.getImplicitRuleLabel("\"@\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator28 = null;
        java.lang.String str31 = python3Target19.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator28, "\\0ContextContext", false);
        java.lang.String str33 = python3Target19.getImplicitRuleLabel("\"\\\"_Python3\\\"\\\"ContextContex\"");
        org.antlr.v4.tool.Grammar grammar34 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator35 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target36 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator35);
        int int37 = python3Target36.getInlineTestSetWordSize();
        java.lang.String str39 = python3Target36.getImplicitSetLabel("\"hi!\"");
        java.lang.String str41 = python3Target36.encodeIntAsCharEscape(0);
        java.lang.String str42 = python3Target36.getVersion();
        java.lang.String str44 = python3Target36.getTargetStringLiteralFromString("hi!");
        java.lang.String str46 = python3Target36.getListLabel("");
        java.lang.String str47 = python3Target36.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator48 = null;
        java.lang.String str51 = python3Target36.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator48, "_tset_tset_\"hi!\"Context", false);
        org.stringtemplate.v4.STGroup sTGroup52 = python3Target36.getTemplates();
        org.antlr.v4.tool.Grammar grammar53 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator54 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target55 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator54);
        int int56 = python3Target55.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet57 = python3Target55.getBadWords();
        boolean boolean58 = python3Target55.wantsBaseListener();
        int int59 = python3Target55.getSerializedATNSegmentLimit();
        boolean boolean60 = python3Target55.wantsBaseVisitor();
        org.antlr.v4.tool.Grammar grammar61 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator62 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target63 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator62);
        int int64 = python3Target63.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet65 = python3Target63.getBadWords();
        int int66 = python3Target63.getInlineTestSetWordSize();
        org.antlr.v4.codegen.CodeGenerator codeGenerator67 = python3Target63.getCodeGenerator();
        java.lang.String str69 = python3Target63.getImplicitSetLabel("_\"hi!\"Context");
        java.lang.String str71 = python3Target63.getImplicitSetLabel("_tset");
        java.lang.String str73 = python3Target63.getImplicitSetLabel("\"\\\"Python3\\\"Context\"");
        int int74 = python3Target63.getSerializedATNSegmentLimit();
        org.antlr.v4.tool.Grammar grammar75 = null;
        int[] intArray76 = new int[] {};
        java.lang.String[] strArray77 = python3Target63.getTokenTypesAsTargetLabels(grammar75, intArray76);
        java.lang.String[] strArray78 = python3Target55.getTokenTypesAsTargetLabels(grammar61, intArray76);
        java.lang.String[] strArray79 = python3Target36.getTokenTypesAsTargetLabels(grammar53, intArray76);
        java.lang.String[] strArray80 = python3Target19.getTokenTypesAsTargetLabels(grammar34, intArray76);
        java.lang.String[] strArray81 = python3Target1.getTokenTypesAsTargetLabels(grammar17, intArray76);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 64 + "'", int4 == 64);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "_tset\\\"hi!\\\"" + "'", str7, "_tset\\\"hi!\\\"");
        org.junit.Assert.assertNull(codeGenerator8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "\"Python3\"Context" + "'", str11, "\"Python3\"Context");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(sTGroup13);
        org.junit.Assert.assertNotNull(sTGroup14);
        org.junit.Assert.assertNotNull(strSet15);
        org.junit.Assert.assertNull(codeGenerator16);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 64 + "'", int20 == 64);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertNotNull(strSet24);
        org.junit.Assert.assertNotNull(strSet25);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "_\"@\"" + "'", str27, "_\"@\"");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "0ContextContex" + "'", str31, "0ContextContex");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "_\"\\\"_Python3\\\"\\\"ContextContex\"" + "'", str33, "_\"\\\"_Python3\\\"\\\"ContextContex\"");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 64 + "'", int37 == 64);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "_tset\"hi!\"" + "'", str39, "_tset\"hi!\"");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "\\0" + "'", str41, "\\0");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "4.5.2.1" + "'", str42, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "\"hi!\"" + "'", str44, "\"hi!\"");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "" + "'", str46, "");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "4.5.2.1" + "'", str47, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "tset_tset_\\\"hi!\\\"Contex" + "'", str51, "tset_tset_\\\"hi!\\\"Contex");
        org.junit.Assert.assertNotNull(sTGroup52);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 64 + "'", int56 == 64);
        org.junit.Assert.assertNotNull(strSet57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 29 + "'", int59 == 29);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 64 + "'", int64 == 64);
        org.junit.Assert.assertNotNull(strSet65);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 64 + "'", int66 == 64);
        org.junit.Assert.assertNull(codeGenerator67);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "_tset_\"hi!\"Context" + "'", str69, "_tset_\"hi!\"Context");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "_tset_tset" + "'", str71, "_tset_tset");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "_tset\"\\\"Python3\\\"Context\"" + "'", str73, "_tset\"\\\"Python3\\\"Context\"");
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 29 + "'", int74 == 29);
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[]");
        org.junit.Assert.assertNotNull(strArray77);
        org.junit.Assert.assertNotNull(strArray78);
        org.junit.Assert.assertNotNull(strArray79);
        org.junit.Assert.assertNotNull(strArray80);
        org.junit.Assert.assertNotNull(strArray81);
    }

    @Test
    public void test1488() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1488");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet3 = python3Target1.getBadWords();
        int int4 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str7 = python3Target1.getTargetStringLiteralFromString("_tset\"hi!\"", false);
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = python3Target1.getCodeGenerator();
        boolean boolean9 = python3Target1.templatesExist();
        java.lang.String str11 = python3Target1.getListLabel("\"hi!\"Context");
        java.lang.String str13 = python3Target1.getListLabel("Python3");
        java.lang.String str15 = python3Target1.getImplicitRuleLabel("\"\\\"hi!\\\"\"Context");
        boolean boolean16 = python3Target1.supportsOverloadedMethods();
        java.lang.String str17 = python3Target1.getVersion();
        boolean boolean18 = python3Target1.wantsBaseVisitor();
        java.lang.String str20 = python3Target1.getImplicitSetLabel("\"Tset\\\\\\\"hi!Context\"Context");
        int int21 = python3Target1.getInlineTestSetWordSize();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str23 = python3Target1.getImplicitTokenLabel("_\"Python3\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 64 + "'", int4 == 64);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "_tset\\\"hi!\\\"" + "'", str7, "_tset\\\"hi!\\\"");
        org.junit.Assert.assertNull(codeGenerator8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "\"hi!\"Context" + "'", str11, "\"hi!\"Context");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Python3" + "'", str13, "Python3");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "_\"\\\"hi!\\\"\"Context" + "'", str15, "_\"\\\"hi!\\\"\"Context");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "4.5.2.1" + "'", str17, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "_tset\"Tset\\\\\\\"hi!Context\"Context" + "'", str20, "_tset\"Tset\\\\\\\"hi!Context\"Context");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 64 + "'", int21 == 64);
    }

    @Test
    public void test1489() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1489");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet3 = python3Target1.getBadWords();
        java.lang.String str4 = python3Target1.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator5 = python3Target1.getCodeGenerator();
        java.lang.String str7 = python3Target1.getTargetStringLiteralFromString("_Python3");
        int int8 = python3Target1.getSerializedATNSegmentLimit();
        java.lang.String str10 = python3Target1.getAltLabelContextStructName("\"\\\"hi!\\\"\"Context");
        boolean boolean11 = python3Target1.wantsBaseVisitor();
        int int12 = python3Target1.getInlineTestSetWordSize();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Python3" + "'", str4, "Python3");
        org.junit.Assert.assertNull(codeGenerator5);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "\"_Python3\"" + "'", str7, "\"_Python3\"");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 29 + "'", int8 == 29);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\"\\\"hi!\\\"\"ContextContext" + "'", str10, "\"\\\"hi!\\\"\"ContextContext");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 64 + "'", int12 == 64);
    }

    @Test
    public void test1490() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1490");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.supportsOverloadedMethods();
        java.lang.String str4 = python3Target1.getListLabel("\"_Python3\"");
        boolean boolean5 = python3Target1.supportsOverloadedMethods();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str7 = python3Target1.getElementName("_\\0");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "\"_Python3\"" + "'", str4, "\"_Python3\"");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
    }

    @Test
    public void test1491() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1491");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet3 = python3Target1.getBadWords();
        boolean boolean4 = python3Target1.wantsBaseListener();
        java.util.Set<java.lang.String> strSet5 = python3Target1.getBadWords();
        java.lang.String str7 = python3Target1.encodeIntAsCharEscape((int) (byte) 100);
        java.lang.String str8 = python3Target1.getLanguage();
        java.lang.String str10 = python3Target1.getListLabel("_\"hi!\"ContextContext");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "d" + "'", str7, "d");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Python3" + "'", str8, "Python3");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "_\"hi!\"ContextContext" + "'", str10, "_\"hi!\"ContextContext");
    }

    @Test
    public void test1492() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1492");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet3 = python3Target1.getBadWords();
        java.lang.String str4 = python3Target1.getLanguage();
        java.lang.String str6 = python3Target1.getImplicitSetLabel("_tset_\"hi!\"Context");
        java.lang.String str8 = python3Target1.getListLabel("_tsettset\\\"hi!");
        java.lang.String str9 = python3Target1.getLanguage();
        boolean boolean10 = python3Target1.supportsOverloadedMethods();
        java.lang.Class<?> wildcardClass11 = python3Target1.getClass();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Python3" + "'", str4, "Python3");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "_tset_tset_\"hi!\"Context" + "'", str6, "_tset_tset_\"hi!\"Context");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "_tsettset\\\"hi!" + "'", str8, "_tsettset\\\"hi!");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Python3" + "'", str9, "Python3");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test1493() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1493");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet3 = python3Target1.getBadWords();
        int int4 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str7 = python3Target1.getTargetStringLiteralFromString("_tset\"hi!\"", false);
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = python3Target1.getCodeGenerator();
        boolean boolean9 = python3Target1.supportsOverloadedMethods();
        java.lang.String str11 = python3Target1.getAltLabelContextStructName("\"Python3\"");
        boolean boolean12 = python3Target1.wantsBaseListener();
        org.stringtemplate.v4.STGroup sTGroup13 = python3Target1.getTemplates();
        boolean boolean14 = python3Target1.wantsBaseListener();
        java.lang.String str15 = python3Target1.getVersion();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 64 + "'", int4 == 64);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "_tset\\\"hi!\\\"" + "'", str7, "_tset\\\"hi!\\\"");
        org.junit.Assert.assertNull(codeGenerator8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "\"Python3\"Context" + "'", str11, "\"Python3\"Context");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(sTGroup13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "4.5.2.1" + "'", str15, "4.5.2.1");
    }

    @Test
    public void test1494() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1494");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet3 = python3Target1.getBadWords();
        int int4 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str7 = python3Target1.getTargetStringLiteralFromString("_tset\"hi!\"", false);
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = python3Target1.getCodeGenerator();
        boolean boolean9 = python3Target1.supportsOverloadedMethods();
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = python3Target1.getCodeGenerator();
        org.antlr.v4.codegen.CodeGenerator codeGenerator11 = python3Target1.getCodeGenerator();
        org.antlr.v4.codegen.CodeGenerator codeGenerator12 = python3Target1.getCodeGenerator();
        boolean boolean13 = python3Target1.templatesExist();
        java.lang.String str15 = python3Target1.getImplicitSetLabel("\"_\\\"tset4.5.2.1Contex\\\"\"");
        org.antlr.v4.tool.ast.GrammarAST grammarAST16 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str17 = python3Target1.getLoopLabel(grammarAST16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 64 + "'", int4 == 64);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "_tset\\\"hi!\\\"" + "'", str7, "_tset\\\"hi!\\\"");
        org.junit.Assert.assertNull(codeGenerator8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(codeGenerator10);
        org.junit.Assert.assertNull(codeGenerator11);
        org.junit.Assert.assertNull(codeGenerator12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "_tset\"_\\\"tset4.5.2.1Contex\\\"\"" + "'", str15, "_tset\"_\\\"tset4.5.2.1Contex\\\"\"");
    }

    @Test
    public void test1495() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1495");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        boolean boolean2 = python3Target1.supportsOverloadedMethods();
        java.util.Set<java.lang.String> strSet3 = python3Target1.getBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator4 = python3Target1.getCodeGenerator();
        java.lang.String str6 = python3Target1.getAltLabelContextStructName("\"\\\"_\\\"hi!\\\"Contex\"");
        java.lang.String str8 = python3Target1.getListLabel("_tset\"\\\"_\\\"hi!\\\"Contex\"");
        org.antlr.v4.tool.Grammar grammar9 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target11 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator10);
        int int12 = python3Target11.getInlineTestSetWordSize();
        java.lang.String str14 = python3Target11.getImplicitSetLabel("\"hi!\"");
        java.lang.String str16 = python3Target11.encodeIntAsCharEscape(0);
        java.lang.String str17 = python3Target11.getVersion();
        java.lang.String str19 = python3Target11.getTargetStringLiteralFromString("hi!");
        java.lang.String str21 = python3Target11.getListLabel("");
        java.lang.String str22 = python3Target11.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator23 = null;
        java.lang.String str26 = python3Target11.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator23, "_tset_tset_\"hi!\"Context", false);
        org.stringtemplate.v4.STGroup sTGroup27 = python3Target11.getTemplates();
        org.antlr.v4.tool.Grammar grammar28 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator29 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target30 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator29);
        int int31 = python3Target30.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet32 = python3Target30.getBadWords();
        boolean boolean33 = python3Target30.wantsBaseListener();
        int int34 = python3Target30.getSerializedATNSegmentLimit();
        boolean boolean35 = python3Target30.wantsBaseVisitor();
        org.antlr.v4.tool.Grammar grammar36 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator37 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target38 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator37);
        int int39 = python3Target38.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet40 = python3Target38.getBadWords();
        int int41 = python3Target38.getInlineTestSetWordSize();
        org.antlr.v4.codegen.CodeGenerator codeGenerator42 = python3Target38.getCodeGenerator();
        java.lang.String str44 = python3Target38.getImplicitSetLabel("_\"hi!\"Context");
        java.lang.String str46 = python3Target38.getImplicitSetLabel("_tset");
        java.lang.String str48 = python3Target38.getImplicitSetLabel("\"\\\"Python3\\\"Context\"");
        int int49 = python3Target38.getSerializedATNSegmentLimit();
        org.antlr.v4.tool.Grammar grammar50 = null;
        int[] intArray51 = new int[] {};
        java.lang.String[] strArray52 = python3Target38.getTokenTypesAsTargetLabels(grammar50, intArray51);
        java.lang.String[] strArray53 = python3Target30.getTokenTypesAsTargetLabels(grammar36, intArray51);
        java.lang.String[] strArray54 = python3Target11.getTokenTypesAsTargetLabels(grammar28, intArray51);
        java.lang.String[] strArray55 = python3Target1.getTokenTypesAsTargetLabels(grammar9, intArray51);
        java.lang.String str57 = python3Target1.encodeIntAsCharEscape(10);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNull(codeGenerator4);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\"\\\"_\\\"hi!\\\"Contex\"Context" + "'", str6, "\"\\\"_\\\"hi!\\\"Contex\"Context");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "_tset\"\\\"_\\\"hi!\\\"Contex\"" + "'", str8, "_tset\"\\\"_\\\"hi!\\\"Contex\"");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 64 + "'", int12 == 64);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "_tset\"hi!\"" + "'", str14, "_tset\"hi!\"");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "\\0" + "'", str16, "\\0");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "4.5.2.1" + "'", str17, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "\"hi!\"" + "'", str19, "\"hi!\"");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "4.5.2.1" + "'", str22, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "tset_tset_\\\"hi!\\\"Contex" + "'", str26, "tset_tset_\\\"hi!\\\"Contex");
        org.junit.Assert.assertNotNull(sTGroup27);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 64 + "'", int31 == 64);
        org.junit.Assert.assertNotNull(strSet32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 29 + "'", int34 == 29);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 64 + "'", int39 == 64);
        org.junit.Assert.assertNotNull(strSet40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 64 + "'", int41 == 64);
        org.junit.Assert.assertNull(codeGenerator42);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "_tset_\"hi!\"Context" + "'", str44, "_tset_\"hi!\"Context");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "_tset_tset" + "'", str46, "_tset_tset");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "_tset\"\\\"Python3\\\"Context\"" + "'", str48, "_tset\"\\\"Python3\\\"Context\"");
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 29 + "'", int49 == 29);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[]");
        org.junit.Assert.assertNotNull(strArray52);
        org.junit.Assert.assertNotNull(strArray53);
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertNotNull(strArray55);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "\\n" + "'", str57, "\\n");
    }

    @Test
    public void test1496() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1496");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str4 = python3Target1.getImplicitSetLabel("\"hi!\"");
        java.lang.String str6 = python3Target1.encodeIntAsCharEscape(0);
        java.lang.String str7 = python3Target1.getVersion();
        java.lang.String str9 = python3Target1.getTargetStringLiteralFromString("hi!");
        java.lang.String str11 = python3Target1.getAltLabelContextStructName("\"\\\"hi!\\\"\"Context");
        java.util.Set<java.lang.String> strSet12 = python3Target1.getBadWords();
        boolean boolean13 = python3Target1.wantsBaseVisitor();
        org.antlr.v4.codegen.CodeGenerator codeGenerator14 = null;
        java.lang.String str17 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator14, "\\n", false);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "_tset\"hi!\"" + "'", str4, "_tset\"hi!\"");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\\0" + "'", str6, "\\0");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "4.5.2.1" + "'", str7, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\"hi!\"" + "'", str9, "\"hi!\"");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "\"\\\"hi!\\\"\"ContextContext" + "'", str11, "\"\\\"hi!\\\"\"ContextContext");
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
    }

    @Test
    public void test1497() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1497");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet3 = python3Target1.getBadWords();
        java.lang.String str4 = python3Target1.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator5 = python3Target1.getCodeGenerator();
        java.lang.String str7 = python3Target1.getTargetStringLiteralFromString("_Python3");
        int int8 = python3Target1.getSerializedATNSegmentLimit();
        org.antlr.v4.tool.Grammar grammar9 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target11 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator10);
        int int12 = python3Target11.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet13 = python3Target11.getBadWords();
        java.lang.String str14 = python3Target11.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator15 = python3Target11.getCodeGenerator();
        java.lang.String str17 = python3Target11.getTargetStringLiteralFromString("_Python3");
        int int18 = python3Target11.getSerializedATNSegmentLimit();
        boolean boolean19 = python3Target11.wantsBaseListener();
        org.antlr.v4.tool.Grammar grammar20 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator21 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target22 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator21);
        int int23 = python3Target22.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet24 = python3Target22.getBadWords();
        int int25 = python3Target22.getInlineTestSetWordSize();
        java.lang.String str28 = python3Target22.getTargetStringLiteralFromString("_tset\"hi!\"", false);
        org.antlr.v4.codegen.CodeGenerator codeGenerator29 = python3Target22.getCodeGenerator();
        boolean boolean30 = python3Target22.supportsOverloadedMethods();
        boolean boolean31 = python3Target22.wantsBaseListener();
        java.lang.String str33 = python3Target22.getImplicitSetLabel("");
        boolean boolean34 = python3Target22.wantsBaseVisitor();
        boolean boolean35 = python3Target22.templatesExist();
        boolean boolean36 = python3Target22.templatesExist();
        boolean boolean37 = python3Target22.templatesExist();
        org.antlr.v4.tool.Grammar grammar38 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator39 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target40 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator39);
        boolean boolean41 = python3Target40.supportsOverloadedMethods();
        java.lang.String str43 = python3Target40.getTargetStringLiteralFromString("_Python3");
        org.antlr.v4.tool.Grammar grammar44 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator45 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target46 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator45);
        int int47 = python3Target46.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet48 = python3Target46.getBadWords();
        int int49 = python3Target46.getInlineTestSetWordSize();
        org.antlr.v4.codegen.CodeGenerator codeGenerator50 = python3Target46.getCodeGenerator();
        java.lang.String str52 = python3Target46.getImplicitSetLabel("_\"hi!\"Context");
        java.lang.String str54 = python3Target46.getImplicitSetLabel("_tset");
        java.lang.String str56 = python3Target46.getImplicitSetLabel("\"\\\"Python3\\\"Context\"");
        int int57 = python3Target46.getSerializedATNSegmentLimit();
        org.antlr.v4.tool.Grammar grammar58 = null;
        int[] intArray59 = new int[] {};
        java.lang.String[] strArray60 = python3Target46.getTokenTypesAsTargetLabels(grammar58, intArray59);
        java.lang.String[] strArray61 = python3Target40.getTokenTypesAsTargetLabels(grammar44, intArray59);
        java.lang.String[] strArray62 = python3Target22.getTokenTypesAsTargetLabels(grammar38, intArray59);
        java.lang.String[] strArray63 = python3Target11.getTokenTypesAsTargetLabels(grammar20, intArray59);
        java.lang.String[] strArray64 = python3Target1.getTokenTypesAsTargetLabels(grammar9, intArray59);
        org.stringtemplate.v4.STGroup sTGroup65 = python3Target1.getTemplates();
        org.antlr.v4.codegen.CodeGenerator codeGenerator66 = null;
        java.lang.String str69 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator66, "\"\\\"_\\\\\\\"\\\\\\\"_\\\\\\\"hi!\\\\\\\"Contex\\\\\\\"Contex\\\"\"Context", false);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Python3" + "'", str4, "Python3");
        org.junit.Assert.assertNull(codeGenerator5);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "\"_Python3\"" + "'", str7, "\"_Python3\"");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 29 + "'", int8 == 29);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 64 + "'", int12 == 64);
        org.junit.Assert.assertNotNull(strSet13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Python3" + "'", str14, "Python3");
        org.junit.Assert.assertNull(codeGenerator15);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "\"_Python3\"" + "'", str17, "\"_Python3\"");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 29 + "'", int18 == 29);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 64 + "'", int23 == 64);
        org.junit.Assert.assertNotNull(strSet24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 64 + "'", int25 == 64);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "_tset\\\"hi!\\\"" + "'", str28, "_tset\\\"hi!\\\"");
        org.junit.Assert.assertNull(codeGenerator29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "_tset" + "'", str33, "_tset");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "\"_Python3\"" + "'", str43, "\"_Python3\"");
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 64 + "'", int47 == 64);
        org.junit.Assert.assertNotNull(strSet48);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 64 + "'", int49 == 64);
        org.junit.Assert.assertNull(codeGenerator50);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "_tset_\"hi!\"Context" + "'", str52, "_tset_\"hi!\"Context");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "_tset_tset" + "'", str54, "_tset_tset");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "_tset\"\\\"Python3\\\"Context\"" + "'", str56, "_tset\"\\\"Python3\\\"Context\"");
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 29 + "'", int57 == 29);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[]");
        org.junit.Assert.assertNotNull(strArray60);
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertNotNull(strArray62);
        org.junit.Assert.assertNotNull(strArray63);
        org.junit.Assert.assertNotNull(strArray64);
        org.junit.Assert.assertNotNull(sTGroup65);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "\\\"_\\\\\\\"\\\\\\\"_\\\\\\\"hi!\\\\\\\"Contex\\\\\\\"Contex\\\"\\\"Contex" + "'", str69, "\\\"_\\\\\\\"\\\\\\\"_\\\\\\\"hi!\\\\\\\"Contex\\\\\\\"Contex\\\"\\\"Contex");
    }

    @Test
    public void test1498() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1498");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet3 = python3Target1.getBadWords();
        boolean boolean4 = python3Target1.supportsOverloadedMethods();
        boolean boolean5 = python3Target1.wantsBaseVisitor();
        boolean boolean6 = python3Target1.templatesExist();
        int int7 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str8 = python3Target1.getVersion();
        java.lang.String str10 = python3Target1.encodeIntAsCharEscape((int) (short) 100);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str12 = python3Target1.getImplicitTokenLabel("___\"\\\"hi!\\\"\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 64 + "'", int7 == 64);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "4.5.2.1" + "'", str8, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "d" + "'", str10, "d");
    }

    @Test
    public void test1499() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1499");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet3 = python3Target1.getBadWords();
        int int4 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str7 = python3Target1.getTargetStringLiteralFromString("_tset\"hi!\"", false);
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = python3Target1.getCodeGenerator();
        boolean boolean9 = python3Target1.supportsOverloadedMethods();
        boolean boolean10 = python3Target1.supportsOverloadedMethods();
        java.lang.String str12 = python3Target1.getImplicitRuleLabel("\"\\\"_Python3\\\"\"");
        org.antlr.v4.codegen.model.RuleFunction ruleFunction13 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str14 = python3Target1.getRuleFunctionContextStructName(ruleFunction13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 64 + "'", int4 == 64);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "_tset\\\"hi!\\\"" + "'", str7, "_tset\\\"hi!\\\"");
        org.junit.Assert.assertNull(codeGenerator8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "_\"\\\"_Python3\\\"\"" + "'", str12, "_\"\\\"_Python3\\\"\"");
    }

    @Test
    public void test1500() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1500");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        int int2 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str4 = python3Target1.getImplicitSetLabel("\"hi!\"");
        java.lang.String str6 = python3Target1.encodeIntAsCharEscape(0);
        java.lang.String str7 = python3Target1.getVersion();
        java.lang.String str9 = python3Target1.getTargetStringLiteralFromString("hi!");
        boolean boolean10 = python3Target1.templatesExist();
        boolean boolean11 = python3Target1.supportsOverloadedMethods();
        boolean boolean12 = python3Target1.supportsOverloadedMethods();
        java.lang.String str14 = python3Target1.getImplicitRuleLabel("");
        int int15 = python3Target1.getInlineTestSetWordSize();
        int int16 = python3Target1.getInlineTestSetWordSize();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "_tset\"hi!\"" + "'", str4, "_tset\"hi!\"");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\\0" + "'", str6, "\\0");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "4.5.2.1" + "'", str7, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\"hi!\"" + "'", str9, "\"hi!\"");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "_" + "'", str14, "_");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 64 + "'", int15 == 64);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 64 + "'", int16 == 64);
    }
}

