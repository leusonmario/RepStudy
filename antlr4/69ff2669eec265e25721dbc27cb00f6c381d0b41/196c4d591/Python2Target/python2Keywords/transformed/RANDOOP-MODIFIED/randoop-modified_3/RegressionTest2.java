import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest2 {

    public static boolean debug = false;

    @Test
    public void test1001() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1001");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str5 = python2Target1.getTargetStringLiteralFromString("hi!", false);
        int int6 = python2Target1.getInlineTestSetWordSize();
        java.lang.String str8 = python2Target1.getTargetStringLiteralFromString("Hi!Context");
        java.util.Set<java.lang.String> strSet9 = python2Target1.badWords;
        java.lang.String str12 = python2Target1.getTargetStringLiteralFromString("_\"\\\"hi!\\\"\"", true);
        org.stringtemplate.v4.STGroup sTGroup13 = python2Target1.getTemplates();
        org.stringtemplate.v4.STGroup sTGroup14 = python2Target1.getTemplates();
        java.lang.Class<?> wildcardClass15 = sTGroup14.getClass();
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 64 + "'", int6 == 64);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\"Hi!Context\"" + "'", str8, "\"Hi!Context\"");
        org.junit.Assert.assertNotNull(strSet9);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "\"_\\\"\\\\\\\"hi!\\\\\\\"\\\"\"" + "'", str12, "\"_\\\"\\\\\\\"hi!\\\\\\\"\\\"\"");
        org.junit.Assert.assertNotNull(sTGroup13);
        org.junit.Assert.assertNotNull(sTGroup14);
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test1002() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1002");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String[] strArray2 = python2Target1.targetCharValueEscape;
        java.lang.String str3 = python2Target1.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup4 = python2Target1.getTemplates();
        org.antlr.v4.codegen.CodeGenerator codeGenerator5 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target6 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator5);
        java.util.Set<java.lang.String> strSet7 = python2Target6.badWords;
        python2Target1.badWords = strSet7;
        java.lang.String[] strArray14 = new java.lang.String[] { "@", "\"_tset\"", "\"hi!\"", "_tset\\1", "_tset\\\\1" };
        python2Target1.targetCharValueEscape = strArray14;
        java.lang.String str17 = python2Target1.getListLabel("");
        org.antlr.v4.codegen.CodeGenerator codeGenerator18 = python2Target1.gen;
        boolean boolean19 = python2Target1.wantsBaseListener();
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Python2" + "'", str3, "Python2");
        org.junit.Assert.assertNotNull(sTGroup4);
        org.junit.Assert.assertNotNull(strSet7);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertNull(codeGenerator18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    }

    @Test
    public void test1003() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1003");
        org.antlr.v4.codegen.target.Python2Target python2Target0 = new org.antlr.v4.codegen.target.Python2Target();
        org.stringtemplate.v4.STGroup sTGroup1 = python2Target0.templates;
        java.lang.String[] strArray2 = python2Target0.targetCharValueEscape;
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target4 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator3);
        java.lang.String[] strArray5 = python2Target4.targetCharValueEscape;
        java.lang.String str8 = python2Target4.getTargetStringLiteralFromString("Python2", false);
        java.lang.String[] strArray9 = org.antlr.v4.codegen.target.Python2Target.python2Keywords;
        python2Target4.targetCharValueEscape = strArray9;
        python2Target0.targetCharValueEscape = strArray9;
        java.lang.String str14 = python2Target0.getTargetStringLiteralFromString("_tset_tsetContext", false);
        java.lang.String[] strArray15 = python2Target0.targetCharValueEscape;
        org.junit.Assert.assertNull(sTGroup1);
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Python2" + "'", str8, "Python2");
        org.junit.Assert.assertNotNull(strArray9);
// flaky:         org.junit.Assert.assertEquals("'" + str14 + "' != '" + "_tset_tsetContext" + "'", str14, "_tset_tsetContext");
        org.junit.Assert.assertNotNull(strArray15);
    }

    @Test
    public void test1004() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1004");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str4 = python2Target1.encodeIntAsCharEscape(64);
        java.lang.String str6 = python2Target1.getAltLabelContextStructName("Python2");
        java.util.Set<java.lang.String> strSet7 = python2Target1.getBadWords();
        java.lang.String[] strArray8 = python2Target1.targetCharValueEscape;
        org.antlr.v4.tool.Grammar grammar9 = null;
        org.stringtemplate.v4.ST sT10 = null;
        // The following exception was thrown during execution in test generation
        try {
            python2Target1.genListenerFile(grammar9, sT10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "@" + "'", str4, "@");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Python2Context" + "'", str6, "Python2Context");
        org.junit.Assert.assertNotNull(strSet7);
        org.junit.Assert.assertNotNull(strArray8);
    }

    @Test
    public void test1005() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1005");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str4 = python2Target1.encodeIntAsCharEscape(64);
        java.lang.String str5 = python2Target1.getLanguage();
        java.lang.String str7 = python2Target1.getImplicitSetLabel("");
        java.lang.String str9 = python2Target1.getImplicitSetLabel("\\n");
        boolean boolean10 = python2Target1.templatesExist();
        boolean boolean11 = python2Target1.templatesExist();
        java.lang.String str12 = python2Target1.language;
        org.antlr.v4.tool.ast.GrammarAST grammarAST13 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean14 = python2Target1.visibleGrammarSymbolCausesIssueInGeneratedCode(grammarAST13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "@" + "'", str4, "@");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Python2" + "'", str5, "Python2");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "_tset" + "'", str7, "_tset");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "_tset\\n" + "'", str9, "_tset\\n");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Python2" + "'", str12, "Python2");
    }

    @Test
    public void test1006() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1006");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String[] strArray2 = python2Target1.targetCharValueEscape;
        java.lang.String str3 = python2Target1.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup4 = python2Target1.getTemplates();
        org.antlr.v4.codegen.CodeGenerator codeGenerator5 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target6 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator5);
        java.util.Set<java.lang.String> strSet7 = python2Target6.badWords;
        python2Target1.badWords = strSet7;
        org.antlr.v4.codegen.CodeGenerator codeGenerator9 = python2Target1.gen;
        java.lang.String str10 = python2Target1.getLanguage();
        java.lang.String str11 = python2Target1.getVersion();
        boolean boolean12 = python2Target1.wantsBaseVisitor();
        python2Target1.language = "\\\"_tset_tset_tsetContext\\\"";
        boolean boolean15 = python2Target1.templatesExist();
        java.util.Set<java.lang.String> strSet16 = python2Target1.badWords;
        boolean boolean17 = python2Target1.templatesExist();
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Python2" + "'", str3, "Python2");
        org.junit.Assert.assertNotNull(sTGroup4);
        org.junit.Assert.assertNotNull(strSet7);
        org.junit.Assert.assertNull(codeGenerator9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Python2" + "'", str10, "Python2");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "4.5.2.1" + "'", str11, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    }

    @Test
    public void test1007() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1007");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str4 = python2Target1.encodeIntAsCharEscape(64);
        java.lang.String str5 = python2Target1.getLanguage();
        java.lang.String str6 = python2Target1.getLanguage();
        boolean boolean7 = python2Target1.wantsBaseListener();
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "@" + "'", str4, "@");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Python2" + "'", str5, "Python2");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Python2" + "'", str6, "Python2");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    public void test1008() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1008");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str4 = python2Target1.encodeIntAsCharEscape(64);
        org.stringtemplate.v4.STGroup sTGroup5 = python2Target1.loadTemplates();
        java.lang.String str6 = python2Target1.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = python2Target1.getCodeGenerator();
        java.lang.String str9 = python2Target1.getListLabel("__tset_tset\"\\\"\\\\\\\"hi!\\\\\\\"\\\"\"");
        java.lang.String[] strArray10 = python2Target1.targetCharValueEscape;
        org.stringtemplate.v4.STGroup sTGroup11 = python2Target1.loadTemplates();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str13 = python2Target1.getElementName("\\\"_tset");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "@" + "'", str4, "@");
        org.junit.Assert.assertNotNull(sTGroup5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Python2" + "'", str6, "Python2");
        org.junit.Assert.assertNull(codeGenerator7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "__tset_tset\"\\\"\\\\\\\"hi!\\\\\\\"\\\"\"" + "'", str9, "__tset_tset\"\\\"\\\\\\\"hi!\\\\\\\"\\\"\"");
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(sTGroup11);
    }

    @Test
    public void test1009() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1009");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str4 = python2Target1.encodeIntAsCharEscape(64);
        java.lang.String str5 = python2Target1.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target7 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator6);
        java.lang.String[] strArray8 = python2Target7.targetCharValueEscape;
        java.lang.String str9 = python2Target7.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup10 = python2Target7.getTemplates();
        python2Target1.templates = sTGroup10;
        org.stringtemplate.v4.STGroup sTGroup12 = python2Target1.templates;
        java.util.Set<java.lang.String> strSet13 = python2Target1.badWords;
        java.util.Set<java.lang.String> strSet14 = python2Target1.getBadWords();
        java.lang.String str16 = python2Target1.getImplicitSetLabel("\"\\\"\\\\\\\"hi!\\\\\\\"\\\"\"");
        java.lang.String str18 = python2Target1.getTargetStringLiteralFromString("_tset__tset_tset\"\\\"\\\\\\\"hi!\\\\\\\"\\\"\"");
        org.antlr.v4.tool.Grammar grammar19 = null;
        org.stringtemplate.v4.ST sT20 = null;
        // The following exception was thrown during execution in test generation
        try {
            python2Target1.genFile(grammar19, sT20, "");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "@" + "'", str4, "@");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Python2" + "'", str5, "Python2");
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Python2" + "'", str9, "Python2");
        org.junit.Assert.assertNotNull(sTGroup10);
        org.junit.Assert.assertNotNull(sTGroup12);
        org.junit.Assert.assertNotNull(strSet13);
        org.junit.Assert.assertNotNull(strSet14);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "_tset\"\\\"\\\\\\\"hi!\\\\\\\"\\\"\"" + "'", str16, "_tset\"\\\"\\\\\\\"hi!\\\\\\\"\\\"\"");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "\"_tset__tset_tset\\\"\\\\\\\"\\\\\\\\\\\\\\\"hi!\\\\\\\\\\\\\\\"\\\\\\\"\\\"\"" + "'", str18, "\"_tset__tset_tset\\\"\\\\\\\"\\\\\\\\\\\\\\\"hi!\\\\\\\\\\\\\\\"\\\\\\\"\\\"\"");
    }

    @Test
    public void test1010() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1010");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str4 = python2Target1.encodeIntAsCharEscape(64);
        java.lang.String str5 = python2Target1.getLanguage();
        java.lang.String str8 = python2Target1.getTargetStringLiteralFromString("_@", false);
        java.lang.String str10 = python2Target1.encodeIntAsCharEscape((int) (byte) 100);
        java.lang.String str12 = python2Target1.getAltLabelContextStructName("\"_tset\"");
        boolean boolean13 = python2Target1.supportsOverloadedMethods();
        boolean boolean14 = python2Target1.templatesExist();
        org.antlr.v4.codegen.CodeGenerator codeGenerator15 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target16 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator15);
        java.util.Set<java.lang.String> strSet17 = python2Target16.badWords;
        java.lang.String str19 = python2Target16.encodeIntAsCharEscape(64);
        java.lang.String str21 = python2Target16.getAltLabelContextStructName("Python2");
        boolean boolean22 = python2Target16.supportsOverloadedMethods();
        org.antlr.v4.codegen.CodeGenerator codeGenerator23 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target24 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator23);
        java.lang.String[] strArray25 = python2Target24.targetCharValueEscape;
        java.lang.String str26 = python2Target24.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup27 = python2Target24.loadTemplates();
        int int28 = python2Target24.getInlineTestSetWordSize();
        java.lang.String[] strArray29 = python2Target24.targetCharValueEscape;
        python2Target16.targetCharValueEscape = strArray29;
        python2Target1.targetCharValueEscape = strArray29;
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "@" + "'", str4, "@");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Python2" + "'", str5, "Python2");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "_@" + "'", str8, "_@");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "d" + "'", str10, "d");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "\"_tset\"Context" + "'", str12, "\"_tset\"Context");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(strSet17);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "@" + "'", str19, "@");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Python2Context" + "'", str21, "Python2Context");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "Python2" + "'", str26, "Python2");
        org.junit.Assert.assertNotNull(sTGroup27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 64 + "'", int28 == 64);
        org.junit.Assert.assertNotNull(strArray29);
    }

    @Test
    public void test1011() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1011");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str4 = python2Target1.encodeIntAsCharEscape(64);
        java.lang.String str5 = python2Target1.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target7 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator6);
        java.lang.String[] strArray8 = python2Target7.targetCharValueEscape;
        java.lang.String str9 = python2Target7.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup10 = python2Target7.getTemplates();
        python2Target1.templates = sTGroup10;
        org.stringtemplate.v4.STGroup sTGroup12 = python2Target1.templates;
        java.util.Set<java.lang.String> strSet13 = python2Target1.badWords;
        java.util.Set<java.lang.String> strSet14 = python2Target1.getBadWords();
        org.antlr.v4.tool.Grammar grammar15 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator16 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target17 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator16);
        java.util.Set<java.lang.String> strSet18 = python2Target17.badWords;
        java.lang.String str20 = python2Target17.encodeIntAsCharEscape(64);
        java.lang.String str21 = python2Target17.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator22 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target23 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator22);
        java.lang.String[] strArray24 = python2Target23.targetCharValueEscape;
        java.lang.String str25 = python2Target23.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup26 = python2Target23.getTemplates();
        python2Target17.templates = sTGroup26;
        org.stringtemplate.v4.STGroup sTGroup28 = python2Target17.templates;
        java.util.Set<java.lang.String> strSet29 = python2Target17.badWords;
        java.util.Set<java.lang.String> strSet30 = python2Target17.getBadWords();
        boolean boolean31 = python2Target17.supportsOverloadedMethods();
        java.util.Set<java.lang.String> strSet32 = python2Target17.getBadWords();
        org.antlr.v4.tool.Grammar grammar33 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator34 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target35 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator34);
        java.lang.String[] strArray36 = python2Target35.targetCharValueEscape;
        java.lang.String str39 = python2Target35.getTargetStringLiteralFromString("_tset\\1", false);
        org.antlr.v4.tool.Grammar grammar40 = null;
        int[] intArray41 = new int[] {};
        java.lang.String[] strArray42 = python2Target35.getTokenTypesAsTargetLabels(grammar40, intArray41);
        java.lang.String[] strArray43 = python2Target17.getTokenTypesAsTargetLabels(grammar33, intArray41);
        java.lang.String[] strArray44 = python2Target1.getTokenTypesAsTargetLabels(grammar15, intArray41);
        org.antlr.v4.codegen.CodeGenerator codeGenerator45 = null;
        java.lang.String str48 = python2Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator45, "\"Hi!Context\"Context", true);
        org.stringtemplate.v4.STGroup sTGroup49 = python2Target1.templates;
        java.lang.String str51 = python2Target1.getImplicitSetLabel("_\"tsetContex\"");
        java.lang.String str53 = python2Target1.encodeIntAsCharEscape(10);
        org.antlr.v4.tool.ast.GrammarAST grammarAST54 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean55 = python2Target1.visibleGrammarSymbolCausesIssueInGeneratedCode(grammarAST54);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "@" + "'", str4, "@");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Python2" + "'", str5, "Python2");
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Python2" + "'", str9, "Python2");
        org.junit.Assert.assertNotNull(sTGroup10);
        org.junit.Assert.assertNotNull(sTGroup12);
        org.junit.Assert.assertNotNull(strSet13);
        org.junit.Assert.assertNotNull(strSet14);
        org.junit.Assert.assertNotNull(strSet18);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "@" + "'", str20, "@");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Python2" + "'", str21, "Python2");
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Python2" + "'", str25, "Python2");
        org.junit.Assert.assertNotNull(sTGroup26);
        org.junit.Assert.assertNotNull(sTGroup28);
        org.junit.Assert.assertNotNull(strSet29);
        org.junit.Assert.assertNotNull(strSet30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(strSet32);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "_tset\\\\1" + "'", str39, "_tset\\\\1");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[]");
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "\"Hi!Context\\\"Contex\"" + "'", str48, "\"Hi!Context\\\"Contex\"");
        org.junit.Assert.assertNotNull(sTGroup49);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "_tset_\"tsetContex\"" + "'", str51, "_tset_\"tsetContex\"");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "\\n" + "'", str53, "\\n");
    }

    @Test
    public void test1012() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1012");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String[] strArray2 = python2Target1.targetCharValueEscape;
        java.lang.String str3 = python2Target1.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup4 = python2Target1.templates;
        boolean boolean5 = python2Target1.templatesExist();
        java.lang.String str6 = python2Target1.getLanguage();
        python2Target1.addBadWords();
        java.lang.Class<?> wildcardClass8 = python2Target1.getClass();
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Python2" + "'", str3, "Python2");
        org.junit.Assert.assertNull(sTGroup4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Python2" + "'", str6, "Python2");
        org.junit.Assert.assertNotNull(wildcardClass8);
    }

    @Test
    public void test1013() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1013");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String[] strArray2 = python2Target1.targetCharValueEscape;
        java.lang.String str5 = python2Target1.getTargetStringLiteralFromString("Python2", false);
        java.lang.String str6 = python2Target1.getVersion();
        java.lang.String str8 = python2Target1.encodeIntAsCharEscape((int) (short) 1);
        int int9 = python2Target1.getSerializedATNSegmentLimit();
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target11 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator10);
        java.util.Set<java.lang.String> strSet12 = python2Target11.badWords;
        java.lang.String str15 = python2Target11.getTargetStringLiteralFromString("hi!", false);
        java.lang.String str17 = python2Target11.getImplicitRuleLabel("@");
        python2Target11.language = "hi!";
        boolean boolean20 = python2Target11.supportsOverloadedMethods();
        boolean boolean21 = python2Target11.templatesExist();
        org.antlr.v4.codegen.CodeGenerator codeGenerator22 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target23 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator22);
        java.util.Set<java.lang.String> strSet24 = python2Target23.badWords;
        boolean boolean25 = python2Target23.wantsBaseVisitor();
        org.stringtemplate.v4.STGroup sTGroup26 = python2Target23.loadTemplates();
        org.stringtemplate.v4.STGroup sTGroup27 = python2Target23.getTemplates();
        java.util.Set<java.lang.String> strSet28 = python2Target23.badWords;
        python2Target11.badWords = strSet28;
        python2Target1.badWords = strSet28;
        python2Target1.addBadWords();
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Python2" + "'", str5, "Python2");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "4.5.2.1" + "'", str6, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\\1" + "'", str8, "\\1");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 2147483647 + "'", int9 == 2147483647);
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "_@" + "'", str17, "_@");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(strSet24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(sTGroup26);
        org.junit.Assert.assertNotNull(sTGroup27);
        org.junit.Assert.assertNotNull(strSet28);
    }

    @Test
    public void test1014() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1014");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str5 = python2Target1.getTargetStringLiteralFromString("hi!", false);
        int int6 = python2Target1.getInlineTestSetWordSize();
        boolean boolean7 = python2Target1.wantsBaseVisitor();
        java.lang.String str8 = python2Target1.getLanguage();
        python2Target1.addBadWords();
        boolean boolean10 = python2Target1.templatesExist();
        java.lang.String str12 = python2Target1.getTargetStringLiteralFromString("");
        org.antlr.v4.codegen.model.RuleFunction ruleFunction13 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str14 = python2Target1.getRuleFunctionContextStructName(ruleFunction13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 64 + "'", int6 == 64);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Python2" + "'", str8, "Python2");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "\"\"" + "'", str12, "\"\"");
    }

    @Test
    public void test1015() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1015");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String[] strArray2 = python2Target1.targetCharValueEscape;
        java.lang.String str3 = python2Target1.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup4 = python2Target1.getTemplates();
        java.lang.String str6 = python2Target1.getTargetStringLiteralFromString("_tset");
        java.lang.String str7 = python2Target1.getVersion();
        python2Target1.language = "\\1";
        org.stringtemplate.v4.STGroup sTGroup10 = python2Target1.templates;
        org.stringtemplate.v4.STGroup sTGroup11 = python2Target1.getTemplates();
        int int12 = python2Target1.getSerializedATNSegmentLimit();
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Python2" + "'", str3, "Python2");
        org.junit.Assert.assertNotNull(sTGroup4);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\"_tset\"" + "'", str6, "\"_tset\"");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "4.5.2.1" + "'", str7, "4.5.2.1");
        org.junit.Assert.assertNotNull(sTGroup10);
        org.junit.Assert.assertNotNull(sTGroup11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 2147483647 + "'", int12 == 2147483647);
    }

    @Test
    public void test1016() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1016");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str5 = python2Target1.getTargetStringLiteralFromString("hi!", false);
        java.lang.String str7 = python2Target1.getImplicitRuleLabel("@");
        python2Target1.language = "hi!";
        java.util.Set<java.lang.String> strSet10 = python2Target1.getBadWords();
        org.stringtemplate.v4.STGroup sTGroup11 = python2Target1.templates;
        org.antlr.v4.tool.Grammar grammar12 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator13 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target14 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator13);
        java.lang.String[] strArray15 = python2Target14.targetCharValueEscape;
        java.lang.String str16 = python2Target14.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup17 = python2Target14.getTemplates();
        org.antlr.v4.codegen.CodeGenerator codeGenerator18 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target19 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator18);
        java.util.Set<java.lang.String> strSet20 = python2Target19.badWords;
        python2Target14.badWords = strSet20;
        org.antlr.v4.codegen.CodeGenerator codeGenerator22 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target23 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator22);
        java.util.Set<java.lang.String> strSet24 = python2Target23.badWords;
        java.lang.String str27 = python2Target23.getTargetStringLiteralFromString("hi!", false);
        java.lang.String str29 = python2Target23.getImplicitRuleLabel("@");
        python2Target23.language = "hi!";
        org.antlr.v4.codegen.CodeGenerator codeGenerator32 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target33 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator32);
        java.util.Set<java.lang.String> strSet34 = python2Target33.badWords;
        java.lang.String str36 = python2Target33.encodeIntAsCharEscape(64);
        java.lang.String str37 = python2Target33.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator38 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target39 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator38);
        java.lang.String[] strArray40 = python2Target39.targetCharValueEscape;
        java.lang.String str41 = python2Target39.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup42 = python2Target39.getTemplates();
        python2Target33.templates = sTGroup42;
        org.antlr.v4.codegen.CodeGenerator codeGenerator44 = python2Target33.getCodeGenerator();
        org.stringtemplate.v4.STGroup sTGroup45 = python2Target33.loadTemplates();
        python2Target23.templates = sTGroup45;
        python2Target14.templates = sTGroup45;
        org.antlr.v4.codegen.CodeGenerator codeGenerator48 = null;
        java.lang.String str51 = python2Target14.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator48, "@", false);
        python2Target14.language = "\"4.5.2.1\"";
        org.antlr.v4.tool.Grammar grammar54 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator55 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target56 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator55);
        java.lang.String[] strArray57 = python2Target56.targetCharValueEscape;
        java.lang.String str60 = python2Target56.getTargetStringLiteralFromString("_tset\\1", false);
        org.antlr.v4.tool.Grammar grammar61 = null;
        int[] intArray62 = new int[] {};
        java.lang.String[] strArray63 = python2Target56.getTokenTypesAsTargetLabels(grammar61, intArray62);
        java.lang.String[] strArray64 = python2Target14.getTokenTypesAsTargetLabels(grammar54, intArray62);
        java.lang.String[] strArray65 = python2Target1.getTokenTypesAsTargetLabels(grammar12, intArray62);
        org.antlr.v4.codegen.CodeGenerator codeGenerator66 = python2Target1.getCodeGenerator();
        java.lang.Class<?> wildcardClass67 = python2Target1.getClass();
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "_@" + "'", str7, "_@");
        org.junit.Assert.assertNotNull(strSet10);
        org.junit.Assert.assertNotNull(sTGroup11);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Python2" + "'", str16, "Python2");
        org.junit.Assert.assertNotNull(sTGroup17);
        org.junit.Assert.assertNotNull(strSet20);
        org.junit.Assert.assertNotNull(strSet24);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "hi!" + "'", str27, "hi!");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "_@" + "'", str29, "_@");
        org.junit.Assert.assertNotNull(strSet34);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "@" + "'", str36, "@");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "Python2" + "'", str37, "Python2");
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "Python2" + "'", str41, "Python2");
        org.junit.Assert.assertNotNull(sTGroup42);
        org.junit.Assert.assertNull(codeGenerator44);
        org.junit.Assert.assertNotNull(sTGroup45);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "" + "'", str51, "");
        org.junit.Assert.assertNotNull(strArray57);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "_tset\\\\1" + "'", str60, "_tset\\\\1");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[]");
        org.junit.Assert.assertNotNull(strArray63);
        org.junit.Assert.assertNotNull(strArray64);
        org.junit.Assert.assertNotNull(strArray65);
        org.junit.Assert.assertNull(codeGenerator66);
        org.junit.Assert.assertNotNull(wildcardClass67);
    }

    @Test
    public void test1017() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1017");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str4 = python2Target1.encodeIntAsCharEscape(64);
        java.lang.String str5 = python2Target1.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target7 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator6);
        java.lang.String[] strArray8 = python2Target7.targetCharValueEscape;
        java.lang.String str9 = python2Target7.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup10 = python2Target7.getTemplates();
        python2Target1.templates = sTGroup10;
        org.stringtemplate.v4.STGroup sTGroup12 = python2Target1.templates;
        java.util.Set<java.lang.String> strSet13 = python2Target1.badWords;
        java.util.Set<java.lang.String> strSet14 = python2Target1.getBadWords();
        boolean boolean15 = python2Target1.supportsOverloadedMethods();
        java.util.Set<java.lang.String> strSet16 = python2Target1.getBadWords();
        python2Target1.addBadWords();
        org.stringtemplate.v4.STGroup sTGroup18 = python2Target1.loadTemplates();
        org.antlr.v4.codegen.CodeGenerator codeGenerator19 = python2Target1.getCodeGenerator();
        boolean boolean20 = python2Target1.supportsOverloadedMethods();
        org.antlr.v4.tool.ast.GrammarAST grammarAST21 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str22 = python2Target1.getLoopCounter(grammarAST21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "@" + "'", str4, "@");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Python2" + "'", str5, "Python2");
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Python2" + "'", str9, "Python2");
        org.junit.Assert.assertNotNull(sTGroup10);
        org.junit.Assert.assertNotNull(sTGroup12);
        org.junit.Assert.assertNotNull(strSet13);
        org.junit.Assert.assertNotNull(strSet14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertNotNull(sTGroup18);
        org.junit.Assert.assertNull(codeGenerator19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    }

    @Test
    public void test1018() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1018");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str5 = python2Target1.getTargetStringLiteralFromString("hi!", false);
        java.lang.String str7 = python2Target1.getTargetStringLiteralFromString("\"hi!\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = null;
        python2Target1.gen = codeGenerator8;
        java.lang.String[] strArray10 = null;
        python2Target1.targetCharValueEscape = strArray10;
        org.stringtemplate.v4.STGroup sTGroup12 = python2Target1.getTemplates();
        org.stringtemplate.v4.STGroup sTGroup13 = python2Target1.templates;
        boolean boolean14 = python2Target1.templatesExist();
        java.lang.String str15 = python2Target1.getLanguage();
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "\"\\\"hi!\\\"\"" + "'", str7, "\"\\\"hi!\\\"\"");
        org.junit.Assert.assertNotNull(sTGroup12);
        org.junit.Assert.assertNotNull(sTGroup13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Python2" + "'", str15, "Python2");
    }

    @Test
    public void test1019() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1019");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str4 = python2Target1.encodeIntAsCharEscape(64);
        java.lang.String str5 = python2Target1.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target7 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator6);
        java.lang.String[] strArray8 = python2Target7.targetCharValueEscape;
        java.lang.String str9 = python2Target7.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup10 = python2Target7.getTemplates();
        python2Target1.templates = sTGroup10;
        java.util.Set<java.lang.String> strSet12 = python2Target1.getBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator13 = python2Target1.getCodeGenerator();
        java.util.Set<java.lang.String> strSet14 = python2Target1.getBadWords();
        boolean boolean15 = python2Target1.wantsBaseListener();
        java.lang.String str18 = python2Target1.getTargetStringLiteralFromString("\"\\\"hi!\\\"\"", true);
        org.stringtemplate.v4.STGroup sTGroup19 = python2Target1.getTemplates();
        org.antlr.v4.codegen.CodeGenerator codeGenerator20 = python2Target1.gen;
        int int21 = python2Target1.getInlineTestSetWordSize();
        org.antlr.v4.codegen.CodeGenerator codeGenerator22 = null;
        python2Target1.gen = codeGenerator22;
        org.antlr.v4.codegen.CodeGenerator codeGenerator24 = python2Target1.getCodeGenerator();
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "@" + "'", str4, "@");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Python2" + "'", str5, "Python2");
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Python2" + "'", str9, "Python2");
        org.junit.Assert.assertNotNull(sTGroup10);
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertNull(codeGenerator13);
        org.junit.Assert.assertNotNull(strSet14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "\"\\\"\\\\\\\"hi!\\\\\\\"\\\"\"" + "'", str18, "\"\\\"\\\\\\\"hi!\\\\\\\"\\\"\"");
        org.junit.Assert.assertNotNull(sTGroup19);
        org.junit.Assert.assertNull(codeGenerator20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 64 + "'", int21 == 64);
        org.junit.Assert.assertNull(codeGenerator24);
    }

    @Test
    public void test1020() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1020");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str4 = python2Target1.encodeIntAsCharEscape(64);
        java.lang.String str5 = python2Target1.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target7 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator6);
        java.lang.String[] strArray8 = python2Target7.targetCharValueEscape;
        java.lang.String str9 = python2Target7.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup10 = python2Target7.getTemplates();
        python2Target1.templates = sTGroup10;
        org.antlr.v4.tool.Grammar grammar12 = null;
        org.stringtemplate.v4.ST sT13 = null;
        python2Target1.genRecognizerHeaderFile(grammar12, sT13, "\"_tset\"");
        java.util.Set<java.lang.String> strSet16 = python2Target1.getBadWords();
        org.stringtemplate.v4.STGroup sTGroup17 = python2Target1.loadTemplates();
        java.lang.String str19 = python2Target1.getAltLabelContextStructName("_tset\"\\\"\\\\\\\"hi!\\\\\\\"\\\"\"");
        org.stringtemplate.v4.STGroup sTGroup20 = python2Target1.templates;
        org.antlr.v4.codegen.CodeGenerator codeGenerator21 = python2Target1.gen;
        python2Target1.addBadWords();
        org.antlr.v4.tool.Grammar grammar23 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str25 = python2Target1.getTokenTypeAsTargetLabel(grammar23, (int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "@" + "'", str4, "@");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Python2" + "'", str5, "Python2");
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Python2" + "'", str9, "Python2");
        org.junit.Assert.assertNotNull(sTGroup10);
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertNotNull(sTGroup17);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "_tset\"\\\"\\\\\\\"hi!\\\\\\\"\\\"\"Context" + "'", str19, "_tset\"\\\"\\\\\\\"hi!\\\\\\\"\\\"\"Context");
        org.junit.Assert.assertNotNull(sTGroup20);
        org.junit.Assert.assertNull(codeGenerator21);
    }

    @Test
    public void test1021() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1021");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str4 = python2Target1.encodeIntAsCharEscape(64);
        java.lang.String str5 = python2Target1.getLanguage();
        java.lang.String str8 = python2Target1.getTargetStringLiteralFromString("_@", false);
        java.lang.String str10 = python2Target1.encodeIntAsCharEscape((int) (byte) 100);
        java.lang.String str12 = python2Target1.getAltLabelContextStructName("\"_tset\"");
        boolean boolean13 = python2Target1.supportsOverloadedMethods();
        boolean boolean14 = python2Target1.wantsBaseListener();
        java.util.Set<java.lang.String> strSet15 = python2Target1.badWords;
        int int16 = python2Target1.getInlineTestSetWordSize();
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "@" + "'", str4, "@");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Python2" + "'", str5, "Python2");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "_@" + "'", str8, "_@");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "d" + "'", str10, "d");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "\"_tset\"Context" + "'", str12, "\"_tset\"Context");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(strSet15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 64 + "'", int16 == 64);
    }

    @Test
    public void test1022() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1022");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str4 = python2Target1.encodeIntAsCharEscape(64);
        org.stringtemplate.v4.STGroup sTGroup5 = python2Target1.loadTemplates();
        int int6 = python2Target1.getSerializedATNSegmentLimit();
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target8 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator7);
        java.util.Set<java.lang.String> strSet9 = python2Target8.badWords;
        java.lang.String str11 = python2Target8.encodeIntAsCharEscape(64);
        java.lang.String str12 = python2Target8.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator13 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target14 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator13);
        java.lang.String[] strArray15 = python2Target14.targetCharValueEscape;
        java.lang.String str16 = python2Target14.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup17 = python2Target14.getTemplates();
        python2Target8.templates = sTGroup17;
        org.stringtemplate.v4.STGroup sTGroup19 = python2Target8.templates;
        java.util.Set<java.lang.String> strSet20 = python2Target8.badWords;
        java.util.Set<java.lang.String> strSet21 = python2Target8.getBadWords();
        boolean boolean22 = python2Target8.supportsOverloadedMethods();
        java.util.Set<java.lang.String> strSet23 = python2Target8.getBadWords();
        org.stringtemplate.v4.STGroup sTGroup24 = python2Target8.getTemplates();
        python2Target1.templates = sTGroup24;
        boolean boolean26 = python2Target1.templatesExist();
        java.lang.String[] strArray27 = python2Target1.targetCharValueEscape;
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "@" + "'", str4, "@");
        org.junit.Assert.assertNotNull(sTGroup5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2147483647 + "'", int6 == 2147483647);
        org.junit.Assert.assertNotNull(strSet9);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "@" + "'", str11, "@");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Python2" + "'", str12, "Python2");
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Python2" + "'", str16, "Python2");
        org.junit.Assert.assertNotNull(sTGroup17);
        org.junit.Assert.assertNotNull(sTGroup19);
        org.junit.Assert.assertNotNull(strSet20);
        org.junit.Assert.assertNotNull(strSet21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(strSet23);
        org.junit.Assert.assertNotNull(sTGroup24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(strArray27);
    }

    @Test
    public void test1023() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1023");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str5 = python2Target1.getTargetStringLiteralFromString("hi!", false);
        int int6 = python2Target1.getInlineTestSetWordSize();
        boolean boolean7 = python2Target1.wantsBaseVisitor();
        java.lang.String str8 = python2Target1.getLanguage();
        python2Target1.addBadWords();
        java.util.Set<java.lang.String> strSet10 = python2Target1.badWords;
        org.stringtemplate.v4.STGroup sTGroup11 = python2Target1.templates;
        org.antlr.v4.codegen.CodeGenerator codeGenerator12 = null;
        java.lang.String str15 = python2Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator12, "\"Hi!Context\"ContextContext", false);
        int int16 = python2Target1.getInlineTestSetWordSize();
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 64 + "'", int6 == 64);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Python2" + "'", str8, "Python2");
        org.junit.Assert.assertNotNull(strSet10);
        org.junit.Assert.assertNull(sTGroup11);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Hi!Context\\\"ContextContex" + "'", str15, "Hi!Context\\\"ContextContex");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 64 + "'", int16 == 64);
    }

    @Test
    public void test1024() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1024");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String[] strArray2 = python2Target1.targetCharValueEscape;
        java.lang.String str3 = python2Target1.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup4 = python2Target1.templates;
        java.lang.String str6 = python2Target1.getListLabel("\\n");
        org.antlr.v4.tool.Grammar grammar7 = null;
        org.stringtemplate.v4.ST sT8 = null;
        python2Target1.genRecognizerHeaderFile(grammar7, sT8, "\"4.5.2.1\"");
        int int11 = python2Target1.getSerializedATNSegmentLimit();
        org.antlr.v4.codegen.model.RuleFunction ruleFunction12 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str13 = python2Target1.getRuleFunctionContextStructName(ruleFunction12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Python2" + "'", str3, "Python2");
        org.junit.Assert.assertNull(sTGroup4);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\\n" + "'", str6, "\\n");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2147483647 + "'", int11 == 2147483647);
    }

    @Test
    public void test1025() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1025");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str4 = python2Target1.encodeIntAsCharEscape(64);
        java.lang.String str5 = python2Target1.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup6 = python2Target1.getTemplates();
        java.lang.String str7 = python2Target1.language;
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target9 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator8);
        java.lang.String[] strArray10 = python2Target9.targetCharValueEscape;
        java.lang.String str11 = python2Target9.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup12 = python2Target9.getTemplates();
        org.antlr.v4.codegen.CodeGenerator codeGenerator13 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target14 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator13);
        java.util.Set<java.lang.String> strSet15 = python2Target14.badWords;
        python2Target9.badWords = strSet15;
        java.lang.String[] strArray22 = new java.lang.String[] { "@", "\"_tset\"", "\"hi!\"", "_tset\\1", "_tset\\\\1" };
        python2Target9.targetCharValueEscape = strArray22;
        java.lang.String str24 = python2Target9.getLanguage();
        boolean boolean25 = python2Target9.templatesExist();
        java.util.Set<java.lang.String> strSet26 = python2Target9.getBadWords();
        python2Target1.badWords = strSet26;
        java.lang.String str29 = python2Target1.getImplicitSetLabel("\"setConte\"");
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "@" + "'", str4, "@");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Python2" + "'", str5, "Python2");
        org.junit.Assert.assertNotNull(sTGroup6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Python2" + "'", str7, "Python2");
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Python2" + "'", str11, "Python2");
        org.junit.Assert.assertNotNull(sTGroup12);
        org.junit.Assert.assertNotNull(strSet15);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "Python2" + "'", str24, "Python2");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(strSet26);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "_tset\"setConte\"" + "'", str29, "_tset\"setConte\"");
    }

    @Test
    public void test1026() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1026");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String[] strArray2 = python2Target1.targetCharValueEscape;
        java.lang.String str3 = python2Target1.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup4 = python2Target1.templates;
        java.lang.String str6 = python2Target1.getTargetStringLiteralFromString("4.5.2.1");
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = null;
        python2Target1.gen = codeGenerator7;
        java.lang.String str9 = python2Target1.language;
        java.lang.String str11 = python2Target1.getTargetStringLiteralFromString("_tset\"\\\"\\\\\\\"hi!\\\\\\\"\\\"\"");
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Python2" + "'", str3, "Python2");
        org.junit.Assert.assertNull(sTGroup4);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\"4.5.2.1\"" + "'", str6, "\"4.5.2.1\"");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Python2" + "'", str9, "Python2");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "\"_tset\\\"\\\\\\\"\\\\\\\\\\\\\\\"hi!\\\\\\\\\\\\\\\"\\\\\\\"\\\"\"" + "'", str11, "\"_tset\\\"\\\\\\\"\\\\\\\\\\\\\\\"hi!\\\\\\\\\\\\\\\"\\\\\\\"\\\"\"");
    }

    @Test
    public void test1027() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1027");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String[] strArray2 = python2Target1.targetCharValueEscape;
        java.lang.String str3 = python2Target1.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup4 = python2Target1.templates;
        java.lang.String str6 = python2Target1.getListLabel("\\n");
        org.antlr.v4.tool.Grammar grammar7 = null;
        org.stringtemplate.v4.ST sT8 = null;
        python2Target1.genRecognizerHeaderFile(grammar7, sT8, "\"4.5.2.1\"");
        int int11 = python2Target1.getSerializedATNSegmentLimit();
        boolean boolean12 = python2Target1.supportsOverloadedMethods();
        java.lang.String str14 = python2Target1.getImplicitRuleLabel("");
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Python2" + "'", str3, "Python2");
        org.junit.Assert.assertNull(sTGroup4);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\\n" + "'", str6, "\\n");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2147483647 + "'", int11 == 2147483647);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "_" + "'", str14, "_");
    }

    @Test
    public void test1028() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1028");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String[] strArray2 = python2Target1.targetCharValueEscape;
        java.lang.String str3 = python2Target1.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup4 = python2Target1.templates;
        java.lang.String str6 = python2Target1.getListLabel("\\n");
        java.lang.String[] strArray7 = python2Target1.targetCharValueEscape;
        org.antlr.v4.tool.Grammar grammar8 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator9 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target10 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator9);
        java.lang.String[] strArray11 = python2Target10.targetCharValueEscape;
        java.lang.String str14 = python2Target10.getTargetStringLiteralFromString("_tset\\1", false);
        org.antlr.v4.tool.Grammar grammar15 = null;
        int[] intArray16 = new int[] {};
        java.lang.String[] strArray17 = python2Target10.getTokenTypesAsTargetLabels(grammar15, intArray16);
        java.lang.String[] strArray18 = python2Target1.getTokenTypesAsTargetLabels(grammar8, intArray16);
        java.lang.String[] strArray19 = python2Target1.targetCharValueEscape;
        org.stringtemplate.v4.STGroup sTGroup20 = python2Target1.loadTemplates();
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Python2" + "'", str3, "Python2");
        org.junit.Assert.assertNull(sTGroup4);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\\n" + "'", str6, "\\n");
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "_tset\\\\1" + "'", str14, "_tset\\\\1");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[]");
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertNotNull(sTGroup20);
    }

    @Test
    public void test1029() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1029");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String[] strArray2 = python2Target1.targetCharValueEscape;
        org.antlr.v4.tool.Grammar grammar3 = null;
        org.stringtemplate.v4.ST sT4 = null;
        python2Target1.genRecognizerHeaderFile(grammar3, sT4, "hi!");
        python2Target1.language = "_\"_tset\"";
        java.util.Set<java.lang.String> strSet9 = python2Target1.badWords;
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target11 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator10);
        java.lang.String[] strArray12 = python2Target11.targetCharValueEscape;
        java.lang.String str15 = python2Target11.getTargetStringLiteralFromString("Python2", false);
        java.lang.String[] strArray16 = org.antlr.v4.codegen.target.Python2Target.python2Keywords;
        python2Target11.targetCharValueEscape = strArray16;
        python2Target1.targetCharValueEscape = strArray16;
        java.lang.String str20 = python2Target1.encodeIntAsCharEscape((int) '#');
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertNotNull(strSet9);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Python2" + "'", str15, "Python2");
        org.junit.Assert.assertNotNull(strArray16);
// flaky:         org.junit.Assert.assertEquals("'" + str20 + "' != '" + "#" + "'", str20, "#");
    }

    @Test
    public void test1030() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1030");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str5 = python2Target1.getTargetStringLiteralFromString("hi!", false);
        int int6 = python2Target1.getInlineTestSetWordSize();
        boolean boolean7 = python2Target1.wantsBaseVisitor();
        java.lang.String str8 = python2Target1.getLanguage();
        python2Target1.addBadWords();
        org.stringtemplate.v4.STGroup sTGroup10 = python2Target1.templates;
        python2Target1.language = "\"\\\".5.2.\\\"\"";
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 64 + "'", int6 == 64);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Python2" + "'", str8, "Python2");
        org.junit.Assert.assertNull(sTGroup10);
    }

    @Test
    public void test1031() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1031");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String[] strArray2 = python2Target1.targetCharValueEscape;
        java.lang.String str3 = python2Target1.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup4 = python2Target1.templates;
        java.lang.String str6 = python2Target1.getListLabel("\\n");
        org.antlr.v4.tool.Grammar grammar7 = null;
        org.stringtemplate.v4.ST sT8 = null;
        python2Target1.genRecognizerHeaderFile(grammar7, sT8, "\"4.5.2.1\"");
        org.antlr.v4.codegen.target.Python2Target python2Target11 = new org.antlr.v4.codegen.target.Python2Target();
        org.antlr.v4.codegen.CodeGenerator codeGenerator12 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target13 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator12);
        java.util.Set<java.lang.String> strSet14 = python2Target13.badWords;
        java.lang.String str16 = python2Target13.encodeIntAsCharEscape(64);
        java.lang.String str17 = python2Target13.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator18 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target19 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator18);
        java.lang.String[] strArray20 = python2Target19.targetCharValueEscape;
        java.lang.String str21 = python2Target19.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup22 = python2Target19.getTemplates();
        python2Target13.templates = sTGroup22;
        org.stringtemplate.v4.STGroup sTGroup24 = python2Target13.templates;
        java.util.Set<java.lang.String> strSet25 = python2Target13.badWords;
        java.util.Set<java.lang.String> strSet26 = python2Target13.getBadWords();
        boolean boolean27 = python2Target13.supportsOverloadedMethods();
        java.util.Set<java.lang.String> strSet28 = python2Target13.getBadWords();
        org.stringtemplate.v4.STGroup sTGroup29 = python2Target13.getTemplates();
        python2Target11.templates = sTGroup29;
        python2Target1.templates = sTGroup29;
        java.util.Set<java.lang.String> strSet32 = python2Target1.getBadWords();
        java.lang.String str34 = python2Target1.getAltLabelContextStructName("\\\"_tset_tset_tsetContext\\\"\\\"Contex");
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Python2" + "'", str3, "Python2");
        org.junit.Assert.assertNull(sTGroup4);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\\n" + "'", str6, "\\n");
        org.junit.Assert.assertNotNull(strSet14);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "@" + "'", str16, "@");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Python2" + "'", str17, "Python2");
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Python2" + "'", str21, "Python2");
        org.junit.Assert.assertNotNull(sTGroup22);
        org.junit.Assert.assertNotNull(sTGroup24);
        org.junit.Assert.assertNotNull(strSet25);
        org.junit.Assert.assertNotNull(strSet26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(strSet28);
        org.junit.Assert.assertNotNull(sTGroup29);
        org.junit.Assert.assertNotNull(strSet32);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "\\\"_tset_tset_tsetContext\\\"\\\"ContexContext" + "'", str34, "\\\"_tset_tset_tsetContext\\\"\\\"ContexContext");
    }

    @Test
    public void test1032() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1032");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str4 = python2Target1.encodeIntAsCharEscape(64);
        java.lang.String str5 = python2Target1.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup6 = python2Target1.getTemplates();
        boolean boolean7 = python2Target1.supportsOverloadedMethods();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str9 = python2Target1.getElementName("_4.5.2.1");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "@" + "'", str4, "@");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Python2" + "'", str5, "Python2");
        org.junit.Assert.assertNotNull(sTGroup6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    public void test1033() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1033");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String[] strArray2 = python2Target1.targetCharValueEscape;
        java.lang.String str5 = python2Target1.getTargetStringLiteralFromString("_tset\\1", false);
        java.util.Set<java.lang.String> strSet6 = python2Target1.badWords;
        java.lang.Class<?> wildcardClass7 = strSet6.getClass();
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "_tset\\\\1" + "'", str5, "_tset\\\\1");
        org.junit.Assert.assertNotNull(strSet6);
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test1034() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1034");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str4 = python2Target1.encodeIntAsCharEscape(64);
        java.lang.String str5 = python2Target1.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target7 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator6);
        java.lang.String[] strArray8 = python2Target7.targetCharValueEscape;
        java.lang.String str9 = python2Target7.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup10 = python2Target7.getTemplates();
        python2Target1.templates = sTGroup10;
        org.stringtemplate.v4.STGroup sTGroup12 = python2Target1.templates;
        java.util.Set<java.lang.String> strSet13 = python2Target1.badWords;
        java.util.Set<java.lang.String> strSet14 = python2Target1.getBadWords();
        boolean boolean15 = python2Target1.supportsOverloadedMethods();
        org.antlr.v4.codegen.CodeGenerator codeGenerator16 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target17 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator16);
        java.lang.String[] strArray18 = python2Target17.targetCharValueEscape;
        java.lang.String str21 = python2Target17.getTargetStringLiteralFromString("Python2", false);
        java.lang.String str22 = python2Target17.getVersion();
        java.lang.String str24 = python2Target17.encodeIntAsCharEscape((int) (short) 1);
        org.antlr.v4.codegen.CodeGenerator codeGenerator25 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target26 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator25);
        java.util.Set<java.lang.String> strSet27 = python2Target26.badWords;
        java.lang.String str29 = python2Target26.encodeIntAsCharEscape(64);
        java.lang.String str30 = python2Target26.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator31 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target32 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator31);
        java.lang.String[] strArray33 = python2Target32.targetCharValueEscape;
        java.lang.String str34 = python2Target32.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup35 = python2Target32.getTemplates();
        python2Target26.templates = sTGroup35;
        java.util.Set<java.lang.String> strSet37 = python2Target26.getBadWords();
        python2Target17.badWords = strSet37;
        java.lang.String str40 = python2Target17.getAltLabelContextStructName("hi!");
        java.lang.String str41 = python2Target17.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator42 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target43 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator42);
        java.lang.String[] strArray44 = python2Target43.targetCharValueEscape;
        java.lang.String str45 = python2Target43.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup46 = python2Target43.getTemplates();
        python2Target17.templates = sTGroup46;
        python2Target1.templates = sTGroup46;
        java.lang.String str49 = python2Target1.getLanguage();
        java.lang.String str51 = python2Target1.getImplicitRuleLabel("_tset__tset_tset\"\\\"\\\\\\\"hi!\\\\\\\"\\\"\"");
        int int52 = python2Target1.getInlineTestSetWordSize();
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "@" + "'", str4, "@");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Python2" + "'", str5, "Python2");
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Python2" + "'", str9, "Python2");
        org.junit.Assert.assertNotNull(sTGroup10);
        org.junit.Assert.assertNotNull(sTGroup12);
        org.junit.Assert.assertNotNull(strSet13);
        org.junit.Assert.assertNotNull(strSet14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Python2" + "'", str21, "Python2");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "4.5.2.1" + "'", str22, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "\\1" + "'", str24, "\\1");
        org.junit.Assert.assertNotNull(strSet27);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "@" + "'", str29, "@");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "Python2" + "'", str30, "Python2");
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "Python2" + "'", str34, "Python2");
        org.junit.Assert.assertNotNull(sTGroup35);
        org.junit.Assert.assertNotNull(strSet37);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "Hi!Context" + "'", str40, "Hi!Context");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "4.5.2.1" + "'", str41, "4.5.2.1");
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "Python2" + "'", str45, "Python2");
        org.junit.Assert.assertNotNull(sTGroup46);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "Python2" + "'", str49, "Python2");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "__tset__tset_tset\"\\\"\\\\\\\"hi!\\\\\\\"\\\"\"" + "'", str51, "__tset__tset_tset\"\\\"\\\\\\\"hi!\\\\\\\"\\\"\"");
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 64 + "'", int52 == 64);
    }

    @Test
    public void test1035() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1035");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str4 = python2Target1.encodeIntAsCharEscape(64);
        java.lang.String str6 = python2Target1.getAltLabelContextStructName("Python2");
        boolean boolean7 = python2Target1.supportsOverloadedMethods();
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target9 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator8);
        java.util.Set<java.lang.String> strSet10 = python2Target9.badWords;
        boolean boolean11 = python2Target9.wantsBaseVisitor();
        org.stringtemplate.v4.STGroup sTGroup12 = python2Target9.loadTemplates();
        org.stringtemplate.v4.STGroup sTGroup13 = python2Target9.getTemplates();
        python2Target1.templates = sTGroup13;
        java.lang.String str17 = python2Target1.getTargetStringLiteralFromString("\\12", true);
        int int18 = python2Target1.getInlineTestSetWordSize();
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "@" + "'", str4, "@");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Python2Context" + "'", str6, "Python2Context");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(strSet10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(sTGroup12);
        org.junit.Assert.assertNotNull(sTGroup13);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "\"\\\\12\"" + "'", str17, "\"\\\\12\"");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 64 + "'", int18 == 64);
    }

    @Test
    public void test1036() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1036");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String[] strArray2 = python2Target1.targetCharValueEscape;
        java.lang.String str3 = python2Target1.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup4 = python2Target1.templates;
        java.lang.String str6 = python2Target1.getTargetStringLiteralFromString("4.5.2.1");
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = null;
        python2Target1.gen = codeGenerator7;
        org.stringtemplate.v4.STGroup sTGroup9 = python2Target1.templates;
        org.antlr.v4.codegen.target.Python2Target python2Target10 = new org.antlr.v4.codegen.target.Python2Target();
        org.stringtemplate.v4.STGroup sTGroup11 = python2Target10.templates;
        java.lang.String[] strArray12 = python2Target10.targetCharValueEscape;
        org.antlr.v4.codegen.CodeGenerator codeGenerator13 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target14 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator13);
        java.lang.String[] strArray15 = python2Target14.targetCharValueEscape;
        java.lang.String str18 = python2Target14.getTargetStringLiteralFromString("Python2", false);
        java.lang.String[] strArray19 = org.antlr.v4.codegen.target.Python2Target.python2Keywords;
        python2Target14.targetCharValueEscape = strArray19;
        python2Target10.targetCharValueEscape = strArray19;
        python2Target1.targetCharValueEscape = strArray19;
        java.util.Set<java.lang.String> strSet23 = python2Target1.badWords;
        org.antlr.v4.codegen.CodeGenerator codeGenerator24 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target25 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator24);
        java.lang.String[] strArray26 = python2Target25.targetCharValueEscape;
        java.lang.String str27 = python2Target25.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup28 = python2Target25.getTemplates();
        boolean boolean29 = python2Target25.wantsBaseVisitor();
        java.lang.String str31 = python2Target25.getTargetStringLiteralFromString("d");
        java.lang.String[] strArray37 = new java.lang.String[] { "_tset\\1", "i", "__tset", "\"\\\"d\\\"\"", "_tsetContextContext" };
        python2Target25.targetCharValueEscape = strArray37;
        boolean boolean39 = python2Target25.templatesExist();
        org.antlr.v4.codegen.CodeGenerator codeGenerator40 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target41 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator40);
        java.util.Set<java.lang.String> strSet42 = python2Target41.badWords;
        java.lang.String str44 = python2Target41.encodeIntAsCharEscape(64);
        java.lang.String str45 = python2Target41.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup46 = python2Target41.getTemplates();
        org.antlr.v4.codegen.CodeGenerator codeGenerator47 = python2Target41.getCodeGenerator();
        java.util.Set<java.lang.String> strSet48 = python2Target41.getBadWords();
        python2Target25.badWords = strSet48;
        python2Target1.badWords = strSet48;
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Python2" + "'", str3, "Python2");
        org.junit.Assert.assertNull(sTGroup4);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\"4.5.2.1\"" + "'", str6, "\"4.5.2.1\"");
        org.junit.Assert.assertNull(sTGroup9);
        org.junit.Assert.assertNull(sTGroup11);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Python2" + "'", str18, "Python2");
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertNotNull(strSet23);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "Python2" + "'", str27, "Python2");
        org.junit.Assert.assertNotNull(sTGroup28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "\"d\"" + "'", str31, "\"d\"");
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(strSet42);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "@" + "'", str44, "@");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "Python2" + "'", str45, "Python2");
        org.junit.Assert.assertNotNull(sTGroup46);
        org.junit.Assert.assertNull(codeGenerator47);
        org.junit.Assert.assertNotNull(strSet48);
    }

    @Test
    public void test1037() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1037");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String[] strArray2 = python2Target1.targetCharValueEscape;
        org.stringtemplate.v4.STGroup sTGroup3 = python2Target1.loadTemplates();
        org.antlr.v4.codegen.CodeGenerator codeGenerator4 = null;
        java.lang.String str7 = python2Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator4, "", false);
        boolean boolean8 = python2Target1.supportsOverloadedMethods();
        boolean boolean9 = python2Target1.templatesExist();
        boolean boolean10 = python2Target1.supportsOverloadedMethods();
        org.antlr.v4.codegen.CodeGenerator codeGenerator11 = python2Target1.gen;
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertNotNull(sTGroup3);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(codeGenerator11);
    }

    @Test
    public void test1038() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1038");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str4 = python2Target1.encodeIntAsCharEscape(64);
        java.lang.String str5 = python2Target1.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target7 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator6);
        java.lang.String[] strArray8 = python2Target7.targetCharValueEscape;
        java.lang.String str9 = python2Target7.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup10 = python2Target7.getTemplates();
        python2Target1.templates = sTGroup10;
        org.antlr.v4.tool.Grammar grammar12 = null;
        org.stringtemplate.v4.ST sT13 = null;
        python2Target1.genRecognizerHeaderFile(grammar12, sT13, "\"_tset\"");
        boolean boolean16 = python2Target1.wantsBaseVisitor();
        org.antlr.v4.codegen.CodeGenerator codeGenerator17 = python2Target1.getCodeGenerator();
        org.stringtemplate.v4.STGroup sTGroup18 = python2Target1.loadTemplates();
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "@" + "'", str4, "@");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Python2" + "'", str5, "Python2");
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Python2" + "'", str9, "Python2");
        org.junit.Assert.assertNotNull(sTGroup10);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(codeGenerator17);
        org.junit.Assert.assertNotNull(sTGroup18);
    }

    @Test
    public void test1039() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1039");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String[] strArray2 = python2Target1.targetCharValueEscape;
        java.lang.String str5 = python2Target1.getTargetStringLiteralFromString("Python2", false);
        java.lang.String str6 = python2Target1.getVersion();
        java.lang.String str8 = python2Target1.encodeIntAsCharEscape((int) (short) 1);
        int int9 = python2Target1.getSerializedATNSegmentLimit();
        java.lang.String str10 = python2Target1.getVersion();
        boolean boolean11 = python2Target1.wantsBaseListener();
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Python2" + "'", str5, "Python2");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "4.5.2.1" + "'", str6, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\\1" + "'", str8, "\\1");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 2147483647 + "'", int9 == 2147483647);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "4.5.2.1" + "'", str10, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test1040() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1040");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str4 = python2Target1.encodeIntAsCharEscape(64);
        java.lang.String str5 = python2Target1.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target7 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator6);
        java.lang.String[] strArray8 = python2Target7.targetCharValueEscape;
        java.lang.String str9 = python2Target7.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup10 = python2Target7.getTemplates();
        python2Target1.templates = sTGroup10;
        java.util.Set<java.lang.String> strSet12 = python2Target1.getBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator13 = python2Target1.getCodeGenerator();
        java.util.Set<java.lang.String> strSet14 = python2Target1.getBadWords();
        boolean boolean15 = python2Target1.wantsBaseListener();
        java.lang.String str18 = python2Target1.getTargetStringLiteralFromString("\"\\\"hi!\\\"\"", true);
        org.stringtemplate.v4.STGroup sTGroup19 = python2Target1.getTemplates();
        org.antlr.v4.codegen.CodeGenerator codeGenerator20 = python2Target1.gen;
        int int21 = python2Target1.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet22 = python2Target1.badWords;
        int int23 = python2Target1.getInlineTestSetWordSize();
        org.antlr.v4.codegen.CodeGenerator codeGenerator24 = null;
        java.lang.String str27 = python2Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator24, "\"_\\\"\\\\\\\"hi!\\\\\\\"\\\"\"", false);
        java.lang.String str29 = python2Target1.getListLabel("\"__tset\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator30 = null;
        java.lang.String str33 = python2Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator30, "", false);
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "@" + "'", str4, "@");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Python2" + "'", str5, "Python2");
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Python2" + "'", str9, "Python2");
        org.junit.Assert.assertNotNull(sTGroup10);
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertNull(codeGenerator13);
        org.junit.Assert.assertNotNull(strSet14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "\"\\\"\\\\\\\"hi!\\\\\\\"\\\"\"" + "'", str18, "\"\\\"\\\\\\\"hi!\\\\\\\"\\\"\"");
        org.junit.Assert.assertNotNull(sTGroup19);
        org.junit.Assert.assertNull(codeGenerator20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 64 + "'", int21 == 64);
        org.junit.Assert.assertNotNull(strSet22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 64 + "'", int23 == 64);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "_\\\"\\\\\\\"hi!\\\\\\\"\\\"" + "'", str27, "_\\\"\\\\\\\"hi!\\\\\\\"\\\"");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "\"__tset\"" + "'", str29, "\"__tset\"");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "" + "'", str33, "");
    }

    @Test
    public void test1041() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1041");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str5 = python2Target1.getTargetStringLiteralFromString("hi!", false);
        int int6 = python2Target1.getInlineTestSetWordSize();
        boolean boolean7 = python2Target1.wantsBaseVisitor();
        java.lang.String str8 = python2Target1.getLanguage();
        python2Target1.addBadWords();
        boolean boolean10 = python2Target1.templatesExist();
        java.lang.String str12 = python2Target1.getTargetStringLiteralFromString("");
        python2Target1.language = "__tsetContextContext";
        java.lang.String str15 = python2Target1.language;
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 64 + "'", int6 == 64);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Python2" + "'", str8, "Python2");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "\"\"" + "'", str12, "\"\"");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "__tsetContextContext" + "'", str15, "__tsetContextContext");
    }

    @Test
    public void test1042() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1042");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str4 = python2Target1.encodeIntAsCharEscape(64);
        java.lang.String str5 = python2Target1.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target7 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator6);
        java.lang.String[] strArray8 = python2Target7.targetCharValueEscape;
        java.lang.String str9 = python2Target7.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup10 = python2Target7.getTemplates();
        python2Target1.templates = sTGroup10;
        org.stringtemplate.v4.STGroup sTGroup12 = python2Target1.templates;
        java.util.Set<java.lang.String> strSet13 = python2Target1.badWords;
        java.util.Set<java.lang.String> strSet14 = python2Target1.getBadWords();
        java.lang.String str16 = python2Target1.getImplicitSetLabel("\"\\\"\\\\\\\"hi!\\\\\\\"\\\"\"");
        boolean boolean17 = python2Target1.supportsOverloadedMethods();
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "@" + "'", str4, "@");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Python2" + "'", str5, "Python2");
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Python2" + "'", str9, "Python2");
        org.junit.Assert.assertNotNull(sTGroup10);
        org.junit.Assert.assertNotNull(sTGroup12);
        org.junit.Assert.assertNotNull(strSet13);
        org.junit.Assert.assertNotNull(strSet14);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "_tset\"\\\"\\\\\\\"hi!\\\\\\\"\\\"\"" + "'", str16, "_tset\"\\\"\\\\\\\"hi!\\\\\\\"\\\"\"");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    }

    @Test
    public void test1043() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1043");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str4 = python2Target1.encodeIntAsCharEscape(64);
        java.lang.String str5 = python2Target1.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target7 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator6);
        java.lang.String[] strArray8 = python2Target7.targetCharValueEscape;
        java.lang.String str9 = python2Target7.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup10 = python2Target7.getTemplates();
        python2Target1.templates = sTGroup10;
        org.antlr.v4.tool.Grammar grammar12 = null;
        org.stringtemplate.v4.ST sT13 = null;
        python2Target1.genRecognizerHeaderFile(grammar12, sT13, "\"_tset\"");
        boolean boolean16 = python2Target1.wantsBaseVisitor();
        org.antlr.v4.codegen.CodeGenerator codeGenerator17 = python2Target1.getCodeGenerator();
        org.antlr.v4.tool.Grammar grammar18 = null;
        org.stringtemplate.v4.ST sT19 = null;
        // The following exception was thrown during execution in test generation
        try {
            python2Target1.genFile(grammar18, sT19, "Contex");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "@" + "'", str4, "@");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Python2" + "'", str5, "Python2");
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Python2" + "'", str9, "Python2");
        org.junit.Assert.assertNotNull(sTGroup10);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(codeGenerator17);
    }

    @Test
    public void test1044() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1044");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str5 = python2Target1.getTargetStringLiteralFromString("hi!", false);
        int int6 = python2Target1.getInlineTestSetWordSize();
        boolean boolean7 = python2Target1.wantsBaseVisitor();
        java.lang.String str8 = python2Target1.getLanguage();
        boolean boolean9 = python2Target1.wantsBaseVisitor();
        boolean boolean10 = python2Target1.wantsBaseVisitor();
        org.stringtemplate.v4.STGroup sTGroup11 = python2Target1.templates;
        int int12 = python2Target1.getSerializedATNSegmentLimit();
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 64 + "'", int6 == 64);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Python2" + "'", str8, "Python2");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(sTGroup11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 2147483647 + "'", int12 == 2147483647);
    }

    @Test
    public void test1045() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1045");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        boolean boolean3 = python2Target1.wantsBaseVisitor();
        org.stringtemplate.v4.STGroup sTGroup4 = python2Target1.loadTemplates();
        org.stringtemplate.v4.STGroup sTGroup5 = python2Target1.loadTemplates();
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = null;
        python2Target1.gen = codeGenerator6;
        java.lang.String str9 = python2Target1.getTargetStringLiteralFromString("\"\\\"_tset_tset_tsetContext\\\"\"Context");
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(sTGroup4);
        org.junit.Assert.assertNotNull(sTGroup5);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\"\\\"\\\\\\\"_tset_tset_tsetContext\\\\\\\"\\\"Context\"" + "'", str9, "\"\\\"\\\\\\\"_tset_tset_tsetContext\\\\\\\"\\\"Context\"");
    }

    @Test
    public void test1046() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1046");
        org.antlr.v4.codegen.target.Python2Target.PythonStringRenderer pythonStringRenderer0 = new org.antlr.v4.codegen.target.Python2Target.PythonStringRenderer();
        org.antlr.v4.codegen.CodeGenerator codeGenerator1 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target2 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator1);
        java.util.Set<java.lang.String> strSet3 = python2Target2.badWords;
        java.lang.String str5 = python2Target2.encodeIntAsCharEscape(64);
        java.lang.String str7 = python2Target2.getAltLabelContextStructName("Python2");
        java.util.Locale locale9 = null;
        java.lang.String str10 = pythonStringRenderer0.toString((java.lang.Object) "Python2", "hi!", locale9);
        org.antlr.v4.codegen.CodeGenerator codeGenerator11 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target12 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator11);
        java.lang.String[] strArray13 = python2Target12.targetCharValueEscape;
        java.lang.String str14 = python2Target12.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup15 = python2Target12.getTemplates();
        java.lang.String str17 = python2Target12.getTargetStringLiteralFromString("_tset");
        java.lang.String str18 = python2Target12.getVersion();
        int int19 = python2Target12.getSerializedATNSegmentLimit();
        org.antlr.v4.codegen.CodeGenerator codeGenerator20 = python2Target12.getCodeGenerator();
        python2Target12.addBadWords();
        org.antlr.v4.tool.Grammar grammar22 = null;
        org.stringtemplate.v4.ST sT23 = null;
        python2Target12.genRecognizerHeaderFile(grammar22, sT23, "\"__tset\"");
        java.util.Locale locale27 = null;
        java.lang.String str28 = pythonStringRenderer0.toString((java.lang.Object) "\"__tset\"", "_\"\\\"hi!\\\"\"", locale27);
        org.antlr.v4.codegen.CodeGenerator codeGenerator29 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target30 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator29);
        java.lang.String[] strArray31 = python2Target30.targetCharValueEscape;
        java.lang.String str32 = python2Target30.getLanguage();
        java.lang.String str35 = python2Target30.getTargetStringLiteralFromString("_tset", true);
        java.lang.String str37 = python2Target30.getAltLabelContextStructName("\"d\"");
        java.util.Locale locale39 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str40 = pythonStringRenderer0.toString((java.lang.Object) python2Target30, "\"_tsethi!\"", locale39);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: org.antlr.v4.codegen.target.Python2Target cannot be cast to java.lang.String");
        } catch (java.lang.ClassCastException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "@" + "'", str5, "@");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Python2Context" + "'", str7, "Python2Context");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Python2" + "'", str14, "Python2");
        org.junit.Assert.assertNotNull(sTGroup15);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "\"_tset\"" + "'", str17, "\"_tset\"");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "4.5.2.1" + "'", str18, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 2147483647 + "'", int19 == 2147483647);
        org.junit.Assert.assertNull(codeGenerator20);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "_\"\\\"hi!\\\"\"" + "'", str28, "_\"\\\"hi!\\\"\"");
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "Python2" + "'", str32, "Python2");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "\"_tset\"" + "'", str35, "\"_tset\"");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "\"d\"Context" + "'", str37, "\"d\"Context");
    }

    @Test
    public void test1047() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1047");
        org.antlr.v4.codegen.target.Python2Target.PythonStringRenderer pythonStringRenderer0 = new org.antlr.v4.codegen.target.Python2Target.PythonStringRenderer();
        org.antlr.v4.codegen.CodeGenerator codeGenerator1 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target2 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator1);
        java.lang.String[] strArray3 = python2Target2.targetCharValueEscape;
        java.lang.String str6 = python2Target2.getTargetStringLiteralFromString("Python2", false);
        java.lang.String str7 = python2Target2.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = python2Target2.gen;
        java.util.Locale locale10 = null;
        java.lang.String str11 = pythonStringRenderer0.toString((java.lang.Object) codeGenerator8, "\"4.5.2.1\"", locale10);
        org.antlr.v4.codegen.CodeGenerator codeGenerator12 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target13 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator12);
        java.lang.String[] strArray14 = python2Target13.targetCharValueEscape;
        java.lang.String str15 = python2Target13.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup16 = python2Target13.templates;
        java.lang.String str18 = python2Target13.getListLabel("\\n");
        org.antlr.v4.tool.Grammar grammar19 = null;
        org.stringtemplate.v4.ST sT20 = null;
        python2Target13.genRecognizerHeaderFile(grammar19, sT20, "\"4.5.2.1\"");
        int int23 = python2Target13.getSerializedATNSegmentLimit();
        java.lang.String str24 = python2Target13.language;
        org.antlr.v4.tool.Grammar grammar25 = null;
        org.stringtemplate.v4.ST sT26 = null;
        python2Target13.genRecognizerHeaderFile(grammar25, sT26, "_tset_\"#\"");
        java.util.Locale locale30 = null;
        java.lang.String str31 = pythonStringRenderer0.toString((java.lang.Object) "_tset_\"#\"", "\"_\"\\\"hi!\\\"\"\"", locale30);
        org.antlr.v4.codegen.CodeGenerator codeGenerator32 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target33 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator32);
        java.util.Set<java.lang.String> strSet34 = python2Target33.badWords;
        boolean boolean35 = python2Target33.wantsBaseVisitor();
        org.stringtemplate.v4.STGroup sTGroup36 = python2Target33.loadTemplates();
        org.stringtemplate.v4.STGroup sTGroup37 = python2Target33.getTemplates();
        java.util.Set<java.lang.String> strSet38 = python2Target33.badWords;
        org.antlr.v4.codegen.CodeGenerator codeGenerator39 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target40 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator39);
        java.util.Set<java.lang.String> strSet41 = python2Target40.badWords;
        java.lang.String str44 = python2Target40.getTargetStringLiteralFromString("hi!", false);
        java.lang.String str46 = python2Target40.getTargetStringLiteralFromString("\"hi!\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator47 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target48 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator47);
        java.util.Set<java.lang.String> strSet49 = python2Target48.badWords;
        java.lang.String str51 = python2Target48.encodeIntAsCharEscape(64);
        java.lang.String str52 = python2Target48.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator53 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target54 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator53);
        java.lang.String[] strArray55 = python2Target54.targetCharValueEscape;
        java.lang.String str56 = python2Target54.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup57 = python2Target54.getTemplates();
        python2Target48.templates = sTGroup57;
        org.antlr.v4.tool.Grammar grammar59 = null;
        org.stringtemplate.v4.ST sT60 = null;
        python2Target48.genRecognizerHeaderFile(grammar59, sT60, "\"_tset\"");
        java.util.Set<java.lang.String> strSet63 = python2Target48.getBadWords();
        python2Target40.badWords = strSet63;
        python2Target33.badWords = strSet63;
        org.stringtemplate.v4.STGroup sTGroup66 = python2Target33.getTemplates();
        java.util.Locale locale68 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str69 = pythonStringRenderer0.toString((java.lang.Object) python2Target33, "\"\".5.2.\"\"", locale68);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: org.antlr.v4.codegen.target.Python2Target cannot be cast to java.lang.String");
        } catch (java.lang.ClassCastException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Python2" + "'", str6, "Python2");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "4.5.2.1" + "'", str7, "4.5.2.1");
        org.junit.Assert.assertNull(codeGenerator8);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "\"4.5.2.1\"" + "'", str11, "\"4.5.2.1\"");
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Python2" + "'", str15, "Python2");
        org.junit.Assert.assertNull(sTGroup16);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "\\n" + "'", str18, "\\n");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 2147483647 + "'", int23 == 2147483647);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "Python2" + "'", str24, "Python2");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "\"_\"\\\"hi!\\\"\"\"" + "'", str31, "\"_\"\\\"hi!\\\"\"\"");
        org.junit.Assert.assertNotNull(strSet34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(sTGroup36);
        org.junit.Assert.assertNotNull(sTGroup37);
        org.junit.Assert.assertNotNull(strSet38);
        org.junit.Assert.assertNotNull(strSet41);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "hi!" + "'", str44, "hi!");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "\"\\\"hi!\\\"\"" + "'", str46, "\"\\\"hi!\\\"\"");
        org.junit.Assert.assertNotNull(strSet49);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "@" + "'", str51, "@");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "Python2" + "'", str52, "Python2");
        org.junit.Assert.assertNotNull(strArray55);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "Python2" + "'", str56, "Python2");
        org.junit.Assert.assertNotNull(sTGroup57);
        org.junit.Assert.assertNotNull(strSet63);
        org.junit.Assert.assertNotNull(sTGroup66);
    }

    @Test
    public void test1048() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1048");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str4 = python2Target1.encodeIntAsCharEscape(64);
        java.lang.String str5 = python2Target1.getLanguage();
        java.lang.String str6 = python2Target1.getLanguage();
        java.util.Set<java.lang.String> strSet7 = python2Target1.badWords;
        java.lang.String str10 = python2Target1.getTargetStringLiteralFromString("\"\\\"d\\\"\"", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator11 = null;
        python2Target1.gen = codeGenerator11;
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "@" + "'", str4, "@");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Python2" + "'", str5, "Python2");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Python2" + "'", str6, "Python2");
        org.junit.Assert.assertNotNull(strSet7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\"\\\"\\\\\\\"d\\\\\\\"\\\"\"" + "'", str10, "\"\\\"\\\\\\\"d\\\\\\\"\\\"\"");
    }

    @Test
    public void test1049() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1049");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String[] strArray2 = python2Target1.targetCharValueEscape;
        org.antlr.v4.tool.Grammar grammar3 = null;
        org.stringtemplate.v4.ST sT4 = null;
        python2Target1.genRecognizerHeaderFile(grammar3, sT4, "hi!");
        python2Target1.language = "_\"_tset\"";
        java.util.Set<java.lang.String> strSet9 = python2Target1.badWords;
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target11 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator10);
        java.lang.String[] strArray12 = python2Target11.targetCharValueEscape;
        java.lang.String str15 = python2Target11.getTargetStringLiteralFromString("Python2", false);
        java.lang.String[] strArray16 = org.antlr.v4.codegen.target.Python2Target.python2Keywords;
        python2Target11.targetCharValueEscape = strArray16;
        python2Target1.targetCharValueEscape = strArray16;
        java.lang.String str19 = python2Target1.language;
        // The following exception was thrown during execution in test generation
        try {
            org.stringtemplate.v4.STGroup sTGroup20 = python2Target1.loadTemplates();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertNotNull(strSet9);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Python2" + "'", str15, "Python2");
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "_\"_tset\"" + "'", str19, "_\"_tset\"");
    }

    @Test
    public void test1050() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1050");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str5 = python2Target1.getTargetStringLiteralFromString("hi!", false);
        java.lang.String str7 = python2Target1.getImplicitRuleLabel("@");
        python2Target1.language = "hi!";
        java.util.Set<java.lang.String> strSet10 = python2Target1.getBadWords();
        org.antlr.v4.tool.Grammar grammar11 = null;
        org.stringtemplate.v4.ST sT12 = null;
        python2Target1.genRecognizerHeaderFile(grammar11, sT12, "_@");
        java.lang.String str16 = python2Target1.encodeIntAsCharEscape((int) '#');
        org.antlr.v4.tool.ast.GrammarAST grammarAST17 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean18 = python2Target1.visibleGrammarSymbolCausesIssueInGeneratedCode(grammarAST17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "_@" + "'", str7, "_@");
        org.junit.Assert.assertNotNull(strSet10);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "#" + "'", str16, "#");
    }

    @Test
    public void test1051() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1051");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str4 = python2Target1.encodeIntAsCharEscape(64);
        java.lang.String str6 = python2Target1.getAltLabelContextStructName("Python2");
        boolean boolean7 = python2Target1.supportsOverloadedMethods();
        org.antlr.v4.tool.Grammar grammar8 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator9 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target10 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator9);
        java.lang.String[] strArray11 = python2Target10.targetCharValueEscape;
        java.lang.String str12 = python2Target10.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup13 = python2Target10.getTemplates();
        org.antlr.v4.codegen.CodeGenerator codeGenerator14 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target15 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator14);
        java.util.Set<java.lang.String> strSet16 = python2Target15.badWords;
        python2Target10.badWords = strSet16;
        org.antlr.v4.tool.Grammar grammar18 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator19 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target20 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator19);
        java.util.Set<java.lang.String> strSet21 = python2Target20.badWords;
        java.lang.String str23 = python2Target20.encodeIntAsCharEscape(64);
        java.lang.String str24 = python2Target20.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator25 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target26 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator25);
        java.lang.String[] strArray27 = python2Target26.targetCharValueEscape;
        java.lang.String str28 = python2Target26.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup29 = python2Target26.getTemplates();
        python2Target20.templates = sTGroup29;
        org.stringtemplate.v4.STGroup sTGroup31 = python2Target20.templates;
        java.util.Set<java.lang.String> strSet32 = python2Target20.badWords;
        java.util.Set<java.lang.String> strSet33 = python2Target20.getBadWords();
        boolean boolean34 = python2Target20.supportsOverloadedMethods();
        java.util.Set<java.lang.String> strSet35 = python2Target20.getBadWords();
        org.antlr.v4.tool.Grammar grammar36 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator37 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target38 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator37);
        java.lang.String[] strArray39 = python2Target38.targetCharValueEscape;
        java.lang.String str42 = python2Target38.getTargetStringLiteralFromString("_tset\\1", false);
        org.antlr.v4.tool.Grammar grammar43 = null;
        int[] intArray44 = new int[] {};
        java.lang.String[] strArray45 = python2Target38.getTokenTypesAsTargetLabels(grammar43, intArray44);
        java.lang.String[] strArray46 = python2Target20.getTokenTypesAsTargetLabels(grammar36, intArray44);
        java.lang.String[] strArray47 = python2Target10.getTokenTypesAsTargetLabels(grammar18, intArray44);
        java.lang.String[] strArray48 = python2Target1.getTokenTypesAsTargetLabels(grammar8, intArray44);
        org.antlr.v4.tool.Grammar grammar49 = null;
        org.stringtemplate.v4.ST sT50 = null;
        python2Target1.genRecognizerHeaderFile(grammar49, sT50, "\"tset_tset\\\"\\\"\\\\\\\"hi!\\\\\\\"\\\"\"");
        org.antlr.v4.tool.Grammar grammar53 = null;
        org.stringtemplate.v4.ST sT54 = null;
        python2Target1.genRecognizerHeaderFile(grammar53, sT54, "\"\\\"\\\\\\\"_tset_tset_tsetContext\\\\\\\"\\\"Context\"");
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "@" + "'", str4, "@");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Python2Context" + "'", str6, "Python2Context");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Python2" + "'", str12, "Python2");
        org.junit.Assert.assertNotNull(sTGroup13);
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertNotNull(strSet21);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "@" + "'", str23, "@");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "Python2" + "'", str24, "Python2");
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "Python2" + "'", str28, "Python2");
        org.junit.Assert.assertNotNull(sTGroup29);
        org.junit.Assert.assertNotNull(sTGroup31);
        org.junit.Assert.assertNotNull(strSet32);
        org.junit.Assert.assertNotNull(strSet33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(strSet35);
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "_tset\\\\1" + "'", str42, "_tset\\\\1");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[]");
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertNotNull(strArray48);
    }

    @Test
    public void test1052() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1052");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str5 = python2Target1.getTargetStringLiteralFromString("hi!", false);
        java.lang.String str7 = python2Target1.getImplicitRuleLabel("@");
        python2Target1.language = "hi!";
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target11 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator10);
        java.util.Set<java.lang.String> strSet12 = python2Target11.badWords;
        java.lang.String str14 = python2Target11.encodeIntAsCharEscape(64);
        java.lang.String str15 = python2Target11.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator16 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target17 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator16);
        java.lang.String[] strArray18 = python2Target17.targetCharValueEscape;
        java.lang.String str19 = python2Target17.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup20 = python2Target17.getTemplates();
        python2Target11.templates = sTGroup20;
        org.antlr.v4.codegen.CodeGenerator codeGenerator22 = python2Target11.getCodeGenerator();
        org.stringtemplate.v4.STGroup sTGroup23 = python2Target11.loadTemplates();
        python2Target1.templates = sTGroup23;
        java.lang.String str26 = python2Target1.getListLabel("hi!");
        boolean boolean27 = python2Target1.templatesExist();
        org.antlr.v4.codegen.CodeGenerator codeGenerator28 = null;
        python2Target1.gen = codeGenerator28;
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "_@" + "'", str7, "_@");
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "@" + "'", str14, "@");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Python2" + "'", str15, "Python2");
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Python2" + "'", str19, "Python2");
        org.junit.Assert.assertNotNull(sTGroup20);
        org.junit.Assert.assertNull(codeGenerator22);
        org.junit.Assert.assertNotNull(sTGroup23);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "hi!" + "'", str26, "hi!");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
    }

    @Test
    public void test1053() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1053");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String[] strArray2 = python2Target1.targetCharValueEscape;
        java.lang.String str3 = python2Target1.getLanguage();
        org.antlr.v4.tool.Grammar grammar4 = null;
        org.stringtemplate.v4.ST sT5 = null;
        python2Target1.genRecognizerHeaderFile(grammar4, sT5, "\\1");
        int int8 = python2Target1.getSerializedATNSegmentLimit();
        java.lang.String str10 = python2Target1.getImplicitSetLabel("_\"tsetContex\"");
        org.antlr.v4.tool.ast.GrammarAST grammarAST11 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str12 = python2Target1.getLoopLabel(grammarAST11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Python2" + "'", str3, "Python2");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 2147483647 + "'", int8 == 2147483647);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "_tset_\"tsetContex\"" + "'", str10, "_tset_\"tsetContex\"");
    }

    @Test
    public void test1054() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1054");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String[] strArray2 = python2Target1.targetCharValueEscape;
        java.lang.String str3 = python2Target1.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup4 = python2Target1.templates;
        java.lang.String str6 = python2Target1.getListLabel("\\n");
        java.lang.String[] strArray7 = python2Target1.targetCharValueEscape;
        org.antlr.v4.tool.Grammar grammar8 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator9 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target10 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator9);
        java.lang.String[] strArray11 = python2Target10.targetCharValueEscape;
        java.lang.String str14 = python2Target10.getTargetStringLiteralFromString("_tset\\1", false);
        org.antlr.v4.tool.Grammar grammar15 = null;
        int[] intArray16 = new int[] {};
        java.lang.String[] strArray17 = python2Target10.getTokenTypesAsTargetLabels(grammar15, intArray16);
        java.lang.String[] strArray18 = python2Target1.getTokenTypesAsTargetLabels(grammar8, intArray16);
        org.antlr.v4.tool.Grammar grammar19 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator20 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target21 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator20);
        java.lang.String[] strArray22 = python2Target21.targetCharValueEscape;
        java.lang.String str25 = python2Target21.getTargetStringLiteralFromString("_tset\\1", false);
        org.antlr.v4.tool.Grammar grammar26 = null;
        int[] intArray27 = new int[] {};
        java.lang.String[] strArray28 = python2Target21.getTokenTypesAsTargetLabels(grammar26, intArray27);
        java.lang.String[] strArray29 = python2Target1.getTokenTypesAsTargetLabels(grammar19, intArray27);
        int int30 = python2Target1.getSerializedATNSegmentLimit();
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Python2" + "'", str3, "Python2");
        org.junit.Assert.assertNull(sTGroup4);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\\n" + "'", str6, "\\n");
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "_tset\\\\1" + "'", str14, "_tset\\\\1");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[]");
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "_tset\\\\1" + "'", str25, "_tset\\\\1");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[]");
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 2147483647 + "'", int30 == 2147483647);
    }

    @Test
    public void test1055() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1055");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str4 = python2Target1.encodeIntAsCharEscape(64);
        java.lang.String str5 = python2Target1.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target7 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator6);
        java.lang.String[] strArray8 = python2Target7.targetCharValueEscape;
        java.lang.String str9 = python2Target7.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup10 = python2Target7.getTemplates();
        python2Target1.templates = sTGroup10;
        org.stringtemplate.v4.STGroup sTGroup12 = python2Target1.templates;
        java.util.Set<java.lang.String> strSet13 = python2Target1.badWords;
        boolean boolean14 = python2Target1.supportsOverloadedMethods();
        java.lang.String str16 = python2Target1.getImplicitSetLabel("\"Hi!Context\"");
        java.lang.String str17 = python2Target1.language;
        java.lang.String str19 = python2Target1.getImplicitSetLabel("\"\\\"\\\\\\\"hi!\\\\\\\"\\\"\"");
        java.lang.String str21 = python2Target1.getTargetStringLiteralFromString("_tset\\n");
        java.lang.String str22 = python2Target1.getLanguage();
        boolean boolean23 = python2Target1.supportsOverloadedMethods();
        org.antlr.v4.tool.ast.GrammarAST grammarAST24 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str25 = python2Target1.getLoopCounter(grammarAST24);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "@" + "'", str4, "@");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Python2" + "'", str5, "Python2");
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Python2" + "'", str9, "Python2");
        org.junit.Assert.assertNotNull(sTGroup10);
        org.junit.Assert.assertNotNull(sTGroup12);
        org.junit.Assert.assertNotNull(strSet13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "_tset\"Hi!Context\"" + "'", str16, "_tset\"Hi!Context\"");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Python2" + "'", str17, "Python2");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "_tset\"\\\"\\\\\\\"hi!\\\\\\\"\\\"\"" + "'", str19, "_tset\"\\\"\\\\\\\"hi!\\\\\\\"\\\"\"");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "\"_tset\\\\n\"" + "'", str21, "\"_tset\\\\n\"");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "Python2" + "'", str22, "Python2");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
    }

    @Test
    public void test1056() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1056");
        org.antlr.v4.codegen.target.Python2Target python2Target0 = new org.antlr.v4.codegen.target.Python2Target();
        org.antlr.v4.codegen.CodeGenerator codeGenerator1 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target2 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator1);
        java.util.Set<java.lang.String> strSet3 = python2Target2.badWords;
        java.lang.String str5 = python2Target2.encodeIntAsCharEscape(64);
        java.lang.String str6 = python2Target2.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target8 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator7);
        java.lang.String[] strArray9 = python2Target8.targetCharValueEscape;
        java.lang.String str10 = python2Target8.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup11 = python2Target8.getTemplates();
        python2Target2.templates = sTGroup11;
        org.stringtemplate.v4.STGroup sTGroup13 = python2Target2.templates;
        java.util.Set<java.lang.String> strSet14 = python2Target2.badWords;
        java.util.Set<java.lang.String> strSet15 = python2Target2.getBadWords();
        boolean boolean16 = python2Target2.supportsOverloadedMethods();
        java.util.Set<java.lang.String> strSet17 = python2Target2.getBadWords();
        org.stringtemplate.v4.STGroup sTGroup18 = python2Target2.getTemplates();
        python2Target0.templates = sTGroup18;
        org.antlr.v4.codegen.CodeGenerator codeGenerator20 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target21 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator20);
        java.util.Set<java.lang.String> strSet22 = python2Target21.badWords;
        java.lang.String str24 = python2Target21.encodeIntAsCharEscape(64);
        java.lang.String str25 = python2Target21.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator26 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target27 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator26);
        java.lang.String[] strArray28 = python2Target27.targetCharValueEscape;
        java.lang.String str29 = python2Target27.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup30 = python2Target27.getTemplates();
        python2Target21.templates = sTGroup30;
        java.util.Set<java.lang.String> strSet32 = python2Target21.getBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator33 = python2Target21.getCodeGenerator();
        java.util.Set<java.lang.String> strSet34 = python2Target21.getBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator35 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target36 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator35);
        java.util.Set<java.lang.String> strSet37 = python2Target36.badWords;
        java.lang.String str39 = python2Target36.encodeIntAsCharEscape(64);
        java.lang.String str40 = python2Target36.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator41 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target42 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator41);
        java.lang.String[] strArray43 = python2Target42.targetCharValueEscape;
        java.lang.String str44 = python2Target42.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup45 = python2Target42.getTemplates();
        python2Target36.templates = sTGroup45;
        org.antlr.v4.codegen.CodeGenerator codeGenerator47 = python2Target36.getCodeGenerator();
        org.stringtemplate.v4.STGroup sTGroup48 = python2Target36.loadTemplates();
        python2Target21.templates = sTGroup48;
        python2Target0.templates = sTGroup48;
        boolean boolean51 = python2Target0.wantsBaseListener();
        java.lang.String str53 = python2Target0.getImplicitSetLabel("");
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "@" + "'", str5, "@");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Python2" + "'", str6, "Python2");
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Python2" + "'", str10, "Python2");
        org.junit.Assert.assertNotNull(sTGroup11);
        org.junit.Assert.assertNotNull(sTGroup13);
        org.junit.Assert.assertNotNull(strSet14);
        org.junit.Assert.assertNotNull(strSet15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(strSet17);
        org.junit.Assert.assertNotNull(sTGroup18);
        org.junit.Assert.assertNotNull(strSet22);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "@" + "'", str24, "@");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Python2" + "'", str25, "Python2");
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "Python2" + "'", str29, "Python2");
        org.junit.Assert.assertNotNull(sTGroup30);
        org.junit.Assert.assertNotNull(strSet32);
        org.junit.Assert.assertNull(codeGenerator33);
        org.junit.Assert.assertNotNull(strSet34);
        org.junit.Assert.assertNotNull(strSet37);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "@" + "'", str39, "@");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "Python2" + "'", str40, "Python2");
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "Python2" + "'", str44, "Python2");
        org.junit.Assert.assertNotNull(sTGroup45);
        org.junit.Assert.assertNull(codeGenerator47);
        org.junit.Assert.assertNotNull(sTGroup48);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "_tset" + "'", str53, "_tset");
    }

    @Test
    public void test1057() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1057");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str4 = python2Target1.encodeIntAsCharEscape(64);
        java.lang.String str5 = python2Target1.getLanguage();
        java.lang.String str8 = python2Target1.getTargetStringLiteralFromString("_@", false);
        int int9 = python2Target1.getInlineTestSetWordSize();
        java.lang.String[] strArray10 = python2Target1.targetCharValueEscape;
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "@" + "'", str4, "@");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Python2" + "'", str5, "Python2");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "_@" + "'", str8, "_@");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 64 + "'", int9 == 64);
        org.junit.Assert.assertNotNull(strArray10);
    }

    @Test
    public void test1058() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1058");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str4 = python2Target1.encodeIntAsCharEscape(64);
        java.lang.String str5 = python2Target1.getLanguage();
        java.lang.String str7 = python2Target1.getImplicitSetLabel("");
        java.lang.String str9 = python2Target1.getImplicitSetLabel("\\n");
        boolean boolean10 = python2Target1.templatesExist();
        boolean boolean11 = python2Target1.templatesExist();
        java.lang.String[] strArray12 = python2Target1.targetCharValueEscape;
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "@" + "'", str4, "@");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Python2" + "'", str5, "Python2");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "_tset" + "'", str7, "_tset");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "_tset\\n" + "'", str9, "_tset\\n");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(strArray12);
    }

    @Test
    public void test1059() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1059");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String[] strArray2 = python2Target1.targetCharValueEscape;
        java.lang.String str5 = python2Target1.getTargetStringLiteralFromString("Python2", false);
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target7 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator6);
        java.lang.String str9 = python2Target7.getImplicitSetLabel("");
        org.antlr.v4.tool.Grammar grammar10 = null;
        org.stringtemplate.v4.ST sT11 = null;
        python2Target7.genRecognizerHeaderFile(grammar10, sT11, "_tset");
        org.antlr.v4.codegen.CodeGenerator codeGenerator14 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target15 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator14);
        java.util.Set<java.lang.String> strSet16 = python2Target15.badWords;
        java.lang.String str18 = python2Target15.encodeIntAsCharEscape(64);
        java.lang.String str19 = python2Target15.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator20 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target21 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator20);
        java.lang.String[] strArray22 = python2Target21.targetCharValueEscape;
        java.lang.String str23 = python2Target21.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup24 = python2Target21.getTemplates();
        python2Target15.templates = sTGroup24;
        python2Target7.templates = sTGroup24;
        org.antlr.v4.codegen.CodeGenerator codeGenerator27 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target28 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator27);
        java.lang.String[] strArray29 = python2Target28.targetCharValueEscape;
        java.lang.String str30 = python2Target28.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup31 = python2Target28.getTemplates();
        org.antlr.v4.codegen.CodeGenerator codeGenerator32 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target33 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator32);
        java.util.Set<java.lang.String> strSet34 = python2Target33.badWords;
        python2Target28.badWords = strSet34;
        org.antlr.v4.codegen.CodeGenerator codeGenerator36 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target37 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator36);
        java.util.Set<java.lang.String> strSet38 = python2Target37.badWords;
        java.lang.String str41 = python2Target37.getTargetStringLiteralFromString("hi!", false);
        java.lang.String str43 = python2Target37.getImplicitRuleLabel("@");
        python2Target37.language = "hi!";
        org.antlr.v4.codegen.CodeGenerator codeGenerator46 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target47 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator46);
        java.util.Set<java.lang.String> strSet48 = python2Target47.badWords;
        java.lang.String str50 = python2Target47.encodeIntAsCharEscape(64);
        java.lang.String str51 = python2Target47.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator52 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target53 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator52);
        java.lang.String[] strArray54 = python2Target53.targetCharValueEscape;
        java.lang.String str55 = python2Target53.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup56 = python2Target53.getTemplates();
        python2Target47.templates = sTGroup56;
        org.antlr.v4.codegen.CodeGenerator codeGenerator58 = python2Target47.getCodeGenerator();
        org.stringtemplate.v4.STGroup sTGroup59 = python2Target47.loadTemplates();
        python2Target37.templates = sTGroup59;
        python2Target28.templates = sTGroup59;
        python2Target7.templates = sTGroup59;
        java.lang.String[] strArray63 = python2Target7.targetCharValueEscape;
        python2Target1.targetCharValueEscape = strArray63;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str66 = python2Target1.getImplicitTokenLabel("_");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Python2" + "'", str5, "Python2");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "_tset" + "'", str9, "_tset");
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "@" + "'", str18, "@");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Python2" + "'", str19, "Python2");
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "Python2" + "'", str23, "Python2");
        org.junit.Assert.assertNotNull(sTGroup24);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "Python2" + "'", str30, "Python2");
        org.junit.Assert.assertNotNull(sTGroup31);
        org.junit.Assert.assertNotNull(strSet34);
        org.junit.Assert.assertNotNull(strSet38);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "hi!" + "'", str41, "hi!");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "_@" + "'", str43, "_@");
        org.junit.Assert.assertNotNull(strSet48);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "@" + "'", str50, "@");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "Python2" + "'", str51, "Python2");
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "Python2" + "'", str55, "Python2");
        org.junit.Assert.assertNotNull(sTGroup56);
        org.junit.Assert.assertNull(codeGenerator58);
        org.junit.Assert.assertNotNull(sTGroup59);
        org.junit.Assert.assertNotNull(strArray63);
    }

    @Test
    public void test1060() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1060");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String[] strArray2 = python2Target1.targetCharValueEscape;
        java.lang.String str5 = python2Target1.getTargetStringLiteralFromString("_tset\\1", false);
        java.util.Set<java.lang.String> strSet6 = python2Target1.badWords;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str8 = python2Target1.getImplicitTokenLabel("_\"tsetContex\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "_tset\\\\1" + "'", str5, "_tset\\\\1");
        org.junit.Assert.assertNotNull(strSet6);
    }

    @Test
    public void test1061() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1061");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str4 = python2Target1.encodeIntAsCharEscape(64);
        java.lang.String str5 = python2Target1.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target7 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator6);
        java.lang.String[] strArray8 = python2Target7.targetCharValueEscape;
        java.lang.String str9 = python2Target7.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup10 = python2Target7.getTemplates();
        python2Target1.templates = sTGroup10;
        org.stringtemplate.v4.STGroup sTGroup12 = python2Target1.templates;
        java.util.Set<java.lang.String> strSet13 = python2Target1.badWords;
        java.util.Set<java.lang.String> strSet14 = python2Target1.getBadWords();
        org.antlr.v4.tool.Grammar grammar15 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator16 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target17 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator16);
        java.util.Set<java.lang.String> strSet18 = python2Target17.badWords;
        java.lang.String str20 = python2Target17.encodeIntAsCharEscape(64);
        java.lang.String str21 = python2Target17.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator22 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target23 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator22);
        java.lang.String[] strArray24 = python2Target23.targetCharValueEscape;
        java.lang.String str25 = python2Target23.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup26 = python2Target23.getTemplates();
        python2Target17.templates = sTGroup26;
        org.stringtemplate.v4.STGroup sTGroup28 = python2Target17.templates;
        java.util.Set<java.lang.String> strSet29 = python2Target17.badWords;
        java.util.Set<java.lang.String> strSet30 = python2Target17.getBadWords();
        boolean boolean31 = python2Target17.supportsOverloadedMethods();
        java.util.Set<java.lang.String> strSet32 = python2Target17.getBadWords();
        org.antlr.v4.tool.Grammar grammar33 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator34 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target35 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator34);
        java.lang.String[] strArray36 = python2Target35.targetCharValueEscape;
        java.lang.String str39 = python2Target35.getTargetStringLiteralFromString("_tset\\1", false);
        org.antlr.v4.tool.Grammar grammar40 = null;
        int[] intArray41 = new int[] {};
        java.lang.String[] strArray42 = python2Target35.getTokenTypesAsTargetLabels(grammar40, intArray41);
        java.lang.String[] strArray43 = python2Target17.getTokenTypesAsTargetLabels(grammar33, intArray41);
        java.lang.String[] strArray44 = python2Target1.getTokenTypesAsTargetLabels(grammar15, intArray41);
        org.antlr.v4.codegen.CodeGenerator codeGenerator45 = null;
        java.lang.String str48 = python2Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator45, "\"Hi!Context\"Context", true);
        java.lang.String str49 = python2Target1.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator50 = python2Target1.getCodeGenerator();
        org.stringtemplate.v4.STGroup sTGroup51 = python2Target1.getTemplates();
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "@" + "'", str4, "@");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Python2" + "'", str5, "Python2");
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Python2" + "'", str9, "Python2");
        org.junit.Assert.assertNotNull(sTGroup10);
        org.junit.Assert.assertNotNull(sTGroup12);
        org.junit.Assert.assertNotNull(strSet13);
        org.junit.Assert.assertNotNull(strSet14);
        org.junit.Assert.assertNotNull(strSet18);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "@" + "'", str20, "@");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Python2" + "'", str21, "Python2");
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Python2" + "'", str25, "Python2");
        org.junit.Assert.assertNotNull(sTGroup26);
        org.junit.Assert.assertNotNull(sTGroup28);
        org.junit.Assert.assertNotNull(strSet29);
        org.junit.Assert.assertNotNull(strSet30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(strSet32);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "_tset\\\\1" + "'", str39, "_tset\\\\1");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[]");
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "\"Hi!Context\\\"Contex\"" + "'", str48, "\"Hi!Context\\\"Contex\"");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "4.5.2.1" + "'", str49, "4.5.2.1");
        org.junit.Assert.assertNull(codeGenerator50);
        org.junit.Assert.assertNotNull(sTGroup51);
    }

    @Test
    public void test1062() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1062");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str4 = python2Target1.encodeIntAsCharEscape(64);
        java.lang.String str5 = python2Target1.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target7 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator6);
        java.lang.String[] strArray8 = python2Target7.targetCharValueEscape;
        java.lang.String str9 = python2Target7.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup10 = python2Target7.getTemplates();
        python2Target1.templates = sTGroup10;
        org.antlr.v4.tool.Grammar grammar12 = null;
        org.stringtemplate.v4.ST sT13 = null;
        python2Target1.genRecognizerHeaderFile(grammar12, sT13, "\"_tset\"");
        java.util.Set<java.lang.String> strSet16 = python2Target1.getBadWords();
        org.stringtemplate.v4.STGroup sTGroup17 = python2Target1.loadTemplates();
        java.lang.String str19 = python2Target1.getAltLabelContextStructName("_tset\"\\\"\\\\\\\"hi!\\\\\\\"\\\"\"");
        org.stringtemplate.v4.STGroup sTGroup20 = python2Target1.templates;
        org.antlr.v4.tool.Grammar grammar21 = null;
        org.stringtemplate.v4.ST sT22 = null;
        python2Target1.genRecognizerHeaderFile(grammar21, sT22, "_\"\\\"\\\\\\\"\\\\\\\\\\\\\\\"hi!\\\\\\\\\\\\\\\"\\\\\\\"\\\"\"");
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "@" + "'", str4, "@");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Python2" + "'", str5, "Python2");
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Python2" + "'", str9, "Python2");
        org.junit.Assert.assertNotNull(sTGroup10);
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertNotNull(sTGroup17);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "_tset\"\\\"\\\\\\\"hi!\\\\\\\"\\\"\"Context" + "'", str19, "_tset\"\\\"\\\\\\\"hi!\\\\\\\"\\\"\"Context");
        org.junit.Assert.assertNotNull(sTGroup20);
    }

    @Test
    public void test1063() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1063");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str4 = python2Target1.encodeIntAsCharEscape(64);
        java.lang.String str5 = python2Target1.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target7 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator6);
        java.lang.String[] strArray8 = python2Target7.targetCharValueEscape;
        java.lang.String str9 = python2Target7.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup10 = python2Target7.getTemplates();
        python2Target1.templates = sTGroup10;
        org.antlr.v4.tool.Grammar grammar12 = null;
        org.stringtemplate.v4.ST sT13 = null;
        python2Target1.genRecognizerHeaderFile(grammar12, sT13, "\"_tset\"");
        java.util.Set<java.lang.String> strSet16 = python2Target1.getBadWords();
        org.stringtemplate.v4.STGroup sTGroup17 = python2Target1.loadTemplates();
        java.lang.String str19 = python2Target1.getAltLabelContextStructName("_tset\"\\\"\\\\\\\"hi!\\\\\\\"\\\"\"");
        org.stringtemplate.v4.STGroup sTGroup20 = python2Target1.templates;
        int int21 = python2Target1.getInlineTestSetWordSize();
        org.stringtemplate.v4.STGroup sTGroup22 = python2Target1.getTemplates();
        org.antlr.v4.codegen.CodeGenerator codeGenerator23 = python2Target1.gen;
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "@" + "'", str4, "@");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Python2" + "'", str5, "Python2");
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Python2" + "'", str9, "Python2");
        org.junit.Assert.assertNotNull(sTGroup10);
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertNotNull(sTGroup17);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "_tset\"\\\"\\\\\\\"hi!\\\\\\\"\\\"\"Context" + "'", str19, "_tset\"\\\"\\\\\\\"hi!\\\\\\\"\\\"\"Context");
        org.junit.Assert.assertNotNull(sTGroup20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 64 + "'", int21 == 64);
        org.junit.Assert.assertNotNull(sTGroup22);
        org.junit.Assert.assertNull(codeGenerator23);
    }

    @Test
    public void test1064() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1064");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str5 = python2Target1.getTargetStringLiteralFromString("hi!", false);
        java.lang.String str7 = python2Target1.getImplicitRuleLabel("@");
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target9 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator8);
        java.util.Set<java.lang.String> strSet10 = python2Target9.badWords;
        java.lang.String str12 = python2Target9.encodeIntAsCharEscape(64);
        java.lang.String str13 = python2Target9.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator14 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target15 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator14);
        java.lang.String[] strArray16 = python2Target15.targetCharValueEscape;
        java.lang.String str17 = python2Target15.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup18 = python2Target15.getTemplates();
        python2Target9.templates = sTGroup18;
        org.antlr.v4.codegen.CodeGenerator codeGenerator20 = python2Target9.getCodeGenerator();
        org.stringtemplate.v4.STGroup sTGroup21 = python2Target9.loadTemplates();
        python2Target1.templates = sTGroup21;
        org.antlr.v4.tool.Grammar grammar23 = null;
        org.stringtemplate.v4.ST sT24 = null;
        // The following exception was thrown during execution in test generation
        try {
            python2Target1.genListenerFile(grammar23, sT24);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "_@" + "'", str7, "_@");
        org.junit.Assert.assertNotNull(strSet10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "@" + "'", str12, "@");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Python2" + "'", str13, "Python2");
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Python2" + "'", str17, "Python2");
        org.junit.Assert.assertNotNull(sTGroup18);
        org.junit.Assert.assertNull(codeGenerator20);
        org.junit.Assert.assertNotNull(sTGroup21);
    }

    @Test
    public void test1065() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1065");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String[] strArray2 = python2Target1.targetCharValueEscape;
        java.lang.String str5 = python2Target1.getTargetStringLiteralFromString("Python2", false);
        java.lang.String str6 = python2Target1.getVersion();
        java.lang.String str8 = python2Target1.encodeIntAsCharEscape((int) (short) 1);
        org.antlr.v4.codegen.CodeGenerator codeGenerator9 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target10 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator9);
        java.util.Set<java.lang.String> strSet11 = python2Target10.badWords;
        java.lang.String str13 = python2Target10.encodeIntAsCharEscape(64);
        java.lang.String str14 = python2Target10.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator15 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target16 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator15);
        java.lang.String[] strArray17 = python2Target16.targetCharValueEscape;
        java.lang.String str18 = python2Target16.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup19 = python2Target16.getTemplates();
        python2Target10.templates = sTGroup19;
        java.util.Set<java.lang.String> strSet21 = python2Target10.getBadWords();
        python2Target1.badWords = strSet21;
        java.lang.String str24 = python2Target1.getAltLabelContextStructName("hi!");
        java.lang.String str25 = python2Target1.language;
        org.antlr.v4.codegen.CodeGenerator codeGenerator26 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target27 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator26);
        java.lang.String[] strArray28 = python2Target27.targetCharValueEscape;
        java.lang.String str31 = python2Target27.getTargetStringLiteralFromString("Python2", false);
        java.lang.String str32 = python2Target27.getVersion();
        java.lang.String str34 = python2Target27.encodeIntAsCharEscape((int) (short) 1);
        org.antlr.v4.codegen.CodeGenerator codeGenerator35 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target36 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator35);
        java.util.Set<java.lang.String> strSet37 = python2Target36.badWords;
        java.lang.String str39 = python2Target36.encodeIntAsCharEscape(64);
        java.lang.String str40 = python2Target36.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator41 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target42 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator41);
        java.lang.String[] strArray43 = python2Target42.targetCharValueEscape;
        java.lang.String str44 = python2Target42.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup45 = python2Target42.getTemplates();
        python2Target36.templates = sTGroup45;
        java.util.Set<java.lang.String> strSet47 = python2Target36.getBadWords();
        python2Target27.badWords = strSet47;
        java.lang.String str50 = python2Target27.getAltLabelContextStructName("hi!");
        java.lang.String str51 = python2Target27.getVersion();
        java.util.Set<java.lang.String> strSet52 = python2Target27.getBadWords();
        python2Target1.badWords = strSet52;
        org.antlr.v4.codegen.CodeGenerator codeGenerator54 = python2Target1.gen;
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Python2" + "'", str5, "Python2");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "4.5.2.1" + "'", str6, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\\1" + "'", str8, "\\1");
        org.junit.Assert.assertNotNull(strSet11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "@" + "'", str13, "@");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Python2" + "'", str14, "Python2");
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Python2" + "'", str18, "Python2");
        org.junit.Assert.assertNotNull(sTGroup19);
        org.junit.Assert.assertNotNull(strSet21);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "Hi!Context" + "'", str24, "Hi!Context");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Python2" + "'", str25, "Python2");
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "Python2" + "'", str31, "Python2");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "4.5.2.1" + "'", str32, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "\\1" + "'", str34, "\\1");
        org.junit.Assert.assertNotNull(strSet37);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "@" + "'", str39, "@");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "Python2" + "'", str40, "Python2");
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "Python2" + "'", str44, "Python2");
        org.junit.Assert.assertNotNull(sTGroup45);
        org.junit.Assert.assertNotNull(strSet47);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "Hi!Context" + "'", str50, "Hi!Context");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "4.5.2.1" + "'", str51, "4.5.2.1");
        org.junit.Assert.assertNotNull(strSet52);
        org.junit.Assert.assertNull(codeGenerator54);
    }

    @Test
    public void test1066() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1066");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str4 = python2Target1.encodeIntAsCharEscape(64);
        java.lang.String str5 = python2Target1.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target7 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator6);
        java.lang.String[] strArray8 = python2Target7.targetCharValueEscape;
        java.lang.String str9 = python2Target7.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup10 = python2Target7.getTemplates();
        python2Target1.templates = sTGroup10;
        org.stringtemplate.v4.STGroup sTGroup12 = python2Target1.templates;
        java.util.Set<java.lang.String> strSet13 = python2Target1.badWords;
        java.util.Set<java.lang.String> strSet14 = python2Target1.getBadWords();
        org.antlr.v4.tool.Grammar grammar15 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator16 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target17 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator16);
        java.util.Set<java.lang.String> strSet18 = python2Target17.badWords;
        java.lang.String str20 = python2Target17.encodeIntAsCharEscape(64);
        java.lang.String str21 = python2Target17.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator22 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target23 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator22);
        java.lang.String[] strArray24 = python2Target23.targetCharValueEscape;
        java.lang.String str25 = python2Target23.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup26 = python2Target23.getTemplates();
        python2Target17.templates = sTGroup26;
        org.stringtemplate.v4.STGroup sTGroup28 = python2Target17.templates;
        java.util.Set<java.lang.String> strSet29 = python2Target17.badWords;
        java.util.Set<java.lang.String> strSet30 = python2Target17.getBadWords();
        boolean boolean31 = python2Target17.supportsOverloadedMethods();
        java.util.Set<java.lang.String> strSet32 = python2Target17.getBadWords();
        org.antlr.v4.tool.Grammar grammar33 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator34 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target35 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator34);
        java.lang.String[] strArray36 = python2Target35.targetCharValueEscape;
        java.lang.String str39 = python2Target35.getTargetStringLiteralFromString("_tset\\1", false);
        org.antlr.v4.tool.Grammar grammar40 = null;
        int[] intArray41 = new int[] {};
        java.lang.String[] strArray42 = python2Target35.getTokenTypesAsTargetLabels(grammar40, intArray41);
        java.lang.String[] strArray43 = python2Target17.getTokenTypesAsTargetLabels(grammar33, intArray41);
        java.lang.String[] strArray44 = python2Target1.getTokenTypesAsTargetLabels(grammar15, intArray41);
        org.antlr.v4.codegen.CodeGenerator codeGenerator45 = null;
        java.lang.String str48 = python2Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator45, "\"Hi!Context\"Context", true);
        java.lang.String str49 = python2Target1.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator50 = python2Target1.getCodeGenerator();
        java.lang.String str52 = python2Target1.getImplicitRuleLabel("_\"_tset\"Context");
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "@" + "'", str4, "@");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Python2" + "'", str5, "Python2");
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Python2" + "'", str9, "Python2");
        org.junit.Assert.assertNotNull(sTGroup10);
        org.junit.Assert.assertNotNull(sTGroup12);
        org.junit.Assert.assertNotNull(strSet13);
        org.junit.Assert.assertNotNull(strSet14);
        org.junit.Assert.assertNotNull(strSet18);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "@" + "'", str20, "@");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Python2" + "'", str21, "Python2");
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Python2" + "'", str25, "Python2");
        org.junit.Assert.assertNotNull(sTGroup26);
        org.junit.Assert.assertNotNull(sTGroup28);
        org.junit.Assert.assertNotNull(strSet29);
        org.junit.Assert.assertNotNull(strSet30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(strSet32);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "_tset\\\\1" + "'", str39, "_tset\\\\1");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[]");
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "\"Hi!Context\\\"Contex\"" + "'", str48, "\"Hi!Context\\\"Contex\"");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "4.5.2.1" + "'", str49, "4.5.2.1");
        org.junit.Assert.assertNull(codeGenerator50);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "__\"_tset\"Context" + "'", str52, "__\"_tset\"Context");
    }

    @Test
    public void test1067() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1067");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String[] strArray2 = python2Target1.targetCharValueEscape;
        java.lang.String str3 = python2Target1.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup4 = python2Target1.getTemplates();
        org.antlr.v4.codegen.CodeGenerator codeGenerator5 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target6 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator5);
        java.util.Set<java.lang.String> strSet7 = python2Target6.badWords;
        python2Target1.badWords = strSet7;
        org.antlr.v4.codegen.CodeGenerator codeGenerator9 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target10 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator9);
        java.util.Set<java.lang.String> strSet11 = python2Target10.badWords;
        java.lang.String str14 = python2Target10.getTargetStringLiteralFromString("hi!", false);
        java.lang.String str16 = python2Target10.getImplicitRuleLabel("@");
        python2Target10.language = "hi!";
        org.antlr.v4.codegen.CodeGenerator codeGenerator19 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target20 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator19);
        java.util.Set<java.lang.String> strSet21 = python2Target20.badWords;
        java.lang.String str23 = python2Target20.encodeIntAsCharEscape(64);
        java.lang.String str24 = python2Target20.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator25 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target26 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator25);
        java.lang.String[] strArray27 = python2Target26.targetCharValueEscape;
        java.lang.String str28 = python2Target26.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup29 = python2Target26.getTemplates();
        python2Target20.templates = sTGroup29;
        org.antlr.v4.codegen.CodeGenerator codeGenerator31 = python2Target20.getCodeGenerator();
        org.stringtemplate.v4.STGroup sTGroup32 = python2Target20.loadTemplates();
        python2Target10.templates = sTGroup32;
        python2Target1.templates = sTGroup32;
        int int35 = python2Target1.getSerializedATNSegmentLimit();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str37 = python2Target1.getElementName("");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Python2" + "'", str3, "Python2");
        org.junit.Assert.assertNotNull(sTGroup4);
        org.junit.Assert.assertNotNull(strSet7);
        org.junit.Assert.assertNotNull(strSet11);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "_@" + "'", str16, "_@");
        org.junit.Assert.assertNotNull(strSet21);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "@" + "'", str23, "@");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "Python2" + "'", str24, "Python2");
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "Python2" + "'", str28, "Python2");
        org.junit.Assert.assertNotNull(sTGroup29);
        org.junit.Assert.assertNull(codeGenerator31);
        org.junit.Assert.assertNotNull(sTGroup32);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 2147483647 + "'", int35 == 2147483647);
    }

    @Test
    public void test1068() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1068");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str4 = python2Target1.encodeIntAsCharEscape(64);
        org.stringtemplate.v4.STGroup sTGroup5 = python2Target1.loadTemplates();
        int int6 = python2Target1.getSerializedATNSegmentLimit();
        org.stringtemplate.v4.STGroup sTGroup7 = python2Target1.templates;
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target9 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator8);
        java.lang.String str11 = python2Target9.getImplicitSetLabel("");
        org.antlr.v4.tool.Grammar grammar12 = null;
        org.stringtemplate.v4.ST sT13 = null;
        python2Target9.genRecognizerHeaderFile(grammar12, sT13, "_tset");
        org.antlr.v4.codegen.CodeGenerator codeGenerator16 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target17 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator16);
        java.util.Set<java.lang.String> strSet18 = python2Target17.badWords;
        java.lang.String str20 = python2Target17.encodeIntAsCharEscape(64);
        java.lang.String str21 = python2Target17.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator22 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target23 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator22);
        java.lang.String[] strArray24 = python2Target23.targetCharValueEscape;
        java.lang.String str25 = python2Target23.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup26 = python2Target23.getTemplates();
        python2Target17.templates = sTGroup26;
        python2Target9.templates = sTGroup26;
        org.antlr.v4.tool.Grammar grammar29 = null;
        org.stringtemplate.v4.ST sT30 = null;
        python2Target9.genRecognizerHeaderFile(grammar29, sT30, "\"\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator33 = null;
        python2Target9.gen = codeGenerator33;
        java.lang.String[] strArray61 = new java.lang.String[] { "_tset\\\\1", "tsetContex", "\"\\\"\\\\\\\"hi!\\\\\\\"\\\"\"", "\"\\\"hi!\\\"\"", "__tsetContext", "_\"\\\"hi!\\\"\"", "\"Hi!Context\"", "_\"\\\"\\\\\\\"hi!\\\\\\\"\\\"\"", "\"tsetContex\"", "\"\\\"\\\"\"", "_tset\\\\1", "4.5.2.1", "\"tsetContex\"", "_tset", "_tsetContext", "\"_tsethi!\"", "4.5.2.1", "\"hi!\"", "d", "_tsetContext", "\"\\\"\\\\\\\"hi!\\\\\\\"\\\"\"", "@", "\"\\\"\\\"\"", "\"\\\"\\\"\"", "_tsetContext", "_@" };
        java.util.LinkedHashSet<java.lang.String> strSet62 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet62, strArray61);
        python2Target9.badWords = strSet62;
        org.antlr.v4.codegen.CodeGenerator codeGenerator65 = null;
        java.lang.String str68 = python2Target9.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator65, "\"\\\"\\\"\"", false);
        java.util.Set<java.lang.String> strSet69 = python2Target9.badWords;
        python2Target1.badWords = strSet69;
        org.antlr.v4.codegen.CodeGenerator codeGenerator71 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target72 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator71);
        java.util.Set<java.lang.String> strSet73 = python2Target72.badWords;
        java.lang.String str75 = python2Target72.encodeIntAsCharEscape(64);
        org.stringtemplate.v4.STGroup sTGroup76 = python2Target72.loadTemplates();
        java.lang.String str77 = python2Target72.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator78 = python2Target72.getCodeGenerator();
        java.lang.String str80 = python2Target72.getListLabel("__tset_tset\"\\\"\\\\\\\"hi!\\\\\\\"\\\"\"");
        java.lang.String[] strArray81 = python2Target72.targetCharValueEscape;
        org.stringtemplate.v4.STGroup sTGroup82 = python2Target72.loadTemplates();
        python2Target1.templates = sTGroup82;
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "@" + "'", str4, "@");
        org.junit.Assert.assertNotNull(sTGroup5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2147483647 + "'", int6 == 2147483647);
        org.junit.Assert.assertNull(sTGroup7);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "_tset" + "'", str11, "_tset");
        org.junit.Assert.assertNotNull(strSet18);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "@" + "'", str20, "@");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Python2" + "'", str21, "Python2");
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Python2" + "'", str25, "Python2");
        org.junit.Assert.assertNotNull(sTGroup26);
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "\\\"\\\"" + "'", str68, "\\\"\\\"");
        org.junit.Assert.assertNotNull(strSet69);
        org.junit.Assert.assertNotNull(strSet73);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "@" + "'", str75, "@");
        org.junit.Assert.assertNotNull(sTGroup76);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "Python2" + "'", str77, "Python2");
        org.junit.Assert.assertNull(codeGenerator78);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "__tset_tset\"\\\"\\\\\\\"hi!\\\\\\\"\\\"\"" + "'", str80, "__tset_tset\"\\\"\\\\\\\"hi!\\\\\\\"\\\"\"");
        org.junit.Assert.assertNotNull(strArray81);
        org.junit.Assert.assertNotNull(sTGroup82);
    }

    @Test
    public void test1069() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1069");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str4 = python2Target1.encodeIntAsCharEscape(64);
        java.lang.String str5 = python2Target1.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target7 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator6);
        java.lang.String[] strArray8 = python2Target7.targetCharValueEscape;
        java.lang.String str9 = python2Target7.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup10 = python2Target7.getTemplates();
        python2Target1.templates = sTGroup10;
        org.antlr.v4.tool.Grammar grammar12 = null;
        org.stringtemplate.v4.ST sT13 = null;
        python2Target1.genRecognizerHeaderFile(grammar12, sT13, "\"_tset\"");
        java.util.Set<java.lang.String> strSet16 = python2Target1.getBadWords();
        org.stringtemplate.v4.STGroup sTGroup17 = python2Target1.loadTemplates();
        java.lang.String str19 = python2Target1.getAltLabelContextStructName("_tset\"\\\"\\\\\\\"hi!\\\\\\\"\\\"\"");
        java.lang.String str20 = python2Target1.language;
        org.stringtemplate.v4.STGroup sTGroup21 = python2Target1.loadTemplates();
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "@" + "'", str4, "@");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Python2" + "'", str5, "Python2");
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Python2" + "'", str9, "Python2");
        org.junit.Assert.assertNotNull(sTGroup10);
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertNotNull(sTGroup17);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "_tset\"\\\"\\\\\\\"hi!\\\\\\\"\\\"\"Context" + "'", str19, "_tset\"\\\"\\\\\\\"hi!\\\\\\\"\\\"\"Context");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "Python2" + "'", str20, "Python2");
        org.junit.Assert.assertNotNull(sTGroup21);
    }

    @Test
    public void test1070() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1070");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str4 = python2Target1.encodeIntAsCharEscape(64);
        java.lang.String str5 = python2Target1.getLanguage();
        java.lang.String str7 = python2Target1.getImplicitSetLabel("");
        java.lang.String str9 = python2Target1.getImplicitSetLabel("\\n");
        boolean boolean10 = python2Target1.templatesExist();
        boolean boolean11 = python2Target1.templatesExist();
        java.lang.String str12 = python2Target1.language;
        org.antlr.v4.codegen.CodeGenerator codeGenerator13 = null;
        python2Target1.gen = codeGenerator13;
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "@" + "'", str4, "@");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Python2" + "'", str5, "Python2");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "_tset" + "'", str7, "_tset");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "_tset\\n" + "'", str9, "_tset\\n");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Python2" + "'", str12, "Python2");
    }

    @Test
    public void test1071() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1071");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String[] strArray2 = python2Target1.targetCharValueEscape;
        java.lang.String str5 = python2Target1.getTargetStringLiteralFromString("Python2", false);
        java.lang.String str6 = python2Target1.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = python2Target1.gen;
        org.antlr.v4.tool.Grammar grammar8 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator9 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target10 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator9);
        java.lang.String[] strArray11 = python2Target10.targetCharValueEscape;
        java.lang.String str14 = python2Target10.getTargetStringLiteralFromString("_tset\\1", false);
        org.antlr.v4.tool.Grammar grammar15 = null;
        int[] intArray16 = new int[] {};
        java.lang.String[] strArray17 = python2Target10.getTokenTypesAsTargetLabels(grammar15, intArray16);
        java.lang.String[] strArray18 = python2Target1.getTokenTypesAsTargetLabels(grammar8, intArray16);
        org.antlr.v4.tool.ast.GrammarAST grammarAST19 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str20 = python2Target1.getLoopCounter(grammarAST19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Python2" + "'", str5, "Python2");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "4.5.2.1" + "'", str6, "4.5.2.1");
        org.junit.Assert.assertNull(codeGenerator7);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "_tset\\\\1" + "'", str14, "_tset\\\\1");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[]");
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertNotNull(strArray18);
    }

    @Test
    public void test1072() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1072");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String str3 = python2Target1.getImplicitSetLabel("");
        java.lang.String[] strArray4 = python2Target1.targetCharValueEscape;
        org.stringtemplate.v4.STGroup sTGroup5 = python2Target1.getTemplates();
        org.stringtemplate.v4.STGroup sTGroup6 = python2Target1.templates;
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "_tset" + "'", str3, "_tset");
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertNotNull(sTGroup5);
        org.junit.Assert.assertNotNull(sTGroup6);
    }

    @Test
    public void test1073() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1073");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str4 = python2Target1.encodeIntAsCharEscape(64);
        java.lang.String str6 = python2Target1.getAltLabelContextStructName("Python2");
        boolean boolean7 = python2Target1.supportsOverloadedMethods();
        java.lang.String str9 = python2Target1.encodeIntAsCharEscape(1);
        org.stringtemplate.v4.STGroup sTGroup10 = python2Target1.loadTemplates();
        org.stringtemplate.v4.STGroup sTGroup11 = python2Target1.loadTemplates();
        java.util.Set<java.lang.String> strSet12 = python2Target1.getBadWords();
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "@" + "'", str4, "@");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Python2Context" + "'", str6, "Python2Context");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\\1" + "'", str9, "\\1");
        org.junit.Assert.assertNotNull(sTGroup10);
        org.junit.Assert.assertNotNull(sTGroup11);
        org.junit.Assert.assertNotNull(strSet12);
    }

    @Test
    public void test1074() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1074");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String str3 = python2Target1.getImplicitSetLabel("");
        org.antlr.v4.tool.Grammar grammar4 = null;
        org.stringtemplate.v4.ST sT5 = null;
        python2Target1.genRecognizerHeaderFile(grammar4, sT5, "_tset");
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target9 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator8);
        java.util.Set<java.lang.String> strSet10 = python2Target9.badWords;
        java.lang.String str12 = python2Target9.encodeIntAsCharEscape(64);
        java.lang.String str13 = python2Target9.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator14 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target15 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator14);
        java.lang.String[] strArray16 = python2Target15.targetCharValueEscape;
        java.lang.String str17 = python2Target15.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup18 = python2Target15.getTemplates();
        python2Target9.templates = sTGroup18;
        python2Target1.templates = sTGroup18;
        org.antlr.v4.codegen.CodeGenerator codeGenerator21 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target22 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator21);
        java.lang.String[] strArray23 = python2Target22.targetCharValueEscape;
        java.lang.String str24 = python2Target22.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup25 = python2Target22.getTemplates();
        org.antlr.v4.codegen.CodeGenerator codeGenerator26 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target27 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator26);
        java.util.Set<java.lang.String> strSet28 = python2Target27.badWords;
        python2Target22.badWords = strSet28;
        org.antlr.v4.codegen.CodeGenerator codeGenerator30 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target31 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator30);
        java.util.Set<java.lang.String> strSet32 = python2Target31.badWords;
        java.lang.String str35 = python2Target31.getTargetStringLiteralFromString("hi!", false);
        java.lang.String str37 = python2Target31.getImplicitRuleLabel("@");
        python2Target31.language = "hi!";
        org.antlr.v4.codegen.CodeGenerator codeGenerator40 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target41 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator40);
        java.util.Set<java.lang.String> strSet42 = python2Target41.badWords;
        java.lang.String str44 = python2Target41.encodeIntAsCharEscape(64);
        java.lang.String str45 = python2Target41.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator46 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target47 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator46);
        java.lang.String[] strArray48 = python2Target47.targetCharValueEscape;
        java.lang.String str49 = python2Target47.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup50 = python2Target47.getTemplates();
        python2Target41.templates = sTGroup50;
        org.antlr.v4.codegen.CodeGenerator codeGenerator52 = python2Target41.getCodeGenerator();
        org.stringtemplate.v4.STGroup sTGroup53 = python2Target41.loadTemplates();
        python2Target31.templates = sTGroup53;
        python2Target22.templates = sTGroup53;
        python2Target1.templates = sTGroup53;
        boolean boolean57 = python2Target1.wantsBaseVisitor();
        boolean boolean58 = python2Target1.supportsOverloadedMethods();
        org.antlr.v4.codegen.CodeGenerator codeGenerator59 = python2Target1.gen;
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "_tset" + "'", str3, "_tset");
        org.junit.Assert.assertNotNull(strSet10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "@" + "'", str12, "@");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Python2" + "'", str13, "Python2");
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Python2" + "'", str17, "Python2");
        org.junit.Assert.assertNotNull(sTGroup18);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "Python2" + "'", str24, "Python2");
        org.junit.Assert.assertNotNull(sTGroup25);
        org.junit.Assert.assertNotNull(strSet28);
        org.junit.Assert.assertNotNull(strSet32);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!" + "'", str35, "hi!");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "_@" + "'", str37, "_@");
        org.junit.Assert.assertNotNull(strSet42);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "@" + "'", str44, "@");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "Python2" + "'", str45, "Python2");
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "Python2" + "'", str49, "Python2");
        org.junit.Assert.assertNotNull(sTGroup50);
        org.junit.Assert.assertNull(codeGenerator52);
        org.junit.Assert.assertNotNull(sTGroup53);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNull(codeGenerator59);
    }

    @Test
    public void test1075() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1075");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str5 = python2Target1.getTargetStringLiteralFromString("hi!", false);
        java.lang.String str7 = python2Target1.getImplicitRuleLabel("@");
        python2Target1.language = "hi!";
        java.util.Set<java.lang.String> strSet10 = python2Target1.getBadWords();
        org.stringtemplate.v4.STGroup sTGroup11 = python2Target1.templates;
        org.antlr.v4.tool.Grammar grammar12 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator13 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target14 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator13);
        java.lang.String[] strArray15 = python2Target14.targetCharValueEscape;
        java.lang.String str16 = python2Target14.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup17 = python2Target14.getTemplates();
        org.antlr.v4.codegen.CodeGenerator codeGenerator18 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target19 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator18);
        java.util.Set<java.lang.String> strSet20 = python2Target19.badWords;
        python2Target14.badWords = strSet20;
        org.antlr.v4.codegen.CodeGenerator codeGenerator22 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target23 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator22);
        java.util.Set<java.lang.String> strSet24 = python2Target23.badWords;
        java.lang.String str27 = python2Target23.getTargetStringLiteralFromString("hi!", false);
        java.lang.String str29 = python2Target23.getImplicitRuleLabel("@");
        python2Target23.language = "hi!";
        org.antlr.v4.codegen.CodeGenerator codeGenerator32 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target33 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator32);
        java.util.Set<java.lang.String> strSet34 = python2Target33.badWords;
        java.lang.String str36 = python2Target33.encodeIntAsCharEscape(64);
        java.lang.String str37 = python2Target33.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator38 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target39 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator38);
        java.lang.String[] strArray40 = python2Target39.targetCharValueEscape;
        java.lang.String str41 = python2Target39.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup42 = python2Target39.getTemplates();
        python2Target33.templates = sTGroup42;
        org.antlr.v4.codegen.CodeGenerator codeGenerator44 = python2Target33.getCodeGenerator();
        org.stringtemplate.v4.STGroup sTGroup45 = python2Target33.loadTemplates();
        python2Target23.templates = sTGroup45;
        python2Target14.templates = sTGroup45;
        org.antlr.v4.codegen.CodeGenerator codeGenerator48 = null;
        java.lang.String str51 = python2Target14.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator48, "@", false);
        python2Target14.language = "\"4.5.2.1\"";
        org.antlr.v4.tool.Grammar grammar54 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator55 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target56 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator55);
        java.lang.String[] strArray57 = python2Target56.targetCharValueEscape;
        java.lang.String str60 = python2Target56.getTargetStringLiteralFromString("_tset\\1", false);
        org.antlr.v4.tool.Grammar grammar61 = null;
        int[] intArray62 = new int[] {};
        java.lang.String[] strArray63 = python2Target56.getTokenTypesAsTargetLabels(grammar61, intArray62);
        java.lang.String[] strArray64 = python2Target14.getTokenTypesAsTargetLabels(grammar54, intArray62);
        java.lang.String[] strArray65 = python2Target1.getTokenTypesAsTargetLabels(grammar12, intArray62);
        org.antlr.v4.codegen.CodeGenerator codeGenerator66 = python2Target1.getCodeGenerator();
        java.lang.String str68 = python2Target1.getAltLabelContextStructName("tset\\\"tset_tsetContex");
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "_@" + "'", str7, "_@");
        org.junit.Assert.assertNotNull(strSet10);
        org.junit.Assert.assertNotNull(sTGroup11);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Python2" + "'", str16, "Python2");
        org.junit.Assert.assertNotNull(sTGroup17);
        org.junit.Assert.assertNotNull(strSet20);
        org.junit.Assert.assertNotNull(strSet24);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "hi!" + "'", str27, "hi!");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "_@" + "'", str29, "_@");
        org.junit.Assert.assertNotNull(strSet34);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "@" + "'", str36, "@");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "Python2" + "'", str37, "Python2");
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "Python2" + "'", str41, "Python2");
        org.junit.Assert.assertNotNull(sTGroup42);
        org.junit.Assert.assertNull(codeGenerator44);
        org.junit.Assert.assertNotNull(sTGroup45);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "" + "'", str51, "");
        org.junit.Assert.assertNotNull(strArray57);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "_tset\\\\1" + "'", str60, "_tset\\\\1");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[]");
        org.junit.Assert.assertNotNull(strArray63);
        org.junit.Assert.assertNotNull(strArray64);
        org.junit.Assert.assertNotNull(strArray65);
        org.junit.Assert.assertNull(codeGenerator66);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "Tset\\\"tset_tsetContexContext" + "'", str68, "Tset\\\"tset_tsetContexContext");
    }

    @Test
    public void test1076() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1076");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String str3 = python2Target1.getImplicitSetLabel("");
        java.lang.String[] strArray4 = python2Target1.targetCharValueEscape;
        java.util.Set<java.lang.String> strSet5 = python2Target1.badWords;
        java.lang.String str7 = python2Target1.encodeIntAsCharEscape((int) 'a');
        java.lang.String str8 = python2Target1.getLanguage();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "_tset" + "'", str3, "_tset");
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "a" + "'", str7, "a");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Python2" + "'", str8, "Python2");
    }

    @Test
    public void test1077() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1077");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        org.stringtemplate.v4.STGroup sTGroup2 = python2Target1.templates;
        java.lang.String str3 = python2Target1.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator4 = null;
        python2Target1.gen = codeGenerator4;
        java.lang.String str6 = python2Target1.getVersion();
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "4.5.2.1" + "'", str3, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "4.5.2.1" + "'", str6, "4.5.2.1");
    }

    @Test
    public void test1078() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1078");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String[] strArray4 = new java.lang.String[] { "Python2" };
        org.antlr.v4.codegen.target.Python2Target.python2Keywords = strArray4;
        python2Target1.targetCharValueEscape = strArray4;
        org.antlr.v4.tool.Grammar grammar7 = null;
        org.stringtemplate.v4.ST sT8 = null;
        python2Target1.genRecognizerHeaderFile(grammar7, sT8, "_tset ");
        java.lang.String str12 = python2Target1.getAltLabelContextStructName("__tsetContext");
        org.antlr.v4.codegen.CodeGenerator codeGenerator13 = null;
        java.lang.String str16 = python2Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator13, "\"\\\\64\"", true);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str18 = python2Target1.getImplicitTokenLabel("\"d\"Context");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "__tsetContextContext" + "'", str12, "__tsetContextContext");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "\"\\\\64\"" + "'", str16, "\"\\\\64\"");
    }

    @Test
    public void test1079() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1079");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String[] strArray2 = python2Target1.targetCharValueEscape;
        java.lang.String str3 = python2Target1.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup4 = python2Target1.loadTemplates();
        int int5 = python2Target1.getInlineTestSetWordSize();
        java.lang.String str6 = python2Target1.language;
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target8 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator7);
        java.util.Set<java.lang.String> strSet9 = python2Target8.badWords;
        java.lang.String str12 = python2Target8.getTargetStringLiteralFromString("hi!", false);
        java.lang.String str14 = python2Target8.getImplicitRuleLabel("@");
        python2Target8.language = "hi!";
        org.antlr.v4.codegen.CodeGenerator codeGenerator17 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target18 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator17);
        java.util.Set<java.lang.String> strSet19 = python2Target18.badWords;
        java.lang.String str21 = python2Target18.encodeIntAsCharEscape(64);
        java.lang.String str22 = python2Target18.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator23 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target24 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator23);
        java.lang.String[] strArray25 = python2Target24.targetCharValueEscape;
        java.lang.String str26 = python2Target24.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup27 = python2Target24.getTemplates();
        python2Target18.templates = sTGroup27;
        org.antlr.v4.codegen.CodeGenerator codeGenerator29 = python2Target18.getCodeGenerator();
        org.stringtemplate.v4.STGroup sTGroup30 = python2Target18.loadTemplates();
        python2Target8.templates = sTGroup30;
        java.lang.String str33 = python2Target8.getImplicitSetLabel("hi!");
        org.antlr.v4.codegen.CodeGenerator codeGenerator34 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target35 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator34);
        java.util.Set<java.lang.String> strSet36 = python2Target35.badWords;
        java.lang.String str38 = python2Target35.encodeIntAsCharEscape(64);
        java.lang.String str39 = python2Target35.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator40 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target41 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator40);
        java.lang.String[] strArray42 = python2Target41.targetCharValueEscape;
        java.lang.String str43 = python2Target41.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup44 = python2Target41.getTemplates();
        python2Target35.templates = sTGroup44;
        java.util.Set<java.lang.String> strSet46 = python2Target35.getBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator47 = python2Target35.getCodeGenerator();
        java.util.Set<java.lang.String> strSet48 = python2Target35.getBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator49 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target50 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator49);
        java.util.Set<java.lang.String> strSet51 = python2Target50.badWords;
        java.lang.String str53 = python2Target50.encodeIntAsCharEscape(64);
        java.lang.String str54 = python2Target50.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator55 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target56 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator55);
        java.lang.String[] strArray57 = python2Target56.targetCharValueEscape;
        java.lang.String str58 = python2Target56.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup59 = python2Target56.getTemplates();
        python2Target50.templates = sTGroup59;
        org.antlr.v4.codegen.CodeGenerator codeGenerator61 = python2Target50.getCodeGenerator();
        org.stringtemplate.v4.STGroup sTGroup62 = python2Target50.loadTemplates();
        python2Target35.templates = sTGroup62;
        python2Target8.templates = sTGroup62;
        org.antlr.v4.codegen.CodeGenerator codeGenerator65 = python2Target8.getCodeGenerator();
        java.lang.String[] strArray66 = python2Target8.targetCharValueEscape;
        python2Target1.targetCharValueEscape = strArray66;
        boolean boolean68 = python2Target1.templatesExist();
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Python2" + "'", str3, "Python2");
        org.junit.Assert.assertNotNull(sTGroup4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 64 + "'", int5 == 64);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Python2" + "'", str6, "Python2");
        org.junit.Assert.assertNotNull(strSet9);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "_@" + "'", str14, "_@");
        org.junit.Assert.assertNotNull(strSet19);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "@" + "'", str21, "@");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "Python2" + "'", str22, "Python2");
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "Python2" + "'", str26, "Python2");
        org.junit.Assert.assertNotNull(sTGroup27);
        org.junit.Assert.assertNull(codeGenerator29);
        org.junit.Assert.assertNotNull(sTGroup30);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "_tsethi!" + "'", str33, "_tsethi!");
        org.junit.Assert.assertNotNull(strSet36);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "@" + "'", str38, "@");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "Python2" + "'", str39, "Python2");
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "Python2" + "'", str43, "Python2");
        org.junit.Assert.assertNotNull(sTGroup44);
        org.junit.Assert.assertNotNull(strSet46);
        org.junit.Assert.assertNull(codeGenerator47);
        org.junit.Assert.assertNotNull(strSet48);
        org.junit.Assert.assertNotNull(strSet51);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "@" + "'", str53, "@");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "Python2" + "'", str54, "Python2");
        org.junit.Assert.assertNotNull(strArray57);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "Python2" + "'", str58, "Python2");
        org.junit.Assert.assertNotNull(sTGroup59);
        org.junit.Assert.assertNull(codeGenerator61);
        org.junit.Assert.assertNotNull(sTGroup62);
        org.junit.Assert.assertNull(codeGenerator65);
        org.junit.Assert.assertNotNull(strArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
    }

    @Test
    public void test1080() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1080");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String[] strArray2 = python2Target1.targetCharValueEscape;
        java.lang.String str3 = python2Target1.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup4 = python2Target1.loadTemplates();
        int int5 = python2Target1.getInlineTestSetWordSize();
        java.lang.String[] strArray6 = python2Target1.targetCharValueEscape;
        org.antlr.v4.codegen.model.RuleFunction ruleFunction7 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str8 = python2Target1.getRuleFunctionContextStructName(ruleFunction7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Python2" + "'", str3, "Python2");
        org.junit.Assert.assertNotNull(sTGroup4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 64 + "'", int5 == 64);
        org.junit.Assert.assertNotNull(strArray6);
    }

    @Test
    public void test1081() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1081");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str4 = python2Target1.encodeIntAsCharEscape(64);
        java.lang.String str5 = python2Target1.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target7 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator6);
        java.lang.String[] strArray8 = python2Target7.targetCharValueEscape;
        java.lang.String str9 = python2Target7.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup10 = python2Target7.getTemplates();
        python2Target1.templates = sTGroup10;
        org.antlr.v4.codegen.CodeGenerator codeGenerator12 = python2Target1.getCodeGenerator();
        org.stringtemplate.v4.STGroup sTGroup13 = python2Target1.loadTemplates();
        boolean boolean14 = python2Target1.templatesExist();
        org.antlr.v4.tool.ast.GrammarAST grammarAST15 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean16 = python2Target1.grammarSymbolCausesIssueInGeneratedCode(grammarAST15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "@" + "'", str4, "@");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Python2" + "'", str5, "Python2");
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Python2" + "'", str9, "Python2");
        org.junit.Assert.assertNotNull(sTGroup10);
        org.junit.Assert.assertNull(codeGenerator12);
        org.junit.Assert.assertNotNull(sTGroup13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
    }

    @Test
    public void test1082() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1082");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str5 = python2Target1.getTargetStringLiteralFromString("hi!", false);
        int int6 = python2Target1.getInlineTestSetWordSize();
        java.lang.String str8 = python2Target1.getTargetStringLiteralFromString("Hi!Context");
        java.lang.String str9 = python2Target1.getLanguage();
        org.antlr.v4.tool.ast.GrammarAST grammarAST10 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean11 = python2Target1.visibleGrammarSymbolCausesIssueInGeneratedCode(grammarAST10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 64 + "'", int6 == 64);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\"Hi!Context\"" + "'", str8, "\"Hi!Context\"");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Python2" + "'", str9, "Python2");
    }

    @Test
    public void test1083() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1083");
        org.antlr.v4.codegen.target.Python2Target.PythonStringRenderer pythonStringRenderer0 = new org.antlr.v4.codegen.target.Python2Target.PythonStringRenderer();
        java.lang.Object obj1 = null;
        java.util.Locale locale3 = null;
        java.lang.String str4 = pythonStringRenderer0.toString(obj1, "_@", locale3);
        org.antlr.v4.codegen.CodeGenerator codeGenerator5 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target6 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator5);
        java.lang.String str8 = python2Target6.getImplicitSetLabel("");
        org.antlr.v4.codegen.CodeGenerator codeGenerator9 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target10 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator9);
        java.util.Set<java.lang.String> strSet11 = python2Target10.badWords;
        java.lang.String str13 = python2Target10.encodeIntAsCharEscape(64);
        java.lang.String str14 = python2Target10.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator15 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target16 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator15);
        java.lang.String[] strArray17 = python2Target16.targetCharValueEscape;
        java.lang.String str18 = python2Target16.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup19 = python2Target16.getTemplates();
        python2Target10.templates = sTGroup19;
        python2Target6.templates = sTGroup19;
        java.lang.String str23 = python2Target6.getAltLabelContextStructName("_tset");
        org.antlr.v4.codegen.CodeGenerator codeGenerator24 = null;
        python2Target6.gen = codeGenerator24;
        java.util.Locale locale27 = null;
        java.lang.String str28 = pythonStringRenderer0.toString((java.lang.Object) codeGenerator24, "\"hi!\"", locale27);
        java.util.Locale locale31 = null;
        java.lang.String str32 = pythonStringRenderer0.toString((java.lang.Object) "\"_tset_tset\\\"\\\\\\\"\\\\\\\\\\\\\\\"hi!\\\\\\\\\\\\\\\"\\\\\\\"\\\"\"", "_4.5.2.1", locale31);
        org.antlr.v4.codegen.CodeGenerator codeGenerator33 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target34 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator33);
        java.util.Set<java.lang.String> strSet35 = python2Target34.badWords;
        java.lang.String str37 = python2Target34.encodeIntAsCharEscape(64);
        java.lang.String str38 = python2Target34.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup39 = python2Target34.getTemplates();
        boolean boolean40 = python2Target34.supportsOverloadedMethods();
        int int41 = python2Target34.getInlineTestSetWordSize();
        java.lang.Class<?> wildcardClass42 = python2Target34.getClass();
        java.util.Locale locale44 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str45 = pythonStringRenderer0.toString((java.lang.Object) wildcardClass42, "Python2ContextContext", locale44);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.lang.Class cannot be cast to java.lang.String");
        } catch (java.lang.ClassCastException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "_@" + "'", str4, "_@");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "_tset" + "'", str8, "_tset");
        org.junit.Assert.assertNotNull(strSet11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "@" + "'", str13, "@");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Python2" + "'", str14, "Python2");
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Python2" + "'", str18, "Python2");
        org.junit.Assert.assertNotNull(sTGroup19);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "_tsetContext" + "'", str23, "_tsetContext");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "\"hi!\"" + "'", str28, "\"hi!\"");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "_4.5.2.1" + "'", str32, "_4.5.2.1");
        org.junit.Assert.assertNotNull(strSet35);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "@" + "'", str37, "@");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "Python2" + "'", str38, "Python2");
        org.junit.Assert.assertNotNull(sTGroup39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 64 + "'", int41 == 64);
        org.junit.Assert.assertNotNull(wildcardClass42);
    }

    @Test
    public void test1084() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1084");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String[] strArray2 = python2Target1.targetCharValueEscape;
        java.lang.String str3 = python2Target1.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup4 = python2Target1.getTemplates();
        org.antlr.v4.codegen.CodeGenerator codeGenerator5 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target6 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator5);
        java.util.Set<java.lang.String> strSet7 = python2Target6.badWords;
        python2Target1.badWords = strSet7;
        java.lang.String[] strArray14 = new java.lang.String[] { "@", "\"_tset\"", "\"hi!\"", "_tset\\1", "_tset\\\\1" };
        python2Target1.targetCharValueEscape = strArray14;
        java.lang.String str16 = python2Target1.getLanguage();
        boolean boolean17 = python2Target1.templatesExist();
        java.lang.String[] strArray18 = python2Target1.targetCharValueEscape;
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Python2" + "'", str3, "Python2");
        org.junit.Assert.assertNotNull(sTGroup4);
        org.junit.Assert.assertNotNull(strSet7);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Python2" + "'", str16, "Python2");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(strArray18);
    }

    @Test
    public void test1085() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1085");
        java.lang.String str1 = org.stringtemplate.v4.StringRenderer.escapeHTML("\"_tset__tset_tset\\\"\\\\\\\"\\\\\\\\\\\\\\\"hi!\\\\\\\\\\\\\\\"\\\\\\\"\\\"\"");
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "\"_tset__tset_tset\\\"\\\\\\\"\\\\\\\\\\\\\\\"hi!\\\\\\\\\\\\\\\"\\\\\\\"\\\"\"" + "'", str1, "\"_tset__tset_tset\\\"\\\\\\\"\\\\\\\\\\\\\\\"hi!\\\\\\\\\\\\\\\"\\\\\\\"\\\"\"");
    }

    @Test
    public void test1086() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1086");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String str3 = python2Target1.getImplicitSetLabel("");
        org.antlr.v4.tool.Grammar grammar4 = null;
        org.stringtemplate.v4.ST sT5 = null;
        python2Target1.genRecognizerHeaderFile(grammar4, sT5, "_tset");
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target9 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator8);
        java.util.Set<java.lang.String> strSet10 = python2Target9.badWords;
        java.lang.String str12 = python2Target9.encodeIntAsCharEscape(64);
        java.lang.String str13 = python2Target9.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator14 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target15 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator14);
        java.lang.String[] strArray16 = python2Target15.targetCharValueEscape;
        java.lang.String str17 = python2Target15.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup18 = python2Target15.getTemplates();
        python2Target9.templates = sTGroup18;
        python2Target1.templates = sTGroup18;
        org.antlr.v4.tool.Grammar grammar21 = null;
        org.stringtemplate.v4.ST sT22 = null;
        python2Target1.genRecognizerHeaderFile(grammar21, sT22, "\"\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator25 = null;
        python2Target1.gen = codeGenerator25;
        java.lang.String[] strArray53 = new java.lang.String[] { "_tset\\\\1", "tsetContex", "\"\\\"\\\\\\\"hi!\\\\\\\"\\\"\"", "\"\\\"hi!\\\"\"", "__tsetContext", "_\"\\\"hi!\\\"\"", "\"Hi!Context\"", "_\"\\\"\\\\\\\"hi!\\\\\\\"\\\"\"", "\"tsetContex\"", "\"\\\"\\\"\"", "_tset\\\\1", "4.5.2.1", "\"tsetContex\"", "_tset", "_tsetContext", "\"_tsethi!\"", "4.5.2.1", "\"hi!\"", "d", "_tsetContext", "\"\\\"\\\\\\\"hi!\\\\\\\"\\\"\"", "@", "\"\\\"\\\"\"", "\"\\\"\\\"\"", "_tsetContext", "_@" };
        java.util.LinkedHashSet<java.lang.String> strSet54 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet54, strArray53);
        python2Target1.badWords = strSet54;
        org.antlr.v4.codegen.CodeGenerator codeGenerator57 = null;
        java.lang.String str60 = python2Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator57, "\"\\\"\\\"\"", false);
        org.antlr.v4.tool.Grammar grammar61 = null;
        org.stringtemplate.v4.ST sT62 = null;
        // The following exception was thrown during execution in test generation
        try {
            python2Target1.genFile(grammar61, sT62, "hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "_tset" + "'", str3, "_tset");
        org.junit.Assert.assertNotNull(strSet10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "@" + "'", str12, "@");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Python2" + "'", str13, "Python2");
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Python2" + "'", str17, "Python2");
        org.junit.Assert.assertNotNull(sTGroup18);
        org.junit.Assert.assertNotNull(strArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "\\\"\\\"" + "'", str60, "\\\"\\\"");
    }

    @Test
    public void test1087() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1087");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String[] strArray2 = python2Target1.targetCharValueEscape;
        org.antlr.v4.tool.Grammar grammar3 = null;
        org.stringtemplate.v4.ST sT4 = null;
        python2Target1.genRecognizerHeaderFile(grammar3, sT4, "hi!");
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = null;
        java.lang.String str10 = python2Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator7, "_tsetContext", true);
        boolean boolean11 = python2Target1.wantsBaseVisitor();
        org.antlr.v4.codegen.CodeGenerator codeGenerator12 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target13 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator12);
        java.util.Set<java.lang.String> strSet14 = python2Target13.badWords;
        java.lang.String str16 = python2Target13.encodeIntAsCharEscape(64);
        org.stringtemplate.v4.STGroup sTGroup17 = python2Target13.getTemplates();
        python2Target1.templates = sTGroup17;
        boolean boolean19 = python2Target1.templatesExist();
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\"tsetContex\"" + "'", str10, "\"tsetContex\"");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(strSet14);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "@" + "'", str16, "@");
        org.junit.Assert.assertNotNull(sTGroup17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
    }

    @Test
    public void test1088() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1088");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String[] strArray2 = python2Target1.targetCharValueEscape;
        org.antlr.v4.tool.Grammar grammar3 = null;
        org.stringtemplate.v4.ST sT4 = null;
        python2Target1.genRecognizerHeaderFile(grammar3, sT4, "hi!");
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target8 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator7);
        java.lang.String[] strArray9 = python2Target8.targetCharValueEscape;
        java.lang.String str12 = python2Target8.getTargetStringLiteralFromString("Python2", false);
        java.lang.String str13 = python2Target8.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator14 = python2Target8.gen;
        org.antlr.v4.tool.Grammar grammar15 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator16 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target17 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator16);
        java.lang.String[] strArray18 = python2Target17.targetCharValueEscape;
        java.lang.String str21 = python2Target17.getTargetStringLiteralFromString("_tset\\1", false);
        org.antlr.v4.tool.Grammar grammar22 = null;
        int[] intArray23 = new int[] {};
        java.lang.String[] strArray24 = python2Target17.getTokenTypesAsTargetLabels(grammar22, intArray23);
        java.lang.String[] strArray25 = python2Target8.getTokenTypesAsTargetLabels(grammar15, intArray23);
        python2Target1.targetCharValueEscape = strArray25;
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Python2" + "'", str12, "Python2");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "4.5.2.1" + "'", str13, "4.5.2.1");
        org.junit.Assert.assertNull(codeGenerator14);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "_tset\\\\1" + "'", str21, "_tset\\\\1");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[]");
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertNotNull(strArray25);
    }

    @Test
    public void test1089() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1089");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String[] strArray2 = python2Target1.targetCharValueEscape;
        java.lang.String str3 = python2Target1.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup4 = python2Target1.getTemplates();
        org.antlr.v4.codegen.CodeGenerator codeGenerator5 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target6 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator5);
        java.util.Set<java.lang.String> strSet7 = python2Target6.badWords;
        python2Target1.badWords = strSet7;
        java.lang.String[] strArray14 = new java.lang.String[] { "@", "\"_tset\"", "\"hi!\"", "_tset\\1", "_tset\\\\1" };
        python2Target1.targetCharValueEscape = strArray14;
        java.lang.String str17 = python2Target1.getListLabel("");
        org.stringtemplate.v4.STGroup sTGroup18 = python2Target1.templates;
        java.lang.String str20 = python2Target1.getImplicitRuleLabel("__tset_tset\"\\\"\\\\\\\"hi!\\\\\\\"\\\"\"Context");
        java.lang.String str21 = python2Target1.getVersion();
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Python2" + "'", str3, "Python2");
        org.junit.Assert.assertNotNull(sTGroup4);
        org.junit.Assert.assertNotNull(strSet7);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertNotNull(sTGroup18);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "___tset_tset\"\\\"\\\\\\\"hi!\\\\\\\"\\\"\"Context" + "'", str20, "___tset_tset\"\\\"\\\\\\\"hi!\\\\\\\"\\\"\"Context");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "4.5.2.1" + "'", str21, "4.5.2.1");
    }

    @Test
    public void test1090() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1090");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String[] strArray2 = python2Target1.targetCharValueEscape;
        java.lang.String str5 = python2Target1.getTargetStringLiteralFromString("Python2", false);
        java.lang.String str6 = python2Target1.getVersion();
        java.lang.String str8 = python2Target1.encodeIntAsCharEscape((int) (short) 1);
        python2Target1.language = "Hi!Context";
        java.util.Set<java.lang.String> strSet11 = python2Target1.getBadWords();
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Python2" + "'", str5, "Python2");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "4.5.2.1" + "'", str6, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\\1" + "'", str8, "\\1");
        org.junit.Assert.assertNotNull(strSet11);
    }

    @Test
    public void test1091() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1091");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String[] strArray2 = python2Target1.targetCharValueEscape;
        java.lang.String str3 = python2Target1.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup4 = python2Target1.getTemplates();
        boolean boolean5 = python2Target1.wantsBaseVisitor();
        java.lang.String str7 = python2Target1.getTargetStringLiteralFromString("d");
        java.lang.String str8 = python2Target1.getLanguage();
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Python2" + "'", str3, "Python2");
        org.junit.Assert.assertNotNull(sTGroup4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "\"d\"" + "'", str7, "\"d\"");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Python2" + "'", str8, "Python2");
    }

    @Test
    public void test1092() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1092");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        boolean boolean3 = python2Target1.wantsBaseVisitor();
        org.stringtemplate.v4.STGroup sTGroup4 = python2Target1.loadTemplates();
        int int5 = python2Target1.getSerializedATNSegmentLimit();
        org.antlr.v4.tool.Grammar grammar6 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target8 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator7);
        java.util.Set<java.lang.String> strSet9 = python2Target8.badWords;
        java.lang.String str11 = python2Target8.encodeIntAsCharEscape(64);
        java.lang.String str12 = python2Target8.getLanguage();
        int int13 = python2Target8.getInlineTestSetWordSize();
        java.lang.String str15 = python2Target8.getImplicitSetLabel("_tset\\\\1");
        org.antlr.v4.tool.Grammar grammar16 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator17 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target18 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator17);
        java.lang.String[] strArray19 = python2Target18.targetCharValueEscape;
        java.lang.String str22 = python2Target18.getTargetStringLiteralFromString("_tset\\1", false);
        org.antlr.v4.tool.Grammar grammar23 = null;
        int[] intArray24 = new int[] {};
        java.lang.String[] strArray25 = python2Target18.getTokenTypesAsTargetLabels(grammar23, intArray24);
        java.lang.String[] strArray26 = python2Target8.getTokenTypesAsTargetLabels(grammar16, intArray24);
        java.lang.String[] strArray27 = python2Target1.getTokenTypesAsTargetLabels(grammar6, intArray24);
        org.antlr.v4.codegen.target.Python2Target.python2Keywords = strArray27;
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(sTGroup4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 2147483647 + "'", int5 == 2147483647);
        org.junit.Assert.assertNotNull(strSet9);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "@" + "'", str11, "@");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Python2" + "'", str12, "Python2");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 64 + "'", int13 == 64);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "_tset_tset\\\\1" + "'", str15, "_tset_tset\\\\1");
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "_tset\\\\1" + "'", str22, "_tset\\\\1");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[]");
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertNotNull(strArray27);
    }

    @Test
    public void test1093() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1093");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str4 = python2Target1.encodeIntAsCharEscape(64);
        java.lang.String str5 = python2Target1.getLanguage();
        java.lang.String str8 = python2Target1.getTargetStringLiteralFromString("_@", false);
        org.stringtemplate.v4.STGroup sTGroup9 = python2Target1.loadTemplates();
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = null;
        python2Target1.gen = codeGenerator10;
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "@" + "'", str4, "@");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Python2" + "'", str5, "Python2");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "_@" + "'", str8, "_@");
        org.junit.Assert.assertNotNull(sTGroup9);
    }

    @Test
    public void test1094() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1094");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String str3 = python2Target1.getImplicitSetLabel("");
        org.antlr.v4.codegen.CodeGenerator codeGenerator4 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target5 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator4);
        java.util.Set<java.lang.String> strSet6 = python2Target5.badWords;
        java.lang.String str8 = python2Target5.encodeIntAsCharEscape(64);
        java.lang.String str9 = python2Target5.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target11 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator10);
        java.lang.String[] strArray12 = python2Target11.targetCharValueEscape;
        java.lang.String str13 = python2Target11.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup14 = python2Target11.getTemplates();
        python2Target5.templates = sTGroup14;
        python2Target1.templates = sTGroup14;
        boolean boolean17 = python2Target1.templatesExist();
        java.lang.String[] strArray18 = python2Target1.targetCharValueEscape;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str20 = python2Target1.getElementListName("\"_Contex\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "_tset" + "'", str3, "_tset");
        org.junit.Assert.assertNotNull(strSet6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "@" + "'", str8, "@");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Python2" + "'", str9, "Python2");
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Python2" + "'", str13, "Python2");
        org.junit.Assert.assertNotNull(sTGroup14);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(strArray18);
    }

    @Test
    public void test1095() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1095");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String[] strArray2 = python2Target1.targetCharValueEscape;
        org.antlr.v4.tool.Grammar grammar3 = null;
        org.stringtemplate.v4.ST sT4 = null;
        python2Target1.genRecognizerHeaderFile(grammar3, sT4, "hi!");
        python2Target1.language = "_\"_tset\"";
        org.antlr.v4.tool.ast.GrammarAST grammarAST9 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean10 = python2Target1.grammarSymbolCausesIssueInGeneratedCode(grammarAST9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray2);
    }

    @Test
    public void test1096() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1096");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String str3 = python2Target1.getImplicitSetLabel("");
        java.lang.String[] strArray4 = python2Target1.targetCharValueEscape;
        org.stringtemplate.v4.STGroup sTGroup5 = python2Target1.getTemplates();
        java.lang.String str6 = python2Target1.getVersion();
        org.stringtemplate.v4.STGroup sTGroup7 = python2Target1.getTemplates();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "_tset" + "'", str3, "_tset");
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertNotNull(sTGroup5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "4.5.2.1" + "'", str6, "4.5.2.1");
        org.junit.Assert.assertNotNull(sTGroup7);
    }

    @Test
    public void test1097() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1097");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str4 = python2Target1.encodeIntAsCharEscape(64);
        java.lang.String str6 = python2Target1.getAltLabelContextStructName("Python2");
        boolean boolean7 = python2Target1.supportsOverloadedMethods();
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target9 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator8);
        java.util.Set<java.lang.String> strSet10 = python2Target9.badWords;
        boolean boolean11 = python2Target9.wantsBaseVisitor();
        org.stringtemplate.v4.STGroup sTGroup12 = python2Target9.loadTemplates();
        org.stringtemplate.v4.STGroup sTGroup13 = python2Target9.getTemplates();
        python2Target1.templates = sTGroup13;
        java.lang.String str17 = python2Target1.getTargetStringLiteralFromString("\\12", true);
        boolean boolean18 = python2Target1.templatesExist();
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "@" + "'", str4, "@");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Python2Context" + "'", str6, "Python2Context");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(strSet10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(sTGroup12);
        org.junit.Assert.assertNotNull(sTGroup13);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "\"\\\\12\"" + "'", str17, "\"\\\\12\"");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
    }

    @Test
    public void test1098() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1098");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str4 = python2Target1.encodeIntAsCharEscape(64);
        java.lang.String str5 = python2Target1.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target7 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator6);
        java.lang.String[] strArray8 = python2Target7.targetCharValueEscape;
        java.lang.String str9 = python2Target7.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup10 = python2Target7.getTemplates();
        python2Target1.templates = sTGroup10;
        org.stringtemplate.v4.STGroup sTGroup12 = python2Target1.templates;
        java.util.Set<java.lang.String> strSet13 = python2Target1.badWords;
        python2Target1.addBadWords();
        org.antlr.v4.tool.ast.GrammarAST grammarAST15 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean16 = python2Target1.grammarSymbolCausesIssueInGeneratedCode(grammarAST15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "@" + "'", str4, "@");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Python2" + "'", str5, "Python2");
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Python2" + "'", str9, "Python2");
        org.junit.Assert.assertNotNull(sTGroup10);
        org.junit.Assert.assertNotNull(sTGroup12);
        org.junit.Assert.assertNotNull(strSet13);
    }

    @Test
    public void test1099() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1099");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str4 = python2Target1.encodeIntAsCharEscape(64);
        java.lang.String str5 = python2Target1.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target7 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator6);
        java.lang.String[] strArray8 = python2Target7.targetCharValueEscape;
        java.lang.String str9 = python2Target7.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup10 = python2Target7.getTemplates();
        python2Target1.templates = sTGroup10;
        org.stringtemplate.v4.STGroup sTGroup12 = python2Target1.templates;
        java.util.Set<java.lang.String> strSet13 = python2Target1.badWords;
        boolean boolean14 = python2Target1.supportsOverloadedMethods();
        java.lang.String str16 = python2Target1.getImplicitSetLabel("\"Hi!Context\"");
        java.lang.String str17 = python2Target1.language;
        java.lang.String str19 = python2Target1.getImplicitSetLabel("\"\\\"\\\\\\\"hi!\\\\\\\"\\\"\"");
        java.lang.String str21 = python2Target1.getTargetStringLiteralFromString("_tset\\n");
        java.lang.String str22 = python2Target1.getLanguage();
        python2Target1.addBadWords();
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "@" + "'", str4, "@");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Python2" + "'", str5, "Python2");
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Python2" + "'", str9, "Python2");
        org.junit.Assert.assertNotNull(sTGroup10);
        org.junit.Assert.assertNotNull(sTGroup12);
        org.junit.Assert.assertNotNull(strSet13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "_tset\"Hi!Context\"" + "'", str16, "_tset\"Hi!Context\"");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Python2" + "'", str17, "Python2");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "_tset\"\\\"\\\\\\\"hi!\\\\\\\"\\\"\"" + "'", str19, "_tset\"\\\"\\\\\\\"hi!\\\\\\\"\\\"\"");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "\"_tset\\\\n\"" + "'", str21, "\"_tset\\\\n\"");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "Python2" + "'", str22, "Python2");
    }

    @Test
    public void test1100() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1100");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str4 = python2Target1.encodeIntAsCharEscape(64);
        java.lang.String str5 = python2Target1.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target7 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator6);
        java.lang.String[] strArray8 = python2Target7.targetCharValueEscape;
        java.lang.String str9 = python2Target7.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup10 = python2Target7.getTemplates();
        python2Target1.templates = sTGroup10;
        java.util.Set<java.lang.String> strSet12 = python2Target1.getBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator13 = python2Target1.getCodeGenerator();
        java.util.Set<java.lang.String> strSet14 = python2Target1.getBadWords();
        boolean boolean15 = python2Target1.wantsBaseListener();
        java.lang.String str18 = python2Target1.getTargetStringLiteralFromString("\"\\\"hi!\\\"\"", true);
        org.stringtemplate.v4.STGroup sTGroup19 = python2Target1.getTemplates();
        org.antlr.v4.codegen.CodeGenerator codeGenerator20 = python2Target1.gen;
        int int21 = python2Target1.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet22 = python2Target1.badWords;
        int int23 = python2Target1.getInlineTestSetWordSize();
        org.antlr.v4.codegen.CodeGenerator codeGenerator24 = null;
        java.lang.String str27 = python2Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator24, "\"_\\\"\\\\\\\"hi!\\\\\\\"\\\"\"", false);
        java.lang.String str29 = python2Target1.getImplicitRuleLabel("_\"_tset\\\\\\\"\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"hi!\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"\\\\\\\"\"");
        org.antlr.v4.tool.ast.GrammarAST grammarAST30 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean31 = python2Target1.visibleGrammarSymbolCausesIssueInGeneratedCode(grammarAST30);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "@" + "'", str4, "@");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Python2" + "'", str5, "Python2");
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Python2" + "'", str9, "Python2");
        org.junit.Assert.assertNotNull(sTGroup10);
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertNull(codeGenerator13);
        org.junit.Assert.assertNotNull(strSet14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "\"\\\"\\\\\\\"hi!\\\\\\\"\\\"\"" + "'", str18, "\"\\\"\\\\\\\"hi!\\\\\\\"\\\"\"");
        org.junit.Assert.assertNotNull(sTGroup19);
        org.junit.Assert.assertNull(codeGenerator20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 64 + "'", int21 == 64);
        org.junit.Assert.assertNotNull(strSet22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 64 + "'", int23 == 64);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "_\\\"\\\\\\\"hi!\\\\\\\"\\\"" + "'", str27, "_\\\"\\\\\\\"hi!\\\\\\\"\\\"");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "__\"_tset\\\\\\\"\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"hi!\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"\\\\\\\"\"" + "'", str29, "__\"_tset\\\\\\\"\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"hi!\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"\\\\\\\"\"");
    }

    @Test
    public void test1101() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1101");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str4 = python2Target1.encodeIntAsCharEscape(64);
        java.lang.String str5 = python2Target1.getLanguage();
        java.lang.String str7 = python2Target1.getImplicitSetLabel("");
        java.lang.String str9 = python2Target1.getImplicitSetLabel("\\n");
        boolean boolean10 = python2Target1.templatesExist();
        boolean boolean11 = python2Target1.templatesExist();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str13 = python2Target1.getElementName("_tset\\\\1");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "@" + "'", str4, "@");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Python2" + "'", str5, "Python2");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "_tset" + "'", str7, "_tset");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "_tset\\n" + "'", str9, "_tset\\n");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
    }

    @Test
    public void test1102() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1102");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str4 = python2Target1.encodeIntAsCharEscape(64);
        java.lang.String str5 = python2Target1.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target7 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator6);
        java.lang.String[] strArray8 = python2Target7.targetCharValueEscape;
        java.lang.String str9 = python2Target7.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup10 = python2Target7.getTemplates();
        python2Target1.templates = sTGroup10;
        java.util.Set<java.lang.String> strSet12 = python2Target1.getBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator13 = python2Target1.getCodeGenerator();
        java.util.Set<java.lang.String> strSet14 = python2Target1.getBadWords();
        boolean boolean15 = python2Target1.wantsBaseListener();
        org.stringtemplate.v4.STGroup sTGroup16 = python2Target1.loadTemplates();
        java.lang.String str18 = python2Target1.getAltLabelContextStructName("\"\\\"_tset_tset_tsetContext\\\"\"");
        org.antlr.v4.tool.ast.GrammarAST grammarAST19 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean20 = python2Target1.grammarSymbolCausesIssueInGeneratedCode(grammarAST19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "@" + "'", str4, "@");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Python2" + "'", str5, "Python2");
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Python2" + "'", str9, "Python2");
        org.junit.Assert.assertNotNull(sTGroup10);
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertNull(codeGenerator13);
        org.junit.Assert.assertNotNull(strSet14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(sTGroup16);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "\"\\\"_tset_tset_tsetContext\\\"\"Context" + "'", str18, "\"\\\"_tset_tset_tsetContext\\\"\"Context");
    }

    @Test
    public void test1103() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1103");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str4 = python2Target1.encodeIntAsCharEscape(64);
        java.lang.String str5 = python2Target1.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target7 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator6);
        java.lang.String[] strArray8 = python2Target7.targetCharValueEscape;
        java.lang.String str9 = python2Target7.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup10 = python2Target7.getTemplates();
        python2Target1.templates = sTGroup10;
        java.util.Set<java.lang.String> strSet12 = python2Target1.getBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator13 = python2Target1.getCodeGenerator();
        org.antlr.v4.codegen.CodeGenerator codeGenerator14 = null;
        java.lang.String str17 = python2Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator14, "\".5.2.\"", true);
        boolean boolean18 = python2Target1.supportsOverloadedMethods();
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "@" + "'", str4, "@");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Python2" + "'", str5, "Python2");
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Python2" + "'", str9, "Python2");
        org.junit.Assert.assertNotNull(sTGroup10);
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertNull(codeGenerator13);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "\".5.2.\"" + "'", str17, "\".5.2.\"");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    }

    @Test
    public void test1104() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1104");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String[] strArray2 = python2Target1.targetCharValueEscape;
        java.lang.String str3 = python2Target1.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup4 = python2Target1.templates;
        java.lang.String str6 = python2Target1.getTargetStringLiteralFromString("4.5.2.1");
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = null;
        python2Target1.gen = codeGenerator7;
        org.stringtemplate.v4.STGroup sTGroup9 = python2Target1.templates;
        org.antlr.v4.codegen.target.Python2Target python2Target10 = new org.antlr.v4.codegen.target.Python2Target();
        org.stringtemplate.v4.STGroup sTGroup11 = python2Target10.templates;
        java.lang.String[] strArray12 = python2Target10.targetCharValueEscape;
        org.antlr.v4.codegen.CodeGenerator codeGenerator13 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target14 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator13);
        java.lang.String[] strArray15 = python2Target14.targetCharValueEscape;
        java.lang.String str18 = python2Target14.getTargetStringLiteralFromString("Python2", false);
        java.lang.String[] strArray19 = org.antlr.v4.codegen.target.Python2Target.python2Keywords;
        python2Target14.targetCharValueEscape = strArray19;
        python2Target10.targetCharValueEscape = strArray19;
        python2Target1.targetCharValueEscape = strArray19;
        java.util.Set<java.lang.String> strSet23 = python2Target1.badWords;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str25 = python2Target1.getElementName("\"\".5.2.\"\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Python2" + "'", str3, "Python2");
        org.junit.Assert.assertNull(sTGroup4);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\"4.5.2.1\"" + "'", str6, "\"4.5.2.1\"");
        org.junit.Assert.assertNull(sTGroup9);
        org.junit.Assert.assertNull(sTGroup11);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Python2" + "'", str18, "Python2");
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertNotNull(strSet23);
    }

    @Test
    public void test1105() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1105");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        boolean boolean3 = python2Target1.wantsBaseVisitor();
        org.stringtemplate.v4.STGroup sTGroup4 = python2Target1.loadTemplates();
        org.stringtemplate.v4.STGroup sTGroup5 = python2Target1.getTemplates();
        java.util.Set<java.lang.String> strSet6 = python2Target1.badWords;
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target8 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator7);
        java.util.Set<java.lang.String> strSet9 = python2Target8.badWords;
        java.lang.String str12 = python2Target8.getTargetStringLiteralFromString("hi!", false);
        java.lang.String str14 = python2Target8.getTargetStringLiteralFromString("\"hi!\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator15 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target16 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator15);
        java.util.Set<java.lang.String> strSet17 = python2Target16.badWords;
        java.lang.String str19 = python2Target16.encodeIntAsCharEscape(64);
        java.lang.String str20 = python2Target16.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator21 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target22 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator21);
        java.lang.String[] strArray23 = python2Target22.targetCharValueEscape;
        java.lang.String str24 = python2Target22.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup25 = python2Target22.getTemplates();
        python2Target16.templates = sTGroup25;
        org.antlr.v4.tool.Grammar grammar27 = null;
        org.stringtemplate.v4.ST sT28 = null;
        python2Target16.genRecognizerHeaderFile(grammar27, sT28, "\"_tset\"");
        java.util.Set<java.lang.String> strSet31 = python2Target16.getBadWords();
        python2Target8.badWords = strSet31;
        python2Target1.badWords = strSet31;
        org.antlr.v4.codegen.CodeGenerator codeGenerator34 = null;
        python2Target1.gen = codeGenerator34;
        int int36 = python2Target1.getInlineTestSetWordSize();
        org.stringtemplate.v4.STGroup sTGroup37 = python2Target1.loadTemplates();
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(sTGroup4);
        org.junit.Assert.assertNotNull(sTGroup5);
        org.junit.Assert.assertNotNull(strSet6);
        org.junit.Assert.assertNotNull(strSet9);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "\"\\\"hi!\\\"\"" + "'", str14, "\"\\\"hi!\\\"\"");
        org.junit.Assert.assertNotNull(strSet17);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "@" + "'", str19, "@");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "Python2" + "'", str20, "Python2");
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "Python2" + "'", str24, "Python2");
        org.junit.Assert.assertNotNull(sTGroup25);
        org.junit.Assert.assertNotNull(strSet31);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 64 + "'", int36 == 64);
        org.junit.Assert.assertNotNull(sTGroup37);
    }

    @Test
    public void test1106() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1106");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str4 = python2Target1.encodeIntAsCharEscape(64);
        java.lang.String str5 = python2Target1.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target7 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator6);
        java.lang.String[] strArray8 = python2Target7.targetCharValueEscape;
        java.lang.String str9 = python2Target7.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup10 = python2Target7.getTemplates();
        python2Target1.templates = sTGroup10;
        java.util.Set<java.lang.String> strSet12 = python2Target1.getBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator13 = python2Target1.getCodeGenerator();
        java.util.Set<java.lang.String> strSet14 = python2Target1.getBadWords();
        boolean boolean15 = python2Target1.wantsBaseListener();
        java.lang.String str18 = python2Target1.getTargetStringLiteralFromString("\"\\\"hi!\\\"\"", true);
        org.stringtemplate.v4.STGroup sTGroup19 = python2Target1.getTemplates();
        org.antlr.v4.codegen.CodeGenerator codeGenerator20 = python2Target1.gen;
        int int21 = python2Target1.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet22 = python2Target1.badWords;
        org.antlr.v4.tool.Grammar grammar23 = null;
        org.stringtemplate.v4.ST sT24 = null;
        // The following exception was thrown during execution in test generation
        try {
            python2Target1.genListenerFile(grammar23, sT24);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "@" + "'", str4, "@");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Python2" + "'", str5, "Python2");
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Python2" + "'", str9, "Python2");
        org.junit.Assert.assertNotNull(sTGroup10);
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertNull(codeGenerator13);
        org.junit.Assert.assertNotNull(strSet14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "\"\\\"\\\\\\\"hi!\\\\\\\"\\\"\"" + "'", str18, "\"\\\"\\\\\\\"hi!\\\\\\\"\\\"\"");
        org.junit.Assert.assertNotNull(sTGroup19);
        org.junit.Assert.assertNull(codeGenerator20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 64 + "'", int21 == 64);
        org.junit.Assert.assertNotNull(strSet22);
    }

    @Test
    public void test1107() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1107");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String[] strArray2 = python2Target1.targetCharValueEscape;
        java.lang.String str3 = python2Target1.getLanguage();
        java.lang.String str6 = python2Target1.getTargetStringLiteralFromString("_tset", true);
        java.lang.String str7 = python2Target1.getVersion();
        org.stringtemplate.v4.STGroup sTGroup8 = python2Target1.templates;
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Python2" + "'", str3, "Python2");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\"_tset\"" + "'", str6, "\"_tset\"");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "4.5.2.1" + "'", str7, "4.5.2.1");
        org.junit.Assert.assertNull(sTGroup8);
    }

    @Test
    public void test1108() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1108");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String str3 = python2Target1.getImplicitSetLabel("");
        java.lang.String str4 = python2Target1.language;
        java.lang.String str7 = python2Target1.getTargetStringLiteralFromString("\"\"", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = python2Target1.getCodeGenerator();
        java.util.Set<java.lang.String> strSet9 = python2Target1.getBadWords();
        java.lang.String str10 = python2Target1.language;
        org.stringtemplate.v4.STGroup sTGroup11 = python2Target1.getTemplates();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "_tset" + "'", str3, "_tset");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Python2" + "'", str4, "Python2");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "\"\\\"\\\"\"" + "'", str7, "\"\\\"\\\"\"");
        org.junit.Assert.assertNull(codeGenerator8);
        org.junit.Assert.assertNotNull(strSet9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Python2" + "'", str10, "Python2");
        org.junit.Assert.assertNotNull(sTGroup11);
    }

    @Test
    public void test1109() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1109");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        org.stringtemplate.v4.STGroup sTGroup2 = python2Target1.templates;
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = null;
        java.lang.String str6 = python2Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator3, "\"_tset\"", false);
        boolean boolean7 = python2Target1.supportsOverloadedMethods();
        java.lang.String str10 = python2Target1.getTargetStringLiteralFromString("", true);
        python2Target1.language = "\"_tset_tset\\\"\\\"\\\\\\\"hi!\\\\\\\"\\\"\"";
        org.antlr.v4.codegen.CodeGenerator codeGenerator13 = null;
        python2Target1.gen = codeGenerator13;
        org.antlr.v4.codegen.CodeGenerator codeGenerator15 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target16 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator15);
        java.lang.String[] strArray17 = python2Target16.targetCharValueEscape;
        java.lang.String str18 = python2Target16.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup19 = python2Target16.getTemplates();
        org.antlr.v4.codegen.CodeGenerator codeGenerator20 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target21 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator20);
        java.util.Set<java.lang.String> strSet22 = python2Target21.badWords;
        python2Target16.badWords = strSet22;
        org.antlr.v4.codegen.CodeGenerator codeGenerator24 = python2Target16.gen;
        java.lang.String str25 = python2Target16.getLanguage();
        java.lang.String str26 = python2Target16.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator27 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target28 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator27);
        java.util.Set<java.lang.String> strSet29 = python2Target28.badWords;
        java.lang.String str32 = python2Target28.getTargetStringLiteralFromString("hi!", false);
        int int33 = python2Target28.getInlineTestSetWordSize();
        boolean boolean34 = python2Target28.wantsBaseVisitor();
        java.lang.String str35 = python2Target28.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup36 = python2Target28.loadTemplates();
        python2Target16.templates = sTGroup36;
        java.lang.String str39 = python2Target16.getAltLabelContextStructName("\"_tsethi!\"");
        java.lang.String str42 = python2Target16.getTargetStringLiteralFromString("\"_tset_tset_tsetContext\"", false);
        java.lang.String[] strArray43 = python2Target16.targetCharValueEscape;
        python2Target1.targetCharValueEscape = strArray43;
        org.antlr.v4.codegen.CodeGenerator codeGenerator45 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target46 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator45);
        java.util.Set<java.lang.String> strSet47 = python2Target46.badWords;
        java.lang.String str50 = python2Target46.getTargetStringLiteralFromString("hi!", false);
        int int51 = python2Target46.getInlineTestSetWordSize();
        boolean boolean52 = python2Target46.wantsBaseVisitor();
        java.lang.String str53 = python2Target46.getLanguage();
        python2Target46.addBadWords();
        java.util.Set<java.lang.String> strSet55 = python2Target46.badWords;
        java.lang.String[] strArray56 = python2Target46.targetCharValueEscape;
        org.antlr.v4.codegen.target.Python2Target.python2Keywords = strArray56;
        python2Target1.targetCharValueEscape = strArray56;
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "_tset" + "'", str6, "_tset");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\"\"" + "'", str10, "\"\"");
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Python2" + "'", str18, "Python2");
        org.junit.Assert.assertNotNull(sTGroup19);
        org.junit.Assert.assertNotNull(strSet22);
        org.junit.Assert.assertNull(codeGenerator24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Python2" + "'", str25, "Python2");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "4.5.2.1" + "'", str26, "4.5.2.1");
        org.junit.Assert.assertNotNull(strSet29);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "hi!" + "'", str32, "hi!");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 64 + "'", int33 == 64);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "Python2" + "'", str35, "Python2");
        org.junit.Assert.assertNotNull(sTGroup36);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "\"_tsethi!\"Context" + "'", str39, "\"_tsethi!\"Context");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "\\\"_tset_tset_tsetContext\\\"" + "'", str42, "\\\"_tset_tset_tsetContext\\\"");
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertNotNull(strSet47);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "hi!" + "'", str50, "hi!");
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 64 + "'", int51 == 64);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "Python2" + "'", str53, "Python2");
        org.junit.Assert.assertNotNull(strSet55);
        org.junit.Assert.assertNotNull(strArray56);
    }

    @Test
    public void test1110() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1110");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        org.stringtemplate.v4.STGroup sTGroup2 = python2Target1.templates;
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = null;
        java.lang.String str6 = python2Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator3, "\"_tset\"", false);
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = python2Target1.gen;
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = null;
        python2Target1.gen = codeGenerator8;
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "_tset" + "'", str6, "_tset");
        org.junit.Assert.assertNull(codeGenerator7);
    }

    @Test
    public void test1111() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1111");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String[] strArray2 = python2Target1.targetCharValueEscape;
        java.lang.String str3 = python2Target1.getLanguage();
        java.lang.String str6 = python2Target1.getTargetStringLiteralFromString("_tset", true);
        java.lang.String str7 = python2Target1.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = null;
        python2Target1.gen = codeGenerator8;
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target11 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator10);
        java.util.Set<java.lang.String> strSet12 = python2Target11.badWords;
        java.lang.String str14 = python2Target11.encodeIntAsCharEscape(64);
        java.lang.String str15 = python2Target11.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator16 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target17 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator16);
        java.lang.String[] strArray18 = python2Target17.targetCharValueEscape;
        java.lang.String str19 = python2Target17.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup20 = python2Target17.getTemplates();
        python2Target11.templates = sTGroup20;
        java.util.Set<java.lang.String> strSet22 = python2Target11.getBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator23 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target24 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator23);
        java.lang.String[] strArray25 = python2Target24.targetCharValueEscape;
        org.stringtemplate.v4.STGroup sTGroup26 = python2Target24.loadTemplates();
        python2Target11.templates = sTGroup26;
        python2Target1.templates = sTGroup26;
        java.lang.String str30 = python2Target1.getImplicitRuleLabel("\"\\\"\\\\\\\"\\\\\\\\\\\\\\\"hi!\\\\\\\\\\\\\\\"\\\\\\\"\\\"\"");
        org.stringtemplate.v4.STGroup sTGroup31 = python2Target1.templates;
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Python2" + "'", str3, "Python2");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\"_tset\"" + "'", str6, "\"_tset\"");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "4.5.2.1" + "'", str7, "4.5.2.1");
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "@" + "'", str14, "@");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Python2" + "'", str15, "Python2");
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Python2" + "'", str19, "Python2");
        org.junit.Assert.assertNotNull(sTGroup20);
        org.junit.Assert.assertNotNull(strSet22);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertNotNull(sTGroup26);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "_\"\\\"\\\\\\\"\\\\\\\\\\\\\\\"hi!\\\\\\\\\\\\\\\"\\\\\\\"\\\"\"" + "'", str30, "_\"\\\"\\\\\\\"\\\\\\\\\\\\\\\"hi!\\\\\\\\\\\\\\\"\\\\\\\"\\\"\"");
        org.junit.Assert.assertNotNull(sTGroup31);
    }

    @Test
    public void test1112() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1112");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str4 = python2Target1.encodeIntAsCharEscape(64);
        java.lang.String str5 = python2Target1.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target7 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator6);
        java.lang.String[] strArray8 = python2Target7.targetCharValueEscape;
        java.lang.String str9 = python2Target7.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup10 = python2Target7.getTemplates();
        python2Target1.templates = sTGroup10;
        java.util.Set<java.lang.String> strSet12 = python2Target1.getBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator13 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target14 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator13);
        java.lang.String[] strArray15 = python2Target14.targetCharValueEscape;
        org.stringtemplate.v4.STGroup sTGroup16 = python2Target14.loadTemplates();
        python2Target1.templates = sTGroup16;
        java.lang.String str19 = python2Target1.getTargetStringLiteralFromString("\"\\\"\\\\\\\"hi!\\\\\\\"\\\"\"");
        org.antlr.v4.tool.Grammar grammar20 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str22 = python2Target1.getTokenTypeAsTargetLabel(grammar20, (int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "@" + "'", str4, "@");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Python2" + "'", str5, "Python2");
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Python2" + "'", str9, "Python2");
        org.junit.Assert.assertNotNull(sTGroup10);
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(sTGroup16);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "\"\\\"\\\\\\\"\\\\\\\\\\\\\\\"hi!\\\\\\\\\\\\\\\"\\\\\\\"\\\"\"" + "'", str19, "\"\\\"\\\\\\\"\\\\\\\\\\\\\\\"hi!\\\\\\\\\\\\\\\"\\\\\\\"\\\"\"");
    }

    @Test
    public void test1113() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1113");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String str3 = python2Target1.getImplicitSetLabel("");
        java.lang.String[] strArray4 = python2Target1.targetCharValueEscape;
        org.stringtemplate.v4.STGroup sTGroup5 = python2Target1.getTemplates();
        org.antlr.v4.tool.Rule rule6 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str7 = python2Target1.getRuleFunctionContextStructName(rule6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "_tset" + "'", str3, "_tset");
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertNotNull(sTGroup5);
    }

    @Test
    public void test1114() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1114");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str4 = python2Target1.encodeIntAsCharEscape(64);
        java.lang.String str6 = python2Target1.getAltLabelContextStructName("Python2");
        boolean boolean7 = python2Target1.supportsOverloadedMethods();
        java.lang.String str9 = python2Target1.encodeIntAsCharEscape(1);
        java.lang.String str11 = python2Target1.encodeIntAsCharEscape((int) ' ');
        org.antlr.v4.codegen.CodeGenerator codeGenerator12 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target13 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator12);
        java.util.Set<java.lang.String> strSet14 = python2Target13.badWords;
        java.lang.String str17 = python2Target13.getTargetStringLiteralFromString("hi!", false);
        java.lang.String str19 = python2Target13.getTargetStringLiteralFromString("\"hi!\"");
        java.util.Set<java.lang.String> strSet20 = python2Target13.getBadWords();
        python2Target1.badWords = strSet20;
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "@" + "'", str4, "@");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Python2Context" + "'", str6, "Python2Context");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\\1" + "'", str9, "\\1");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + " " + "'", str11, " ");
        org.junit.Assert.assertNotNull(strSet14);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "\"\\\"hi!\\\"\"" + "'", str19, "\"\\\"hi!\\\"\"");
        org.junit.Assert.assertNotNull(strSet20);
    }

    @Test
    public void test1115() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1115");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str4 = python2Target1.encodeIntAsCharEscape(64);
        java.lang.String str5 = python2Target1.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target7 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator6);
        java.lang.String[] strArray8 = python2Target7.targetCharValueEscape;
        java.lang.String str9 = python2Target7.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup10 = python2Target7.getTemplates();
        python2Target1.templates = sTGroup10;
        org.stringtemplate.v4.STGroup sTGroup12 = python2Target1.templates;
        java.util.Set<java.lang.String> strSet13 = python2Target1.badWords;
        java.util.Set<java.lang.String> strSet14 = python2Target1.getBadWords();
        boolean boolean15 = python2Target1.supportsOverloadedMethods();
        java.util.Set<java.lang.String> strSet16 = python2Target1.getBadWords();
        java.lang.String str18 = python2Target1.getListLabel("\\n");
        org.antlr.v4.codegen.CodeGenerator codeGenerator19 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target20 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator19);
        java.lang.String[] strArray21 = python2Target20.targetCharValueEscape;
        java.lang.String str22 = python2Target20.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup23 = python2Target20.templates;
        java.lang.String str25 = python2Target20.getListLabel("\\n");
        java.lang.String[] strArray26 = python2Target20.targetCharValueEscape;
        org.antlr.v4.tool.Grammar grammar27 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator28 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target29 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator28);
        java.lang.String[] strArray30 = python2Target29.targetCharValueEscape;
        java.lang.String str33 = python2Target29.getTargetStringLiteralFromString("_tset\\1", false);
        org.antlr.v4.tool.Grammar grammar34 = null;
        int[] intArray35 = new int[] {};
        java.lang.String[] strArray36 = python2Target29.getTokenTypesAsTargetLabels(grammar34, intArray35);
        java.lang.String[] strArray37 = python2Target20.getTokenTypesAsTargetLabels(grammar27, intArray35);
        org.antlr.v4.tool.Grammar grammar38 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator39 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target40 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator39);
        java.lang.String[] strArray41 = python2Target40.targetCharValueEscape;
        java.lang.String str44 = python2Target40.getTargetStringLiteralFromString("_tset\\1", false);
        org.antlr.v4.tool.Grammar grammar45 = null;
        int[] intArray46 = new int[] {};
        java.lang.String[] strArray47 = python2Target40.getTokenTypesAsTargetLabels(grammar45, intArray46);
        java.lang.String[] strArray48 = python2Target20.getTokenTypesAsTargetLabels(grammar38, intArray46);
        python2Target1.targetCharValueEscape = strArray48;
        org.antlr.v4.codegen.target.Python2Target.python2Keywords = strArray48;
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "@" + "'", str4, "@");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Python2" + "'", str5, "Python2");
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Python2" + "'", str9, "Python2");
        org.junit.Assert.assertNotNull(sTGroup10);
        org.junit.Assert.assertNotNull(sTGroup12);
        org.junit.Assert.assertNotNull(strSet13);
        org.junit.Assert.assertNotNull(strSet14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "\\n" + "'", str18, "\\n");
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "Python2" + "'", str22, "Python2");
        org.junit.Assert.assertNull(sTGroup23);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "\\n" + "'", str25, "\\n");
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "_tset\\\\1" + "'", str33, "_tset\\\\1");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[]");
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "_tset\\\\1" + "'", str44, "_tset\\\\1");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[]");
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertNotNull(strArray48);
    }

    @Test
    public void test1116() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1116");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        boolean boolean3 = python2Target1.wantsBaseVisitor();
        java.lang.String[] strArray4 = python2Target1.targetCharValueEscape;
        org.antlr.v4.codegen.CodeGenerator codeGenerator5 = python2Target1.getCodeGenerator();
        python2Target1.language = "\\\"_tset_tset_tsetContext\\\"\\\"Contex";
        org.antlr.v4.tool.ast.GrammarAST grammarAST8 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean9 = python2Target1.grammarSymbolCausesIssueInGeneratedCode(grammarAST8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertNull(codeGenerator5);
    }

    @Test
    public void test1117() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1117");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str4 = python2Target1.encodeIntAsCharEscape(64);
        java.lang.String str5 = python2Target1.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target7 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator6);
        java.lang.String[] strArray8 = python2Target7.targetCharValueEscape;
        java.lang.String str9 = python2Target7.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup10 = python2Target7.getTemplates();
        python2Target1.templates = sTGroup10;
        org.stringtemplate.v4.STGroup sTGroup12 = python2Target1.templates;
        java.util.Set<java.lang.String> strSet13 = python2Target1.badWords;
        java.util.Set<java.lang.String> strSet14 = python2Target1.getBadWords();
        boolean boolean15 = python2Target1.supportsOverloadedMethods();
        java.util.Set<java.lang.String> strSet16 = python2Target1.getBadWords();
        java.lang.String str18 = python2Target1.getImplicitSetLabel(" ");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str20 = python2Target1.getElementListName("\"\\\\\\\"\\\\\\\\\\\\\\\"4.5.2.1\\\\\\\\\\\\\\\"\\\\\\\"\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "@" + "'", str4, "@");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Python2" + "'", str5, "Python2");
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Python2" + "'", str9, "Python2");
        org.junit.Assert.assertNotNull(sTGroup10);
        org.junit.Assert.assertNotNull(sTGroup12);
        org.junit.Assert.assertNotNull(strSet13);
        org.junit.Assert.assertNotNull(strSet14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "_tset " + "'", str18, "_tset ");
    }

    @Test
    public void test1118() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1118");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String[] strArray2 = python2Target1.targetCharValueEscape;
        java.lang.String str3 = python2Target1.getLanguage();
        java.lang.String str6 = python2Target1.getTargetStringLiteralFromString("_tset", true);
        java.lang.String str7 = python2Target1.getVersion();
        org.antlr.v4.tool.Rule rule8 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str9 = python2Target1.getRuleFunctionContextStructName(rule8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Python2" + "'", str3, "Python2");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\"_tset\"" + "'", str6, "\"_tset\"");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "4.5.2.1" + "'", str7, "4.5.2.1");
    }

    @Test
    public void test1119() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1119");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        org.stringtemplate.v4.STGroup sTGroup2 = python2Target1.templates;
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = null;
        java.lang.String str6 = python2Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator3, "\"_tset\"", false);
        java.lang.String str8 = python2Target1.getAltLabelContextStructName("\"\"#\"\"");
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "_tset" + "'", str6, "_tset");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\"\"#\"\"Context" + "'", str8, "\"\"#\"\"Context");
    }

    @Test
    public void test1120() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1120");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str5 = python2Target1.getTargetStringLiteralFromString("hi!", false);
        java.lang.String str7 = python2Target1.getImplicitRuleLabel("@");
        python2Target1.language = "hi!";
        java.lang.String str11 = python2Target1.getListLabel("Python2");
        org.antlr.v4.tool.ast.GrammarAST grammarAST12 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean13 = python2Target1.visibleGrammarSymbolCausesIssueInGeneratedCode(grammarAST12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "_@" + "'", str7, "_@");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Python2" + "'", str11, "Python2");
    }

    @Test
    public void test1121() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1121");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str5 = python2Target1.getTargetStringLiteralFromString("hi!", false);
        int int6 = python2Target1.getInlineTestSetWordSize();
        boolean boolean7 = python2Target1.wantsBaseVisitor();
        java.lang.String str8 = python2Target1.getLanguage();
        boolean boolean9 = python2Target1.wantsBaseVisitor();
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = python2Target1.gen;
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 64 + "'", int6 == 64);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Python2" + "'", str8, "Python2");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(codeGenerator10);
    }

    @Test
    public void test1122() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1122");
        java.lang.String str1 = org.stringtemplate.v4.StringRenderer.escapeHTML("__\\\"\\\"hi!\\\"\\\"");
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "__\\\"\\\"hi!\\\"\\\"" + "'", str1, "__\\\"\\\"hi!\\\"\\\"");
    }

    @Test
    public void test1123() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1123");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String[] strArray2 = python2Target1.targetCharValueEscape;
        java.lang.String str5 = python2Target1.getTargetStringLiteralFromString("Python2", false);
        java.lang.String str6 = python2Target1.getVersion();
        java.lang.String str8 = python2Target1.encodeIntAsCharEscape((int) (short) 1);
        org.antlr.v4.codegen.CodeGenerator codeGenerator9 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target10 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator9);
        java.util.Set<java.lang.String> strSet11 = python2Target10.badWords;
        java.lang.String str13 = python2Target10.encodeIntAsCharEscape(64);
        java.lang.String str14 = python2Target10.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator15 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target16 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator15);
        java.lang.String[] strArray17 = python2Target16.targetCharValueEscape;
        java.lang.String str18 = python2Target16.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup19 = python2Target16.getTemplates();
        python2Target10.templates = sTGroup19;
        java.util.Set<java.lang.String> strSet21 = python2Target10.getBadWords();
        python2Target1.badWords = strSet21;
        java.lang.String str24 = python2Target1.getAltLabelContextStructName("hi!");
        java.lang.String str25 = python2Target1.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator26 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target27 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator26);
        java.lang.String[] strArray28 = python2Target27.targetCharValueEscape;
        java.lang.String str29 = python2Target27.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup30 = python2Target27.getTemplates();
        python2Target1.templates = sTGroup30;
        boolean boolean32 = python2Target1.wantsBaseListener();
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Python2" + "'", str5, "Python2");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "4.5.2.1" + "'", str6, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\\1" + "'", str8, "\\1");
        org.junit.Assert.assertNotNull(strSet11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "@" + "'", str13, "@");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Python2" + "'", str14, "Python2");
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Python2" + "'", str18, "Python2");
        org.junit.Assert.assertNotNull(sTGroup19);
        org.junit.Assert.assertNotNull(strSet21);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "Hi!Context" + "'", str24, "Hi!Context");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "4.5.2.1" + "'", str25, "4.5.2.1");
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "Python2" + "'", str29, "Python2");
        org.junit.Assert.assertNotNull(sTGroup30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
    }

    @Test
    public void test1124() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1124");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str4 = python2Target1.encodeIntAsCharEscape(64);
        java.lang.String str5 = python2Target1.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target7 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator6);
        java.lang.String[] strArray8 = python2Target7.targetCharValueEscape;
        java.lang.String str9 = python2Target7.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup10 = python2Target7.getTemplates();
        python2Target1.templates = sTGroup10;
        org.stringtemplate.v4.STGroup sTGroup12 = python2Target1.templates;
        java.util.Set<java.lang.String> strSet13 = python2Target1.badWords;
        boolean boolean14 = python2Target1.supportsOverloadedMethods();
        java.lang.String str16 = python2Target1.getListLabel("_@");
        org.antlr.v4.codegen.CodeGenerator codeGenerator17 = null;
        java.lang.String str20 = python2Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator17, "\"\"#\"\"", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator21 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target22 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator21);
        java.lang.String[] strArray23 = python2Target22.targetCharValueEscape;
        java.lang.String str24 = python2Target22.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup25 = python2Target22.loadTemplates();
        int int26 = python2Target22.getInlineTestSetWordSize();
        java.lang.String str27 = python2Target22.language;
        java.util.Set<java.lang.String> strSet28 = python2Target22.badWords;
        python2Target1.badWords = strSet28;
        org.antlr.v4.tool.ast.GrammarAST grammarAST30 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str31 = python2Target1.getLoopCounter(grammarAST30);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "@" + "'", str4, "@");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Python2" + "'", str5, "Python2");
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Python2" + "'", str9, "Python2");
        org.junit.Assert.assertNotNull(sTGroup10);
        org.junit.Assert.assertNotNull(sTGroup12);
        org.junit.Assert.assertNotNull(strSet13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "_@" + "'", str16, "_@");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "\"\\\"#\\\"\"" + "'", str20, "\"\\\"#\\\"\"");
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "Python2" + "'", str24, "Python2");
        org.junit.Assert.assertNotNull(sTGroup25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 64 + "'", int26 == 64);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "Python2" + "'", str27, "Python2");
        org.junit.Assert.assertNotNull(strSet28);
    }

    @Test
    public void test1125() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1125");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String[] strArray2 = python2Target1.targetCharValueEscape;
        java.lang.String str5 = python2Target1.getTargetStringLiteralFromString("Python2", false);
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = null;
        java.lang.String str9 = python2Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator6, "\"\\\"hi!\\\"\"", true);
        java.lang.String str10 = python2Target1.language;
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Python2" + "'", str5, "Python2");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\"\\\"hi!\\\"\"" + "'", str9, "\"\\\"hi!\\\"\"");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Python2" + "'", str10, "Python2");
    }

    @Test
    public void test1126() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1126");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str4 = python2Target1.encodeIntAsCharEscape(64);
        java.lang.String str5 = python2Target1.getLanguage();
        java.lang.String str6 = python2Target1.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup7 = python2Target1.getTemplates();
        java.lang.String str9 = python2Target1.getTargetStringLiteralFromString("\"tsetContex\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target11 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator10);
        java.util.Set<java.lang.String> strSet12 = python2Target11.badWords;
        python2Target1.badWords = strSet12;
        int int14 = python2Target1.getInlineTestSetWordSize();
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "@" + "'", str4, "@");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Python2" + "'", str5, "Python2");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Python2" + "'", str6, "Python2");
        org.junit.Assert.assertNotNull(sTGroup7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\"\\\"tsetContex\\\"\"" + "'", str9, "\"\\\"tsetContex\\\"\"");
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 64 + "'", int14 == 64);
    }

    @Test
    public void test1127() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1127");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String[] strArray2 = python2Target1.targetCharValueEscape;
        java.lang.String str3 = python2Target1.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup4 = python2Target1.getTemplates();
        org.antlr.v4.codegen.CodeGenerator codeGenerator5 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target6 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator5);
        java.util.Set<java.lang.String> strSet7 = python2Target6.badWords;
        python2Target1.badWords = strSet7;
        java.lang.String str10 = python2Target1.getAltLabelContextStructName("\"Hi!Context\"");
        java.lang.String str11 = python2Target1.getLanguage();
        org.antlr.v4.tool.Grammar grammar12 = null;
        org.stringtemplate.v4.ST sT13 = null;
        python2Target1.genRecognizerHeaderFile(grammar12, sT13, "#");
        org.stringtemplate.v4.STGroup sTGroup16 = python2Target1.loadTemplates();
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Python2" + "'", str3, "Python2");
        org.junit.Assert.assertNotNull(sTGroup4);
        org.junit.Assert.assertNotNull(strSet7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\"Hi!Context\"Context" + "'", str10, "\"Hi!Context\"Context");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Python2" + "'", str11, "Python2");
        org.junit.Assert.assertNotNull(sTGroup16);
    }

    @Test
    public void test1128() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1128");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String[] strArray2 = python2Target1.targetCharValueEscape;
        java.lang.String str3 = python2Target1.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup4 = python2Target1.templates;
        boolean boolean5 = python2Target1.templatesExist();
        java.lang.String str6 = python2Target1.getLanguage();
        python2Target1.addBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = null;
        java.lang.String str11 = python2Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator8, "\\1", false);
        org.antlr.v4.codegen.CodeGenerator codeGenerator12 = null;
        python2Target1.gen = codeGenerator12;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str15 = python2Target1.getElementName("_tset\\\\\\\\1");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Python2" + "'", str3, "Python2");
        org.junit.Assert.assertNull(sTGroup4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Python2" + "'", str6, "Python2");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
    }

    @Test
    public void test1129() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1129");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String[] strArray2 = python2Target1.targetCharValueEscape;
        org.stringtemplate.v4.STGroup sTGroup3 = python2Target1.loadTemplates();
        org.antlr.v4.codegen.CodeGenerator codeGenerator4 = null;
        python2Target1.gen = codeGenerator4;
        org.antlr.v4.tool.ast.GrammarAST grammarAST6 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str7 = python2Target1.getLoopLabel(grammarAST6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertNotNull(sTGroup3);
    }

    @Test
    public void test1130() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1130");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str5 = python2Target1.getTargetStringLiteralFromString("hi!", false);
        int int6 = python2Target1.getInlineTestSetWordSize();
        java.lang.String str8 = python2Target1.getTargetStringLiteralFromString("Hi!Context");
        java.util.Set<java.lang.String> strSet9 = python2Target1.badWords;
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = null;
        java.lang.String str13 = python2Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator10, "hi!", false);
        java.util.Set<java.lang.String> strSet14 = python2Target1.badWords;
        java.util.Set<java.lang.String> strSet15 = python2Target1.getBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator16 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target17 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator16);
        java.lang.String[] strArray18 = python2Target17.targetCharValueEscape;
        java.lang.String str21 = python2Target17.getTargetStringLiteralFromString("Python2", false);
        java.lang.String[] strArray22 = org.antlr.v4.codegen.target.Python2Target.python2Keywords;
        python2Target17.targetCharValueEscape = strArray22;
        java.util.Set<java.lang.String> strSet24 = python2Target17.getBadWords();
        python2Target1.badWords = strSet24;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str27 = python2Target1.getImplicitTokenLabel("_tset\"#\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 64 + "'", int6 == 64);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\"Hi!Context\"" + "'", str8, "\"Hi!Context\"");
        org.junit.Assert.assertNotNull(strSet9);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "i" + "'", str13, "i");
        org.junit.Assert.assertNotNull(strSet14);
        org.junit.Assert.assertNotNull(strSet15);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Python2" + "'", str21, "Python2");
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertNotNull(strSet24);
    }

    @Test
    public void test1131() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1131");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str4 = python2Target1.encodeIntAsCharEscape(64);
        java.lang.String str5 = python2Target1.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target7 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator6);
        java.lang.String[] strArray8 = python2Target7.targetCharValueEscape;
        java.lang.String str9 = python2Target7.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup10 = python2Target7.getTemplates();
        python2Target1.templates = sTGroup10;
        java.util.Set<java.lang.String> strSet12 = python2Target1.getBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator13 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target14 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator13);
        java.lang.String[] strArray15 = python2Target14.targetCharValueEscape;
        org.stringtemplate.v4.STGroup sTGroup16 = python2Target14.loadTemplates();
        python2Target1.templates = sTGroup16;
        java.lang.Class<?> wildcardClass18 = python2Target1.getClass();
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "@" + "'", str4, "@");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Python2" + "'", str5, "Python2");
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Python2" + "'", str9, "Python2");
        org.junit.Assert.assertNotNull(sTGroup10);
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(sTGroup16);
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test1132() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1132");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str4 = python2Target1.encodeIntAsCharEscape(64);
        java.lang.String str5 = python2Target1.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target7 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator6);
        java.lang.String[] strArray8 = python2Target7.targetCharValueEscape;
        java.lang.String str9 = python2Target7.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup10 = python2Target7.getTemplates();
        python2Target1.templates = sTGroup10;
        org.stringtemplate.v4.STGroup sTGroup12 = python2Target1.templates;
        java.util.Set<java.lang.String> strSet13 = python2Target1.badWords;
        java.util.Set<java.lang.String> strSet14 = python2Target1.getBadWords();
        boolean boolean15 = python2Target1.supportsOverloadedMethods();
        java.util.Set<java.lang.String> strSet16 = python2Target1.getBadWords();
        python2Target1.addBadWords();
        org.stringtemplate.v4.STGroup sTGroup18 = python2Target1.loadTemplates();
        boolean boolean19 = python2Target1.templatesExist();
        org.antlr.v4.tool.ast.GrammarAST grammarAST20 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean21 = python2Target1.visibleGrammarSymbolCausesIssueInGeneratedCode(grammarAST20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "@" + "'", str4, "@");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Python2" + "'", str5, "Python2");
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Python2" + "'", str9, "Python2");
        org.junit.Assert.assertNotNull(sTGroup10);
        org.junit.Assert.assertNotNull(sTGroup12);
        org.junit.Assert.assertNotNull(strSet13);
        org.junit.Assert.assertNotNull(strSet14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertNotNull(sTGroup18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
    }

    @Test
    public void test1133() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1133");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str5 = python2Target1.getTargetStringLiteralFromString("4.5.2.1", true);
        boolean boolean6 = python2Target1.templatesExist();
        java.lang.String str7 = python2Target1.getVersion();
        java.lang.String str9 = python2Target1.getTargetStringLiteralFromString("");
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "\"4.5.2.1\"" + "'", str5, "\"4.5.2.1\"");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "4.5.2.1" + "'", str7, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\"\"" + "'", str9, "\"\"");
    }

    @Test
    public void test1134() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1134");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str4 = python2Target1.encodeIntAsCharEscape(64);
        java.lang.String str6 = python2Target1.getAltLabelContextStructName("Python2");
        java.util.Set<java.lang.String> strSet7 = python2Target1.badWords;
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "@" + "'", str4, "@");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Python2Context" + "'", str6, "Python2Context");
        org.junit.Assert.assertNotNull(strSet7);
    }

    @Test
    public void test1135() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1135");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str5 = python2Target1.getTargetStringLiteralFromString("hi!", false);
        java.lang.String str7 = python2Target1.getImplicitRuleLabel("@");
        python2Target1.language = "hi!";
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target11 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator10);
        java.util.Set<java.lang.String> strSet12 = python2Target11.badWords;
        java.lang.String str14 = python2Target11.encodeIntAsCharEscape(64);
        java.lang.String str15 = python2Target11.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator16 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target17 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator16);
        java.lang.String[] strArray18 = python2Target17.targetCharValueEscape;
        java.lang.String str19 = python2Target17.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup20 = python2Target17.getTemplates();
        python2Target11.templates = sTGroup20;
        org.antlr.v4.codegen.CodeGenerator codeGenerator22 = python2Target11.getCodeGenerator();
        org.stringtemplate.v4.STGroup sTGroup23 = python2Target11.loadTemplates();
        python2Target1.templates = sTGroup23;
        java.lang.String str26 = python2Target1.getImplicitSetLabel("hi!");
        java.lang.String str28 = python2Target1.getImplicitSetLabel("\"\\\"_tset_tset_tsetContext\\\"\"Context");
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "_@" + "'", str7, "_@");
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "@" + "'", str14, "@");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Python2" + "'", str15, "Python2");
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Python2" + "'", str19, "Python2");
        org.junit.Assert.assertNotNull(sTGroup20);
        org.junit.Assert.assertNull(codeGenerator22);
        org.junit.Assert.assertNotNull(sTGroup23);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "_tsethi!" + "'", str26, "_tsethi!");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "_tset\"\\\"_tset_tset_tsetContext\\\"\"Context" + "'", str28, "_tset\"\\\"_tset_tset_tsetContext\\\"\"Context");
    }

    @Test
    public void test1136() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1136");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String[] strArray2 = python2Target1.targetCharValueEscape;
        java.lang.String str5 = python2Target1.getTargetStringLiteralFromString("_tset\\1", false);
        java.util.Set<java.lang.String> strSet6 = python2Target1.badWords;
        java.lang.String str7 = python2Target1.getLanguage();
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "_tset\\\\1" + "'", str5, "_tset\\\\1");
        org.junit.Assert.assertNotNull(strSet6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Python2" + "'", str7, "Python2");
    }

    @Test
    public void test1137() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1137");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str5 = python2Target1.getTargetStringLiteralFromString("hi!", false);
        java.lang.String str7 = python2Target1.getImplicitRuleLabel("@");
        python2Target1.language = "hi!";
        java.util.Set<java.lang.String> strSet10 = python2Target1.getBadWords();
        org.stringtemplate.v4.STGroup sTGroup11 = python2Target1.templates;
        python2Target1.addBadWords();
        org.antlr.v4.codegen.model.RuleFunction ruleFunction13 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str14 = python2Target1.getRuleFunctionContextStructName(ruleFunction13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "_@" + "'", str7, "_@");
        org.junit.Assert.assertNotNull(strSet10);
        org.junit.Assert.assertNotNull(sTGroup11);
    }

    @Test
    public void test1138() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1138");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        org.stringtemplate.v4.STGroup sTGroup2 = python2Target1.templates;
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = null;
        java.lang.String str6 = python2Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator3, "_@", true);
        java.lang.String str8 = python2Target1.getImplicitRuleLabel("\"\\\"hi!\\\"\"");
        java.lang.String str9 = python2Target1.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup10 = python2Target1.loadTemplates();
        boolean boolean11 = python2Target1.supportsOverloadedMethods();
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\"\"" + "'", str6, "\"\"");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "_\"\\\"hi!\\\"\"" + "'", str8, "_\"\\\"hi!\\\"\"");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Python2" + "'", str9, "Python2");
        org.junit.Assert.assertNotNull(sTGroup10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test1139() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1139");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str4 = python2Target1.encodeIntAsCharEscape(64);
        java.lang.String str5 = python2Target1.getLanguage();
        java.lang.String str8 = python2Target1.getTargetStringLiteralFromString("_@", false);
        java.lang.String str10 = python2Target1.encodeIntAsCharEscape((int) (byte) 100);
        java.lang.String str12 = python2Target1.getAltLabelContextStructName("\"_tset\"");
        boolean boolean13 = python2Target1.supportsOverloadedMethods();
        org.antlr.v4.tool.Grammar grammar14 = null;
        int[] intArray20 = new int[] { 1, (short) 100, '#', 64, (byte) 0 };
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String[] strArray21 = python2Target1.getTokenTypesAsTargetLabels(grammar14, intArray20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "@" + "'", str4, "@");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Python2" + "'", str5, "Python2");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "_@" + "'", str8, "_@");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "d" + "'", str10, "d");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "\"_tset\"Context" + "'", str12, "\"_tset\"Context");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[1, 100, 35, 64, 0]");
    }

    @Test
    public void test1140() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1140");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String[] strArray2 = python2Target1.targetCharValueEscape;
        java.lang.String str3 = python2Target1.getLanguage();
        java.lang.String str6 = python2Target1.getTargetStringLiteralFromString("_tset", true);
        java.util.Set<java.lang.String> strSet7 = python2Target1.badWords;
        boolean boolean8 = python2Target1.wantsBaseVisitor();
        org.antlr.v4.codegen.CodeGenerator codeGenerator9 = null;
        python2Target1.gen = codeGenerator9;
        java.lang.String str12 = python2Target1.getImplicitRuleLabel("4.5.2.1");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str14 = python2Target1.getElementName("_tset_tset\"\\\"\\\\\\\"hi!\\\\\\\"\\\"\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Python2" + "'", str3, "Python2");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\"_tset\"" + "'", str6, "\"_tset\"");
        org.junit.Assert.assertNotNull(strSet7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "_4.5.2.1" + "'", str12, "_4.5.2.1");
    }

    @Test
    public void test1141() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1141");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str4 = python2Target1.encodeIntAsCharEscape(64);
        java.lang.String str5 = python2Target1.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target7 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator6);
        java.lang.String[] strArray8 = python2Target7.targetCharValueEscape;
        java.lang.String str9 = python2Target7.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup10 = python2Target7.getTemplates();
        python2Target1.templates = sTGroup10;
        org.stringtemplate.v4.STGroup sTGroup12 = python2Target1.templates;
        java.util.Set<java.lang.String> strSet13 = python2Target1.badWords;
        boolean boolean14 = python2Target1.supportsOverloadedMethods();
        java.lang.String str16 = python2Target1.getListLabel("_@");
        org.antlr.v4.codegen.CodeGenerator codeGenerator17 = null;
        java.lang.String str20 = python2Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator17, "\"\"#\"\"", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator21 = null;
        java.lang.String str24 = python2Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator21, "\"\\\"\\\\\\\"_tset_tset_tsetContext\\\\\\\"\\\"Context\"", false);
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "@" + "'", str4, "@");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Python2" + "'", str5, "Python2");
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Python2" + "'", str9, "Python2");
        org.junit.Assert.assertNotNull(sTGroup10);
        org.junit.Assert.assertNotNull(sTGroup12);
        org.junit.Assert.assertNotNull(strSet13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "_@" + "'", str16, "_@");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "\"\\\"#\\\"\"" + "'", str20, "\"\\\"#\\\"\"");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "\\\"\\\\\\\"_tset_tset_tsetContext\\\\\\\"\\\"Context" + "'", str24, "\\\"\\\\\\\"_tset_tset_tsetContext\\\\\\\"\\\"Context");
    }

    @Test
    public void test1142() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1142");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String[] strArray2 = python2Target1.targetCharValueEscape;
        java.lang.String str5 = python2Target1.getTargetStringLiteralFromString("Python2", false);
        java.lang.String str6 = python2Target1.getVersion();
        java.lang.String str8 = python2Target1.encodeIntAsCharEscape((int) (short) 1);
        int int9 = python2Target1.getSerializedATNSegmentLimit();
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target11 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator10);
        java.lang.String[] strArray12 = python2Target11.targetCharValueEscape;
        java.lang.String str13 = python2Target11.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup14 = python2Target11.templates;
        java.lang.String str16 = python2Target11.getListLabel("\\n");
        java.lang.String[] strArray17 = python2Target11.targetCharValueEscape;
        python2Target1.targetCharValueEscape = strArray17;
        org.antlr.v4.codegen.CodeGenerator codeGenerator19 = null;
        python2Target1.gen = codeGenerator19;
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Python2" + "'", str5, "Python2");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "4.5.2.1" + "'", str6, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\\1" + "'", str8, "\\1");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 2147483647 + "'", int9 == 2147483647);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Python2" + "'", str13, "Python2");
        org.junit.Assert.assertNull(sTGroup14);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "\\n" + "'", str16, "\\n");
        org.junit.Assert.assertNotNull(strArray17);
    }

    @Test
    public void test1143() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1143");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String[] strArray2 = python2Target1.targetCharValueEscape;
        java.lang.String str3 = python2Target1.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup4 = python2Target1.getTemplates();
        org.antlr.v4.codegen.CodeGenerator codeGenerator5 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target6 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator5);
        java.util.Set<java.lang.String> strSet7 = python2Target6.badWords;
        python2Target1.badWords = strSet7;
        org.antlr.v4.codegen.CodeGenerator codeGenerator9 = python2Target1.gen;
        java.lang.String str10 = python2Target1.getLanguage();
        java.lang.String str11 = python2Target1.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator12 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target13 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator12);
        java.util.Set<java.lang.String> strSet14 = python2Target13.badWords;
        java.lang.String str17 = python2Target13.getTargetStringLiteralFromString("hi!", false);
        int int18 = python2Target13.getInlineTestSetWordSize();
        boolean boolean19 = python2Target13.wantsBaseVisitor();
        java.lang.String str20 = python2Target13.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup21 = python2Target13.loadTemplates();
        python2Target1.templates = sTGroup21;
        boolean boolean23 = python2Target1.supportsOverloadedMethods();
        java.lang.String str24 = python2Target1.getVersion();
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Python2" + "'", str3, "Python2");
        org.junit.Assert.assertNotNull(sTGroup4);
        org.junit.Assert.assertNotNull(strSet7);
        org.junit.Assert.assertNull(codeGenerator9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Python2" + "'", str10, "Python2");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "4.5.2.1" + "'", str11, "4.5.2.1");
        org.junit.Assert.assertNotNull(strSet14);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 64 + "'", int18 == 64);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "Python2" + "'", str20, "Python2");
        org.junit.Assert.assertNotNull(sTGroup21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "4.5.2.1" + "'", str24, "4.5.2.1");
    }

    @Test
    public void test1144() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1144");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String[] strArray2 = python2Target1.targetCharValueEscape;
        java.lang.String str3 = python2Target1.getLanguage();
        java.lang.String str6 = python2Target1.getTargetStringLiteralFromString("_tset", true);
        java.lang.String str8 = python2Target1.getTargetStringLiteralFromString("\"4.5.2.1\"");
        java.lang.String[] strArray9 = python2Target1.targetCharValueEscape;
        int int10 = python2Target1.getSerializedATNSegmentLimit();
        org.stringtemplate.v4.STGroup sTGroup11 = python2Target1.getTemplates();
        boolean boolean12 = python2Target1.wantsBaseVisitor();
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Python2" + "'", str3, "Python2");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\"_tset\"" + "'", str6, "\"_tset\"");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\"\\\"4.5.2.1\\\"\"" + "'", str8, "\"\\\"4.5.2.1\\\"\"");
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 2147483647 + "'", int10 == 2147483647);
        org.junit.Assert.assertNotNull(sTGroup11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test1145() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1145");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str4 = python2Target1.encodeIntAsCharEscape(64);
        java.lang.String str5 = python2Target1.getLanguage();
        java.lang.String str6 = python2Target1.getLanguage();
        java.lang.String str8 = python2Target1.getListLabel("\"tsetContex\"");
        java.lang.String[] strArray9 = python2Target1.targetCharValueEscape;
        org.antlr.v4.tool.ast.GrammarAST grammarAST10 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str11 = python2Target1.getLoopLabel(grammarAST10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "@" + "'", str4, "@");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Python2" + "'", str5, "Python2");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Python2" + "'", str6, "Python2");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\"tsetContex\"" + "'", str8, "\"tsetContex\"");
        org.junit.Assert.assertNotNull(strArray9);
    }

    @Test
    public void test1146() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1146");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String[] strArray2 = python2Target1.targetCharValueEscape;
        java.lang.String str3 = python2Target1.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup4 = python2Target1.templates;
        boolean boolean5 = python2Target1.templatesExist();
        java.lang.String str6 = python2Target1.getLanguage();
        python2Target1.addBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = null;
        java.lang.String str11 = python2Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator8, "\\1", false);
        org.antlr.v4.tool.Grammar grammar12 = null;
        org.stringtemplate.v4.ST sT13 = null;
        // The following exception was thrown during execution in test generation
        try {
            python2Target1.genListenerFile(grammar12, sT13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Python2" + "'", str3, "Python2");
        org.junit.Assert.assertNull(sTGroup4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Python2" + "'", str6, "Python2");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
    }

    @Test
    public void test1147() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1147");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str4 = python2Target1.encodeIntAsCharEscape(64);
        java.lang.String str5 = python2Target1.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target7 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator6);
        java.lang.String[] strArray8 = python2Target7.targetCharValueEscape;
        java.lang.String str9 = python2Target7.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup10 = python2Target7.getTemplates();
        python2Target1.templates = sTGroup10;
        org.antlr.v4.tool.Grammar grammar12 = null;
        org.stringtemplate.v4.ST sT13 = null;
        python2Target1.genRecognizerHeaderFile(grammar12, sT13, "\"_tset\"");
        java.util.Set<java.lang.String> strSet16 = python2Target1.getBadWords();
        org.stringtemplate.v4.STGroup sTGroup17 = python2Target1.loadTemplates();
        java.lang.String str19 = python2Target1.getAltLabelContextStructName("_tset\"\\\"\\\\\\\"hi!\\\\\\\"\\\"\"");
        org.stringtemplate.v4.STGroup sTGroup20 = python2Target1.templates;
        org.antlr.v4.codegen.CodeGenerator codeGenerator21 = python2Target1.gen;
        org.stringtemplate.v4.STGroup sTGroup22 = python2Target1.getTemplates();
        org.antlr.v4.tool.Grammar grammar23 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator24 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target25 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator24);
        java.lang.String str27 = python2Target25.getImplicitSetLabel("");
        org.antlr.v4.codegen.CodeGenerator codeGenerator28 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target29 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator28);
        java.util.Set<java.lang.String> strSet30 = python2Target29.badWords;
        java.lang.String str32 = python2Target29.encodeIntAsCharEscape(64);
        java.lang.String str33 = python2Target29.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator34 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target35 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator34);
        java.lang.String[] strArray36 = python2Target35.targetCharValueEscape;
        java.lang.String str37 = python2Target35.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup38 = python2Target35.getTemplates();
        python2Target29.templates = sTGroup38;
        python2Target25.templates = sTGroup38;
        java.lang.String str42 = python2Target25.getAltLabelContextStructName("_tset");
        org.antlr.v4.codegen.CodeGenerator codeGenerator43 = null;
        python2Target25.gen = codeGenerator43;
        python2Target25.language = "@";
        java.lang.String str48 = python2Target25.encodeIntAsCharEscape((int) (short) 0);
        org.antlr.v4.tool.Grammar grammar49 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator50 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target51 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator50);
        java.util.Set<java.lang.String> strSet52 = python2Target51.badWords;
        java.lang.String str54 = python2Target51.encodeIntAsCharEscape(64);
        java.lang.String str55 = python2Target51.getLanguage();
        int int56 = python2Target51.getInlineTestSetWordSize();
        java.lang.String str58 = python2Target51.getImplicitSetLabel("_tset\\\\1");
        org.antlr.v4.tool.Grammar grammar59 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator60 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target61 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator60);
        java.lang.String[] strArray62 = python2Target61.targetCharValueEscape;
        java.lang.String str65 = python2Target61.getTargetStringLiteralFromString("_tset\\1", false);
        org.antlr.v4.tool.Grammar grammar66 = null;
        int[] intArray67 = new int[] {};
        java.lang.String[] strArray68 = python2Target61.getTokenTypesAsTargetLabels(grammar66, intArray67);
        java.lang.String[] strArray69 = python2Target51.getTokenTypesAsTargetLabels(grammar59, intArray67);
        java.lang.String[] strArray70 = python2Target25.getTokenTypesAsTargetLabels(grammar49, intArray67);
        java.lang.String[] strArray71 = python2Target1.getTokenTypesAsTargetLabels(grammar23, intArray67);
        org.antlr.v4.tool.Grammar grammar72 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str74 = python2Target1.getTokenTypeAsTargetLabel(grammar72, 64);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "@" + "'", str4, "@");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Python2" + "'", str5, "Python2");
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Python2" + "'", str9, "Python2");
        org.junit.Assert.assertNotNull(sTGroup10);
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertNotNull(sTGroup17);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "_tset\"\\\"\\\\\\\"hi!\\\\\\\"\\\"\"Context" + "'", str19, "_tset\"\\\"\\\\\\\"hi!\\\\\\\"\\\"\"Context");
        org.junit.Assert.assertNotNull(sTGroup20);
        org.junit.Assert.assertNull(codeGenerator21);
        org.junit.Assert.assertNotNull(sTGroup22);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "_tset" + "'", str27, "_tset");
        org.junit.Assert.assertNotNull(strSet30);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "@" + "'", str32, "@");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "Python2" + "'", str33, "Python2");
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "Python2" + "'", str37, "Python2");
        org.junit.Assert.assertNotNull(sTGroup38);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "_tsetContext" + "'", str42, "_tsetContext");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "\\0" + "'", str48, "\\0");
        org.junit.Assert.assertNotNull(strSet52);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "@" + "'", str54, "@");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "Python2" + "'", str55, "Python2");
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 64 + "'", int56 == 64);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "_tset_tset\\\\1" + "'", str58, "_tset_tset\\\\1");
        org.junit.Assert.assertNotNull(strArray62);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "_tset\\\\1" + "'", str65, "_tset\\\\1");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[]");
        org.junit.Assert.assertNotNull(strArray68);
        org.junit.Assert.assertNotNull(strArray69);
        org.junit.Assert.assertNotNull(strArray70);
        org.junit.Assert.assertNotNull(strArray71);
    }

    @Test
    public void test1148() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1148");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str4 = python2Target1.encodeIntAsCharEscape(64);
        java.lang.String str6 = python2Target1.getAltLabelContextStructName("Python2");
        java.util.Set<java.lang.String> strSet7 = python2Target1.getBadWords();
        org.antlr.v4.tool.Rule rule8 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str9 = python2Target1.getRuleFunctionContextStructName(rule8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "@" + "'", str4, "@");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Python2Context" + "'", str6, "Python2Context");
        org.junit.Assert.assertNotNull(strSet7);
    }

    @Test
    public void test1149() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1149");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String[] strArray2 = python2Target1.targetCharValueEscape;
        java.lang.String str5 = python2Target1.getTargetStringLiteralFromString("Python2", false);
        java.lang.String str6 = python2Target1.getVersion();
        java.lang.String str8 = python2Target1.encodeIntAsCharEscape((int) (short) 1);
        org.antlr.v4.codegen.CodeGenerator codeGenerator9 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target10 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator9);
        java.util.Set<java.lang.String> strSet11 = python2Target10.badWords;
        java.lang.String str13 = python2Target10.encodeIntAsCharEscape(64);
        java.lang.String str14 = python2Target10.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator15 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target16 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator15);
        java.lang.String[] strArray17 = python2Target16.targetCharValueEscape;
        java.lang.String str18 = python2Target16.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup19 = python2Target16.getTemplates();
        python2Target10.templates = sTGroup19;
        java.util.Set<java.lang.String> strSet21 = python2Target10.getBadWords();
        python2Target1.badWords = strSet21;
        java.lang.String str24 = python2Target1.getAltLabelContextStructName("hi!");
        java.lang.String str25 = python2Target1.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator26 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target27 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator26);
        java.lang.String[] strArray28 = python2Target27.targetCharValueEscape;
        java.lang.String str29 = python2Target27.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup30 = python2Target27.getTemplates();
        python2Target1.templates = sTGroup30;
        java.lang.String[] strArray33 = new java.lang.String[] { "Python2" };
        org.antlr.v4.codegen.target.Python2Target.python2Keywords = strArray33;
        org.antlr.v4.codegen.target.Python2Target.python2Keywords = strArray33;
        python2Target1.targetCharValueEscape = strArray33;
        org.antlr.v4.codegen.CodeGenerator codeGenerator37 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target38 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator37);
        java.lang.String[] strArray39 = python2Target38.targetCharValueEscape;
        java.lang.String str40 = python2Target38.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup41 = python2Target38.getTemplates();
        org.antlr.v4.codegen.CodeGenerator codeGenerator42 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target43 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator42);
        java.util.Set<java.lang.String> strSet44 = python2Target43.badWords;
        python2Target38.badWords = strSet44;
        org.antlr.v4.codegen.CodeGenerator codeGenerator46 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target47 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator46);
        java.util.Set<java.lang.String> strSet48 = python2Target47.badWords;
        java.lang.String str51 = python2Target47.getTargetStringLiteralFromString("hi!", false);
        java.lang.String str53 = python2Target47.getImplicitRuleLabel("@");
        python2Target47.language = "hi!";
        org.antlr.v4.codegen.CodeGenerator codeGenerator56 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target57 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator56);
        java.util.Set<java.lang.String> strSet58 = python2Target57.badWords;
        java.lang.String str60 = python2Target57.encodeIntAsCharEscape(64);
        java.lang.String str61 = python2Target57.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator62 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target63 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator62);
        java.lang.String[] strArray64 = python2Target63.targetCharValueEscape;
        java.lang.String str65 = python2Target63.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup66 = python2Target63.getTemplates();
        python2Target57.templates = sTGroup66;
        org.antlr.v4.codegen.CodeGenerator codeGenerator68 = python2Target57.getCodeGenerator();
        org.stringtemplate.v4.STGroup sTGroup69 = python2Target57.loadTemplates();
        python2Target47.templates = sTGroup69;
        python2Target38.templates = sTGroup69;
        org.antlr.v4.codegen.CodeGenerator codeGenerator72 = null;
        java.lang.String str75 = python2Target38.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator72, "@", false);
        org.stringtemplate.v4.STGroup sTGroup76 = python2Target38.loadTemplates();
        python2Target1.templates = sTGroup76;
        java.lang.String str79 = python2Target1.getAltLabelContextStructName("_tset_tset\"\\\"\\\\\\\"hi!\\\\\\\"\\\"\"");
        org.antlr.v4.tool.Rule rule80 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str81 = python2Target1.getRuleFunctionContextStructName(rule80);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Python2" + "'", str5, "Python2");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "4.5.2.1" + "'", str6, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\\1" + "'", str8, "\\1");
        org.junit.Assert.assertNotNull(strSet11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "@" + "'", str13, "@");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Python2" + "'", str14, "Python2");
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Python2" + "'", str18, "Python2");
        org.junit.Assert.assertNotNull(sTGroup19);
        org.junit.Assert.assertNotNull(strSet21);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "Hi!Context" + "'", str24, "Hi!Context");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "4.5.2.1" + "'", str25, "4.5.2.1");
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "Python2" + "'", str29, "Python2");
        org.junit.Assert.assertNotNull(sTGroup30);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "Python2" + "'", str40, "Python2");
        org.junit.Assert.assertNotNull(sTGroup41);
        org.junit.Assert.assertNotNull(strSet44);
        org.junit.Assert.assertNotNull(strSet48);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "hi!" + "'", str51, "hi!");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "_@" + "'", str53, "_@");
        org.junit.Assert.assertNotNull(strSet58);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "@" + "'", str60, "@");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "Python2" + "'", str61, "Python2");
        org.junit.Assert.assertNotNull(strArray64);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "Python2" + "'", str65, "Python2");
        org.junit.Assert.assertNotNull(sTGroup66);
        org.junit.Assert.assertNull(codeGenerator68);
        org.junit.Assert.assertNotNull(sTGroup69);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "" + "'", str75, "");
        org.junit.Assert.assertNotNull(sTGroup76);
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "_tset_tset\"\\\"\\\\\\\"hi!\\\\\\\"\\\"\"Context" + "'", str79, "_tset_tset\"\\\"\\\\\\\"hi!\\\\\\\"\\\"\"Context");
    }

    @Test
    public void test1150() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1150");
        org.antlr.v4.codegen.target.Python2Target python2Target0 = new org.antlr.v4.codegen.target.Python2Target();
        org.stringtemplate.v4.STGroup sTGroup1 = python2Target0.templates;
        java.lang.String[] strArray2 = python2Target0.targetCharValueEscape;
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target4 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator3);
        java.lang.String[] strArray5 = python2Target4.targetCharValueEscape;
        java.lang.String str8 = python2Target4.getTargetStringLiteralFromString("Python2", false);
        java.lang.String[] strArray9 = org.antlr.v4.codegen.target.Python2Target.python2Keywords;
        python2Target4.targetCharValueEscape = strArray9;
        python2Target0.targetCharValueEscape = strArray9;
        python2Target0.addBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator13 = python2Target0.gen;
        org.antlr.v4.tool.Grammar grammar14 = null;
        org.stringtemplate.v4.ST sT15 = null;
        python2Target0.genRecognizerHeaderFile(grammar14, sT15, "_tset\"Hi!Context\"Context");
        java.lang.String[] strArray18 = python2Target0.targetCharValueEscape;
        org.junit.Assert.assertNull(sTGroup1);
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Python2" + "'", str8, "Python2");
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertNull(codeGenerator13);
        org.junit.Assert.assertNotNull(strArray18);
    }

    @Test
    public void test1151() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1151");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str5 = python2Target1.getTargetStringLiteralFromString("hi!", false);
        java.lang.String str7 = python2Target1.getImplicitRuleLabel("@");
        python2Target1.language = "hi!";
        java.util.Set<java.lang.String> strSet10 = python2Target1.getBadWords();
        java.lang.String str12 = python2Target1.getImplicitRuleLabel("__tsetContext");
        // The following exception was thrown during execution in test generation
        try {
            org.stringtemplate.v4.STGroup sTGroup13 = python2Target1.loadTemplates();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "_@" + "'", str7, "_@");
        org.junit.Assert.assertNotNull(strSet10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "___tsetContext" + "'", str12, "___tsetContext");
    }

    @Test
    public void test1152() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1152");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str4 = python2Target1.encodeIntAsCharEscape(64);
        java.lang.String str5 = python2Target1.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target7 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator6);
        java.lang.String[] strArray8 = python2Target7.targetCharValueEscape;
        java.lang.String str9 = python2Target7.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup10 = python2Target7.getTemplates();
        python2Target1.templates = sTGroup10;
        org.antlr.v4.tool.Grammar grammar12 = null;
        org.stringtemplate.v4.ST sT13 = null;
        python2Target1.genRecognizerHeaderFile(grammar12, sT13, "\"_tset\"");
        java.util.Set<java.lang.String> strSet16 = python2Target1.getBadWords();
        org.stringtemplate.v4.STGroup sTGroup17 = python2Target1.loadTemplates();
        java.lang.String str19 = python2Target1.getAltLabelContextStructName("_tset\"\\\"\\\\\\\"hi!\\\\\\\"\\\"\"");
        org.stringtemplate.v4.STGroup sTGroup20 = python2Target1.templates;
        org.antlr.v4.codegen.CodeGenerator codeGenerator21 = python2Target1.gen;
        python2Target1.addBadWords();
        int int23 = python2Target1.getInlineTestSetWordSize();
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "@" + "'", str4, "@");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Python2" + "'", str5, "Python2");
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Python2" + "'", str9, "Python2");
        org.junit.Assert.assertNotNull(sTGroup10);
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertNotNull(sTGroup17);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "_tset\"\\\"\\\\\\\"hi!\\\\\\\"\\\"\"Context" + "'", str19, "_tset\"\\\"\\\\\\\"hi!\\\\\\\"\\\"\"Context");
        org.junit.Assert.assertNotNull(sTGroup20);
        org.junit.Assert.assertNull(codeGenerator21);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 64 + "'", int23 == 64);
    }

    @Test
    public void test1153() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1153");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String[] strArray2 = python2Target1.targetCharValueEscape;
        org.stringtemplate.v4.STGroup sTGroup3 = python2Target1.loadTemplates();
        org.antlr.v4.codegen.CodeGenerator codeGenerator4 = null;
        python2Target1.gen = codeGenerator4;
        boolean boolean6 = python2Target1.wantsBaseListener();
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertNotNull(sTGroup3);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    }

    @Test
    public void test1154() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1154");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        boolean boolean3 = python2Target1.wantsBaseVisitor();
        org.stringtemplate.v4.STGroup sTGroup4 = python2Target1.loadTemplates();
        java.lang.String str6 = python2Target1.getTargetStringLiteralFromString("\\0");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str8 = python2Target1.getElementName("__tset");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(sTGroup4);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\"\\\\0\"" + "'", str6, "\"\\\\0\"");
    }

    @Test
    public void test1155() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1155");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String[] strArray2 = python2Target1.targetCharValueEscape;
        org.stringtemplate.v4.STGroup sTGroup3 = python2Target1.loadTemplates();
        org.antlr.v4.codegen.CodeGenerator codeGenerator4 = null;
        java.lang.String str7 = python2Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator4, "", false);
        boolean boolean8 = python2Target1.supportsOverloadedMethods();
        python2Target1.addBadWords();
        boolean boolean10 = python2Target1.templatesExist();
        java.lang.String str13 = python2Target1.getTargetStringLiteralFromString("\"\\\"4.5.2.1\\\"\"", false);
        java.lang.String str14 = python2Target1.getLanguage();
        java.lang.String str16 = python2Target1.getTargetStringLiteralFromString("__tsetContext");
        java.lang.String str18 = python2Target1.getImplicitSetLabel("_\"\\\"_tset_tset_tsetContext\\\"\"Context");
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertNotNull(sTGroup3);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "\\\"\\\\\\\"4.5.2.1\\\\\\\"\\\"" + "'", str13, "\\\"\\\\\\\"4.5.2.1\\\\\\\"\\\"");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Python2" + "'", str14, "Python2");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "\"__tsetContext\"" + "'", str16, "\"__tsetContext\"");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "_tset_\"\\\"_tset_tset_tsetContext\\\"\"Context" + "'", str18, "_tset_\"\\\"_tset_tset_tsetContext\\\"\"Context");
    }

    @Test
    public void test1156() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1156");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String[] strArray2 = python2Target1.targetCharValueEscape;
        java.lang.String str5 = python2Target1.getTargetStringLiteralFromString("Python2", false);
        java.lang.String str6 = python2Target1.getVersion();
        java.lang.String str8 = python2Target1.encodeIntAsCharEscape((int) (short) 1);
        org.antlr.v4.codegen.CodeGenerator codeGenerator9 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target10 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator9);
        java.util.Set<java.lang.String> strSet11 = python2Target10.badWords;
        java.lang.String str13 = python2Target10.encodeIntAsCharEscape(64);
        java.lang.String str14 = python2Target10.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator15 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target16 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator15);
        java.lang.String[] strArray17 = python2Target16.targetCharValueEscape;
        java.lang.String str18 = python2Target16.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup19 = python2Target16.getTemplates();
        python2Target10.templates = sTGroup19;
        java.util.Set<java.lang.String> strSet21 = python2Target10.getBadWords();
        python2Target1.badWords = strSet21;
        java.lang.String str24 = python2Target1.getAltLabelContextStructName("hi!");
        java.lang.String str25 = python2Target1.getVersion();
        java.util.Set<java.lang.String> strSet26 = python2Target1.getBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator27 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target28 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator27);
        java.util.Set<java.lang.String> strSet29 = python2Target28.badWords;
        java.lang.String str31 = python2Target28.encodeIntAsCharEscape(64);
        java.lang.String str32 = python2Target28.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator33 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target34 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator33);
        java.lang.String[] strArray35 = python2Target34.targetCharValueEscape;
        java.lang.String str36 = python2Target34.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup37 = python2Target34.getTemplates();
        python2Target28.templates = sTGroup37;
        org.antlr.v4.codegen.CodeGenerator codeGenerator39 = python2Target28.getCodeGenerator();
        org.stringtemplate.v4.STGroup sTGroup40 = python2Target28.loadTemplates();
        python2Target1.templates = sTGroup40;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str43 = python2Target1.getElementListName("_tset\"\\\"\\\\\\\"hi!\\\\\\\"\\\"\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Python2" + "'", str5, "Python2");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "4.5.2.1" + "'", str6, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\\1" + "'", str8, "\\1");
        org.junit.Assert.assertNotNull(strSet11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "@" + "'", str13, "@");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Python2" + "'", str14, "Python2");
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Python2" + "'", str18, "Python2");
        org.junit.Assert.assertNotNull(sTGroup19);
        org.junit.Assert.assertNotNull(strSet21);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "Hi!Context" + "'", str24, "Hi!Context");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "4.5.2.1" + "'", str25, "4.5.2.1");
        org.junit.Assert.assertNotNull(strSet26);
        org.junit.Assert.assertNotNull(strSet29);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "@" + "'", str31, "@");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "Python2" + "'", str32, "Python2");
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "Python2" + "'", str36, "Python2");
        org.junit.Assert.assertNotNull(sTGroup37);
        org.junit.Assert.assertNull(codeGenerator39);
        org.junit.Assert.assertNotNull(sTGroup40);
    }

    @Test
    public void test1157() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1157");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        boolean boolean3 = python2Target1.wantsBaseVisitor();
        org.stringtemplate.v4.STGroup sTGroup4 = python2Target1.loadTemplates();
        org.stringtemplate.v4.STGroup sTGroup5 = python2Target1.getTemplates();
        java.util.Set<java.lang.String> strSet6 = python2Target1.badWords;
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target8 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator7);
        java.util.Set<java.lang.String> strSet9 = python2Target8.badWords;
        java.lang.String str12 = python2Target8.getTargetStringLiteralFromString("hi!", false);
        java.lang.String str14 = python2Target8.getTargetStringLiteralFromString("\"hi!\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator15 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target16 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator15);
        java.util.Set<java.lang.String> strSet17 = python2Target16.badWords;
        java.lang.String str19 = python2Target16.encodeIntAsCharEscape(64);
        java.lang.String str20 = python2Target16.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator21 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target22 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator21);
        java.lang.String[] strArray23 = python2Target22.targetCharValueEscape;
        java.lang.String str24 = python2Target22.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup25 = python2Target22.getTemplates();
        python2Target16.templates = sTGroup25;
        org.antlr.v4.tool.Grammar grammar27 = null;
        org.stringtemplate.v4.ST sT28 = null;
        python2Target16.genRecognizerHeaderFile(grammar27, sT28, "\"_tset\"");
        java.util.Set<java.lang.String> strSet31 = python2Target16.getBadWords();
        python2Target8.badWords = strSet31;
        python2Target1.badWords = strSet31;
        org.stringtemplate.v4.STGroup sTGroup34 = python2Target1.getTemplates();
        int int35 = python2Target1.getSerializedATNSegmentLimit();
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(sTGroup4);
        org.junit.Assert.assertNotNull(sTGroup5);
        org.junit.Assert.assertNotNull(strSet6);
        org.junit.Assert.assertNotNull(strSet9);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "\"\\\"hi!\\\"\"" + "'", str14, "\"\\\"hi!\\\"\"");
        org.junit.Assert.assertNotNull(strSet17);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "@" + "'", str19, "@");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "Python2" + "'", str20, "Python2");
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "Python2" + "'", str24, "Python2");
        org.junit.Assert.assertNotNull(sTGroup25);
        org.junit.Assert.assertNotNull(strSet31);
        org.junit.Assert.assertNotNull(sTGroup34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 2147483647 + "'", int35 == 2147483647);
    }

    @Test
    public void test1158() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1158");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String[] strArray2 = python2Target1.targetCharValueEscape;
        java.lang.String str3 = python2Target1.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup4 = python2Target1.getTemplates();
        org.antlr.v4.codegen.CodeGenerator codeGenerator5 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target6 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator5);
        java.util.Set<java.lang.String> strSet7 = python2Target6.badWords;
        python2Target1.badWords = strSet7;
        org.antlr.v4.codegen.CodeGenerator codeGenerator9 = python2Target1.gen;
        java.lang.String str11 = python2Target1.getTargetStringLiteralFromString("_tset\\\"\\\\\\\"\\\\\\\\\\\\\\\"hi!\\\\\\\\\\\\\\\"\\\\\\\"\\\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator12 = null;
        python2Target1.gen = codeGenerator12;
        org.antlr.v4.codegen.CodeGenerator codeGenerator14 = python2Target1.getCodeGenerator();
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Python2" + "'", str3, "Python2");
        org.junit.Assert.assertNotNull(sTGroup4);
        org.junit.Assert.assertNotNull(strSet7);
        org.junit.Assert.assertNull(codeGenerator9);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "\"_tset\\\\\\\"\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"hi!\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"\\\\\\\"\"" + "'", str11, "\"_tset\\\\\\\"\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"hi!\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"\\\\\\\"\"");
        org.junit.Assert.assertNull(codeGenerator14);
    }

    @Test
    public void test1159() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1159");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str5 = python2Target1.getTargetStringLiteralFromString("hi!", false);
        int int6 = python2Target1.getInlineTestSetWordSize();
        java.lang.String str8 = python2Target1.getTargetStringLiteralFromString("Hi!Context");
        java.util.Set<java.lang.String> strSet9 = python2Target1.badWords;
        java.lang.String str12 = python2Target1.getTargetStringLiteralFromString("_\"\\\"hi!\\\"\"", true);
        org.stringtemplate.v4.STGroup sTGroup13 = python2Target1.getTemplates();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str15 = python2Target1.getElementListName("_\"_\\\"\\\\\\\"hi!\\\\\\\"\\\"\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 64 + "'", int6 == 64);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\"Hi!Context\"" + "'", str8, "\"Hi!Context\"");
        org.junit.Assert.assertNotNull(strSet9);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "\"_\\\"\\\\\\\"hi!\\\\\\\"\\\"\"" + "'", str12, "\"_\\\"\\\\\\\"hi!\\\\\\\"\\\"\"");
        org.junit.Assert.assertNotNull(sTGroup13);
    }

    @Test
    public void test1160() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1160");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str4 = python2Target1.encodeIntAsCharEscape(64);
        java.lang.String str5 = python2Target1.getLanguage();
        java.lang.String str7 = python2Target1.getImplicitSetLabel("");
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target9 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator8);
        java.util.Set<java.lang.String> strSet10 = python2Target9.badWords;
        java.lang.String str12 = python2Target9.encodeIntAsCharEscape(64);
        java.lang.String str14 = python2Target9.getTargetStringLiteralFromString("hi!");
        java.util.Set<java.lang.String> strSet15 = python2Target9.getBadWords();
        python2Target1.badWords = strSet15;
        int int17 = python2Target1.getSerializedATNSegmentLimit();
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "@" + "'", str4, "@");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Python2" + "'", str5, "Python2");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "_tset" + "'", str7, "_tset");
        org.junit.Assert.assertNotNull(strSet10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "@" + "'", str12, "@");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "\"hi!\"" + "'", str14, "\"hi!\"");
        org.junit.Assert.assertNotNull(strSet15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 2147483647 + "'", int17 == 2147483647);
    }

    @Test
    public void test1161() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1161");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String str3 = python2Target1.getImplicitSetLabel("");
        org.antlr.v4.codegen.CodeGenerator codeGenerator4 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target5 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator4);
        java.util.Set<java.lang.String> strSet6 = python2Target5.badWords;
        java.lang.String str8 = python2Target5.encodeIntAsCharEscape(64);
        java.lang.String str9 = python2Target5.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target11 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator10);
        java.lang.String[] strArray12 = python2Target11.targetCharValueEscape;
        java.lang.String str13 = python2Target11.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup14 = python2Target11.getTemplates();
        python2Target5.templates = sTGroup14;
        python2Target1.templates = sTGroup14;
        boolean boolean17 = python2Target1.templatesExist();
        java.lang.String str19 = python2Target1.getAltLabelContextStructName("_tsetContext");
        boolean boolean20 = python2Target1.wantsBaseListener();
        boolean boolean21 = python2Target1.wantsBaseListener();
        java.lang.String str23 = python2Target1.encodeIntAsCharEscape((int) (byte) 100);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "_tset" + "'", str3, "_tset");
        org.junit.Assert.assertNotNull(strSet6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "@" + "'", str8, "@");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Python2" + "'", str9, "Python2");
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Python2" + "'", str13, "Python2");
        org.junit.Assert.assertNotNull(sTGroup14);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "_tsetContextContext" + "'", str19, "_tsetContextContext");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "d" + "'", str23, "d");
    }

    @Test
    public void test1162() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1162");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String[] strArray2 = python2Target1.targetCharValueEscape;
        java.lang.String str3 = python2Target1.getLanguage();
        org.antlr.v4.tool.Grammar grammar4 = null;
        org.stringtemplate.v4.ST sT5 = null;
        python2Target1.genRecognizerHeaderFile(grammar4, sT5, "\\1");
        boolean boolean8 = python2Target1.wantsBaseVisitor();
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Python2" + "'", str3, "Python2");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test1163() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1163");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String[] strArray2 = python2Target1.targetCharValueEscape;
        java.lang.String str5 = python2Target1.getTargetStringLiteralFromString("Python2", false);
        java.lang.String str6 = python2Target1.getVersion();
        java.lang.String str8 = python2Target1.encodeIntAsCharEscape((int) (short) 1);
        int int9 = python2Target1.getSerializedATNSegmentLimit();
        java.lang.String str10 = python2Target1.getVersion();
        java.lang.String str12 = python2Target1.getListLabel("_tset_tsetContext");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str14 = python2Target1.getElementName("\"_tset_tset\\\"\\\"\\\\\\\"hi!\\\\\\\"\\\"\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Python2" + "'", str5, "Python2");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "4.5.2.1" + "'", str6, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\\1" + "'", str8, "\\1");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 2147483647 + "'", int9 == 2147483647);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "4.5.2.1" + "'", str10, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "_tset_tsetContext" + "'", str12, "_tset_tsetContext");
    }

    @Test
    public void test1164() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1164");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str4 = python2Target1.encodeIntAsCharEscape(64);
        java.lang.String str5 = python2Target1.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target7 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator6);
        java.lang.String[] strArray8 = python2Target7.targetCharValueEscape;
        java.lang.String str9 = python2Target7.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup10 = python2Target7.getTemplates();
        python2Target1.templates = sTGroup10;
        org.stringtemplate.v4.STGroup sTGroup12 = python2Target1.templates;
        java.util.Set<java.lang.String> strSet13 = python2Target1.badWords;
        java.util.Set<java.lang.String> strSet14 = python2Target1.getBadWords();
        boolean boolean15 = python2Target1.supportsOverloadedMethods();
        boolean boolean16 = python2Target1.templatesExist();
        org.antlr.v4.codegen.CodeGenerator codeGenerator17 = null;
        java.lang.String str20 = python2Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator17, "\"_tset\\\\\\\"\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"hi!\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"\\\\\\\"\"", false);
        org.antlr.v4.codegen.CodeGenerator codeGenerator21 = python2Target1.getCodeGenerator();
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "@" + "'", str4, "@");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Python2" + "'", str5, "Python2");
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Python2" + "'", str9, "Python2");
        org.junit.Assert.assertNotNull(sTGroup10);
        org.junit.Assert.assertNotNull(sTGroup12);
        org.junit.Assert.assertNotNull(strSet13);
        org.junit.Assert.assertNotNull(strSet14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "_tset\\\\\\\"\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"hi!\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"\\\\\\\"" + "'", str20, "_tset\\\\\\\"\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"hi!\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"\\\\\\\"");
        org.junit.Assert.assertNull(codeGenerator21);
    }

    @Test
    public void test1165() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1165");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str4 = python2Target1.encodeIntAsCharEscape(64);
        java.lang.String str5 = python2Target1.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target7 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator6);
        java.lang.String[] strArray8 = python2Target7.targetCharValueEscape;
        java.lang.String str9 = python2Target7.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup10 = python2Target7.getTemplates();
        python2Target1.templates = sTGroup10;
        java.util.Set<java.lang.String> strSet12 = python2Target1.getBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator13 = python2Target1.getCodeGenerator();
        boolean boolean14 = python2Target1.supportsOverloadedMethods();
        python2Target1.addBadWords();
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "@" + "'", str4, "@");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Python2" + "'", str5, "Python2");
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Python2" + "'", str9, "Python2");
        org.junit.Assert.assertNotNull(sTGroup10);
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertNull(codeGenerator13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test1166() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1166");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String[] strArray2 = python2Target1.targetCharValueEscape;
        java.lang.String str5 = python2Target1.getTargetStringLiteralFromString("Python2", false);
        java.lang.String str6 = python2Target1.getVersion();
        java.lang.String str8 = python2Target1.encodeIntAsCharEscape((int) (short) 1);
        org.antlr.v4.codegen.CodeGenerator codeGenerator9 = null;
        java.lang.String str12 = python2Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator9, "_tsetContext", false);
        org.antlr.v4.tool.Grammar grammar13 = null;
        org.stringtemplate.v4.ST sT14 = null;
        python2Target1.genRecognizerHeaderFile(grammar13, sT14, "_tset\\\"\\\\\\\"\\\\\\\\\\\\\\\"hi!\\\\\\\\\\\\\\\"\\\\\\\"\\\"");
        org.antlr.v4.tool.ast.GrammarAST grammarAST17 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean18 = python2Target1.grammarSymbolCausesIssueInGeneratedCode(grammarAST17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Python2" + "'", str5, "Python2");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "4.5.2.1" + "'", str6, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\\1" + "'", str8, "\\1");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "tsetContex" + "'", str12, "tsetContex");
    }

    @Test
    public void test1167() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1167");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String[] strArray2 = python2Target1.targetCharValueEscape;
        java.lang.String str3 = python2Target1.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup4 = python2Target1.getTemplates();
        java.lang.String str6 = python2Target1.getTargetStringLiteralFromString("_tset");
        java.lang.String str7 = python2Target1.getVersion();
        int int8 = python2Target1.getSerializedATNSegmentLimit();
        org.antlr.v4.codegen.CodeGenerator codeGenerator9 = python2Target1.getCodeGenerator();
        python2Target1.addBadWords();
        org.antlr.v4.tool.Grammar grammar11 = null;
        org.stringtemplate.v4.ST sT12 = null;
        python2Target1.genRecognizerHeaderFile(grammar11, sT12, "\"__tset\"");
        python2Target1.addBadWords();
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Python2" + "'", str3, "Python2");
        org.junit.Assert.assertNotNull(sTGroup4);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\"_tset\"" + "'", str6, "\"_tset\"");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "4.5.2.1" + "'", str7, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 2147483647 + "'", int8 == 2147483647);
        org.junit.Assert.assertNull(codeGenerator9);
    }

    @Test
    public void test1168() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1168");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str4 = python2Target1.encodeIntAsCharEscape(64);
        java.lang.String str5 = python2Target1.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup6 = python2Target1.getTemplates();
        java.lang.String str7 = python2Target1.language;
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target9 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator8);
        java.lang.String[] strArray10 = python2Target9.targetCharValueEscape;
        java.lang.String str11 = python2Target9.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup12 = python2Target9.getTemplates();
        org.antlr.v4.codegen.CodeGenerator codeGenerator13 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target14 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator13);
        java.util.Set<java.lang.String> strSet15 = python2Target14.badWords;
        python2Target9.badWords = strSet15;
        java.lang.String[] strArray22 = new java.lang.String[] { "@", "\"_tset\"", "\"hi!\"", "_tset\\1", "_tset\\\\1" };
        python2Target9.targetCharValueEscape = strArray22;
        java.lang.String str24 = python2Target9.getLanguage();
        boolean boolean25 = python2Target9.templatesExist();
        java.util.Set<java.lang.String> strSet26 = python2Target9.getBadWords();
        python2Target1.badWords = strSet26;
        org.antlr.v4.tool.ast.GrammarAST grammarAST28 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str29 = python2Target1.getLoopLabel(grammarAST28);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "@" + "'", str4, "@");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Python2" + "'", str5, "Python2");
        org.junit.Assert.assertNotNull(sTGroup6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Python2" + "'", str7, "Python2");
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Python2" + "'", str11, "Python2");
        org.junit.Assert.assertNotNull(sTGroup12);
        org.junit.Assert.assertNotNull(strSet15);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "Python2" + "'", str24, "Python2");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(strSet26);
    }

    @Test
    public void test1169() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1169");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str4 = python2Target1.encodeIntAsCharEscape(64);
        java.lang.String str5 = python2Target1.getLanguage();
        java.lang.String str7 = python2Target1.getImplicitSetLabel("");
        python2Target1.language = "_tsetContext";
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = python2Target1.getCodeGenerator();
        boolean boolean11 = python2Target1.supportsOverloadedMethods();
        java.lang.String str13 = python2Target1.getTargetStringLiteralFromString("Python2");
        java.lang.String str14 = python2Target1.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup15 = python2Target1.getTemplates();
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "@" + "'", str4, "@");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Python2" + "'", str5, "Python2");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "_tset" + "'", str7, "_tset");
        org.junit.Assert.assertNull(codeGenerator10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "\"Python2\"" + "'", str13, "\"Python2\"");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "_tsetContext" + "'", str14, "_tsetContext");
        org.junit.Assert.assertNotNull(sTGroup15);
    }

    @Test
    public void test1170() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1170");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        org.stringtemplate.v4.STGroup sTGroup2 = python2Target1.templates;
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = null;
        java.lang.String str6 = python2Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator3, "\"_tset\"", false);
        boolean boolean7 = python2Target1.supportsOverloadedMethods();
        java.lang.String str10 = python2Target1.getTargetStringLiteralFromString("", true);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str12 = python2Target1.getElementListName("tset");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "_tset" + "'", str6, "_tset");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\"\"" + "'", str10, "\"\"");
    }

    @Test
    public void test1171() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1171");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        boolean boolean3 = python2Target1.wantsBaseVisitor();
        org.stringtemplate.v4.STGroup sTGroup4 = python2Target1.loadTemplates();
        org.stringtemplate.v4.STGroup sTGroup5 = python2Target1.loadTemplates();
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = null;
        python2Target1.gen = codeGenerator6;
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = null;
        java.lang.String str11 = python2Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator8, "_\"_tset\"", false);
        java.lang.String str13 = python2Target1.getImplicitRuleLabel("4.5.2.1");
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(sTGroup4);
        org.junit.Assert.assertNotNull(sTGroup5);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "\\\"_tset" + "'", str11, "\\\"_tset");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "_4.5.2.1" + "'", str13, "_4.5.2.1");
    }

    @Test
    public void test1172() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1172");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str4 = python2Target1.encodeIntAsCharEscape(64);
        java.lang.String str5 = python2Target1.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target7 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator6);
        java.lang.String[] strArray8 = python2Target7.targetCharValueEscape;
        java.lang.String str9 = python2Target7.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup10 = python2Target7.getTemplates();
        python2Target1.templates = sTGroup10;
        java.util.Set<java.lang.String> strSet12 = python2Target1.getBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator13 = python2Target1.getCodeGenerator();
        java.util.Set<java.lang.String> strSet14 = python2Target1.getBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator15 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target16 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator15);
        java.util.Set<java.lang.String> strSet17 = python2Target16.badWords;
        java.lang.String str19 = python2Target16.encodeIntAsCharEscape(64);
        java.lang.String str20 = python2Target16.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator21 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target22 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator21);
        java.lang.String[] strArray23 = python2Target22.targetCharValueEscape;
        java.lang.String str24 = python2Target22.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup25 = python2Target22.getTemplates();
        python2Target16.templates = sTGroup25;
        org.antlr.v4.codegen.CodeGenerator codeGenerator27 = python2Target16.getCodeGenerator();
        org.stringtemplate.v4.STGroup sTGroup28 = python2Target16.loadTemplates();
        python2Target1.templates = sTGroup28;
        boolean boolean30 = python2Target1.supportsOverloadedMethods();
        java.lang.String str32 = python2Target1.encodeIntAsCharEscape((int) '#');
        boolean boolean33 = python2Target1.wantsBaseListener();
        org.stringtemplate.v4.STGroup sTGroup34 = python2Target1.templates;
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "@" + "'", str4, "@");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Python2" + "'", str5, "Python2");
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Python2" + "'", str9, "Python2");
        org.junit.Assert.assertNotNull(sTGroup10);
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertNull(codeGenerator13);
        org.junit.Assert.assertNotNull(strSet14);
        org.junit.Assert.assertNotNull(strSet17);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "@" + "'", str19, "@");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "Python2" + "'", str20, "Python2");
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "Python2" + "'", str24, "Python2");
        org.junit.Assert.assertNotNull(sTGroup25);
        org.junit.Assert.assertNull(codeGenerator27);
        org.junit.Assert.assertNotNull(sTGroup28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "#" + "'", str32, "#");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(sTGroup34);
    }

    @Test
    public void test1173() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1173");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String[] strArray2 = python2Target1.targetCharValueEscape;
        java.lang.String str3 = python2Target1.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup4 = python2Target1.getTemplates();
        org.antlr.v4.codegen.CodeGenerator codeGenerator5 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target6 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator5);
        java.util.Set<java.lang.String> strSet7 = python2Target6.badWords;
        python2Target1.badWords = strSet7;
        org.antlr.v4.codegen.CodeGenerator codeGenerator9 = python2Target1.gen;
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = python2Target1.getCodeGenerator();
        java.lang.String str11 = python2Target1.language;
        java.lang.String str13 = python2Target1.getListLabel("\"hi!\"");
        int int14 = python2Target1.getSerializedATNSegmentLimit();
        int int15 = python2Target1.getSerializedATNSegmentLimit();
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Python2" + "'", str3, "Python2");
        org.junit.Assert.assertNotNull(sTGroup4);
        org.junit.Assert.assertNotNull(strSet7);
        org.junit.Assert.assertNull(codeGenerator9);
        org.junit.Assert.assertNull(codeGenerator10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Python2" + "'", str11, "Python2");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "\"hi!\"" + "'", str13, "\"hi!\"");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2147483647 + "'", int14 == 2147483647);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 2147483647 + "'", int15 == 2147483647);
    }

    @Test
    public void test1174() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1174");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str5 = python2Target1.getTargetStringLiteralFromString("hi!", false);
        java.lang.String str7 = python2Target1.getTargetStringLiteralFromString("\"hi!\"");
        java.util.Set<java.lang.String> strSet8 = python2Target1.getBadWords();
        boolean boolean9 = python2Target1.wantsBaseVisitor();
        java.lang.String str11 = python2Target1.getAltLabelContextStructName("\".5.2.\"");
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "\"\\\"hi!\\\"\"" + "'", str7, "\"\\\"hi!\\\"\"");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "\".5.2.\"Context" + "'", str11, "\".5.2.\"Context");
    }

    @Test
    public void test1175() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1175");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String[] strArray2 = python2Target1.targetCharValueEscape;
        java.lang.String str3 = python2Target1.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup4 = python2Target1.getTemplates();
        boolean boolean5 = python2Target1.wantsBaseVisitor();
        java.lang.String str7 = python2Target1.getTargetStringLiteralFromString("d");
        org.antlr.v4.tool.Grammar grammar8 = null;
        org.stringtemplate.v4.ST sT9 = null;
        python2Target1.genRecognizerHeaderFile(grammar8, sT9, "\"\\\"d\\\"\"");
        java.lang.String[] strArray12 = python2Target1.targetCharValueEscape;
        java.lang.String str14 = python2Target1.getTargetStringLiteralFromString("\\\"_tset_tset_tsetContext\\\"");
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Python2" + "'", str3, "Python2");
        org.junit.Assert.assertNotNull(sTGroup4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "\"d\"" + "'", str7, "\"d\"");
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "\"\\\\\\\"_tset_tset_tsetContext\\\\\\\"\"" + "'", str14, "\"\\\\\\\"_tset_tset_tsetContext\\\\\\\"\"");
    }

    @Test
    public void test1176() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1176");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str5 = python2Target1.getTargetStringLiteralFromString("hi!", false);
        java.lang.String str7 = python2Target1.getImplicitRuleLabel("@");
        python2Target1.language = "hi!";
        boolean boolean10 = python2Target1.supportsOverloadedMethods();
        boolean boolean11 = python2Target1.templatesExist();
        org.antlr.v4.codegen.CodeGenerator codeGenerator12 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target13 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator12);
        java.util.Set<java.lang.String> strSet14 = python2Target13.badWords;
        boolean boolean15 = python2Target13.wantsBaseVisitor();
        org.stringtemplate.v4.STGroup sTGroup16 = python2Target13.loadTemplates();
        org.stringtemplate.v4.STGroup sTGroup17 = python2Target13.getTemplates();
        java.util.Set<java.lang.String> strSet18 = python2Target13.badWords;
        python2Target1.badWords = strSet18;
        java.lang.String str21 = python2Target1.getImplicitRuleLabel("\"\\\"\\\"\"");
        org.antlr.v4.tool.ast.GrammarAST grammarAST22 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str23 = python2Target1.getLoopLabel(grammarAST22);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "_@" + "'", str7, "_@");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(strSet14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(sTGroup16);
        org.junit.Assert.assertNotNull(sTGroup17);
        org.junit.Assert.assertNotNull(strSet18);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "_\"\\\"\\\"\"" + "'", str21, "_\"\\\"\\\"\"");
    }

    @Test
    public void test1177() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1177");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String[] strArray2 = python2Target1.targetCharValueEscape;
        java.lang.String str3 = python2Target1.getLanguage();
        boolean boolean4 = python2Target1.wantsBaseListener();
        python2Target1.language = "\\64";
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = python2Target1.getCodeGenerator();
        org.antlr.v4.tool.ast.GrammarAST grammarAST8 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str9 = python2Target1.getLoopCounter(grammarAST8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Python2" + "'", str3, "Python2");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(codeGenerator7);
    }

    @Test
    public void test1178() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1178");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        boolean boolean3 = python2Target1.wantsBaseVisitor();
        python2Target1.language = "\"\"";
        java.lang.String str7 = python2Target1.getTargetStringLiteralFromString("__tset");
        boolean boolean8 = python2Target1.templatesExist();
        org.antlr.v4.codegen.CodeGenerator codeGenerator9 = python2Target1.gen;
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = null;
        java.lang.String str13 = python2Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator10, "__@", false);
        boolean boolean14 = python2Target1.wantsBaseListener();
        java.lang.String str15 = python2Target1.language;
        org.antlr.v4.codegen.CodeGenerator codeGenerator16 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target17 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator16);
        java.util.Set<java.lang.String> strSet18 = python2Target17.badWords;
        java.lang.String str21 = python2Target17.getTargetStringLiteralFromString("hi!", false);
        java.lang.String str23 = python2Target17.getImplicitRuleLabel("@");
        python2Target17.language = "hi!";
        boolean boolean26 = python2Target17.supportsOverloadedMethods();
        boolean boolean27 = python2Target17.templatesExist();
        org.antlr.v4.codegen.CodeGenerator codeGenerator28 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target29 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator28);
        java.util.Set<java.lang.String> strSet30 = python2Target29.badWords;
        boolean boolean31 = python2Target29.wantsBaseVisitor();
        org.stringtemplate.v4.STGroup sTGroup32 = python2Target29.loadTemplates();
        org.stringtemplate.v4.STGroup sTGroup33 = python2Target29.getTemplates();
        java.util.Set<java.lang.String> strSet34 = python2Target29.badWords;
        python2Target17.badWords = strSet34;
        python2Target1.badWords = strSet34;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str38 = python2Target1.getElementName("__\"_tset\"Context");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "\"__tset\"" + "'", str7, "\"__tset\"");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(codeGenerator9);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "_" + "'", str13, "_");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "\"\"" + "'", str15, "\"\"");
        org.junit.Assert.assertNotNull(strSet18);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "hi!" + "'", str21, "hi!");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "_@" + "'", str23, "_@");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(strSet30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(sTGroup32);
        org.junit.Assert.assertNotNull(sTGroup33);
        org.junit.Assert.assertNotNull(strSet34);
    }

    @Test
    public void test1179() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1179");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String[] strArray2 = python2Target1.targetCharValueEscape;
        java.lang.String str3 = python2Target1.getLanguage();
        java.lang.String str6 = python2Target1.getTargetStringLiteralFromString("_tset", true);
        java.util.Set<java.lang.String> strSet7 = python2Target1.badWords;
        boolean boolean8 = python2Target1.wantsBaseVisitor();
        org.antlr.v4.codegen.CodeGenerator codeGenerator9 = null;
        python2Target1.gen = codeGenerator9;
        java.lang.String str12 = python2Target1.getImplicitRuleLabel("4.5.2.1");
        java.util.Set<java.lang.String> strSet13 = python2Target1.getBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator14 = null;
        python2Target1.gen = codeGenerator14;
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Python2" + "'", str3, "Python2");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\"_tset\"" + "'", str6, "\"_tset\"");
        org.junit.Assert.assertNotNull(strSet7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "_4.5.2.1" + "'", str12, "_4.5.2.1");
        org.junit.Assert.assertNotNull(strSet13);
    }

    @Test
    public void test1180() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1180");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        boolean boolean3 = python2Target1.wantsBaseVisitor();
        org.stringtemplate.v4.STGroup sTGroup4 = python2Target1.loadTemplates();
        java.lang.String str6 = python2Target1.getTargetStringLiteralFromString("\\0");
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = python2Target1.gen;
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(sTGroup4);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\"\\\\0\"" + "'", str6, "\"\\\\0\"");
        org.junit.Assert.assertNull(codeGenerator7);
    }

    @Test
    public void test1181() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1181");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String str3 = python2Target1.getImplicitSetLabel("");
        org.antlr.v4.codegen.CodeGenerator codeGenerator4 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target5 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator4);
        java.util.Set<java.lang.String> strSet6 = python2Target5.badWords;
        java.lang.String str8 = python2Target5.encodeIntAsCharEscape(64);
        java.lang.String str9 = python2Target5.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target11 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator10);
        java.lang.String[] strArray12 = python2Target11.targetCharValueEscape;
        java.lang.String str13 = python2Target11.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup14 = python2Target11.getTemplates();
        python2Target5.templates = sTGroup14;
        python2Target1.templates = sTGroup14;
        java.lang.String str18 = python2Target1.getAltLabelContextStructName("_tset");
        org.antlr.v4.codegen.CodeGenerator codeGenerator19 = null;
        python2Target1.gen = codeGenerator19;
        python2Target1.language = "@";
        java.lang.String str24 = python2Target1.encodeIntAsCharEscape((int) (short) 0);
        java.lang.String[] strArray25 = python2Target1.targetCharValueEscape;
        java.lang.String[] strArray26 = python2Target1.targetCharValueEscape;
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "_tset" + "'", str3, "_tset");
        org.junit.Assert.assertNotNull(strSet6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "@" + "'", str8, "@");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Python2" + "'", str9, "Python2");
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Python2" + "'", str13, "Python2");
        org.junit.Assert.assertNotNull(sTGroup14);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "_tsetContext" + "'", str18, "_tsetContext");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "\\0" + "'", str24, "\\0");
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertNotNull(strArray26);
    }

    @Test
    public void test1182() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1182");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str5 = python2Target1.getTargetStringLiteralFromString("hi!", false);
        java.lang.String str7 = python2Target1.getImplicitRuleLabel("@");
        python2Target1.language = "hi!";
        java.util.Set<java.lang.String> strSet10 = python2Target1.getBadWords();
        org.antlr.v4.tool.Grammar grammar11 = null;
        org.stringtemplate.v4.ST sT12 = null;
        python2Target1.genRecognizerHeaderFile(grammar11, sT12, "_@");
        java.lang.String str16 = python2Target1.encodeIntAsCharEscape((int) '#');
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str18 = python2Target1.getElementName("_tsetContextContext");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "_@" + "'", str7, "_@");
        org.junit.Assert.assertNotNull(strSet10);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "#" + "'", str16, "#");
    }

    @Test
    public void test1183() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1183");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str4 = python2Target1.encodeIntAsCharEscape(64);
        java.lang.String str5 = python2Target1.getLanguage();
        java.lang.String str7 = python2Target1.getImplicitSetLabel("");
        python2Target1.language = "_tsetContext";
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = python2Target1.getCodeGenerator();
        boolean boolean11 = python2Target1.supportsOverloadedMethods();
        java.lang.String str13 = python2Target1.getTargetStringLiteralFromString("\\\"\\\\\\\"4.5.2.1\\\\\\\"\\\"");
        java.util.Set<java.lang.String> strSet14 = python2Target1.badWords;
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "@" + "'", str4, "@");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Python2" + "'", str5, "Python2");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "_tset" + "'", str7, "_tset");
        org.junit.Assert.assertNull(codeGenerator10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "\"\\\\\\\"\\\\\\\\\\\\\\\"4.5.2.1\\\\\\\\\\\\\\\"\\\\\\\"\"" + "'", str13, "\"\\\\\\\"\\\\\\\\\\\\\\\"4.5.2.1\\\\\\\\\\\\\\\"\\\\\\\"\"");
        org.junit.Assert.assertNotNull(strSet14);
    }

    @Test
    public void test1184() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1184");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        boolean boolean3 = python2Target1.wantsBaseVisitor();
        python2Target1.language = "\"\"";
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = python2Target1.getCodeGenerator();
        boolean boolean7 = python2Target1.wantsBaseVisitor();
        java.lang.String str9 = python2Target1.getTargetStringLiteralFromString("\"_tset_tset_tsetContext\"");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str11 = python2Target1.getImplicitRuleLabel("\\1");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(codeGenerator6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\"\\\"_tset_tset_tsetContext\\\"\"" + "'", str9, "\"\\\"_tset_tset_tsetContext\\\"\"");
    }

    @Test
    public void test1185() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1185");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String[] strArray2 = python2Target1.targetCharValueEscape;
        java.lang.String str3 = python2Target1.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup4 = python2Target1.templates;
        java.lang.String str6 = python2Target1.getTargetStringLiteralFromString("4.5.2.1");
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = null;
        python2Target1.gen = codeGenerator7;
        org.stringtemplate.v4.STGroup sTGroup9 = python2Target1.templates;
        org.antlr.v4.codegen.target.Python2Target python2Target10 = new org.antlr.v4.codegen.target.Python2Target();
        org.stringtemplate.v4.STGroup sTGroup11 = python2Target10.templates;
        java.lang.String[] strArray12 = python2Target10.targetCharValueEscape;
        org.antlr.v4.codegen.CodeGenerator codeGenerator13 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target14 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator13);
        java.lang.String[] strArray15 = python2Target14.targetCharValueEscape;
        java.lang.String str18 = python2Target14.getTargetStringLiteralFromString("Python2", false);
        java.lang.String[] strArray19 = org.antlr.v4.codegen.target.Python2Target.python2Keywords;
        python2Target14.targetCharValueEscape = strArray19;
        python2Target10.targetCharValueEscape = strArray19;
        python2Target1.targetCharValueEscape = strArray19;
        int int23 = python2Target1.getInlineTestSetWordSize();
        org.antlr.v4.tool.ast.GrammarAST grammarAST24 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str25 = python2Target1.getLoopCounter(grammarAST24);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Python2" + "'", str3, "Python2");
        org.junit.Assert.assertNull(sTGroup4);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\"4.5.2.1\"" + "'", str6, "\"4.5.2.1\"");
        org.junit.Assert.assertNull(sTGroup9);
        org.junit.Assert.assertNull(sTGroup11);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Python2" + "'", str18, "Python2");
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 64 + "'", int23 == 64);
    }

    @Test
    public void test1186() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1186");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String str3 = python2Target1.getImplicitSetLabel("");
        org.antlr.v4.tool.Grammar grammar4 = null;
        org.stringtemplate.v4.ST sT5 = null;
        python2Target1.genRecognizerHeaderFile(grammar4, sT5, "_tset");
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target9 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator8);
        java.util.Set<java.lang.String> strSet10 = python2Target9.badWords;
        java.lang.String str12 = python2Target9.encodeIntAsCharEscape(64);
        java.lang.String str13 = python2Target9.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator14 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target15 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator14);
        java.lang.String[] strArray16 = python2Target15.targetCharValueEscape;
        java.lang.String str17 = python2Target15.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup18 = python2Target15.getTemplates();
        python2Target9.templates = sTGroup18;
        python2Target1.templates = sTGroup18;
        boolean boolean21 = python2Target1.supportsOverloadedMethods();
        java.lang.String str22 = python2Target1.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup23 = python2Target1.getTemplates();
        java.lang.String str24 = python2Target1.language;
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "_tset" + "'", str3, "_tset");
        org.junit.Assert.assertNotNull(strSet10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "@" + "'", str12, "@");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Python2" + "'", str13, "Python2");
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Python2" + "'", str17, "Python2");
        org.junit.Assert.assertNotNull(sTGroup18);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "Python2" + "'", str22, "Python2");
        org.junit.Assert.assertNotNull(sTGroup23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "Python2" + "'", str24, "Python2");
    }

    @Test
    public void test1187() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1187");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str4 = python2Target1.encodeIntAsCharEscape(64);
        java.lang.String str5 = python2Target1.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup6 = python2Target1.getTemplates();
        java.lang.String str7 = python2Target1.language;
        org.antlr.v4.tool.Rule rule8 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str9 = python2Target1.getRuleFunctionContextStructName(rule8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "@" + "'", str4, "@");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Python2" + "'", str5, "Python2");
        org.junit.Assert.assertNotNull(sTGroup6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Python2" + "'", str7, "Python2");
    }

    @Test
    public void test1188() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1188");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        boolean boolean2 = python2Target1.templatesExist();
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target4 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator3);
        java.util.Set<java.lang.String> strSet5 = python2Target4.badWords;
        java.lang.String str7 = python2Target4.encodeIntAsCharEscape(64);
        java.lang.String str9 = python2Target4.getAltLabelContextStructName("Python2");
        boolean boolean10 = python2Target4.supportsOverloadedMethods();
        org.antlr.v4.codegen.CodeGenerator codeGenerator11 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target12 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator11);
        java.util.Set<java.lang.String> strSet13 = python2Target12.badWords;
        boolean boolean14 = python2Target12.wantsBaseVisitor();
        org.stringtemplate.v4.STGroup sTGroup15 = python2Target12.loadTemplates();
        org.stringtemplate.v4.STGroup sTGroup16 = python2Target12.getTemplates();
        python2Target4.templates = sTGroup16;
        python2Target1.templates = sTGroup16;
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "@" + "'", str7, "@");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Python2Context" + "'", str9, "Python2Context");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(strSet13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(sTGroup15);
        org.junit.Assert.assertNotNull(sTGroup16);
    }

    @Test
    public void test1189() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1189");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        boolean boolean3 = python2Target1.wantsBaseVisitor();
        org.stringtemplate.v4.STGroup sTGroup4 = python2Target1.loadTemplates();
        org.stringtemplate.v4.STGroup sTGroup5 = python2Target1.getTemplates();
        java.util.Set<java.lang.String> strSet6 = python2Target1.badWords;
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target8 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator7);
        java.util.Set<java.lang.String> strSet9 = python2Target8.badWords;
        java.lang.String str12 = python2Target8.getTargetStringLiteralFromString("hi!", false);
        java.lang.String str14 = python2Target8.getTargetStringLiteralFromString("\"hi!\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator15 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target16 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator15);
        java.util.Set<java.lang.String> strSet17 = python2Target16.badWords;
        java.lang.String str19 = python2Target16.encodeIntAsCharEscape(64);
        java.lang.String str20 = python2Target16.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator21 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target22 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator21);
        java.lang.String[] strArray23 = python2Target22.targetCharValueEscape;
        java.lang.String str24 = python2Target22.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup25 = python2Target22.getTemplates();
        python2Target16.templates = sTGroup25;
        org.antlr.v4.tool.Grammar grammar27 = null;
        org.stringtemplate.v4.ST sT28 = null;
        python2Target16.genRecognizerHeaderFile(grammar27, sT28, "\"_tset\"");
        java.util.Set<java.lang.String> strSet31 = python2Target16.getBadWords();
        python2Target8.badWords = strSet31;
        python2Target1.badWords = strSet31;
        org.antlr.v4.codegen.CodeGenerator codeGenerator34 = null;
        python2Target1.gen = codeGenerator34;
        org.antlr.v4.tool.Grammar grammar36 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str38 = python2Target1.getTokenTypeAsTargetLabel(grammar36, (int) (short) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(sTGroup4);
        org.junit.Assert.assertNotNull(sTGroup5);
        org.junit.Assert.assertNotNull(strSet6);
        org.junit.Assert.assertNotNull(strSet9);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "\"\\\"hi!\\\"\"" + "'", str14, "\"\\\"hi!\\\"\"");
        org.junit.Assert.assertNotNull(strSet17);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "@" + "'", str19, "@");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "Python2" + "'", str20, "Python2");
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "Python2" + "'", str24, "Python2");
        org.junit.Assert.assertNotNull(sTGroup25);
        org.junit.Assert.assertNotNull(strSet31);
    }

    @Test
    public void test1190() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1190");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str4 = python2Target1.encodeIntAsCharEscape(64);
        java.lang.String str5 = python2Target1.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target7 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator6);
        java.lang.String[] strArray8 = python2Target7.targetCharValueEscape;
        java.lang.String str9 = python2Target7.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup10 = python2Target7.getTemplates();
        python2Target1.templates = sTGroup10;
        org.stringtemplate.v4.STGroup sTGroup12 = python2Target1.templates;
        java.util.Set<java.lang.String> strSet13 = python2Target1.badWords;
        java.util.Set<java.lang.String> strSet14 = python2Target1.getBadWords();
        org.antlr.v4.tool.Grammar grammar15 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator16 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target17 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator16);
        java.util.Set<java.lang.String> strSet18 = python2Target17.badWords;
        java.lang.String str20 = python2Target17.encodeIntAsCharEscape(64);
        java.lang.String str21 = python2Target17.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator22 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target23 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator22);
        java.lang.String[] strArray24 = python2Target23.targetCharValueEscape;
        java.lang.String str25 = python2Target23.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup26 = python2Target23.getTemplates();
        python2Target17.templates = sTGroup26;
        org.stringtemplate.v4.STGroup sTGroup28 = python2Target17.templates;
        java.util.Set<java.lang.String> strSet29 = python2Target17.badWords;
        java.util.Set<java.lang.String> strSet30 = python2Target17.getBadWords();
        boolean boolean31 = python2Target17.supportsOverloadedMethods();
        java.util.Set<java.lang.String> strSet32 = python2Target17.getBadWords();
        org.antlr.v4.tool.Grammar grammar33 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator34 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target35 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator34);
        java.lang.String[] strArray36 = python2Target35.targetCharValueEscape;
        java.lang.String str39 = python2Target35.getTargetStringLiteralFromString("_tset\\1", false);
        org.antlr.v4.tool.Grammar grammar40 = null;
        int[] intArray41 = new int[] {};
        java.lang.String[] strArray42 = python2Target35.getTokenTypesAsTargetLabels(grammar40, intArray41);
        java.lang.String[] strArray43 = python2Target17.getTokenTypesAsTargetLabels(grammar33, intArray41);
        java.lang.String[] strArray44 = python2Target1.getTokenTypesAsTargetLabels(grammar15, intArray41);
        org.antlr.v4.codegen.CodeGenerator codeGenerator45 = null;
        java.lang.String str48 = python2Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator45, "\"Hi!Context\"Context", true);
        java.lang.String str50 = python2Target1.getImplicitRuleLabel("\"_tset\\\\\\\"\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"hi!\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"\\\\\\\"\"");
        org.stringtemplate.v4.STGroup sTGroup51 = python2Target1.loadTemplates();
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "@" + "'", str4, "@");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Python2" + "'", str5, "Python2");
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Python2" + "'", str9, "Python2");
        org.junit.Assert.assertNotNull(sTGroup10);
        org.junit.Assert.assertNotNull(sTGroup12);
        org.junit.Assert.assertNotNull(strSet13);
        org.junit.Assert.assertNotNull(strSet14);
        org.junit.Assert.assertNotNull(strSet18);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "@" + "'", str20, "@");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Python2" + "'", str21, "Python2");
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Python2" + "'", str25, "Python2");
        org.junit.Assert.assertNotNull(sTGroup26);
        org.junit.Assert.assertNotNull(sTGroup28);
        org.junit.Assert.assertNotNull(strSet29);
        org.junit.Assert.assertNotNull(strSet30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(strSet32);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "_tset\\\\1" + "'", str39, "_tset\\\\1");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[]");
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "\"Hi!Context\\\"Contex\"" + "'", str48, "\"Hi!Context\\\"Contex\"");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "_\"_tset\\\\\\\"\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"hi!\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"\\\\\\\"\"" + "'", str50, "_\"_tset\\\\\\\"\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"hi!\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"\\\\\\\"\"");
        org.junit.Assert.assertNotNull(sTGroup51);
    }

    @Test
    public void test1191() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1191");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str5 = python2Target1.getTargetStringLiteralFromString("hi!", false);
        java.lang.String str7 = python2Target1.getTargetStringLiteralFromString("\"hi!\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = null;
        python2Target1.gen = codeGenerator8;
        java.lang.String[] strArray10 = null;
        python2Target1.targetCharValueEscape = strArray10;
        org.stringtemplate.v4.STGroup sTGroup12 = python2Target1.getTemplates();
        org.stringtemplate.v4.STGroup sTGroup13 = python2Target1.templates;
        boolean boolean14 = python2Target1.templatesExist();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str16 = python2Target1.getElementListName("\"\\\\\\\"_tset_tset_tsetContext\\\\\\\"\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "\"\\\"hi!\\\"\"" + "'", str7, "\"\\\"hi!\\\"\"");
        org.junit.Assert.assertNotNull(sTGroup12);
        org.junit.Assert.assertNotNull(sTGroup13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
    }

    @Test
    public void test1192() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1192");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String[] strArray2 = python2Target1.targetCharValueEscape;
        java.lang.String str3 = python2Target1.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup4 = python2Target1.getTemplates();
        org.antlr.v4.codegen.CodeGenerator codeGenerator5 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target6 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator5);
        java.util.Set<java.lang.String> strSet7 = python2Target6.badWords;
        python2Target1.badWords = strSet7;
        org.antlr.v4.codegen.CodeGenerator codeGenerator9 = python2Target1.gen;
        java.lang.String str10 = python2Target1.getLanguage();
        java.lang.String str11 = python2Target1.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator12 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target13 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator12);
        java.util.Set<java.lang.String> strSet14 = python2Target13.badWords;
        java.lang.String str17 = python2Target13.getTargetStringLiteralFromString("hi!", false);
        int int18 = python2Target13.getInlineTestSetWordSize();
        boolean boolean19 = python2Target13.wantsBaseVisitor();
        java.lang.String str20 = python2Target13.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup21 = python2Target13.loadTemplates();
        python2Target1.templates = sTGroup21;
        java.lang.String str24 = python2Target1.getAltLabelContextStructName("\"_tsethi!\"");
        java.lang.String str27 = python2Target1.getTargetStringLiteralFromString("\"_tset_tset_tsetContext\"", false);
        org.antlr.v4.codegen.CodeGenerator codeGenerator28 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target29 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator28);
        java.util.Set<java.lang.String> strSet30 = python2Target29.badWords;
        java.lang.String str32 = python2Target29.encodeIntAsCharEscape(64);
        java.lang.String str33 = python2Target29.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator34 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target35 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator34);
        java.lang.String[] strArray36 = python2Target35.targetCharValueEscape;
        java.lang.String str37 = python2Target35.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup38 = python2Target35.getTemplates();
        python2Target29.templates = sTGroup38;
        java.util.Set<java.lang.String> strSet40 = python2Target29.getBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator41 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target42 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator41);
        java.lang.String[] strArray43 = python2Target42.targetCharValueEscape;
        org.stringtemplate.v4.STGroup sTGroup44 = python2Target42.loadTemplates();
        python2Target29.templates = sTGroup44;
        python2Target1.templates = sTGroup44;
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Python2" + "'", str3, "Python2");
        org.junit.Assert.assertNotNull(sTGroup4);
        org.junit.Assert.assertNotNull(strSet7);
        org.junit.Assert.assertNull(codeGenerator9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Python2" + "'", str10, "Python2");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "4.5.2.1" + "'", str11, "4.5.2.1");
        org.junit.Assert.assertNotNull(strSet14);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 64 + "'", int18 == 64);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "Python2" + "'", str20, "Python2");
        org.junit.Assert.assertNotNull(sTGroup21);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "\"_tsethi!\"Context" + "'", str24, "\"_tsethi!\"Context");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "\\\"_tset_tset_tsetContext\\\"" + "'", str27, "\\\"_tset_tset_tsetContext\\\"");
        org.junit.Assert.assertNotNull(strSet30);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "@" + "'", str32, "@");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "Python2" + "'", str33, "Python2");
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "Python2" + "'", str37, "Python2");
        org.junit.Assert.assertNotNull(sTGroup38);
        org.junit.Assert.assertNotNull(strSet40);
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertNotNull(sTGroup44);
    }

    @Test
    public void test1193() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1193");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str4 = python2Target1.encodeIntAsCharEscape(64);
        java.lang.String str5 = python2Target1.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target7 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator6);
        java.lang.String[] strArray8 = python2Target7.targetCharValueEscape;
        java.lang.String str9 = python2Target7.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup10 = python2Target7.getTemplates();
        python2Target1.templates = sTGroup10;
        org.stringtemplate.v4.STGroup sTGroup12 = python2Target1.templates;
        java.util.Set<java.lang.String> strSet13 = python2Target1.badWords;
        boolean boolean14 = python2Target1.supportsOverloadedMethods();
        java.lang.String str16 = python2Target1.getImplicitSetLabel("\"Hi!Context\"");
        java.lang.String str17 = python2Target1.language;
        java.lang.String str19 = python2Target1.getImplicitSetLabel("\"\\\"\\\\\\\"hi!\\\\\\\"\\\"\"");
        java.lang.String str21 = python2Target1.getTargetStringLiteralFromString("_tset\\n");
        java.lang.String str22 = python2Target1.getLanguage();
        boolean boolean23 = python2Target1.supportsOverloadedMethods();
        java.lang.String str24 = python2Target1.getVersion();
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "@" + "'", str4, "@");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Python2" + "'", str5, "Python2");
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Python2" + "'", str9, "Python2");
        org.junit.Assert.assertNotNull(sTGroup10);
        org.junit.Assert.assertNotNull(sTGroup12);
        org.junit.Assert.assertNotNull(strSet13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "_tset\"Hi!Context\"" + "'", str16, "_tset\"Hi!Context\"");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Python2" + "'", str17, "Python2");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "_tset\"\\\"\\\\\\\"hi!\\\\\\\"\\\"\"" + "'", str19, "_tset\"\\\"\\\\\\\"hi!\\\\\\\"\\\"\"");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "\"_tset\\\\n\"" + "'", str21, "\"_tset\\\\n\"");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "Python2" + "'", str22, "Python2");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "4.5.2.1" + "'", str24, "4.5.2.1");
    }

    @Test
    public void test1194() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1194");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str4 = python2Target1.encodeIntAsCharEscape(64);
        java.lang.String str5 = python2Target1.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target7 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator6);
        java.lang.String[] strArray8 = python2Target7.targetCharValueEscape;
        java.lang.String str9 = python2Target7.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup10 = python2Target7.getTemplates();
        python2Target1.templates = sTGroup10;
        org.stringtemplate.v4.STGroup sTGroup12 = python2Target1.templates;
        java.util.Set<java.lang.String> strSet13 = python2Target1.badWords;
        java.util.Set<java.lang.String> strSet14 = python2Target1.getBadWords();
        org.antlr.v4.tool.Grammar grammar15 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator16 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target17 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator16);
        java.util.Set<java.lang.String> strSet18 = python2Target17.badWords;
        java.lang.String str20 = python2Target17.encodeIntAsCharEscape(64);
        java.lang.String str21 = python2Target17.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator22 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target23 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator22);
        java.lang.String[] strArray24 = python2Target23.targetCharValueEscape;
        java.lang.String str25 = python2Target23.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup26 = python2Target23.getTemplates();
        python2Target17.templates = sTGroup26;
        org.stringtemplate.v4.STGroup sTGroup28 = python2Target17.templates;
        java.util.Set<java.lang.String> strSet29 = python2Target17.badWords;
        java.util.Set<java.lang.String> strSet30 = python2Target17.getBadWords();
        boolean boolean31 = python2Target17.supportsOverloadedMethods();
        java.util.Set<java.lang.String> strSet32 = python2Target17.getBadWords();
        org.antlr.v4.tool.Grammar grammar33 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator34 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target35 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator34);
        java.lang.String[] strArray36 = python2Target35.targetCharValueEscape;
        java.lang.String str39 = python2Target35.getTargetStringLiteralFromString("_tset\\1", false);
        org.antlr.v4.tool.Grammar grammar40 = null;
        int[] intArray41 = new int[] {};
        java.lang.String[] strArray42 = python2Target35.getTokenTypesAsTargetLabels(grammar40, intArray41);
        java.lang.String[] strArray43 = python2Target17.getTokenTypesAsTargetLabels(grammar33, intArray41);
        java.lang.String[] strArray44 = python2Target1.getTokenTypesAsTargetLabels(grammar15, intArray41);
        org.antlr.v4.codegen.CodeGenerator codeGenerator45 = null;
        java.lang.String str48 = python2Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator45, "\"Hi!Context\"Context", true);
        java.lang.String str49 = python2Target1.getVersion();
        java.util.Set<java.lang.String> strSet50 = python2Target1.badWords;
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "@" + "'", str4, "@");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Python2" + "'", str5, "Python2");
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Python2" + "'", str9, "Python2");
        org.junit.Assert.assertNotNull(sTGroup10);
        org.junit.Assert.assertNotNull(sTGroup12);
        org.junit.Assert.assertNotNull(strSet13);
        org.junit.Assert.assertNotNull(strSet14);
        org.junit.Assert.assertNotNull(strSet18);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "@" + "'", str20, "@");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Python2" + "'", str21, "Python2");
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Python2" + "'", str25, "Python2");
        org.junit.Assert.assertNotNull(sTGroup26);
        org.junit.Assert.assertNotNull(sTGroup28);
        org.junit.Assert.assertNotNull(strSet29);
        org.junit.Assert.assertNotNull(strSet30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(strSet32);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "_tset\\\\1" + "'", str39, "_tset\\\\1");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[]");
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "\"Hi!Context\\\"Contex\"" + "'", str48, "\"Hi!Context\\\"Contex\"");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "4.5.2.1" + "'", str49, "4.5.2.1");
        org.junit.Assert.assertNotNull(strSet50);
    }

    @Test
    public void test1195() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1195");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str4 = python2Target1.encodeIntAsCharEscape(64);
        java.lang.String str5 = python2Target1.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = python2Target1.getCodeGenerator();
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "@" + "'", str4, "@");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Python2" + "'", str5, "Python2");
        org.junit.Assert.assertNull(codeGenerator6);
    }

    @Test
    public void test1196() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1196");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str4 = python2Target1.encodeIntAsCharEscape(64);
        java.lang.String str5 = python2Target1.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target7 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator6);
        java.lang.String[] strArray8 = python2Target7.targetCharValueEscape;
        java.lang.String str9 = python2Target7.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup10 = python2Target7.getTemplates();
        python2Target1.templates = sTGroup10;
        org.stringtemplate.v4.STGroup sTGroup12 = python2Target1.templates;
        java.util.Set<java.lang.String> strSet13 = python2Target1.badWords;
        java.util.Set<java.lang.String> strSet14 = python2Target1.getBadWords();
        org.antlr.v4.tool.Grammar grammar15 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator16 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target17 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator16);
        java.util.Set<java.lang.String> strSet18 = python2Target17.badWords;
        java.lang.String str20 = python2Target17.encodeIntAsCharEscape(64);
        java.lang.String str21 = python2Target17.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator22 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target23 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator22);
        java.lang.String[] strArray24 = python2Target23.targetCharValueEscape;
        java.lang.String str25 = python2Target23.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup26 = python2Target23.getTemplates();
        python2Target17.templates = sTGroup26;
        org.stringtemplate.v4.STGroup sTGroup28 = python2Target17.templates;
        java.util.Set<java.lang.String> strSet29 = python2Target17.badWords;
        java.util.Set<java.lang.String> strSet30 = python2Target17.getBadWords();
        boolean boolean31 = python2Target17.supportsOverloadedMethods();
        java.util.Set<java.lang.String> strSet32 = python2Target17.getBadWords();
        org.antlr.v4.tool.Grammar grammar33 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator34 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target35 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator34);
        java.lang.String[] strArray36 = python2Target35.targetCharValueEscape;
        java.lang.String str39 = python2Target35.getTargetStringLiteralFromString("_tset\\1", false);
        org.antlr.v4.tool.Grammar grammar40 = null;
        int[] intArray41 = new int[] {};
        java.lang.String[] strArray42 = python2Target35.getTokenTypesAsTargetLabels(grammar40, intArray41);
        java.lang.String[] strArray43 = python2Target17.getTokenTypesAsTargetLabels(grammar33, intArray41);
        java.lang.String[] strArray44 = python2Target1.getTokenTypesAsTargetLabels(grammar15, intArray41);
        org.antlr.v4.codegen.CodeGenerator codeGenerator45 = null;
        java.lang.String str48 = python2Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator45, "\"Hi!Context\"Context", true);
        java.lang.String[] strArray49 = python2Target1.targetCharValueEscape;
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "@" + "'", str4, "@");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Python2" + "'", str5, "Python2");
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Python2" + "'", str9, "Python2");
        org.junit.Assert.assertNotNull(sTGroup10);
        org.junit.Assert.assertNotNull(sTGroup12);
        org.junit.Assert.assertNotNull(strSet13);
        org.junit.Assert.assertNotNull(strSet14);
        org.junit.Assert.assertNotNull(strSet18);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "@" + "'", str20, "@");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Python2" + "'", str21, "Python2");
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Python2" + "'", str25, "Python2");
        org.junit.Assert.assertNotNull(sTGroup26);
        org.junit.Assert.assertNotNull(sTGroup28);
        org.junit.Assert.assertNotNull(strSet29);
        org.junit.Assert.assertNotNull(strSet30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(strSet32);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "_tset\\\\1" + "'", str39, "_tset\\\\1");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[]");
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "\"Hi!Context\\\"Contex\"" + "'", str48, "\"Hi!Context\\\"Contex\"");
        org.junit.Assert.assertNotNull(strArray49);
    }

    @Test
    public void test1197() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1197");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String[] strArray2 = python2Target1.targetCharValueEscape;
        java.lang.String str3 = python2Target1.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup4 = python2Target1.templates;
        boolean boolean5 = python2Target1.templatesExist();
        java.lang.String str6 = python2Target1.getLanguage();
        python2Target1.addBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = null;
        java.lang.String str11 = python2Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator8, "\\1", false);
        java.util.Set<java.lang.String> strSet12 = python2Target1.getBadWords();
        org.antlr.v4.tool.Grammar grammar13 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target14 = new org.antlr.v4.codegen.target.Python2Target();
        org.stringtemplate.v4.STGroup sTGroup15 = python2Target14.templates;
        java.lang.String[] strArray16 = python2Target14.targetCharValueEscape;
        org.antlr.v4.codegen.CodeGenerator codeGenerator17 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target18 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator17);
        java.lang.String[] strArray19 = python2Target18.targetCharValueEscape;
        java.lang.String str22 = python2Target18.getTargetStringLiteralFromString("Python2", false);
        java.lang.String[] strArray23 = org.antlr.v4.codegen.target.Python2Target.python2Keywords;
        python2Target18.targetCharValueEscape = strArray23;
        python2Target14.targetCharValueEscape = strArray23;
        java.lang.String str28 = python2Target14.getTargetStringLiteralFromString("_tset_tsetContext", false);
        org.antlr.v4.tool.Grammar grammar29 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator30 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target31 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator30);
        java.lang.String[] strArray32 = python2Target31.targetCharValueEscape;
        java.lang.String str33 = python2Target31.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup34 = python2Target31.getTemplates();
        org.antlr.v4.codegen.CodeGenerator codeGenerator35 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target36 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator35);
        java.util.Set<java.lang.String> strSet37 = python2Target36.badWords;
        python2Target31.badWords = strSet37;
        org.antlr.v4.codegen.CodeGenerator codeGenerator39 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target40 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator39);
        java.util.Set<java.lang.String> strSet41 = python2Target40.badWords;
        java.lang.String str44 = python2Target40.getTargetStringLiteralFromString("hi!", false);
        java.lang.String str46 = python2Target40.getImplicitRuleLabel("@");
        python2Target40.language = "hi!";
        org.antlr.v4.codegen.CodeGenerator codeGenerator49 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target50 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator49);
        java.util.Set<java.lang.String> strSet51 = python2Target50.badWords;
        java.lang.String str53 = python2Target50.encodeIntAsCharEscape(64);
        java.lang.String str54 = python2Target50.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator55 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target56 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator55);
        java.lang.String[] strArray57 = python2Target56.targetCharValueEscape;
        java.lang.String str58 = python2Target56.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup59 = python2Target56.getTemplates();
        python2Target50.templates = sTGroup59;
        org.antlr.v4.codegen.CodeGenerator codeGenerator61 = python2Target50.getCodeGenerator();
        org.stringtemplate.v4.STGroup sTGroup62 = python2Target50.loadTemplates();
        python2Target40.templates = sTGroup62;
        python2Target31.templates = sTGroup62;
        org.antlr.v4.codegen.CodeGenerator codeGenerator65 = null;
        java.lang.String str68 = python2Target31.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator65, "@", false);
        python2Target31.language = "\"4.5.2.1\"";
        org.antlr.v4.tool.Grammar grammar71 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator72 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target73 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator72);
        java.lang.String[] strArray74 = python2Target73.targetCharValueEscape;
        java.lang.String str77 = python2Target73.getTargetStringLiteralFromString("_tset\\1", false);
        org.antlr.v4.tool.Grammar grammar78 = null;
        int[] intArray79 = new int[] {};
        java.lang.String[] strArray80 = python2Target73.getTokenTypesAsTargetLabels(grammar78, intArray79);
        java.lang.String[] strArray81 = python2Target31.getTokenTypesAsTargetLabels(grammar71, intArray79);
        java.lang.String[] strArray82 = python2Target14.getTokenTypesAsTargetLabels(grammar29, intArray79);
        java.lang.String[] strArray83 = python2Target1.getTokenTypesAsTargetLabels(grammar13, intArray79);
        org.antlr.v4.tool.ast.GrammarAST grammarAST84 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str85 = python2Target1.getLoopCounter(grammarAST84);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Python2" + "'", str3, "Python2");
        org.junit.Assert.assertNull(sTGroup4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Python2" + "'", str6, "Python2");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertNull(sTGroup15);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "Python2" + "'", str22, "Python2");
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "_tset_tsetContext" + "'", str28, "_tset_tsetContext");
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "Python2" + "'", str33, "Python2");
        org.junit.Assert.assertNotNull(sTGroup34);
        org.junit.Assert.assertNotNull(strSet37);
        org.junit.Assert.assertNotNull(strSet41);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "hi!" + "'", str44, "hi!");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "_@" + "'", str46, "_@");
        org.junit.Assert.assertNotNull(strSet51);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "@" + "'", str53, "@");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "Python2" + "'", str54, "Python2");
        org.junit.Assert.assertNotNull(strArray57);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "Python2" + "'", str58, "Python2");
        org.junit.Assert.assertNotNull(sTGroup59);
        org.junit.Assert.assertNull(codeGenerator61);
        org.junit.Assert.assertNotNull(sTGroup62);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "" + "'", str68, "");
        org.junit.Assert.assertNotNull(strArray74);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "_tset\\\\1" + "'", str77, "_tset\\\\1");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[]");
        org.junit.Assert.assertNotNull(strArray80);
        org.junit.Assert.assertNotNull(strArray81);
        org.junit.Assert.assertNotNull(strArray82);
        org.junit.Assert.assertNotNull(strArray83);
    }

    @Test
    public void test1198() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1198");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String[] strArray2 = python2Target1.targetCharValueEscape;
        java.lang.String str5 = python2Target1.getTargetStringLiteralFromString("Python2", false);
        java.lang.String str6 = python2Target1.getVersion();
        java.lang.String str8 = python2Target1.encodeIntAsCharEscape((int) (short) 1);
        org.antlr.v4.codegen.CodeGenerator codeGenerator9 = null;
        java.lang.String str12 = python2Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator9, "_tsetContext", false);
        boolean boolean13 = python2Target1.templatesExist();
        python2Target1.addBadWords();
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Python2" + "'", str5, "Python2");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "4.5.2.1" + "'", str6, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\\1" + "'", str8, "\\1");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "tsetContex" + "'", str12, "tsetContex");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
    }

    @Test
    public void test1199() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1199");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str4 = python2Target1.encodeIntAsCharEscape(64);
        java.lang.String str5 = python2Target1.getLanguage();
        java.lang.String str8 = python2Target1.getTargetStringLiteralFromString("_@", false);
        org.antlr.v4.codegen.CodeGenerator codeGenerator9 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target10 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator9);
        java.lang.String str12 = python2Target10.getImplicitSetLabel("");
        java.lang.String[] strArray13 = python2Target10.targetCharValueEscape;
        python2Target1.targetCharValueEscape = strArray13;
        boolean boolean15 = python2Target1.templatesExist();
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "@" + "'", str4, "@");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Python2" + "'", str5, "Python2");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "_@" + "'", str8, "_@");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "_tset" + "'", str12, "_tset");
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
    }

    @Test
    public void test1200() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1200");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str4 = python2Target1.encodeIntAsCharEscape(64);
        org.stringtemplate.v4.STGroup sTGroup5 = python2Target1.loadTemplates();
        int int6 = python2Target1.getSerializedATNSegmentLimit();
        int int7 = python2Target1.getSerializedATNSegmentLimit();
        java.lang.String str9 = python2Target1.getTargetStringLiteralFromString("\\\"_tset_tset_tsetContext\\\"\\\"Contex");
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "@" + "'", str4, "@");
        org.junit.Assert.assertNotNull(sTGroup5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2147483647 + "'", int6 == 2147483647);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 2147483647 + "'", int7 == 2147483647);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\"\\\\\\\"_tset_tset_tsetContext\\\\\\\"\\\\\\\"Contex\"" + "'", str9, "\"\\\\\\\"_tset_tset_tsetContext\\\\\\\"\\\\\\\"Contex\"");
    }

    @Test
    public void test1201() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1201");
        org.antlr.v4.codegen.target.Python2Target.PythonStringRenderer pythonStringRenderer0 = new org.antlr.v4.codegen.target.Python2Target.PythonStringRenderer();
        java.lang.Object obj1 = null;
        java.util.Locale locale3 = null;
        java.lang.String str4 = pythonStringRenderer0.toString(obj1, "_@", locale3);
        org.antlr.v4.codegen.CodeGenerator codeGenerator5 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target6 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator5);
        java.util.Set<java.lang.String> strSet7 = python2Target6.badWords;
        java.lang.String str9 = python2Target6.encodeIntAsCharEscape(64);
        java.lang.String str10 = python2Target6.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator11 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target12 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator11);
        java.lang.String[] strArray13 = python2Target12.targetCharValueEscape;
        java.lang.String str14 = python2Target12.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup15 = python2Target12.getTemplates();
        python2Target6.templates = sTGroup15;
        org.stringtemplate.v4.STGroup sTGroup17 = python2Target6.templates;
        java.util.Set<java.lang.String> strSet18 = python2Target6.badWords;
        java.util.Set<java.lang.String> strSet19 = python2Target6.getBadWords();
        org.antlr.v4.tool.Grammar grammar20 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator21 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target22 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator21);
        java.util.Set<java.lang.String> strSet23 = python2Target22.badWords;
        java.lang.String str25 = python2Target22.encodeIntAsCharEscape(64);
        java.lang.String str26 = python2Target22.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator27 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target28 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator27);
        java.lang.String[] strArray29 = python2Target28.targetCharValueEscape;
        java.lang.String str30 = python2Target28.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup31 = python2Target28.getTemplates();
        python2Target22.templates = sTGroup31;
        org.stringtemplate.v4.STGroup sTGroup33 = python2Target22.templates;
        java.util.Set<java.lang.String> strSet34 = python2Target22.badWords;
        java.util.Set<java.lang.String> strSet35 = python2Target22.getBadWords();
        boolean boolean36 = python2Target22.supportsOverloadedMethods();
        java.util.Set<java.lang.String> strSet37 = python2Target22.getBadWords();
        org.antlr.v4.tool.Grammar grammar38 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator39 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target40 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator39);
        java.lang.String[] strArray41 = python2Target40.targetCharValueEscape;
        java.lang.String str44 = python2Target40.getTargetStringLiteralFromString("_tset\\1", false);
        org.antlr.v4.tool.Grammar grammar45 = null;
        int[] intArray46 = new int[] {};
        java.lang.String[] strArray47 = python2Target40.getTokenTypesAsTargetLabels(grammar45, intArray46);
        java.lang.String[] strArray48 = python2Target22.getTokenTypesAsTargetLabels(grammar38, intArray46);
        java.lang.String[] strArray49 = python2Target6.getTokenTypesAsTargetLabels(grammar20, intArray46);
        org.antlr.v4.codegen.CodeGenerator codeGenerator50 = null;
        java.lang.String str53 = python2Target6.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator50, "\"Hi!Context\"Context", true);
        org.stringtemplate.v4.STGroup sTGroup54 = python2Target6.templates;
        java.lang.String str56 = python2Target6.getImplicitSetLabel("_\"tsetContex\"");
        java.util.Locale locale58 = null;
        java.lang.String str59 = pythonStringRenderer0.toString((java.lang.Object) str56, "", locale58);
        org.antlr.v4.codegen.CodeGenerator codeGenerator60 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target61 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator60);
        java.lang.String[] strArray62 = python2Target61.targetCharValueEscape;
        java.lang.String str63 = python2Target61.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup64 = python2Target61.getTemplates();
        org.antlr.v4.codegen.CodeGenerator codeGenerator65 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target66 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator65);
        java.util.Set<java.lang.String> strSet67 = python2Target66.badWords;
        python2Target61.badWords = strSet67;
        org.antlr.v4.codegen.CodeGenerator codeGenerator69 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target70 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator69);
        java.util.Set<java.lang.String> strSet71 = python2Target70.badWords;
        java.lang.String str74 = python2Target70.getTargetStringLiteralFromString("hi!", false);
        java.lang.String str76 = python2Target70.getImplicitRuleLabel("@");
        python2Target70.language = "hi!";
        org.antlr.v4.codegen.CodeGenerator codeGenerator79 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target80 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator79);
        java.util.Set<java.lang.String> strSet81 = python2Target80.badWords;
        java.lang.String str83 = python2Target80.encodeIntAsCharEscape(64);
        java.lang.String str84 = python2Target80.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator85 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target86 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator85);
        java.lang.String[] strArray87 = python2Target86.targetCharValueEscape;
        java.lang.String str88 = python2Target86.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup89 = python2Target86.getTemplates();
        python2Target80.templates = sTGroup89;
        org.antlr.v4.codegen.CodeGenerator codeGenerator91 = python2Target80.getCodeGenerator();
        org.stringtemplate.v4.STGroup sTGroup92 = python2Target80.loadTemplates();
        python2Target70.templates = sTGroup92;
        python2Target61.templates = sTGroup92;
        boolean boolean95 = python2Target61.templatesExist();
        java.util.Locale locale97 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str98 = pythonStringRenderer0.toString((java.lang.Object) python2Target61, "\"_tset \"", locale97);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: org.antlr.v4.codegen.target.Python2Target cannot be cast to java.lang.String");
        } catch (java.lang.ClassCastException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "_@" + "'", str4, "_@");
        org.junit.Assert.assertNotNull(strSet7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "@" + "'", str9, "@");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Python2" + "'", str10, "Python2");
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Python2" + "'", str14, "Python2");
        org.junit.Assert.assertNotNull(sTGroup15);
        org.junit.Assert.assertNotNull(sTGroup17);
        org.junit.Assert.assertNotNull(strSet18);
        org.junit.Assert.assertNotNull(strSet19);
        org.junit.Assert.assertNotNull(strSet23);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "@" + "'", str25, "@");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "Python2" + "'", str26, "Python2");
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "Python2" + "'", str30, "Python2");
        org.junit.Assert.assertNotNull(sTGroup31);
        org.junit.Assert.assertNotNull(sTGroup33);
        org.junit.Assert.assertNotNull(strSet34);
        org.junit.Assert.assertNotNull(strSet35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(strSet37);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "_tset\\\\1" + "'", str44, "_tset\\\\1");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[]");
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertNotNull(strArray49);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "\"Hi!Context\\\"Contex\"" + "'", str53, "\"Hi!Context\\\"Contex\"");
        org.junit.Assert.assertNotNull(sTGroup54);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "_tset_\"tsetContex\"" + "'", str56, "_tset_\"tsetContex\"");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "" + "'", str59, "");
        org.junit.Assert.assertNotNull(strArray62);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "Python2" + "'", str63, "Python2");
        org.junit.Assert.assertNotNull(sTGroup64);
        org.junit.Assert.assertNotNull(strSet67);
        org.junit.Assert.assertNotNull(strSet71);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "hi!" + "'", str74, "hi!");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "_@" + "'", str76, "_@");
        org.junit.Assert.assertNotNull(strSet81);
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "@" + "'", str83, "@");
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "Python2" + "'", str84, "Python2");
        org.junit.Assert.assertNotNull(strArray87);
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "Python2" + "'", str88, "Python2");
        org.junit.Assert.assertNotNull(sTGroup89);
        org.junit.Assert.assertNull(codeGenerator91);
        org.junit.Assert.assertNotNull(sTGroup92);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + true + "'", boolean95 == true);
    }

    @Test
    public void test1202() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1202");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String[] strArray2 = python2Target1.targetCharValueEscape;
        org.stringtemplate.v4.STGroup sTGroup3 = python2Target1.loadTemplates();
        org.antlr.v4.codegen.CodeGenerator codeGenerator4 = null;
        java.lang.String str7 = python2Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator4, "", false);
        java.lang.String str9 = python2Target1.getImplicitRuleLabel("");
        java.lang.String str11 = python2Target1.encodeIntAsCharEscape((int) (byte) 10);
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertNotNull(sTGroup3);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "_" + "'", str9, "_");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "\\n" + "'", str11, "\\n");
    }

    @Test
    public void test1203() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1203");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str5 = python2Target1.getTargetStringLiteralFromString("hi!", false);
        int int6 = python2Target1.getInlineTestSetWordSize();
        boolean boolean7 = python2Target1.wantsBaseVisitor();
        java.lang.String str8 = python2Target1.getLanguage();
        boolean boolean9 = python2Target1.wantsBaseVisitor();
        boolean boolean10 = python2Target1.wantsBaseVisitor();
        org.stringtemplate.v4.STGroup sTGroup11 = python2Target1.templates;
        org.antlr.v4.codegen.CodeGenerator codeGenerator12 = python2Target1.gen;
        java.util.Set<java.lang.String> strSet13 = python2Target1.badWords;
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 64 + "'", int6 == 64);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Python2" + "'", str8, "Python2");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(sTGroup11);
        org.junit.Assert.assertNull(codeGenerator12);
        org.junit.Assert.assertNotNull(strSet13);
    }

    @Test
    public void test1204() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1204");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String[] strArray2 = python2Target1.targetCharValueEscape;
        java.lang.String str3 = python2Target1.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup4 = python2Target1.templates;
        java.lang.String str6 = python2Target1.getTargetStringLiteralFromString("4.5.2.1");
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = null;
        python2Target1.gen = codeGenerator7;
        java.lang.String str9 = python2Target1.language;
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target11 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator10);
        java.util.Set<java.lang.String> strSet12 = python2Target11.badWords;
        java.lang.String str14 = python2Target11.encodeIntAsCharEscape(64);
        java.lang.String str15 = python2Target11.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator16 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target17 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator16);
        java.lang.String[] strArray18 = python2Target17.targetCharValueEscape;
        java.lang.String str19 = python2Target17.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup20 = python2Target17.getTemplates();
        python2Target11.templates = sTGroup20;
        org.stringtemplate.v4.STGroup sTGroup22 = python2Target11.templates;
        java.util.Set<java.lang.String> strSet23 = python2Target11.badWords;
        java.util.Set<java.lang.String> strSet24 = python2Target11.getBadWords();
        boolean boolean25 = python2Target11.supportsOverloadedMethods();
        java.util.Set<java.lang.String> strSet26 = python2Target11.getBadWords();
        python2Target1.badWords = strSet26;
        python2Target1.addBadWords();
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Python2" + "'", str3, "Python2");
        org.junit.Assert.assertNull(sTGroup4);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\"4.5.2.1\"" + "'", str6, "\"4.5.2.1\"");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Python2" + "'", str9, "Python2");
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "@" + "'", str14, "@");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Python2" + "'", str15, "Python2");
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Python2" + "'", str19, "Python2");
        org.junit.Assert.assertNotNull(sTGroup20);
        org.junit.Assert.assertNotNull(sTGroup22);
        org.junit.Assert.assertNotNull(strSet23);
        org.junit.Assert.assertNotNull(strSet24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(strSet26);
    }

    @Test
    public void test1205() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1205");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String[] strArray2 = python2Target1.targetCharValueEscape;
        java.lang.String str5 = python2Target1.getTargetStringLiteralFromString("Python2", false);
        python2Target1.addBadWords();
        java.lang.String str8 = python2Target1.getListLabel("_tset\"Hi!Context\"");
        org.stringtemplate.v4.STGroup sTGroup9 = python2Target1.getTemplates();
        java.lang.Class<?> wildcardClass10 = sTGroup9.getClass();
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Python2" + "'", str5, "Python2");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "_tset\"Hi!Context\"" + "'", str8, "_tset\"Hi!Context\"");
        org.junit.Assert.assertNotNull(sTGroup9);
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test1206() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1206");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str4 = python2Target1.encodeIntAsCharEscape(64);
        java.lang.String str5 = python2Target1.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target7 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator6);
        java.lang.String[] strArray8 = python2Target7.targetCharValueEscape;
        java.lang.String str9 = python2Target7.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup10 = python2Target7.getTemplates();
        python2Target1.templates = sTGroup10;
        java.util.Set<java.lang.String> strSet12 = python2Target1.getBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator13 = python2Target1.getCodeGenerator();
        java.util.Set<java.lang.String> strSet14 = python2Target1.getBadWords();
        boolean boolean15 = python2Target1.wantsBaseListener();
        java.lang.String str18 = python2Target1.getTargetStringLiteralFromString("\"\\\"hi!\\\"\"", true);
        org.stringtemplate.v4.STGroup sTGroup19 = python2Target1.getTemplates();
        org.antlr.v4.codegen.CodeGenerator codeGenerator20 = python2Target1.gen;
        int int21 = python2Target1.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet22 = python2Target1.badWords;
        java.lang.String str23 = python2Target1.language;
        org.antlr.v4.tool.Grammar grammar24 = null;
        org.stringtemplate.v4.ST sT25 = null;
        python2Target1.genRecognizerHeaderFile(grammar24, sT25, "_\"_tset\\\\\\\"\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"hi!\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"\\\\\\\"\"");
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "@" + "'", str4, "@");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Python2" + "'", str5, "Python2");
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Python2" + "'", str9, "Python2");
        org.junit.Assert.assertNotNull(sTGroup10);
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertNull(codeGenerator13);
        org.junit.Assert.assertNotNull(strSet14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "\"\\\"\\\\\\\"hi!\\\\\\\"\\\"\"" + "'", str18, "\"\\\"\\\\\\\"hi!\\\\\\\"\\\"\"");
        org.junit.Assert.assertNotNull(sTGroup19);
        org.junit.Assert.assertNull(codeGenerator20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 64 + "'", int21 == 64);
        org.junit.Assert.assertNotNull(strSet22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "Python2" + "'", str23, "Python2");
    }

    @Test
    public void test1207() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1207");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str4 = python2Target1.encodeIntAsCharEscape(64);
        java.lang.String str6 = python2Target1.getAltLabelContextStructName("Python2");
        boolean boolean7 = python2Target1.supportsOverloadedMethods();
        org.antlr.v4.tool.Grammar grammar8 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator9 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target10 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator9);
        java.lang.String[] strArray11 = python2Target10.targetCharValueEscape;
        java.lang.String str12 = python2Target10.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup13 = python2Target10.getTemplates();
        org.antlr.v4.codegen.CodeGenerator codeGenerator14 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target15 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator14);
        java.util.Set<java.lang.String> strSet16 = python2Target15.badWords;
        python2Target10.badWords = strSet16;
        org.antlr.v4.tool.Grammar grammar18 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator19 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target20 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator19);
        java.util.Set<java.lang.String> strSet21 = python2Target20.badWords;
        java.lang.String str23 = python2Target20.encodeIntAsCharEscape(64);
        java.lang.String str24 = python2Target20.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator25 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target26 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator25);
        java.lang.String[] strArray27 = python2Target26.targetCharValueEscape;
        java.lang.String str28 = python2Target26.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup29 = python2Target26.getTemplates();
        python2Target20.templates = sTGroup29;
        org.stringtemplate.v4.STGroup sTGroup31 = python2Target20.templates;
        java.util.Set<java.lang.String> strSet32 = python2Target20.badWords;
        java.util.Set<java.lang.String> strSet33 = python2Target20.getBadWords();
        boolean boolean34 = python2Target20.supportsOverloadedMethods();
        java.util.Set<java.lang.String> strSet35 = python2Target20.getBadWords();
        org.antlr.v4.tool.Grammar grammar36 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator37 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target38 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator37);
        java.lang.String[] strArray39 = python2Target38.targetCharValueEscape;
        java.lang.String str42 = python2Target38.getTargetStringLiteralFromString("_tset\\1", false);
        org.antlr.v4.tool.Grammar grammar43 = null;
        int[] intArray44 = new int[] {};
        java.lang.String[] strArray45 = python2Target38.getTokenTypesAsTargetLabels(grammar43, intArray44);
        java.lang.String[] strArray46 = python2Target20.getTokenTypesAsTargetLabels(grammar36, intArray44);
        java.lang.String[] strArray47 = python2Target10.getTokenTypesAsTargetLabels(grammar18, intArray44);
        java.lang.String[] strArray48 = python2Target1.getTokenTypesAsTargetLabels(grammar8, intArray44);
        java.lang.String str49 = python2Target1.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator50 = null;
        python2Target1.gen = codeGenerator50;
        java.lang.String str53 = python2Target1.encodeIntAsCharEscape((int) ' ');
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "@" + "'", str4, "@");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Python2Context" + "'", str6, "Python2Context");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Python2" + "'", str12, "Python2");
        org.junit.Assert.assertNotNull(sTGroup13);
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertNotNull(strSet21);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "@" + "'", str23, "@");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "Python2" + "'", str24, "Python2");
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "Python2" + "'", str28, "Python2");
        org.junit.Assert.assertNotNull(sTGroup29);
        org.junit.Assert.assertNotNull(sTGroup31);
        org.junit.Assert.assertNotNull(strSet32);
        org.junit.Assert.assertNotNull(strSet33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(strSet35);
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "_tset\\\\1" + "'", str42, "_tset\\\\1");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[]");
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "4.5.2.1" + "'", str49, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + " " + "'", str53, " ");
    }

    @Test
    public void test1208() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1208");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String[] strArray2 = python2Target1.targetCharValueEscape;
        java.lang.String str5 = python2Target1.getTargetStringLiteralFromString("Python2", false);
        java.lang.String str6 = python2Target1.getVersion();
        java.lang.String str7 = python2Target1.language;
        java.util.Set<java.lang.String> strSet8 = python2Target1.getBadWords();
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Python2" + "'", str5, "Python2");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "4.5.2.1" + "'", str6, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Python2" + "'", str7, "Python2");
        org.junit.Assert.assertNotNull(strSet8);
    }

    @Test
    public void test1209() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1209");
        java.lang.String str1 = org.stringtemplate.v4.StringRenderer.escapeHTML("\"\\\\\\\"\\\\\\\\\\\\\\\"4.5.2.1\\\\\\\\\\\\\\\"\\\\\\\"\"");
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "\"\\\\\\\"\\\\\\\\\\\\\\\"4.5.2.1\\\\\\\\\\\\\\\"\\\\\\\"\"" + "'", str1, "\"\\\\\\\"\\\\\\\\\\\\\\\"4.5.2.1\\\\\\\\\\\\\\\"\\\\\\\"\"");
    }

    @Test
    public void test1210() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1210");
        org.antlr.v4.codegen.target.Python2Target python2Target0 = new org.antlr.v4.codegen.target.Python2Target();
        org.antlr.v4.codegen.CodeGenerator codeGenerator1 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target2 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator1);
        java.util.Set<java.lang.String> strSet3 = python2Target2.badWords;
        java.lang.String str5 = python2Target2.encodeIntAsCharEscape(64);
        java.lang.String str6 = python2Target2.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target8 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator7);
        java.lang.String[] strArray9 = python2Target8.targetCharValueEscape;
        java.lang.String str10 = python2Target8.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup11 = python2Target8.getTemplates();
        python2Target2.templates = sTGroup11;
        org.stringtemplate.v4.STGroup sTGroup13 = python2Target2.templates;
        java.util.Set<java.lang.String> strSet14 = python2Target2.badWords;
        java.util.Set<java.lang.String> strSet15 = python2Target2.getBadWords();
        boolean boolean16 = python2Target2.supportsOverloadedMethods();
        java.util.Set<java.lang.String> strSet17 = python2Target2.getBadWords();
        org.stringtemplate.v4.STGroup sTGroup18 = python2Target2.getTemplates();
        python2Target0.templates = sTGroup18;
        java.lang.String str21 = python2Target0.getImplicitSetLabel("_tset_tsetContext");
        java.util.Set<java.lang.String> strSet22 = python2Target0.getBadWords();
        python2Target0.addBadWords();
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "@" + "'", str5, "@");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Python2" + "'", str6, "Python2");
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Python2" + "'", str10, "Python2");
        org.junit.Assert.assertNotNull(sTGroup11);
        org.junit.Assert.assertNotNull(sTGroup13);
        org.junit.Assert.assertNotNull(strSet14);
        org.junit.Assert.assertNotNull(strSet15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(strSet17);
        org.junit.Assert.assertNotNull(sTGroup18);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "_tset_tset_tsetContext" + "'", str21, "_tset_tset_tsetContext");
        org.junit.Assert.assertNotNull(strSet22);
    }

    @Test
    public void test1211() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1211");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str5 = python2Target1.getTargetStringLiteralFromString("hi!", false);
        java.lang.String str7 = python2Target1.getImplicitRuleLabel("@");
        python2Target1.language = "hi!";
        java.util.Set<java.lang.String> strSet10 = python2Target1.getBadWords();
        org.antlr.v4.tool.Grammar grammar11 = null;
        org.stringtemplate.v4.ST sT12 = null;
        python2Target1.genRecognizerHeaderFile(grammar11, sT12, "_@");
        org.antlr.v4.tool.Grammar grammar15 = null;
        org.stringtemplate.v4.ST sT16 = null;
        // The following exception was thrown during execution in test generation
        try {
            python2Target1.genFile(grammar15, sT16, "_Contex");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "_@" + "'", str7, "_@");
        org.junit.Assert.assertNotNull(strSet10);
    }

    @Test
    public void test1212() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1212");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String[] strArray2 = python2Target1.targetCharValueEscape;
        org.antlr.v4.tool.Grammar grammar3 = null;
        org.stringtemplate.v4.ST sT4 = null;
        python2Target1.genRecognizerHeaderFile(grammar3, sT4, "hi!");
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = null;
        java.lang.String str10 = python2Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator7, "_tsetContext", true);
        boolean boolean11 = python2Target1.templatesExist();
        org.antlr.v4.tool.ast.GrammarAST grammarAST12 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean13 = python2Target1.grammarSymbolCausesIssueInGeneratedCode(grammarAST12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\"tsetContex\"" + "'", str10, "\"tsetContex\"");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
    }

    @Test
    public void test1213() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1213");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str5 = python2Target1.getTargetStringLiteralFromString("hi!", false);
        java.lang.String str7 = python2Target1.getImplicitRuleLabel("@");
        python2Target1.language = "hi!";
        java.util.Set<java.lang.String> strSet10 = python2Target1.getBadWords();
        boolean boolean11 = python2Target1.wantsBaseListener();
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "_@" + "'", str7, "_@");
        org.junit.Assert.assertNotNull(strSet10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test1214() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1214");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String[] strArray2 = python2Target1.targetCharValueEscape;
        java.lang.String str5 = python2Target1.getTargetStringLiteralFromString("Python2", false);
        java.lang.String str6 = python2Target1.getVersion();
        java.lang.String str8 = python2Target1.encodeIntAsCharEscape((int) (short) 1);
        org.antlr.v4.codegen.CodeGenerator codeGenerator9 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target10 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator9);
        java.util.Set<java.lang.String> strSet11 = python2Target10.badWords;
        java.lang.String str13 = python2Target10.encodeIntAsCharEscape(64);
        java.lang.String str14 = python2Target10.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator15 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target16 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator15);
        java.lang.String[] strArray17 = python2Target16.targetCharValueEscape;
        java.lang.String str18 = python2Target16.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup19 = python2Target16.getTemplates();
        python2Target10.templates = sTGroup19;
        java.util.Set<java.lang.String> strSet21 = python2Target10.getBadWords();
        python2Target1.badWords = strSet21;
        java.lang.String str24 = python2Target1.getAltLabelContextStructName("hi!");
        java.lang.String str25 = python2Target1.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator26 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target27 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator26);
        java.lang.String[] strArray28 = python2Target27.targetCharValueEscape;
        java.lang.String str29 = python2Target27.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup30 = python2Target27.getTemplates();
        python2Target1.templates = sTGroup30;
        java.lang.String[] strArray33 = new java.lang.String[] { "Python2" };
        org.antlr.v4.codegen.target.Python2Target.python2Keywords = strArray33;
        org.antlr.v4.codegen.target.Python2Target.python2Keywords = strArray33;
        python2Target1.targetCharValueEscape = strArray33;
        org.antlr.v4.codegen.CodeGenerator codeGenerator37 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target38 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator37);
        java.lang.String[] strArray39 = python2Target38.targetCharValueEscape;
        java.lang.String str40 = python2Target38.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup41 = python2Target38.getTemplates();
        org.antlr.v4.codegen.CodeGenerator codeGenerator42 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target43 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator42);
        java.util.Set<java.lang.String> strSet44 = python2Target43.badWords;
        python2Target38.badWords = strSet44;
        org.antlr.v4.codegen.CodeGenerator codeGenerator46 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target47 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator46);
        java.util.Set<java.lang.String> strSet48 = python2Target47.badWords;
        java.lang.String str51 = python2Target47.getTargetStringLiteralFromString("hi!", false);
        java.lang.String str53 = python2Target47.getImplicitRuleLabel("@");
        python2Target47.language = "hi!";
        org.antlr.v4.codegen.CodeGenerator codeGenerator56 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target57 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator56);
        java.util.Set<java.lang.String> strSet58 = python2Target57.badWords;
        java.lang.String str60 = python2Target57.encodeIntAsCharEscape(64);
        java.lang.String str61 = python2Target57.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator62 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target63 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator62);
        java.lang.String[] strArray64 = python2Target63.targetCharValueEscape;
        java.lang.String str65 = python2Target63.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup66 = python2Target63.getTemplates();
        python2Target57.templates = sTGroup66;
        org.antlr.v4.codegen.CodeGenerator codeGenerator68 = python2Target57.getCodeGenerator();
        org.stringtemplate.v4.STGroup sTGroup69 = python2Target57.loadTemplates();
        python2Target47.templates = sTGroup69;
        python2Target38.templates = sTGroup69;
        org.antlr.v4.codegen.CodeGenerator codeGenerator72 = null;
        java.lang.String str75 = python2Target38.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator72, "@", false);
        org.stringtemplate.v4.STGroup sTGroup76 = python2Target38.loadTemplates();
        python2Target1.templates = sTGroup76;
        python2Target1.language = "\"Hi!Context\"Context";
        java.lang.String str82 = python2Target1.getTargetStringLiteralFromString("_hi!", false);
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Python2" + "'", str5, "Python2");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "4.5.2.1" + "'", str6, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\\1" + "'", str8, "\\1");
        org.junit.Assert.assertNotNull(strSet11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "@" + "'", str13, "@");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Python2" + "'", str14, "Python2");
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Python2" + "'", str18, "Python2");
        org.junit.Assert.assertNotNull(sTGroup19);
        org.junit.Assert.assertNotNull(strSet21);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "Hi!Context" + "'", str24, "Hi!Context");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "4.5.2.1" + "'", str25, "4.5.2.1");
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "Python2" + "'", str29, "Python2");
        org.junit.Assert.assertNotNull(sTGroup30);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "Python2" + "'", str40, "Python2");
        org.junit.Assert.assertNotNull(sTGroup41);
        org.junit.Assert.assertNotNull(strSet44);
        org.junit.Assert.assertNotNull(strSet48);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "hi!" + "'", str51, "hi!");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "_@" + "'", str53, "_@");
        org.junit.Assert.assertNotNull(strSet58);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "@" + "'", str60, "@");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "Python2" + "'", str61, "Python2");
        org.junit.Assert.assertNotNull(strArray64);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "Python2" + "'", str65, "Python2");
        org.junit.Assert.assertNotNull(sTGroup66);
        org.junit.Assert.assertNull(codeGenerator68);
        org.junit.Assert.assertNotNull(sTGroup69);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "" + "'", str75, "");
        org.junit.Assert.assertNotNull(sTGroup76);
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "_hi!" + "'", str82, "_hi!");
    }

    @Test
    public void test1215() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1215");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str4 = python2Target1.encodeIntAsCharEscape(64);
        java.lang.String str5 = python2Target1.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target7 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator6);
        java.lang.String[] strArray8 = python2Target7.targetCharValueEscape;
        java.lang.String str9 = python2Target7.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup10 = python2Target7.getTemplates();
        python2Target1.templates = sTGroup10;
        java.util.Set<java.lang.String> strSet12 = python2Target1.getBadWords();
        python2Target1.addBadWords();
        java.lang.String str16 = python2Target1.getTargetStringLiteralFromString("\"_tset\"", true);
        org.stringtemplate.v4.STGroup sTGroup17 = python2Target1.templates;
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "@" + "'", str4, "@");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Python2" + "'", str5, "Python2");
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Python2" + "'", str9, "Python2");
        org.junit.Assert.assertNotNull(sTGroup10);
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "\"\\\"_tset\\\"\"" + "'", str16, "\"\\\"_tset\\\"\"");
        org.junit.Assert.assertNotNull(sTGroup17);
    }

    @Test
    public void test1216() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1216");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        boolean boolean3 = python2Target1.wantsBaseVisitor();
        org.stringtemplate.v4.STGroup sTGroup4 = python2Target1.loadTemplates();
        org.stringtemplate.v4.STGroup sTGroup5 = python2Target1.loadTemplates();
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = null;
        python2Target1.gen = codeGenerator6;
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = null;
        java.lang.String str11 = python2Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator8, "_\"_tset\"", false);
        org.stringtemplate.v4.STGroup sTGroup12 = python2Target1.getTemplates();
        java.lang.String str14 = python2Target1.getAltLabelContextStructName("\"Python2\"");
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(sTGroup4);
        org.junit.Assert.assertNotNull(sTGroup5);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "\\\"_tset" + "'", str11, "\\\"_tset");
        org.junit.Assert.assertNotNull(sTGroup12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "\"Python2\"Context" + "'", str14, "\"Python2\"Context");
    }

    @Test
    public void test1217() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1217");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str4 = python2Target1.encodeIntAsCharEscape(64);
        java.lang.String str5 = python2Target1.getLanguage();
        java.lang.String str7 = python2Target1.getImplicitSetLabel("");
        java.lang.String str9 = python2Target1.getImplicitSetLabel("\\n");
        org.antlr.v4.tool.Grammar grammar10 = null;
        org.stringtemplate.v4.ST sT11 = null;
        python2Target1.genRecognizerHeaderFile(grammar10, sT11, "\"4.5.2.1\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator14 = null;
        java.lang.String str17 = python2Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator14, "\\\"\\\"", false);
        java.lang.String str19 = python2Target1.getImplicitRuleLabel("\"d\"Context");
        python2Target1.addBadWords();
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "@" + "'", str4, "@");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Python2" + "'", str5, "Python2");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "_tset" + "'", str7, "_tset");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "_tset\\n" + "'", str9, "_tset\\n");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "\\\"\\\"" + "'", str17, "\\\"\\\"");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "_\"d\"Context" + "'", str19, "_\"d\"Context");
    }

    @Test
    public void test1218() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1218");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str4 = python2Target1.encodeIntAsCharEscape(64);
        java.lang.String str5 = python2Target1.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target7 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator6);
        java.lang.String[] strArray8 = python2Target7.targetCharValueEscape;
        java.lang.String str9 = python2Target7.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup10 = python2Target7.getTemplates();
        python2Target1.templates = sTGroup10;
        org.stringtemplate.v4.STGroup sTGroup12 = python2Target1.templates;
        java.util.Set<java.lang.String> strSet13 = python2Target1.badWords;
        java.util.Set<java.lang.String> strSet14 = python2Target1.getBadWords();
        boolean boolean15 = python2Target1.supportsOverloadedMethods();
        boolean boolean16 = python2Target1.templatesExist();
        org.antlr.v4.codegen.CodeGenerator codeGenerator17 = null;
        java.lang.String str20 = python2Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator17, "\"_tset\\\\\\\"\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"hi!\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"\\\\\\\"\"", false);
        org.antlr.v4.tool.Grammar grammar21 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str23 = python2Target1.getTokenTypeAsTargetLabel(grammar21, (int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "@" + "'", str4, "@");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Python2" + "'", str5, "Python2");
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Python2" + "'", str9, "Python2");
        org.junit.Assert.assertNotNull(sTGroup10);
        org.junit.Assert.assertNotNull(sTGroup12);
        org.junit.Assert.assertNotNull(strSet13);
        org.junit.Assert.assertNotNull(strSet14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "_tset\\\\\\\"\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"hi!\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"\\\\\\\"" + "'", str20, "_tset\\\\\\\"\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"hi!\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"\\\\\\\"");
    }

    @Test
    public void test1219() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1219");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        boolean boolean3 = python2Target1.wantsBaseVisitor();
        org.stringtemplate.v4.STGroup sTGroup4 = python2Target1.loadTemplates();
        org.stringtemplate.v4.STGroup sTGroup5 = python2Target1.getTemplates();
        java.util.Set<java.lang.String> strSet6 = python2Target1.badWords;
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target8 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator7);
        java.util.Set<java.lang.String> strSet9 = python2Target8.badWords;
        java.lang.String str12 = python2Target8.getTargetStringLiteralFromString("hi!", false);
        java.lang.String str14 = python2Target8.getTargetStringLiteralFromString("\"hi!\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator15 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target16 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator15);
        java.util.Set<java.lang.String> strSet17 = python2Target16.badWords;
        java.lang.String str19 = python2Target16.encodeIntAsCharEscape(64);
        java.lang.String str20 = python2Target16.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator21 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target22 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator21);
        java.lang.String[] strArray23 = python2Target22.targetCharValueEscape;
        java.lang.String str24 = python2Target22.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup25 = python2Target22.getTemplates();
        python2Target16.templates = sTGroup25;
        org.antlr.v4.tool.Grammar grammar27 = null;
        org.stringtemplate.v4.ST sT28 = null;
        python2Target16.genRecognizerHeaderFile(grammar27, sT28, "\"_tset\"");
        java.util.Set<java.lang.String> strSet31 = python2Target16.getBadWords();
        python2Target8.badWords = strSet31;
        python2Target1.badWords = strSet31;
        org.antlr.v4.codegen.CodeGenerator codeGenerator34 = null;
        python2Target1.gen = codeGenerator34;
        org.stringtemplate.v4.STGroup sTGroup36 = python2Target1.getTemplates();
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(sTGroup4);
        org.junit.Assert.assertNotNull(sTGroup5);
        org.junit.Assert.assertNotNull(strSet6);
        org.junit.Assert.assertNotNull(strSet9);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "\"\\\"hi!\\\"\"" + "'", str14, "\"\\\"hi!\\\"\"");
        org.junit.Assert.assertNotNull(strSet17);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "@" + "'", str19, "@");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "Python2" + "'", str20, "Python2");
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "Python2" + "'", str24, "Python2");
        org.junit.Assert.assertNotNull(sTGroup25);
        org.junit.Assert.assertNotNull(strSet31);
        org.junit.Assert.assertNotNull(sTGroup36);
    }

    @Test
    public void test1220() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1220");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str5 = python2Target1.getTargetStringLiteralFromString("hi!", false);
        java.lang.String str7 = python2Target1.getTargetStringLiteralFromString("\"hi!\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = null;
        python2Target1.gen = codeGenerator8;
        java.lang.String[] strArray10 = null;
        python2Target1.targetCharValueEscape = strArray10;
        org.stringtemplate.v4.STGroup sTGroup12 = python2Target1.getTemplates();
        java.lang.String[] strArray13 = python2Target1.targetCharValueEscape;
        org.antlr.v4.codegen.CodeGenerator codeGenerator14 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target15 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator14);
        java.lang.String[] strArray16 = python2Target15.targetCharValueEscape;
        java.lang.String str19 = python2Target15.getTargetStringLiteralFromString("Python2", false);
        java.lang.String str20 = python2Target15.getVersion();
        java.lang.String str22 = python2Target15.encodeIntAsCharEscape((int) (short) 1);
        org.antlr.v4.codegen.CodeGenerator codeGenerator23 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target24 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator23);
        java.util.Set<java.lang.String> strSet25 = python2Target24.badWords;
        java.lang.String str27 = python2Target24.encodeIntAsCharEscape(64);
        java.lang.String str28 = python2Target24.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator29 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target30 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator29);
        java.lang.String[] strArray31 = python2Target30.targetCharValueEscape;
        java.lang.String str32 = python2Target30.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup33 = python2Target30.getTemplates();
        python2Target24.templates = sTGroup33;
        java.util.Set<java.lang.String> strSet35 = python2Target24.getBadWords();
        python2Target15.badWords = strSet35;
        python2Target1.badWords = strSet35;
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "\"\\\"hi!\\\"\"" + "'", str7, "\"\\\"hi!\\\"\"");
        org.junit.Assert.assertNotNull(sTGroup12);
        org.junit.Assert.assertNull(strArray13);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Python2" + "'", str19, "Python2");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "4.5.2.1" + "'", str20, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "\\1" + "'", str22, "\\1");
        org.junit.Assert.assertNotNull(strSet25);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "@" + "'", str27, "@");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "Python2" + "'", str28, "Python2");
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "Python2" + "'", str32, "Python2");
        org.junit.Assert.assertNotNull(sTGroup33);
        org.junit.Assert.assertNotNull(strSet35);
    }

    @Test
    public void test1221() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1221");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String[] strArray2 = python2Target1.targetCharValueEscape;
        java.lang.String str5 = python2Target1.getTargetStringLiteralFromString("_tset\\1", false);
        java.util.Set<java.lang.String> strSet6 = python2Target1.badWords;
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target8 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator7);
        java.lang.String[] strArray9 = python2Target8.targetCharValueEscape;
        java.lang.String str10 = python2Target8.getLanguage();
        java.lang.String str13 = python2Target8.getTargetStringLiteralFromString("_tset", true);
        java.lang.String str15 = python2Target8.getTargetStringLiteralFromString("\"4.5.2.1\"");
        java.lang.String[] strArray16 = python2Target8.targetCharValueEscape;
        org.antlr.v4.codegen.target.Python2Target.python2Keywords = strArray16;
        python2Target1.targetCharValueEscape = strArray16;
        org.antlr.v4.codegen.CodeGenerator codeGenerator19 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target20 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator19);
        java.util.Set<java.lang.String> strSet21 = python2Target20.badWords;
        java.lang.String str23 = python2Target20.encodeIntAsCharEscape(64);
        java.lang.String str25 = python2Target20.getAltLabelContextStructName("Python2");
        boolean boolean26 = python2Target20.supportsOverloadedMethods();
        java.lang.String str28 = python2Target20.encodeIntAsCharEscape(1);
        org.stringtemplate.v4.STGroup sTGroup29 = python2Target20.loadTemplates();
        org.stringtemplate.v4.STGroup sTGroup30 = python2Target20.loadTemplates();
        org.stringtemplate.v4.STGroup sTGroup31 = python2Target20.loadTemplates();
        python2Target1.templates = sTGroup31;
        java.lang.Class<?> wildcardClass33 = python2Target1.getClass();
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "_tset\\\\1" + "'", str5, "_tset\\\\1");
        org.junit.Assert.assertNotNull(strSet6);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Python2" + "'", str10, "Python2");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "\"_tset\"" + "'", str13, "\"_tset\"");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "\"\\\"4.5.2.1\\\"\"" + "'", str15, "\"\\\"4.5.2.1\\\"\"");
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertNotNull(strSet21);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "@" + "'", str23, "@");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Python2Context" + "'", str25, "Python2Context");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "\\1" + "'", str28, "\\1");
        org.junit.Assert.assertNotNull(sTGroup29);
        org.junit.Assert.assertNotNull(sTGroup30);
        org.junit.Assert.assertNotNull(sTGroup31);
        org.junit.Assert.assertNotNull(wildcardClass33);
    }

    @Test
    public void test1222() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1222");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String[] strArray2 = python2Target1.targetCharValueEscape;
        java.lang.String str5 = python2Target1.getTargetStringLiteralFromString("Python2", false);
        java.lang.String str6 = python2Target1.getVersion();
        java.lang.String str8 = python2Target1.encodeIntAsCharEscape((int) (short) 1);
        org.antlr.v4.codegen.CodeGenerator codeGenerator9 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target10 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator9);
        java.util.Set<java.lang.String> strSet11 = python2Target10.badWords;
        java.lang.String str13 = python2Target10.encodeIntAsCharEscape(64);
        java.lang.String str14 = python2Target10.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator15 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target16 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator15);
        java.lang.String[] strArray17 = python2Target16.targetCharValueEscape;
        java.lang.String str18 = python2Target16.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup19 = python2Target16.getTemplates();
        python2Target10.templates = sTGroup19;
        java.util.Set<java.lang.String> strSet21 = python2Target10.getBadWords();
        python2Target1.badWords = strSet21;
        java.lang.String str24 = python2Target1.getAltLabelContextStructName("hi!");
        java.lang.String str25 = python2Target1.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator26 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target27 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator26);
        java.lang.String[] strArray28 = python2Target27.targetCharValueEscape;
        java.lang.String str29 = python2Target27.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup30 = python2Target27.getTemplates();
        python2Target1.templates = sTGroup30;
        java.lang.String[] strArray33 = new java.lang.String[] { "Python2" };
        org.antlr.v4.codegen.target.Python2Target.python2Keywords = strArray33;
        org.antlr.v4.codegen.target.Python2Target.python2Keywords = strArray33;
        python2Target1.targetCharValueEscape = strArray33;
        org.antlr.v4.codegen.CodeGenerator codeGenerator37 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target38 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator37);
        java.lang.String[] strArray39 = python2Target38.targetCharValueEscape;
        java.lang.String str40 = python2Target38.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup41 = python2Target38.getTemplates();
        org.antlr.v4.codegen.CodeGenerator codeGenerator42 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target43 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator42);
        java.util.Set<java.lang.String> strSet44 = python2Target43.badWords;
        python2Target38.badWords = strSet44;
        org.antlr.v4.codegen.CodeGenerator codeGenerator46 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target47 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator46);
        java.util.Set<java.lang.String> strSet48 = python2Target47.badWords;
        java.lang.String str51 = python2Target47.getTargetStringLiteralFromString("hi!", false);
        java.lang.String str53 = python2Target47.getImplicitRuleLabel("@");
        python2Target47.language = "hi!";
        org.antlr.v4.codegen.CodeGenerator codeGenerator56 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target57 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator56);
        java.util.Set<java.lang.String> strSet58 = python2Target57.badWords;
        java.lang.String str60 = python2Target57.encodeIntAsCharEscape(64);
        java.lang.String str61 = python2Target57.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator62 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target63 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator62);
        java.lang.String[] strArray64 = python2Target63.targetCharValueEscape;
        java.lang.String str65 = python2Target63.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup66 = python2Target63.getTemplates();
        python2Target57.templates = sTGroup66;
        org.antlr.v4.codegen.CodeGenerator codeGenerator68 = python2Target57.getCodeGenerator();
        org.stringtemplate.v4.STGroup sTGroup69 = python2Target57.loadTemplates();
        python2Target47.templates = sTGroup69;
        python2Target38.templates = sTGroup69;
        org.antlr.v4.codegen.CodeGenerator codeGenerator72 = null;
        java.lang.String str75 = python2Target38.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator72, "@", false);
        org.stringtemplate.v4.STGroup sTGroup76 = python2Target38.loadTemplates();
        python2Target1.templates = sTGroup76;
        python2Target1.language = "\"Hi!Context\"Context";
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str81 = python2Target1.getElementListName("\\\"d\\\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Python2" + "'", str5, "Python2");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "4.5.2.1" + "'", str6, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\\1" + "'", str8, "\\1");
        org.junit.Assert.assertNotNull(strSet11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "@" + "'", str13, "@");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Python2" + "'", str14, "Python2");
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Python2" + "'", str18, "Python2");
        org.junit.Assert.assertNotNull(sTGroup19);
        org.junit.Assert.assertNotNull(strSet21);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "Hi!Context" + "'", str24, "Hi!Context");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "4.5.2.1" + "'", str25, "4.5.2.1");
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "Python2" + "'", str29, "Python2");
        org.junit.Assert.assertNotNull(sTGroup30);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "Python2" + "'", str40, "Python2");
        org.junit.Assert.assertNotNull(sTGroup41);
        org.junit.Assert.assertNotNull(strSet44);
        org.junit.Assert.assertNotNull(strSet48);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "hi!" + "'", str51, "hi!");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "_@" + "'", str53, "_@");
        org.junit.Assert.assertNotNull(strSet58);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "@" + "'", str60, "@");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "Python2" + "'", str61, "Python2");
        org.junit.Assert.assertNotNull(strArray64);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "Python2" + "'", str65, "Python2");
        org.junit.Assert.assertNotNull(sTGroup66);
        org.junit.Assert.assertNull(codeGenerator68);
        org.junit.Assert.assertNotNull(sTGroup69);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "" + "'", str75, "");
        org.junit.Assert.assertNotNull(sTGroup76);
    }

    @Test
    public void test1223() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1223");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str4 = python2Target1.encodeIntAsCharEscape(64);
        java.lang.String str5 = python2Target1.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup6 = python2Target1.getTemplates();
        java.util.Set<java.lang.String> strSet7 = python2Target1.getBadWords();
        java.lang.String str8 = python2Target1.getLanguage();
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "@" + "'", str4, "@");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Python2" + "'", str5, "Python2");
        org.junit.Assert.assertNotNull(sTGroup6);
        org.junit.Assert.assertNotNull(strSet7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Python2" + "'", str8, "Python2");
    }

    @Test
    public void test1224() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1224");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        boolean boolean3 = python2Target1.wantsBaseVisitor();
        org.stringtemplate.v4.STGroup sTGroup4 = python2Target1.loadTemplates();
        org.stringtemplate.v4.STGroup sTGroup5 = python2Target1.getTemplates();
        java.util.Set<java.lang.String> strSet6 = python2Target1.badWords;
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target8 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator7);
        java.util.Set<java.lang.String> strSet9 = python2Target8.badWords;
        java.lang.String str12 = python2Target8.getTargetStringLiteralFromString("hi!", false);
        java.lang.String str14 = python2Target8.getTargetStringLiteralFromString("\"hi!\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator15 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target16 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator15);
        java.util.Set<java.lang.String> strSet17 = python2Target16.badWords;
        java.lang.String str19 = python2Target16.encodeIntAsCharEscape(64);
        java.lang.String str20 = python2Target16.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator21 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target22 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator21);
        java.lang.String[] strArray23 = python2Target22.targetCharValueEscape;
        java.lang.String str24 = python2Target22.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup25 = python2Target22.getTemplates();
        python2Target16.templates = sTGroup25;
        org.antlr.v4.tool.Grammar grammar27 = null;
        org.stringtemplate.v4.ST sT28 = null;
        python2Target16.genRecognizerHeaderFile(grammar27, sT28, "\"_tset\"");
        java.util.Set<java.lang.String> strSet31 = python2Target16.getBadWords();
        python2Target8.badWords = strSet31;
        python2Target1.badWords = strSet31;
        java.lang.String str35 = python2Target1.getAltLabelContextStructName("_tset\\n");
        python2Target1.language = " ";
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(sTGroup4);
        org.junit.Assert.assertNotNull(sTGroup5);
        org.junit.Assert.assertNotNull(strSet6);
        org.junit.Assert.assertNotNull(strSet9);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "\"\\\"hi!\\\"\"" + "'", str14, "\"\\\"hi!\\\"\"");
        org.junit.Assert.assertNotNull(strSet17);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "@" + "'", str19, "@");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "Python2" + "'", str20, "Python2");
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "Python2" + "'", str24, "Python2");
        org.junit.Assert.assertNotNull(sTGroup25);
        org.junit.Assert.assertNotNull(strSet31);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "_tset\\nContext" + "'", str35, "_tset\\nContext");
    }

    @Test
    public void test1225() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1225");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        org.stringtemplate.v4.STGroup sTGroup2 = python2Target1.templates;
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = null;
        java.lang.String str6 = python2Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator3, "_@", true);
        java.lang.String str8 = python2Target1.getImplicitRuleLabel("\"\\\"hi!\\\"\"");
        java.lang.String str9 = python2Target1.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup10 = python2Target1.loadTemplates();
        org.antlr.v4.tool.ast.GrammarAST grammarAST11 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str12 = python2Target1.getLoopLabel(grammarAST11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\"\"" + "'", str6, "\"\"");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "_\"\\\"hi!\\\"\"" + "'", str8, "_\"\\\"hi!\\\"\"");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Python2" + "'", str9, "Python2");
        org.junit.Assert.assertNotNull(sTGroup10);
    }

    @Test
    public void test1226() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1226");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str4 = python2Target1.encodeIntAsCharEscape(64);
        java.lang.String str5 = python2Target1.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target7 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator6);
        java.lang.String[] strArray8 = python2Target7.targetCharValueEscape;
        java.lang.String str9 = python2Target7.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup10 = python2Target7.getTemplates();
        python2Target1.templates = sTGroup10;
        java.util.Set<java.lang.String> strSet12 = python2Target1.getBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator13 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target14 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator13);
        java.lang.String[] strArray15 = python2Target14.targetCharValueEscape;
        org.stringtemplate.v4.STGroup sTGroup16 = python2Target14.loadTemplates();
        python2Target1.templates = sTGroup16;
        java.lang.String str18 = python2Target1.language;
        org.stringtemplate.v4.STGroup sTGroup19 = python2Target1.loadTemplates();
        boolean boolean20 = python2Target1.supportsOverloadedMethods();
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "@" + "'", str4, "@");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Python2" + "'", str5, "Python2");
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Python2" + "'", str9, "Python2");
        org.junit.Assert.assertNotNull(sTGroup10);
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(sTGroup16);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Python2" + "'", str18, "Python2");
        org.junit.Assert.assertNotNull(sTGroup19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    }

    @Test
    public void test1227() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1227");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str5 = python2Target1.getTargetStringLiteralFromString("hi!", false);
        java.lang.String str7 = python2Target1.getImplicitRuleLabel("@");
        python2Target1.language = "hi!";
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target11 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator10);
        java.util.Set<java.lang.String> strSet12 = python2Target11.badWords;
        java.lang.String str14 = python2Target11.encodeIntAsCharEscape(64);
        java.lang.String str15 = python2Target11.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator16 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target17 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator16);
        java.lang.String[] strArray18 = python2Target17.targetCharValueEscape;
        java.lang.String str19 = python2Target17.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup20 = python2Target17.getTemplates();
        python2Target11.templates = sTGroup20;
        org.antlr.v4.codegen.CodeGenerator codeGenerator22 = python2Target11.getCodeGenerator();
        org.stringtemplate.v4.STGroup sTGroup23 = python2Target11.loadTemplates();
        python2Target1.templates = sTGroup23;
        java.lang.String str26 = python2Target1.getImplicitSetLabel("hi!");
        org.antlr.v4.codegen.CodeGenerator codeGenerator27 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target28 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator27);
        java.util.Set<java.lang.String> strSet29 = python2Target28.badWords;
        java.lang.String str31 = python2Target28.encodeIntAsCharEscape(64);
        java.lang.String str32 = python2Target28.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator33 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target34 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator33);
        java.lang.String[] strArray35 = python2Target34.targetCharValueEscape;
        java.lang.String str36 = python2Target34.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup37 = python2Target34.getTemplates();
        python2Target28.templates = sTGroup37;
        java.util.Set<java.lang.String> strSet39 = python2Target28.getBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator40 = python2Target28.getCodeGenerator();
        java.util.Set<java.lang.String> strSet41 = python2Target28.getBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator42 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target43 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator42);
        java.util.Set<java.lang.String> strSet44 = python2Target43.badWords;
        java.lang.String str46 = python2Target43.encodeIntAsCharEscape(64);
        java.lang.String str47 = python2Target43.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator48 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target49 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator48);
        java.lang.String[] strArray50 = python2Target49.targetCharValueEscape;
        java.lang.String str51 = python2Target49.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup52 = python2Target49.getTemplates();
        python2Target43.templates = sTGroup52;
        org.antlr.v4.codegen.CodeGenerator codeGenerator54 = python2Target43.getCodeGenerator();
        org.stringtemplate.v4.STGroup sTGroup55 = python2Target43.loadTemplates();
        python2Target28.templates = sTGroup55;
        python2Target1.templates = sTGroup55;
        org.antlr.v4.codegen.CodeGenerator codeGenerator58 = python2Target1.getCodeGenerator();
        java.lang.String str60 = python2Target1.getImplicitSetLabel("_tset_tsetContext");
        org.antlr.v4.codegen.CodeGenerator codeGenerator61 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target62 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator61);
        java.util.Set<java.lang.String> strSet63 = python2Target62.badWords;
        java.lang.String str65 = python2Target62.encodeIntAsCharEscape(64);
        java.lang.String str66 = python2Target62.getLanguage();
        java.lang.String str67 = python2Target62.getLanguage();
        java.lang.String str69 = python2Target62.getListLabel("\"tsetContex\"");
        java.lang.String[] strArray70 = python2Target62.targetCharValueEscape;
        python2Target1.targetCharValueEscape = strArray70;
        org.antlr.v4.codegen.CodeGenerator codeGenerator72 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target73 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator72);
        java.lang.String[] strArray74 = python2Target73.targetCharValueEscape;
        java.lang.String str77 = python2Target73.getTargetStringLiteralFromString("_tset\\1", false);
        org.stringtemplate.v4.STGroup sTGroup78 = python2Target73.loadTemplates();
        python2Target1.templates = sTGroup78;
        java.lang.Class<?> wildcardClass80 = sTGroup78.getClass();
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "_@" + "'", str7, "_@");
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "@" + "'", str14, "@");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Python2" + "'", str15, "Python2");
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Python2" + "'", str19, "Python2");
        org.junit.Assert.assertNotNull(sTGroup20);
        org.junit.Assert.assertNull(codeGenerator22);
        org.junit.Assert.assertNotNull(sTGroup23);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "_tsethi!" + "'", str26, "_tsethi!");
        org.junit.Assert.assertNotNull(strSet29);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "@" + "'", str31, "@");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "Python2" + "'", str32, "Python2");
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "Python2" + "'", str36, "Python2");
        org.junit.Assert.assertNotNull(sTGroup37);
        org.junit.Assert.assertNotNull(strSet39);
        org.junit.Assert.assertNull(codeGenerator40);
        org.junit.Assert.assertNotNull(strSet41);
        org.junit.Assert.assertNotNull(strSet44);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "@" + "'", str46, "@");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "Python2" + "'", str47, "Python2");
        org.junit.Assert.assertNotNull(strArray50);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "Python2" + "'", str51, "Python2");
        org.junit.Assert.assertNotNull(sTGroup52);
        org.junit.Assert.assertNull(codeGenerator54);
        org.junit.Assert.assertNotNull(sTGroup55);
        org.junit.Assert.assertNull(codeGenerator58);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "_tset_tset_tsetContext" + "'", str60, "_tset_tset_tsetContext");
        org.junit.Assert.assertNotNull(strSet63);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "@" + "'", str65, "@");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "Python2" + "'", str66, "Python2");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "Python2" + "'", str67, "Python2");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "\"tsetContex\"" + "'", str69, "\"tsetContex\"");
        org.junit.Assert.assertNotNull(strArray70);
        org.junit.Assert.assertNotNull(strArray74);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "_tset\\\\1" + "'", str77, "_tset\\\\1");
        org.junit.Assert.assertNotNull(sTGroup78);
        org.junit.Assert.assertNotNull(wildcardClass80);
    }

    @Test
    public void test1228() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1228");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        org.stringtemplate.v4.STGroup sTGroup2 = python2Target1.templates;
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = null;
        java.lang.String str6 = python2Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator3, "\"_tset\"", false);
        boolean boolean7 = python2Target1.supportsOverloadedMethods();
        org.antlr.v4.tool.Grammar grammar8 = null;
        org.stringtemplate.v4.ST sT9 = null;
        python2Target1.genRecognizerHeaderFile(grammar8, sT9, "");
        java.lang.String str13 = python2Target1.getImplicitRuleLabel("4.5.2.1");
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "_tset" + "'", str6, "_tset");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "_4.5.2.1" + "'", str13, "_4.5.2.1");
    }

    @Test
    public void test1229() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1229");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str5 = python2Target1.getTargetStringLiteralFromString("hi!", false);
        java.lang.String str7 = python2Target1.getImplicitRuleLabel("@");
        python2Target1.language = "hi!";
        boolean boolean10 = python2Target1.supportsOverloadedMethods();
        java.lang.String str12 = python2Target1.getTargetStringLiteralFromString("");
        java.lang.String str14 = python2Target1.getImplicitSetLabel("\\1");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str16 = python2Target1.getImplicitTokenLabel("\"\\\"\\\\\\\"\\\\\\\\\\\\\\\"hi!\\\\\\\\\\\\\\\"\\\\\\\"\\\"\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "_@" + "'", str7, "_@");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "\"\"" + "'", str12, "\"\"");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "_tset\\1" + "'", str14, "_tset\\1");
    }

    @Test
    public void test1230() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1230");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        boolean boolean3 = python2Target1.wantsBaseVisitor();
        org.antlr.v4.tool.Grammar grammar4 = null;
        org.stringtemplate.v4.ST sT5 = null;
        python2Target1.genRecognizerHeaderFile(grammar4, sT5, "_tset");
        python2Target1.language = "_tset\"Hi!Context\"";
        org.antlr.v4.tool.Rule rule10 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str11 = python2Target1.getRuleFunctionContextStructName(rule10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    }

    @Test
    public void test1231() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1231");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String[] strArray2 = python2Target1.targetCharValueEscape;
        java.lang.String str5 = python2Target1.getTargetStringLiteralFromString("Python2", false);
        java.lang.String str6 = python2Target1.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = python2Target1.gen;
        org.antlr.v4.tool.Grammar grammar8 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator9 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target10 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator9);
        java.lang.String[] strArray11 = python2Target10.targetCharValueEscape;
        java.lang.String str14 = python2Target10.getTargetStringLiteralFromString("_tset\\1", false);
        org.antlr.v4.tool.Grammar grammar15 = null;
        int[] intArray16 = new int[] {};
        java.lang.String[] strArray17 = python2Target10.getTokenTypesAsTargetLabels(grammar15, intArray16);
        java.lang.String[] strArray18 = python2Target1.getTokenTypesAsTargetLabels(grammar8, intArray16);
        org.antlr.v4.tool.Rule rule19 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str20 = python2Target1.getRuleFunctionContextStructName(rule19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Python2" + "'", str5, "Python2");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "4.5.2.1" + "'", str6, "4.5.2.1");
        org.junit.Assert.assertNull(codeGenerator7);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "_tset\\\\1" + "'", str14, "_tset\\\\1");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[]");
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertNotNull(strArray18);
    }

    @Test
    public void test1232() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1232");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str4 = python2Target1.encodeIntAsCharEscape(64);
        java.lang.String str5 = python2Target1.getLanguage();
        java.lang.String str8 = python2Target1.getTargetStringLiteralFromString("_@", false);
        java.lang.String str9 = python2Target1.language;
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = python2Target1.getCodeGenerator();
        java.lang.String str12 = python2Target1.getAltLabelContextStructName("_\"_tset\"");
        boolean boolean13 = python2Target1.templatesExist();
        org.antlr.v4.codegen.target.Python2Target python2Target14 = new org.antlr.v4.codegen.target.Python2Target();
        org.antlr.v4.codegen.CodeGenerator codeGenerator15 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target16 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator15);
        java.util.Set<java.lang.String> strSet17 = python2Target16.badWords;
        java.lang.String str19 = python2Target16.encodeIntAsCharEscape(64);
        java.lang.String str20 = python2Target16.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator21 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target22 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator21);
        java.lang.String[] strArray23 = python2Target22.targetCharValueEscape;
        java.lang.String str24 = python2Target22.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup25 = python2Target22.getTemplates();
        python2Target16.templates = sTGroup25;
        org.stringtemplate.v4.STGroup sTGroup27 = python2Target16.templates;
        java.util.Set<java.lang.String> strSet28 = python2Target16.badWords;
        java.util.Set<java.lang.String> strSet29 = python2Target16.getBadWords();
        boolean boolean30 = python2Target16.supportsOverloadedMethods();
        java.util.Set<java.lang.String> strSet31 = python2Target16.getBadWords();
        org.stringtemplate.v4.STGroup sTGroup32 = python2Target16.getTemplates();
        python2Target14.templates = sTGroup32;
        python2Target1.templates = sTGroup32;
        org.stringtemplate.v4.STGroup sTGroup35 = python2Target1.templates;
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "@" + "'", str4, "@");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Python2" + "'", str5, "Python2");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "_@" + "'", str8, "_@");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Python2" + "'", str9, "Python2");
        org.junit.Assert.assertNull(codeGenerator10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "_\"_tset\"Context" + "'", str12, "_\"_tset\"Context");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(strSet17);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "@" + "'", str19, "@");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "Python2" + "'", str20, "Python2");
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "Python2" + "'", str24, "Python2");
        org.junit.Assert.assertNotNull(sTGroup25);
        org.junit.Assert.assertNotNull(sTGroup27);
        org.junit.Assert.assertNotNull(strSet28);
        org.junit.Assert.assertNotNull(strSet29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(strSet31);
        org.junit.Assert.assertNotNull(sTGroup32);
        org.junit.Assert.assertNotNull(sTGroup35);
    }

    @Test
    public void test1233() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1233");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str5 = python2Target1.getTargetStringLiteralFromString("hi!", false);
        java.lang.String str7 = python2Target1.getImplicitRuleLabel("@");
        python2Target1.language = "hi!";
        boolean boolean10 = python2Target1.supportsOverloadedMethods();
        boolean boolean11 = python2Target1.templatesExist();
        org.antlr.v4.codegen.CodeGenerator codeGenerator12 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target13 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator12);
        java.util.Set<java.lang.String> strSet14 = python2Target13.badWords;
        boolean boolean15 = python2Target13.wantsBaseVisitor();
        org.stringtemplate.v4.STGroup sTGroup16 = python2Target13.loadTemplates();
        org.stringtemplate.v4.STGroup sTGroup17 = python2Target13.getTemplates();
        java.util.Set<java.lang.String> strSet18 = python2Target13.badWords;
        python2Target1.badWords = strSet18;
        org.stringtemplate.v4.STGroup sTGroup20 = python2Target1.getTemplates();
        org.antlr.v4.tool.Grammar grammar21 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator22 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target23 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator22);
        java.util.Set<java.lang.String> strSet24 = python2Target23.badWords;
        java.lang.String str26 = python2Target23.encodeIntAsCharEscape(64);
        java.lang.String str27 = python2Target23.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator28 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target29 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator28);
        java.lang.String[] strArray30 = python2Target29.targetCharValueEscape;
        java.lang.String str31 = python2Target29.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup32 = python2Target29.getTemplates();
        python2Target23.templates = sTGroup32;
        org.stringtemplate.v4.STGroup sTGroup34 = python2Target23.templates;
        java.util.Set<java.lang.String> strSet35 = python2Target23.badWords;
        java.util.Set<java.lang.String> strSet36 = python2Target23.getBadWords();
        org.antlr.v4.tool.Grammar grammar37 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator38 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target39 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator38);
        java.util.Set<java.lang.String> strSet40 = python2Target39.badWords;
        java.lang.String str42 = python2Target39.encodeIntAsCharEscape(64);
        java.lang.String str43 = python2Target39.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator44 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target45 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator44);
        java.lang.String[] strArray46 = python2Target45.targetCharValueEscape;
        java.lang.String str47 = python2Target45.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup48 = python2Target45.getTemplates();
        python2Target39.templates = sTGroup48;
        org.stringtemplate.v4.STGroup sTGroup50 = python2Target39.templates;
        java.util.Set<java.lang.String> strSet51 = python2Target39.badWords;
        java.util.Set<java.lang.String> strSet52 = python2Target39.getBadWords();
        boolean boolean53 = python2Target39.supportsOverloadedMethods();
        java.util.Set<java.lang.String> strSet54 = python2Target39.getBadWords();
        org.antlr.v4.tool.Grammar grammar55 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator56 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target57 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator56);
        java.lang.String[] strArray58 = python2Target57.targetCharValueEscape;
        java.lang.String str61 = python2Target57.getTargetStringLiteralFromString("_tset\\1", false);
        org.antlr.v4.tool.Grammar grammar62 = null;
        int[] intArray63 = new int[] {};
        java.lang.String[] strArray64 = python2Target57.getTokenTypesAsTargetLabels(grammar62, intArray63);
        java.lang.String[] strArray65 = python2Target39.getTokenTypesAsTargetLabels(grammar55, intArray63);
        java.lang.String[] strArray66 = python2Target23.getTokenTypesAsTargetLabels(grammar37, intArray63);
        java.lang.String[] strArray67 = python2Target1.getTokenTypesAsTargetLabels(grammar21, intArray63);
        org.antlr.v4.codegen.CodeGenerator codeGenerator68 = python2Target1.gen;
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "_@" + "'", str7, "_@");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(strSet14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(sTGroup16);
        org.junit.Assert.assertNotNull(sTGroup17);
        org.junit.Assert.assertNotNull(strSet18);
        org.junit.Assert.assertNotNull(sTGroup20);
        org.junit.Assert.assertNotNull(strSet24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "@" + "'", str26, "@");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "Python2" + "'", str27, "Python2");
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "Python2" + "'", str31, "Python2");
        org.junit.Assert.assertNotNull(sTGroup32);
        org.junit.Assert.assertNotNull(sTGroup34);
        org.junit.Assert.assertNotNull(strSet35);
        org.junit.Assert.assertNotNull(strSet36);
        org.junit.Assert.assertNotNull(strSet40);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "@" + "'", str42, "@");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "Python2" + "'", str43, "Python2");
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "Python2" + "'", str47, "Python2");
        org.junit.Assert.assertNotNull(sTGroup48);
        org.junit.Assert.assertNotNull(sTGroup50);
        org.junit.Assert.assertNotNull(strSet51);
        org.junit.Assert.assertNotNull(strSet52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(strSet54);
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "_tset\\\\1" + "'", str61, "_tset\\\\1");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[]");
        org.junit.Assert.assertNotNull(strArray64);
        org.junit.Assert.assertNotNull(strArray65);
        org.junit.Assert.assertNotNull(strArray66);
        org.junit.Assert.assertNotNull(strArray67);
        org.junit.Assert.assertNull(codeGenerator68);
    }

    @Test
    public void test1234() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1234");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str5 = python2Target1.getTargetStringLiteralFromString("hi!", false);
        java.lang.String str7 = python2Target1.getTargetStringLiteralFromString("\"hi!\"");
        java.lang.String str9 = python2Target1.getTargetStringLiteralFromString("_\\\"\\\\\\\"hi!\\\\\\\"\\\"");
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "\"\\\"hi!\\\"\"" + "'", str7, "\"\\\"hi!\\\"\"");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\"_\\\\\\\"\\\\\\\\\\\\\\\"hi!\\\\\\\\\\\\\\\"\\\\\\\"\"" + "'", str9, "\"_\\\\\\\"\\\\\\\\\\\\\\\"hi!\\\\\\\\\\\\\\\"\\\\\\\"\"");
    }

    @Test
    public void test1235() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1235");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String[] strArray2 = python2Target1.targetCharValueEscape;
        java.lang.String str3 = python2Target1.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup4 = python2Target1.loadTemplates();
        int int5 = python2Target1.getInlineTestSetWordSize();
        java.lang.String[] strArray6 = python2Target1.targetCharValueEscape;
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = python2Target1.getCodeGenerator();
        java.lang.String str8 = python2Target1.getLanguage();
        org.antlr.v4.tool.Rule rule9 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str10 = python2Target1.getRuleFunctionContextStructName(rule9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Python2" + "'", str3, "Python2");
        org.junit.Assert.assertNotNull(sTGroup4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 64 + "'", int5 == 64);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertNull(codeGenerator7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Python2" + "'", str8, "Python2");
    }

    @Test
    public void test1236() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1236");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String[] strArray2 = python2Target1.targetCharValueEscape;
        java.lang.String str3 = python2Target1.getLanguage();
        boolean boolean4 = python2Target1.wantsBaseListener();
        python2Target1.language = "\\64";
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str8 = python2Target1.getAltLabelContextStructName("a");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Python2" + "'", str3, "Python2");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    }

    @Test
    public void test1237() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1237");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str4 = python2Target1.encodeIntAsCharEscape(64);
        java.lang.String str5 = python2Target1.getLanguage();
        java.lang.String str7 = python2Target1.getImplicitSetLabel("");
        java.lang.String str9 = python2Target1.getImplicitSetLabel("\\n");
        boolean boolean10 = python2Target1.templatesExist();
        boolean boolean11 = python2Target1.templatesExist();
        java.lang.String str12 = python2Target1.getVersion();
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "@" + "'", str4, "@");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Python2" + "'", str5, "Python2");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "_tset" + "'", str7, "_tset");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "_tset\\n" + "'", str9, "_tset\\n");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "4.5.2.1" + "'", str12, "4.5.2.1");
    }

    @Test
    public void test1238() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1238");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String str3 = python2Target1.getImplicitSetLabel("");
        org.antlr.v4.codegen.CodeGenerator codeGenerator4 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target5 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator4);
        java.util.Set<java.lang.String> strSet6 = python2Target5.badWords;
        java.lang.String str8 = python2Target5.encodeIntAsCharEscape(64);
        java.lang.String str9 = python2Target5.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target11 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator10);
        java.lang.String[] strArray12 = python2Target11.targetCharValueEscape;
        java.lang.String str13 = python2Target11.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup14 = python2Target11.getTemplates();
        python2Target5.templates = sTGroup14;
        python2Target1.templates = sTGroup14;
        org.antlr.v4.tool.Grammar grammar17 = null;
        org.stringtemplate.v4.ST sT18 = null;
        // The following exception was thrown during execution in test generation
        try {
            python2Target1.genFile(grammar17, sT18, "_\"_tset\\\\\\\"\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"hi!\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"\\\\\\\"\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "_tset" + "'", str3, "_tset");
        org.junit.Assert.assertNotNull(strSet6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "@" + "'", str8, "@");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Python2" + "'", str9, "Python2");
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Python2" + "'", str13, "Python2");
        org.junit.Assert.assertNotNull(sTGroup14);
    }

    @Test
    public void test1239() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1239");
        org.antlr.v4.codegen.target.Python2Target.PythonStringRenderer pythonStringRenderer0 = new org.antlr.v4.codegen.target.Python2Target.PythonStringRenderer();
        org.antlr.v4.codegen.CodeGenerator codeGenerator1 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target2 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator1);
        java.lang.String[] strArray3 = python2Target2.targetCharValueEscape;
        java.lang.String str6 = python2Target2.getTargetStringLiteralFromString("_tset\\1", false);
        java.util.Set<java.lang.String> strSet7 = python2Target2.badWords;
        java.lang.String str9 = python2Target2.getImplicitSetLabel("_tset\"\\\"\\\\\\\"hi!\\\\\\\"\\\"\"Context");
        java.lang.String str11 = python2Target2.getAltLabelContextStructName("\" \"");
        int int12 = python2Target2.getInlineTestSetWordSize();
        boolean boolean13 = python2Target2.templatesExist();
        java.util.Locale locale15 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str16 = pythonStringRenderer0.toString((java.lang.Object) python2Target2, "_tset_\"\\\"_tset_tset_tsetContext\\\"\"Context", locale15);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: org.antlr.v4.codegen.target.Python2Target cannot be cast to java.lang.String");
        } catch (java.lang.ClassCastException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "_tset\\\\1" + "'", str6, "_tset\\\\1");
        org.junit.Assert.assertNotNull(strSet7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "_tset_tset\"\\\"\\\\\\\"hi!\\\\\\\"\\\"\"Context" + "'", str9, "_tset_tset\"\\\"\\\\\\\"hi!\\\\\\\"\\\"\"Context");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "\" \"Context" + "'", str11, "\" \"Context");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 64 + "'", int12 == 64);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
    }

    @Test
    public void test1240() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1240");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String[] strArray2 = python2Target1.targetCharValueEscape;
        org.stringtemplate.v4.STGroup sTGroup3 = python2Target1.loadTemplates();
        org.antlr.v4.codegen.CodeGenerator codeGenerator4 = null;
        java.lang.String str7 = python2Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator4, "", false);
        boolean boolean8 = python2Target1.supportsOverloadedMethods();
        python2Target1.addBadWords();
        boolean boolean10 = python2Target1.templatesExist();
        java.lang.String str13 = python2Target1.getTargetStringLiteralFromString("\"\\\"4.5.2.1\\\"\"", false);
        java.lang.String str14 = python2Target1.getLanguage();
        java.util.Set<java.lang.String> strSet15 = python2Target1.badWords;
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertNotNull(sTGroup3);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "\\\"\\\\\\\"4.5.2.1\\\\\\\"\\\"" + "'", str13, "\\\"\\\\\\\"4.5.2.1\\\\\\\"\\\"");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Python2" + "'", str14, "Python2");
        org.junit.Assert.assertNotNull(strSet15);
    }

    @Test
    public void test1241() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1241");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String[] strArray2 = python2Target1.targetCharValueEscape;
        java.lang.String str3 = python2Target1.getLanguage();
        java.lang.String str6 = python2Target1.getTargetStringLiteralFromString("_tset", true);
        java.lang.String str8 = python2Target1.getAltLabelContextStructName("\"d\"");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str10 = python2Target1.getElementName("tset\\\"tset_tsetContex");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Python2" + "'", str3, "Python2");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\"_tset\"" + "'", str6, "\"_tset\"");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\"d\"Context" + "'", str8, "\"d\"Context");
    }

    @Test
    public void test1242() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1242");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        org.stringtemplate.v4.STGroup sTGroup2 = python2Target1.templates;
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = null;
        java.lang.String str6 = python2Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator3, "_@", true);
        java.lang.String str8 = python2Target1.getImplicitRuleLabel("\"\\\"hi!\\\"\"");
        java.lang.String str9 = python2Target1.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup10 = python2Target1.loadTemplates();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str12 = python2Target1.getElementName("_\"_tset_tset_tsetContext\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\"\"" + "'", str6, "\"\"");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "_\"\\\"hi!\\\"\"" + "'", str8, "_\"\\\"hi!\\\"\"");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Python2" + "'", str9, "Python2");
        org.junit.Assert.assertNotNull(sTGroup10);
    }

    @Test
    public void test1243() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1243");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String[] strArray2 = python2Target1.targetCharValueEscape;
        java.lang.String str3 = python2Target1.getLanguage();
        java.lang.String str6 = python2Target1.getTargetStringLiteralFromString("_tset", true);
        java.util.Set<java.lang.String> strSet7 = python2Target1.badWords;
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = python2Target1.gen;
        java.util.Set<java.lang.String> strSet9 = python2Target1.badWords;
        org.antlr.v4.tool.ast.GrammarAST grammarAST10 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean11 = python2Target1.visibleGrammarSymbolCausesIssueInGeneratedCode(grammarAST10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Python2" + "'", str3, "Python2");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\"_tset\"" + "'", str6, "\"_tset\"");
        org.junit.Assert.assertNotNull(strSet7);
        org.junit.Assert.assertNull(codeGenerator8);
        org.junit.Assert.assertNotNull(strSet9);
    }

    @Test
    public void test1244() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1244");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String[] strArray2 = python2Target1.targetCharValueEscape;
        org.stringtemplate.v4.STGroup sTGroup3 = python2Target1.loadTemplates();
        org.antlr.v4.codegen.CodeGenerator codeGenerator4 = null;
        java.lang.String str7 = python2Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator4, "", false);
        boolean boolean8 = python2Target1.supportsOverloadedMethods();
        python2Target1.addBadWords();
        boolean boolean10 = python2Target1.templatesExist();
        java.lang.String str11 = python2Target1.language;
        org.antlr.v4.tool.ast.GrammarAST grammarAST12 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean13 = python2Target1.visibleGrammarSymbolCausesIssueInGeneratedCode(grammarAST12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertNotNull(sTGroup3);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Python2" + "'", str11, "Python2");
    }

    @Test
    public void test1245() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1245");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String[] strArray2 = python2Target1.targetCharValueEscape;
        org.antlr.v4.tool.Grammar grammar3 = null;
        org.stringtemplate.v4.ST sT4 = null;
        python2Target1.genRecognizerHeaderFile(grammar3, sT4, "hi!");
        python2Target1.language = "_\"_tset\"";
        java.util.Set<java.lang.String> strSet9 = python2Target1.badWords;
        org.antlr.v4.tool.Grammar grammar10 = null;
        org.stringtemplate.v4.ST sT11 = null;
        python2Target1.genRecognizerHeaderFile(grammar10, sT11, "\"_tset\"");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str15 = python2Target1.getImplicitTokenLabel("__tsetContextContext");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertNotNull(strSet9);
    }

    @Test
    public void test1246() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1246");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str4 = python2Target1.encodeIntAsCharEscape(64);
        java.lang.String str5 = python2Target1.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target7 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator6);
        java.lang.String[] strArray8 = python2Target7.targetCharValueEscape;
        java.lang.String str9 = python2Target7.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup10 = python2Target7.getTemplates();
        python2Target1.templates = sTGroup10;
        org.stringtemplate.v4.STGroup sTGroup12 = python2Target1.templates;
        java.util.Set<java.lang.String> strSet13 = python2Target1.badWords;
        java.util.Set<java.lang.String> strSet14 = python2Target1.getBadWords();
        org.antlr.v4.tool.Grammar grammar15 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator16 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target17 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator16);
        java.util.Set<java.lang.String> strSet18 = python2Target17.badWords;
        java.lang.String str20 = python2Target17.encodeIntAsCharEscape(64);
        java.lang.String str21 = python2Target17.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator22 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target23 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator22);
        java.lang.String[] strArray24 = python2Target23.targetCharValueEscape;
        java.lang.String str25 = python2Target23.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup26 = python2Target23.getTemplates();
        python2Target17.templates = sTGroup26;
        org.stringtemplate.v4.STGroup sTGroup28 = python2Target17.templates;
        java.util.Set<java.lang.String> strSet29 = python2Target17.badWords;
        java.util.Set<java.lang.String> strSet30 = python2Target17.getBadWords();
        boolean boolean31 = python2Target17.supportsOverloadedMethods();
        java.util.Set<java.lang.String> strSet32 = python2Target17.getBadWords();
        org.antlr.v4.tool.Grammar grammar33 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator34 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target35 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator34);
        java.lang.String[] strArray36 = python2Target35.targetCharValueEscape;
        java.lang.String str39 = python2Target35.getTargetStringLiteralFromString("_tset\\1", false);
        org.antlr.v4.tool.Grammar grammar40 = null;
        int[] intArray41 = new int[] {};
        java.lang.String[] strArray42 = python2Target35.getTokenTypesAsTargetLabels(grammar40, intArray41);
        java.lang.String[] strArray43 = python2Target17.getTokenTypesAsTargetLabels(grammar33, intArray41);
        java.lang.String[] strArray44 = python2Target1.getTokenTypesAsTargetLabels(grammar15, intArray41);
        org.antlr.v4.codegen.CodeGenerator codeGenerator45 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target46 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator45);
        java.lang.String[] strArray47 = python2Target46.targetCharValueEscape;
        java.lang.String str48 = python2Target46.getLanguage();
        java.lang.String str51 = python2Target46.getTargetStringLiteralFromString("_tset", true);
        java.lang.String str52 = python2Target46.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator53 = null;
        python2Target46.gen = codeGenerator53;
        org.antlr.v4.codegen.CodeGenerator codeGenerator55 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target56 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator55);
        java.util.Set<java.lang.String> strSet57 = python2Target56.badWords;
        java.lang.String str59 = python2Target56.encodeIntAsCharEscape(64);
        java.lang.String str60 = python2Target56.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator61 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target62 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator61);
        java.lang.String[] strArray63 = python2Target62.targetCharValueEscape;
        java.lang.String str64 = python2Target62.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup65 = python2Target62.getTemplates();
        python2Target56.templates = sTGroup65;
        java.util.Set<java.lang.String> strSet67 = python2Target56.getBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator68 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target69 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator68);
        java.lang.String[] strArray70 = python2Target69.targetCharValueEscape;
        org.stringtemplate.v4.STGroup sTGroup71 = python2Target69.loadTemplates();
        python2Target56.templates = sTGroup71;
        python2Target46.templates = sTGroup71;
        python2Target1.templates = sTGroup71;
        python2Target1.language = "\"_Contex\"";
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "@" + "'", str4, "@");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Python2" + "'", str5, "Python2");
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Python2" + "'", str9, "Python2");
        org.junit.Assert.assertNotNull(sTGroup10);
        org.junit.Assert.assertNotNull(sTGroup12);
        org.junit.Assert.assertNotNull(strSet13);
        org.junit.Assert.assertNotNull(strSet14);
        org.junit.Assert.assertNotNull(strSet18);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "@" + "'", str20, "@");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Python2" + "'", str21, "Python2");
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Python2" + "'", str25, "Python2");
        org.junit.Assert.assertNotNull(sTGroup26);
        org.junit.Assert.assertNotNull(sTGroup28);
        org.junit.Assert.assertNotNull(strSet29);
        org.junit.Assert.assertNotNull(strSet30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(strSet32);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "_tset\\\\1" + "'", str39, "_tset\\\\1");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[]");
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "Python2" + "'", str48, "Python2");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "\"_tset\"" + "'", str51, "\"_tset\"");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "4.5.2.1" + "'", str52, "4.5.2.1");
        org.junit.Assert.assertNotNull(strSet57);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "@" + "'", str59, "@");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "Python2" + "'", str60, "Python2");
        org.junit.Assert.assertNotNull(strArray63);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "Python2" + "'", str64, "Python2");
        org.junit.Assert.assertNotNull(sTGroup65);
        org.junit.Assert.assertNotNull(strSet67);
        org.junit.Assert.assertNotNull(strArray70);
        org.junit.Assert.assertNotNull(sTGroup71);
    }

    @Test
    public void test1247() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1247");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        boolean boolean3 = python2Target1.wantsBaseVisitor();
        org.stringtemplate.v4.STGroup sTGroup4 = python2Target1.loadTemplates();
        org.stringtemplate.v4.STGroup sTGroup5 = python2Target1.loadTemplates();
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = null;
        python2Target1.gen = codeGenerator6;
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = null;
        java.lang.String str11 = python2Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator8, "_\"_tset\"", false);
        java.lang.String str14 = python2Target1.getTargetStringLiteralFromString("Python2ContextContext", false);
        java.lang.String str17 = python2Target1.getTargetStringLiteralFromString("4.5.2.1", true);
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(sTGroup4);
        org.junit.Assert.assertNotNull(sTGroup5);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "\\\"_tset" + "'", str11, "\\\"_tset");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Python2ContextContext" + "'", str14, "Python2ContextContext");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "\"4.5.2.1\"" + "'", str17, "\"4.5.2.1\"");
    }

    @Test
    public void test1248() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1248");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        org.stringtemplate.v4.STGroup sTGroup2 = python2Target1.templates;
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = null;
        java.lang.String str6 = python2Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator3, "_@", true);
        java.lang.String str9 = python2Target1.getTargetStringLiteralFromString("Python2Context", false);
        org.antlr.v4.tool.ast.GrammarAST grammarAST10 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str11 = python2Target1.getLoopCounter(grammarAST10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\"\"" + "'", str6, "\"\"");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Python2Context" + "'", str9, "Python2Context");
    }

    @Test
    public void test1249() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1249");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        org.stringtemplate.v4.STGroup sTGroup2 = python2Target1.templates;
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = null;
        java.lang.String str6 = python2Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator3, "\"_tset\"", false);
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = python2Target1.gen;
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target9 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator8);
        java.util.Set<java.lang.String> strSet10 = python2Target9.badWords;
        java.lang.String str12 = python2Target9.encodeIntAsCharEscape(64);
        java.lang.String str13 = python2Target9.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator14 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target15 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator14);
        java.lang.String[] strArray16 = python2Target15.targetCharValueEscape;
        java.lang.String str17 = python2Target15.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup18 = python2Target15.getTemplates();
        python2Target9.templates = sTGroup18;
        java.util.Set<java.lang.String> strSet20 = python2Target9.getBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator21 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target22 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator21);
        java.lang.String[] strArray23 = python2Target22.targetCharValueEscape;
        org.stringtemplate.v4.STGroup sTGroup24 = python2Target22.loadTemplates();
        python2Target9.templates = sTGroup24;
        java.lang.String str26 = python2Target9.language;
        org.stringtemplate.v4.STGroup sTGroup27 = python2Target9.loadTemplates();
        python2Target1.templates = sTGroup27;
        java.lang.String str29 = python2Target1.getVersion();
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "_tset" + "'", str6, "_tset");
        org.junit.Assert.assertNull(codeGenerator7);
        org.junit.Assert.assertNotNull(strSet10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "@" + "'", str12, "@");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Python2" + "'", str13, "Python2");
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Python2" + "'", str17, "Python2");
        org.junit.Assert.assertNotNull(sTGroup18);
        org.junit.Assert.assertNotNull(strSet20);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertNotNull(sTGroup24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "Python2" + "'", str26, "Python2");
        org.junit.Assert.assertNotNull(sTGroup27);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "4.5.2.1" + "'", str29, "4.5.2.1");
    }

    @Test
    public void test1250() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1250");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String str3 = python2Target1.getImplicitSetLabel("");
        org.antlr.v4.codegen.CodeGenerator codeGenerator4 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target5 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator4);
        java.util.Set<java.lang.String> strSet6 = python2Target5.badWords;
        java.lang.String str8 = python2Target5.encodeIntAsCharEscape(64);
        java.lang.String str9 = python2Target5.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target11 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator10);
        java.lang.String[] strArray12 = python2Target11.targetCharValueEscape;
        java.lang.String str13 = python2Target11.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup14 = python2Target11.getTemplates();
        python2Target5.templates = sTGroup14;
        python2Target1.templates = sTGroup14;
        boolean boolean17 = python2Target1.templatesExist();
        python2Target1.language = "__tset__tset_tset\"\\\"\\\\\\\"hi!\\\\\\\"\\\"\"";
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "_tset" + "'", str3, "_tset");
        org.junit.Assert.assertNotNull(strSet6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "@" + "'", str8, "@");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Python2" + "'", str9, "Python2");
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Python2" + "'", str13, "Python2");
        org.junit.Assert.assertNotNull(sTGroup14);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
    }

    @Test
    public void test1251() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1251");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str4 = python2Target1.encodeIntAsCharEscape(64);
        java.lang.String str5 = python2Target1.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup6 = python2Target1.getTemplates();
        boolean boolean7 = python2Target1.supportsOverloadedMethods();
        java.util.Set<java.lang.String> strSet8 = python2Target1.getBadWords();
        python2Target1.language = "\"_tset_\\\"#\\\"\"";
        java.lang.String[] strArray11 = python2Target1.targetCharValueEscape;
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "@" + "'", str4, "@");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Python2" + "'", str5, "Python2");
        org.junit.Assert.assertNotNull(sTGroup6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertNotNull(strArray11);
    }

    @Test
    public void test1252() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1252");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String[] strArray2 = python2Target1.targetCharValueEscape;
        java.lang.String str5 = python2Target1.getTargetStringLiteralFromString("_tset\\1", false);
        java.lang.String str6 = python2Target1.getLanguage();
        java.lang.String str8 = python2Target1.getAltLabelContextStructName("\"\\\"\\\\\\\"hi!\\\\\\\"\\\"\"");
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "_tset\\\\1" + "'", str5, "_tset\\\\1");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Python2" + "'", str6, "Python2");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\"\\\"\\\\\\\"hi!\\\\\\\"\\\"\"Context" + "'", str8, "\"\\\"\\\\\\\"hi!\\\\\\\"\\\"\"Context");
    }

    @Test
    public void test1253() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1253");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str4 = python2Target1.encodeIntAsCharEscape(64);
        java.lang.String str6 = python2Target1.getAltLabelContextStructName("Python2");
        boolean boolean7 = python2Target1.supportsOverloadedMethods();
        java.lang.String str9 = python2Target1.encodeIntAsCharEscape(1);
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = null;
        java.lang.String str13 = python2Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator10, "_tset\"\\\"\\\\\\\"hi!\\\\\\\"\\\"\"Context", false);
        org.stringtemplate.v4.STGroup sTGroup14 = python2Target1.templates;
        java.lang.String str17 = python2Target1.getTargetStringLiteralFromString("_tset\\\\\\\\1", false);
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "@" + "'", str4, "@");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Python2Context" + "'", str6, "Python2Context");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\\1" + "'", str9, "\\1");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "tset\\\"\\\"\\\\\\\"hi!\\\\\\\"\\\"\\\"Contex" + "'", str13, "tset\\\"\\\"\\\\\\\"hi!\\\\\\\"\\\"\\\"Contex");
        org.junit.Assert.assertNotNull(sTGroup14);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "_tset\\\\\\\\\\\\\\\\1" + "'", str17, "_tset\\\\\\\\\\\\\\\\1");
    }

    @Test
    public void test1254() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1254");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str4 = python2Target1.encodeIntAsCharEscape(64);
        java.lang.String str5 = python2Target1.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target7 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator6);
        java.lang.String[] strArray8 = python2Target7.targetCharValueEscape;
        java.lang.String str9 = python2Target7.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup10 = python2Target7.getTemplates();
        python2Target1.templates = sTGroup10;
        org.antlr.v4.codegen.CodeGenerator codeGenerator12 = python2Target1.getCodeGenerator();
        org.antlr.v4.tool.Grammar grammar13 = null;
        org.stringtemplate.v4.ST sT14 = null;
        python2Target1.genRecognizerHeaderFile(grammar13, sT14, "___tset");
        boolean boolean17 = python2Target1.templatesExist();
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "@" + "'", str4, "@");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Python2" + "'", str5, "Python2");
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Python2" + "'", str9, "Python2");
        org.junit.Assert.assertNotNull(sTGroup10);
        org.junit.Assert.assertNull(codeGenerator12);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
    }

    @Test
    public void test1255() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1255");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String[] strArray2 = python2Target1.targetCharValueEscape;
        java.lang.String str3 = python2Target1.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup4 = python2Target1.getTemplates();
        org.antlr.v4.codegen.CodeGenerator codeGenerator5 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target6 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator5);
        java.util.Set<java.lang.String> strSet7 = python2Target6.badWords;
        python2Target1.badWords = strSet7;
        org.antlr.v4.codegen.CodeGenerator codeGenerator9 = python2Target1.gen;
        java.lang.String str10 = python2Target1.getLanguage();
        java.lang.String str11 = python2Target1.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator12 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target13 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator12);
        java.util.Set<java.lang.String> strSet14 = python2Target13.badWords;
        java.lang.String str17 = python2Target13.getTargetStringLiteralFromString("hi!", false);
        int int18 = python2Target13.getInlineTestSetWordSize();
        boolean boolean19 = python2Target13.wantsBaseVisitor();
        java.lang.String str20 = python2Target13.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup21 = python2Target13.loadTemplates();
        python2Target1.templates = sTGroup21;
        java.lang.String str24 = python2Target1.getAltLabelContextStructName("\"_tsethi!\"");
        java.util.Set<java.lang.String> strSet25 = python2Target1.getBadWords();
        org.stringtemplate.v4.STGroup sTGroup26 = python2Target1.loadTemplates();
        java.lang.String str28 = python2Target1.getAltLabelContextStructName("_tset\\n");
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Python2" + "'", str3, "Python2");
        org.junit.Assert.assertNotNull(sTGroup4);
        org.junit.Assert.assertNotNull(strSet7);
        org.junit.Assert.assertNull(codeGenerator9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Python2" + "'", str10, "Python2");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "4.5.2.1" + "'", str11, "4.5.2.1");
        org.junit.Assert.assertNotNull(strSet14);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 64 + "'", int18 == 64);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "Python2" + "'", str20, "Python2");
        org.junit.Assert.assertNotNull(sTGroup21);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "\"_tsethi!\"Context" + "'", str24, "\"_tsethi!\"Context");
        org.junit.Assert.assertNotNull(strSet25);
        org.junit.Assert.assertNotNull(sTGroup26);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "_tset\\nContext" + "'", str28, "_tset\\nContext");
    }

    @Test
    public void test1256() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1256");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String str3 = python2Target1.getImplicitSetLabel("");
        org.antlr.v4.codegen.CodeGenerator codeGenerator4 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target5 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator4);
        java.util.Set<java.lang.String> strSet6 = python2Target5.badWords;
        java.lang.String str8 = python2Target5.encodeIntAsCharEscape(64);
        java.lang.String str9 = python2Target5.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target11 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator10);
        java.lang.String[] strArray12 = python2Target11.targetCharValueEscape;
        java.lang.String str13 = python2Target11.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup14 = python2Target11.getTemplates();
        python2Target5.templates = sTGroup14;
        python2Target1.templates = sTGroup14;
        boolean boolean17 = python2Target1.templatesExist();
        java.lang.String[] strArray18 = python2Target1.targetCharValueEscape;
        java.util.Set<java.lang.String> strSet19 = python2Target1.getBadWords();
        java.util.Set<java.lang.String> strSet20 = python2Target1.badWords;
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "_tset" + "'", str3, "_tset");
        org.junit.Assert.assertNotNull(strSet6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "@" + "'", str8, "@");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Python2" + "'", str9, "Python2");
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Python2" + "'", str13, "Python2");
        org.junit.Assert.assertNotNull(sTGroup14);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertNotNull(strSet19);
        org.junit.Assert.assertNotNull(strSet20);
    }

    @Test
    public void test1257() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1257");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str4 = python2Target1.encodeIntAsCharEscape(64);
        java.lang.String str5 = python2Target1.getLanguage();
        java.lang.String str6 = python2Target1.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup7 = python2Target1.getTemplates();
        java.lang.String str9 = python2Target1.getTargetStringLiteralFromString("\"__@\\\"Contex\"");
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "@" + "'", str4, "@");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Python2" + "'", str5, "Python2");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Python2" + "'", str6, "Python2");
        org.junit.Assert.assertNotNull(sTGroup7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\"\\\"__@\\\\\\\"Contex\\\"\"" + "'", str9, "\"\\\"__@\\\\\\\"Contex\\\"\"");
    }

    @Test
    public void test1258() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1258");
        org.antlr.v4.codegen.target.Python2Target python2Target0 = new org.antlr.v4.codegen.target.Python2Target();
        org.antlr.v4.codegen.CodeGenerator codeGenerator1 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target2 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator1);
        java.util.Set<java.lang.String> strSet3 = python2Target2.badWords;
        java.lang.String str5 = python2Target2.encodeIntAsCharEscape(64);
        java.lang.String str6 = python2Target2.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target8 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator7);
        java.lang.String[] strArray9 = python2Target8.targetCharValueEscape;
        java.lang.String str10 = python2Target8.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup11 = python2Target8.getTemplates();
        python2Target2.templates = sTGroup11;
        org.stringtemplate.v4.STGroup sTGroup13 = python2Target2.templates;
        java.util.Set<java.lang.String> strSet14 = python2Target2.badWords;
        java.util.Set<java.lang.String> strSet15 = python2Target2.getBadWords();
        boolean boolean16 = python2Target2.supportsOverloadedMethods();
        java.util.Set<java.lang.String> strSet17 = python2Target2.getBadWords();
        org.stringtemplate.v4.STGroup sTGroup18 = python2Target2.getTemplates();
        python2Target0.templates = sTGroup18;
        org.antlr.v4.codegen.CodeGenerator codeGenerator20 = python2Target0.gen;
        org.antlr.v4.tool.Grammar grammar21 = null;
        org.stringtemplate.v4.ST sT22 = null;
        python2Target0.genRecognizerHeaderFile(grammar21, sT22, "\"d\"");
        int int25 = python2Target0.getInlineTestSetWordSize();
        java.lang.String str27 = python2Target0.encodeIntAsCharEscape((int) '4');
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "@" + "'", str5, "@");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Python2" + "'", str6, "Python2");
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Python2" + "'", str10, "Python2");
        org.junit.Assert.assertNotNull(sTGroup11);
        org.junit.Assert.assertNotNull(sTGroup13);
        org.junit.Assert.assertNotNull(strSet14);
        org.junit.Assert.assertNotNull(strSet15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(strSet17);
        org.junit.Assert.assertNotNull(sTGroup18);
        org.junit.Assert.assertNull(codeGenerator20);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 64 + "'", int25 == 64);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "\\64" + "'", str27, "\\64");
    }

    @Test
    public void test1259() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1259");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str5 = python2Target1.getTargetStringLiteralFromString("hi!", false);
        int int6 = python2Target1.getInlineTestSetWordSize();
        boolean boolean7 = python2Target1.wantsBaseVisitor();
        java.lang.String str8 = python2Target1.getLanguage();
        python2Target1.addBadWords();
        boolean boolean10 = python2Target1.templatesExist();
        java.lang.String str12 = python2Target1.getTargetStringLiteralFromString("");
        java.lang.String[] strArray13 = python2Target1.targetCharValueEscape;
        java.lang.String str15 = python2Target1.encodeIntAsCharEscape(0);
        org.antlr.v4.tool.ast.GrammarAST grammarAST16 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean17 = python2Target1.grammarSymbolCausesIssueInGeneratedCode(grammarAST16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 64 + "'", int6 == 64);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Python2" + "'", str8, "Python2");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "\"\"" + "'", str12, "\"\"");
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "\\0" + "'", str15, "\\0");
    }

    @Test
    public void test1260() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1260");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str5 = python2Target1.getTargetStringLiteralFromString("4.5.2.1", true);
        boolean boolean6 = python2Target1.templatesExist();
        org.stringtemplate.v4.STGroup sTGroup7 = python2Target1.templates;
        org.stringtemplate.v4.STGroup sTGroup8 = python2Target1.templates;
        java.lang.String str10 = python2Target1.getListLabel("_tset");
        java.lang.String str11 = python2Target1.getLanguage();
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "\"4.5.2.1\"" + "'", str5, "\"4.5.2.1\"");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(sTGroup7);
        org.junit.Assert.assertNull(sTGroup8);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "_tset" + "'", str10, "_tset");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Python2" + "'", str11, "Python2");
    }

    @Test
    public void test1261() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1261");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str5 = python2Target1.getTargetStringLiteralFromString("hi!", false);
        java.lang.String str7 = python2Target1.getImplicitRuleLabel("@");
        python2Target1.language = "hi!";
        boolean boolean10 = python2Target1.supportsOverloadedMethods();
        boolean boolean11 = python2Target1.templatesExist();
        org.antlr.v4.codegen.CodeGenerator codeGenerator12 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target13 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator12);
        java.util.Set<java.lang.String> strSet14 = python2Target13.badWords;
        boolean boolean15 = python2Target13.wantsBaseVisitor();
        org.stringtemplate.v4.STGroup sTGroup16 = python2Target13.loadTemplates();
        org.stringtemplate.v4.STGroup sTGroup17 = python2Target13.getTemplates();
        java.util.Set<java.lang.String> strSet18 = python2Target13.badWords;
        python2Target1.badWords = strSet18;
        boolean boolean20 = python2Target1.wantsBaseVisitor();
        org.antlr.v4.codegen.CodeGenerator codeGenerator21 = null;
        java.lang.String str24 = python2Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator21, "_\"4.5.2.1\"", false);
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "_@" + "'", str7, "_@");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(strSet14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(sTGroup16);
        org.junit.Assert.assertNotNull(sTGroup17);
        org.junit.Assert.assertNotNull(strSet18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "\\\"4.5.2.1" + "'", str24, "\\\"4.5.2.1");
    }

    @Test
    public void test1262() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1262");
        java.lang.String str1 = org.stringtemplate.v4.StringRenderer.escapeHTML("_tset\\\"\\\\\\\"\\\\\\\\\\\\\\\"hi!\\\\\\\\\\\\\\\"\\\\\\\"\\\"");
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "_tset\\\"\\\\\\\"\\\\\\\\\\\\\\\"hi!\\\\\\\\\\\\\\\"\\\\\\\"\\\"" + "'", str1, "_tset\\\"\\\\\\\"\\\\\\\\\\\\\\\"hi!\\\\\\\\\\\\\\\"\\\\\\\"\\\"");
    }

    @Test
    public void test1263() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1263");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        boolean boolean3 = python2Target1.wantsBaseVisitor();
        python2Target1.language = "\"\"";
        java.lang.String str7 = python2Target1.getTargetStringLiteralFromString("__tset");
        boolean boolean8 = python2Target1.templatesExist();
        org.antlr.v4.codegen.CodeGenerator codeGenerator9 = python2Target1.gen;
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = null;
        java.lang.String str13 = python2Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator10, "__@", false);
        boolean boolean14 = python2Target1.wantsBaseListener();
        java.lang.String str15 = python2Target1.language;
        org.antlr.v4.codegen.CodeGenerator codeGenerator16 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target17 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator16);
        java.util.Set<java.lang.String> strSet18 = python2Target17.badWords;
        java.lang.String str21 = python2Target17.getTargetStringLiteralFromString("hi!", false);
        java.lang.String str23 = python2Target17.getImplicitRuleLabel("@");
        python2Target17.language = "hi!";
        boolean boolean26 = python2Target17.supportsOverloadedMethods();
        boolean boolean27 = python2Target17.templatesExist();
        org.antlr.v4.codegen.CodeGenerator codeGenerator28 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target29 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator28);
        java.util.Set<java.lang.String> strSet30 = python2Target29.badWords;
        boolean boolean31 = python2Target29.wantsBaseVisitor();
        org.stringtemplate.v4.STGroup sTGroup32 = python2Target29.loadTemplates();
        org.stringtemplate.v4.STGroup sTGroup33 = python2Target29.getTemplates();
        java.util.Set<java.lang.String> strSet34 = python2Target29.badWords;
        python2Target17.badWords = strSet34;
        python2Target1.badWords = strSet34;
        python2Target1.language = "Tset\\\"tset_tsetContexContext";
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "\"__tset\"" + "'", str7, "\"__tset\"");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(codeGenerator9);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "_" + "'", str13, "_");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "\"\"" + "'", str15, "\"\"");
        org.junit.Assert.assertNotNull(strSet18);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "hi!" + "'", str21, "hi!");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "_@" + "'", str23, "_@");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(strSet30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(sTGroup32);
        org.junit.Assert.assertNotNull(sTGroup33);
        org.junit.Assert.assertNotNull(strSet34);
    }

    @Test
    public void test1264() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1264");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str4 = python2Target1.encodeIntAsCharEscape(64);
        java.lang.String str5 = python2Target1.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target7 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator6);
        java.lang.String[] strArray8 = python2Target7.targetCharValueEscape;
        java.lang.String str9 = python2Target7.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup10 = python2Target7.getTemplates();
        python2Target1.templates = sTGroup10;
        org.stringtemplate.v4.STGroup sTGroup12 = python2Target1.templates;
        java.util.Set<java.lang.String> strSet13 = python2Target1.badWords;
        boolean boolean14 = python2Target1.supportsOverloadedMethods();
        java.lang.String str16 = python2Target1.getImplicitSetLabel("\"Hi!Context\"");
        python2Target1.addBadWords();
        int int18 = python2Target1.getInlineTestSetWordSize();
        java.lang.String str19 = python2Target1.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup20 = python2Target1.getTemplates();
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "@" + "'", str4, "@");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Python2" + "'", str5, "Python2");
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Python2" + "'", str9, "Python2");
        org.junit.Assert.assertNotNull(sTGroup10);
        org.junit.Assert.assertNotNull(sTGroup12);
        org.junit.Assert.assertNotNull(strSet13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "_tset\"Hi!Context\"" + "'", str16, "_tset\"Hi!Context\"");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 64 + "'", int18 == 64);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Python2" + "'", str19, "Python2");
        org.junit.Assert.assertNotNull(sTGroup20);
    }

    @Test
    public void test1265() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1265");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String[] strArray2 = python2Target1.targetCharValueEscape;
        java.lang.String str3 = python2Target1.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup4 = python2Target1.getTemplates();
        boolean boolean5 = python2Target1.wantsBaseVisitor();
        java.lang.String str7 = python2Target1.getTargetStringLiteralFromString("d");
        org.antlr.v4.tool.Grammar grammar8 = null;
        org.stringtemplate.v4.ST sT9 = null;
        python2Target1.genRecognizerHeaderFile(grammar8, sT9, "\"\\\"d\\\"\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator12 = null;
        python2Target1.gen = codeGenerator12;
        java.lang.String str14 = python2Target1.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator15 = python2Target1.getCodeGenerator();
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Python2" + "'", str3, "Python2");
        org.junit.Assert.assertNotNull(sTGroup4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "\"d\"" + "'", str7, "\"d\"");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "4.5.2.1" + "'", str14, "4.5.2.1");
        org.junit.Assert.assertNull(codeGenerator15);
    }

    @Test
    public void test1266() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1266");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String str3 = python2Target1.getImplicitSetLabel("");
        org.antlr.v4.codegen.CodeGenerator codeGenerator4 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target5 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator4);
        java.util.Set<java.lang.String> strSet6 = python2Target5.badWords;
        java.lang.String str8 = python2Target5.encodeIntAsCharEscape(64);
        java.lang.String str9 = python2Target5.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target11 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator10);
        java.lang.String[] strArray12 = python2Target11.targetCharValueEscape;
        java.lang.String str13 = python2Target11.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup14 = python2Target11.getTemplates();
        python2Target5.templates = sTGroup14;
        python2Target1.templates = sTGroup14;
        boolean boolean17 = python2Target1.templatesExist();
        org.antlr.v4.codegen.CodeGenerator codeGenerator18 = python2Target1.gen;
        boolean boolean19 = python2Target1.wantsBaseVisitor();
        python2Target1.language = "\"_tset \"";
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "_tset" + "'", str3, "_tset");
        org.junit.Assert.assertNotNull(strSet6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "@" + "'", str8, "@");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Python2" + "'", str9, "Python2");
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Python2" + "'", str13, "Python2");
        org.junit.Assert.assertNotNull(sTGroup14);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNull(codeGenerator18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    }

    @Test
    public void test1267() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1267");
        org.antlr.v4.codegen.target.Python2Target python2Target0 = new org.antlr.v4.codegen.target.Python2Target();
        org.stringtemplate.v4.STGroup sTGroup1 = python2Target0.templates;
        java.lang.String[] strArray2 = python2Target0.targetCharValueEscape;
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target4 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator3);
        java.lang.String[] strArray5 = python2Target4.targetCharValueEscape;
        java.lang.String str8 = python2Target4.getTargetStringLiteralFromString("Python2", false);
        java.lang.String[] strArray9 = org.antlr.v4.codegen.target.Python2Target.python2Keywords;
        python2Target4.targetCharValueEscape = strArray9;
        python2Target0.targetCharValueEscape = strArray9;
        java.lang.Class<?> wildcardClass12 = strArray9.getClass();
        org.junit.Assert.assertNull(sTGroup1);
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Python2" + "'", str8, "Python2");
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test1268() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1268");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str4 = python2Target1.encodeIntAsCharEscape(64);
        java.lang.String str5 = python2Target1.getLanguage();
        java.lang.String str8 = python2Target1.getTargetStringLiteralFromString("_@", false);
        java.lang.String str9 = python2Target1.language;
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = python2Target1.getCodeGenerator();
        java.lang.String str12 = python2Target1.getAltLabelContextStructName("_\"_tset\"");
        java.lang.String str13 = python2Target1.getVersion();
        java.lang.String str14 = python2Target1.language;
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "@" + "'", str4, "@");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Python2" + "'", str5, "Python2");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "_@" + "'", str8, "_@");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Python2" + "'", str9, "Python2");
        org.junit.Assert.assertNull(codeGenerator10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "_\"_tset\"Context" + "'", str12, "_\"_tset\"Context");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "4.5.2.1" + "'", str13, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Python2" + "'", str14, "Python2");
    }

    @Test
    public void test1269() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1269");
        org.antlr.v4.codegen.target.Python2Target.PythonStringRenderer pythonStringRenderer0 = new org.antlr.v4.codegen.target.Python2Target.PythonStringRenderer();
        org.antlr.v4.codegen.CodeGenerator codeGenerator1 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target2 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator1);
        java.lang.String[] strArray3 = python2Target2.targetCharValueEscape;
        java.lang.String str6 = python2Target2.getTargetStringLiteralFromString("Python2", false);
        java.lang.String str7 = python2Target2.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = python2Target2.gen;
        java.util.Locale locale10 = null;
        java.lang.String str11 = pythonStringRenderer0.toString((java.lang.Object) codeGenerator8, "\"4.5.2.1\"", locale10);
        org.antlr.v4.codegen.CodeGenerator codeGenerator12 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target13 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator12);
        java.lang.String[] strArray14 = python2Target13.targetCharValueEscape;
        java.lang.String str15 = python2Target13.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup16 = python2Target13.templates;
        java.lang.String str18 = python2Target13.getListLabel("\\n");
        org.antlr.v4.tool.Grammar grammar19 = null;
        org.stringtemplate.v4.ST sT20 = null;
        python2Target13.genRecognizerHeaderFile(grammar19, sT20, "\"4.5.2.1\"");
        int int23 = python2Target13.getSerializedATNSegmentLimit();
        java.lang.String str24 = python2Target13.language;
        org.antlr.v4.tool.Grammar grammar25 = null;
        org.stringtemplate.v4.ST sT26 = null;
        python2Target13.genRecognizerHeaderFile(grammar25, sT26, "_tset_\"#\"");
        java.util.Locale locale30 = null;
        java.lang.String str31 = pythonStringRenderer0.toString((java.lang.Object) "_tset_\"#\"", "\"_\"\\\"hi!\\\"\"\"", locale30);
        org.antlr.v4.codegen.CodeGenerator codeGenerator32 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target33 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator32);
        java.util.Set<java.lang.String> strSet34 = python2Target33.badWords;
        java.lang.String str37 = python2Target33.getTargetStringLiteralFromString("hi!", false);
        int int38 = python2Target33.getInlineTestSetWordSize();
        java.lang.String str40 = python2Target33.getTargetStringLiteralFromString("Hi!Context");
        java.lang.String str41 = python2Target33.getLanguage();
        python2Target33.language = "\"\\\"hi!\\\"\"";
        java.util.Locale locale45 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str46 = pythonStringRenderer0.toString((java.lang.Object) python2Target33, "\"__\\\"\\\\\\\"\\\\\\\\\\\\\\\"hi!\\\\\\\\\\\\\\\"\\\\\\\"\\\"\"", locale45);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: org.antlr.v4.codegen.target.Python2Target cannot be cast to java.lang.String");
        } catch (java.lang.ClassCastException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Python2" + "'", str6, "Python2");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "4.5.2.1" + "'", str7, "4.5.2.1");
        org.junit.Assert.assertNull(codeGenerator8);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "\"4.5.2.1\"" + "'", str11, "\"4.5.2.1\"");
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Python2" + "'", str15, "Python2");
        org.junit.Assert.assertNull(sTGroup16);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "\\n" + "'", str18, "\\n");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 2147483647 + "'", int23 == 2147483647);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "Python2" + "'", str24, "Python2");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "\"_\"\\\"hi!\\\"\"\"" + "'", str31, "\"_\"\\\"hi!\\\"\"\"");
        org.junit.Assert.assertNotNull(strSet34);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "hi!" + "'", str37, "hi!");
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 64 + "'", int38 == 64);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "\"Hi!Context\"" + "'", str40, "\"Hi!Context\"");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "Python2" + "'", str41, "Python2");
    }

    @Test
    public void test1270() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1270");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str4 = python2Target1.encodeIntAsCharEscape(64);
        java.lang.String str5 = python2Target1.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target7 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator6);
        java.lang.String[] strArray8 = python2Target7.targetCharValueEscape;
        java.lang.String str9 = python2Target7.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup10 = python2Target7.getTemplates();
        python2Target1.templates = sTGroup10;
        org.stringtemplate.v4.STGroup sTGroup12 = python2Target1.templates;
        java.util.Set<java.lang.String> strSet13 = python2Target1.badWords;
        boolean boolean14 = python2Target1.supportsOverloadedMethods();
        java.lang.String str16 = python2Target1.getListLabel("_@");
        java.lang.String str18 = python2Target1.getImplicitRuleLabel("");
        org.antlr.v4.tool.Grammar grammar19 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str21 = python2Target1.getTokenTypeAsTargetLabel(grammar19, (int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "@" + "'", str4, "@");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Python2" + "'", str5, "Python2");
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Python2" + "'", str9, "Python2");
        org.junit.Assert.assertNotNull(sTGroup10);
        org.junit.Assert.assertNotNull(sTGroup12);
        org.junit.Assert.assertNotNull(strSet13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "_@" + "'", str16, "_@");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "_" + "'", str18, "_");
    }

    @Test
    public void test1271() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1271");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str5 = python2Target1.getTargetStringLiteralFromString("hi!", false);
        java.lang.String str7 = python2Target1.getImplicitRuleLabel("@");
        python2Target1.language = "hi!";
        java.util.Set<java.lang.String> strSet10 = python2Target1.getBadWords();
        org.stringtemplate.v4.STGroup sTGroup11 = python2Target1.templates;
        org.antlr.v4.tool.Grammar grammar12 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator13 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target14 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator13);
        java.lang.String[] strArray15 = python2Target14.targetCharValueEscape;
        java.lang.String str16 = python2Target14.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup17 = python2Target14.getTemplates();
        org.antlr.v4.codegen.CodeGenerator codeGenerator18 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target19 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator18);
        java.util.Set<java.lang.String> strSet20 = python2Target19.badWords;
        python2Target14.badWords = strSet20;
        org.antlr.v4.codegen.CodeGenerator codeGenerator22 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target23 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator22);
        java.util.Set<java.lang.String> strSet24 = python2Target23.badWords;
        java.lang.String str27 = python2Target23.getTargetStringLiteralFromString("hi!", false);
        java.lang.String str29 = python2Target23.getImplicitRuleLabel("@");
        python2Target23.language = "hi!";
        org.antlr.v4.codegen.CodeGenerator codeGenerator32 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target33 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator32);
        java.util.Set<java.lang.String> strSet34 = python2Target33.badWords;
        java.lang.String str36 = python2Target33.encodeIntAsCharEscape(64);
        java.lang.String str37 = python2Target33.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator38 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target39 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator38);
        java.lang.String[] strArray40 = python2Target39.targetCharValueEscape;
        java.lang.String str41 = python2Target39.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup42 = python2Target39.getTemplates();
        python2Target33.templates = sTGroup42;
        org.antlr.v4.codegen.CodeGenerator codeGenerator44 = python2Target33.getCodeGenerator();
        org.stringtemplate.v4.STGroup sTGroup45 = python2Target33.loadTemplates();
        python2Target23.templates = sTGroup45;
        python2Target14.templates = sTGroup45;
        org.antlr.v4.codegen.CodeGenerator codeGenerator48 = null;
        java.lang.String str51 = python2Target14.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator48, "@", false);
        python2Target14.language = "\"4.5.2.1\"";
        org.antlr.v4.tool.Grammar grammar54 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator55 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target56 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator55);
        java.lang.String[] strArray57 = python2Target56.targetCharValueEscape;
        java.lang.String str60 = python2Target56.getTargetStringLiteralFromString("_tset\\1", false);
        org.antlr.v4.tool.Grammar grammar61 = null;
        int[] intArray62 = new int[] {};
        java.lang.String[] strArray63 = python2Target56.getTokenTypesAsTargetLabels(grammar61, intArray62);
        java.lang.String[] strArray64 = python2Target14.getTokenTypesAsTargetLabels(grammar54, intArray62);
        java.lang.String[] strArray65 = python2Target1.getTokenTypesAsTargetLabels(grammar12, intArray62);
        boolean boolean66 = python2Target1.supportsOverloadedMethods();
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "_@" + "'", str7, "_@");
        org.junit.Assert.assertNotNull(strSet10);
        org.junit.Assert.assertNotNull(sTGroup11);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Python2" + "'", str16, "Python2");
        org.junit.Assert.assertNotNull(sTGroup17);
        org.junit.Assert.assertNotNull(strSet20);
        org.junit.Assert.assertNotNull(strSet24);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "hi!" + "'", str27, "hi!");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "_@" + "'", str29, "_@");
        org.junit.Assert.assertNotNull(strSet34);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "@" + "'", str36, "@");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "Python2" + "'", str37, "Python2");
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "Python2" + "'", str41, "Python2");
        org.junit.Assert.assertNotNull(sTGroup42);
        org.junit.Assert.assertNull(codeGenerator44);
        org.junit.Assert.assertNotNull(sTGroup45);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "" + "'", str51, "");
        org.junit.Assert.assertNotNull(strArray57);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "_tset\\\\1" + "'", str60, "_tset\\\\1");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[]");
        org.junit.Assert.assertNotNull(strArray63);
        org.junit.Assert.assertNotNull(strArray64);
        org.junit.Assert.assertNotNull(strArray65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
    }

    @Test
    public void test1272() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1272");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String str3 = python2Target1.getImplicitSetLabel("");
        org.antlr.v4.codegen.CodeGenerator codeGenerator4 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target5 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator4);
        java.util.Set<java.lang.String> strSet6 = python2Target5.badWords;
        java.lang.String str8 = python2Target5.encodeIntAsCharEscape(64);
        java.lang.String str9 = python2Target5.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target11 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator10);
        java.lang.String[] strArray12 = python2Target11.targetCharValueEscape;
        java.lang.String str13 = python2Target11.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup14 = python2Target11.getTemplates();
        python2Target5.templates = sTGroup14;
        python2Target1.templates = sTGroup14;
        java.lang.String str18 = python2Target1.getAltLabelContextStructName("_tset");
        java.lang.String str19 = python2Target1.getLanguage();
        boolean boolean20 = python2Target1.supportsOverloadedMethods();
        java.lang.String str21 = python2Target1.getVersion();
        java.util.Set<java.lang.String> strSet22 = python2Target1.badWords;
        org.stringtemplate.v4.STGroup sTGroup23 = python2Target1.templates;
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "_tset" + "'", str3, "_tset");
        org.junit.Assert.assertNotNull(strSet6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "@" + "'", str8, "@");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Python2" + "'", str9, "Python2");
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Python2" + "'", str13, "Python2");
        org.junit.Assert.assertNotNull(sTGroup14);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "_tsetContext" + "'", str18, "_tsetContext");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Python2" + "'", str19, "Python2");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "4.5.2.1" + "'", str21, "4.5.2.1");
        org.junit.Assert.assertNotNull(strSet22);
        org.junit.Assert.assertNotNull(sTGroup23);
    }

    @Test
    public void test1273() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1273");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str5 = python2Target1.getTargetStringLiteralFromString("hi!", false);
        int int6 = python2Target1.getInlineTestSetWordSize();
        java.lang.String str8 = python2Target1.getTargetStringLiteralFromString("Hi!Context");
        java.util.Set<java.lang.String> strSet9 = python2Target1.badWords;
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = null;
        java.lang.String str13 = python2Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator10, "hi!", false);
        java.util.Set<java.lang.String> strSet14 = python2Target1.badWords;
        java.util.Set<java.lang.String> strSet15 = python2Target1.getBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator16 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target17 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator16);
        java.lang.String[] strArray18 = python2Target17.targetCharValueEscape;
        java.lang.String str19 = python2Target17.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup20 = python2Target17.getTemplates();
        org.antlr.v4.codegen.CodeGenerator codeGenerator21 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target22 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator21);
        java.util.Set<java.lang.String> strSet23 = python2Target22.badWords;
        python2Target17.badWords = strSet23;
        org.antlr.v4.codegen.CodeGenerator codeGenerator25 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target26 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator25);
        java.util.Set<java.lang.String> strSet27 = python2Target26.badWords;
        java.lang.String str30 = python2Target26.getTargetStringLiteralFromString("hi!", false);
        java.lang.String str32 = python2Target26.getImplicitRuleLabel("@");
        python2Target26.language = "hi!";
        org.antlr.v4.codegen.CodeGenerator codeGenerator35 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target36 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator35);
        java.util.Set<java.lang.String> strSet37 = python2Target36.badWords;
        java.lang.String str39 = python2Target36.encodeIntAsCharEscape(64);
        java.lang.String str40 = python2Target36.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator41 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target42 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator41);
        java.lang.String[] strArray43 = python2Target42.targetCharValueEscape;
        java.lang.String str44 = python2Target42.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup45 = python2Target42.getTemplates();
        python2Target36.templates = sTGroup45;
        org.antlr.v4.codegen.CodeGenerator codeGenerator47 = python2Target36.getCodeGenerator();
        org.stringtemplate.v4.STGroup sTGroup48 = python2Target36.loadTemplates();
        python2Target26.templates = sTGroup48;
        python2Target17.templates = sTGroup48;
        org.antlr.v4.codegen.CodeGenerator codeGenerator51 = null;
        java.lang.String str54 = python2Target17.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator51, "@", false);
        org.stringtemplate.v4.STGroup sTGroup55 = python2Target17.loadTemplates();
        python2Target1.templates = sTGroup55;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str58 = python2Target1.getElementListName("_hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 64 + "'", int6 == 64);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\"Hi!Context\"" + "'", str8, "\"Hi!Context\"");
        org.junit.Assert.assertNotNull(strSet9);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "i" + "'", str13, "i");
        org.junit.Assert.assertNotNull(strSet14);
        org.junit.Assert.assertNotNull(strSet15);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Python2" + "'", str19, "Python2");
        org.junit.Assert.assertNotNull(sTGroup20);
        org.junit.Assert.assertNotNull(strSet23);
        org.junit.Assert.assertNotNull(strSet27);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "hi!" + "'", str30, "hi!");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "_@" + "'", str32, "_@");
        org.junit.Assert.assertNotNull(strSet37);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "@" + "'", str39, "@");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "Python2" + "'", str40, "Python2");
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "Python2" + "'", str44, "Python2");
        org.junit.Assert.assertNotNull(sTGroup45);
        org.junit.Assert.assertNull(codeGenerator47);
        org.junit.Assert.assertNotNull(sTGroup48);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "" + "'", str54, "");
        org.junit.Assert.assertNotNull(sTGroup55);
    }

    @Test
    public void test1274() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1274");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String[] strArray2 = python2Target1.targetCharValueEscape;
        java.lang.String str3 = python2Target1.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup4 = python2Target1.getTemplates();
        boolean boolean5 = python2Target1.wantsBaseVisitor();
        java.lang.String str7 = python2Target1.getTargetStringLiteralFromString("d");
        java.lang.String[] strArray13 = new java.lang.String[] { "_tset\\1", "i", "__tset", "\"\\\"d\\\"\"", "_tsetContextContext" };
        python2Target1.targetCharValueEscape = strArray13;
        boolean boolean15 = python2Target1.templatesExist();
        org.antlr.v4.codegen.CodeGenerator codeGenerator16 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target17 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator16);
        java.util.Set<java.lang.String> strSet18 = python2Target17.badWords;
        java.lang.String str20 = python2Target17.encodeIntAsCharEscape(64);
        java.lang.String str21 = python2Target17.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup22 = python2Target17.getTemplates();
        org.antlr.v4.codegen.CodeGenerator codeGenerator23 = python2Target17.getCodeGenerator();
        java.util.Set<java.lang.String> strSet24 = python2Target17.getBadWords();
        python2Target1.badWords = strSet24;
        org.antlr.v4.tool.ast.GrammarAST grammarAST26 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str27 = python2Target1.getLoopLabel(grammarAST26);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Python2" + "'", str3, "Python2");
        org.junit.Assert.assertNotNull(sTGroup4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "\"d\"" + "'", str7, "\"d\"");
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(strSet18);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "@" + "'", str20, "@");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Python2" + "'", str21, "Python2");
        org.junit.Assert.assertNotNull(sTGroup22);
        org.junit.Assert.assertNull(codeGenerator23);
        org.junit.Assert.assertNotNull(strSet24);
    }

    @Test
    public void test1275() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1275");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str5 = python2Target1.getTargetStringLiteralFromString("hi!", false);
        int int6 = python2Target1.getInlineTestSetWordSize();
        java.lang.String str8 = python2Target1.getTargetStringLiteralFromString("Hi!Context");
        java.util.Set<java.lang.String> strSet9 = python2Target1.badWords;
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = null;
        java.lang.String str13 = python2Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator10, "hi!", false);
        java.util.Set<java.lang.String> strSet14 = python2Target1.badWords;
        java.util.Set<java.lang.String> strSet15 = python2Target1.getBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator16 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target17 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator16);
        java.lang.String[] strArray18 = python2Target17.targetCharValueEscape;
        java.lang.String str19 = python2Target17.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup20 = python2Target17.getTemplates();
        org.antlr.v4.codegen.CodeGenerator codeGenerator21 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target22 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator21);
        java.util.Set<java.lang.String> strSet23 = python2Target22.badWords;
        python2Target17.badWords = strSet23;
        org.antlr.v4.codegen.CodeGenerator codeGenerator25 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target26 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator25);
        java.util.Set<java.lang.String> strSet27 = python2Target26.badWords;
        java.lang.String str30 = python2Target26.getTargetStringLiteralFromString("hi!", false);
        java.lang.String str32 = python2Target26.getImplicitRuleLabel("@");
        python2Target26.language = "hi!";
        org.antlr.v4.codegen.CodeGenerator codeGenerator35 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target36 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator35);
        java.util.Set<java.lang.String> strSet37 = python2Target36.badWords;
        java.lang.String str39 = python2Target36.encodeIntAsCharEscape(64);
        java.lang.String str40 = python2Target36.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator41 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target42 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator41);
        java.lang.String[] strArray43 = python2Target42.targetCharValueEscape;
        java.lang.String str44 = python2Target42.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup45 = python2Target42.getTemplates();
        python2Target36.templates = sTGroup45;
        org.antlr.v4.codegen.CodeGenerator codeGenerator47 = python2Target36.getCodeGenerator();
        org.stringtemplate.v4.STGroup sTGroup48 = python2Target36.loadTemplates();
        python2Target26.templates = sTGroup48;
        python2Target17.templates = sTGroup48;
        org.antlr.v4.codegen.CodeGenerator codeGenerator51 = null;
        java.lang.String str54 = python2Target17.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator51, "@", false);
        org.stringtemplate.v4.STGroup sTGroup55 = python2Target17.loadTemplates();
        python2Target1.templates = sTGroup55;
        java.util.Set<java.lang.String> strSet57 = python2Target1.getBadWords();
        java.lang.String[] strArray58 = python2Target1.targetCharValueEscape;
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 64 + "'", int6 == 64);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\"Hi!Context\"" + "'", str8, "\"Hi!Context\"");
        org.junit.Assert.assertNotNull(strSet9);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "i" + "'", str13, "i");
        org.junit.Assert.assertNotNull(strSet14);
        org.junit.Assert.assertNotNull(strSet15);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Python2" + "'", str19, "Python2");
        org.junit.Assert.assertNotNull(sTGroup20);
        org.junit.Assert.assertNotNull(strSet23);
        org.junit.Assert.assertNotNull(strSet27);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "hi!" + "'", str30, "hi!");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "_@" + "'", str32, "_@");
        org.junit.Assert.assertNotNull(strSet37);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "@" + "'", str39, "@");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "Python2" + "'", str40, "Python2");
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "Python2" + "'", str44, "Python2");
        org.junit.Assert.assertNotNull(sTGroup45);
        org.junit.Assert.assertNull(codeGenerator47);
        org.junit.Assert.assertNotNull(sTGroup48);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "" + "'", str54, "");
        org.junit.Assert.assertNotNull(sTGroup55);
        org.junit.Assert.assertNotNull(strSet57);
        org.junit.Assert.assertNotNull(strArray58);
    }

    @Test
    public void test1276() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1276");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String[] strArray2 = python2Target1.targetCharValueEscape;
        java.lang.String str3 = python2Target1.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup4 = python2Target1.templates;
        boolean boolean5 = python2Target1.templatesExist();
        java.lang.String str6 = python2Target1.getLanguage();
        python2Target1.addBadWords();
        java.lang.String str8 = python2Target1.language;
        python2Target1.language = "";
        boolean boolean11 = python2Target1.wantsBaseVisitor();
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Python2" + "'", str3, "Python2");
        org.junit.Assert.assertNull(sTGroup4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Python2" + "'", str6, "Python2");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Python2" + "'", str8, "Python2");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test1277() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1277");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str4 = python2Target1.encodeIntAsCharEscape(64);
        java.lang.String str5 = python2Target1.getLanguage();
        int int6 = python2Target1.getInlineTestSetWordSize();
        java.lang.String str8 = python2Target1.getImplicitSetLabel("_tset\\\\1");
        java.lang.String str10 = python2Target1.getListLabel("\"tset_tsetContex\"");
        org.antlr.v4.tool.Grammar grammar11 = null;
        org.stringtemplate.v4.ST sT12 = null;
        // The following exception was thrown during execution in test generation
        try {
            python2Target1.genListenerFile(grammar11, sT12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "@" + "'", str4, "@");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Python2" + "'", str5, "Python2");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 64 + "'", int6 == 64);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "_tset_tset\\\\1" + "'", str8, "_tset_tset\\\\1");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\"tset_tsetContex\"" + "'", str10, "\"tset_tsetContex\"");
    }

    @Test
    public void test1278() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1278");
        org.antlr.v4.codegen.target.Python2Target.PythonStringRenderer pythonStringRenderer0 = new org.antlr.v4.codegen.target.Python2Target.PythonStringRenderer();
        java.lang.Object obj1 = null;
        java.util.Locale locale3 = null;
        java.lang.String str4 = pythonStringRenderer0.toString(obj1, "_@", locale3);
        org.antlr.v4.codegen.CodeGenerator codeGenerator5 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target6 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator5);
        java.util.Set<java.lang.String> strSet7 = python2Target6.badWords;
        java.lang.String str9 = python2Target6.encodeIntAsCharEscape(64);
        org.stringtemplate.v4.STGroup sTGroup10 = python2Target6.loadTemplates();
        java.lang.String str11 = python2Target6.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator12 = python2Target6.getCodeGenerator();
        java.util.Locale locale14 = null;
        java.lang.String str15 = pythonStringRenderer0.toString((java.lang.Object) codeGenerator12, "__tsetContext", locale14);
        org.antlr.v4.codegen.CodeGenerator codeGenerator16 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target17 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator16);
        java.util.Set<java.lang.String> strSet18 = python2Target17.badWords;
        java.lang.String str21 = python2Target17.getTargetStringLiteralFromString("hi!", false);
        java.lang.String str23 = python2Target17.getImplicitRuleLabel("@");
        python2Target17.language = "hi!";
        java.lang.String str27 = python2Target17.getListLabel("Python2");
        java.util.Locale locale29 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str30 = pythonStringRenderer0.toString((java.lang.Object) python2Target17, "tsetContextContex", locale29);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: org.antlr.v4.codegen.target.Python2Target cannot be cast to java.lang.String");
        } catch (java.lang.ClassCastException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "_@" + "'", str4, "_@");
        org.junit.Assert.assertNotNull(strSet7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "@" + "'", str9, "@");
        org.junit.Assert.assertNotNull(sTGroup10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Python2" + "'", str11, "Python2");
        org.junit.Assert.assertNull(codeGenerator12);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "__tsetContext" + "'", str15, "__tsetContext");
        org.junit.Assert.assertNotNull(strSet18);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "hi!" + "'", str21, "hi!");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "_@" + "'", str23, "_@");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "Python2" + "'", str27, "Python2");
    }

    @Test
    public void test1279() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1279");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String[] strArray2 = python2Target1.targetCharValueEscape;
        java.lang.String str3 = python2Target1.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup4 = python2Target1.getTemplates();
        org.antlr.v4.codegen.CodeGenerator codeGenerator5 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target6 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator5);
        java.util.Set<java.lang.String> strSet7 = python2Target6.badWords;
        python2Target1.badWords = strSet7;
        java.lang.String str10 = python2Target1.getListLabel("4.5.2.1");
        java.lang.String str11 = python2Target1.language;
        int int12 = python2Target1.getSerializedATNSegmentLimit();
        org.antlr.v4.codegen.CodeGenerator codeGenerator13 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target14 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator13);
        java.util.Set<java.lang.String> strSet15 = python2Target14.badWords;
        java.lang.String str17 = python2Target14.encodeIntAsCharEscape(64);
        java.lang.String str18 = python2Target14.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator19 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target20 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator19);
        java.lang.String[] strArray21 = python2Target20.targetCharValueEscape;
        java.lang.String str22 = python2Target20.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup23 = python2Target20.getTemplates();
        python2Target14.templates = sTGroup23;
        org.stringtemplate.v4.STGroup sTGroup25 = python2Target14.templates;
        python2Target1.templates = sTGroup25;
        java.lang.String str27 = python2Target1.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator28 = python2Target1.getCodeGenerator();
        java.util.Set<java.lang.String> strSet29 = python2Target1.badWords;
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Python2" + "'", str3, "Python2");
        org.junit.Assert.assertNotNull(sTGroup4);
        org.junit.Assert.assertNotNull(strSet7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "4.5.2.1" + "'", str10, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Python2" + "'", str11, "Python2");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 2147483647 + "'", int12 == 2147483647);
        org.junit.Assert.assertNotNull(strSet15);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "@" + "'", str17, "@");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Python2" + "'", str18, "Python2");
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "Python2" + "'", str22, "Python2");
        org.junit.Assert.assertNotNull(sTGroup23);
        org.junit.Assert.assertNotNull(sTGroup25);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "4.5.2.1" + "'", str27, "4.5.2.1");
        org.junit.Assert.assertNull(codeGenerator28);
        org.junit.Assert.assertNotNull(strSet29);
    }

    @Test
    public void test1280() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1280");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String[] strArray2 = python2Target1.targetCharValueEscape;
        java.lang.String str3 = python2Target1.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup4 = python2Target1.getTemplates();
        java.lang.String str6 = python2Target1.getTargetStringLiteralFromString("_tset");
        java.lang.String str7 = python2Target1.getVersion();
        int int8 = python2Target1.getSerializedATNSegmentLimit();
        org.antlr.v4.codegen.CodeGenerator codeGenerator9 = python2Target1.getCodeGenerator();
        python2Target1.addBadWords();
        org.antlr.v4.tool.Grammar grammar11 = null;
        org.stringtemplate.v4.ST sT12 = null;
        // The following exception was thrown during execution in test generation
        try {
            python2Target1.genFile(grammar11, sT12, "\\\"\\\\\\\"hi!\\\\\\\"\\\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Python2" + "'", str3, "Python2");
        org.junit.Assert.assertNotNull(sTGroup4);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\"_tset\"" + "'", str6, "\"_tset\"");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "4.5.2.1" + "'", str7, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 2147483647 + "'", int8 == 2147483647);
        org.junit.Assert.assertNull(codeGenerator9);
    }

    @Test
    public void test1281() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1281");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str5 = python2Target1.getTargetStringLiteralFromString("hi!", false);
        int int6 = python2Target1.getInlineTestSetWordSize();
        java.lang.String str8 = python2Target1.getTargetStringLiteralFromString("Hi!Context");
        java.util.Set<java.lang.String> strSet9 = python2Target1.badWords;
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = null;
        java.lang.String str13 = python2Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator10, "hi!", false);
        java.util.Set<java.lang.String> strSet14 = python2Target1.badWords;
        java.util.Set<java.lang.String> strSet15 = python2Target1.getBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator16 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target17 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator16);
        java.lang.String[] strArray18 = python2Target17.targetCharValueEscape;
        java.lang.String str19 = python2Target17.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup20 = python2Target17.getTemplates();
        org.antlr.v4.codegen.CodeGenerator codeGenerator21 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target22 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator21);
        java.util.Set<java.lang.String> strSet23 = python2Target22.badWords;
        python2Target17.badWords = strSet23;
        org.antlr.v4.codegen.CodeGenerator codeGenerator25 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target26 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator25);
        java.util.Set<java.lang.String> strSet27 = python2Target26.badWords;
        java.lang.String str30 = python2Target26.getTargetStringLiteralFromString("hi!", false);
        java.lang.String str32 = python2Target26.getImplicitRuleLabel("@");
        python2Target26.language = "hi!";
        org.antlr.v4.codegen.CodeGenerator codeGenerator35 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target36 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator35);
        java.util.Set<java.lang.String> strSet37 = python2Target36.badWords;
        java.lang.String str39 = python2Target36.encodeIntAsCharEscape(64);
        java.lang.String str40 = python2Target36.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator41 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target42 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator41);
        java.lang.String[] strArray43 = python2Target42.targetCharValueEscape;
        java.lang.String str44 = python2Target42.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup45 = python2Target42.getTemplates();
        python2Target36.templates = sTGroup45;
        org.antlr.v4.codegen.CodeGenerator codeGenerator47 = python2Target36.getCodeGenerator();
        org.stringtemplate.v4.STGroup sTGroup48 = python2Target36.loadTemplates();
        python2Target26.templates = sTGroup48;
        python2Target17.templates = sTGroup48;
        org.antlr.v4.codegen.CodeGenerator codeGenerator51 = null;
        java.lang.String str54 = python2Target17.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator51, "@", false);
        org.stringtemplate.v4.STGroup sTGroup55 = python2Target17.loadTemplates();
        python2Target1.templates = sTGroup55;
        java.util.Set<java.lang.String> strSet57 = python2Target1.getBadWords();
        org.stringtemplate.v4.STGroup sTGroup58 = python2Target1.getTemplates();
        org.stringtemplate.v4.STGroup sTGroup59 = python2Target1.templates;
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 64 + "'", int6 == 64);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\"Hi!Context\"" + "'", str8, "\"Hi!Context\"");
        org.junit.Assert.assertNotNull(strSet9);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "i" + "'", str13, "i");
        org.junit.Assert.assertNotNull(strSet14);
        org.junit.Assert.assertNotNull(strSet15);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Python2" + "'", str19, "Python2");
        org.junit.Assert.assertNotNull(sTGroup20);
        org.junit.Assert.assertNotNull(strSet23);
        org.junit.Assert.assertNotNull(strSet27);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "hi!" + "'", str30, "hi!");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "_@" + "'", str32, "_@");
        org.junit.Assert.assertNotNull(strSet37);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "@" + "'", str39, "@");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "Python2" + "'", str40, "Python2");
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "Python2" + "'", str44, "Python2");
        org.junit.Assert.assertNotNull(sTGroup45);
        org.junit.Assert.assertNull(codeGenerator47);
        org.junit.Assert.assertNotNull(sTGroup48);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "" + "'", str54, "");
        org.junit.Assert.assertNotNull(sTGroup55);
        org.junit.Assert.assertNotNull(strSet57);
        org.junit.Assert.assertNotNull(sTGroup58);
        org.junit.Assert.assertNotNull(sTGroup59);
    }

    @Test
    public void test1282() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1282");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str4 = python2Target1.encodeIntAsCharEscape(64);
        java.lang.String str5 = python2Target1.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target7 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator6);
        java.lang.String[] strArray8 = python2Target7.targetCharValueEscape;
        java.lang.String str9 = python2Target7.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup10 = python2Target7.getTemplates();
        python2Target1.templates = sTGroup10;
        org.stringtemplate.v4.STGroup sTGroup12 = python2Target1.templates;
        java.util.Set<java.lang.String> strSet13 = python2Target1.badWords;
        boolean boolean14 = python2Target1.supportsOverloadedMethods();
        java.lang.String str16 = python2Target1.getImplicitSetLabel("\"Hi!Context\"");
        java.lang.String str17 = python2Target1.language;
        python2Target1.addBadWords();
        org.antlr.v4.tool.ast.GrammarAST grammarAST19 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str20 = python2Target1.getLoopLabel(grammarAST19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "@" + "'", str4, "@");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Python2" + "'", str5, "Python2");
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Python2" + "'", str9, "Python2");
        org.junit.Assert.assertNotNull(sTGroup10);
        org.junit.Assert.assertNotNull(sTGroup12);
        org.junit.Assert.assertNotNull(strSet13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "_tset\"Hi!Context\"" + "'", str16, "_tset\"Hi!Context\"");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Python2" + "'", str17, "Python2");
    }

    @Test
    public void test1283() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1283");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str5 = python2Target1.getTargetStringLiteralFromString("hi!", false);
        java.lang.String str7 = python2Target1.getImplicitRuleLabel("@");
        python2Target1.language = "hi!";
        java.util.Set<java.lang.String> strSet10 = python2Target1.getBadWords();
        java.lang.String str11 = python2Target1.getLanguage();
        java.util.Set<java.lang.String> strSet12 = python2Target1.getBadWords();
        java.util.Set<java.lang.String> strSet13 = python2Target1.getBadWords();
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "_@" + "'", str7, "_@");
        org.junit.Assert.assertNotNull(strSet10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertNotNull(strSet13);
    }

    @Test
    public void test1284() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1284");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str4 = python2Target1.encodeIntAsCharEscape(64);
        java.lang.String str5 = python2Target1.getLanguage();
        int int6 = python2Target1.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet7 = python2Target1.getBadWords();
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "@" + "'", str4, "@");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Python2" + "'", str5, "Python2");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 64 + "'", int6 == 64);
        org.junit.Assert.assertNotNull(strSet7);
    }

    @Test
    public void test1285() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1285");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str5 = python2Target1.getTargetStringLiteralFromString("hi!", false);
        int int6 = python2Target1.getInlineTestSetWordSize();
        java.lang.String str8 = python2Target1.getTargetStringLiteralFromString("Hi!Context");
        java.util.Set<java.lang.String> strSet9 = python2Target1.badWords;
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = null;
        java.lang.String str13 = python2Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator10, "hi!", false);
        java.util.Set<java.lang.String> strSet14 = python2Target1.badWords;
        org.antlr.v4.codegen.CodeGenerator codeGenerator15 = python2Target1.gen;
        java.util.Set<java.lang.String> strSet16 = python2Target1.getBadWords();
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 64 + "'", int6 == 64);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\"Hi!Context\"" + "'", str8, "\"Hi!Context\"");
        org.junit.Assert.assertNotNull(strSet9);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "i" + "'", str13, "i");
        org.junit.Assert.assertNotNull(strSet14);
        org.junit.Assert.assertNull(codeGenerator15);
        org.junit.Assert.assertNotNull(strSet16);
    }

    @Test
    public void test1286() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1286");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str4 = python2Target1.encodeIntAsCharEscape(64);
        java.lang.String str6 = python2Target1.getAltLabelContextStructName("Python2");
        boolean boolean7 = python2Target1.supportsOverloadedMethods();
        org.antlr.v4.tool.Grammar grammar8 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator9 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target10 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator9);
        java.lang.String[] strArray11 = python2Target10.targetCharValueEscape;
        java.lang.String str12 = python2Target10.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup13 = python2Target10.getTemplates();
        org.antlr.v4.codegen.CodeGenerator codeGenerator14 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target15 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator14);
        java.util.Set<java.lang.String> strSet16 = python2Target15.badWords;
        python2Target10.badWords = strSet16;
        org.antlr.v4.tool.Grammar grammar18 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator19 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target20 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator19);
        java.util.Set<java.lang.String> strSet21 = python2Target20.badWords;
        java.lang.String str23 = python2Target20.encodeIntAsCharEscape(64);
        java.lang.String str24 = python2Target20.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator25 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target26 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator25);
        java.lang.String[] strArray27 = python2Target26.targetCharValueEscape;
        java.lang.String str28 = python2Target26.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup29 = python2Target26.getTemplates();
        python2Target20.templates = sTGroup29;
        org.stringtemplate.v4.STGroup sTGroup31 = python2Target20.templates;
        java.util.Set<java.lang.String> strSet32 = python2Target20.badWords;
        java.util.Set<java.lang.String> strSet33 = python2Target20.getBadWords();
        boolean boolean34 = python2Target20.supportsOverloadedMethods();
        java.util.Set<java.lang.String> strSet35 = python2Target20.getBadWords();
        org.antlr.v4.tool.Grammar grammar36 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator37 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target38 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator37);
        java.lang.String[] strArray39 = python2Target38.targetCharValueEscape;
        java.lang.String str42 = python2Target38.getTargetStringLiteralFromString("_tset\\1", false);
        org.antlr.v4.tool.Grammar grammar43 = null;
        int[] intArray44 = new int[] {};
        java.lang.String[] strArray45 = python2Target38.getTokenTypesAsTargetLabels(grammar43, intArray44);
        java.lang.String[] strArray46 = python2Target20.getTokenTypesAsTargetLabels(grammar36, intArray44);
        java.lang.String[] strArray47 = python2Target10.getTokenTypesAsTargetLabels(grammar18, intArray44);
        java.lang.String[] strArray48 = python2Target1.getTokenTypesAsTargetLabels(grammar8, intArray44);
        org.antlr.v4.tool.Grammar grammar49 = null;
        org.stringtemplate.v4.ST sT50 = null;
        python2Target1.genRecognizerHeaderFile(grammar49, sT50, "\"tset_tset\\\"\\\"\\\\\\\"hi!\\\\\\\"\\\"\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator53 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target54 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator53);
        java.util.Set<java.lang.String> strSet55 = python2Target54.badWords;
        boolean boolean56 = python2Target54.wantsBaseVisitor();
        org.stringtemplate.v4.STGroup sTGroup57 = python2Target54.loadTemplates();
        org.stringtemplate.v4.STGroup sTGroup58 = python2Target54.loadTemplates();
        python2Target1.templates = sTGroup58;
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "@" + "'", str4, "@");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Python2Context" + "'", str6, "Python2Context");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Python2" + "'", str12, "Python2");
        org.junit.Assert.assertNotNull(sTGroup13);
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertNotNull(strSet21);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "@" + "'", str23, "@");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "Python2" + "'", str24, "Python2");
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "Python2" + "'", str28, "Python2");
        org.junit.Assert.assertNotNull(sTGroup29);
        org.junit.Assert.assertNotNull(sTGroup31);
        org.junit.Assert.assertNotNull(strSet32);
        org.junit.Assert.assertNotNull(strSet33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(strSet35);
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "_tset\\\\1" + "'", str42, "_tset\\\\1");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[]");
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertNotNull(strSet55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(sTGroup57);
        org.junit.Assert.assertNotNull(sTGroup58);
    }

    @Test
    public void test1287() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1287");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String[] strArray2 = python2Target1.targetCharValueEscape;
        java.lang.String str3 = python2Target1.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup4 = python2Target1.getTemplates();
        java.lang.String str6 = python2Target1.getTargetStringLiteralFromString("_tset");
        java.lang.String str7 = python2Target1.getVersion();
        org.antlr.v4.tool.ast.GrammarAST grammarAST8 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean9 = python2Target1.visibleGrammarSymbolCausesIssueInGeneratedCode(grammarAST8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Python2" + "'", str3, "Python2");
        org.junit.Assert.assertNotNull(sTGroup4);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\"_tset\"" + "'", str6, "\"_tset\"");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "4.5.2.1" + "'", str7, "4.5.2.1");
    }

    @Test
    public void test1288() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1288");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str4 = python2Target1.encodeIntAsCharEscape(64);
        java.lang.String str5 = python2Target1.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target7 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator6);
        java.lang.String[] strArray8 = python2Target7.targetCharValueEscape;
        java.lang.String str9 = python2Target7.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup10 = python2Target7.getTemplates();
        python2Target1.templates = sTGroup10;
        org.antlr.v4.codegen.CodeGenerator codeGenerator12 = python2Target1.getCodeGenerator();
        org.stringtemplate.v4.STGroup sTGroup13 = python2Target1.loadTemplates();
        org.antlr.v4.codegen.CodeGenerator codeGenerator14 = null;
        python2Target1.gen = codeGenerator14;
        org.antlr.v4.tool.Grammar grammar16 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str18 = python2Target1.getTokenTypeAsTargetLabel(grammar16, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "@" + "'", str4, "@");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Python2" + "'", str5, "Python2");
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Python2" + "'", str9, "Python2");
        org.junit.Assert.assertNotNull(sTGroup10);
        org.junit.Assert.assertNull(codeGenerator12);
        org.junit.Assert.assertNotNull(sTGroup13);
    }

    @Test
    public void test1289() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1289");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String[] strArray2 = python2Target1.targetCharValueEscape;
        java.lang.String str3 = python2Target1.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup4 = python2Target1.getTemplates();
        org.antlr.v4.codegen.CodeGenerator codeGenerator5 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target6 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator5);
        java.util.Set<java.lang.String> strSet7 = python2Target6.badWords;
        python2Target1.badWords = strSet7;
        org.antlr.v4.codegen.CodeGenerator codeGenerator9 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target10 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator9);
        java.util.Set<java.lang.String> strSet11 = python2Target10.badWords;
        java.lang.String str14 = python2Target10.getTargetStringLiteralFromString("hi!", false);
        java.lang.String str16 = python2Target10.getImplicitRuleLabel("@");
        python2Target10.language = "hi!";
        org.antlr.v4.codegen.CodeGenerator codeGenerator19 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target20 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator19);
        java.util.Set<java.lang.String> strSet21 = python2Target20.badWords;
        java.lang.String str23 = python2Target20.encodeIntAsCharEscape(64);
        java.lang.String str24 = python2Target20.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator25 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target26 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator25);
        java.lang.String[] strArray27 = python2Target26.targetCharValueEscape;
        java.lang.String str28 = python2Target26.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup29 = python2Target26.getTemplates();
        python2Target20.templates = sTGroup29;
        org.antlr.v4.codegen.CodeGenerator codeGenerator31 = python2Target20.getCodeGenerator();
        org.stringtemplate.v4.STGroup sTGroup32 = python2Target20.loadTemplates();
        python2Target10.templates = sTGroup32;
        python2Target1.templates = sTGroup32;
        org.antlr.v4.codegen.CodeGenerator codeGenerator35 = null;
        java.lang.String str38 = python2Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator35, "@", false);
        org.stringtemplate.v4.STGroup sTGroup39 = python2Target1.loadTemplates();
        python2Target1.language = "@";
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Python2" + "'", str3, "Python2");
        org.junit.Assert.assertNotNull(sTGroup4);
        org.junit.Assert.assertNotNull(strSet7);
        org.junit.Assert.assertNotNull(strSet11);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "_@" + "'", str16, "_@");
        org.junit.Assert.assertNotNull(strSet21);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "@" + "'", str23, "@");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "Python2" + "'", str24, "Python2");
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "Python2" + "'", str28, "Python2");
        org.junit.Assert.assertNotNull(sTGroup29);
        org.junit.Assert.assertNull(codeGenerator31);
        org.junit.Assert.assertNotNull(sTGroup32);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "" + "'", str38, "");
        org.junit.Assert.assertNotNull(sTGroup39);
    }

    @Test
    public void test1290() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1290");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String[] strArray2 = python2Target1.targetCharValueEscape;
        java.lang.String str3 = python2Target1.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup4 = python2Target1.getTemplates();
        boolean boolean5 = python2Target1.wantsBaseVisitor();
        java.lang.String str7 = python2Target1.getImplicitRuleLabel("\"_tset\"");
        java.util.Set<java.lang.String> strSet8 = python2Target1.getBadWords();
        org.antlr.v4.codegen.model.RuleFunction ruleFunction9 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str10 = python2Target1.getRuleFunctionContextStructName(ruleFunction9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Python2" + "'", str3, "Python2");
        org.junit.Assert.assertNotNull(sTGroup4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "_\"_tset\"" + "'", str7, "_\"_tset\"");
        org.junit.Assert.assertNotNull(strSet8);
    }

    @Test
    public void test1291() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1291");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str4 = python2Target1.encodeIntAsCharEscape(64);
        org.stringtemplate.v4.STGroup sTGroup5 = python2Target1.loadTemplates();
        int int6 = python2Target1.getSerializedATNSegmentLimit();
        org.stringtemplate.v4.STGroup sTGroup7 = python2Target1.templates;
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target9 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator8);
        java.lang.String str11 = python2Target9.getImplicitSetLabel("");
        org.antlr.v4.tool.Grammar grammar12 = null;
        org.stringtemplate.v4.ST sT13 = null;
        python2Target9.genRecognizerHeaderFile(grammar12, sT13, "_tset");
        org.antlr.v4.codegen.CodeGenerator codeGenerator16 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target17 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator16);
        java.util.Set<java.lang.String> strSet18 = python2Target17.badWords;
        java.lang.String str20 = python2Target17.encodeIntAsCharEscape(64);
        java.lang.String str21 = python2Target17.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator22 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target23 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator22);
        java.lang.String[] strArray24 = python2Target23.targetCharValueEscape;
        java.lang.String str25 = python2Target23.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup26 = python2Target23.getTemplates();
        python2Target17.templates = sTGroup26;
        python2Target9.templates = sTGroup26;
        org.antlr.v4.tool.Grammar grammar29 = null;
        org.stringtemplate.v4.ST sT30 = null;
        python2Target9.genRecognizerHeaderFile(grammar29, sT30, "\"\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator33 = null;
        python2Target9.gen = codeGenerator33;
        java.lang.String[] strArray61 = new java.lang.String[] { "_tset\\\\1", "tsetContex", "\"\\\"\\\\\\\"hi!\\\\\\\"\\\"\"", "\"\\\"hi!\\\"\"", "__tsetContext", "_\"\\\"hi!\\\"\"", "\"Hi!Context\"", "_\"\\\"\\\\\\\"hi!\\\\\\\"\\\"\"", "\"tsetContex\"", "\"\\\"\\\"\"", "_tset\\\\1", "4.5.2.1", "\"tsetContex\"", "_tset", "_tsetContext", "\"_tsethi!\"", "4.5.2.1", "\"hi!\"", "d", "_tsetContext", "\"\\\"\\\\\\\"hi!\\\\\\\"\\\"\"", "@", "\"\\\"\\\"\"", "\"\\\"\\\"\"", "_tsetContext", "_@" };
        java.util.LinkedHashSet<java.lang.String> strSet62 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet62, strArray61);
        python2Target9.badWords = strSet62;
        org.antlr.v4.codegen.CodeGenerator codeGenerator65 = null;
        java.lang.String str68 = python2Target9.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator65, "\"\\\"\\\"\"", false);
        java.util.Set<java.lang.String> strSet69 = python2Target9.badWords;
        python2Target1.badWords = strSet69;
        org.antlr.v4.codegen.CodeGenerator codeGenerator71 = null;
        java.lang.String str74 = python2Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator71, "tset_\\\"#", true);
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "@" + "'", str4, "@");
        org.junit.Assert.assertNotNull(sTGroup5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2147483647 + "'", int6 == 2147483647);
        org.junit.Assert.assertNull(sTGroup7);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "_tset" + "'", str11, "_tset");
        org.junit.Assert.assertNotNull(strSet18);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "@" + "'", str20, "@");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Python2" + "'", str21, "Python2");
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Python2" + "'", str25, "Python2");
        org.junit.Assert.assertNotNull(sTGroup26);
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "\\\"\\\"" + "'", str68, "\\\"\\\"");
        org.junit.Assert.assertNotNull(strSet69);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "\"set_\\\"\"" + "'", str74, "\"set_\\\"\"");
    }

    @Test
    public void test1292() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1292");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String[] strArray2 = python2Target1.targetCharValueEscape;
        java.lang.String str3 = python2Target1.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup4 = python2Target1.templates;
        java.lang.String str6 = python2Target1.getImplicitRuleLabel("\"_tset\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = null;
        java.lang.String str10 = python2Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator7, "4.5.2.1", true);
        java.lang.String str12 = python2Target1.getImplicitSetLabel("_tset_tset\"\\\"\\\\\\\"hi!\\\\\\\"\\\"\"Context");
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Python2" + "'", str3, "Python2");
        org.junit.Assert.assertNull(sTGroup4);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "_\"_tset\"" + "'", str6, "_\"_tset\"");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\".5.2.\"" + "'", str10, "\".5.2.\"");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "_tset_tset_tset\"\\\"\\\\\\\"hi!\\\\\\\"\\\"\"Context" + "'", str12, "_tset_tset_tset\"\\\"\\\\\\\"hi!\\\\\\\"\\\"\"Context");
    }

    @Test
    public void test1293() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1293");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str4 = python2Target1.encodeIntAsCharEscape(64);
        java.lang.String str5 = python2Target1.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target7 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator6);
        java.lang.String[] strArray8 = python2Target7.targetCharValueEscape;
        java.lang.String str9 = python2Target7.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup10 = python2Target7.getTemplates();
        python2Target1.templates = sTGroup10;
        java.util.Set<java.lang.String> strSet12 = python2Target1.getBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator13 = python2Target1.getCodeGenerator();
        java.util.Set<java.lang.String> strSet14 = python2Target1.getBadWords();
        boolean boolean15 = python2Target1.wantsBaseListener();
        java.lang.String str18 = python2Target1.getTargetStringLiteralFromString("\"\\\"hi!\\\"\"", true);
        org.stringtemplate.v4.STGroup sTGroup19 = python2Target1.getTemplates();
        org.antlr.v4.codegen.CodeGenerator codeGenerator20 = python2Target1.gen;
        int int21 = python2Target1.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet22 = python2Target1.badWords;
        int int23 = python2Target1.getInlineTestSetWordSize();
        org.antlr.v4.codegen.CodeGenerator codeGenerator24 = null;
        java.lang.String str27 = python2Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator24, "\"_\\\"\\\\\\\"hi!\\\\\\\"\\\"\"", false);
        java.lang.String str29 = python2Target1.getListLabel("\"__tset\"");
        int int30 = python2Target1.getInlineTestSetWordSize();
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "@" + "'", str4, "@");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Python2" + "'", str5, "Python2");
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Python2" + "'", str9, "Python2");
        org.junit.Assert.assertNotNull(sTGroup10);
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertNull(codeGenerator13);
        org.junit.Assert.assertNotNull(strSet14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "\"\\\"\\\\\\\"hi!\\\\\\\"\\\"\"" + "'", str18, "\"\\\"\\\\\\\"hi!\\\\\\\"\\\"\"");
        org.junit.Assert.assertNotNull(sTGroup19);
        org.junit.Assert.assertNull(codeGenerator20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 64 + "'", int21 == 64);
        org.junit.Assert.assertNotNull(strSet22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 64 + "'", int23 == 64);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "_\\\"\\\\\\\"hi!\\\\\\\"\\\"" + "'", str27, "_\\\"\\\\\\\"hi!\\\\\\\"\\\"");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "\"__tset\"" + "'", str29, "\"__tset\"");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 64 + "'", int30 == 64);
    }

    @Test
    public void test1294() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1294");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String str3 = python2Target1.getImplicitSetLabel("");
        org.antlr.v4.codegen.CodeGenerator codeGenerator4 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target5 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator4);
        java.util.Set<java.lang.String> strSet6 = python2Target5.badWords;
        java.lang.String str8 = python2Target5.encodeIntAsCharEscape(64);
        java.lang.String str9 = python2Target5.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target11 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator10);
        java.lang.String[] strArray12 = python2Target11.targetCharValueEscape;
        java.lang.String str13 = python2Target11.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup14 = python2Target11.getTemplates();
        python2Target5.templates = sTGroup14;
        python2Target1.templates = sTGroup14;
        java.lang.String str18 = python2Target1.getAltLabelContextStructName("_tset");
        org.antlr.v4.codegen.CodeGenerator codeGenerator19 = null;
        python2Target1.gen = codeGenerator19;
        org.antlr.v4.codegen.CodeGenerator codeGenerator21 = python2Target1.getCodeGenerator();
        org.antlr.v4.codegen.CodeGenerator codeGenerator22 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target23 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator22);
        java.util.Set<java.lang.String> strSet24 = python2Target23.badWords;
        java.lang.String str26 = python2Target23.encodeIntAsCharEscape(64);
        java.lang.String str28 = python2Target23.getAltLabelContextStructName("Python2");
        boolean boolean29 = python2Target23.supportsOverloadedMethods();
        org.antlr.v4.tool.Grammar grammar30 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator31 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target32 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator31);
        java.lang.String[] strArray33 = python2Target32.targetCharValueEscape;
        java.lang.String str34 = python2Target32.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup35 = python2Target32.getTemplates();
        org.antlr.v4.codegen.CodeGenerator codeGenerator36 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target37 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator36);
        java.util.Set<java.lang.String> strSet38 = python2Target37.badWords;
        python2Target32.badWords = strSet38;
        org.antlr.v4.tool.Grammar grammar40 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator41 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target42 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator41);
        java.util.Set<java.lang.String> strSet43 = python2Target42.badWords;
        java.lang.String str45 = python2Target42.encodeIntAsCharEscape(64);
        java.lang.String str46 = python2Target42.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator47 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target48 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator47);
        java.lang.String[] strArray49 = python2Target48.targetCharValueEscape;
        java.lang.String str50 = python2Target48.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup51 = python2Target48.getTemplates();
        python2Target42.templates = sTGroup51;
        org.stringtemplate.v4.STGroup sTGroup53 = python2Target42.templates;
        java.util.Set<java.lang.String> strSet54 = python2Target42.badWords;
        java.util.Set<java.lang.String> strSet55 = python2Target42.getBadWords();
        boolean boolean56 = python2Target42.supportsOverloadedMethods();
        java.util.Set<java.lang.String> strSet57 = python2Target42.getBadWords();
        org.antlr.v4.tool.Grammar grammar58 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator59 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target60 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator59);
        java.lang.String[] strArray61 = python2Target60.targetCharValueEscape;
        java.lang.String str64 = python2Target60.getTargetStringLiteralFromString("_tset\\1", false);
        org.antlr.v4.tool.Grammar grammar65 = null;
        int[] intArray66 = new int[] {};
        java.lang.String[] strArray67 = python2Target60.getTokenTypesAsTargetLabels(grammar65, intArray66);
        java.lang.String[] strArray68 = python2Target42.getTokenTypesAsTargetLabels(grammar58, intArray66);
        java.lang.String[] strArray69 = python2Target32.getTokenTypesAsTargetLabels(grammar40, intArray66);
        java.lang.String[] strArray70 = python2Target23.getTokenTypesAsTargetLabels(grammar30, intArray66);
        org.stringtemplate.v4.STGroup sTGroup71 = python2Target23.loadTemplates();
        python2Target1.templates = sTGroup71;
        python2Target1.language = "_tset\\\"tset_tsetContex";
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "_tset" + "'", str3, "_tset");
        org.junit.Assert.assertNotNull(strSet6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "@" + "'", str8, "@");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Python2" + "'", str9, "Python2");
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Python2" + "'", str13, "Python2");
        org.junit.Assert.assertNotNull(sTGroup14);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "_tsetContext" + "'", str18, "_tsetContext");
        org.junit.Assert.assertNull(codeGenerator21);
        org.junit.Assert.assertNotNull(strSet24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "@" + "'", str26, "@");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "Python2Context" + "'", str28, "Python2Context");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "Python2" + "'", str34, "Python2");
        org.junit.Assert.assertNotNull(sTGroup35);
        org.junit.Assert.assertNotNull(strSet38);
        org.junit.Assert.assertNotNull(strSet43);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "@" + "'", str45, "@");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "Python2" + "'", str46, "Python2");
        org.junit.Assert.assertNotNull(strArray49);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "Python2" + "'", str50, "Python2");
        org.junit.Assert.assertNotNull(sTGroup51);
        org.junit.Assert.assertNotNull(sTGroup53);
        org.junit.Assert.assertNotNull(strSet54);
        org.junit.Assert.assertNotNull(strSet55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(strSet57);
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "_tset\\\\1" + "'", str64, "_tset\\\\1");
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[]");
        org.junit.Assert.assertNotNull(strArray67);
        org.junit.Assert.assertNotNull(strArray68);
        org.junit.Assert.assertNotNull(strArray69);
        org.junit.Assert.assertNotNull(strArray70);
        org.junit.Assert.assertNotNull(sTGroup71);
    }

    @Test
    public void test1295() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1295");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str4 = python2Target1.encodeIntAsCharEscape(64);
        java.lang.String str6 = python2Target1.getTargetStringLiteralFromString("hi!");
        java.util.Set<java.lang.String> strSet7 = python2Target1.getBadWords();
        java.lang.String str8 = python2Target1.getVersion();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str10 = python2Target1.getImplicitTokenLabel("\"_tset\\\"\\\\\\\"\\\\\\\\\\\\\\\"hi!\\\\\\\\\\\\\\\"\\\\\\\"\\\"\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "@" + "'", str4, "@");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\"hi!\"" + "'", str6, "\"hi!\"");
        org.junit.Assert.assertNotNull(strSet7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "4.5.2.1" + "'", str8, "4.5.2.1");
    }

    @Test
    public void test1296() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1296");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str4 = python2Target1.encodeIntAsCharEscape(64);
        java.lang.String str5 = python2Target1.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target7 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator6);
        java.lang.String[] strArray8 = python2Target7.targetCharValueEscape;
        java.lang.String str9 = python2Target7.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup10 = python2Target7.getTemplates();
        python2Target1.templates = sTGroup10;
        org.stringtemplate.v4.STGroup sTGroup12 = python2Target1.templates;
        java.util.Set<java.lang.String> strSet13 = python2Target1.badWords;
        boolean boolean14 = python2Target1.supportsOverloadedMethods();
        java.lang.String str16 = python2Target1.getImplicitSetLabel("\"Hi!Context\"");
        java.lang.String str17 = python2Target1.language;
        java.lang.String str19 = python2Target1.getImplicitSetLabel("\"\\\"\\\\\\\"hi!\\\\\\\"\\\"\"");
        java.lang.String str21 = python2Target1.getTargetStringLiteralFromString("_tset\\n");
        java.lang.String str22 = python2Target1.getLanguage();
        int int23 = python2Target1.getSerializedATNSegmentLimit();
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "@" + "'", str4, "@");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Python2" + "'", str5, "Python2");
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Python2" + "'", str9, "Python2");
        org.junit.Assert.assertNotNull(sTGroup10);
        org.junit.Assert.assertNotNull(sTGroup12);
        org.junit.Assert.assertNotNull(strSet13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "_tset\"Hi!Context\"" + "'", str16, "_tset\"Hi!Context\"");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Python2" + "'", str17, "Python2");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "_tset\"\\\"\\\\\\\"hi!\\\\\\\"\\\"\"" + "'", str19, "_tset\"\\\"\\\\\\\"hi!\\\\\\\"\\\"\"");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "\"_tset\\\\n\"" + "'", str21, "\"_tset\\\\n\"");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "Python2" + "'", str22, "Python2");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 2147483647 + "'", int23 == 2147483647);
    }

    @Test
    public void test1297() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1297");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str4 = python2Target1.encodeIntAsCharEscape(64);
        java.lang.String str5 = python2Target1.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target7 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator6);
        java.lang.String[] strArray8 = python2Target7.targetCharValueEscape;
        java.lang.String str9 = python2Target7.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup10 = python2Target7.getTemplates();
        python2Target1.templates = sTGroup10;
        java.util.Set<java.lang.String> strSet12 = python2Target1.getBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator13 = python2Target1.getCodeGenerator();
        java.util.Set<java.lang.String> strSet14 = python2Target1.getBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator15 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target16 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator15);
        java.util.Set<java.lang.String> strSet17 = python2Target16.badWords;
        java.lang.String str19 = python2Target16.encodeIntAsCharEscape(64);
        java.lang.String str20 = python2Target16.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator21 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target22 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator21);
        java.lang.String[] strArray23 = python2Target22.targetCharValueEscape;
        java.lang.String str24 = python2Target22.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup25 = python2Target22.getTemplates();
        python2Target16.templates = sTGroup25;
        org.antlr.v4.codegen.CodeGenerator codeGenerator27 = python2Target16.getCodeGenerator();
        org.stringtemplate.v4.STGroup sTGroup28 = python2Target16.loadTemplates();
        python2Target1.templates = sTGroup28;
        boolean boolean30 = python2Target1.supportsOverloadedMethods();
        java.lang.String str32 = python2Target1.encodeIntAsCharEscape((int) '#');
        org.stringtemplate.v4.STGroup sTGroup33 = python2Target1.loadTemplates();
        org.antlr.v4.codegen.CodeGenerator codeGenerator34 = null;
        java.lang.String str37 = python2Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator34, "\"\\\"hi!\\\"\"", false);
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "@" + "'", str4, "@");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Python2" + "'", str5, "Python2");
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Python2" + "'", str9, "Python2");
        org.junit.Assert.assertNotNull(sTGroup10);
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertNull(codeGenerator13);
        org.junit.Assert.assertNotNull(strSet14);
        org.junit.Assert.assertNotNull(strSet17);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "@" + "'", str19, "@");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "Python2" + "'", str20, "Python2");
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "Python2" + "'", str24, "Python2");
        org.junit.Assert.assertNotNull(sTGroup25);
        org.junit.Assert.assertNull(codeGenerator27);
        org.junit.Assert.assertNotNull(sTGroup28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "#" + "'", str32, "#");
        org.junit.Assert.assertNotNull(sTGroup33);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "\\\"hi!\\\"" + "'", str37, "\\\"hi!\\\"");
    }

    @Test
    public void test1298() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1298");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str4 = python2Target1.encodeIntAsCharEscape(64);
        java.lang.String str5 = python2Target1.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target7 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator6);
        java.lang.String[] strArray8 = python2Target7.targetCharValueEscape;
        java.lang.String str9 = python2Target7.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup10 = python2Target7.getTemplates();
        python2Target1.templates = sTGroup10;
        java.util.Set<java.lang.String> strSet12 = python2Target1.getBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator13 = python2Target1.getCodeGenerator();
        java.util.Set<java.lang.String> strSet14 = python2Target1.getBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator15 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target16 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator15);
        java.util.Set<java.lang.String> strSet17 = python2Target16.badWords;
        java.lang.String str19 = python2Target16.encodeIntAsCharEscape(64);
        java.lang.String str20 = python2Target16.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator21 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target22 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator21);
        java.lang.String[] strArray23 = python2Target22.targetCharValueEscape;
        java.lang.String str24 = python2Target22.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup25 = python2Target22.getTemplates();
        python2Target16.templates = sTGroup25;
        org.antlr.v4.codegen.CodeGenerator codeGenerator27 = python2Target16.getCodeGenerator();
        org.stringtemplate.v4.STGroup sTGroup28 = python2Target16.loadTemplates();
        python2Target1.templates = sTGroup28;
        boolean boolean30 = python2Target1.supportsOverloadedMethods();
        java.lang.String str32 = python2Target1.encodeIntAsCharEscape((int) '#');
        java.lang.String str35 = python2Target1.getTargetStringLiteralFromString("\"_tset_tset\\\"\\\\\\\"\\\\\\\\\\\\\\\"hi!\\\\\\\\\\\\\\\"\\\\\\\"\\\"\"", false);
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "@" + "'", str4, "@");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Python2" + "'", str5, "Python2");
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Python2" + "'", str9, "Python2");
        org.junit.Assert.assertNotNull(sTGroup10);
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertNull(codeGenerator13);
        org.junit.Assert.assertNotNull(strSet14);
        org.junit.Assert.assertNotNull(strSet17);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "@" + "'", str19, "@");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "Python2" + "'", str20, "Python2");
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "Python2" + "'", str24, "Python2");
        org.junit.Assert.assertNotNull(sTGroup25);
        org.junit.Assert.assertNull(codeGenerator27);
        org.junit.Assert.assertNotNull(sTGroup28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "#" + "'", str32, "#");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "\\\"_tset_tset\\\\\\\"\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"hi!\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"\\\\\\\"\\\"" + "'", str35, "\\\"_tset_tset\\\\\\\"\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"hi!\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"\\\\\\\"\\\"");
    }

    @Test
    public void test1299() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1299");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str4 = python2Target1.encodeIntAsCharEscape(64);
        java.lang.String str5 = python2Target1.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target7 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator6);
        java.lang.String[] strArray8 = python2Target7.targetCharValueEscape;
        java.lang.String str9 = python2Target7.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup10 = python2Target7.getTemplates();
        python2Target1.templates = sTGroup10;
        java.util.Set<java.lang.String> strSet12 = python2Target1.getBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator13 = python2Target1.getCodeGenerator();
        java.util.Set<java.lang.String> strSet14 = python2Target1.getBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator15 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target16 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator15);
        java.util.Set<java.lang.String> strSet17 = python2Target16.badWords;
        java.lang.String str19 = python2Target16.encodeIntAsCharEscape(64);
        java.lang.String str20 = python2Target16.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator21 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target22 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator21);
        java.lang.String[] strArray23 = python2Target22.targetCharValueEscape;
        java.lang.String str24 = python2Target22.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup25 = python2Target22.getTemplates();
        python2Target16.templates = sTGroup25;
        org.antlr.v4.codegen.CodeGenerator codeGenerator27 = python2Target16.getCodeGenerator();
        org.stringtemplate.v4.STGroup sTGroup28 = python2Target16.loadTemplates();
        python2Target1.templates = sTGroup28;
        org.antlr.v4.codegen.CodeGenerator codeGenerator30 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target31 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator30);
        java.util.Set<java.lang.String> strSet32 = python2Target31.badWords;
        java.lang.String str35 = python2Target31.getTargetStringLiteralFromString("hi!", false);
        java.lang.String str37 = python2Target31.getTargetStringLiteralFromString("\"hi!\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator38 = null;
        python2Target31.gen = codeGenerator38;
        java.lang.String[] strArray40 = null;
        python2Target31.targetCharValueEscape = strArray40;
        org.stringtemplate.v4.STGroup sTGroup42 = python2Target31.getTemplates();
        python2Target1.templates = sTGroup42;
        java.lang.String str45 = python2Target1.getListLabel("_\"\"#\"\"");
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "@" + "'", str4, "@");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Python2" + "'", str5, "Python2");
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Python2" + "'", str9, "Python2");
        org.junit.Assert.assertNotNull(sTGroup10);
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertNull(codeGenerator13);
        org.junit.Assert.assertNotNull(strSet14);
        org.junit.Assert.assertNotNull(strSet17);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "@" + "'", str19, "@");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "Python2" + "'", str20, "Python2");
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "Python2" + "'", str24, "Python2");
        org.junit.Assert.assertNotNull(sTGroup25);
        org.junit.Assert.assertNull(codeGenerator27);
        org.junit.Assert.assertNotNull(sTGroup28);
        org.junit.Assert.assertNotNull(strSet32);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!" + "'", str35, "hi!");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "\"\\\"hi!\\\"\"" + "'", str37, "\"\\\"hi!\\\"\"");
        org.junit.Assert.assertNotNull(sTGroup42);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "_\"\"#\"\"" + "'", str45, "_\"\"#\"\"");
    }

    @Test
    public void test1300() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1300");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        org.stringtemplate.v4.STGroup sTGroup2 = python2Target1.templates;
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = null;
        java.lang.String str6 = python2Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator3, "\"_tset\"", false);
        boolean boolean7 = python2Target1.supportsOverloadedMethods();
        org.antlr.v4.tool.Grammar grammar8 = null;
        org.stringtemplate.v4.ST sT9 = null;
        python2Target1.genRecognizerHeaderFile(grammar8, sT9, "");
        boolean boolean12 = python2Target1.supportsOverloadedMethods();
        org.antlr.v4.tool.Grammar grammar13 = null;
        org.stringtemplate.v4.ST sT14 = null;
        // The following exception was thrown during execution in test generation
        try {
            python2Target1.genFile(grammar13, sT14, "\"\\\"\\\\\\\"\\\\\\\\\\\\\\\"d\\\\\\\\\\\\\\\"\\\\\\\"\\\"\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "_tset" + "'", str6, "_tset");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test1301() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1301");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str5 = python2Target1.getTargetStringLiteralFromString("hi!", false);
        java.lang.String str7 = python2Target1.getTargetStringLiteralFromString("\"hi!\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target9 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator8);
        java.util.Set<java.lang.String> strSet10 = python2Target9.badWords;
        java.lang.String str12 = python2Target9.encodeIntAsCharEscape(64);
        java.lang.String str13 = python2Target9.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator14 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target15 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator14);
        java.lang.String[] strArray16 = python2Target15.targetCharValueEscape;
        java.lang.String str17 = python2Target15.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup18 = python2Target15.getTemplates();
        python2Target9.templates = sTGroup18;
        org.antlr.v4.tool.Grammar grammar20 = null;
        org.stringtemplate.v4.ST sT21 = null;
        python2Target9.genRecognizerHeaderFile(grammar20, sT21, "\"_tset\"");
        java.util.Set<java.lang.String> strSet24 = python2Target9.getBadWords();
        python2Target1.badWords = strSet24;
        org.antlr.v4.codegen.CodeGenerator codeGenerator26 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target27 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator26);
        java.util.Set<java.lang.String> strSet28 = python2Target27.badWords;
        java.lang.String str31 = python2Target27.getTargetStringLiteralFromString("hi!", false);
        int int32 = python2Target27.getInlineTestSetWordSize();
        boolean boolean33 = python2Target27.wantsBaseVisitor();
        java.lang.String str34 = python2Target27.getLanguage();
        python2Target27.addBadWords();
        java.util.Set<java.lang.String> strSet36 = python2Target27.badWords;
        org.antlr.v4.codegen.CodeGenerator codeGenerator37 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target38 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator37);
        java.util.Set<java.lang.String> strSet39 = python2Target38.badWords;
        java.lang.String str41 = python2Target38.encodeIntAsCharEscape(64);
        java.lang.String str43 = python2Target38.getTargetStringLiteralFromString("hi!");
        java.util.Set<java.lang.String> strSet44 = python2Target38.getBadWords();
        python2Target27.badWords = strSet44;
        java.lang.String str47 = python2Target27.getListLabel("_\"_tset\"Context");
        org.antlr.v4.codegen.CodeGenerator codeGenerator48 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target49 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator48);
        java.util.Set<java.lang.String> strSet50 = python2Target49.badWords;
        java.lang.String str52 = python2Target49.encodeIntAsCharEscape(64);
        java.lang.String str53 = python2Target49.getLanguage();
        java.lang.String str54 = python2Target49.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup55 = python2Target49.getTemplates();
        python2Target27.templates = sTGroup55;
        python2Target1.templates = sTGroup55;
        org.antlr.v4.tool.ast.GrammarAST grammarAST58 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str59 = python2Target1.getLoopLabel(grammarAST58);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "\"\\\"hi!\\\"\"" + "'", str7, "\"\\\"hi!\\\"\"");
        org.junit.Assert.assertNotNull(strSet10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "@" + "'", str12, "@");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Python2" + "'", str13, "Python2");
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Python2" + "'", str17, "Python2");
        org.junit.Assert.assertNotNull(sTGroup18);
        org.junit.Assert.assertNotNull(strSet24);
        org.junit.Assert.assertNotNull(strSet28);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "hi!" + "'", str31, "hi!");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 64 + "'", int32 == 64);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "Python2" + "'", str34, "Python2");
        org.junit.Assert.assertNotNull(strSet36);
        org.junit.Assert.assertNotNull(strSet39);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "@" + "'", str41, "@");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "\"hi!\"" + "'", str43, "\"hi!\"");
        org.junit.Assert.assertNotNull(strSet44);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "_\"_tset\"Context" + "'", str47, "_\"_tset\"Context");
        org.junit.Assert.assertNotNull(strSet50);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "@" + "'", str52, "@");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "Python2" + "'", str53, "Python2");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "Python2" + "'", str54, "Python2");
        org.junit.Assert.assertNotNull(sTGroup55);
    }

    @Test
    public void test1302() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1302");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String[] strArray2 = python2Target1.targetCharValueEscape;
        java.lang.String str3 = python2Target1.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup4 = python2Target1.templates;
        java.lang.String str6 = python2Target1.getListLabel("\\n");
        java.lang.String[] strArray7 = python2Target1.targetCharValueEscape;
        org.antlr.v4.tool.Grammar grammar8 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator9 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target10 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator9);
        java.lang.String[] strArray11 = python2Target10.targetCharValueEscape;
        java.lang.String str14 = python2Target10.getTargetStringLiteralFromString("_tset\\1", false);
        org.antlr.v4.tool.Grammar grammar15 = null;
        int[] intArray16 = new int[] {};
        java.lang.String[] strArray17 = python2Target10.getTokenTypesAsTargetLabels(grammar15, intArray16);
        java.lang.String[] strArray18 = python2Target1.getTokenTypesAsTargetLabels(grammar8, intArray16);
        java.lang.String[] strArray19 = python2Target1.targetCharValueEscape;
        int int20 = python2Target1.getSerializedATNSegmentLimit();
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Python2" + "'", str3, "Python2");
        org.junit.Assert.assertNull(sTGroup4);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\\n" + "'", str6, "\\n");
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "_tset\\\\1" + "'", str14, "_tset\\\\1");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[]");
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 2147483647 + "'", int20 == 2147483647);
    }

    @Test
    public void test1303() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1303");
        org.antlr.v4.codegen.target.Python2Target python2Target0 = new org.antlr.v4.codegen.target.Python2Target();
        org.stringtemplate.v4.STGroup sTGroup1 = python2Target0.templates;
        java.lang.String[] strArray2 = python2Target0.targetCharValueEscape;
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target4 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator3);
        java.lang.String[] strArray5 = python2Target4.targetCharValueEscape;
        java.lang.String str8 = python2Target4.getTargetStringLiteralFromString("Python2", false);
        java.lang.String[] strArray9 = org.antlr.v4.codegen.target.Python2Target.python2Keywords;
        python2Target4.targetCharValueEscape = strArray9;
        python2Target0.targetCharValueEscape = strArray9;
        python2Target0.addBadWords();
        java.lang.String str14 = python2Target0.getTargetStringLiteralFromString("_tset_tset\"\\\"\\\\\\\"hi!\\\\\\\"\\\"\"Context");
        org.junit.Assert.assertNull(sTGroup1);
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Python2" + "'", str8, "Python2");
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "\"_tset_tset\"\\\"\\\\\\\"hi!\\\\\\\"\\\"\"Context\"" + "'", str14, "\"_tset_tset\"\\\"\\\\\\\"hi!\\\\\\\"\\\"\"Context\"");
    }

    @Test
    public void test1304() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1304");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str4 = python2Target1.encodeIntAsCharEscape(64);
        java.lang.String str6 = python2Target1.getAltLabelContextStructName("Python2");
        boolean boolean7 = python2Target1.supportsOverloadedMethods();
        java.lang.String str9 = python2Target1.encodeIntAsCharEscape(1);
        java.lang.String str11 = python2Target1.encodeIntAsCharEscape((int) ' ');
        java.lang.String str14 = python2Target1.getTargetStringLiteralFromString("", true);
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "@" + "'", str4, "@");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Python2Context" + "'", str6, "Python2Context");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\\1" + "'", str9, "\\1");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + " " + "'", str11, " ");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "\"\"" + "'", str14, "\"\"");
    }

    @Test
    public void test1305() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1305");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        boolean boolean3 = python2Target1.wantsBaseVisitor();
        python2Target1.language = "\"\"";
        java.lang.String str7 = python2Target1.getTargetStringLiteralFromString("__tset");
        java.lang.String str9 = python2Target1.encodeIntAsCharEscape((int) (short) 100);
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target11 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator10);
        java.util.Set<java.lang.String> strSet12 = python2Target11.badWords;
        java.lang.String str14 = python2Target11.encodeIntAsCharEscape(64);
        java.lang.String str15 = python2Target11.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator16 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target17 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator16);
        java.lang.String[] strArray18 = python2Target17.targetCharValueEscape;
        java.lang.String str19 = python2Target17.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup20 = python2Target17.getTemplates();
        python2Target11.templates = sTGroup20;
        java.util.Set<java.lang.String> strSet22 = python2Target11.getBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator23 = python2Target11.getCodeGenerator();
        java.util.Set<java.lang.String> strSet24 = python2Target11.getBadWords();
        boolean boolean25 = python2Target11.wantsBaseListener();
        java.lang.String str28 = python2Target11.getTargetStringLiteralFromString("\"\\\"hi!\\\"\"", true);
        org.stringtemplate.v4.STGroup sTGroup29 = python2Target11.getTemplates();
        org.antlr.v4.codegen.CodeGenerator codeGenerator30 = python2Target11.gen;
        int int31 = python2Target11.getInlineTestSetWordSize();
        java.lang.String str33 = python2Target11.encodeIntAsCharEscape(100);
        org.antlr.v4.codegen.CodeGenerator codeGenerator34 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target35 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator34);
        java.lang.String[] strArray36 = python2Target35.targetCharValueEscape;
        java.lang.String str37 = python2Target35.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup38 = python2Target35.templates;
        java.lang.String str40 = python2Target35.getListLabel("\\n");
        java.lang.String[] strArray41 = python2Target35.targetCharValueEscape;
        org.antlr.v4.tool.Grammar grammar42 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator43 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target44 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator43);
        java.lang.String[] strArray45 = python2Target44.targetCharValueEscape;
        java.lang.String str48 = python2Target44.getTargetStringLiteralFromString("_tset\\1", false);
        org.antlr.v4.tool.Grammar grammar49 = null;
        int[] intArray50 = new int[] {};
        java.lang.String[] strArray51 = python2Target44.getTokenTypesAsTargetLabels(grammar49, intArray50);
        java.lang.String[] strArray52 = python2Target35.getTokenTypesAsTargetLabels(grammar42, intArray50);
        java.lang.String[] strArray53 = python2Target35.targetCharValueEscape;
        python2Target11.targetCharValueEscape = strArray53;
        python2Target1.targetCharValueEscape = strArray53;
        java.lang.String str57 = python2Target1.encodeIntAsCharEscape((int) (byte) 100);
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "\"__tset\"" + "'", str7, "\"__tset\"");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "d" + "'", str9, "d");
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "@" + "'", str14, "@");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Python2" + "'", str15, "Python2");
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Python2" + "'", str19, "Python2");
        org.junit.Assert.assertNotNull(sTGroup20);
        org.junit.Assert.assertNotNull(strSet22);
        org.junit.Assert.assertNull(codeGenerator23);
        org.junit.Assert.assertNotNull(strSet24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "\"\\\"\\\\\\\"hi!\\\\\\\"\\\"\"" + "'", str28, "\"\\\"\\\\\\\"hi!\\\\\\\"\\\"\"");
        org.junit.Assert.assertNotNull(sTGroup29);
        org.junit.Assert.assertNull(codeGenerator30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 64 + "'", int31 == 64);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "d" + "'", str33, "d");
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "Python2" + "'", str37, "Python2");
        org.junit.Assert.assertNull(sTGroup38);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "\\n" + "'", str40, "\\n");
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "_tset\\\\1" + "'", str48, "_tset\\\\1");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[]");
        org.junit.Assert.assertNotNull(strArray51);
        org.junit.Assert.assertNotNull(strArray52);
        org.junit.Assert.assertNotNull(strArray53);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "d" + "'", str57, "d");
    }

    @Test
    public void test1306() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1306");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String[] strArray2 = python2Target1.targetCharValueEscape;
        java.lang.String str3 = python2Target1.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup4 = python2Target1.templates;
        java.lang.String str6 = python2Target1.getListLabel("\\n");
        org.antlr.v4.tool.Grammar grammar7 = null;
        org.stringtemplate.v4.ST sT8 = null;
        python2Target1.genRecognizerHeaderFile(grammar7, sT8, "\"4.5.2.1\"");
        int int11 = python2Target1.getSerializedATNSegmentLimit();
        java.lang.String str12 = python2Target1.language;
        org.antlr.v4.tool.Grammar grammar13 = null;
        org.stringtemplate.v4.ST sT14 = null;
        python2Target1.genRecognizerHeaderFile(grammar13, sT14, "\"tset_tset\\\"\\\"\\\\\\\"hi!\\\\\\\"\\\"\"");
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Python2" + "'", str3, "Python2");
        org.junit.Assert.assertNull(sTGroup4);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\\n" + "'", str6, "\\n");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2147483647 + "'", int11 == 2147483647);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Python2" + "'", str12, "Python2");
    }

    @Test
    public void test1307() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1307");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str5 = python2Target1.getTargetStringLiteralFromString("hi!", false);
        int int6 = python2Target1.getInlineTestSetWordSize();
        java.lang.String str8 = python2Target1.getTargetStringLiteralFromString("Hi!Context");
        java.lang.String str9 = python2Target1.getLanguage();
        org.antlr.v4.tool.Grammar grammar10 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str12 = python2Target1.getTokenTypeAsTargetLabel(grammar10, (int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 64 + "'", int6 == 64);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\"Hi!Context\"" + "'", str8, "\"Hi!Context\"");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Python2" + "'", str9, "Python2");
    }

    @Test
    public void test1308() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1308");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str4 = python2Target1.encodeIntAsCharEscape(64);
        java.lang.String str5 = python2Target1.getLanguage();
        java.lang.String str7 = python2Target1.getImplicitSetLabel("");
        boolean boolean8 = python2Target1.supportsOverloadedMethods();
        org.antlr.v4.tool.ast.GrammarAST grammarAST9 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str10 = python2Target1.getLoopLabel(grammarAST9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "@" + "'", str4, "@");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Python2" + "'", str5, "Python2");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "_tset" + "'", str7, "_tset");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test1309() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1309");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str4 = python2Target1.encodeIntAsCharEscape(64);
        java.lang.String str5 = python2Target1.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target7 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator6);
        java.lang.String[] strArray8 = python2Target7.targetCharValueEscape;
        java.lang.String str9 = python2Target7.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup10 = python2Target7.getTemplates();
        python2Target1.templates = sTGroup10;
        org.antlr.v4.codegen.CodeGenerator codeGenerator12 = python2Target1.getCodeGenerator();
        org.stringtemplate.v4.STGroup sTGroup13 = python2Target1.loadTemplates();
        boolean boolean14 = python2Target1.templatesExist();
        org.stringtemplate.v4.STGroup sTGroup15 = python2Target1.loadTemplates();
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "@" + "'", str4, "@");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Python2" + "'", str5, "Python2");
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Python2" + "'", str9, "Python2");
        org.junit.Assert.assertNotNull(sTGroup10);
        org.junit.Assert.assertNull(codeGenerator12);
        org.junit.Assert.assertNotNull(sTGroup13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(sTGroup15);
    }

    @Test
    public void test1310() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1310");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        org.stringtemplate.v4.STGroup sTGroup2 = python2Target1.templates;
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = null;
        java.lang.String str6 = python2Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator3, "\"_tset\"", false);
        java.lang.String str8 = python2Target1.encodeIntAsCharEscape(1);
        python2Target1.language = "\"_tset\"";
        org.antlr.v4.codegen.CodeGenerator codeGenerator11 = null;
        java.lang.String str14 = python2Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator11, "\"_tsethi!\"", false);
        // The following exception was thrown during execution in test generation
        try {
            org.stringtemplate.v4.STGroup sTGroup15 = python2Target1.loadTemplates();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "_tset" + "'", str6, "_tset");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\\1" + "'", str8, "\\1");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "_tsethi!" + "'", str14, "_tsethi!");
    }

    @Test
    public void test1311() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1311");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str4 = python2Target1.encodeIntAsCharEscape(64);
        org.stringtemplate.v4.STGroup sTGroup5 = python2Target1.loadTemplates();
        java.lang.String str6 = python2Target1.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = python2Target1.getCodeGenerator();
        java.lang.String str9 = python2Target1.getListLabel("__tset_tset\"\\\"\\\\\\\"hi!\\\\\\\"\\\"\"");
        java.lang.String[] strArray10 = python2Target1.targetCharValueEscape;
        org.stringtemplate.v4.STGroup sTGroup11 = python2Target1.loadTemplates();
        org.antlr.v4.codegen.CodeGenerator codeGenerator12 = python2Target1.getCodeGenerator();
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "@" + "'", str4, "@");
        org.junit.Assert.assertNotNull(sTGroup5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Python2" + "'", str6, "Python2");
        org.junit.Assert.assertNull(codeGenerator7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "__tset_tset\"\\\"\\\\\\\"hi!\\\\\\\"\\\"\"" + "'", str9, "__tset_tset\"\\\"\\\\\\\"hi!\\\\\\\"\\\"\"");
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(sTGroup11);
        org.junit.Assert.assertNull(codeGenerator12);
    }

    @Test
    public void test1312() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1312");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str4 = python2Target1.encodeIntAsCharEscape(64);
        java.lang.String str5 = python2Target1.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target7 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator6);
        java.lang.String[] strArray8 = python2Target7.targetCharValueEscape;
        java.lang.String str9 = python2Target7.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup10 = python2Target7.getTemplates();
        python2Target1.templates = sTGroup10;
        java.util.Set<java.lang.String> strSet12 = python2Target1.getBadWords();
        java.lang.String str14 = python2Target1.getListLabel("_tset\\1");
        java.util.Set<java.lang.String> strSet15 = python2Target1.getBadWords();
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "@" + "'", str4, "@");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Python2" + "'", str5, "Python2");
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Python2" + "'", str9, "Python2");
        org.junit.Assert.assertNotNull(sTGroup10);
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "_tset\\1" + "'", str14, "_tset\\1");
        org.junit.Assert.assertNotNull(strSet15);
    }

    @Test
    public void test1313() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1313");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String[] strArray2 = python2Target1.targetCharValueEscape;
        java.lang.String str3 = python2Target1.getLanguage();
        org.antlr.v4.tool.Grammar grammar4 = null;
        org.stringtemplate.v4.ST sT5 = null;
        python2Target1.genRecognizerHeaderFile(grammar4, sT5, "\\1");
        int int8 = python2Target1.getSerializedATNSegmentLimit();
        java.lang.String str10 = python2Target1.getImplicitSetLabel("_\"tsetContex\"");
        org.antlr.v4.tool.Rule rule11 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str12 = python2Target1.getRuleFunctionContextStructName(rule11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Python2" + "'", str3, "Python2");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 2147483647 + "'", int8 == 2147483647);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "_tset_\"tsetContex\"" + "'", str10, "_tset_\"tsetContex\"");
    }

    @Test
    public void test1314() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1314");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        org.stringtemplate.v4.STGroup sTGroup2 = python2Target1.templates;
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = null;
        java.lang.String str6 = python2Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator3, "_@", true);
        java.lang.String str8 = python2Target1.getImplicitRuleLabel("\"\\\"hi!\\\"\"");
        java.lang.String str10 = python2Target1.getImplicitSetLabel("4.5.2.1");
        java.lang.String str12 = python2Target1.getListLabel("_@");
        org.antlr.v4.codegen.CodeGenerator codeGenerator13 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target14 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator13);
        java.util.Set<java.lang.String> strSet15 = python2Target14.badWords;
        java.lang.String str18 = python2Target14.getTargetStringLiteralFromString("hi!", false);
        java.lang.String str20 = python2Target14.getImplicitRuleLabel("@");
        python2Target14.language = "hi!";
        java.util.Set<java.lang.String> strSet23 = python2Target14.getBadWords();
        org.stringtemplate.v4.STGroup sTGroup24 = python2Target14.templates;
        python2Target1.templates = sTGroup24;
        org.antlr.v4.tool.ast.GrammarAST grammarAST26 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean27 = python2Target1.grammarSymbolCausesIssueInGeneratedCode(grammarAST26);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\"\"" + "'", str6, "\"\"");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "_\"\\\"hi!\\\"\"" + "'", str8, "_\"\\\"hi!\\\"\"");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "_tset4.5.2.1" + "'", str10, "_tset4.5.2.1");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "_@" + "'", str12, "_@");
        org.junit.Assert.assertNotNull(strSet15);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "_@" + "'", str20, "_@");
        org.junit.Assert.assertNotNull(strSet23);
        org.junit.Assert.assertNotNull(sTGroup24);
    }

    @Test
    public void test1315() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1315");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str4 = python2Target1.encodeIntAsCharEscape(64);
        java.lang.String str5 = python2Target1.getLanguage();
        java.lang.String str7 = python2Target1.getImplicitSetLabel("");
        java.lang.String str9 = python2Target1.getImplicitSetLabel("\\n");
        boolean boolean10 = python2Target1.templatesExist();
        boolean boolean11 = python2Target1.templatesExist();
        java.lang.String str12 = python2Target1.language;
        org.stringtemplate.v4.STGroup sTGroup13 = python2Target1.templates;
        java.lang.String str14 = python2Target1.language;
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "@" + "'", str4, "@");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Python2" + "'", str5, "Python2");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "_tset" + "'", str7, "_tset");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "_tset\\n" + "'", str9, "_tset\\n");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Python2" + "'", str12, "Python2");
        org.junit.Assert.assertNotNull(sTGroup13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Python2" + "'", str14, "Python2");
    }

    @Test
    public void test1316() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1316");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str4 = python2Target1.encodeIntAsCharEscape(64);
        java.lang.String str5 = python2Target1.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target7 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator6);
        java.lang.String[] strArray8 = python2Target7.targetCharValueEscape;
        java.lang.String str9 = python2Target7.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup10 = python2Target7.getTemplates();
        python2Target1.templates = sTGroup10;
        org.antlr.v4.codegen.CodeGenerator codeGenerator12 = python2Target1.getCodeGenerator();
        org.antlr.v4.tool.Grammar grammar13 = null;
        org.stringtemplate.v4.ST sT14 = null;
        python2Target1.genRecognizerHeaderFile(grammar13, sT14, "___tset");
        org.antlr.v4.codegen.CodeGenerator codeGenerator17 = null;
        python2Target1.gen = codeGenerator17;
        int int19 = python2Target1.getInlineTestSetWordSize();
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "@" + "'", str4, "@");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Python2" + "'", str5, "Python2");
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Python2" + "'", str9, "Python2");
        org.junit.Assert.assertNotNull(sTGroup10);
        org.junit.Assert.assertNull(codeGenerator12);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 64 + "'", int19 == 64);
    }

    @Test
    public void test1317() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1317");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String[] strArray2 = python2Target1.targetCharValueEscape;
        java.lang.String str3 = python2Target1.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup4 = python2Target1.templates;
        boolean boolean5 = python2Target1.templatesExist();
        java.lang.String str6 = python2Target1.getLanguage();
        python2Target1.addBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = null;
        java.lang.String str11 = python2Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator8, "\\1", false);
        java.util.Set<java.lang.String> strSet12 = python2Target1.getBadWords();
        org.antlr.v4.tool.Grammar grammar13 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target14 = new org.antlr.v4.codegen.target.Python2Target();
        org.stringtemplate.v4.STGroup sTGroup15 = python2Target14.templates;
        java.lang.String[] strArray16 = python2Target14.targetCharValueEscape;
        org.antlr.v4.codegen.CodeGenerator codeGenerator17 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target18 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator17);
        java.lang.String[] strArray19 = python2Target18.targetCharValueEscape;
        java.lang.String str22 = python2Target18.getTargetStringLiteralFromString("Python2", false);
        java.lang.String[] strArray23 = org.antlr.v4.codegen.target.Python2Target.python2Keywords;
        python2Target18.targetCharValueEscape = strArray23;
        python2Target14.targetCharValueEscape = strArray23;
        java.lang.String str28 = python2Target14.getTargetStringLiteralFromString("_tset_tsetContext", false);
        org.antlr.v4.tool.Grammar grammar29 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator30 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target31 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator30);
        java.lang.String[] strArray32 = python2Target31.targetCharValueEscape;
        java.lang.String str33 = python2Target31.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup34 = python2Target31.getTemplates();
        org.antlr.v4.codegen.CodeGenerator codeGenerator35 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target36 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator35);
        java.util.Set<java.lang.String> strSet37 = python2Target36.badWords;
        python2Target31.badWords = strSet37;
        org.antlr.v4.codegen.CodeGenerator codeGenerator39 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target40 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator39);
        java.util.Set<java.lang.String> strSet41 = python2Target40.badWords;
        java.lang.String str44 = python2Target40.getTargetStringLiteralFromString("hi!", false);
        java.lang.String str46 = python2Target40.getImplicitRuleLabel("@");
        python2Target40.language = "hi!";
        org.antlr.v4.codegen.CodeGenerator codeGenerator49 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target50 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator49);
        java.util.Set<java.lang.String> strSet51 = python2Target50.badWords;
        java.lang.String str53 = python2Target50.encodeIntAsCharEscape(64);
        java.lang.String str54 = python2Target50.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator55 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target56 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator55);
        java.lang.String[] strArray57 = python2Target56.targetCharValueEscape;
        java.lang.String str58 = python2Target56.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup59 = python2Target56.getTemplates();
        python2Target50.templates = sTGroup59;
        org.antlr.v4.codegen.CodeGenerator codeGenerator61 = python2Target50.getCodeGenerator();
        org.stringtemplate.v4.STGroup sTGroup62 = python2Target50.loadTemplates();
        python2Target40.templates = sTGroup62;
        python2Target31.templates = sTGroup62;
        org.antlr.v4.codegen.CodeGenerator codeGenerator65 = null;
        java.lang.String str68 = python2Target31.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator65, "@", false);
        python2Target31.language = "\"4.5.2.1\"";
        org.antlr.v4.tool.Grammar grammar71 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator72 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target73 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator72);
        java.lang.String[] strArray74 = python2Target73.targetCharValueEscape;
        java.lang.String str77 = python2Target73.getTargetStringLiteralFromString("_tset\\1", false);
        org.antlr.v4.tool.Grammar grammar78 = null;
        int[] intArray79 = new int[] {};
        java.lang.String[] strArray80 = python2Target73.getTokenTypesAsTargetLabels(grammar78, intArray79);
        java.lang.String[] strArray81 = python2Target31.getTokenTypesAsTargetLabels(grammar71, intArray79);
        java.lang.String[] strArray82 = python2Target14.getTokenTypesAsTargetLabels(grammar29, intArray79);
        java.lang.String[] strArray83 = python2Target1.getTokenTypesAsTargetLabels(grammar13, intArray79);
        org.antlr.v4.tool.Rule rule84 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str85 = python2Target1.getRuleFunctionContextStructName(rule84);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Python2" + "'", str3, "Python2");
        org.junit.Assert.assertNull(sTGroup4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Python2" + "'", str6, "Python2");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertNull(sTGroup15);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "Python2" + "'", str22, "Python2");
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "_tset_tsetContext" + "'", str28, "_tset_tsetContext");
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "Python2" + "'", str33, "Python2");
        org.junit.Assert.assertNotNull(sTGroup34);
        org.junit.Assert.assertNotNull(strSet37);
        org.junit.Assert.assertNotNull(strSet41);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "hi!" + "'", str44, "hi!");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "_@" + "'", str46, "_@");
        org.junit.Assert.assertNotNull(strSet51);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "@" + "'", str53, "@");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "Python2" + "'", str54, "Python2");
        org.junit.Assert.assertNotNull(strArray57);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "Python2" + "'", str58, "Python2");
        org.junit.Assert.assertNotNull(sTGroup59);
        org.junit.Assert.assertNull(codeGenerator61);
        org.junit.Assert.assertNotNull(sTGroup62);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "" + "'", str68, "");
        org.junit.Assert.assertNotNull(strArray74);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "_tset\\\\1" + "'", str77, "_tset\\\\1");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[]");
        org.junit.Assert.assertNotNull(strArray80);
        org.junit.Assert.assertNotNull(strArray81);
        org.junit.Assert.assertNotNull(strArray82);
        org.junit.Assert.assertNotNull(strArray83);
    }

    @Test
    public void test1318() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1318");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String[] strArray2 = python2Target1.targetCharValueEscape;
        java.lang.String str3 = python2Target1.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup4 = python2Target1.templates;
        boolean boolean5 = python2Target1.templatesExist();
        org.stringtemplate.v4.STGroup sTGroup6 = python2Target1.loadTemplates();
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = null;
        python2Target1.gen = codeGenerator7;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str10 = python2Target1.getElementListName("\\12");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Python2" + "'", str3, "Python2");
        org.junit.Assert.assertNull(sTGroup4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(sTGroup6);
    }

    @Test
    public void test1319() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1319");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str4 = python2Target1.encodeIntAsCharEscape(64);
        java.lang.String str5 = python2Target1.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target7 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator6);
        java.lang.String[] strArray8 = python2Target7.targetCharValueEscape;
        java.lang.String str9 = python2Target7.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup10 = python2Target7.getTemplates();
        python2Target1.templates = sTGroup10;
        org.stringtemplate.v4.STGroup sTGroup12 = python2Target1.templates;
        java.util.Set<java.lang.String> strSet13 = python2Target1.badWords;
        java.util.Set<java.lang.String> strSet14 = python2Target1.getBadWords();
        boolean boolean15 = python2Target1.supportsOverloadedMethods();
        java.util.Set<java.lang.String> strSet16 = python2Target1.getBadWords();
        java.lang.String str18 = python2Target1.getListLabel("\\n");
        org.antlr.v4.codegen.CodeGenerator codeGenerator19 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target20 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator19);
        java.lang.String[] strArray21 = python2Target20.targetCharValueEscape;
        java.lang.String str22 = python2Target20.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup23 = python2Target20.templates;
        java.lang.String str25 = python2Target20.getListLabel("\\n");
        java.lang.String[] strArray26 = python2Target20.targetCharValueEscape;
        org.antlr.v4.tool.Grammar grammar27 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator28 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target29 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator28);
        java.lang.String[] strArray30 = python2Target29.targetCharValueEscape;
        java.lang.String str33 = python2Target29.getTargetStringLiteralFromString("_tset\\1", false);
        org.antlr.v4.tool.Grammar grammar34 = null;
        int[] intArray35 = new int[] {};
        java.lang.String[] strArray36 = python2Target29.getTokenTypesAsTargetLabels(grammar34, intArray35);
        java.lang.String[] strArray37 = python2Target20.getTokenTypesAsTargetLabels(grammar27, intArray35);
        org.antlr.v4.tool.Grammar grammar38 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator39 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target40 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator39);
        java.lang.String[] strArray41 = python2Target40.targetCharValueEscape;
        java.lang.String str44 = python2Target40.getTargetStringLiteralFromString("_tset\\1", false);
        org.antlr.v4.tool.Grammar grammar45 = null;
        int[] intArray46 = new int[] {};
        java.lang.String[] strArray47 = python2Target40.getTokenTypesAsTargetLabels(grammar45, intArray46);
        java.lang.String[] strArray48 = python2Target20.getTokenTypesAsTargetLabels(grammar38, intArray46);
        python2Target1.targetCharValueEscape = strArray48;
        org.antlr.v4.tool.Grammar grammar50 = null;
        org.stringtemplate.v4.ST sT51 = null;
        // The following exception was thrown during execution in test generation
        try {
            python2Target1.genListenerFile(grammar50, sT51);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "@" + "'", str4, "@");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Python2" + "'", str5, "Python2");
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Python2" + "'", str9, "Python2");
        org.junit.Assert.assertNotNull(sTGroup10);
        org.junit.Assert.assertNotNull(sTGroup12);
        org.junit.Assert.assertNotNull(strSet13);
        org.junit.Assert.assertNotNull(strSet14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "\\n" + "'", str18, "\\n");
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "Python2" + "'", str22, "Python2");
        org.junit.Assert.assertNull(sTGroup23);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "\\n" + "'", str25, "\\n");
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "_tset\\\\1" + "'", str33, "_tset\\\\1");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[]");
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "_tset\\\\1" + "'", str44, "_tset\\\\1");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[]");
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertNotNull(strArray48);
    }

    @Test
    public void test1320() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1320");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String[] strArray2 = python2Target1.targetCharValueEscape;
        java.lang.String str3 = python2Target1.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup4 = python2Target1.getTemplates();
        org.antlr.v4.codegen.CodeGenerator codeGenerator5 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target6 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator5);
        java.util.Set<java.lang.String> strSet7 = python2Target6.badWords;
        python2Target1.badWords = strSet7;
        org.antlr.v4.codegen.CodeGenerator codeGenerator9 = python2Target1.gen;
        java.lang.String str10 = python2Target1.getLanguage();
        java.lang.String str11 = python2Target1.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator12 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target13 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator12);
        java.util.Set<java.lang.String> strSet14 = python2Target13.badWords;
        java.lang.String str17 = python2Target13.getTargetStringLiteralFromString("hi!", false);
        int int18 = python2Target13.getInlineTestSetWordSize();
        boolean boolean19 = python2Target13.wantsBaseVisitor();
        java.lang.String str20 = python2Target13.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup21 = python2Target13.loadTemplates();
        python2Target1.templates = sTGroup21;
        java.lang.String str24 = python2Target1.getAltLabelContextStructName("\"_tsethi!\"");
        java.util.Set<java.lang.String> strSet25 = python2Target1.getBadWords();
        org.stringtemplate.v4.STGroup sTGroup26 = python2Target1.loadTemplates();
        java.lang.Class<?> wildcardClass27 = python2Target1.getClass();
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Python2" + "'", str3, "Python2");
        org.junit.Assert.assertNotNull(sTGroup4);
        org.junit.Assert.assertNotNull(strSet7);
        org.junit.Assert.assertNull(codeGenerator9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Python2" + "'", str10, "Python2");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "4.5.2.1" + "'", str11, "4.5.2.1");
        org.junit.Assert.assertNotNull(strSet14);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 64 + "'", int18 == 64);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "Python2" + "'", str20, "Python2");
        org.junit.Assert.assertNotNull(sTGroup21);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "\"_tsethi!\"Context" + "'", str24, "\"_tsethi!\"Context");
        org.junit.Assert.assertNotNull(strSet25);
        org.junit.Assert.assertNotNull(sTGroup26);
        org.junit.Assert.assertNotNull(wildcardClass27);
    }

    @Test
    public void test1321() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1321");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String[] strArray2 = python2Target1.targetCharValueEscape;
        java.lang.String str3 = python2Target1.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup4 = python2Target1.getTemplates();
        org.antlr.v4.codegen.CodeGenerator codeGenerator5 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target6 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator5);
        java.util.Set<java.lang.String> strSet7 = python2Target6.badWords;
        python2Target1.badWords = strSet7;
        java.lang.String[] strArray14 = new java.lang.String[] { "@", "\"_tset\"", "\"hi!\"", "_tset\\1", "_tset\\\\1" };
        python2Target1.targetCharValueEscape = strArray14;
        java.lang.String str17 = python2Target1.getListLabel("");
        org.antlr.v4.codegen.CodeGenerator codeGenerator18 = python2Target1.gen;
        boolean boolean19 = python2Target1.templatesExist();
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Python2" + "'", str3, "Python2");
        org.junit.Assert.assertNotNull(sTGroup4);
        org.junit.Assert.assertNotNull(strSet7);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertNull(codeGenerator18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
    }

    @Test
    public void test1322() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1322");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str5 = python2Target1.getTargetStringLiteralFromString("hi!", false);
        int int6 = python2Target1.getInlineTestSetWordSize();
        java.lang.String str8 = python2Target1.getTargetStringLiteralFromString("Hi!Context");
        java.util.Set<java.lang.String> strSet9 = python2Target1.badWords;
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target11 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator10);
        java.lang.String str13 = python2Target11.getImplicitSetLabel("");
        org.antlr.v4.codegen.CodeGenerator codeGenerator14 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target15 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator14);
        java.util.Set<java.lang.String> strSet16 = python2Target15.badWords;
        java.lang.String str18 = python2Target15.encodeIntAsCharEscape(64);
        java.lang.String str19 = python2Target15.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator20 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target21 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator20);
        java.lang.String[] strArray22 = python2Target21.targetCharValueEscape;
        java.lang.String str23 = python2Target21.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup24 = python2Target21.getTemplates();
        python2Target15.templates = sTGroup24;
        python2Target11.templates = sTGroup24;
        java.lang.String str28 = python2Target11.getAltLabelContextStructName("_tset");
        org.antlr.v4.codegen.CodeGenerator codeGenerator29 = null;
        python2Target11.gen = codeGenerator29;
        python2Target11.language = "@";
        java.lang.String str34 = python2Target11.encodeIntAsCharEscape((int) (short) 0);
        org.antlr.v4.tool.Grammar grammar35 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator36 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target37 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator36);
        java.util.Set<java.lang.String> strSet38 = python2Target37.badWords;
        java.lang.String str40 = python2Target37.encodeIntAsCharEscape(64);
        java.lang.String str41 = python2Target37.getLanguage();
        int int42 = python2Target37.getInlineTestSetWordSize();
        java.lang.String str44 = python2Target37.getImplicitSetLabel("_tset\\\\1");
        org.antlr.v4.tool.Grammar grammar45 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator46 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target47 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator46);
        java.lang.String[] strArray48 = python2Target47.targetCharValueEscape;
        java.lang.String str51 = python2Target47.getTargetStringLiteralFromString("_tset\\1", false);
        org.antlr.v4.tool.Grammar grammar52 = null;
        int[] intArray53 = new int[] {};
        java.lang.String[] strArray54 = python2Target47.getTokenTypesAsTargetLabels(grammar52, intArray53);
        java.lang.String[] strArray55 = python2Target37.getTokenTypesAsTargetLabels(grammar45, intArray53);
        java.lang.String[] strArray56 = python2Target11.getTokenTypesAsTargetLabels(grammar35, intArray53);
        java.util.Set<java.lang.String> strSet57 = python2Target11.badWords;
        python2Target1.badWords = strSet57;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str60 = python2Target1.getElementListName("\"tset_tset\\\"\\\"\\\\\\\"hi!\\\\\\\"\\\"\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 64 + "'", int6 == 64);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\"Hi!Context\"" + "'", str8, "\"Hi!Context\"");
        org.junit.Assert.assertNotNull(strSet9);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "_tset" + "'", str13, "_tset");
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "@" + "'", str18, "@");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Python2" + "'", str19, "Python2");
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "Python2" + "'", str23, "Python2");
        org.junit.Assert.assertNotNull(sTGroup24);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "_tsetContext" + "'", str28, "_tsetContext");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "\\0" + "'", str34, "\\0");
        org.junit.Assert.assertNotNull(strSet38);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "@" + "'", str40, "@");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "Python2" + "'", str41, "Python2");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 64 + "'", int42 == 64);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "_tset_tset\\\\1" + "'", str44, "_tset_tset\\\\1");
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "_tset\\\\1" + "'", str51, "_tset\\\\1");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[]");
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertNotNull(strArray55);
        org.junit.Assert.assertNotNull(strArray56);
        org.junit.Assert.assertNotNull(strSet57);
    }

    @Test
    public void test1323() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1323");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str5 = python2Target1.getTargetStringLiteralFromString("hi!", false);
        int int6 = python2Target1.getInlineTestSetWordSize();
        boolean boolean7 = python2Target1.wantsBaseVisitor();
        boolean boolean8 = python2Target1.supportsOverloadedMethods();
        java.lang.Class<?> wildcardClass9 = python2Target1.getClass();
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 64 + "'", int6 == 64);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test1324() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1324");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str5 = python2Target1.getTargetStringLiteralFromString("hi!", false);
        int int6 = python2Target1.getInlineTestSetWordSize();
        java.lang.String str8 = python2Target1.getTargetStringLiteralFromString("Hi!Context");
        java.util.Set<java.lang.String> strSet9 = python2Target1.badWords;
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = null;
        java.lang.String str13 = python2Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator10, "hi!", false);
        java.util.Set<java.lang.String> strSet14 = python2Target1.badWords;
        java.util.Set<java.lang.String> strSet15 = python2Target1.getBadWords();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str17 = python2Target1.getImplicitTokenLabel("_\"_tset\"Context");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 64 + "'", int6 == 64);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\"Hi!Context\"" + "'", str8, "\"Hi!Context\"");
        org.junit.Assert.assertNotNull(strSet9);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "i" + "'", str13, "i");
        org.junit.Assert.assertNotNull(strSet14);
        org.junit.Assert.assertNotNull(strSet15);
    }

    @Test
    public void test1325() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1325");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String[] strArray2 = python2Target1.targetCharValueEscape;
        java.lang.String str3 = python2Target1.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup4 = python2Target1.templates;
        java.lang.String str6 = python2Target1.getImplicitRuleLabel("\"_tset\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = null;
        java.lang.String str10 = python2Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator7, "4.5.2.1", true);
        boolean boolean11 = python2Target1.supportsOverloadedMethods();
        org.antlr.v4.tool.ast.GrammarAST grammarAST12 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str13 = python2Target1.getLoopLabel(grammarAST12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Python2" + "'", str3, "Python2");
        org.junit.Assert.assertNull(sTGroup4);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "_\"_tset\"" + "'", str6, "_\"_tset\"");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\".5.2.\"" + "'", str10, "\".5.2.\"");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test1326() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1326");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str4 = python2Target1.encodeIntAsCharEscape(64);
        org.stringtemplate.v4.STGroup sTGroup5 = python2Target1.loadTemplates();
        java.lang.String str6 = python2Target1.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = python2Target1.getCodeGenerator();
        java.lang.String str9 = python2Target1.getListLabel("__tset_tset\"\\\"\\\\\\\"hi!\\\\\\\"\\\"\"");
        java.lang.String[] strArray10 = python2Target1.targetCharValueEscape;
        org.stringtemplate.v4.STGroup sTGroup11 = python2Target1.loadTemplates();
        org.antlr.v4.tool.ast.GrammarAST grammarAST12 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean13 = python2Target1.visibleGrammarSymbolCausesIssueInGeneratedCode(grammarAST12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "@" + "'", str4, "@");
        org.junit.Assert.assertNotNull(sTGroup5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Python2" + "'", str6, "Python2");
        org.junit.Assert.assertNull(codeGenerator7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "__tset_tset\"\\\"\\\\\\\"hi!\\\\\\\"\\\"\"" + "'", str9, "__tset_tset\"\\\"\\\\\\\"hi!\\\\\\\"\\\"\"");
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(sTGroup11);
    }

    @Test
    public void test1327() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1327");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str4 = python2Target1.encodeIntAsCharEscape(64);
        java.lang.String str5 = python2Target1.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target7 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator6);
        java.lang.String[] strArray8 = python2Target7.targetCharValueEscape;
        java.lang.String str9 = python2Target7.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup10 = python2Target7.getTemplates();
        python2Target1.templates = sTGroup10;
        org.stringtemplate.v4.STGroup sTGroup12 = python2Target1.templates;
        java.util.Set<java.lang.String> strSet13 = python2Target1.badWords;
        java.util.Set<java.lang.String> strSet14 = python2Target1.getBadWords();
        boolean boolean15 = python2Target1.supportsOverloadedMethods();
        java.util.Set<java.lang.String> strSet16 = python2Target1.getBadWords();
        python2Target1.addBadWords();
        org.stringtemplate.v4.STGroup sTGroup18 = python2Target1.loadTemplates();
        org.antlr.v4.codegen.CodeGenerator codeGenerator19 = python2Target1.getCodeGenerator();
        boolean boolean20 = python2Target1.supportsOverloadedMethods();
        org.antlr.v4.codegen.CodeGenerator codeGenerator21 = null;
        python2Target1.gen = codeGenerator21;
        org.stringtemplate.v4.STGroup sTGroup23 = python2Target1.templates;
        org.antlr.v4.codegen.CodeGenerator codeGenerator24 = null;
        java.lang.String str27 = python2Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator24, "\"tset_tset\\\"\\\"\\\\\\\"hi!\\\\\\\"\\\"\"", true);
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "@" + "'", str4, "@");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Python2" + "'", str5, "Python2");
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Python2" + "'", str9, "Python2");
        org.junit.Assert.assertNotNull(sTGroup10);
        org.junit.Assert.assertNotNull(sTGroup12);
        org.junit.Assert.assertNotNull(strSet13);
        org.junit.Assert.assertNotNull(strSet14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertNotNull(sTGroup18);
        org.junit.Assert.assertNull(codeGenerator19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(sTGroup23);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "\"tset_tset\\\"\\\"\\\\\\\"hi!\\\\\\\"\\\"\"" + "'", str27, "\"tset_tset\\\"\\\"\\\\\\\"hi!\\\\\\\"\\\"\"");
    }

    @Test
    public void test1328() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1328");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str4 = python2Target1.encodeIntAsCharEscape(64);
        java.lang.String str5 = python2Target1.getLanguage();
        java.lang.String str7 = python2Target1.getImplicitSetLabel("");
        java.lang.String str9 = python2Target1.getImplicitSetLabel("\\n");
        org.antlr.v4.tool.Grammar grammar10 = null;
        org.stringtemplate.v4.ST sT11 = null;
        python2Target1.genRecognizerHeaderFile(grammar10, sT11, "\"4.5.2.1\"");
        boolean boolean14 = python2Target1.templatesExist();
        org.antlr.v4.codegen.CodeGenerator codeGenerator15 = python2Target1.gen;
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "@" + "'", str4, "@");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Python2" + "'", str5, "Python2");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "_tset" + "'", str7, "_tset");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "_tset\\n" + "'", str9, "_tset\\n");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(codeGenerator15);
    }

    @Test
    public void test1329() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1329");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str4 = python2Target1.encodeIntAsCharEscape(64);
        java.lang.String str5 = python2Target1.getLanguage();
        java.lang.String str6 = python2Target1.getLanguage();
        org.antlr.v4.tool.Grammar grammar7 = null;
        org.stringtemplate.v4.ST sT8 = null;
        // The following exception was thrown during execution in test generation
        try {
            python2Target1.genListenerFile(grammar7, sT8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "@" + "'", str4, "@");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Python2" + "'", str5, "Python2");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Python2" + "'", str6, "Python2");
    }

    @Test
    public void test1330() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1330");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String[] strArray2 = python2Target1.targetCharValueEscape;
        java.lang.String str3 = python2Target1.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup4 = python2Target1.templates;
        java.lang.String str6 = python2Target1.getListLabel("\\n");
        org.antlr.v4.tool.Grammar grammar7 = null;
        org.stringtemplate.v4.ST sT8 = null;
        python2Target1.genRecognizerHeaderFile(grammar7, sT8, "\"4.5.2.1\"");
        int int11 = python2Target1.getSerializedATNSegmentLimit();
        java.lang.String str12 = python2Target1.language;
        org.antlr.v4.tool.Grammar grammar13 = null;
        org.stringtemplate.v4.ST sT14 = null;
        python2Target1.genRecognizerHeaderFile(grammar13, sT14, "_tset_\"#\"");
        java.lang.String str18 = python2Target1.getImplicitRuleLabel("_@");
        org.antlr.v4.codegen.CodeGenerator codeGenerator19 = python2Target1.gen;
        org.antlr.v4.codegen.CodeGenerator codeGenerator20 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target21 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator20);
        java.util.Set<java.lang.String> strSet22 = python2Target21.badWords;
        java.lang.String str24 = python2Target21.encodeIntAsCharEscape(64);
        java.lang.String str25 = python2Target21.getLanguage();
        java.lang.String str26 = python2Target21.getLanguage();
        boolean boolean27 = python2Target21.supportsOverloadedMethods();
        org.antlr.v4.codegen.CodeGenerator codeGenerator28 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target29 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator28);
        java.lang.String[] strArray30 = python2Target29.targetCharValueEscape;
        java.lang.String str31 = python2Target29.getLanguage();
        java.lang.String str34 = python2Target29.getTargetStringLiteralFromString("_tset", true);
        java.lang.String str36 = python2Target29.getTargetStringLiteralFromString("\"4.5.2.1\"");
        java.lang.String str38 = python2Target29.getAltLabelContextStructName("__tset");
        org.antlr.v4.codegen.CodeGenerator codeGenerator39 = null;
        java.lang.String str42 = python2Target29.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator39, "_tsetContextContext", false);
        org.antlr.v4.codegen.CodeGenerator codeGenerator43 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target44 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator43);
        java.util.Set<java.lang.String> strSet45 = python2Target44.badWords;
        java.lang.String str47 = python2Target44.encodeIntAsCharEscape(64);
        java.lang.String str49 = python2Target44.getAltLabelContextStructName("Python2");
        boolean boolean50 = python2Target44.supportsOverloadedMethods();
        org.antlr.v4.codegen.CodeGenerator codeGenerator51 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target52 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator51);
        java.lang.String[] strArray53 = python2Target52.targetCharValueEscape;
        java.lang.String str54 = python2Target52.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup55 = python2Target52.loadTemplates();
        int int56 = python2Target52.getInlineTestSetWordSize();
        java.lang.String[] strArray57 = python2Target52.targetCharValueEscape;
        python2Target44.targetCharValueEscape = strArray57;
        org.antlr.v4.codegen.target.Python2Target.python2Keywords = strArray57;
        python2Target29.targetCharValueEscape = strArray57;
        python2Target21.targetCharValueEscape = strArray57;
        python2Target1.targetCharValueEscape = strArray57;
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Python2" + "'", str3, "Python2");
        org.junit.Assert.assertNull(sTGroup4);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\\n" + "'", str6, "\\n");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2147483647 + "'", int11 == 2147483647);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Python2" + "'", str12, "Python2");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "__@" + "'", str18, "__@");
        org.junit.Assert.assertNull(codeGenerator19);
        org.junit.Assert.assertNotNull(strSet22);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "@" + "'", str24, "@");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Python2" + "'", str25, "Python2");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "Python2" + "'", str26, "Python2");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "Python2" + "'", str31, "Python2");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "\"_tset\"" + "'", str34, "\"_tset\"");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "\"\\\"4.5.2.1\\\"\"" + "'", str36, "\"\\\"4.5.2.1\\\"\"");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "__tsetContext" + "'", str38, "__tsetContext");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "tsetContextContex" + "'", str42, "tsetContextContex");
        org.junit.Assert.assertNotNull(strSet45);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "@" + "'", str47, "@");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "Python2Context" + "'", str49, "Python2Context");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(strArray53);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "Python2" + "'", str54, "Python2");
        org.junit.Assert.assertNotNull(sTGroup55);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 64 + "'", int56 == 64);
        org.junit.Assert.assertNotNull(strArray57);
    }

    @Test
    public void test1331() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1331");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String[] strArray2 = python2Target1.targetCharValueEscape;
        java.lang.String str3 = python2Target1.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup4 = python2Target1.getTemplates();
        boolean boolean5 = python2Target1.wantsBaseVisitor();
        java.lang.String str7 = python2Target1.getTargetStringLiteralFromString("d");
        java.lang.String[] strArray13 = new java.lang.String[] { "_tset\\1", "i", "__tset", "\"\\\"d\\\"\"", "_tsetContextContext" };
        python2Target1.targetCharValueEscape = strArray13;
        boolean boolean15 = python2Target1.supportsOverloadedMethods();
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Python2" + "'", str3, "Python2");
        org.junit.Assert.assertNotNull(sTGroup4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "\"d\"" + "'", str7, "\"d\"");
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test1332() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1332");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String[] strArray2 = python2Target1.targetCharValueEscape;
        java.lang.String str3 = python2Target1.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup4 = python2Target1.loadTemplates();
        int int5 = python2Target1.getInlineTestSetWordSize();
        java.lang.String str6 = python2Target1.language;
        java.util.Set<java.lang.String> strSet7 = python2Target1.badWords;
        int int8 = python2Target1.getInlineTestSetWordSize();
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Python2" + "'", str3, "Python2");
        org.junit.Assert.assertNotNull(sTGroup4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 64 + "'", int5 == 64);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Python2" + "'", str6, "Python2");
        org.junit.Assert.assertNotNull(strSet7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 64 + "'", int8 == 64);
    }

    @Test
    public void test1333() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1333");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        boolean boolean3 = python2Target1.wantsBaseVisitor();
        org.stringtemplate.v4.STGroup sTGroup4 = python2Target1.loadTemplates();
        org.stringtemplate.v4.STGroup sTGroup5 = python2Target1.getTemplates();
        java.util.Set<java.lang.String> strSet6 = python2Target1.badWords;
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target8 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator7);
        java.util.Set<java.lang.String> strSet9 = python2Target8.badWords;
        java.lang.String str12 = python2Target8.getTargetStringLiteralFromString("hi!", false);
        java.lang.String str14 = python2Target8.getTargetStringLiteralFromString("\"hi!\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator15 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target16 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator15);
        java.util.Set<java.lang.String> strSet17 = python2Target16.badWords;
        java.lang.String str19 = python2Target16.encodeIntAsCharEscape(64);
        java.lang.String str20 = python2Target16.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator21 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target22 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator21);
        java.lang.String[] strArray23 = python2Target22.targetCharValueEscape;
        java.lang.String str24 = python2Target22.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup25 = python2Target22.getTemplates();
        python2Target16.templates = sTGroup25;
        org.antlr.v4.tool.Grammar grammar27 = null;
        org.stringtemplate.v4.ST sT28 = null;
        python2Target16.genRecognizerHeaderFile(grammar27, sT28, "\"_tset\"");
        java.util.Set<java.lang.String> strSet31 = python2Target16.getBadWords();
        python2Target8.badWords = strSet31;
        python2Target1.badWords = strSet31;
        java.lang.String str35 = python2Target1.getAltLabelContextStructName("_tset\\n");
        int int36 = python2Target1.getInlineTestSetWordSize();
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(sTGroup4);
        org.junit.Assert.assertNotNull(sTGroup5);
        org.junit.Assert.assertNotNull(strSet6);
        org.junit.Assert.assertNotNull(strSet9);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "\"\\\"hi!\\\"\"" + "'", str14, "\"\\\"hi!\\\"\"");
        org.junit.Assert.assertNotNull(strSet17);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "@" + "'", str19, "@");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "Python2" + "'", str20, "Python2");
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "Python2" + "'", str24, "Python2");
        org.junit.Assert.assertNotNull(sTGroup25);
        org.junit.Assert.assertNotNull(strSet31);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "_tset\\nContext" + "'", str35, "_tset\\nContext");
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 64 + "'", int36 == 64);
    }

    @Test
    public void test1334() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1334");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String[] strArray2 = python2Target1.targetCharValueEscape;
        java.lang.String str3 = python2Target1.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup4 = python2Target1.getTemplates();
        org.antlr.v4.codegen.CodeGenerator codeGenerator5 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target6 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator5);
        java.util.Set<java.lang.String> strSet7 = python2Target6.badWords;
        python2Target1.badWords = strSet7;
        org.antlr.v4.codegen.CodeGenerator codeGenerator9 = python2Target1.gen;
        java.lang.String str10 = python2Target1.getLanguage();
        java.lang.String str11 = python2Target1.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator12 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target13 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator12);
        java.util.Set<java.lang.String> strSet14 = python2Target13.badWords;
        java.lang.String str17 = python2Target13.getTargetStringLiteralFromString("hi!", false);
        int int18 = python2Target13.getInlineTestSetWordSize();
        boolean boolean19 = python2Target13.wantsBaseVisitor();
        java.lang.String str20 = python2Target13.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup21 = python2Target13.loadTemplates();
        python2Target1.templates = sTGroup21;
        java.lang.String str24 = python2Target1.getAltLabelContextStructName("\"_tsethi!\"");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str26 = python2Target1.getElementName("_tset_tset_\"#\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Python2" + "'", str3, "Python2");
        org.junit.Assert.assertNotNull(sTGroup4);
        org.junit.Assert.assertNotNull(strSet7);
        org.junit.Assert.assertNull(codeGenerator9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Python2" + "'", str10, "Python2");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "4.5.2.1" + "'", str11, "4.5.2.1");
        org.junit.Assert.assertNotNull(strSet14);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 64 + "'", int18 == 64);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "Python2" + "'", str20, "Python2");
        org.junit.Assert.assertNotNull(sTGroup21);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "\"_tsethi!\"Context" + "'", str24, "\"_tsethi!\"Context");
    }

    @Test
    public void test1335() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1335");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str5 = python2Target1.getTargetStringLiteralFromString("hi!", false);
        java.lang.String str7 = python2Target1.getImplicitRuleLabel("@");
        int int8 = python2Target1.getSerializedATNSegmentLimit();
        python2Target1.language = "_tset\\\"\\\"\\\\\\\"hi!\\\\\\\"\\\"\\\"Contex";
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "_@" + "'", str7, "_@");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 2147483647 + "'", int8 == 2147483647);
    }

    @Test
    public void test1336() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1336");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str4 = python2Target1.encodeIntAsCharEscape(64);
        java.lang.String str5 = python2Target1.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup6 = python2Target1.getTemplates();
        boolean boolean7 = python2Target1.wantsBaseListener();
        boolean boolean8 = python2Target1.wantsBaseListener();
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "@" + "'", str4, "@");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Python2" + "'", str5, "Python2");
        org.junit.Assert.assertNotNull(sTGroup6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test1337() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1337");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str4 = python2Target1.encodeIntAsCharEscape(64);
        java.lang.String str5 = python2Target1.getLanguage();
        java.lang.String str8 = python2Target1.getTargetStringLiteralFromString("_@", false);
        java.lang.String str10 = python2Target1.encodeIntAsCharEscape((int) (byte) 100);
        org.antlr.v4.codegen.CodeGenerator codeGenerator11 = null;
        python2Target1.gen = codeGenerator11;
        java.lang.String str13 = python2Target1.language;
        java.lang.String str16 = python2Target1.getTargetStringLiteralFromString("_\\\"\\\"\\\\\\\"hi!\\\\\\\"\\\"", true);
        java.util.Set<java.lang.String> strSet17 = python2Target1.getBadWords();
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "@" + "'", str4, "@");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Python2" + "'", str5, "Python2");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "_@" + "'", str8, "_@");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "d" + "'", str10, "d");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Python2" + "'", str13, "Python2");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "\"_\\\\\\\"\\\\\\\"\\\\\\\\\\\\\\\"hi!\\\\\\\\\\\\\\\"\\\\\\\"\"" + "'", str16, "\"_\\\\\\\"\\\\\\\"\\\\\\\\\\\\\\\"hi!\\\\\\\\\\\\\\\"\\\\\\\"\"");
        org.junit.Assert.assertNotNull(strSet17);
    }

    @Test
    public void test1338() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1338");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str4 = python2Target1.encodeIntAsCharEscape(64);
        java.lang.String str6 = python2Target1.getAltLabelContextStructName("Python2");
        boolean boolean7 = python2Target1.supportsOverloadedMethods();
        org.antlr.v4.tool.Grammar grammar8 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator9 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target10 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator9);
        java.lang.String[] strArray11 = python2Target10.targetCharValueEscape;
        java.lang.String str12 = python2Target10.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup13 = python2Target10.getTemplates();
        org.antlr.v4.codegen.CodeGenerator codeGenerator14 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target15 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator14);
        java.util.Set<java.lang.String> strSet16 = python2Target15.badWords;
        python2Target10.badWords = strSet16;
        org.antlr.v4.tool.Grammar grammar18 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator19 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target20 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator19);
        java.util.Set<java.lang.String> strSet21 = python2Target20.badWords;
        java.lang.String str23 = python2Target20.encodeIntAsCharEscape(64);
        java.lang.String str24 = python2Target20.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator25 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target26 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator25);
        java.lang.String[] strArray27 = python2Target26.targetCharValueEscape;
        java.lang.String str28 = python2Target26.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup29 = python2Target26.getTemplates();
        python2Target20.templates = sTGroup29;
        org.stringtemplate.v4.STGroup sTGroup31 = python2Target20.templates;
        java.util.Set<java.lang.String> strSet32 = python2Target20.badWords;
        java.util.Set<java.lang.String> strSet33 = python2Target20.getBadWords();
        boolean boolean34 = python2Target20.supportsOverloadedMethods();
        java.util.Set<java.lang.String> strSet35 = python2Target20.getBadWords();
        org.antlr.v4.tool.Grammar grammar36 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator37 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target38 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator37);
        java.lang.String[] strArray39 = python2Target38.targetCharValueEscape;
        java.lang.String str42 = python2Target38.getTargetStringLiteralFromString("_tset\\1", false);
        org.antlr.v4.tool.Grammar grammar43 = null;
        int[] intArray44 = new int[] {};
        java.lang.String[] strArray45 = python2Target38.getTokenTypesAsTargetLabels(grammar43, intArray44);
        java.lang.String[] strArray46 = python2Target20.getTokenTypesAsTargetLabels(grammar36, intArray44);
        java.lang.String[] strArray47 = python2Target10.getTokenTypesAsTargetLabels(grammar18, intArray44);
        java.lang.String[] strArray48 = python2Target1.getTokenTypesAsTargetLabels(grammar8, intArray44);
        java.lang.String str49 = python2Target1.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator50 = null;
        python2Target1.gen = codeGenerator50;
        org.antlr.v4.codegen.model.RuleFunction ruleFunction52 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str53 = python2Target1.getRuleFunctionContextStructName(ruleFunction52);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "@" + "'", str4, "@");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Python2Context" + "'", str6, "Python2Context");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Python2" + "'", str12, "Python2");
        org.junit.Assert.assertNotNull(sTGroup13);
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertNotNull(strSet21);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "@" + "'", str23, "@");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "Python2" + "'", str24, "Python2");
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "Python2" + "'", str28, "Python2");
        org.junit.Assert.assertNotNull(sTGroup29);
        org.junit.Assert.assertNotNull(sTGroup31);
        org.junit.Assert.assertNotNull(strSet32);
        org.junit.Assert.assertNotNull(strSet33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(strSet35);
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "_tset\\\\1" + "'", str42, "_tset\\\\1");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[]");
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "4.5.2.1" + "'", str49, "4.5.2.1");
    }

    @Test
    public void test1339() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1339");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String[] strArray2 = python2Target1.targetCharValueEscape;
        java.lang.String str3 = python2Target1.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup4 = python2Target1.getTemplates();
        org.antlr.v4.codegen.CodeGenerator codeGenerator5 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target6 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator5);
        java.util.Set<java.lang.String> strSet7 = python2Target6.badWords;
        python2Target1.badWords = strSet7;
        org.antlr.v4.codegen.CodeGenerator codeGenerator9 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target10 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator9);
        java.util.Set<java.lang.String> strSet11 = python2Target10.badWords;
        java.lang.String str14 = python2Target10.getTargetStringLiteralFromString("hi!", false);
        java.lang.String str16 = python2Target10.getImplicitRuleLabel("@");
        python2Target10.language = "hi!";
        org.antlr.v4.codegen.CodeGenerator codeGenerator19 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target20 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator19);
        java.util.Set<java.lang.String> strSet21 = python2Target20.badWords;
        java.lang.String str23 = python2Target20.encodeIntAsCharEscape(64);
        java.lang.String str24 = python2Target20.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator25 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target26 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator25);
        java.lang.String[] strArray27 = python2Target26.targetCharValueEscape;
        java.lang.String str28 = python2Target26.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup29 = python2Target26.getTemplates();
        python2Target20.templates = sTGroup29;
        org.antlr.v4.codegen.CodeGenerator codeGenerator31 = python2Target20.getCodeGenerator();
        org.stringtemplate.v4.STGroup sTGroup32 = python2Target20.loadTemplates();
        python2Target10.templates = sTGroup32;
        python2Target1.templates = sTGroup32;
        org.stringtemplate.v4.STGroup sTGroup35 = python2Target1.getTemplates();
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Python2" + "'", str3, "Python2");
        org.junit.Assert.assertNotNull(sTGroup4);
        org.junit.Assert.assertNotNull(strSet7);
        org.junit.Assert.assertNotNull(strSet11);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "_@" + "'", str16, "_@");
        org.junit.Assert.assertNotNull(strSet21);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "@" + "'", str23, "@");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "Python2" + "'", str24, "Python2");
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "Python2" + "'", str28, "Python2");
        org.junit.Assert.assertNotNull(sTGroup29);
        org.junit.Assert.assertNull(codeGenerator31);
        org.junit.Assert.assertNotNull(sTGroup32);
        org.junit.Assert.assertNotNull(sTGroup35);
    }

    @Test
    public void test1340() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1340");
        org.antlr.v4.codegen.target.Python2Target.PythonStringRenderer pythonStringRenderer0 = new org.antlr.v4.codegen.target.Python2Target.PythonStringRenderer();
        org.antlr.v4.codegen.CodeGenerator codeGenerator1 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target2 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator1);
        java.lang.String[] strArray3 = python2Target2.targetCharValueEscape;
        java.lang.String str6 = python2Target2.getTargetStringLiteralFromString("Python2", false);
        java.lang.String str7 = python2Target2.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = python2Target2.gen;
        java.util.Locale locale10 = null;
        java.lang.String str11 = pythonStringRenderer0.toString((java.lang.Object) codeGenerator8, "\"4.5.2.1\"", locale10);
        org.antlr.v4.codegen.CodeGenerator codeGenerator12 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target13 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator12);
        java.lang.String[] strArray14 = python2Target13.targetCharValueEscape;
        java.lang.String str15 = python2Target13.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup16 = python2Target13.templates;
        java.lang.String str18 = python2Target13.getListLabel("\\n");
        org.antlr.v4.tool.Grammar grammar19 = null;
        org.stringtemplate.v4.ST sT20 = null;
        python2Target13.genRecognizerHeaderFile(grammar19, sT20, "\"4.5.2.1\"");
        int int23 = python2Target13.getSerializedATNSegmentLimit();
        java.lang.String str24 = python2Target13.language;
        org.antlr.v4.tool.Grammar grammar25 = null;
        org.stringtemplate.v4.ST sT26 = null;
        python2Target13.genRecognizerHeaderFile(grammar25, sT26, "_tset_\"#\"");
        java.util.Locale locale30 = null;
        java.lang.String str31 = pythonStringRenderer0.toString((java.lang.Object) "_tset_\"#\"", "\"_\"\\\"hi!\\\"\"\"", locale30);
        org.antlr.v4.codegen.CodeGenerator codeGenerator32 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target33 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator32);
        java.util.Set<java.lang.String> strSet34 = python2Target33.badWords;
        java.lang.String str37 = python2Target33.getTargetStringLiteralFromString("hi!", false);
        int int38 = python2Target33.getInlineTestSetWordSize();
        java.lang.String str40 = python2Target33.getTargetStringLiteralFromString("Hi!Context");
        java.util.Set<java.lang.String> strSet41 = python2Target33.badWords;
        java.lang.String str44 = python2Target33.getTargetStringLiteralFromString("_\"\\\"hi!\\\"\"", true);
        org.stringtemplate.v4.STGroup sTGroup45 = python2Target33.getTemplates();
        java.util.Locale locale47 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str48 = pythonStringRenderer0.toString((java.lang.Object) python2Target33, "\"\\\"_tset\\\"\"", locale47);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: org.antlr.v4.codegen.target.Python2Target cannot be cast to java.lang.String");
        } catch (java.lang.ClassCastException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Python2" + "'", str6, "Python2");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "4.5.2.1" + "'", str7, "4.5.2.1");
        org.junit.Assert.assertNull(codeGenerator8);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "\"4.5.2.1\"" + "'", str11, "\"4.5.2.1\"");
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Python2" + "'", str15, "Python2");
        org.junit.Assert.assertNull(sTGroup16);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "\\n" + "'", str18, "\\n");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 2147483647 + "'", int23 == 2147483647);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "Python2" + "'", str24, "Python2");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "\"_\"\\\"hi!\\\"\"\"" + "'", str31, "\"_\"\\\"hi!\\\"\"\"");
        org.junit.Assert.assertNotNull(strSet34);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "hi!" + "'", str37, "hi!");
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 64 + "'", int38 == 64);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "\"Hi!Context\"" + "'", str40, "\"Hi!Context\"");
        org.junit.Assert.assertNotNull(strSet41);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "\"_\\\"\\\\\\\"hi!\\\\\\\"\\\"\"" + "'", str44, "\"_\\\"\\\\\\\"hi!\\\\\\\"\\\"\"");
        org.junit.Assert.assertNotNull(sTGroup45);
    }

    @Test
    public void test1341() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1341");
        org.antlr.v4.codegen.target.Python2Target python2Target0 = new org.antlr.v4.codegen.target.Python2Target();
        org.antlr.v4.codegen.CodeGenerator codeGenerator1 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target2 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator1);
        java.util.Set<java.lang.String> strSet3 = python2Target2.badWords;
        java.lang.String str5 = python2Target2.encodeIntAsCharEscape(64);
        java.lang.String str6 = python2Target2.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target8 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator7);
        java.lang.String[] strArray9 = python2Target8.targetCharValueEscape;
        java.lang.String str10 = python2Target8.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup11 = python2Target8.getTemplates();
        python2Target2.templates = sTGroup11;
        org.stringtemplate.v4.STGroup sTGroup13 = python2Target2.templates;
        java.util.Set<java.lang.String> strSet14 = python2Target2.badWords;
        java.util.Set<java.lang.String> strSet15 = python2Target2.getBadWords();
        boolean boolean16 = python2Target2.supportsOverloadedMethods();
        java.util.Set<java.lang.String> strSet17 = python2Target2.getBadWords();
        org.stringtemplate.v4.STGroup sTGroup18 = python2Target2.getTemplates();
        python2Target0.templates = sTGroup18;
        org.antlr.v4.codegen.CodeGenerator codeGenerator20 = python2Target0.gen;
        org.antlr.v4.tool.Grammar grammar21 = null;
        org.stringtemplate.v4.ST sT22 = null;
        python2Target0.genRecognizerHeaderFile(grammar21, sT22, "\"d\"");
        java.util.Set<java.lang.String> strSet25 = python2Target0.badWords;
        int int26 = python2Target0.getInlineTestSetWordSize();
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "@" + "'", str5, "@");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Python2" + "'", str6, "Python2");
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Python2" + "'", str10, "Python2");
        org.junit.Assert.assertNotNull(sTGroup11);
        org.junit.Assert.assertNotNull(sTGroup13);
        org.junit.Assert.assertNotNull(strSet14);
        org.junit.Assert.assertNotNull(strSet15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(strSet17);
        org.junit.Assert.assertNotNull(sTGroup18);
        org.junit.Assert.assertNull(codeGenerator20);
        org.junit.Assert.assertNotNull(strSet25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 64 + "'", int26 == 64);
    }

    @Test
    public void test1342() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1342");
        org.antlr.v4.codegen.target.Python2Target python2Target0 = new org.antlr.v4.codegen.target.Python2Target();
        org.stringtemplate.v4.STGroup sTGroup1 = python2Target0.templates;
        java.lang.String[] strArray2 = python2Target0.targetCharValueEscape;
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target4 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator3);
        java.lang.String[] strArray5 = python2Target4.targetCharValueEscape;
        java.lang.String str8 = python2Target4.getTargetStringLiteralFromString("Python2", false);
        java.lang.String[] strArray9 = org.antlr.v4.codegen.target.Python2Target.python2Keywords;
        python2Target4.targetCharValueEscape = strArray9;
        python2Target0.targetCharValueEscape = strArray9;
        java.lang.String str12 = python2Target0.getVersion();
        boolean boolean13 = python2Target0.wantsBaseVisitor();
        python2Target0.language = "__tsetContext";
        org.antlr.v4.codegen.CodeGenerator codeGenerator16 = python2Target0.gen;
        org.junit.Assert.assertNull(sTGroup1);
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Python2" + "'", str8, "Python2");
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "4.5.2.1" + "'", str12, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(codeGenerator16);
    }

    @Test
    public void test1343() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1343");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String[] strArray2 = python2Target1.targetCharValueEscape;
        java.lang.String str5 = python2Target1.getTargetStringLiteralFromString("Python2", false);
        python2Target1.addBadWords();
        java.lang.String str8 = python2Target1.getListLabel("_tset\"Hi!Context\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator9 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target10 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator9);
        java.util.Set<java.lang.String> strSet11 = python2Target10.badWords;
        boolean boolean12 = python2Target10.wantsBaseVisitor();
        org.stringtemplate.v4.STGroup sTGroup13 = python2Target10.loadTemplates();
        python2Target1.templates = sTGroup13;
        org.stringtemplate.v4.STGroup sTGroup15 = python2Target1.loadTemplates();
        org.antlr.v4.codegen.CodeGenerator codeGenerator16 = null;
        java.lang.String str19 = python2Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator16, "", true);
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Python2" + "'", str5, "Python2");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "_tset\"Hi!Context\"" + "'", str8, "_tset\"Hi!Context\"");
        org.junit.Assert.assertNotNull(strSet11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(sTGroup13);
        org.junit.Assert.assertNotNull(sTGroup15);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "\"\"" + "'", str19, "\"\"");
    }

    @Test
    public void test1344() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1344");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str4 = python2Target1.encodeIntAsCharEscape(64);
        java.lang.String str5 = python2Target1.getLanguage();
        java.lang.String str8 = python2Target1.getTargetStringLiteralFromString("_@", false);
        org.antlr.v4.codegen.CodeGenerator codeGenerator9 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target10 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator9);
        java.util.Set<java.lang.String> strSet11 = python2Target10.badWords;
        java.lang.String str13 = python2Target10.encodeIntAsCharEscape(64);
        java.lang.String str14 = python2Target10.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator15 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target16 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator15);
        java.lang.String[] strArray17 = python2Target16.targetCharValueEscape;
        java.lang.String str18 = python2Target16.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup19 = python2Target16.getTemplates();
        python2Target10.templates = sTGroup19;
        org.stringtemplate.v4.STGroup sTGroup21 = python2Target10.templates;
        python2Target1.templates = sTGroup21;
        org.antlr.v4.tool.ast.GrammarAST grammarAST23 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str24 = python2Target1.getLoopLabel(grammarAST23);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "@" + "'", str4, "@");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Python2" + "'", str5, "Python2");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "_@" + "'", str8, "_@");
        org.junit.Assert.assertNotNull(strSet11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "@" + "'", str13, "@");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Python2" + "'", str14, "Python2");
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Python2" + "'", str18, "Python2");
        org.junit.Assert.assertNotNull(sTGroup19);
        org.junit.Assert.assertNotNull(sTGroup21);
    }

    @Test
    public void test1345() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1345");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String[] strArray2 = python2Target1.targetCharValueEscape;
        java.lang.String str3 = python2Target1.getLanguage();
        java.lang.String str6 = python2Target1.getTargetStringLiteralFromString("_tset", true);
        java.util.Set<java.lang.String> strSet7 = python2Target1.badWords;
        boolean boolean8 = python2Target1.wantsBaseVisitor();
        org.antlr.v4.codegen.CodeGenerator codeGenerator9 = null;
        python2Target1.gen = codeGenerator9;
        java.lang.String str12 = python2Target1.getImplicitRuleLabel("4.5.2.1");
        java.util.Set<java.lang.String> strSet13 = python2Target1.getBadWords();
        org.antlr.v4.tool.Grammar grammar14 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator15 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target16 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator15);
        java.util.Set<java.lang.String> strSet17 = python2Target16.badWords;
        java.lang.String str19 = python2Target16.encodeIntAsCharEscape(64);
        org.antlr.v4.tool.Grammar grammar20 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator21 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target22 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator21);
        java.util.Set<java.lang.String> strSet23 = python2Target22.badWords;
        java.lang.String str25 = python2Target22.encodeIntAsCharEscape(64);
        java.lang.String str26 = python2Target22.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator27 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target28 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator27);
        java.lang.String[] strArray29 = python2Target28.targetCharValueEscape;
        java.lang.String str30 = python2Target28.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup31 = python2Target28.getTemplates();
        python2Target22.templates = sTGroup31;
        org.stringtemplate.v4.STGroup sTGroup33 = python2Target22.templates;
        java.util.Set<java.lang.String> strSet34 = python2Target22.badWords;
        java.util.Set<java.lang.String> strSet35 = python2Target22.getBadWords();
        org.antlr.v4.tool.Grammar grammar36 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator37 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target38 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator37);
        java.util.Set<java.lang.String> strSet39 = python2Target38.badWords;
        java.lang.String str41 = python2Target38.encodeIntAsCharEscape(64);
        java.lang.String str42 = python2Target38.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator43 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target44 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator43);
        java.lang.String[] strArray45 = python2Target44.targetCharValueEscape;
        java.lang.String str46 = python2Target44.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup47 = python2Target44.getTemplates();
        python2Target38.templates = sTGroup47;
        org.stringtemplate.v4.STGroup sTGroup49 = python2Target38.templates;
        java.util.Set<java.lang.String> strSet50 = python2Target38.badWords;
        java.util.Set<java.lang.String> strSet51 = python2Target38.getBadWords();
        boolean boolean52 = python2Target38.supportsOverloadedMethods();
        java.util.Set<java.lang.String> strSet53 = python2Target38.getBadWords();
        org.antlr.v4.tool.Grammar grammar54 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator55 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target56 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator55);
        java.lang.String[] strArray57 = python2Target56.targetCharValueEscape;
        java.lang.String str60 = python2Target56.getTargetStringLiteralFromString("_tset\\1", false);
        org.antlr.v4.tool.Grammar grammar61 = null;
        int[] intArray62 = new int[] {};
        java.lang.String[] strArray63 = python2Target56.getTokenTypesAsTargetLabels(grammar61, intArray62);
        java.lang.String[] strArray64 = python2Target38.getTokenTypesAsTargetLabels(grammar54, intArray62);
        java.lang.String[] strArray65 = python2Target22.getTokenTypesAsTargetLabels(grammar36, intArray62);
        java.lang.String[] strArray66 = python2Target16.getTokenTypesAsTargetLabels(grammar20, intArray62);
        java.lang.String[] strArray67 = python2Target1.getTokenTypesAsTargetLabels(grammar14, intArray62);
        org.antlr.v4.codegen.target.Python2Target.python2Keywords = strArray67;
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Python2" + "'", str3, "Python2");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\"_tset\"" + "'", str6, "\"_tset\"");
        org.junit.Assert.assertNotNull(strSet7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "_4.5.2.1" + "'", str12, "_4.5.2.1");
        org.junit.Assert.assertNotNull(strSet13);
        org.junit.Assert.assertNotNull(strSet17);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "@" + "'", str19, "@");
        org.junit.Assert.assertNotNull(strSet23);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "@" + "'", str25, "@");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "Python2" + "'", str26, "Python2");
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "Python2" + "'", str30, "Python2");
        org.junit.Assert.assertNotNull(sTGroup31);
        org.junit.Assert.assertNotNull(sTGroup33);
        org.junit.Assert.assertNotNull(strSet34);
        org.junit.Assert.assertNotNull(strSet35);
        org.junit.Assert.assertNotNull(strSet39);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "@" + "'", str41, "@");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "Python2" + "'", str42, "Python2");
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "Python2" + "'", str46, "Python2");
        org.junit.Assert.assertNotNull(sTGroup47);
        org.junit.Assert.assertNotNull(sTGroup49);
        org.junit.Assert.assertNotNull(strSet50);
        org.junit.Assert.assertNotNull(strSet51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(strSet53);
        org.junit.Assert.assertNotNull(strArray57);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "_tset\\\\1" + "'", str60, "_tset\\\\1");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[]");
        org.junit.Assert.assertNotNull(strArray63);
        org.junit.Assert.assertNotNull(strArray64);
        org.junit.Assert.assertNotNull(strArray65);
        org.junit.Assert.assertNotNull(strArray66);
        org.junit.Assert.assertNotNull(strArray67);
    }

    @Test
    public void test1346() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1346");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String[] strArray2 = python2Target1.targetCharValueEscape;
        java.lang.String str5 = python2Target1.getTargetStringLiteralFromString("Python2", false);
        java.lang.String str6 = python2Target1.getVersion();
        java.lang.String str8 = python2Target1.encodeIntAsCharEscape((int) (short) 1);
        org.antlr.v4.codegen.CodeGenerator codeGenerator9 = null;
        java.lang.String str12 = python2Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator9, "_tsetContext", false);
        boolean boolean13 = python2Target1.templatesExist();
        java.lang.String str15 = python2Target1.getImplicitRuleLabel("\"tsetContex\"");
        java.lang.String[] strArray16 = python2Target1.targetCharValueEscape;
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Python2" + "'", str5, "Python2");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "4.5.2.1" + "'", str6, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\\1" + "'", str8, "\\1");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "tsetContex" + "'", str12, "tsetContex");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "_\"tsetContex\"" + "'", str15, "_\"tsetContex\"");
        org.junit.Assert.assertNotNull(strArray16);
    }

    @Test
    public void test1347() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1347");
        java.lang.String str1 = org.stringtemplate.v4.StringRenderer.escapeHTML("_tset_tset_tset\\\\1Context");
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "_tset_tset_tset\\\\1Context" + "'", str1, "_tset_tset_tset\\\\1Context");
    }

    @Test
    public void test1348() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1348");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String[] strArray2 = python2Target1.targetCharValueEscape;
        java.lang.String str3 = python2Target1.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup4 = python2Target1.templates;
        java.lang.String str6 = python2Target1.getListLabel("\\n");
        org.antlr.v4.tool.Grammar grammar7 = null;
        org.stringtemplate.v4.ST sT8 = null;
        python2Target1.genRecognizerHeaderFile(grammar7, sT8, "\"4.5.2.1\"");
        java.lang.String str13 = python2Target1.getTargetStringLiteralFromString("_tset\"\\\"\\\\\\\"hi!\\\\\\\"\\\"\"", false);
        org.antlr.v4.codegen.CodeGenerator codeGenerator14 = python2Target1.gen;
        python2Target1.language = "\"tsetContex\"";
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Python2" + "'", str3, "Python2");
        org.junit.Assert.assertNull(sTGroup4);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\\n" + "'", str6, "\\n");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "_tset\\\"\\\\\\\"\\\\\\\\\\\\\\\"hi!\\\\\\\\\\\\\\\"\\\\\\\"\\\"" + "'", str13, "_tset\\\"\\\\\\\"\\\\\\\\\\\\\\\"hi!\\\\\\\\\\\\\\\"\\\\\\\"\\\"");
        org.junit.Assert.assertNull(codeGenerator14);
    }

    @Test
    public void test1349() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1349");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String[] strArray2 = python2Target1.targetCharValueEscape;
        java.lang.String str5 = python2Target1.getTargetStringLiteralFromString("_tset\\1", false);
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = null;
        python2Target1.gen = codeGenerator6;
        java.util.Set<java.lang.String> strSet8 = python2Target1.getBadWords();
        java.util.Set<java.lang.String> strSet9 = python2Target1.badWords;
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "_tset\\\\1" + "'", str5, "_tset\\\\1");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertNotNull(strSet9);
    }

    @Test
    public void test1350() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1350");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String str3 = python2Target1.getImplicitSetLabel("");
        org.antlr.v4.codegen.CodeGenerator codeGenerator4 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target5 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator4);
        java.util.Set<java.lang.String> strSet6 = python2Target5.badWords;
        java.lang.String str8 = python2Target5.encodeIntAsCharEscape(64);
        java.lang.String str9 = python2Target5.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target11 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator10);
        java.lang.String[] strArray12 = python2Target11.targetCharValueEscape;
        java.lang.String str13 = python2Target11.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup14 = python2Target11.getTemplates();
        python2Target5.templates = sTGroup14;
        python2Target1.templates = sTGroup14;
        java.lang.String str18 = python2Target1.getAltLabelContextStructName("_tset");
        org.antlr.v4.codegen.CodeGenerator codeGenerator19 = null;
        python2Target1.gen = codeGenerator19;
        org.antlr.v4.codegen.CodeGenerator codeGenerator21 = null;
        python2Target1.gen = codeGenerator21;
        java.lang.String str23 = python2Target1.language;
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "_tset" + "'", str3, "_tset");
        org.junit.Assert.assertNotNull(strSet6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "@" + "'", str8, "@");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Python2" + "'", str9, "Python2");
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Python2" + "'", str13, "Python2");
        org.junit.Assert.assertNotNull(sTGroup14);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "_tsetContext" + "'", str18, "_tsetContext");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "Python2" + "'", str23, "Python2");
    }

    @Test
    public void test1351() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1351");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str4 = python2Target1.encodeIntAsCharEscape(64);
        java.lang.String str5 = python2Target1.getLanguage();
        java.lang.String str8 = python2Target1.getTargetStringLiteralFromString("_@", false);
        java.lang.String str9 = python2Target1.getLanguage();
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "@" + "'", str4, "@");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Python2" + "'", str5, "Python2");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "_@" + "'", str8, "_@");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Python2" + "'", str9, "Python2");
    }

    @Test
    public void test1352() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1352");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String[] strArray2 = python2Target1.targetCharValueEscape;
        java.lang.String str5 = python2Target1.getTargetStringLiteralFromString("Python2", false);
        java.lang.String[] strArray6 = org.antlr.v4.codegen.target.Python2Target.python2Keywords;
        python2Target1.targetCharValueEscape = strArray6;
        java.util.Set<java.lang.String> strSet8 = python2Target1.getBadWords();
        java.lang.String str10 = python2Target1.getTargetStringLiteralFromString("_\"\\\"hi!\\\"\"");
        java.lang.String[] strArray11 = python2Target1.targetCharValueEscape;
        org.antlr.v4.tool.ast.GrammarAST grammarAST12 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean13 = python2Target1.grammarSymbolCausesIssueInGeneratedCode(grammarAST12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Python2" + "'", str5, "Python2");
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\"_\"\\\"hi!\\\"\"\"" + "'", str10, "\"_\"\\\"hi!\\\"\"\"");
        org.junit.Assert.assertNotNull(strArray11);
    }

    @Test
    public void test1353() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1353");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String[] strArray2 = python2Target1.targetCharValueEscape;
        org.stringtemplate.v4.STGroup sTGroup3 = python2Target1.loadTemplates();
        org.antlr.v4.codegen.CodeGenerator codeGenerator4 = null;
        java.lang.String str7 = python2Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator4, "", false);
        boolean boolean8 = python2Target1.supportsOverloadedMethods();
        python2Target1.addBadWords();
        int int10 = python2Target1.getInlineTestSetWordSize();
        boolean boolean11 = python2Target1.wantsBaseListener();
        boolean boolean12 = python2Target1.supportsOverloadedMethods();
        org.antlr.v4.tool.Rule rule13 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str14 = python2Target1.getRuleFunctionContextStructName(rule13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertNotNull(sTGroup3);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 64 + "'", int10 == 64);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test1354() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1354");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str4 = python2Target1.encodeIntAsCharEscape(64);
        java.lang.String str5 = python2Target1.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target7 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator6);
        java.lang.String[] strArray8 = python2Target7.targetCharValueEscape;
        java.lang.String str9 = python2Target7.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup10 = python2Target7.getTemplates();
        python2Target1.templates = sTGroup10;
        org.stringtemplate.v4.STGroup sTGroup12 = python2Target1.templates;
        java.util.Set<java.lang.String> strSet13 = python2Target1.badWords;
        java.util.Set<java.lang.String> strSet14 = python2Target1.getBadWords();
        int int15 = python2Target1.getSerializedATNSegmentLimit();
        java.lang.String str17 = python2Target1.getImplicitSetLabel("\"__@\"");
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "@" + "'", str4, "@");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Python2" + "'", str5, "Python2");
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Python2" + "'", str9, "Python2");
        org.junit.Assert.assertNotNull(sTGroup10);
        org.junit.Assert.assertNotNull(sTGroup12);
        org.junit.Assert.assertNotNull(strSet13);
        org.junit.Assert.assertNotNull(strSet14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 2147483647 + "'", int15 == 2147483647);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "_tset\"__@\"" + "'", str17, "_tset\"__@\"");
    }

    @Test
    public void test1355() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1355");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String[] strArray2 = python2Target1.targetCharValueEscape;
        java.lang.String str3 = python2Target1.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup4 = python2Target1.getTemplates();
        org.antlr.v4.codegen.CodeGenerator codeGenerator5 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target6 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator5);
        java.util.Set<java.lang.String> strSet7 = python2Target6.badWords;
        python2Target1.badWords = strSet7;
        java.lang.String[] strArray14 = new java.lang.String[] { "@", "\"_tset\"", "\"hi!\"", "_tset\\1", "_tset\\\\1" };
        python2Target1.targetCharValueEscape = strArray14;
        java.lang.String str17 = python2Target1.getListLabel("");
        org.stringtemplate.v4.STGroup sTGroup18 = python2Target1.templates;
        org.antlr.v4.codegen.CodeGenerator codeGenerator19 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target20 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator19);
        java.lang.String[] strArray21 = python2Target20.targetCharValueEscape;
        java.lang.String str22 = python2Target20.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup23 = python2Target20.templates;
        java.lang.String str25 = python2Target20.getTargetStringLiteralFromString("4.5.2.1");
        org.antlr.v4.codegen.CodeGenerator codeGenerator26 = null;
        python2Target20.gen = codeGenerator26;
        org.stringtemplate.v4.STGroup sTGroup28 = python2Target20.templates;
        org.antlr.v4.codegen.target.Python2Target python2Target29 = new org.antlr.v4.codegen.target.Python2Target();
        org.stringtemplate.v4.STGroup sTGroup30 = python2Target29.templates;
        java.lang.String[] strArray31 = python2Target29.targetCharValueEscape;
        org.antlr.v4.codegen.CodeGenerator codeGenerator32 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target33 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator32);
        java.lang.String[] strArray34 = python2Target33.targetCharValueEscape;
        java.lang.String str37 = python2Target33.getTargetStringLiteralFromString("Python2", false);
        java.lang.String[] strArray38 = org.antlr.v4.codegen.target.Python2Target.python2Keywords;
        python2Target33.targetCharValueEscape = strArray38;
        python2Target29.targetCharValueEscape = strArray38;
        python2Target20.targetCharValueEscape = strArray38;
        org.antlr.v4.codegen.target.Python2Target.python2Keywords = strArray38;
        python2Target1.targetCharValueEscape = strArray38;
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Python2" + "'", str3, "Python2");
        org.junit.Assert.assertNotNull(sTGroup4);
        org.junit.Assert.assertNotNull(strSet7);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertNotNull(sTGroup18);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "Python2" + "'", str22, "Python2");
        org.junit.Assert.assertNull(sTGroup23);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "\"4.5.2.1\"" + "'", str25, "\"4.5.2.1\"");
        org.junit.Assert.assertNull(sTGroup28);
        org.junit.Assert.assertNull(sTGroup30);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "Python2" + "'", str37, "Python2");
        org.junit.Assert.assertNotNull(strArray38);
    }

    @Test
    public void test1356() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1356");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str4 = python2Target1.encodeIntAsCharEscape(64);
        java.lang.String str5 = python2Target1.getLanguage();
        java.lang.String str8 = python2Target1.getTargetStringLiteralFromString("_@", false);
        java.lang.String str10 = python2Target1.encodeIntAsCharEscape((int) (byte) 100);
        java.lang.String str12 = python2Target1.getAltLabelContextStructName("\"_tset\"");
        boolean boolean13 = python2Target1.supportsOverloadedMethods();
        java.lang.String str15 = python2Target1.getImplicitRuleLabel("\"Python2\"");
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "@" + "'", str4, "@");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Python2" + "'", str5, "Python2");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "_@" + "'", str8, "_@");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "d" + "'", str10, "d");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "\"_tset\"Context" + "'", str12, "\"_tset\"Context");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "_\"Python2\"" + "'", str15, "_\"Python2\"");
    }

    @Test
    public void test1357() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1357");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str4 = python2Target1.encodeIntAsCharEscape(64);
        java.lang.String str5 = python2Target1.getLanguage();
        java.lang.String str8 = python2Target1.getTargetStringLiteralFromString("_@", false);
        java.lang.String str10 = python2Target1.encodeIntAsCharEscape((int) (byte) 100);
        org.antlr.v4.codegen.CodeGenerator codeGenerator11 = null;
        python2Target1.gen = codeGenerator11;
        org.antlr.v4.tool.Rule rule13 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str14 = python2Target1.getRuleFunctionContextStructName(rule13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "@" + "'", str4, "@");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Python2" + "'", str5, "Python2");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "_@" + "'", str8, "_@");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "d" + "'", str10, "d");
    }

    @Test
    public void test1358() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1358");
        java.lang.String str1 = org.stringtemplate.v4.StringRenderer.escapeHTML("_tset_tset\\\\1Context");
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "_tset_tset\\\\1Context" + "'", str1, "_tset_tset\\\\1Context");
    }

    @Test
    public void test1359() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1359");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String[] strArray2 = python2Target1.targetCharValueEscape;
        org.stringtemplate.v4.STGroup sTGroup3 = python2Target1.loadTemplates();
        org.antlr.v4.codegen.CodeGenerator codeGenerator4 = null;
        java.lang.String str7 = python2Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator4, "", false);
        boolean boolean8 = python2Target1.supportsOverloadedMethods();
        python2Target1.addBadWords();
        int int10 = python2Target1.getInlineTestSetWordSize();
        org.antlr.v4.codegen.CodeGenerator codeGenerator11 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target12 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator11);
        java.lang.String[] strArray13 = python2Target12.targetCharValueEscape;
        java.lang.String str14 = python2Target12.getLanguage();
        java.lang.String str17 = python2Target12.getTargetStringLiteralFromString("_tset", true);
        java.lang.String str19 = python2Target12.getTargetStringLiteralFromString("\"4.5.2.1\"");
        java.lang.String[] strArray20 = python2Target12.targetCharValueEscape;
        org.antlr.v4.codegen.target.Python2Target.python2Keywords = strArray20;
        org.antlr.v4.codegen.target.Python2Target.python2Keywords = strArray20;
        python2Target1.targetCharValueEscape = strArray20;
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertNotNull(sTGroup3);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 64 + "'", int10 == 64);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Python2" + "'", str14, "Python2");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "\"_tset\"" + "'", str17, "\"_tset\"");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "\"\\\"4.5.2.1\\\"\"" + "'", str19, "\"\\\"4.5.2.1\\\"\"");
        org.junit.Assert.assertNotNull(strArray20);
    }

    @Test
    public void test1360() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1360");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String[] strArray2 = python2Target1.targetCharValueEscape;
        java.lang.String str5 = python2Target1.getTargetStringLiteralFromString("Python2", false);
        java.lang.String str6 = python2Target1.getVersion();
        java.lang.String str8 = python2Target1.encodeIntAsCharEscape((int) (short) 1);
        org.antlr.v4.codegen.CodeGenerator codeGenerator9 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target10 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator9);
        java.util.Set<java.lang.String> strSet11 = python2Target10.badWords;
        java.lang.String str13 = python2Target10.encodeIntAsCharEscape(64);
        java.lang.String str14 = python2Target10.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator15 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target16 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator15);
        java.lang.String[] strArray17 = python2Target16.targetCharValueEscape;
        java.lang.String str18 = python2Target16.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup19 = python2Target16.getTemplates();
        python2Target10.templates = sTGroup19;
        java.util.Set<java.lang.String> strSet21 = python2Target10.getBadWords();
        python2Target1.badWords = strSet21;
        java.lang.String str24 = python2Target1.getAltLabelContextStructName("hi!");
        int int25 = python2Target1.getInlineTestSetWordSize();
        python2Target1.addBadWords();
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Python2" + "'", str5, "Python2");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "4.5.2.1" + "'", str6, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\\1" + "'", str8, "\\1");
        org.junit.Assert.assertNotNull(strSet11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "@" + "'", str13, "@");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Python2" + "'", str14, "Python2");
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Python2" + "'", str18, "Python2");
        org.junit.Assert.assertNotNull(sTGroup19);
        org.junit.Assert.assertNotNull(strSet21);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "Hi!Context" + "'", str24, "Hi!Context");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 64 + "'", int25 == 64);
    }

    @Test
    public void test1361() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1361");
        org.antlr.v4.codegen.target.Python2Target python2Target0 = new org.antlr.v4.codegen.target.Python2Target();
        org.antlr.v4.codegen.CodeGenerator codeGenerator1 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target2 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator1);
        java.util.Set<java.lang.String> strSet3 = python2Target2.badWords;
        java.lang.String str5 = python2Target2.encodeIntAsCharEscape(64);
        java.lang.String str6 = python2Target2.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target8 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator7);
        java.lang.String[] strArray9 = python2Target8.targetCharValueEscape;
        java.lang.String str10 = python2Target8.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup11 = python2Target8.getTemplates();
        python2Target2.templates = sTGroup11;
        org.stringtemplate.v4.STGroup sTGroup13 = python2Target2.templates;
        java.util.Set<java.lang.String> strSet14 = python2Target2.badWords;
        java.util.Set<java.lang.String> strSet15 = python2Target2.getBadWords();
        boolean boolean16 = python2Target2.supportsOverloadedMethods();
        java.util.Set<java.lang.String> strSet17 = python2Target2.getBadWords();
        org.stringtemplate.v4.STGroup sTGroup18 = python2Target2.getTemplates();
        python2Target0.templates = sTGroup18;
        org.antlr.v4.codegen.CodeGenerator codeGenerator20 = python2Target0.gen;
        org.antlr.v4.tool.Grammar grammar21 = null;
        org.stringtemplate.v4.ST sT22 = null;
        python2Target0.genRecognizerHeaderFile(grammar21, sT22, "\"d\"");
        boolean boolean25 = python2Target0.templatesExist();
        python2Target0.language = "\"Hi!Context\\\"Contex\"";
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "@" + "'", str5, "@");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Python2" + "'", str6, "Python2");
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Python2" + "'", str10, "Python2");
        org.junit.Assert.assertNotNull(sTGroup11);
        org.junit.Assert.assertNotNull(sTGroup13);
        org.junit.Assert.assertNotNull(strSet14);
        org.junit.Assert.assertNotNull(strSet15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(strSet17);
        org.junit.Assert.assertNotNull(sTGroup18);
        org.junit.Assert.assertNull(codeGenerator20);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
    }

    @Test
    public void test1362() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1362");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str5 = python2Target1.getTargetStringLiteralFromString("hi!", false);
        java.lang.String str7 = python2Target1.getImplicitRuleLabel("@");
        python2Target1.language = "hi!";
        java.util.Set<java.lang.String> strSet10 = python2Target1.getBadWords();
        org.stringtemplate.v4.STGroup sTGroup11 = python2Target1.templates;
        java.lang.Class<?> wildcardClass12 = sTGroup11.getClass();
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "_@" + "'", str7, "_@");
        org.junit.Assert.assertNotNull(strSet10);
        org.junit.Assert.assertNotNull(sTGroup11);
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test1363() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1363");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String[] strArray2 = python2Target1.targetCharValueEscape;
        java.lang.String str3 = python2Target1.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup4 = python2Target1.loadTemplates();
        org.antlr.v4.codegen.CodeGenerator codeGenerator5 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target6 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator5);
        java.lang.String[] strArray7 = python2Target6.targetCharValueEscape;
        java.lang.String str8 = python2Target6.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup9 = python2Target6.getTemplates();
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target11 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator10);
        java.util.Set<java.lang.String> strSet12 = python2Target11.badWords;
        python2Target6.badWords = strSet12;
        java.lang.String[] strArray19 = new java.lang.String[] { "@", "\"_tset\"", "\"hi!\"", "_tset\\1", "_tset\\\\1" };
        python2Target6.targetCharValueEscape = strArray19;
        python2Target1.targetCharValueEscape = strArray19;
        java.lang.String str23 = python2Target1.encodeIntAsCharEscape(1);
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Python2" + "'", str3, "Python2");
        org.junit.Assert.assertNotNull(sTGroup4);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Python2" + "'", str8, "Python2");
        org.junit.Assert.assertNotNull(sTGroup9);
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "\"_tset\"" + "'", str23, "\"_tset\"");
    }

    @Test
    public void test1364() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1364");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str4 = python2Target1.encodeIntAsCharEscape(64);
        java.lang.String str5 = python2Target1.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target7 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator6);
        java.lang.String[] strArray8 = python2Target7.targetCharValueEscape;
        java.lang.String str9 = python2Target7.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup10 = python2Target7.getTemplates();
        python2Target1.templates = sTGroup10;
        org.antlr.v4.tool.Grammar grammar12 = null;
        org.stringtemplate.v4.ST sT13 = null;
        python2Target1.genRecognizerHeaderFile(grammar12, sT13, "\"_tset\"");
        boolean boolean16 = python2Target1.wantsBaseVisitor();
        org.antlr.v4.codegen.CodeGenerator codeGenerator17 = python2Target1.getCodeGenerator();
        org.antlr.v4.codegen.CodeGenerator codeGenerator18 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target19 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator18);
        java.util.Set<java.lang.String> strSet20 = python2Target19.badWords;
        java.lang.String str22 = python2Target19.encodeIntAsCharEscape(64);
        java.lang.String str23 = python2Target19.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator24 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target25 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator24);
        java.lang.String[] strArray26 = python2Target25.targetCharValueEscape;
        java.lang.String str27 = python2Target25.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup28 = python2Target25.getTemplates();
        python2Target19.templates = sTGroup28;
        org.stringtemplate.v4.STGroup sTGroup30 = python2Target19.templates;
        java.util.Set<java.lang.String> strSet31 = python2Target19.badWords;
        java.util.Set<java.lang.String> strSet32 = python2Target19.getBadWords();
        java.lang.String str34 = python2Target19.getImplicitSetLabel("\"\\\"\\\\\\\"hi!\\\\\\\"\\\"\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator35 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target36 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator35);
        java.lang.String[] strArray37 = python2Target36.targetCharValueEscape;
        java.lang.String str38 = python2Target36.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup39 = python2Target36.getTemplates();
        org.antlr.v4.codegen.CodeGenerator codeGenerator40 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target41 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator40);
        java.util.Set<java.lang.String> strSet42 = python2Target41.badWords;
        python2Target36.badWords = strSet42;
        java.lang.String[] strArray49 = new java.lang.String[] { "@", "\"_tset\"", "\"hi!\"", "_tset\\1", "_tset\\\\1" };
        python2Target36.targetCharValueEscape = strArray49;
        org.antlr.v4.codegen.target.Python2Target.python2Keywords = strArray49;
        python2Target19.targetCharValueEscape = strArray49;
        python2Target1.targetCharValueEscape = strArray49;
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "@" + "'", str4, "@");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Python2" + "'", str5, "Python2");
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Python2" + "'", str9, "Python2");
        org.junit.Assert.assertNotNull(sTGroup10);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(codeGenerator17);
        org.junit.Assert.assertNotNull(strSet20);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "@" + "'", str22, "@");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "Python2" + "'", str23, "Python2");
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "Python2" + "'", str27, "Python2");
        org.junit.Assert.assertNotNull(sTGroup28);
        org.junit.Assert.assertNotNull(sTGroup30);
        org.junit.Assert.assertNotNull(strSet31);
        org.junit.Assert.assertNotNull(strSet32);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "_tset\"\\\"\\\\\\\"hi!\\\\\\\"\\\"\"" + "'", str34, "_tset\"\\\"\\\\\\\"hi!\\\\\\\"\\\"\"");
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "Python2" + "'", str38, "Python2");
        org.junit.Assert.assertNotNull(sTGroup39);
        org.junit.Assert.assertNotNull(strSet42);
        org.junit.Assert.assertNotNull(strArray49);
    }

    @Test
    public void test1365() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1365");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        boolean boolean3 = python2Target1.wantsBaseVisitor();
        python2Target1.language = "\"\"";
        java.lang.String str7 = python2Target1.getTargetStringLiteralFromString("__tset");
        java.lang.String str8 = python2Target1.getLanguage();
        python2Target1.addBadWords();
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "\"__tset\"" + "'", str7, "\"__tset\"");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\"\"" + "'", str8, "\"\"");
    }

    @Test
    public void test1366() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1366");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str4 = python2Target1.encodeIntAsCharEscape(64);
        org.stringtemplate.v4.STGroup sTGroup5 = python2Target1.loadTemplates();
        int int6 = python2Target1.getSerializedATNSegmentLimit();
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target8 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator7);
        java.util.Set<java.lang.String> strSet9 = python2Target8.badWords;
        java.lang.String str11 = python2Target8.encodeIntAsCharEscape(64);
        java.lang.String str12 = python2Target8.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator13 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target14 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator13);
        java.lang.String[] strArray15 = python2Target14.targetCharValueEscape;
        java.lang.String str16 = python2Target14.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup17 = python2Target14.getTemplates();
        python2Target8.templates = sTGroup17;
        org.stringtemplate.v4.STGroup sTGroup19 = python2Target8.templates;
        java.util.Set<java.lang.String> strSet20 = python2Target8.badWords;
        java.util.Set<java.lang.String> strSet21 = python2Target8.getBadWords();
        boolean boolean22 = python2Target8.supportsOverloadedMethods();
        java.util.Set<java.lang.String> strSet23 = python2Target8.getBadWords();
        org.stringtemplate.v4.STGroup sTGroup24 = python2Target8.getTemplates();
        python2Target1.templates = sTGroup24;
        boolean boolean26 = python2Target1.templatesExist();
        int int27 = python2Target1.getInlineTestSetWordSize();
        java.lang.String str29 = python2Target1.getListLabel("_tset_\"#\"");
        boolean boolean30 = python2Target1.wantsBaseListener();
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "@" + "'", str4, "@");
        org.junit.Assert.assertNotNull(sTGroup5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2147483647 + "'", int6 == 2147483647);
        org.junit.Assert.assertNotNull(strSet9);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "@" + "'", str11, "@");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Python2" + "'", str12, "Python2");
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Python2" + "'", str16, "Python2");
        org.junit.Assert.assertNotNull(sTGroup17);
        org.junit.Assert.assertNotNull(sTGroup19);
        org.junit.Assert.assertNotNull(strSet20);
        org.junit.Assert.assertNotNull(strSet21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(strSet23);
        org.junit.Assert.assertNotNull(sTGroup24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 64 + "'", int27 == 64);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "_tset_\"#\"" + "'", str29, "_tset_\"#\"");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
    }

    @Test
    public void test1367() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1367");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str5 = python2Target1.getTargetStringLiteralFromString("hi!", false);
        int int6 = python2Target1.getInlineTestSetWordSize();
        java.lang.String str8 = python2Target1.getTargetStringLiteralFromString("Hi!Context");
        java.lang.String str10 = python2Target1.getImplicitRuleLabel("_tset_\"#\"Context");
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 64 + "'", int6 == 64);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\"Hi!Context\"" + "'", str8, "\"Hi!Context\"");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "__tset_\"#\"Context" + "'", str10, "__tset_\"#\"Context");
    }

    @Test
    public void test1368() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1368");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str4 = python2Target1.encodeIntAsCharEscape(64);
        java.lang.String str5 = python2Target1.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target7 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator6);
        java.lang.String[] strArray8 = python2Target7.targetCharValueEscape;
        java.lang.String str9 = python2Target7.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup10 = python2Target7.getTemplates();
        python2Target1.templates = sTGroup10;
        java.util.Set<java.lang.String> strSet12 = python2Target1.getBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator13 = python2Target1.getCodeGenerator();
        boolean boolean14 = python2Target1.supportsOverloadedMethods();
        java.lang.String str15 = python2Target1.getVersion();
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "@" + "'", str4, "@");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Python2" + "'", str5, "Python2");
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Python2" + "'", str9, "Python2");
        org.junit.Assert.assertNotNull(sTGroup10);
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertNull(codeGenerator13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "4.5.2.1" + "'", str15, "4.5.2.1");
    }

    @Test
    public void test1369() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1369");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        org.stringtemplate.v4.STGroup sTGroup2 = python2Target1.templates;
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = null;
        java.lang.String str6 = python2Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator3, "\"_tset\"", false);
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = python2Target1.gen;
        boolean boolean8 = python2Target1.wantsBaseVisitor();
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "_tset" + "'", str6, "_tset");
        org.junit.Assert.assertNull(codeGenerator7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test1370() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1370");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str5 = python2Target1.getTargetStringLiteralFromString("hi!", false);
        java.lang.String str7 = python2Target1.getImplicitRuleLabel("@");
        python2Target1.language = "hi!";
        boolean boolean10 = python2Target1.supportsOverloadedMethods();
        java.lang.String str12 = python2Target1.getTargetStringLiteralFromString("");
        java.lang.String str14 = python2Target1.getImplicitSetLabel("\\1");
        org.antlr.v4.tool.Grammar grammar15 = null;
        org.stringtemplate.v4.ST sT16 = null;
        // The following exception was thrown during execution in test generation
        try {
            python2Target1.genListenerFile(grammar15, sT16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "_@" + "'", str7, "_@");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "\"\"" + "'", str12, "\"\"");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "_tset\\1" + "'", str14, "_tset\\1");
    }

    @Test
    public void test1371() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1371");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str4 = python2Target1.encodeIntAsCharEscape(64);
        java.lang.String str5 = python2Target1.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target7 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator6);
        java.lang.String[] strArray8 = python2Target7.targetCharValueEscape;
        java.lang.String str9 = python2Target7.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup10 = python2Target7.getTemplates();
        python2Target1.templates = sTGroup10;
        org.stringtemplate.v4.STGroup sTGroup12 = python2Target1.templates;
        java.util.Set<java.lang.String> strSet13 = python2Target1.badWords;
        boolean boolean14 = python2Target1.supportsOverloadedMethods();
        java.lang.String str16 = python2Target1.getImplicitSetLabel("\"Hi!Context\"");
        java.lang.String str17 = python2Target1.language;
        java.lang.String[] strArray18 = python2Target1.targetCharValueEscape;
        int int19 = python2Target1.getInlineTestSetWordSize();
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "@" + "'", str4, "@");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Python2" + "'", str5, "Python2");
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Python2" + "'", str9, "Python2");
        org.junit.Assert.assertNotNull(sTGroup10);
        org.junit.Assert.assertNotNull(sTGroup12);
        org.junit.Assert.assertNotNull(strSet13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "_tset\"Hi!Context\"" + "'", str16, "_tset\"Hi!Context\"");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Python2" + "'", str17, "Python2");
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 64 + "'", int19 == 64);
    }

    @Test
    public void test1372() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1372");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str5 = python2Target1.getTargetStringLiteralFromString("hi!", false);
        int int6 = python2Target1.getInlineTestSetWordSize();
        boolean boolean7 = python2Target1.wantsBaseVisitor();
        java.lang.String str8 = python2Target1.getLanguage();
        python2Target1.addBadWords();
        java.util.Set<java.lang.String> strSet10 = python2Target1.badWords;
        org.stringtemplate.v4.STGroup sTGroup11 = python2Target1.templates;
        org.antlr.v4.codegen.CodeGenerator codeGenerator12 = null;
        java.lang.String str15 = python2Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator12, "\"Hi!Context\"ContextContext", false);
        python2Target1.addBadWords();
        python2Target1.addBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator18 = null;
        python2Target1.gen = codeGenerator18;
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 64 + "'", int6 == 64);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Python2" + "'", str8, "Python2");
        org.junit.Assert.assertNotNull(strSet10);
        org.junit.Assert.assertNull(sTGroup11);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Hi!Context\\\"ContextContex" + "'", str15, "Hi!Context\\\"ContextContex");
    }

    @Test
    public void test1373() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1373");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String[] strArray2 = python2Target1.targetCharValueEscape;
        java.lang.String str3 = python2Target1.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup4 = python2Target1.getTemplates();
        org.antlr.v4.codegen.CodeGenerator codeGenerator5 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target6 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator5);
        java.util.Set<java.lang.String> strSet7 = python2Target6.badWords;
        python2Target1.badWords = strSet7;
        java.lang.String[] strArray14 = new java.lang.String[] { "@", "\"_tset\"", "\"hi!\"", "_tset\\1", "_tset\\\\1" };
        python2Target1.targetCharValueEscape = strArray14;
        java.lang.String str17 = python2Target1.getListLabel("");
        org.stringtemplate.v4.STGroup sTGroup18 = python2Target1.templates;
        java.lang.String str20 = python2Target1.getImplicitRuleLabel("__tset_tset\"\\\"\\\\\\\"hi!\\\\\\\"\\\"\"Context");
        java.lang.Class<?> wildcardClass21 = python2Target1.getClass();
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Python2" + "'", str3, "Python2");
        org.junit.Assert.assertNotNull(sTGroup4);
        org.junit.Assert.assertNotNull(strSet7);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertNotNull(sTGroup18);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "___tset_tset\"\\\"\\\\\\\"hi!\\\\\\\"\\\"\"Context" + "'", str20, "___tset_tset\"\\\"\\\\\\\"hi!\\\\\\\"\\\"\"Context");
        org.junit.Assert.assertNotNull(wildcardClass21);
    }

    @Test
    public void test1374() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1374");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str4 = python2Target1.encodeIntAsCharEscape(64);
        java.lang.String str5 = python2Target1.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target7 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator6);
        java.lang.String[] strArray8 = python2Target7.targetCharValueEscape;
        java.lang.String str9 = python2Target7.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup10 = python2Target7.getTemplates();
        python2Target1.templates = sTGroup10;
        org.antlr.v4.codegen.CodeGenerator codeGenerator12 = python2Target1.getCodeGenerator();
        org.stringtemplate.v4.STGroup sTGroup13 = python2Target1.loadTemplates();
        org.antlr.v4.codegen.CodeGenerator codeGenerator14 = null;
        python2Target1.gen = codeGenerator14;
        java.lang.String str17 = python2Target1.encodeIntAsCharEscape((int) (short) 0);
        java.lang.String str19 = python2Target1.getTargetStringLiteralFromString("_tset_tset\"\\\"\\\\\\\"hi!\\\\\\\"\\\"\"");
        boolean boolean20 = python2Target1.wantsBaseVisitor();
        java.lang.String str21 = python2Target1.getLanguage();
        boolean boolean22 = python2Target1.wantsBaseVisitor();
        org.antlr.v4.tool.Grammar grammar23 = null;
        org.stringtemplate.v4.ST sT24 = null;
        // The following exception was thrown during execution in test generation
        try {
            python2Target1.genListenerFile(grammar23, sT24);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "@" + "'", str4, "@");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Python2" + "'", str5, "Python2");
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Python2" + "'", str9, "Python2");
        org.junit.Assert.assertNotNull(sTGroup10);
        org.junit.Assert.assertNull(codeGenerator12);
        org.junit.Assert.assertNotNull(sTGroup13);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "\\0" + "'", str17, "\\0");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "\"_tset_tset\\\"\\\\\\\"\\\\\\\\\\\\\\\"hi!\\\\\\\\\\\\\\\"\\\\\\\"\\\"\"" + "'", str19, "\"_tset_tset\\\"\\\\\\\"\\\\\\\\\\\\\\\"hi!\\\\\\\\\\\\\\\"\\\\\\\"\\\"\"");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Python2" + "'", str21, "Python2");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
    }

    @Test
    public void test1375() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1375");
        org.antlr.v4.codegen.target.Python2Target python2Target0 = new org.antlr.v4.codegen.target.Python2Target();
        java.lang.String str2 = python2Target0.getTargetStringLiteralFromString("hi!");
        org.stringtemplate.v4.STGroup sTGroup3 = python2Target0.templates;
        org.antlr.v4.codegen.model.RuleFunction ruleFunction4 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str5 = python2Target0.getRuleFunctionContextStructName(ruleFunction4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "\"hi!\"" + "'", str2, "\"hi!\"");
        org.junit.Assert.assertNull(sTGroup3);
    }

    @Test
    public void test1376() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1376");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str4 = python2Target1.encodeIntAsCharEscape(64);
        java.lang.String str5 = python2Target1.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target7 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator6);
        java.lang.String[] strArray8 = python2Target7.targetCharValueEscape;
        java.lang.String str9 = python2Target7.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup10 = python2Target7.getTemplates();
        python2Target1.templates = sTGroup10;
        java.util.Set<java.lang.String> strSet12 = python2Target1.getBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator13 = python2Target1.getCodeGenerator();
        java.util.Set<java.lang.String> strSet14 = python2Target1.getBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator15 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target16 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator15);
        java.util.Set<java.lang.String> strSet17 = python2Target16.badWords;
        java.lang.String str19 = python2Target16.encodeIntAsCharEscape(64);
        java.lang.String str20 = python2Target16.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator21 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target22 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator21);
        java.lang.String[] strArray23 = python2Target22.targetCharValueEscape;
        java.lang.String str24 = python2Target22.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup25 = python2Target22.getTemplates();
        python2Target16.templates = sTGroup25;
        org.antlr.v4.codegen.CodeGenerator codeGenerator27 = python2Target16.getCodeGenerator();
        org.stringtemplate.v4.STGroup sTGroup28 = python2Target16.loadTemplates();
        python2Target1.templates = sTGroup28;
        org.antlr.v4.codegen.CodeGenerator codeGenerator30 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target31 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator30);
        java.util.Set<java.lang.String> strSet32 = python2Target31.badWords;
        java.lang.String str35 = python2Target31.getTargetStringLiteralFromString("hi!", false);
        java.lang.String str37 = python2Target31.getTargetStringLiteralFromString("\"hi!\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator38 = null;
        python2Target31.gen = codeGenerator38;
        java.lang.String[] strArray40 = null;
        python2Target31.targetCharValueEscape = strArray40;
        org.stringtemplate.v4.STGroup sTGroup42 = python2Target31.getTemplates();
        python2Target1.templates = sTGroup42;
        java.util.Set<java.lang.String> strSet44 = python2Target1.badWords;
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "@" + "'", str4, "@");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Python2" + "'", str5, "Python2");
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Python2" + "'", str9, "Python2");
        org.junit.Assert.assertNotNull(sTGroup10);
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertNull(codeGenerator13);
        org.junit.Assert.assertNotNull(strSet14);
        org.junit.Assert.assertNotNull(strSet17);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "@" + "'", str19, "@");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "Python2" + "'", str20, "Python2");
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "Python2" + "'", str24, "Python2");
        org.junit.Assert.assertNotNull(sTGroup25);
        org.junit.Assert.assertNull(codeGenerator27);
        org.junit.Assert.assertNotNull(sTGroup28);
        org.junit.Assert.assertNotNull(strSet32);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!" + "'", str35, "hi!");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "\"\\\"hi!\\\"\"" + "'", str37, "\"\\\"hi!\\\"\"");
        org.junit.Assert.assertNotNull(sTGroup42);
        org.junit.Assert.assertNotNull(strSet44);
    }

    @Test
    public void test1377() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1377");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String[] strArray2 = python2Target1.targetCharValueEscape;
        java.lang.String str3 = python2Target1.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup4 = python2Target1.loadTemplates();
        int int5 = python2Target1.getInlineTestSetWordSize();
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = python2Target1.gen;
        java.lang.String str8 = python2Target1.getTargetStringLiteralFromString("\"d\"");
        java.lang.String[] strArray9 = python2Target1.targetCharValueEscape;
        java.lang.String[] strArray10 = python2Target1.targetCharValueEscape;
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Python2" + "'", str3, "Python2");
        org.junit.Assert.assertNotNull(sTGroup4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 64 + "'", int5 == 64);
        org.junit.Assert.assertNull(codeGenerator6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\"\\\"d\\\"\"" + "'", str8, "\"\\\"d\\\"\"");
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertNotNull(strArray10);
    }

    @Test
    public void test1378() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1378");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str4 = python2Target1.encodeIntAsCharEscape(64);
        java.lang.String str5 = python2Target1.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target7 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator6);
        java.lang.String[] strArray8 = python2Target7.targetCharValueEscape;
        java.lang.String str9 = python2Target7.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup10 = python2Target7.getTemplates();
        python2Target1.templates = sTGroup10;
        java.util.Set<java.lang.String> strSet12 = python2Target1.getBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator13 = python2Target1.getCodeGenerator();
        java.util.Set<java.lang.String> strSet14 = python2Target1.getBadWords();
        boolean boolean15 = python2Target1.wantsBaseListener();
        org.stringtemplate.v4.STGroup sTGroup16 = python2Target1.loadTemplates();
        boolean boolean17 = python2Target1.templatesExist();
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "@" + "'", str4, "@");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Python2" + "'", str5, "Python2");
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Python2" + "'", str9, "Python2");
        org.junit.Assert.assertNotNull(sTGroup10);
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertNull(codeGenerator13);
        org.junit.Assert.assertNotNull(strSet14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(sTGroup16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
    }

    @Test
    public void test1379() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1379");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String[] strArray2 = python2Target1.targetCharValueEscape;
        java.lang.String str3 = python2Target1.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup4 = python2Target1.getTemplates();
        org.antlr.v4.codegen.CodeGenerator codeGenerator5 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target6 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator5);
        java.util.Set<java.lang.String> strSet7 = python2Target6.badWords;
        python2Target1.badWords = strSet7;
        java.lang.String[] strArray14 = new java.lang.String[] { "@", "\"_tset\"", "\"hi!\"", "_tset\\1", "_tset\\\\1" };
        python2Target1.targetCharValueEscape = strArray14;
        java.lang.String str17 = python2Target1.getAltLabelContextStructName("\"\\\\64\"");
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Python2" + "'", str3, "Python2");
        org.junit.Assert.assertNotNull(sTGroup4);
        org.junit.Assert.assertNotNull(strSet7);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "\"\\\\64\"Context" + "'", str17, "\"\\\\64\"Context");
    }

    @Test
    public void test1380() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1380");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String[] strArray2 = python2Target1.targetCharValueEscape;
        java.lang.String str5 = python2Target1.getTargetStringLiteralFromString("_tset\\1", false);
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = null;
        python2Target1.gen = codeGenerator6;
        java.util.Set<java.lang.String> strSet8 = python2Target1.getBadWords();
        java.lang.String str10 = python2Target1.getImplicitRuleLabel("@");
        java.lang.String str13 = python2Target1.getTargetStringLiteralFromString("\"_tset_tset\\\"\\\"\\\\\\\"hi!\\\\\\\"\\\"\"", true);
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "_tset\\\\1" + "'", str5, "_tset\\\\1");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "_@" + "'", str10, "_@");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "\"\\\"_tset_tset\\\\\\\"\\\\\\\"\\\\\\\\\\\\\\\"hi!\\\\\\\\\\\\\\\"\\\\\\\"\\\"\"" + "'", str13, "\"\\\"_tset_tset\\\\\\\"\\\\\\\"\\\\\\\\\\\\\\\"hi!\\\\\\\\\\\\\\\"\\\\\\\"\\\"\"");
    }

    @Test
    public void test1381() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1381");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String[] strArray2 = python2Target1.targetCharValueEscape;
        java.lang.String str5 = python2Target1.getTargetStringLiteralFromString("Python2", false);
        java.lang.String str6 = python2Target1.getVersion();
        java.lang.String str8 = python2Target1.encodeIntAsCharEscape((int) (short) 1);
        int int9 = python2Target1.getSerializedATNSegmentLimit();
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target11 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator10);
        java.lang.String[] strArray12 = python2Target11.targetCharValueEscape;
        java.lang.String str13 = python2Target11.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup14 = python2Target11.templates;
        java.lang.String str16 = python2Target11.getListLabel("\\n");
        java.lang.String[] strArray17 = python2Target11.targetCharValueEscape;
        python2Target1.targetCharValueEscape = strArray17;
        org.antlr.v4.codegen.target.Python2Target.python2Keywords = strArray17;
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Python2" + "'", str5, "Python2");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "4.5.2.1" + "'", str6, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\\1" + "'", str8, "\\1");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 2147483647 + "'", int9 == 2147483647);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Python2" + "'", str13, "Python2");
        org.junit.Assert.assertNull(sTGroup14);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "\\n" + "'", str16, "\\n");
        org.junit.Assert.assertNotNull(strArray17);
    }

    @Test
    public void test1382() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1382");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str4 = python2Target1.encodeIntAsCharEscape(64);
        java.lang.String str5 = python2Target1.getLanguage();
        java.lang.String str8 = python2Target1.getTargetStringLiteralFromString("_@", false);
        org.antlr.v4.codegen.CodeGenerator codeGenerator9 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target10 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator9);
        java.lang.String str12 = python2Target10.getImplicitSetLabel("");
        java.lang.String[] strArray13 = python2Target10.targetCharValueEscape;
        python2Target1.targetCharValueEscape = strArray13;
        java.lang.String str16 = python2Target1.getImplicitSetLabel("_tset\\\\1");
        org.antlr.v4.codegen.CodeGenerator codeGenerator17 = null;
        python2Target1.gen = codeGenerator17;
        java.util.Set<java.lang.String> strSet19 = python2Target1.getBadWords();
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "@" + "'", str4, "@");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Python2" + "'", str5, "Python2");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "_@" + "'", str8, "_@");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "_tset" + "'", str12, "_tset");
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "_tset_tset\\\\1" + "'", str16, "_tset_tset\\\\1");
        org.junit.Assert.assertNotNull(strSet19);
    }

    @Test
    public void test1383() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1383");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str4 = python2Target1.encodeIntAsCharEscape(64);
        java.lang.String str5 = python2Target1.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target7 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator6);
        java.lang.String[] strArray8 = python2Target7.targetCharValueEscape;
        java.lang.String str9 = python2Target7.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup10 = python2Target7.getTemplates();
        python2Target1.templates = sTGroup10;
        org.antlr.v4.codegen.CodeGenerator codeGenerator12 = python2Target1.getCodeGenerator();
        org.stringtemplate.v4.STGroup sTGroup13 = python2Target1.loadTemplates();
        org.antlr.v4.codegen.CodeGenerator codeGenerator14 = null;
        python2Target1.gen = codeGenerator14;
        java.lang.String str17 = python2Target1.getAltLabelContextStructName("\"hi!\"");
        org.antlr.v4.tool.Grammar grammar18 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator19 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target20 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator19);
        java.lang.String[] strArray21 = python2Target20.targetCharValueEscape;
        java.lang.String str22 = python2Target20.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup23 = python2Target20.templates;
        java.lang.String str25 = python2Target20.getListLabel("\\n");
        java.lang.String[] strArray26 = python2Target20.targetCharValueEscape;
        org.antlr.v4.tool.Grammar grammar27 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator28 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target29 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator28);
        java.lang.String[] strArray30 = python2Target29.targetCharValueEscape;
        java.lang.String str33 = python2Target29.getTargetStringLiteralFromString("_tset\\1", false);
        org.antlr.v4.tool.Grammar grammar34 = null;
        int[] intArray35 = new int[] {};
        java.lang.String[] strArray36 = python2Target29.getTokenTypesAsTargetLabels(grammar34, intArray35);
        java.lang.String[] strArray37 = python2Target20.getTokenTypesAsTargetLabels(grammar27, intArray35);
        java.lang.String[] strArray38 = python2Target1.getTokenTypesAsTargetLabels(grammar18, intArray35);
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "@" + "'", str4, "@");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Python2" + "'", str5, "Python2");
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Python2" + "'", str9, "Python2");
        org.junit.Assert.assertNotNull(sTGroup10);
        org.junit.Assert.assertNull(codeGenerator12);
        org.junit.Assert.assertNotNull(sTGroup13);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "\"hi!\"Context" + "'", str17, "\"hi!\"Context");
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "Python2" + "'", str22, "Python2");
        org.junit.Assert.assertNull(sTGroup23);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "\\n" + "'", str25, "\\n");
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "_tset\\\\1" + "'", str33, "_tset\\\\1");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[]");
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertNotNull(strArray38);
    }

    @Test
    public void test1384() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1384");
        org.antlr.v4.codegen.target.Python2Target.PythonStringRenderer pythonStringRenderer0 = new org.antlr.v4.codegen.target.Python2Target.PythonStringRenderer();
        org.antlr.v4.codegen.CodeGenerator codeGenerator1 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target2 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator1);
        java.util.Set<java.lang.String> strSet3 = python2Target2.badWords;
        java.lang.String str5 = python2Target2.encodeIntAsCharEscape(64);
        java.lang.String str7 = python2Target2.getAltLabelContextStructName("Python2");
        java.util.Locale locale9 = null;
        java.lang.String str10 = pythonStringRenderer0.toString((java.lang.Object) "Python2", "hi!", locale9);
        org.antlr.v4.codegen.CodeGenerator codeGenerator11 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target12 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator11);
        java.lang.String[] strArray13 = python2Target12.targetCharValueEscape;
        java.lang.String str14 = python2Target12.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup15 = python2Target12.getTemplates();
        java.lang.String str17 = python2Target12.getTargetStringLiteralFromString("_tset");
        java.lang.String str18 = python2Target12.getVersion();
        int int19 = python2Target12.getSerializedATNSegmentLimit();
        org.antlr.v4.codegen.CodeGenerator codeGenerator20 = python2Target12.getCodeGenerator();
        python2Target12.addBadWords();
        org.antlr.v4.tool.Grammar grammar22 = null;
        org.stringtemplate.v4.ST sT23 = null;
        python2Target12.genRecognizerHeaderFile(grammar22, sT23, "\"__tset\"");
        java.util.Locale locale27 = null;
        java.lang.String str28 = pythonStringRenderer0.toString((java.lang.Object) "\"__tset\"", "_\"\\\"hi!\\\"\"", locale27);
        org.antlr.v4.codegen.CodeGenerator codeGenerator29 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target30 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator29);
        java.util.Set<java.lang.String> strSet31 = python2Target30.badWords;
        java.lang.String str33 = python2Target30.encodeIntAsCharEscape(64);
        java.lang.String str34 = python2Target30.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator35 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target36 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator35);
        java.lang.String[] strArray37 = python2Target36.targetCharValueEscape;
        java.lang.String str38 = python2Target36.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup39 = python2Target36.getTemplates();
        python2Target30.templates = sTGroup39;
        java.util.Set<java.lang.String> strSet41 = python2Target30.getBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator42 = python2Target30.getCodeGenerator();
        java.lang.String str44 = python2Target30.getImplicitRuleLabel("_tset");
        org.antlr.v4.codegen.CodeGenerator codeGenerator45 = python2Target30.getCodeGenerator();
        python2Target30.addBadWords();
        java.lang.String[] strArray47 = python2Target30.targetCharValueEscape;
        java.util.Locale locale49 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str50 = pythonStringRenderer0.toString((java.lang.Object) python2Target30, "\"d\"Context", locale49);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: org.antlr.v4.codegen.target.Python2Target cannot be cast to java.lang.String");
        } catch (java.lang.ClassCastException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "@" + "'", str5, "@");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Python2Context" + "'", str7, "Python2Context");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Python2" + "'", str14, "Python2");
        org.junit.Assert.assertNotNull(sTGroup15);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "\"_tset\"" + "'", str17, "\"_tset\"");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "4.5.2.1" + "'", str18, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 2147483647 + "'", int19 == 2147483647);
        org.junit.Assert.assertNull(codeGenerator20);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "_\"\\\"hi!\\\"\"" + "'", str28, "_\"\\\"hi!\\\"\"");
        org.junit.Assert.assertNotNull(strSet31);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "@" + "'", str33, "@");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "Python2" + "'", str34, "Python2");
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "Python2" + "'", str38, "Python2");
        org.junit.Assert.assertNotNull(sTGroup39);
        org.junit.Assert.assertNotNull(strSet41);
        org.junit.Assert.assertNull(codeGenerator42);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "__tset" + "'", str44, "__tset");
        org.junit.Assert.assertNull(codeGenerator45);
        org.junit.Assert.assertNotNull(strArray47);
    }

    @Test
    public void test1385() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1385");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str5 = python2Target1.getTargetStringLiteralFromString("hi!", false);
        int int6 = python2Target1.getInlineTestSetWordSize();
        java.lang.String str8 = python2Target1.getTargetStringLiteralFromString("__\"_tset\"Context");
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 64 + "'", int6 == 64);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\"__\\\"_tset\\\"Context\"" + "'", str8, "\"__\\\"_tset\\\"Context\"");
    }

    @Test
    public void test1386() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1386");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str5 = python2Target1.getTargetStringLiteralFromString("hi!", false);
        int int6 = python2Target1.getInlineTestSetWordSize();
        boolean boolean7 = python2Target1.wantsBaseVisitor();
        boolean boolean8 = python2Target1.templatesExist();
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 64 + "'", int6 == 64);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
    }

    @Test
    public void test1387() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1387");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str4 = python2Target1.encodeIntAsCharEscape(64);
        java.lang.String str5 = python2Target1.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target7 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator6);
        java.lang.String[] strArray8 = python2Target7.targetCharValueEscape;
        java.lang.String str9 = python2Target7.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup10 = python2Target7.getTemplates();
        python2Target1.templates = sTGroup10;
        org.stringtemplate.v4.STGroup sTGroup12 = python2Target1.templates;
        java.util.Set<java.lang.String> strSet13 = python2Target1.badWords;
        java.util.Set<java.lang.String> strSet14 = python2Target1.getBadWords();
        boolean boolean15 = python2Target1.supportsOverloadedMethods();
        boolean boolean16 = python2Target1.templatesExist();
        org.antlr.v4.codegen.CodeGenerator codeGenerator17 = null;
        java.lang.String str20 = python2Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator17, "\"_tset\\\\\\\"\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"hi!\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"\\\\\\\"\"", false);
        org.antlr.v4.codegen.model.RuleFunction ruleFunction21 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str22 = python2Target1.getRuleFunctionContextStructName(ruleFunction21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "@" + "'", str4, "@");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Python2" + "'", str5, "Python2");
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Python2" + "'", str9, "Python2");
        org.junit.Assert.assertNotNull(sTGroup10);
        org.junit.Assert.assertNotNull(sTGroup12);
        org.junit.Assert.assertNotNull(strSet13);
        org.junit.Assert.assertNotNull(strSet14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "_tset\\\\\\\"\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"hi!\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"\\\\\\\"" + "'", str20, "_tset\\\\\\\"\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"hi!\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"\\\\\\\"");
    }

    @Test
    public void test1388() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1388");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String str3 = python2Target1.getImplicitSetLabel("");
        java.lang.String str4 = python2Target1.language;
        java.lang.String str7 = python2Target1.getTargetStringLiteralFromString("\"\"", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = python2Target1.getCodeGenerator();
        java.util.Set<java.lang.String> strSet9 = python2Target1.getBadWords();
        java.lang.String str10 = python2Target1.language;
        org.antlr.v4.codegen.CodeGenerator codeGenerator11 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target12 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator11);
        java.lang.String[] strArray13 = python2Target12.targetCharValueEscape;
        java.lang.String str14 = python2Target12.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup15 = python2Target12.getTemplates();
        org.antlr.v4.codegen.CodeGenerator codeGenerator16 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target17 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator16);
        java.util.Set<java.lang.String> strSet18 = python2Target17.badWords;
        python2Target12.badWords = strSet18;
        org.antlr.v4.tool.Grammar grammar20 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator21 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target22 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator21);
        java.util.Set<java.lang.String> strSet23 = python2Target22.badWords;
        java.lang.String str25 = python2Target22.encodeIntAsCharEscape(64);
        java.lang.String str26 = python2Target22.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator27 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target28 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator27);
        java.lang.String[] strArray29 = python2Target28.targetCharValueEscape;
        java.lang.String str30 = python2Target28.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup31 = python2Target28.getTemplates();
        python2Target22.templates = sTGroup31;
        org.stringtemplate.v4.STGroup sTGroup33 = python2Target22.templates;
        java.util.Set<java.lang.String> strSet34 = python2Target22.badWords;
        java.util.Set<java.lang.String> strSet35 = python2Target22.getBadWords();
        boolean boolean36 = python2Target22.supportsOverloadedMethods();
        java.util.Set<java.lang.String> strSet37 = python2Target22.getBadWords();
        org.antlr.v4.tool.Grammar grammar38 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator39 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target40 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator39);
        java.lang.String[] strArray41 = python2Target40.targetCharValueEscape;
        java.lang.String str44 = python2Target40.getTargetStringLiteralFromString("_tset\\1", false);
        org.antlr.v4.tool.Grammar grammar45 = null;
        int[] intArray46 = new int[] {};
        java.lang.String[] strArray47 = python2Target40.getTokenTypesAsTargetLabels(grammar45, intArray46);
        java.lang.String[] strArray48 = python2Target22.getTokenTypesAsTargetLabels(grammar38, intArray46);
        java.lang.String[] strArray49 = python2Target12.getTokenTypesAsTargetLabels(grammar20, intArray46);
        org.stringtemplate.v4.STGroup sTGroup50 = python2Target12.getTemplates();
        python2Target1.templates = sTGroup50;
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "_tset" + "'", str3, "_tset");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Python2" + "'", str4, "Python2");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "\"\\\"\\\"\"" + "'", str7, "\"\\\"\\\"\"");
        org.junit.Assert.assertNull(codeGenerator8);
        org.junit.Assert.assertNotNull(strSet9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Python2" + "'", str10, "Python2");
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Python2" + "'", str14, "Python2");
        org.junit.Assert.assertNotNull(sTGroup15);
        org.junit.Assert.assertNotNull(strSet18);
        org.junit.Assert.assertNotNull(strSet23);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "@" + "'", str25, "@");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "Python2" + "'", str26, "Python2");
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "Python2" + "'", str30, "Python2");
        org.junit.Assert.assertNotNull(sTGroup31);
        org.junit.Assert.assertNotNull(sTGroup33);
        org.junit.Assert.assertNotNull(strSet34);
        org.junit.Assert.assertNotNull(strSet35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(strSet37);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "_tset\\\\1" + "'", str44, "_tset\\\\1");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[]");
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertNotNull(strArray49);
        org.junit.Assert.assertNotNull(sTGroup50);
    }

    @Test
    public void test1389() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1389");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str4 = python2Target1.encodeIntAsCharEscape(64);
        java.lang.String str5 = python2Target1.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target7 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator6);
        java.lang.String[] strArray8 = python2Target7.targetCharValueEscape;
        java.lang.String str9 = python2Target7.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup10 = python2Target7.getTemplates();
        python2Target1.templates = sTGroup10;
        org.stringtemplate.v4.STGroup sTGroup12 = python2Target1.templates;
        org.stringtemplate.v4.STGroup sTGroup13 = python2Target1.getTemplates();
        python2Target1.language = "_tsetContextContext";
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "@" + "'", str4, "@");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Python2" + "'", str5, "Python2");
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Python2" + "'", str9, "Python2");
        org.junit.Assert.assertNotNull(sTGroup10);
        org.junit.Assert.assertNotNull(sTGroup12);
        org.junit.Assert.assertNotNull(sTGroup13);
    }

    @Test
    public void test1390() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1390");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String[] strArray2 = python2Target1.targetCharValueEscape;
        java.lang.String str3 = python2Target1.getLanguage();
        java.lang.String str6 = python2Target1.getTargetStringLiteralFromString("_tset", true);
        java.lang.String str7 = python2Target1.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = null;
        python2Target1.gen = codeGenerator8;
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target11 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator10);
        java.util.Set<java.lang.String> strSet12 = python2Target11.badWords;
        java.lang.String str14 = python2Target11.encodeIntAsCharEscape(64);
        java.lang.String str15 = python2Target11.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator16 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target17 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator16);
        java.lang.String[] strArray18 = python2Target17.targetCharValueEscape;
        java.lang.String str19 = python2Target17.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup20 = python2Target17.getTemplates();
        python2Target11.templates = sTGroup20;
        java.util.Set<java.lang.String> strSet22 = python2Target11.getBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator23 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target24 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator23);
        java.lang.String[] strArray25 = python2Target24.targetCharValueEscape;
        org.stringtemplate.v4.STGroup sTGroup26 = python2Target24.loadTemplates();
        python2Target11.templates = sTGroup26;
        python2Target1.templates = sTGroup26;
        java.lang.String str30 = python2Target1.getImplicitRuleLabel("\"\\\"\\\\\\\"\\\\\\\\\\\\\\\"hi!\\\\\\\\\\\\\\\"\\\\\\\"\\\"\"");
        java.lang.String str32 = python2Target1.getListLabel("\"_\\\\\\\"\\\\\\\\\\\\\\\"hi!\\\\\\\\\\\\\\\"\\\\\\\"\"");
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Python2" + "'", str3, "Python2");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\"_tset\"" + "'", str6, "\"_tset\"");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "4.5.2.1" + "'", str7, "4.5.2.1");
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "@" + "'", str14, "@");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Python2" + "'", str15, "Python2");
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Python2" + "'", str19, "Python2");
        org.junit.Assert.assertNotNull(sTGroup20);
        org.junit.Assert.assertNotNull(strSet22);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertNotNull(sTGroup26);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "_\"\\\"\\\\\\\"\\\\\\\\\\\\\\\"hi!\\\\\\\\\\\\\\\"\\\\\\\"\\\"\"" + "'", str30, "_\"\\\"\\\\\\\"\\\\\\\\\\\\\\\"hi!\\\\\\\\\\\\\\\"\\\\\\\"\\\"\"");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "\"_\\\\\\\"\\\\\\\\\\\\\\\"hi!\\\\\\\\\\\\\\\"\\\\\\\"\"" + "'", str32, "\"_\\\\\\\"\\\\\\\\\\\\\\\"hi!\\\\\\\\\\\\\\\"\\\\\\\"\"");
    }

    @Test
    public void test1391() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1391");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str5 = python2Target1.getTargetStringLiteralFromString("hi!", false);
        java.lang.String str7 = python2Target1.getImplicitRuleLabel("@");
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target9 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator8);
        java.util.Set<java.lang.String> strSet10 = python2Target9.badWords;
        java.lang.String str12 = python2Target9.encodeIntAsCharEscape(64);
        java.lang.String str13 = python2Target9.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator14 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target15 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator14);
        java.lang.String[] strArray16 = python2Target15.targetCharValueEscape;
        java.lang.String str17 = python2Target15.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup18 = python2Target15.getTemplates();
        python2Target9.templates = sTGroup18;
        org.antlr.v4.codegen.CodeGenerator codeGenerator20 = python2Target9.getCodeGenerator();
        org.stringtemplate.v4.STGroup sTGroup21 = python2Target9.loadTemplates();
        python2Target1.templates = sTGroup21;
        int int23 = python2Target1.getSerializedATNSegmentLimit();
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "_@" + "'", str7, "_@");
        org.junit.Assert.assertNotNull(strSet10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "@" + "'", str12, "@");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Python2" + "'", str13, "Python2");
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Python2" + "'", str17, "Python2");
        org.junit.Assert.assertNotNull(sTGroup18);
        org.junit.Assert.assertNull(codeGenerator20);
        org.junit.Assert.assertNotNull(sTGroup21);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 2147483647 + "'", int23 == 2147483647);
    }

    @Test
    public void test1392() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1392");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str5 = python2Target1.getTargetStringLiteralFromString("hi!", false);
        java.lang.String str7 = python2Target1.getTargetStringLiteralFromString("\"hi!\"");
        java.util.Set<java.lang.String> strSet8 = python2Target1.getBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator9 = python2Target1.getCodeGenerator();
        java.lang.String str10 = python2Target1.getVersion();
        java.lang.String[] strArray11 = python2Target1.targetCharValueEscape;
        python2Target1.language = "\".5.2.\"Context";
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "\"\\\"hi!\\\"\"" + "'", str7, "\"\\\"hi!\\\"\"");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertNull(codeGenerator9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "4.5.2.1" + "'", str10, "4.5.2.1");
        org.junit.Assert.assertNotNull(strArray11);
    }

    @Test
    public void test1393() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1393");
        java.lang.String str1 = org.stringtemplate.v4.StringRenderer.escapeHTML("_tset_tset\\\\1");
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "_tset_tset\\\\1" + "'", str1, "_tset_tset\\\\1");
    }

    @Test
    public void test1394() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1394");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str5 = python2Target1.getTargetStringLiteralFromString("hi!", false);
        int int6 = python2Target1.getInlineTestSetWordSize();
        boolean boolean7 = python2Target1.wantsBaseVisitor();
        java.lang.String str8 = python2Target1.getLanguage();
        python2Target1.addBadWords();
        java.lang.String str11 = python2Target1.getTargetStringLiteralFromString("_\"\\\"\\\\\\\"hi!\\\\\\\"\\\"\"");
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 64 + "'", int6 == 64);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Python2" + "'", str8, "Python2");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "\"_\\\"\\\\\\\"\\\\\\\\\\\\\\\"hi!\\\\\\\\\\\\\\\"\\\\\\\"\\\"\"" + "'", str11, "\"_\\\"\\\\\\\"\\\\\\\\\\\\\\\"hi!\\\\\\\\\\\\\\\"\\\\\\\"\\\"\"");
    }

    @Test
    public void test1395() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1395");
        org.antlr.v4.codegen.target.Python2Target.PythonStringRenderer pythonStringRenderer0 = new org.antlr.v4.codegen.target.Python2Target.PythonStringRenderer();
        org.antlr.v4.codegen.CodeGenerator codeGenerator1 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target2 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator1);
        java.util.Set<java.lang.String> strSet3 = python2Target2.badWords;
        java.lang.String str5 = python2Target2.encodeIntAsCharEscape(64);
        java.lang.String str7 = python2Target2.getAltLabelContextStructName("Python2");
        java.util.Locale locale9 = null;
        java.lang.String str10 = pythonStringRenderer0.toString((java.lang.Object) "Python2", "hi!", locale9);
        org.antlr.v4.codegen.CodeGenerator codeGenerator11 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target12 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator11);
        java.lang.String[] strArray13 = python2Target12.targetCharValueEscape;
        java.lang.String str14 = python2Target12.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup15 = python2Target12.getTemplates();
        java.lang.String str17 = python2Target12.getTargetStringLiteralFromString("_tset");
        java.lang.String str18 = python2Target12.getVersion();
        int int19 = python2Target12.getSerializedATNSegmentLimit();
        org.antlr.v4.codegen.CodeGenerator codeGenerator20 = python2Target12.getCodeGenerator();
        python2Target12.addBadWords();
        org.antlr.v4.tool.Grammar grammar22 = null;
        org.stringtemplate.v4.ST sT23 = null;
        python2Target12.genRecognizerHeaderFile(grammar22, sT23, "\"__tset\"");
        java.util.Locale locale27 = null;
        java.lang.String str28 = pythonStringRenderer0.toString((java.lang.Object) "\"__tset\"", "_\"\\\"hi!\\\"\"", locale27);
        java.util.Locale locale31 = null;
        java.lang.String str32 = pythonStringRenderer0.toString((java.lang.Object) "\"\"", "\\12", locale31);
        org.antlr.v4.codegen.CodeGenerator codeGenerator33 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target34 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator33);
        java.util.Set<java.lang.String> strSet35 = python2Target34.badWords;
        java.lang.String str37 = python2Target34.encodeIntAsCharEscape(64);
        java.lang.String str38 = python2Target34.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator39 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target40 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator39);
        java.lang.String[] strArray41 = python2Target40.targetCharValueEscape;
        java.lang.String str42 = python2Target40.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup43 = python2Target40.getTemplates();
        python2Target34.templates = sTGroup43;
        java.util.Set<java.lang.String> strSet45 = python2Target34.getBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator46 = python2Target34.getCodeGenerator();
        java.util.Set<java.lang.String> strSet47 = python2Target34.getBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator48 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target49 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator48);
        java.util.Set<java.lang.String> strSet50 = python2Target49.badWords;
        java.lang.String str52 = python2Target49.encodeIntAsCharEscape(64);
        java.lang.String str53 = python2Target49.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator54 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target55 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator54);
        java.lang.String[] strArray56 = python2Target55.targetCharValueEscape;
        java.lang.String str57 = python2Target55.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup58 = python2Target55.getTemplates();
        python2Target49.templates = sTGroup58;
        org.antlr.v4.codegen.CodeGenerator codeGenerator60 = python2Target49.getCodeGenerator();
        org.stringtemplate.v4.STGroup sTGroup61 = python2Target49.loadTemplates();
        python2Target34.templates = sTGroup61;
        boolean boolean63 = python2Target34.supportsOverloadedMethods();
        java.lang.String str65 = python2Target34.encodeIntAsCharEscape((int) '#');
        org.stringtemplate.v4.STGroup sTGroup66 = python2Target34.loadTemplates();
        java.util.Locale locale68 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str69 = pythonStringRenderer0.toString((java.lang.Object) sTGroup66, "4.5.2.1", locale68);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: org.stringtemplate.v4.STGroupFile cannot be cast to java.lang.String");
        } catch (java.lang.ClassCastException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "@" + "'", str5, "@");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Python2Context" + "'", str7, "Python2Context");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Python2" + "'", str14, "Python2");
        org.junit.Assert.assertNotNull(sTGroup15);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "\"_tset\"" + "'", str17, "\"_tset\"");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "4.5.2.1" + "'", str18, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 2147483647 + "'", int19 == 2147483647);
        org.junit.Assert.assertNull(codeGenerator20);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "_\"\\\"hi!\\\"\"" + "'", str28, "_\"\\\"hi!\\\"\"");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "\\12" + "'", str32, "\\12");
        org.junit.Assert.assertNotNull(strSet35);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "@" + "'", str37, "@");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "Python2" + "'", str38, "Python2");
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "Python2" + "'", str42, "Python2");
        org.junit.Assert.assertNotNull(sTGroup43);
        org.junit.Assert.assertNotNull(strSet45);
        org.junit.Assert.assertNull(codeGenerator46);
        org.junit.Assert.assertNotNull(strSet47);
        org.junit.Assert.assertNotNull(strSet50);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "@" + "'", str52, "@");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "Python2" + "'", str53, "Python2");
        org.junit.Assert.assertNotNull(strArray56);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "Python2" + "'", str57, "Python2");
        org.junit.Assert.assertNotNull(sTGroup58);
        org.junit.Assert.assertNull(codeGenerator60);
        org.junit.Assert.assertNotNull(sTGroup61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "#" + "'", str65, "#");
        org.junit.Assert.assertNotNull(sTGroup66);
    }

    @Test
    public void test1396() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1396");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String[] strArray2 = python2Target1.targetCharValueEscape;
        java.lang.String str5 = python2Target1.getTargetStringLiteralFromString("Python2", false);
        java.lang.String str6 = python2Target1.getVersion();
        java.lang.String str7 = python2Target1.language;
        org.stringtemplate.v4.STGroup sTGroup8 = python2Target1.loadTemplates();
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Python2" + "'", str5, "Python2");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "4.5.2.1" + "'", str6, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Python2" + "'", str7, "Python2");
        org.junit.Assert.assertNotNull(sTGroup8);
    }

    @Test
    public void test1397() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1397");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str4 = python2Target1.encodeIntAsCharEscape(64);
        java.lang.String str5 = python2Target1.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target7 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator6);
        java.lang.String[] strArray8 = python2Target7.targetCharValueEscape;
        java.lang.String str9 = python2Target7.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup10 = python2Target7.getTemplates();
        python2Target1.templates = sTGroup10;
        org.antlr.v4.tool.Grammar grammar12 = null;
        org.stringtemplate.v4.ST sT13 = null;
        python2Target1.genRecognizerHeaderFile(grammar12, sT13, "\"_tset\"");
        boolean boolean16 = python2Target1.wantsBaseVisitor();
        java.lang.String str18 = python2Target1.encodeIntAsCharEscape((int) (byte) 0);
        java.util.Set<java.lang.String> strSet19 = python2Target1.badWords;
        org.antlr.v4.tool.Grammar grammar20 = null;
        org.stringtemplate.v4.ST sT21 = null;
        python2Target1.genRecognizerHeaderFile(grammar20, sT21, "\\1");
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "@" + "'", str4, "@");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Python2" + "'", str5, "Python2");
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Python2" + "'", str9, "Python2");
        org.junit.Assert.assertNotNull(sTGroup10);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "\\0" + "'", str18, "\\0");
        org.junit.Assert.assertNotNull(strSet19);
    }

    @Test
    public void test1398() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1398");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str4 = python2Target1.encodeIntAsCharEscape(64);
        java.lang.String str5 = python2Target1.getLanguage();
        java.lang.String str7 = python2Target1.getImplicitSetLabel("");
        java.lang.String str9 = python2Target1.getImplicitSetLabel("\\n");
        java.lang.String str11 = python2Target1.getTargetStringLiteralFromString("");
        java.lang.String str12 = python2Target1.language;
        java.lang.String str14 = python2Target1.encodeIntAsCharEscape((int) (short) 10);
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "@" + "'", str4, "@");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Python2" + "'", str5, "Python2");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "_tset" + "'", str7, "_tset");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "_tset\\n" + "'", str9, "_tset\\n");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "\"\"" + "'", str11, "\"\"");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Python2" + "'", str12, "Python2");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "\\n" + "'", str14, "\\n");
    }

    @Test
    public void test1399() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1399");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str5 = python2Target1.getTargetStringLiteralFromString("hi!", false);
        java.lang.String str7 = python2Target1.getTargetStringLiteralFromString("\"hi!\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target9 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator8);
        java.util.Set<java.lang.String> strSet10 = python2Target9.badWords;
        java.lang.String str12 = python2Target9.encodeIntAsCharEscape(64);
        java.lang.String str13 = python2Target9.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator14 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target15 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator14);
        java.lang.String[] strArray16 = python2Target15.targetCharValueEscape;
        java.lang.String str17 = python2Target15.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup18 = python2Target15.getTemplates();
        python2Target9.templates = sTGroup18;
        org.antlr.v4.tool.Grammar grammar20 = null;
        org.stringtemplate.v4.ST sT21 = null;
        python2Target9.genRecognizerHeaderFile(grammar20, sT21, "\"_tset\"");
        java.util.Set<java.lang.String> strSet24 = python2Target9.getBadWords();
        python2Target1.badWords = strSet24;
        java.lang.String str26 = python2Target1.language;
        org.antlr.v4.tool.Grammar grammar27 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str29 = python2Target1.getTokenTypeAsTargetLabel(grammar27, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "\"\\\"hi!\\\"\"" + "'", str7, "\"\\\"hi!\\\"\"");
        org.junit.Assert.assertNotNull(strSet10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "@" + "'", str12, "@");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Python2" + "'", str13, "Python2");
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Python2" + "'", str17, "Python2");
        org.junit.Assert.assertNotNull(sTGroup18);
        org.junit.Assert.assertNotNull(strSet24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "Python2" + "'", str26, "Python2");
    }

    @Test
    public void test1400() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1400");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        org.stringtemplate.v4.STGroup sTGroup2 = python2Target1.templates;
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = null;
        java.lang.String str6 = python2Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator3, "_@", true);
        java.lang.String str8 = python2Target1.getImplicitRuleLabel("\"\\\"hi!\\\"\"");
        java.lang.String str10 = python2Target1.getImplicitSetLabel("4.5.2.1");
        java.lang.String str12 = python2Target1.getListLabel("_@");
        java.lang.String str13 = python2Target1.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator14 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target15 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator14);
        java.util.Set<java.lang.String> strSet16 = python2Target15.badWords;
        java.lang.String str19 = python2Target15.getTargetStringLiteralFromString("hi!", false);
        java.lang.String str21 = python2Target15.getImplicitRuleLabel("@");
        python2Target15.language = "hi!";
        java.util.Set<java.lang.String> strSet24 = python2Target15.getBadWords();
        org.stringtemplate.v4.STGroup sTGroup25 = python2Target15.templates;
        python2Target1.templates = sTGroup25;
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\"\"" + "'", str6, "\"\"");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "_\"\\\"hi!\\\"\"" + "'", str8, "_\"\\\"hi!\\\"\"");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "_tset4.5.2.1" + "'", str10, "_tset4.5.2.1");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "_@" + "'", str12, "_@");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "4.5.2.1" + "'", str13, "4.5.2.1");
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!" + "'", str19, "hi!");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "_@" + "'", str21, "_@");
        org.junit.Assert.assertNotNull(strSet24);
        org.junit.Assert.assertNotNull(sTGroup25);
    }

    @Test
    public void test1401() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1401");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String str3 = python2Target1.getImplicitSetLabel("");
        org.antlr.v4.codegen.CodeGenerator codeGenerator4 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target5 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator4);
        java.util.Set<java.lang.String> strSet6 = python2Target5.badWords;
        java.lang.String str8 = python2Target5.encodeIntAsCharEscape(64);
        java.lang.String str9 = python2Target5.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target11 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator10);
        java.lang.String[] strArray12 = python2Target11.targetCharValueEscape;
        java.lang.String str13 = python2Target11.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup14 = python2Target11.getTemplates();
        python2Target5.templates = sTGroup14;
        python2Target1.templates = sTGroup14;
        java.lang.String str18 = python2Target1.getAltLabelContextStructName("_tset");
        org.antlr.v4.codegen.CodeGenerator codeGenerator19 = null;
        python2Target1.gen = codeGenerator19;
        org.antlr.v4.codegen.CodeGenerator codeGenerator21 = null;
        python2Target1.gen = codeGenerator21;
        java.lang.String str24 = python2Target1.getImplicitSetLabel("\"Hi!Context\"Context");
        org.stringtemplate.v4.STGroup sTGroup25 = python2Target1.getTemplates();
        org.antlr.v4.tool.Grammar grammar26 = null;
        org.stringtemplate.v4.ST sT27 = null;
        // The following exception was thrown during execution in test generation
        try {
            python2Target1.genListenerFile(grammar26, sT27);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "_tset" + "'", str3, "_tset");
        org.junit.Assert.assertNotNull(strSet6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "@" + "'", str8, "@");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Python2" + "'", str9, "Python2");
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Python2" + "'", str13, "Python2");
        org.junit.Assert.assertNotNull(sTGroup14);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "_tsetContext" + "'", str18, "_tsetContext");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "_tset\"Hi!Context\"Context" + "'", str24, "_tset\"Hi!Context\"Context");
        org.junit.Assert.assertNotNull(sTGroup25);
    }

    @Test
    public void test1402() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1402");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String str3 = python2Target1.getImplicitSetLabel("");
        org.antlr.v4.codegen.CodeGenerator codeGenerator4 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target5 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator4);
        java.util.Set<java.lang.String> strSet6 = python2Target5.badWords;
        java.lang.String str8 = python2Target5.encodeIntAsCharEscape(64);
        java.lang.String str9 = python2Target5.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target11 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator10);
        java.lang.String[] strArray12 = python2Target11.targetCharValueEscape;
        java.lang.String str13 = python2Target11.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup14 = python2Target11.getTemplates();
        python2Target5.templates = sTGroup14;
        python2Target1.templates = sTGroup14;
        java.lang.String str18 = python2Target1.getAltLabelContextStructName("_tset");
        org.antlr.v4.codegen.CodeGenerator codeGenerator19 = null;
        python2Target1.gen = codeGenerator19;
        java.lang.String str22 = python2Target1.getImplicitSetLabel("__tset_tset\"\\\"\\\\\\\"hi!\\\\\\\"\\\"\"");
        boolean boolean23 = python2Target1.templatesExist();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "_tset" + "'", str3, "_tset");
        org.junit.Assert.assertNotNull(strSet6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "@" + "'", str8, "@");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Python2" + "'", str9, "Python2");
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Python2" + "'", str13, "Python2");
        org.junit.Assert.assertNotNull(sTGroup14);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "_tsetContext" + "'", str18, "_tsetContext");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "_tset__tset_tset\"\\\"\\\\\\\"hi!\\\\\\\"\\\"\"" + "'", str22, "_tset__tset_tset\"\\\"\\\\\\\"hi!\\\\\\\"\\\"\"");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
    }

    @Test
    public void test1403() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1403");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str4 = python2Target1.encodeIntAsCharEscape(64);
        java.lang.String str5 = python2Target1.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target7 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator6);
        java.lang.String[] strArray8 = python2Target7.targetCharValueEscape;
        java.lang.String str9 = python2Target7.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup10 = python2Target7.getTemplates();
        python2Target1.templates = sTGroup10;
        org.antlr.v4.tool.Grammar grammar12 = null;
        org.stringtemplate.v4.ST sT13 = null;
        python2Target1.genRecognizerHeaderFile(grammar12, sT13, "\"_tset\"");
        boolean boolean16 = python2Target1.wantsBaseVisitor();
        org.antlr.v4.codegen.CodeGenerator codeGenerator17 = python2Target1.getCodeGenerator();
        java.util.Set<java.lang.String> strSet18 = python2Target1.badWords;
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "@" + "'", str4, "@");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Python2" + "'", str5, "Python2");
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Python2" + "'", str9, "Python2");
        org.junit.Assert.assertNotNull(sTGroup10);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(codeGenerator17);
        org.junit.Assert.assertNotNull(strSet18);
    }

    @Test
    public void test1404() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1404");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String[] strArray2 = python2Target1.targetCharValueEscape;
        java.lang.String str5 = python2Target1.getTargetStringLiteralFromString("_tset\\1", false);
        java.util.Set<java.lang.String> strSet6 = python2Target1.badWords;
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = python2Target1.gen;
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "_tset\\\\1" + "'", str5, "_tset\\\\1");
        org.junit.Assert.assertNotNull(strSet6);
        org.junit.Assert.assertNull(codeGenerator7);
    }

    @Test
    public void test1405() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1405");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str4 = python2Target1.encodeIntAsCharEscape(64);
        org.stringtemplate.v4.STGroup sTGroup5 = python2Target1.loadTemplates();
        java.lang.String str6 = python2Target1.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = python2Target1.getCodeGenerator();
        java.lang.String str9 = python2Target1.getListLabel("__tset_tset\"\\\"\\\\\\\"hi!\\\\\\\"\\\"\"");
        java.lang.String[] strArray10 = python2Target1.targetCharValueEscape;
        java.util.Set<java.lang.String> strSet11 = python2Target1.getBadWords();
        org.stringtemplate.v4.STGroup sTGroup12 = python2Target1.getTemplates();
        org.antlr.v4.codegen.CodeGenerator codeGenerator13 = python2Target1.getCodeGenerator();
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "@" + "'", str4, "@");
        org.junit.Assert.assertNotNull(sTGroup5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Python2" + "'", str6, "Python2");
        org.junit.Assert.assertNull(codeGenerator7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "__tset_tset\"\\\"\\\\\\\"hi!\\\\\\\"\\\"\"" + "'", str9, "__tset_tset\"\\\"\\\\\\\"hi!\\\\\\\"\\\"\"");
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(strSet11);
        org.junit.Assert.assertNotNull(sTGroup12);
        org.junit.Assert.assertNull(codeGenerator13);
    }

    @Test
    public void test1406() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1406");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        org.stringtemplate.v4.STGroup sTGroup2 = python2Target1.templates;
        java.lang.String str3 = python2Target1.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator4 = null;
        python2Target1.gen = codeGenerator4;
        java.lang.String str8 = python2Target1.getTargetStringLiteralFromString("_Contex", true);
        org.antlr.v4.tool.Rule rule9 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str10 = python2Target1.getRuleFunctionContextStructName(rule9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "4.5.2.1" + "'", str3, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\"_Contex\"" + "'", str8, "\"_Contex\"");
    }

    @Test
    public void test1407() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1407");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String[] strArray4 = new java.lang.String[] { "Python2" };
        org.antlr.v4.codegen.target.Python2Target.python2Keywords = strArray4;
        python2Target1.targetCharValueEscape = strArray4;
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = python2Target1.gen;
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = python2Target1.getCodeGenerator();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str10 = python2Target1.getElementName("_\"_tset\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertNull(codeGenerator7);
        org.junit.Assert.assertNull(codeGenerator8);
    }

    @Test
    public void test1408() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1408");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String[] strArray4 = new java.lang.String[] { "Python2" };
        org.antlr.v4.codegen.target.Python2Target.python2Keywords = strArray4;
        python2Target1.targetCharValueEscape = strArray4;
        java.lang.String str9 = python2Target1.getTargetStringLiteralFromString("#", true);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str11 = python2Target1.getElementName("\" \"Context");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\"#\"" + "'", str9, "\"#\"");
    }

    @Test
    public void test1409() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1409");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String[] strArray2 = python2Target1.targetCharValueEscape;
        java.lang.String str3 = python2Target1.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup4 = python2Target1.getTemplates();
        org.antlr.v4.codegen.CodeGenerator codeGenerator5 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target6 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator5);
        java.util.Set<java.lang.String> strSet7 = python2Target6.badWords;
        python2Target1.badWords = strSet7;
        org.antlr.v4.codegen.CodeGenerator codeGenerator9 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target10 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator9);
        java.util.Set<java.lang.String> strSet11 = python2Target10.badWords;
        java.lang.String str14 = python2Target10.getTargetStringLiteralFromString("hi!", false);
        java.lang.String str16 = python2Target10.getImplicitRuleLabel("@");
        python2Target10.language = "hi!";
        org.antlr.v4.codegen.CodeGenerator codeGenerator19 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target20 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator19);
        java.util.Set<java.lang.String> strSet21 = python2Target20.badWords;
        java.lang.String str23 = python2Target20.encodeIntAsCharEscape(64);
        java.lang.String str24 = python2Target20.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator25 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target26 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator25);
        java.lang.String[] strArray27 = python2Target26.targetCharValueEscape;
        java.lang.String str28 = python2Target26.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup29 = python2Target26.getTemplates();
        python2Target20.templates = sTGroup29;
        org.antlr.v4.codegen.CodeGenerator codeGenerator31 = python2Target20.getCodeGenerator();
        org.stringtemplate.v4.STGroup sTGroup32 = python2Target20.loadTemplates();
        python2Target10.templates = sTGroup32;
        python2Target1.templates = sTGroup32;
        python2Target1.addBadWords();
        int int36 = python2Target1.getSerializedATNSegmentLimit();
        java.util.Set<java.lang.String> strSet37 = python2Target1.getBadWords();
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Python2" + "'", str3, "Python2");
        org.junit.Assert.assertNotNull(sTGroup4);
        org.junit.Assert.assertNotNull(strSet7);
        org.junit.Assert.assertNotNull(strSet11);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "_@" + "'", str16, "_@");
        org.junit.Assert.assertNotNull(strSet21);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "@" + "'", str23, "@");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "Python2" + "'", str24, "Python2");
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "Python2" + "'", str28, "Python2");
        org.junit.Assert.assertNotNull(sTGroup29);
        org.junit.Assert.assertNull(codeGenerator31);
        org.junit.Assert.assertNotNull(sTGroup32);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 2147483647 + "'", int36 == 2147483647);
        org.junit.Assert.assertNotNull(strSet37);
    }

    @Test
    public void test1410() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1410");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str5 = python2Target1.getTargetStringLiteralFromString("hi!", false);
        java.lang.String str7 = python2Target1.getImplicitRuleLabel("@");
        python2Target1.language = "hi!";
        boolean boolean10 = python2Target1.supportsOverloadedMethods();
        java.lang.String str12 = python2Target1.getTargetStringLiteralFromString("");
        java.lang.String str14 = python2Target1.getImplicitSetLabel("\\1");
        java.util.Set<java.lang.String> strSet15 = python2Target1.getBadWords();
        org.stringtemplate.v4.STGroup sTGroup16 = python2Target1.templates;
        java.lang.String[] strArray17 = python2Target1.targetCharValueEscape;
        java.lang.String str19 = python2Target1.getListLabel("_tset_\"#\"");
        java.lang.String str20 = python2Target1.getLanguage();
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "_@" + "'", str7, "_@");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "\"\"" + "'", str12, "\"\"");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "_tset\\1" + "'", str14, "_tset\\1");
        org.junit.Assert.assertNotNull(strSet15);
        org.junit.Assert.assertNotNull(sTGroup16);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "_tset_\"#\"" + "'", str19, "_tset_\"#\"");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "hi!" + "'", str20, "hi!");
    }

    @Test
    public void test1411() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1411");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String str3 = python2Target1.getImplicitSetLabel("");
        org.antlr.v4.codegen.CodeGenerator codeGenerator4 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target5 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator4);
        java.util.Set<java.lang.String> strSet6 = python2Target5.badWords;
        java.lang.String str8 = python2Target5.encodeIntAsCharEscape(64);
        java.lang.String str9 = python2Target5.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target11 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator10);
        java.lang.String[] strArray12 = python2Target11.targetCharValueEscape;
        java.lang.String str13 = python2Target11.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup14 = python2Target11.getTemplates();
        python2Target5.templates = sTGroup14;
        python2Target1.templates = sTGroup14;
        java.lang.String str18 = python2Target1.getAltLabelContextStructName("_tset");
        org.antlr.v4.codegen.CodeGenerator codeGenerator19 = null;
        python2Target1.gen = codeGenerator19;
        org.antlr.v4.codegen.CodeGenerator codeGenerator21 = python2Target1.getCodeGenerator();
        java.lang.String str23 = python2Target1.getImplicitRuleLabel("_tset\\nContext");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "_tset" + "'", str3, "_tset");
        org.junit.Assert.assertNotNull(strSet6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "@" + "'", str8, "@");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Python2" + "'", str9, "Python2");
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Python2" + "'", str13, "Python2");
        org.junit.Assert.assertNotNull(sTGroup14);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "_tsetContext" + "'", str18, "_tsetContext");
        org.junit.Assert.assertNull(codeGenerator21);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "__tset\\nContext" + "'", str23, "__tset\\nContext");
    }

    @Test
    public void test1412() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1412");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String[] strArray2 = python2Target1.targetCharValueEscape;
        java.lang.String str3 = python2Target1.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup4 = python2Target1.getTemplates();
        org.antlr.v4.codegen.CodeGenerator codeGenerator5 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target6 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator5);
        java.util.Set<java.lang.String> strSet7 = python2Target6.badWords;
        python2Target1.badWords = strSet7;
        java.lang.String[] strArray14 = new java.lang.String[] { "@", "\"_tset\"", "\"hi!\"", "_tset\\1", "_tset\\\\1" };
        python2Target1.targetCharValueEscape = strArray14;
        java.lang.String str16 = python2Target1.getLanguage();
        boolean boolean17 = python2Target1.templatesExist();
        java.util.Set<java.lang.String> strSet18 = python2Target1.getBadWords();
        java.lang.String str19 = python2Target1.language;
        org.stringtemplate.v4.STGroup sTGroup20 = python2Target1.loadTemplates();
        java.lang.String str22 = python2Target1.encodeIntAsCharEscape((int) (byte) 1);
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Python2" + "'", str3, "Python2");
        org.junit.Assert.assertNotNull(sTGroup4);
        org.junit.Assert.assertNotNull(strSet7);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Python2" + "'", str16, "Python2");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(strSet18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Python2" + "'", str19, "Python2");
        org.junit.Assert.assertNotNull(sTGroup20);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "\"_tset\"" + "'", str22, "\"_tset\"");
    }

    @Test
    public void test1413() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1413");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String[] strArray2 = python2Target1.targetCharValueEscape;
        java.lang.String str5 = python2Target1.getTargetStringLiteralFromString("Python2", false);
        java.lang.String str6 = python2Target1.getVersion();
        java.lang.String str7 = python2Target1.language;
        python2Target1.addBadWords();
        java.lang.String str9 = python2Target1.language;
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = python2Target1.gen;
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Python2" + "'", str5, "Python2");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "4.5.2.1" + "'", str6, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Python2" + "'", str7, "Python2");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Python2" + "'", str9, "Python2");
        org.junit.Assert.assertNull(codeGenerator10);
    }

    @Test
    public void test1414() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1414");
        org.antlr.v4.codegen.target.Python2Target python2Target0 = new org.antlr.v4.codegen.target.Python2Target();
        org.antlr.v4.codegen.CodeGenerator codeGenerator1 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target2 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator1);
        java.util.Set<java.lang.String> strSet3 = python2Target2.badWords;
        java.lang.String str5 = python2Target2.encodeIntAsCharEscape(64);
        java.lang.String str6 = python2Target2.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target8 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator7);
        java.lang.String[] strArray9 = python2Target8.targetCharValueEscape;
        java.lang.String str10 = python2Target8.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup11 = python2Target8.getTemplates();
        python2Target2.templates = sTGroup11;
        org.stringtemplate.v4.STGroup sTGroup13 = python2Target2.templates;
        java.util.Set<java.lang.String> strSet14 = python2Target2.badWords;
        java.util.Set<java.lang.String> strSet15 = python2Target2.getBadWords();
        boolean boolean16 = python2Target2.supportsOverloadedMethods();
        java.util.Set<java.lang.String> strSet17 = python2Target2.getBadWords();
        org.stringtemplate.v4.STGroup sTGroup18 = python2Target2.getTemplates();
        python2Target0.templates = sTGroup18;
        org.antlr.v4.codegen.CodeGenerator codeGenerator20 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target21 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator20);
        java.util.Set<java.lang.String> strSet22 = python2Target21.badWords;
        java.lang.String str24 = python2Target21.encodeIntAsCharEscape(64);
        java.lang.String str25 = python2Target21.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator26 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target27 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator26);
        java.lang.String[] strArray28 = python2Target27.targetCharValueEscape;
        java.lang.String str29 = python2Target27.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup30 = python2Target27.getTemplates();
        python2Target21.templates = sTGroup30;
        java.util.Set<java.lang.String> strSet32 = python2Target21.getBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator33 = python2Target21.getCodeGenerator();
        java.util.Set<java.lang.String> strSet34 = python2Target21.getBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator35 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target36 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator35);
        java.util.Set<java.lang.String> strSet37 = python2Target36.badWords;
        java.lang.String str39 = python2Target36.encodeIntAsCharEscape(64);
        java.lang.String str40 = python2Target36.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator41 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target42 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator41);
        java.lang.String[] strArray43 = python2Target42.targetCharValueEscape;
        java.lang.String str44 = python2Target42.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup45 = python2Target42.getTemplates();
        python2Target36.templates = sTGroup45;
        org.antlr.v4.codegen.CodeGenerator codeGenerator47 = python2Target36.getCodeGenerator();
        org.stringtemplate.v4.STGroup sTGroup48 = python2Target36.loadTemplates();
        python2Target21.templates = sTGroup48;
        python2Target0.templates = sTGroup48;
        java.lang.String str52 = python2Target0.getTargetStringLiteralFromString("_tsethi!");
        boolean boolean53 = python2Target0.wantsBaseVisitor();
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "@" + "'", str5, "@");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Python2" + "'", str6, "Python2");
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Python2" + "'", str10, "Python2");
        org.junit.Assert.assertNotNull(sTGroup11);
        org.junit.Assert.assertNotNull(sTGroup13);
        org.junit.Assert.assertNotNull(strSet14);
        org.junit.Assert.assertNotNull(strSet15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(strSet17);
        org.junit.Assert.assertNotNull(sTGroup18);
        org.junit.Assert.assertNotNull(strSet22);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "@" + "'", str24, "@");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Python2" + "'", str25, "Python2");
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "Python2" + "'", str29, "Python2");
        org.junit.Assert.assertNotNull(sTGroup30);
        org.junit.Assert.assertNotNull(strSet32);
        org.junit.Assert.assertNull(codeGenerator33);
        org.junit.Assert.assertNotNull(strSet34);
        org.junit.Assert.assertNotNull(strSet37);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "@" + "'", str39, "@");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "Python2" + "'", str40, "Python2");
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "Python2" + "'", str44, "Python2");
        org.junit.Assert.assertNotNull(sTGroup45);
        org.junit.Assert.assertNull(codeGenerator47);
        org.junit.Assert.assertNotNull(sTGroup48);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "\"_tsethi!\"" + "'", str52, "\"_tsethi!\"");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
    }

    @Test
    public void test1415() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1415");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String[] strArray2 = python2Target1.targetCharValueEscape;
        java.lang.String str3 = python2Target1.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup4 = python2Target1.getTemplates();
        org.antlr.v4.codegen.CodeGenerator codeGenerator5 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target6 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator5);
        java.util.Set<java.lang.String> strSet7 = python2Target6.badWords;
        python2Target1.badWords = strSet7;
        java.lang.String[] strArray14 = new java.lang.String[] { "@", "\"_tset\"", "\"hi!\"", "_tset\\1", "_tset\\\\1" };
        python2Target1.targetCharValueEscape = strArray14;
        java.lang.String str17 = python2Target1.getListLabel("");
        org.stringtemplate.v4.STGroup sTGroup18 = python2Target1.templates;
        java.lang.String str20 = python2Target1.getImplicitRuleLabel("__tset_tset\"\\\"\\\\\\\"hi!\\\\\\\"\\\"\"Context");
        org.antlr.v4.codegen.CodeGenerator codeGenerator21 = python2Target1.getCodeGenerator();
        org.antlr.v4.tool.Grammar grammar22 = null;
        org.stringtemplate.v4.ST sT23 = null;
        // The following exception was thrown during execution in test generation
        try {
            python2Target1.genListenerFile(grammar22, sT23);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Python2" + "'", str3, "Python2");
        org.junit.Assert.assertNotNull(sTGroup4);
        org.junit.Assert.assertNotNull(strSet7);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertNotNull(sTGroup18);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "___tset_tset\"\\\"\\\\\\\"hi!\\\\\\\"\\\"\"Context" + "'", str20, "___tset_tset\"\\\"\\\\\\\"hi!\\\\\\\"\\\"\"Context");
        org.junit.Assert.assertNull(codeGenerator21);
    }

    @Test
    public void test1416() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1416");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str5 = python2Target1.getTargetStringLiteralFromString("hi!", false);
        java.lang.String str7 = python2Target1.getImplicitRuleLabel("@");
        python2Target1.language = "hi!";
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target11 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator10);
        java.util.Set<java.lang.String> strSet12 = python2Target11.badWords;
        java.lang.String str14 = python2Target11.encodeIntAsCharEscape(64);
        java.lang.String str15 = python2Target11.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator16 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target17 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator16);
        java.lang.String[] strArray18 = python2Target17.targetCharValueEscape;
        java.lang.String str19 = python2Target17.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup20 = python2Target17.getTemplates();
        python2Target11.templates = sTGroup20;
        org.antlr.v4.codegen.CodeGenerator codeGenerator22 = python2Target11.getCodeGenerator();
        org.stringtemplate.v4.STGroup sTGroup23 = python2Target11.loadTemplates();
        python2Target1.templates = sTGroup23;
        java.lang.String str27 = python2Target1.getTargetStringLiteralFromString("_tset_tset\\\\1Context", false);
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "_@" + "'", str7, "_@");
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "@" + "'", str14, "@");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Python2" + "'", str15, "Python2");
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Python2" + "'", str19, "Python2");
        org.junit.Assert.assertNotNull(sTGroup20);
        org.junit.Assert.assertNull(codeGenerator22);
        org.junit.Assert.assertNotNull(sTGroup23);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "_tset_tset\\\\\\\\1Context" + "'", str27, "_tset_tset\\\\\\\\1Context");
    }

    @Test
    public void test1417() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1417");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str4 = python2Target1.encodeIntAsCharEscape(64);
        java.lang.String str5 = python2Target1.getLanguage();
        java.lang.String str6 = python2Target1.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup7 = python2Target1.getTemplates();
        java.lang.String str9 = python2Target1.getTargetStringLiteralFromString("\"tsetContex\"");
        org.stringtemplate.v4.STGroup sTGroup10 = python2Target1.getTemplates();
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "@" + "'", str4, "@");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Python2" + "'", str5, "Python2");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Python2" + "'", str6, "Python2");
        org.junit.Assert.assertNotNull(sTGroup7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\"\\\"tsetContex\\\"\"" + "'", str9, "\"\\\"tsetContex\\\"\"");
        org.junit.Assert.assertNotNull(sTGroup10);
    }

    @Test
    public void test1418() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1418");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str4 = python2Target1.encodeIntAsCharEscape(64);
        java.lang.String str5 = python2Target1.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target7 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator6);
        java.lang.String[] strArray8 = python2Target7.targetCharValueEscape;
        java.lang.String str9 = python2Target7.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup10 = python2Target7.getTemplates();
        python2Target1.templates = sTGroup10;
        org.antlr.v4.tool.Grammar grammar12 = null;
        org.stringtemplate.v4.ST sT13 = null;
        python2Target1.genRecognizerHeaderFile(grammar12, sT13, "\"_tset\"");
        java.util.Set<java.lang.String> strSet16 = python2Target1.getBadWords();
        org.stringtemplate.v4.STGroup sTGroup17 = python2Target1.loadTemplates();
        java.lang.String str19 = python2Target1.getAltLabelContextStructName("_tset\"\\\"\\\\\\\"hi!\\\\\\\"\\\"\"");
        org.stringtemplate.v4.STGroup sTGroup20 = python2Target1.templates;
        org.antlr.v4.codegen.CodeGenerator codeGenerator21 = python2Target1.gen;
        org.stringtemplate.v4.STGroup sTGroup22 = python2Target1.getTemplates();
        org.antlr.v4.tool.Grammar grammar23 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator24 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target25 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator24);
        java.lang.String str27 = python2Target25.getImplicitSetLabel("");
        org.antlr.v4.codegen.CodeGenerator codeGenerator28 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target29 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator28);
        java.util.Set<java.lang.String> strSet30 = python2Target29.badWords;
        java.lang.String str32 = python2Target29.encodeIntAsCharEscape(64);
        java.lang.String str33 = python2Target29.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator34 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target35 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator34);
        java.lang.String[] strArray36 = python2Target35.targetCharValueEscape;
        java.lang.String str37 = python2Target35.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup38 = python2Target35.getTemplates();
        python2Target29.templates = sTGroup38;
        python2Target25.templates = sTGroup38;
        java.lang.String str42 = python2Target25.getAltLabelContextStructName("_tset");
        org.antlr.v4.codegen.CodeGenerator codeGenerator43 = null;
        python2Target25.gen = codeGenerator43;
        python2Target25.language = "@";
        java.lang.String str48 = python2Target25.encodeIntAsCharEscape((int) (short) 0);
        org.antlr.v4.tool.Grammar grammar49 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator50 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target51 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator50);
        java.util.Set<java.lang.String> strSet52 = python2Target51.badWords;
        java.lang.String str54 = python2Target51.encodeIntAsCharEscape(64);
        java.lang.String str55 = python2Target51.getLanguage();
        int int56 = python2Target51.getInlineTestSetWordSize();
        java.lang.String str58 = python2Target51.getImplicitSetLabel("_tset\\\\1");
        org.antlr.v4.tool.Grammar grammar59 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator60 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target61 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator60);
        java.lang.String[] strArray62 = python2Target61.targetCharValueEscape;
        java.lang.String str65 = python2Target61.getTargetStringLiteralFromString("_tset\\1", false);
        org.antlr.v4.tool.Grammar grammar66 = null;
        int[] intArray67 = new int[] {};
        java.lang.String[] strArray68 = python2Target61.getTokenTypesAsTargetLabels(grammar66, intArray67);
        java.lang.String[] strArray69 = python2Target51.getTokenTypesAsTargetLabels(grammar59, intArray67);
        java.lang.String[] strArray70 = python2Target25.getTokenTypesAsTargetLabels(grammar49, intArray67);
        java.lang.String[] strArray71 = python2Target1.getTokenTypesAsTargetLabels(grammar23, intArray67);
        java.lang.String str72 = python2Target1.getLanguage();
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "@" + "'", str4, "@");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Python2" + "'", str5, "Python2");
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Python2" + "'", str9, "Python2");
        org.junit.Assert.assertNotNull(sTGroup10);
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertNotNull(sTGroup17);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "_tset\"\\\"\\\\\\\"hi!\\\\\\\"\\\"\"Context" + "'", str19, "_tset\"\\\"\\\\\\\"hi!\\\\\\\"\\\"\"Context");
        org.junit.Assert.assertNotNull(sTGroup20);
        org.junit.Assert.assertNull(codeGenerator21);
        org.junit.Assert.assertNotNull(sTGroup22);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "_tset" + "'", str27, "_tset");
        org.junit.Assert.assertNotNull(strSet30);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "@" + "'", str32, "@");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "Python2" + "'", str33, "Python2");
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "Python2" + "'", str37, "Python2");
        org.junit.Assert.assertNotNull(sTGroup38);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "_tsetContext" + "'", str42, "_tsetContext");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "\\0" + "'", str48, "\\0");
        org.junit.Assert.assertNotNull(strSet52);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "@" + "'", str54, "@");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "Python2" + "'", str55, "Python2");
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 64 + "'", int56 == 64);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "_tset_tset\\\\1" + "'", str58, "_tset_tset\\\\1");
        org.junit.Assert.assertNotNull(strArray62);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "_tset\\\\1" + "'", str65, "_tset\\\\1");
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[]");
        org.junit.Assert.assertNotNull(strArray68);
        org.junit.Assert.assertNotNull(strArray69);
        org.junit.Assert.assertNotNull(strArray70);
        org.junit.Assert.assertNotNull(strArray71);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "Python2" + "'", str72, "Python2");
    }

    @Test
    public void test1419() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1419");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str5 = python2Target1.getTargetStringLiteralFromString("hi!", false);
        java.lang.String str7 = python2Target1.getImplicitRuleLabel("@");
        python2Target1.language = "hi!";
        java.util.Set<java.lang.String> strSet10 = python2Target1.getBadWords();
        org.antlr.v4.tool.Grammar grammar11 = null;
        org.stringtemplate.v4.ST sT12 = null;
        python2Target1.genRecognizerHeaderFile(grammar11, sT12, "_@");
        java.lang.String str16 = python2Target1.encodeIntAsCharEscape((int) '#');
        int int17 = python2Target1.getInlineTestSetWordSize();
        java.lang.String str19 = python2Target1.getImplicitSetLabel("__\"\\\"\\\\\\\"hi!\\\\\\\"\\\"\"");
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "_@" + "'", str7, "_@");
        org.junit.Assert.assertNotNull(strSet10);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "#" + "'", str16, "#");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 64 + "'", int17 == 64);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "_tset__\"\\\"\\\\\\\"hi!\\\\\\\"\\\"\"" + "'", str19, "_tset__\"\\\"\\\\\\\"hi!\\\\\\\"\\\"\"");
    }

    @Test
    public void test1420() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1420");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str4 = python2Target1.encodeIntAsCharEscape(64);
        java.lang.String str5 = python2Target1.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target7 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator6);
        java.lang.String[] strArray8 = python2Target7.targetCharValueEscape;
        java.lang.String str9 = python2Target7.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup10 = python2Target7.getTemplates();
        python2Target1.templates = sTGroup10;
        org.antlr.v4.codegen.CodeGenerator codeGenerator12 = python2Target1.getCodeGenerator();
        org.stringtemplate.v4.STGroup sTGroup13 = python2Target1.loadTemplates();
        org.antlr.v4.codegen.CodeGenerator codeGenerator14 = null;
        python2Target1.gen = codeGenerator14;
        java.lang.String str17 = python2Target1.encodeIntAsCharEscape((int) (short) 0);
        java.lang.String str19 = python2Target1.getTargetStringLiteralFromString("_tset_tset\"\\\"\\\\\\\"hi!\\\\\\\"\\\"\"");
        boolean boolean20 = python2Target1.wantsBaseVisitor();
        java.lang.String str21 = python2Target1.getLanguage();
        boolean boolean22 = python2Target1.wantsBaseVisitor();
        boolean boolean23 = python2Target1.wantsBaseVisitor();
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "@" + "'", str4, "@");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Python2" + "'", str5, "Python2");
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Python2" + "'", str9, "Python2");
        org.junit.Assert.assertNotNull(sTGroup10);
        org.junit.Assert.assertNull(codeGenerator12);
        org.junit.Assert.assertNotNull(sTGroup13);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "\\0" + "'", str17, "\\0");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "\"_tset_tset\\\"\\\\\\\"\\\\\\\\\\\\\\\"hi!\\\\\\\\\\\\\\\"\\\\\\\"\\\"\"" + "'", str19, "\"_tset_tset\\\"\\\\\\\"\\\\\\\\\\\\\\\"hi!\\\\\\\\\\\\\\\"\\\\\\\"\\\"\"");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Python2" + "'", str21, "Python2");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
    }

    @Test
    public void test1421() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1421");
        java.lang.String str1 = org.stringtemplate.v4.StringRenderer.escapeHTML("\\\"_tset");
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "\\\"_tset" + "'", str1, "\\\"_tset");
    }

    @Test
    public void test1422() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1422");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String[] strArray2 = python2Target1.targetCharValueEscape;
        java.lang.String str3 = python2Target1.getLanguage();
        java.lang.String str6 = python2Target1.getTargetStringLiteralFromString("_tset", true);
        java.util.Set<java.lang.String> strSet7 = python2Target1.badWords;
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = python2Target1.getCodeGenerator();
        boolean boolean9 = python2Target1.supportsOverloadedMethods();
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target11 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator10);
        java.util.Set<java.lang.String> strSet12 = python2Target11.badWords;
        java.lang.String str15 = python2Target11.getTargetStringLiteralFromString("hi!", false);
        int int16 = python2Target11.getInlineTestSetWordSize();
        java.lang.String str18 = python2Target11.getTargetStringLiteralFromString("Hi!Context");
        org.antlr.v4.codegen.CodeGenerator codeGenerator19 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target20 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator19);
        java.lang.String[] strArray21 = python2Target20.targetCharValueEscape;
        python2Target11.targetCharValueEscape = strArray21;
        python2Target1.targetCharValueEscape = strArray21;
        org.stringtemplate.v4.STGroup sTGroup24 = python2Target1.getTemplates();
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Python2" + "'", str3, "Python2");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\"_tset\"" + "'", str6, "\"_tset\"");
        org.junit.Assert.assertNotNull(strSet7);
        org.junit.Assert.assertNull(codeGenerator8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 64 + "'", int16 == 64);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "\"Hi!Context\"" + "'", str18, "\"Hi!Context\"");
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(sTGroup24);
    }

    @Test
    public void test1423() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1423");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str4 = python2Target1.encodeIntAsCharEscape(64);
        java.lang.String str5 = python2Target1.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target7 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator6);
        java.lang.String[] strArray8 = python2Target7.targetCharValueEscape;
        java.lang.String str9 = python2Target7.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup10 = python2Target7.getTemplates();
        python2Target1.templates = sTGroup10;
        java.util.Set<java.lang.String> strSet12 = python2Target1.getBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator13 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target14 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator13);
        java.lang.String[] strArray15 = python2Target14.targetCharValueEscape;
        org.stringtemplate.v4.STGroup sTGroup16 = python2Target14.loadTemplates();
        python2Target1.templates = sTGroup16;
        java.lang.String str18 = python2Target1.language;
        org.stringtemplate.v4.STGroup sTGroup19 = python2Target1.loadTemplates();
        java.lang.String str21 = python2Target1.getListLabel("_tset_tset\\\\1");
        java.lang.Class<?> wildcardClass22 = python2Target1.getClass();
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "@" + "'", str4, "@");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Python2" + "'", str5, "Python2");
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Python2" + "'", str9, "Python2");
        org.junit.Assert.assertNotNull(sTGroup10);
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(sTGroup16);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Python2" + "'", str18, "Python2");
        org.junit.Assert.assertNotNull(sTGroup19);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "_tset_tset\\\\1" + "'", str21, "_tset_tset\\\\1");
        org.junit.Assert.assertNotNull(wildcardClass22);
    }

    @Test
    public void test1424() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1424");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String[] strArray2 = python2Target1.targetCharValueEscape;
        java.lang.String str3 = python2Target1.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup4 = python2Target1.getTemplates();
        org.antlr.v4.codegen.CodeGenerator codeGenerator5 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target6 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator5);
        java.util.Set<java.lang.String> strSet7 = python2Target6.badWords;
        python2Target1.badWords = strSet7;
        org.antlr.v4.codegen.CodeGenerator codeGenerator9 = python2Target1.gen;
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = python2Target1.getCodeGenerator();
        java.lang.String str11 = python2Target1.language;
        boolean boolean12 = python2Target1.wantsBaseListener();
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Python2" + "'", str3, "Python2");
        org.junit.Assert.assertNotNull(sTGroup4);
        org.junit.Assert.assertNotNull(strSet7);
        org.junit.Assert.assertNull(codeGenerator9);
        org.junit.Assert.assertNull(codeGenerator10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Python2" + "'", str11, "Python2");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test1425() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1425");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String[] strArray2 = python2Target1.targetCharValueEscape;
        java.lang.String str3 = python2Target1.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup4 = python2Target1.templates;
        java.lang.String str6 = python2Target1.getTargetStringLiteralFromString("4.5.2.1");
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = null;
        python2Target1.gen = codeGenerator7;
        org.stringtemplate.v4.STGroup sTGroup9 = python2Target1.getTemplates();
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Python2" + "'", str3, "Python2");
        org.junit.Assert.assertNull(sTGroup4);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\"4.5.2.1\"" + "'", str6, "\"4.5.2.1\"");
        org.junit.Assert.assertNotNull(sTGroup9);
    }

    @Test
    public void test1426() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1426");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String str3 = python2Target1.getImplicitSetLabel("");
        org.antlr.v4.tool.Grammar grammar4 = null;
        org.stringtemplate.v4.ST sT5 = null;
        python2Target1.genRecognizerHeaderFile(grammar4, sT5, "_tset");
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target9 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator8);
        java.util.Set<java.lang.String> strSet10 = python2Target9.badWords;
        java.lang.String str12 = python2Target9.encodeIntAsCharEscape(64);
        java.lang.String str13 = python2Target9.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator14 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target15 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator14);
        java.lang.String[] strArray16 = python2Target15.targetCharValueEscape;
        java.lang.String str17 = python2Target15.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup18 = python2Target15.getTemplates();
        python2Target9.templates = sTGroup18;
        python2Target1.templates = sTGroup18;
        org.antlr.v4.tool.Grammar grammar21 = null;
        org.stringtemplate.v4.ST sT22 = null;
        python2Target1.genRecognizerHeaderFile(grammar21, sT22, "\"\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator25 = null;
        python2Target1.gen = codeGenerator25;
        java.lang.String[] strArray53 = new java.lang.String[] { "_tset\\\\1", "tsetContex", "\"\\\"\\\\\\\"hi!\\\\\\\"\\\"\"", "\"\\\"hi!\\\"\"", "__tsetContext", "_\"\\\"hi!\\\"\"", "\"Hi!Context\"", "_\"\\\"\\\\\\\"hi!\\\\\\\"\\\"\"", "\"tsetContex\"", "\"\\\"\\\"\"", "_tset\\\\1", "4.5.2.1", "\"tsetContex\"", "_tset", "_tsetContext", "\"_tsethi!\"", "4.5.2.1", "\"hi!\"", "d", "_tsetContext", "\"\\\"\\\\\\\"hi!\\\\\\\"\\\"\"", "@", "\"\\\"\\\"\"", "\"\\\"\\\"\"", "_tsetContext", "_@" };
        java.util.LinkedHashSet<java.lang.String> strSet54 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet54, strArray53);
        python2Target1.badWords = strSet54;
        org.antlr.v4.codegen.CodeGenerator codeGenerator57 = null;
        java.lang.String str60 = python2Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator57, "\"\\\"\\\"\"", false);
        boolean boolean61 = python2Target1.templatesExist();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "_tset" + "'", str3, "_tset");
        org.junit.Assert.assertNotNull(strSet10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "@" + "'", str12, "@");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Python2" + "'", str13, "Python2");
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Python2" + "'", str17, "Python2");
        org.junit.Assert.assertNotNull(sTGroup18);
        org.junit.Assert.assertNotNull(strArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "\\\"\\\"" + "'", str60, "\\\"\\\"");
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
    }

    @Test
    public void test1427() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1427");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String str3 = python2Target1.getImplicitSetLabel("");
        java.lang.String str4 = python2Target1.language;
        java.lang.String str7 = python2Target1.getTargetStringLiteralFromString("\"\"", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = python2Target1.getCodeGenerator();
        java.util.Set<java.lang.String> strSet9 = python2Target1.getBadWords();
        java.lang.String str10 = python2Target1.language;
        python2Target1.addBadWords();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "_tset" + "'", str3, "_tset");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Python2" + "'", str4, "Python2");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "\"\\\"\\\"\"" + "'", str7, "\"\\\"\\\"\"");
        org.junit.Assert.assertNull(codeGenerator8);
        org.junit.Assert.assertNotNull(strSet9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Python2" + "'", str10, "Python2");
    }

    @Test
    public void test1428() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1428");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String[] strArray2 = python2Target1.targetCharValueEscape;
        java.lang.String str3 = python2Target1.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup4 = python2Target1.getTemplates();
        boolean boolean5 = python2Target1.wantsBaseVisitor();
        java.lang.String str7 = python2Target1.getTargetStringLiteralFromString("d");
        java.lang.String[] strArray13 = new java.lang.String[] { "_tset\\1", "i", "__tset", "\"\\\"d\\\"\"", "_tsetContextContext" };
        python2Target1.targetCharValueEscape = strArray13;
        java.lang.String[] strArray15 = python2Target1.targetCharValueEscape;
        org.antlr.v4.codegen.CodeGenerator codeGenerator16 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target17 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator16);
        java.util.Set<java.lang.String> strSet18 = python2Target17.badWords;
        java.lang.String str20 = python2Target17.encodeIntAsCharEscape(64);
        java.lang.String str21 = python2Target17.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator22 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target23 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator22);
        java.lang.String[] strArray24 = python2Target23.targetCharValueEscape;
        java.lang.String str25 = python2Target23.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup26 = python2Target23.getTemplates();
        python2Target17.templates = sTGroup26;
        org.antlr.v4.tool.Grammar grammar28 = null;
        org.stringtemplate.v4.ST sT29 = null;
        python2Target17.genRecognizerHeaderFile(grammar28, sT29, "\"_tset\"");
        java.util.Set<java.lang.String> strSet32 = python2Target17.getBadWords();
        org.stringtemplate.v4.STGroup sTGroup33 = python2Target17.loadTemplates();
        java.lang.String str35 = python2Target17.getAltLabelContextStructName("_tset\"\\\"\\\\\\\"hi!\\\\\\\"\\\"\"");
        org.stringtemplate.v4.STGroup sTGroup36 = python2Target17.templates;
        org.antlr.v4.codegen.CodeGenerator codeGenerator37 = python2Target17.gen;
        org.stringtemplate.v4.STGroup sTGroup38 = python2Target17.getTemplates();
        python2Target1.templates = sTGroup38;
        java.lang.String str41 = python2Target1.encodeIntAsCharEscape(0);
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Python2" + "'", str3, "Python2");
        org.junit.Assert.assertNotNull(sTGroup4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "\"d\"" + "'", str7, "\"d\"");
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(strSet18);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "@" + "'", str20, "@");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Python2" + "'", str21, "Python2");
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Python2" + "'", str25, "Python2");
        org.junit.Assert.assertNotNull(sTGroup26);
        org.junit.Assert.assertNotNull(strSet32);
        org.junit.Assert.assertNotNull(sTGroup33);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "_tset\"\\\"\\\\\\\"hi!\\\\\\\"\\\"\"Context" + "'", str35, "_tset\"\\\"\\\\\\\"hi!\\\\\\\"\\\"\"Context");
        org.junit.Assert.assertNotNull(sTGroup36);
        org.junit.Assert.assertNull(codeGenerator37);
        org.junit.Assert.assertNotNull(sTGroup38);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "_tset\\1" + "'", str41, "_tset\\1");
    }

    @Test
    public void test1429() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1429");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String str3 = python2Target1.getImplicitSetLabel("");
        org.antlr.v4.tool.Grammar grammar4 = null;
        org.stringtemplate.v4.ST sT5 = null;
        python2Target1.genRecognizerHeaderFile(grammar4, sT5, "_tset");
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target9 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator8);
        java.util.Set<java.lang.String> strSet10 = python2Target9.badWords;
        java.lang.String str12 = python2Target9.encodeIntAsCharEscape(64);
        java.lang.String str13 = python2Target9.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator14 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target15 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator14);
        java.lang.String[] strArray16 = python2Target15.targetCharValueEscape;
        java.lang.String str17 = python2Target15.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup18 = python2Target15.getTemplates();
        python2Target9.templates = sTGroup18;
        python2Target1.templates = sTGroup18;
        org.antlr.v4.codegen.CodeGenerator codeGenerator21 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target22 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator21);
        java.lang.String[] strArray23 = python2Target22.targetCharValueEscape;
        java.lang.String str24 = python2Target22.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup25 = python2Target22.getTemplates();
        org.antlr.v4.codegen.CodeGenerator codeGenerator26 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target27 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator26);
        java.util.Set<java.lang.String> strSet28 = python2Target27.badWords;
        python2Target22.badWords = strSet28;
        org.antlr.v4.codegen.CodeGenerator codeGenerator30 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target31 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator30);
        java.util.Set<java.lang.String> strSet32 = python2Target31.badWords;
        java.lang.String str35 = python2Target31.getTargetStringLiteralFromString("hi!", false);
        java.lang.String str37 = python2Target31.getImplicitRuleLabel("@");
        python2Target31.language = "hi!";
        org.antlr.v4.codegen.CodeGenerator codeGenerator40 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target41 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator40);
        java.util.Set<java.lang.String> strSet42 = python2Target41.badWords;
        java.lang.String str44 = python2Target41.encodeIntAsCharEscape(64);
        java.lang.String str45 = python2Target41.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator46 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target47 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator46);
        java.lang.String[] strArray48 = python2Target47.targetCharValueEscape;
        java.lang.String str49 = python2Target47.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup50 = python2Target47.getTemplates();
        python2Target41.templates = sTGroup50;
        org.antlr.v4.codegen.CodeGenerator codeGenerator52 = python2Target41.getCodeGenerator();
        org.stringtemplate.v4.STGroup sTGroup53 = python2Target41.loadTemplates();
        python2Target31.templates = sTGroup53;
        python2Target22.templates = sTGroup53;
        python2Target1.templates = sTGroup53;
        python2Target1.addBadWords();
        python2Target1.addBadWords();
        java.util.Set<java.lang.String> strSet59 = python2Target1.badWords;
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "_tset" + "'", str3, "_tset");
        org.junit.Assert.assertNotNull(strSet10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "@" + "'", str12, "@");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Python2" + "'", str13, "Python2");
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Python2" + "'", str17, "Python2");
        org.junit.Assert.assertNotNull(sTGroup18);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "Python2" + "'", str24, "Python2");
        org.junit.Assert.assertNotNull(sTGroup25);
        org.junit.Assert.assertNotNull(strSet28);
        org.junit.Assert.assertNotNull(strSet32);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!" + "'", str35, "hi!");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "_@" + "'", str37, "_@");
        org.junit.Assert.assertNotNull(strSet42);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "@" + "'", str44, "@");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "Python2" + "'", str45, "Python2");
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "Python2" + "'", str49, "Python2");
        org.junit.Assert.assertNotNull(sTGroup50);
        org.junit.Assert.assertNull(codeGenerator52);
        org.junit.Assert.assertNotNull(sTGroup53);
        org.junit.Assert.assertNotNull(strSet59);
    }

    @Test
    public void test1430() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1430");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str4 = python2Target1.encodeIntAsCharEscape(64);
        java.lang.String str6 = python2Target1.getAltLabelContextStructName("Python2");
        boolean boolean7 = python2Target1.supportsOverloadedMethods();
        org.antlr.v4.tool.Grammar grammar8 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator9 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target10 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator9);
        java.lang.String[] strArray11 = python2Target10.targetCharValueEscape;
        java.lang.String str12 = python2Target10.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup13 = python2Target10.getTemplates();
        org.antlr.v4.codegen.CodeGenerator codeGenerator14 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target15 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator14);
        java.util.Set<java.lang.String> strSet16 = python2Target15.badWords;
        python2Target10.badWords = strSet16;
        org.antlr.v4.tool.Grammar grammar18 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator19 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target20 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator19);
        java.util.Set<java.lang.String> strSet21 = python2Target20.badWords;
        java.lang.String str23 = python2Target20.encodeIntAsCharEscape(64);
        java.lang.String str24 = python2Target20.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator25 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target26 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator25);
        java.lang.String[] strArray27 = python2Target26.targetCharValueEscape;
        java.lang.String str28 = python2Target26.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup29 = python2Target26.getTemplates();
        python2Target20.templates = sTGroup29;
        org.stringtemplate.v4.STGroup sTGroup31 = python2Target20.templates;
        java.util.Set<java.lang.String> strSet32 = python2Target20.badWords;
        java.util.Set<java.lang.String> strSet33 = python2Target20.getBadWords();
        boolean boolean34 = python2Target20.supportsOverloadedMethods();
        java.util.Set<java.lang.String> strSet35 = python2Target20.getBadWords();
        org.antlr.v4.tool.Grammar grammar36 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator37 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target38 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator37);
        java.lang.String[] strArray39 = python2Target38.targetCharValueEscape;
        java.lang.String str42 = python2Target38.getTargetStringLiteralFromString("_tset\\1", false);
        org.antlr.v4.tool.Grammar grammar43 = null;
        int[] intArray44 = new int[] {};
        java.lang.String[] strArray45 = python2Target38.getTokenTypesAsTargetLabels(grammar43, intArray44);
        java.lang.String[] strArray46 = python2Target20.getTokenTypesAsTargetLabels(grammar36, intArray44);
        java.lang.String[] strArray47 = python2Target10.getTokenTypesAsTargetLabels(grammar18, intArray44);
        java.lang.String[] strArray48 = python2Target1.getTokenTypesAsTargetLabels(grammar8, intArray44);
        org.antlr.v4.tool.Grammar grammar49 = null;
        org.stringtemplate.v4.ST sT50 = null;
        python2Target1.genRecognizerHeaderFile(grammar49, sT50, "\"tset_tset\\\"\\\"\\\\\\\"hi!\\\\\\\"\\\"\"");
        boolean boolean53 = python2Target1.wantsBaseListener();
        org.antlr.v4.tool.Grammar grammar54 = null;
        org.stringtemplate.v4.ST sT55 = null;
        // The following exception was thrown during execution in test generation
        try {
            python2Target1.genListenerFile(grammar54, sT55);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "@" + "'", str4, "@");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Python2Context" + "'", str6, "Python2Context");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Python2" + "'", str12, "Python2");
        org.junit.Assert.assertNotNull(sTGroup13);
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertNotNull(strSet21);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "@" + "'", str23, "@");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "Python2" + "'", str24, "Python2");
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "Python2" + "'", str28, "Python2");
        org.junit.Assert.assertNotNull(sTGroup29);
        org.junit.Assert.assertNotNull(sTGroup31);
        org.junit.Assert.assertNotNull(strSet32);
        org.junit.Assert.assertNotNull(strSet33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(strSet35);
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "_tset\\\\1" + "'", str42, "_tset\\\\1");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[]");
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
    }

    @Test
    public void test1431() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1431");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String str3 = python2Target1.getImplicitSetLabel("");
        org.antlr.v4.tool.Grammar grammar4 = null;
        org.stringtemplate.v4.ST sT5 = null;
        python2Target1.genRecognizerHeaderFile(grammar4, sT5, "_tset");
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target9 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator8);
        java.util.Set<java.lang.String> strSet10 = python2Target9.badWords;
        java.lang.String str12 = python2Target9.encodeIntAsCharEscape(64);
        java.lang.String str13 = python2Target9.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator14 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target15 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator14);
        java.lang.String[] strArray16 = python2Target15.targetCharValueEscape;
        java.lang.String str17 = python2Target15.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup18 = python2Target15.getTemplates();
        python2Target9.templates = sTGroup18;
        python2Target1.templates = sTGroup18;
        org.antlr.v4.tool.Grammar grammar21 = null;
        org.stringtemplate.v4.ST sT22 = null;
        python2Target1.genRecognizerHeaderFile(grammar21, sT22, "\"\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator25 = null;
        python2Target1.gen = codeGenerator25;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str28 = python2Target1.getElementName("_tset#");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "_tset" + "'", str3, "_tset");
        org.junit.Assert.assertNotNull(strSet10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "@" + "'", str12, "@");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Python2" + "'", str13, "Python2");
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Python2" + "'", str17, "Python2");
        org.junit.Assert.assertNotNull(sTGroup18);
    }

    @Test
    public void test1432() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1432");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str4 = python2Target1.encodeIntAsCharEscape(64);
        org.stringtemplate.v4.STGroup sTGroup5 = python2Target1.loadTemplates();
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = null;
        java.lang.String str9 = python2Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator6, "_tset_\"#\"", false);
        boolean boolean10 = python2Target1.supportsOverloadedMethods();
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "@" + "'", str4, "@");
        org.junit.Assert.assertNotNull(sTGroup5);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "tset_\\\"#" + "'", str9, "tset_\\\"#");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test1433() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1433");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str4 = python2Target1.encodeIntAsCharEscape(64);
        java.lang.String str5 = python2Target1.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target7 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator6);
        java.lang.String[] strArray8 = python2Target7.targetCharValueEscape;
        java.lang.String str9 = python2Target7.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup10 = python2Target7.getTemplates();
        python2Target1.templates = sTGroup10;
        java.util.Set<java.lang.String> strSet12 = python2Target1.getBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator13 = python2Target1.getCodeGenerator();
        java.util.Set<java.lang.String> strSet14 = python2Target1.getBadWords();
        boolean boolean15 = python2Target1.wantsBaseListener();
        java.lang.String str18 = python2Target1.getTargetStringLiteralFromString("\"\\\"hi!\\\"\"", true);
        org.stringtemplate.v4.STGroup sTGroup19 = python2Target1.getTemplates();
        org.antlr.v4.codegen.CodeGenerator codeGenerator20 = python2Target1.gen;
        java.lang.String str22 = python2Target1.getImplicitRuleLabel("tset\\\"tset_tsetContex");
        java.lang.Class<?> wildcardClass23 = python2Target1.getClass();
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "@" + "'", str4, "@");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Python2" + "'", str5, "Python2");
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Python2" + "'", str9, "Python2");
        org.junit.Assert.assertNotNull(sTGroup10);
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertNull(codeGenerator13);
        org.junit.Assert.assertNotNull(strSet14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "\"\\\"\\\\\\\"hi!\\\\\\\"\\\"\"" + "'", str18, "\"\\\"\\\\\\\"hi!\\\\\\\"\\\"\"");
        org.junit.Assert.assertNotNull(sTGroup19);
        org.junit.Assert.assertNull(codeGenerator20);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "_tset\\\"tset_tsetContex" + "'", str22, "_tset\\\"tset_tsetContex");
        org.junit.Assert.assertNotNull(wildcardClass23);
    }

    @Test
    public void test1434() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1434");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str4 = python2Target1.encodeIntAsCharEscape(64);
        java.lang.String str5 = python2Target1.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target7 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator6);
        java.lang.String[] strArray8 = python2Target7.targetCharValueEscape;
        java.lang.String str9 = python2Target7.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup10 = python2Target7.getTemplates();
        python2Target1.templates = sTGroup10;
        org.antlr.v4.codegen.CodeGenerator codeGenerator12 = python2Target1.getCodeGenerator();
        java.lang.String str14 = python2Target1.getImplicitRuleLabel("\\\"4.5.2.1");
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "@" + "'", str4, "@");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Python2" + "'", str5, "Python2");
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Python2" + "'", str9, "Python2");
        org.junit.Assert.assertNotNull(sTGroup10);
        org.junit.Assert.assertNull(codeGenerator12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "_\\\"4.5.2.1" + "'", str14, "_\\\"4.5.2.1");
    }

    @Test
    public void test1435() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1435");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String str3 = python2Target1.getImplicitSetLabel("");
        org.antlr.v4.codegen.CodeGenerator codeGenerator4 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target5 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator4);
        java.util.Set<java.lang.String> strSet6 = python2Target5.badWords;
        java.lang.String str8 = python2Target5.encodeIntAsCharEscape(64);
        java.lang.String str9 = python2Target5.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target11 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator10);
        java.lang.String[] strArray12 = python2Target11.targetCharValueEscape;
        java.lang.String str13 = python2Target11.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup14 = python2Target11.getTemplates();
        python2Target5.templates = sTGroup14;
        python2Target1.templates = sTGroup14;
        java.lang.String str18 = python2Target1.getAltLabelContextStructName("_tset");
        org.antlr.v4.codegen.CodeGenerator codeGenerator19 = null;
        python2Target1.gen = codeGenerator19;
        org.antlr.v4.codegen.CodeGenerator codeGenerator21 = null;
        python2Target1.gen = codeGenerator21;
        org.stringtemplate.v4.STGroup sTGroup23 = python2Target1.loadTemplates();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "_tset" + "'", str3, "_tset");
        org.junit.Assert.assertNotNull(strSet6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "@" + "'", str8, "@");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Python2" + "'", str9, "Python2");
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Python2" + "'", str13, "Python2");
        org.junit.Assert.assertNotNull(sTGroup14);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "_tsetContext" + "'", str18, "_tsetContext");
        org.junit.Assert.assertNotNull(sTGroup23);
    }

    @Test
    public void test1436() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1436");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String[] strArray2 = python2Target1.targetCharValueEscape;
        java.lang.String str3 = python2Target1.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup4 = python2Target1.getTemplates();
        java.lang.String str6 = python2Target1.getListLabel("4.5.2.1");
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = null;
        python2Target1.gen = codeGenerator7;
        boolean boolean9 = python2Target1.templatesExist();
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Python2" + "'", str3, "Python2");
        org.junit.Assert.assertNotNull(sTGroup4);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "4.5.2.1" + "'", str6, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
    }

    @Test
    public void test1437() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1437");
        org.antlr.v4.codegen.target.Python2Target python2Target0 = new org.antlr.v4.codegen.target.Python2Target();
        org.stringtemplate.v4.STGroup sTGroup1 = python2Target0.templates;
        java.lang.String[] strArray2 = python2Target0.targetCharValueEscape;
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target4 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator3);
        java.lang.String[] strArray5 = python2Target4.targetCharValueEscape;
        java.lang.String str8 = python2Target4.getTargetStringLiteralFromString("Python2", false);
        java.lang.String[] strArray9 = org.antlr.v4.codegen.target.Python2Target.python2Keywords;
        python2Target4.targetCharValueEscape = strArray9;
        python2Target0.targetCharValueEscape = strArray9;
        java.lang.String str14 = python2Target0.getTargetStringLiteralFromString("_tset_tsetContext", false);
        org.antlr.v4.tool.ast.GrammarAST grammarAST15 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str16 = python2Target0.getLoopLabel(grammarAST15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(sTGroup1);
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Python2" + "'", str8, "Python2");
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "_tset_tsetContext" + "'", str14, "_tset_tsetContext");
    }

    @Test
    public void test1438() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1438");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String[] strArray2 = python2Target1.targetCharValueEscape;
        org.stringtemplate.v4.STGroup sTGroup3 = python2Target1.loadTemplates();
        org.antlr.v4.codegen.CodeGenerator codeGenerator4 = null;
        java.lang.String str7 = python2Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator4, "", false);
        boolean boolean8 = python2Target1.supportsOverloadedMethods();
        python2Target1.addBadWords();
        org.antlr.v4.codegen.model.RuleFunction ruleFunction10 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str11 = python2Target1.getRuleFunctionContextStructName(ruleFunction10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertNotNull(sTGroup3);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test1439() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1439");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str4 = python2Target1.encodeIntAsCharEscape(64);
        java.lang.String str5 = python2Target1.getLanguage();
        java.lang.String str8 = python2Target1.getTargetStringLiteralFromString("_@", false);
        java.lang.String str10 = python2Target1.encodeIntAsCharEscape((int) (byte) 100);
        java.lang.String str12 = python2Target1.getAltLabelContextStructName("\"_tset\"");
        boolean boolean13 = python2Target1.supportsOverloadedMethods();
        boolean boolean14 = python2Target1.templatesExist();
        boolean boolean15 = python2Target1.templatesExist();
        java.lang.String str16 = python2Target1.getVersion();
        org.antlr.v4.tool.ast.GrammarAST grammarAST17 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean18 = python2Target1.grammarSymbolCausesIssueInGeneratedCode(grammarAST17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "@" + "'", str4, "@");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Python2" + "'", str5, "Python2");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "_@" + "'", str8, "_@");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "d" + "'", str10, "d");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "\"_tset\"Context" + "'", str12, "\"_tset\"Context");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "4.5.2.1" + "'", str16, "4.5.2.1");
    }

    @Test
    public void test1440() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1440");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str5 = python2Target1.getTargetStringLiteralFromString("hi!", false);
        int int6 = python2Target1.getInlineTestSetWordSize();
        java.lang.String str8 = python2Target1.getTargetStringLiteralFromString("Hi!Context");
        int int9 = python2Target1.getSerializedATNSegmentLimit();
        java.lang.String str12 = python2Target1.getTargetStringLiteralFromString("_tset ", false);
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 64 + "'", int6 == 64);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\"Hi!Context\"" + "'", str8, "\"Hi!Context\"");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 2147483647 + "'", int9 == 2147483647);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "_tset " + "'", str12, "_tset ");
    }

    @Test
    public void test1441() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1441");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str4 = python2Target1.encodeIntAsCharEscape(64);
        java.lang.String str5 = python2Target1.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target7 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator6);
        java.lang.String[] strArray8 = python2Target7.targetCharValueEscape;
        java.lang.String str9 = python2Target7.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup10 = python2Target7.getTemplates();
        python2Target1.templates = sTGroup10;
        org.stringtemplate.v4.STGroup sTGroup12 = python2Target1.templates;
        java.util.Set<java.lang.String> strSet13 = python2Target1.badWords;
        boolean boolean14 = python2Target1.supportsOverloadedMethods();
        java.lang.String str16 = python2Target1.getListLabel("_@");
        org.antlr.v4.codegen.CodeGenerator codeGenerator17 = null;
        java.lang.String str20 = python2Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator17, "\"\"#\"\"", true);
        org.antlr.v4.tool.ast.GrammarAST grammarAST21 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str22 = python2Target1.getLoopLabel(grammarAST21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "@" + "'", str4, "@");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Python2" + "'", str5, "Python2");
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Python2" + "'", str9, "Python2");
        org.junit.Assert.assertNotNull(sTGroup10);
        org.junit.Assert.assertNotNull(sTGroup12);
        org.junit.Assert.assertNotNull(strSet13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "_@" + "'", str16, "_@");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "\"\\\"#\\\"\"" + "'", str20, "\"\\\"#\\\"\"");
    }

    @Test
    public void test1442() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1442");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str5 = python2Target1.getTargetStringLiteralFromString("hi!", false);
        java.lang.String str7 = python2Target1.getTargetStringLiteralFromString("\"hi!\"");
        python2Target1.addBadWords();
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "\"\\\"hi!\\\"\"" + "'", str7, "\"\\\"hi!\\\"\"");
    }

    @Test
    public void test1443() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1443");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str4 = python2Target1.encodeIntAsCharEscape(64);
        java.lang.String str5 = python2Target1.getLanguage();
        int int6 = python2Target1.getInlineTestSetWordSize();
        java.lang.String str8 = python2Target1.getImplicitSetLabel("_tset\\\\1");
        java.lang.String str10 = python2Target1.getListLabel("\"tset_tsetContex\"");
        org.antlr.v4.tool.ast.GrammarAST grammarAST11 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean12 = python2Target1.grammarSymbolCausesIssueInGeneratedCode(grammarAST11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "@" + "'", str4, "@");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Python2" + "'", str5, "Python2");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 64 + "'", int6 == 64);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "_tset_tset\\\\1" + "'", str8, "_tset_tset\\\\1");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\"tset_tsetContex\"" + "'", str10, "\"tset_tsetContex\"");
    }

    @Test
    public void test1444() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1444");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String[] strArray2 = python2Target1.targetCharValueEscape;
        java.lang.String str5 = python2Target1.getTargetStringLiteralFromString("Python2", false);
        java.lang.String str6 = python2Target1.getVersion();
        java.lang.String str8 = python2Target1.encodeIntAsCharEscape((int) (short) 1);
        java.lang.String str9 = python2Target1.getVersion();
        java.lang.String str10 = python2Target1.getLanguage();
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Python2" + "'", str5, "Python2");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "4.5.2.1" + "'", str6, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\\1" + "'", str8, "\\1");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "4.5.2.1" + "'", str9, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Python2" + "'", str10, "Python2");
    }

    @Test
    public void test1445() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1445");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String[] strArray2 = python2Target1.targetCharValueEscape;
        java.lang.String str3 = python2Target1.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup4 = python2Target1.getTemplates();
        org.antlr.v4.codegen.CodeGenerator codeGenerator5 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target6 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator5);
        java.util.Set<java.lang.String> strSet7 = python2Target6.badWords;
        python2Target1.badWords = strSet7;
        org.antlr.v4.codegen.CodeGenerator codeGenerator9 = python2Target1.gen;
        java.lang.String str10 = python2Target1.getLanguage();
        java.lang.String str11 = python2Target1.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator12 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target13 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator12);
        java.util.Set<java.lang.String> strSet14 = python2Target13.badWords;
        java.lang.String str17 = python2Target13.getTargetStringLiteralFromString("hi!", false);
        int int18 = python2Target13.getInlineTestSetWordSize();
        boolean boolean19 = python2Target13.wantsBaseVisitor();
        java.lang.String str20 = python2Target13.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup21 = python2Target13.loadTemplates();
        python2Target1.templates = sTGroup21;
        java.lang.String str24 = python2Target1.getAltLabelContextStructName("\"_tsethi!\"");
        java.util.Set<java.lang.String> strSet25 = python2Target1.getBadWords();
        python2Target1.language = "\"_tset__tset_tset\\\"\\\\\\\"\\\\\\\\\\\\\\\"hi!\\\\\\\\\\\\\\\"\\\\\\\"\\\"\"";
        int int28 = python2Target1.getInlineTestSetWordSize();
        org.antlr.v4.tool.Grammar grammar29 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str31 = python2Target1.getTokenTypeAsTargetLabel(grammar29, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Python2" + "'", str3, "Python2");
        org.junit.Assert.assertNotNull(sTGroup4);
        org.junit.Assert.assertNotNull(strSet7);
        org.junit.Assert.assertNull(codeGenerator9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Python2" + "'", str10, "Python2");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "4.5.2.1" + "'", str11, "4.5.2.1");
        org.junit.Assert.assertNotNull(strSet14);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 64 + "'", int18 == 64);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "Python2" + "'", str20, "Python2");
        org.junit.Assert.assertNotNull(sTGroup21);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "\"_tsethi!\"Context" + "'", str24, "\"_tsethi!\"Context");
        org.junit.Assert.assertNotNull(strSet25);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 64 + "'", int28 == 64);
    }

    @Test
    public void test1446() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1446");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String[] strArray2 = python2Target1.targetCharValueEscape;
        java.lang.String str3 = python2Target1.getLanguage();
        java.lang.String str6 = python2Target1.getTargetStringLiteralFromString("", true);
        java.lang.String str7 = python2Target1.language;
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Python2" + "'", str3, "Python2");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\"\"" + "'", str6, "\"\"");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Python2" + "'", str7, "Python2");
    }

    @Test
    public void test1447() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1447");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str4 = python2Target1.encodeIntAsCharEscape(64);
        java.lang.String str5 = python2Target1.getLanguage();
        java.lang.String str8 = python2Target1.getTargetStringLiteralFromString("_@", false);
        java.lang.String str10 = python2Target1.encodeIntAsCharEscape((int) (byte) 100);
        java.lang.String str12 = python2Target1.getAltLabelContextStructName("\"_tset\"");
        org.antlr.v4.tool.Grammar grammar13 = null;
        org.stringtemplate.v4.ST sT14 = null;
        // The following exception was thrown during execution in test generation
        try {
            python2Target1.genFile(grammar13, sT14, "__\"_tset\\\\\\\"\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"hi!\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"\\\\\\\"\"Context");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "@" + "'", str4, "@");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Python2" + "'", str5, "Python2");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "_@" + "'", str8, "_@");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "d" + "'", str10, "d");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "\"_tset\"Context" + "'", str12, "\"_tset\"Context");
    }

    @Test
    public void test1448() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1448");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str5 = python2Target1.getTargetStringLiteralFromString("hi!", false);
        java.lang.String str7 = python2Target1.getImplicitRuleLabel("@");
        python2Target1.language = "hi!";
        boolean boolean10 = python2Target1.supportsOverloadedMethods();
        java.lang.String str12 = python2Target1.getTargetStringLiteralFromString("");
        java.lang.String str14 = python2Target1.getImplicitSetLabel("\\1");
        java.util.Set<java.lang.String> strSet15 = python2Target1.getBadWords();
        int int16 = python2Target1.getSerializedATNSegmentLimit();
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "_@" + "'", str7, "_@");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "\"\"" + "'", str12, "\"\"");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "_tset\\1" + "'", str14, "_tset\\1");
        org.junit.Assert.assertNotNull(strSet15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 2147483647 + "'", int16 == 2147483647);
    }

    @Test
    public void test1449() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1449");
        org.antlr.v4.codegen.target.Python2Target python2Target0 = new org.antlr.v4.codegen.target.Python2Target();
        java.lang.String str2 = python2Target0.getTargetStringLiteralFromString("hi!");
        java.lang.String str3 = python2Target0.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator4 = null;
        java.lang.String str7 = python2Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator4, "_tset_tsetContext", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = python2Target0.getCodeGenerator();
        java.lang.String str11 = python2Target0.getTargetStringLiteralFromString("_\"_tset\\\\\\\"\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"hi!\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"\\\\\\\"\"", false);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str13 = python2Target0.getImplicitSetLabel("");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "\"hi!\"" + "'", str2, "\"hi!\"");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "4.5.2.1" + "'", str3, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "\"tset_tsetContex\"" + "'", str7, "\"tset_tsetContex\"");
        org.junit.Assert.assertNull(codeGenerator8);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "_\"_tset\\\\\\\"\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"hi!\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"\\\\\\\"\"" + "'", str11, "_\"_tset\\\\\\\"\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"hi!\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"\\\\\\\"\"");
    }

    @Test
    public void test1450() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1450");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str4 = python2Target1.encodeIntAsCharEscape(64);
        java.lang.String str5 = python2Target1.getLanguage();
        java.lang.String str8 = python2Target1.getTargetStringLiteralFromString("_@", false);
        org.stringtemplate.v4.STGroup sTGroup9 = python2Target1.loadTemplates();
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = python2Target1.gen;
        org.antlr.v4.codegen.target.Python2Target python2Target11 = new org.antlr.v4.codegen.target.Python2Target();
        org.antlr.v4.codegen.CodeGenerator codeGenerator12 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target13 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator12);
        java.util.Set<java.lang.String> strSet14 = python2Target13.badWords;
        java.lang.String str16 = python2Target13.encodeIntAsCharEscape(64);
        java.lang.String str17 = python2Target13.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator18 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target19 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator18);
        java.lang.String[] strArray20 = python2Target19.targetCharValueEscape;
        java.lang.String str21 = python2Target19.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup22 = python2Target19.getTemplates();
        python2Target13.templates = sTGroup22;
        org.stringtemplate.v4.STGroup sTGroup24 = python2Target13.templates;
        java.util.Set<java.lang.String> strSet25 = python2Target13.badWords;
        java.util.Set<java.lang.String> strSet26 = python2Target13.getBadWords();
        boolean boolean27 = python2Target13.supportsOverloadedMethods();
        java.util.Set<java.lang.String> strSet28 = python2Target13.getBadWords();
        org.stringtemplate.v4.STGroup sTGroup29 = python2Target13.getTemplates();
        python2Target11.templates = sTGroup29;
        python2Target1.templates = sTGroup29;
        java.lang.String str33 = python2Target1.getAltLabelContextStructName("Hi!Context\\\"ContextContex");
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "@" + "'", str4, "@");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Python2" + "'", str5, "Python2");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "_@" + "'", str8, "_@");
        org.junit.Assert.assertNotNull(sTGroup9);
        org.junit.Assert.assertNull(codeGenerator10);
        org.junit.Assert.assertNotNull(strSet14);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "@" + "'", str16, "@");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Python2" + "'", str17, "Python2");
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Python2" + "'", str21, "Python2");
        org.junit.Assert.assertNotNull(sTGroup22);
        org.junit.Assert.assertNotNull(sTGroup24);
        org.junit.Assert.assertNotNull(strSet25);
        org.junit.Assert.assertNotNull(strSet26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(strSet28);
        org.junit.Assert.assertNotNull(sTGroup29);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "Hi!Context\\\"ContextContexContext" + "'", str33, "Hi!Context\\\"ContextContexContext");
    }

    @Test
    public void test1451() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1451");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str4 = python2Target1.encodeIntAsCharEscape(64);
        java.lang.String str5 = python2Target1.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target7 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator6);
        java.lang.String[] strArray8 = python2Target7.targetCharValueEscape;
        java.lang.String str9 = python2Target7.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup10 = python2Target7.getTemplates();
        python2Target1.templates = sTGroup10;
        org.stringtemplate.v4.STGroup sTGroup12 = python2Target1.templates;
        java.util.Set<java.lang.String> strSet13 = python2Target1.badWords;
        java.util.Set<java.lang.String> strSet14 = python2Target1.getBadWords();
        boolean boolean15 = python2Target1.supportsOverloadedMethods();
        java.util.Set<java.lang.String> strSet16 = python2Target1.getBadWords();
        java.lang.String str18 = python2Target1.getListLabel("\\n");
        org.antlr.v4.codegen.CodeGenerator codeGenerator19 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target20 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator19);
        java.lang.String[] strArray21 = python2Target20.targetCharValueEscape;
        java.lang.String str22 = python2Target20.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup23 = python2Target20.templates;
        java.lang.String str25 = python2Target20.getListLabel("\\n");
        java.lang.String[] strArray26 = python2Target20.targetCharValueEscape;
        org.antlr.v4.tool.Grammar grammar27 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator28 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target29 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator28);
        java.lang.String[] strArray30 = python2Target29.targetCharValueEscape;
        java.lang.String str33 = python2Target29.getTargetStringLiteralFromString("_tset\\1", false);
        org.antlr.v4.tool.Grammar grammar34 = null;
        int[] intArray35 = new int[] {};
        java.lang.String[] strArray36 = python2Target29.getTokenTypesAsTargetLabels(grammar34, intArray35);
        java.lang.String[] strArray37 = python2Target20.getTokenTypesAsTargetLabels(grammar27, intArray35);
        org.antlr.v4.tool.Grammar grammar38 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator39 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target40 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator39);
        java.lang.String[] strArray41 = python2Target40.targetCharValueEscape;
        java.lang.String str44 = python2Target40.getTargetStringLiteralFromString("_tset\\1", false);
        org.antlr.v4.tool.Grammar grammar45 = null;
        int[] intArray46 = new int[] {};
        java.lang.String[] strArray47 = python2Target40.getTokenTypesAsTargetLabels(grammar45, intArray46);
        java.lang.String[] strArray48 = python2Target20.getTokenTypesAsTargetLabels(grammar38, intArray46);
        python2Target1.targetCharValueEscape = strArray48;
        org.antlr.v4.codegen.CodeGenerator codeGenerator50 = null;
        python2Target1.gen = codeGenerator50;
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "@" + "'", str4, "@");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Python2" + "'", str5, "Python2");
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Python2" + "'", str9, "Python2");
        org.junit.Assert.assertNotNull(sTGroup10);
        org.junit.Assert.assertNotNull(sTGroup12);
        org.junit.Assert.assertNotNull(strSet13);
        org.junit.Assert.assertNotNull(strSet14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "\\n" + "'", str18, "\\n");
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "Python2" + "'", str22, "Python2");
        org.junit.Assert.assertNull(sTGroup23);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "\\n" + "'", str25, "\\n");
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "_tset\\\\1" + "'", str33, "_tset\\\\1");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[]");
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "_tset\\\\1" + "'", str44, "_tset\\\\1");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[]");
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertNotNull(strArray48);
    }

    @Test
    public void test1452() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1452");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str5 = python2Target1.getTargetStringLiteralFromString("hi!", false);
        int int6 = python2Target1.getInlineTestSetWordSize();
        java.lang.String str8 = python2Target1.getTargetStringLiteralFromString("Hi!Context");
        java.util.Set<java.lang.String> strSet9 = python2Target1.badWords;
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = null;
        java.lang.String str13 = python2Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator10, "hi!", false);
        java.util.Set<java.lang.String> strSet14 = python2Target1.badWords;
        java.util.Set<java.lang.String> strSet15 = python2Target1.getBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator16 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target17 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator16);
        java.lang.String[] strArray18 = python2Target17.targetCharValueEscape;
        java.lang.String str19 = python2Target17.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup20 = python2Target17.getTemplates();
        org.antlr.v4.codegen.CodeGenerator codeGenerator21 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target22 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator21);
        java.util.Set<java.lang.String> strSet23 = python2Target22.badWords;
        python2Target17.badWords = strSet23;
        org.antlr.v4.codegen.CodeGenerator codeGenerator25 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target26 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator25);
        java.util.Set<java.lang.String> strSet27 = python2Target26.badWords;
        java.lang.String str30 = python2Target26.getTargetStringLiteralFromString("hi!", false);
        java.lang.String str32 = python2Target26.getImplicitRuleLabel("@");
        python2Target26.language = "hi!";
        org.antlr.v4.codegen.CodeGenerator codeGenerator35 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target36 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator35);
        java.util.Set<java.lang.String> strSet37 = python2Target36.badWords;
        java.lang.String str39 = python2Target36.encodeIntAsCharEscape(64);
        java.lang.String str40 = python2Target36.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator41 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target42 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator41);
        java.lang.String[] strArray43 = python2Target42.targetCharValueEscape;
        java.lang.String str44 = python2Target42.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup45 = python2Target42.getTemplates();
        python2Target36.templates = sTGroup45;
        org.antlr.v4.codegen.CodeGenerator codeGenerator47 = python2Target36.getCodeGenerator();
        org.stringtemplate.v4.STGroup sTGroup48 = python2Target36.loadTemplates();
        python2Target26.templates = sTGroup48;
        python2Target17.templates = sTGroup48;
        org.antlr.v4.codegen.CodeGenerator codeGenerator51 = null;
        java.lang.String str54 = python2Target17.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator51, "@", false);
        org.stringtemplate.v4.STGroup sTGroup55 = python2Target17.loadTemplates();
        python2Target1.templates = sTGroup55;
        org.antlr.v4.tool.Grammar grammar57 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str59 = python2Target1.getTokenTypeAsTargetLabel(grammar57, (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 64 + "'", int6 == 64);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\"Hi!Context\"" + "'", str8, "\"Hi!Context\"");
        org.junit.Assert.assertNotNull(strSet9);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "i" + "'", str13, "i");
        org.junit.Assert.assertNotNull(strSet14);
        org.junit.Assert.assertNotNull(strSet15);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Python2" + "'", str19, "Python2");
        org.junit.Assert.assertNotNull(sTGroup20);
        org.junit.Assert.assertNotNull(strSet23);
        org.junit.Assert.assertNotNull(strSet27);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "hi!" + "'", str30, "hi!");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "_@" + "'", str32, "_@");
        org.junit.Assert.assertNotNull(strSet37);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "@" + "'", str39, "@");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "Python2" + "'", str40, "Python2");
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "Python2" + "'", str44, "Python2");
        org.junit.Assert.assertNotNull(sTGroup45);
        org.junit.Assert.assertNull(codeGenerator47);
        org.junit.Assert.assertNotNull(sTGroup48);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "" + "'", str54, "");
        org.junit.Assert.assertNotNull(sTGroup55);
    }

    @Test
    public void test1453() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1453");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str4 = python2Target1.encodeIntAsCharEscape(64);
        java.lang.String str5 = python2Target1.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target7 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator6);
        java.lang.String[] strArray8 = python2Target7.targetCharValueEscape;
        java.lang.String str9 = python2Target7.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup10 = python2Target7.getTemplates();
        python2Target1.templates = sTGroup10;
        org.stringtemplate.v4.STGroup sTGroup12 = python2Target1.templates;
        java.util.Set<java.lang.String> strSet13 = python2Target1.badWords;
        java.util.Set<java.lang.String> strSet14 = python2Target1.getBadWords();
        org.antlr.v4.tool.Grammar grammar15 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator16 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target17 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator16);
        java.util.Set<java.lang.String> strSet18 = python2Target17.badWords;
        java.lang.String str20 = python2Target17.encodeIntAsCharEscape(64);
        java.lang.String str21 = python2Target17.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator22 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target23 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator22);
        java.lang.String[] strArray24 = python2Target23.targetCharValueEscape;
        java.lang.String str25 = python2Target23.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup26 = python2Target23.getTemplates();
        python2Target17.templates = sTGroup26;
        org.stringtemplate.v4.STGroup sTGroup28 = python2Target17.templates;
        java.util.Set<java.lang.String> strSet29 = python2Target17.badWords;
        java.util.Set<java.lang.String> strSet30 = python2Target17.getBadWords();
        boolean boolean31 = python2Target17.supportsOverloadedMethods();
        java.util.Set<java.lang.String> strSet32 = python2Target17.getBadWords();
        org.antlr.v4.tool.Grammar grammar33 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator34 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target35 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator34);
        java.lang.String[] strArray36 = python2Target35.targetCharValueEscape;
        java.lang.String str39 = python2Target35.getTargetStringLiteralFromString("_tset\\1", false);
        org.antlr.v4.tool.Grammar grammar40 = null;
        int[] intArray41 = new int[] {};
        java.lang.String[] strArray42 = python2Target35.getTokenTypesAsTargetLabels(grammar40, intArray41);
        java.lang.String[] strArray43 = python2Target17.getTokenTypesAsTargetLabels(grammar33, intArray41);
        java.lang.String[] strArray44 = python2Target1.getTokenTypesAsTargetLabels(grammar15, intArray41);
        org.antlr.v4.codegen.CodeGenerator codeGenerator45 = null;
        java.lang.String str48 = python2Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator45, "\"Hi!Context\"Context", true);
        org.stringtemplate.v4.STGroup sTGroup49 = python2Target1.templates;
        java.lang.String str51 = python2Target1.getImplicitSetLabel("_\"tsetContex\"");
        org.antlr.v4.tool.Grammar grammar52 = null;
        org.stringtemplate.v4.ST sT53 = null;
        // The following exception was thrown during execution in test generation
        try {
            python2Target1.genListenerFile(grammar52, sT53);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "@" + "'", str4, "@");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Python2" + "'", str5, "Python2");
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Python2" + "'", str9, "Python2");
        org.junit.Assert.assertNotNull(sTGroup10);
        org.junit.Assert.assertNotNull(sTGroup12);
        org.junit.Assert.assertNotNull(strSet13);
        org.junit.Assert.assertNotNull(strSet14);
        org.junit.Assert.assertNotNull(strSet18);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "@" + "'", str20, "@");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Python2" + "'", str21, "Python2");
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Python2" + "'", str25, "Python2");
        org.junit.Assert.assertNotNull(sTGroup26);
        org.junit.Assert.assertNotNull(sTGroup28);
        org.junit.Assert.assertNotNull(strSet29);
        org.junit.Assert.assertNotNull(strSet30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(strSet32);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "_tset\\\\1" + "'", str39, "_tset\\\\1");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[]");
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "\"Hi!Context\\\"Contex\"" + "'", str48, "\"Hi!Context\\\"Contex\"");
        org.junit.Assert.assertNotNull(sTGroup49);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "_tset_\"tsetContex\"" + "'", str51, "_tset_\"tsetContex\"");
    }

    @Test
    public void test1454() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1454");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str4 = python2Target1.encodeIntAsCharEscape(64);
        java.lang.String str5 = python2Target1.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup6 = python2Target1.getTemplates();
        java.lang.String str7 = python2Target1.language;
        int int8 = python2Target1.getSerializedATNSegmentLimit();
        org.antlr.v4.codegen.CodeGenerator codeGenerator9 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target10 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator9);
        java.util.Set<java.lang.String> strSet11 = python2Target10.badWords;
        java.lang.String str13 = python2Target10.encodeIntAsCharEscape(64);
        java.lang.String str14 = python2Target10.getLanguage();
        java.lang.String str15 = python2Target10.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup16 = python2Target10.getTemplates();
        python2Target1.templates = sTGroup16;
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "@" + "'", str4, "@");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Python2" + "'", str5, "Python2");
        org.junit.Assert.assertNotNull(sTGroup6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Python2" + "'", str7, "Python2");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 2147483647 + "'", int8 == 2147483647);
        org.junit.Assert.assertNotNull(strSet11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "@" + "'", str13, "@");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Python2" + "'", str14, "Python2");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Python2" + "'", str15, "Python2");
        org.junit.Assert.assertNotNull(sTGroup16);
    }

    @Test
    public void test1455() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1455");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        boolean boolean2 = python2Target1.templatesExist();
        java.lang.String str3 = python2Target1.getVersion();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "4.5.2.1" + "'", str3, "4.5.2.1");
    }

    @Test
    public void test1456() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1456");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String[] strArray2 = python2Target1.targetCharValueEscape;
        java.lang.String str3 = python2Target1.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup4 = python2Target1.loadTemplates();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str6 = python2Target1.getElementName("\\\"_tset_tset_tsetContext\\\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Python2" + "'", str3, "Python2");
        org.junit.Assert.assertNotNull(sTGroup4);
    }

    @Test
    public void test1457() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1457");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str4 = python2Target1.encodeIntAsCharEscape(64);
        java.lang.String str5 = python2Target1.getLanguage();
        java.lang.String str8 = python2Target1.getTargetStringLiteralFromString("_@", false);
        java.lang.String str10 = python2Target1.encodeIntAsCharEscape((int) (byte) 100);
        java.lang.String str12 = python2Target1.getAltLabelContextStructName("\"_tset\"");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str14 = python2Target1.getElementName("\"\\\".5.2.\\\"\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "@" + "'", str4, "@");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Python2" + "'", str5, "Python2");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "_@" + "'", str8, "_@");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "d" + "'", str10, "d");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "\"_tset\"Context" + "'", str12, "\"_tset\"Context");
    }

    @Test
    public void test1458() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1458");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str4 = python2Target1.encodeIntAsCharEscape(64);
        java.lang.String str6 = python2Target1.getAltLabelContextStructName("Python2");
        python2Target1.language = "";
        org.antlr.v4.codegen.CodeGenerator codeGenerator9 = python2Target1.getCodeGenerator();
        org.antlr.v4.tool.Grammar grammar10 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str12 = python2Target1.getTokenTypeAsTargetLabel(grammar10, 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "@" + "'", str4, "@");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Python2Context" + "'", str6, "Python2Context");
        org.junit.Assert.assertNull(codeGenerator9);
    }

    @Test
    public void test1459() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1459");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String[] strArray2 = python2Target1.targetCharValueEscape;
        java.lang.String str3 = python2Target1.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup4 = python2Target1.getTemplates();
        org.antlr.v4.codegen.CodeGenerator codeGenerator5 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target6 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator5);
        java.util.Set<java.lang.String> strSet7 = python2Target6.badWords;
        python2Target1.badWords = strSet7;
        org.antlr.v4.codegen.CodeGenerator codeGenerator9 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target10 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator9);
        java.util.Set<java.lang.String> strSet11 = python2Target10.badWords;
        java.lang.String str14 = python2Target10.getTargetStringLiteralFromString("hi!", false);
        java.lang.String str16 = python2Target10.getImplicitRuleLabel("@");
        python2Target10.language = "hi!";
        org.antlr.v4.codegen.CodeGenerator codeGenerator19 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target20 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator19);
        java.util.Set<java.lang.String> strSet21 = python2Target20.badWords;
        java.lang.String str23 = python2Target20.encodeIntAsCharEscape(64);
        java.lang.String str24 = python2Target20.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator25 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target26 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator25);
        java.lang.String[] strArray27 = python2Target26.targetCharValueEscape;
        java.lang.String str28 = python2Target26.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup29 = python2Target26.getTemplates();
        python2Target20.templates = sTGroup29;
        org.antlr.v4.codegen.CodeGenerator codeGenerator31 = python2Target20.getCodeGenerator();
        org.stringtemplate.v4.STGroup sTGroup32 = python2Target20.loadTemplates();
        python2Target10.templates = sTGroup32;
        python2Target1.templates = sTGroup32;
        org.antlr.v4.codegen.CodeGenerator codeGenerator35 = null;
        java.lang.String str38 = python2Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator35, "@", false);
        java.util.Set<java.lang.String> strSet39 = python2Target1.getBadWords();
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Python2" + "'", str3, "Python2");
        org.junit.Assert.assertNotNull(sTGroup4);
        org.junit.Assert.assertNotNull(strSet7);
        org.junit.Assert.assertNotNull(strSet11);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "_@" + "'", str16, "_@");
        org.junit.Assert.assertNotNull(strSet21);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "@" + "'", str23, "@");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "Python2" + "'", str24, "Python2");
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "Python2" + "'", str28, "Python2");
        org.junit.Assert.assertNotNull(sTGroup29);
        org.junit.Assert.assertNull(codeGenerator31);
        org.junit.Assert.assertNotNull(sTGroup32);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "" + "'", str38, "");
        org.junit.Assert.assertNotNull(strSet39);
    }

    @Test
    public void test1460() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1460");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str4 = python2Target1.encodeIntAsCharEscape(64);
        java.lang.String str5 = python2Target1.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target7 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator6);
        java.lang.String[] strArray8 = python2Target7.targetCharValueEscape;
        java.lang.String str9 = python2Target7.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup10 = python2Target7.getTemplates();
        python2Target1.templates = sTGroup10;
        org.stringtemplate.v4.STGroup sTGroup12 = python2Target1.templates;
        java.util.Set<java.lang.String> strSet13 = python2Target1.badWords;
        java.util.Set<java.lang.String> strSet14 = python2Target1.getBadWords();
        int int15 = python2Target1.getSerializedATNSegmentLimit();
        java.lang.String[] strArray16 = python2Target1.targetCharValueEscape;
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "@" + "'", str4, "@");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Python2" + "'", str5, "Python2");
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Python2" + "'", str9, "Python2");
        org.junit.Assert.assertNotNull(sTGroup10);
        org.junit.Assert.assertNotNull(sTGroup12);
        org.junit.Assert.assertNotNull(strSet13);
        org.junit.Assert.assertNotNull(strSet14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 2147483647 + "'", int15 == 2147483647);
        org.junit.Assert.assertNotNull(strArray16);
    }

    @Test
    public void test1461() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1461");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String[] strArray4 = new java.lang.String[] { "Python2" };
        org.antlr.v4.codegen.target.Python2Target.python2Keywords = strArray4;
        python2Target1.targetCharValueEscape = strArray4;
        org.stringtemplate.v4.STGroup sTGroup7 = python2Target1.loadTemplates();
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertNotNull(sTGroup7);
    }

    @Test
    public void test1462() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1462");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        boolean boolean3 = python2Target1.wantsBaseVisitor();
        java.lang.String[] strArray4 = python2Target1.targetCharValueEscape;
        org.antlr.v4.codegen.CodeGenerator codeGenerator5 = python2Target1.getCodeGenerator();
        java.lang.String str6 = python2Target1.getVersion();
        java.lang.String str8 = python2Target1.getListLabel("\\\"_tset_tset_tsetContext\\\"\\\"ContexContext");
        boolean boolean9 = python2Target1.wantsBaseVisitor();
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertNull(codeGenerator5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "4.5.2.1" + "'", str6, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\\\"_tset_tset_tsetContext\\\"\\\"ContexContext" + "'", str8, "\\\"_tset_tset_tsetContext\\\"\\\"ContexContext");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test1463() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1463");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String[] strArray2 = python2Target1.targetCharValueEscape;
        java.lang.String str3 = python2Target1.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup4 = python2Target1.getTemplates();
        org.antlr.v4.codegen.CodeGenerator codeGenerator5 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target6 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator5);
        java.util.Set<java.lang.String> strSet7 = python2Target6.badWords;
        python2Target1.badWords = strSet7;
        java.lang.String str10 = python2Target1.getAltLabelContextStructName("\"Hi!Context\"");
        java.lang.String str11 = python2Target1.getLanguage();
        org.antlr.v4.tool.Grammar grammar12 = null;
        org.stringtemplate.v4.ST sT13 = null;
        python2Target1.genRecognizerHeaderFile(grammar12, sT13, "\"Hi!Context\"ContextContext");
        int int16 = python2Target1.getInlineTestSetWordSize();
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Python2" + "'", str3, "Python2");
        org.junit.Assert.assertNotNull(sTGroup4);
        org.junit.Assert.assertNotNull(strSet7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\"Hi!Context\"Context" + "'", str10, "\"Hi!Context\"Context");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Python2" + "'", str11, "Python2");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 64 + "'", int16 == 64);
    }

    @Test
    public void test1464() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1464");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String[] strArray2 = python2Target1.targetCharValueEscape;
        java.lang.String str3 = python2Target1.getLanguage();
        java.lang.String str6 = python2Target1.getTargetStringLiteralFromString("_tset", true);
        java.util.Set<java.lang.String> strSet7 = python2Target1.badWords;
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = python2Target1.gen;
        org.antlr.v4.codegen.model.RuleFunction ruleFunction9 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str10 = python2Target1.getRuleFunctionContextStructName(ruleFunction9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Python2" + "'", str3, "Python2");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\"_tset\"" + "'", str6, "\"_tset\"");
        org.junit.Assert.assertNotNull(strSet7);
        org.junit.Assert.assertNull(codeGenerator8);
    }

    @Test
    public void test1465() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1465");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String[] strArray2 = python2Target1.targetCharValueEscape;
        java.lang.String str3 = python2Target1.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup4 = python2Target1.templates;
        java.lang.String str6 = python2Target1.getListLabel("\\n");
        org.antlr.v4.tool.Grammar grammar7 = null;
        org.stringtemplate.v4.ST sT8 = null;
        python2Target1.genRecognizerHeaderFile(grammar7, sT8, "\"4.5.2.1\"");
        org.antlr.v4.codegen.target.Python2Target python2Target11 = new org.antlr.v4.codegen.target.Python2Target();
        org.antlr.v4.codegen.CodeGenerator codeGenerator12 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target13 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator12);
        java.util.Set<java.lang.String> strSet14 = python2Target13.badWords;
        java.lang.String str16 = python2Target13.encodeIntAsCharEscape(64);
        java.lang.String str17 = python2Target13.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator18 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target19 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator18);
        java.lang.String[] strArray20 = python2Target19.targetCharValueEscape;
        java.lang.String str21 = python2Target19.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup22 = python2Target19.getTemplates();
        python2Target13.templates = sTGroup22;
        org.stringtemplate.v4.STGroup sTGroup24 = python2Target13.templates;
        java.util.Set<java.lang.String> strSet25 = python2Target13.badWords;
        java.util.Set<java.lang.String> strSet26 = python2Target13.getBadWords();
        boolean boolean27 = python2Target13.supportsOverloadedMethods();
        java.util.Set<java.lang.String> strSet28 = python2Target13.getBadWords();
        org.stringtemplate.v4.STGroup sTGroup29 = python2Target13.getTemplates();
        python2Target11.templates = sTGroup29;
        python2Target1.templates = sTGroup29;
        boolean boolean32 = python2Target1.templatesExist();
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Python2" + "'", str3, "Python2");
        org.junit.Assert.assertNull(sTGroup4);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\\n" + "'", str6, "\\n");
        org.junit.Assert.assertNotNull(strSet14);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "@" + "'", str16, "@");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Python2" + "'", str17, "Python2");
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Python2" + "'", str21, "Python2");
        org.junit.Assert.assertNotNull(sTGroup22);
        org.junit.Assert.assertNotNull(sTGroup24);
        org.junit.Assert.assertNotNull(strSet25);
        org.junit.Assert.assertNotNull(strSet26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(strSet28);
        org.junit.Assert.assertNotNull(sTGroup29);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
    }

    @Test
    public void test1466() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1466");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str5 = python2Target1.getTargetStringLiteralFromString("hi!", false);
        int int6 = python2Target1.getInlineTestSetWordSize();
        java.lang.String str8 = python2Target1.getImplicitSetLabel("\\1");
        java.lang.String str10 = python2Target1.getAltLabelContextStructName("_tset\\1");
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 64 + "'", int6 == 64);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "_tset\\1" + "'", str8, "_tset\\1");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "_tset\\1Context" + "'", str10, "_tset\\1Context");
    }

    @Test
    public void test1467() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1467");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str4 = python2Target1.encodeIntAsCharEscape(64);
        java.lang.String str5 = python2Target1.getLanguage();
        java.lang.String str8 = python2Target1.getTargetStringLiteralFromString("_@", false);
        org.antlr.v4.codegen.CodeGenerator codeGenerator9 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target10 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator9);
        java.lang.String str12 = python2Target10.getImplicitSetLabel("");
        java.lang.String[] strArray13 = python2Target10.targetCharValueEscape;
        python2Target1.targetCharValueEscape = strArray13;
        org.stringtemplate.v4.STGroup sTGroup15 = python2Target1.templates;
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "@" + "'", str4, "@");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Python2" + "'", str5, "Python2");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "_@" + "'", str8, "_@");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "_tset" + "'", str12, "_tset");
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertNull(sTGroup15);
    }

    @Test
    public void test1468() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1468");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str4 = python2Target1.encodeIntAsCharEscape(64);
        java.lang.String str5 = python2Target1.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target7 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator6);
        java.lang.String[] strArray8 = python2Target7.targetCharValueEscape;
        java.lang.String str9 = python2Target7.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup10 = python2Target7.getTemplates();
        python2Target1.templates = sTGroup10;
        org.antlr.v4.tool.Grammar grammar12 = null;
        org.stringtemplate.v4.ST sT13 = null;
        python2Target1.genRecognizerHeaderFile(grammar12, sT13, "\"_tset\"");
        java.util.Set<java.lang.String> strSet16 = python2Target1.getBadWords();
        org.stringtemplate.v4.STGroup sTGroup17 = python2Target1.loadTemplates();
        java.lang.String str19 = python2Target1.getAltLabelContextStructName("_tset\"\\\"\\\\\\\"hi!\\\\\\\"\\\"\"");
        java.lang.String str20 = python2Target1.language;
        java.lang.String str21 = python2Target1.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator22 = null;
        python2Target1.gen = codeGenerator22;
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "@" + "'", str4, "@");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Python2" + "'", str5, "Python2");
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Python2" + "'", str9, "Python2");
        org.junit.Assert.assertNotNull(sTGroup10);
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertNotNull(sTGroup17);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "_tset\"\\\"\\\\\\\"hi!\\\\\\\"\\\"\"Context" + "'", str19, "_tset\"\\\"\\\\\\\"hi!\\\\\\\"\\\"\"Context");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "Python2" + "'", str20, "Python2");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Python2" + "'", str21, "Python2");
    }

    @Test
    public void test1469() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1469");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str5 = python2Target1.getTargetStringLiteralFromString("4.5.2.1", true);
        boolean boolean6 = python2Target1.templatesExist();
        org.stringtemplate.v4.STGroup sTGroup7 = python2Target1.templates;
        org.stringtemplate.v4.STGroup sTGroup8 = python2Target1.templates;
        org.stringtemplate.v4.STGroup sTGroup9 = python2Target1.getTemplates();
        org.antlr.v4.tool.Grammar grammar10 = null;
        org.stringtemplate.v4.ST sT11 = null;
        python2Target1.genRecognizerHeaderFile(grammar10, sT11, "__@");
        org.stringtemplate.v4.STGroup sTGroup14 = python2Target1.templates;
        org.antlr.v4.codegen.CodeGenerator codeGenerator15 = null;
        python2Target1.gen = codeGenerator15;
        java.lang.Class<?> wildcardClass17 = python2Target1.getClass();
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "\"4.5.2.1\"" + "'", str5, "\"4.5.2.1\"");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(sTGroup7);
        org.junit.Assert.assertNull(sTGroup8);
        org.junit.Assert.assertNotNull(sTGroup9);
        org.junit.Assert.assertNotNull(sTGroup14);
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test1470() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1470");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str4 = python2Target1.encodeIntAsCharEscape(64);
        java.lang.String str5 = python2Target1.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target7 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator6);
        java.lang.String[] strArray8 = python2Target7.targetCharValueEscape;
        java.lang.String str9 = python2Target7.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup10 = python2Target7.getTemplates();
        python2Target1.templates = sTGroup10;
        java.util.Set<java.lang.String> strSet12 = python2Target1.getBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator13 = python2Target1.getCodeGenerator();
        java.util.Set<java.lang.String> strSet14 = python2Target1.getBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator15 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target16 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator15);
        java.util.Set<java.lang.String> strSet17 = python2Target16.badWords;
        java.lang.String str19 = python2Target16.encodeIntAsCharEscape(64);
        java.lang.String str20 = python2Target16.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator21 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target22 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator21);
        java.lang.String[] strArray23 = python2Target22.targetCharValueEscape;
        java.lang.String str24 = python2Target22.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup25 = python2Target22.getTemplates();
        python2Target16.templates = sTGroup25;
        org.antlr.v4.codegen.CodeGenerator codeGenerator27 = python2Target16.getCodeGenerator();
        org.stringtemplate.v4.STGroup sTGroup28 = python2Target16.loadTemplates();
        python2Target1.templates = sTGroup28;
        org.stringtemplate.v4.STGroup sTGroup30 = python2Target1.getTemplates();
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "@" + "'", str4, "@");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Python2" + "'", str5, "Python2");
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Python2" + "'", str9, "Python2");
        org.junit.Assert.assertNotNull(sTGroup10);
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertNull(codeGenerator13);
        org.junit.Assert.assertNotNull(strSet14);
        org.junit.Assert.assertNotNull(strSet17);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "@" + "'", str19, "@");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "Python2" + "'", str20, "Python2");
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "Python2" + "'", str24, "Python2");
        org.junit.Assert.assertNotNull(sTGroup25);
        org.junit.Assert.assertNull(codeGenerator27);
        org.junit.Assert.assertNotNull(sTGroup28);
        org.junit.Assert.assertNotNull(sTGroup30);
    }

    @Test
    public void test1471() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1471");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String[] strArray2 = python2Target1.targetCharValueEscape;
        org.stringtemplate.v4.STGroup sTGroup3 = python2Target1.loadTemplates();
        org.antlr.v4.codegen.CodeGenerator codeGenerator4 = null;
        java.lang.String str7 = python2Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator4, "", false);
        boolean boolean8 = python2Target1.supportsOverloadedMethods();
        python2Target1.addBadWords();
        java.util.Set<java.lang.String> strSet10 = python2Target1.badWords;
        org.antlr.v4.codegen.CodeGenerator codeGenerator11 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target12 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator11);
        java.util.Set<java.lang.String> strSet13 = python2Target12.badWords;
        java.lang.String str15 = python2Target12.encodeIntAsCharEscape(64);
        java.lang.String str16 = python2Target12.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator17 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target18 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator17);
        java.lang.String[] strArray19 = python2Target18.targetCharValueEscape;
        java.lang.String str20 = python2Target18.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup21 = python2Target18.getTemplates();
        python2Target12.templates = sTGroup21;
        org.stringtemplate.v4.STGroup sTGroup23 = python2Target12.templates;
        java.util.Set<java.lang.String> strSet24 = python2Target12.badWords;
        python2Target1.badWords = strSet24;
        java.lang.Class<?> wildcardClass26 = python2Target1.getClass();
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertNotNull(sTGroup3);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(strSet10);
        org.junit.Assert.assertNotNull(strSet13);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "@" + "'", str15, "@");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Python2" + "'", str16, "Python2");
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "Python2" + "'", str20, "Python2");
        org.junit.Assert.assertNotNull(sTGroup21);
        org.junit.Assert.assertNotNull(sTGroup23);
        org.junit.Assert.assertNotNull(strSet24);
        org.junit.Assert.assertNotNull(wildcardClass26);
    }

    @Test
    public void test1472() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1472");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String str3 = python2Target1.getImplicitSetLabel("");
        org.antlr.v4.tool.Grammar grammar4 = null;
        org.stringtemplate.v4.ST sT5 = null;
        python2Target1.genRecognizerHeaderFile(grammar4, sT5, "_tset");
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target9 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator8);
        java.util.Set<java.lang.String> strSet10 = python2Target9.badWords;
        java.lang.String str12 = python2Target9.encodeIntAsCharEscape(64);
        java.lang.String str13 = python2Target9.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator14 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target15 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator14);
        java.lang.String[] strArray16 = python2Target15.targetCharValueEscape;
        java.lang.String str17 = python2Target15.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup18 = python2Target15.getTemplates();
        python2Target9.templates = sTGroup18;
        python2Target1.templates = sTGroup18;
        org.antlr.v4.codegen.CodeGenerator codeGenerator21 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target22 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator21);
        java.lang.String[] strArray23 = python2Target22.targetCharValueEscape;
        java.lang.String str24 = python2Target22.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup25 = python2Target22.getTemplates();
        org.antlr.v4.codegen.CodeGenerator codeGenerator26 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target27 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator26);
        java.util.Set<java.lang.String> strSet28 = python2Target27.badWords;
        python2Target22.badWords = strSet28;
        org.antlr.v4.codegen.CodeGenerator codeGenerator30 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target31 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator30);
        java.util.Set<java.lang.String> strSet32 = python2Target31.badWords;
        java.lang.String str35 = python2Target31.getTargetStringLiteralFromString("hi!", false);
        java.lang.String str37 = python2Target31.getImplicitRuleLabel("@");
        python2Target31.language = "hi!";
        org.antlr.v4.codegen.CodeGenerator codeGenerator40 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target41 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator40);
        java.util.Set<java.lang.String> strSet42 = python2Target41.badWords;
        java.lang.String str44 = python2Target41.encodeIntAsCharEscape(64);
        java.lang.String str45 = python2Target41.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator46 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target47 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator46);
        java.lang.String[] strArray48 = python2Target47.targetCharValueEscape;
        java.lang.String str49 = python2Target47.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup50 = python2Target47.getTemplates();
        python2Target41.templates = sTGroup50;
        org.antlr.v4.codegen.CodeGenerator codeGenerator52 = python2Target41.getCodeGenerator();
        org.stringtemplate.v4.STGroup sTGroup53 = python2Target41.loadTemplates();
        python2Target31.templates = sTGroup53;
        python2Target22.templates = sTGroup53;
        python2Target1.templates = sTGroup53;
        java.lang.String[] strArray57 = python2Target1.targetCharValueEscape;
        org.antlr.v4.tool.Grammar grammar58 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str60 = python2Target1.getTokenTypeAsTargetLabel(grammar58, (int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "_tset" + "'", str3, "_tset");
        org.junit.Assert.assertNotNull(strSet10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "@" + "'", str12, "@");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Python2" + "'", str13, "Python2");
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Python2" + "'", str17, "Python2");
        org.junit.Assert.assertNotNull(sTGroup18);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "Python2" + "'", str24, "Python2");
        org.junit.Assert.assertNotNull(sTGroup25);
        org.junit.Assert.assertNotNull(strSet28);
        org.junit.Assert.assertNotNull(strSet32);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!" + "'", str35, "hi!");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "_@" + "'", str37, "_@");
        org.junit.Assert.assertNotNull(strSet42);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "@" + "'", str44, "@");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "Python2" + "'", str45, "Python2");
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "Python2" + "'", str49, "Python2");
        org.junit.Assert.assertNotNull(sTGroup50);
        org.junit.Assert.assertNull(codeGenerator52);
        org.junit.Assert.assertNotNull(sTGroup53);
        org.junit.Assert.assertNotNull(strArray57);
    }

    @Test
    public void test1473() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1473");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str4 = python2Target1.encodeIntAsCharEscape(64);
        java.lang.String str5 = python2Target1.getLanguage();
        java.lang.String str7 = python2Target1.getImplicitSetLabel("");
        java.lang.String str9 = python2Target1.getImplicitSetLabel("\\n");
        python2Target1.addBadWords();
        java.lang.String[] strArray11 = python2Target1.targetCharValueEscape;
        boolean boolean12 = python2Target1.wantsBaseListener();
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "@" + "'", str4, "@");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Python2" + "'", str5, "Python2");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "_tset" + "'", str7, "_tset");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "_tset\\n" + "'", str9, "_tset\\n");
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test1474() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1474");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str4 = python2Target1.encodeIntAsCharEscape(64);
        java.lang.String str5 = python2Target1.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup6 = python2Target1.getTemplates();
        org.antlr.v4.tool.Grammar grammar7 = null;
        org.stringtemplate.v4.ST sT8 = null;
        // The following exception was thrown during execution in test generation
        try {
            python2Target1.genListenerFile(grammar7, sT8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "@" + "'", str4, "@");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Python2" + "'", str5, "Python2");
        org.junit.Assert.assertNotNull(sTGroup6);
    }

    @Test
    public void test1475() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1475");
        java.lang.String str1 = org.stringtemplate.v4.StringRenderer.escapeHTML("_\"\\\"\\\\\\\"\\\\\\\\\\\\\\\"hi!\\\\\\\\\\\\\\\"\\\\\\\"\\\"\"");
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "_\"\\\"\\\\\\\"\\\\\\\\\\\\\\\"hi!\\\\\\\\\\\\\\\"\\\\\\\"\\\"\"" + "'", str1, "_\"\\\"\\\\\\\"\\\\\\\\\\\\\\\"hi!\\\\\\\\\\\\\\\"\\\\\\\"\\\"\"");
    }

    @Test
    public void test1476() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1476");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str4 = python2Target1.encodeIntAsCharEscape(64);
        java.lang.String str5 = python2Target1.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target7 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator6);
        java.lang.String[] strArray8 = python2Target7.targetCharValueEscape;
        java.lang.String str9 = python2Target7.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup10 = python2Target7.getTemplates();
        python2Target1.templates = sTGroup10;
        org.stringtemplate.v4.STGroup sTGroup12 = python2Target1.templates;
        java.util.Set<java.lang.String> strSet13 = python2Target1.badWords;
        java.util.Set<java.lang.String> strSet14 = python2Target1.getBadWords();
        boolean boolean15 = python2Target1.supportsOverloadedMethods();
        org.antlr.v4.codegen.CodeGenerator codeGenerator16 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target17 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator16);
        java.lang.String[] strArray18 = python2Target17.targetCharValueEscape;
        java.lang.String str21 = python2Target17.getTargetStringLiteralFromString("Python2", false);
        java.lang.String str22 = python2Target17.getVersion();
        java.lang.String str24 = python2Target17.encodeIntAsCharEscape((int) (short) 1);
        org.antlr.v4.codegen.CodeGenerator codeGenerator25 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target26 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator25);
        java.util.Set<java.lang.String> strSet27 = python2Target26.badWords;
        java.lang.String str29 = python2Target26.encodeIntAsCharEscape(64);
        java.lang.String str30 = python2Target26.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator31 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target32 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator31);
        java.lang.String[] strArray33 = python2Target32.targetCharValueEscape;
        java.lang.String str34 = python2Target32.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup35 = python2Target32.getTemplates();
        python2Target26.templates = sTGroup35;
        java.util.Set<java.lang.String> strSet37 = python2Target26.getBadWords();
        python2Target17.badWords = strSet37;
        java.lang.String str40 = python2Target17.getAltLabelContextStructName("hi!");
        java.lang.String str41 = python2Target17.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator42 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target43 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator42);
        java.lang.String[] strArray44 = python2Target43.targetCharValueEscape;
        java.lang.String str45 = python2Target43.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup46 = python2Target43.getTemplates();
        python2Target17.templates = sTGroup46;
        python2Target1.templates = sTGroup46;
        java.lang.String str49 = python2Target1.getLanguage();
        java.lang.String str51 = python2Target1.getImplicitRuleLabel("_tset__tset_tset\"\\\"\\\\\\\"hi!\\\\\\\"\\\"\"");
        org.stringtemplate.v4.STGroup sTGroup52 = python2Target1.getTemplates();
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "@" + "'", str4, "@");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Python2" + "'", str5, "Python2");
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Python2" + "'", str9, "Python2");
        org.junit.Assert.assertNotNull(sTGroup10);
        org.junit.Assert.assertNotNull(sTGroup12);
        org.junit.Assert.assertNotNull(strSet13);
        org.junit.Assert.assertNotNull(strSet14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Python2" + "'", str21, "Python2");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "4.5.2.1" + "'", str22, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "\\1" + "'", str24, "\\1");
        org.junit.Assert.assertNotNull(strSet27);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "@" + "'", str29, "@");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "Python2" + "'", str30, "Python2");
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "Python2" + "'", str34, "Python2");
        org.junit.Assert.assertNotNull(sTGroup35);
        org.junit.Assert.assertNotNull(strSet37);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "Hi!Context" + "'", str40, "Hi!Context");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "4.5.2.1" + "'", str41, "4.5.2.1");
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "Python2" + "'", str45, "Python2");
        org.junit.Assert.assertNotNull(sTGroup46);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "Python2" + "'", str49, "Python2");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "__tset__tset_tset\"\\\"\\\\\\\"hi!\\\\\\\"\\\"\"" + "'", str51, "__tset__tset_tset\"\\\"\\\\\\\"hi!\\\\\\\"\\\"\"");
        org.junit.Assert.assertNotNull(sTGroup52);
    }

    @Test
    public void test1477() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1477");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String[] strArray2 = python2Target1.targetCharValueEscape;
        java.lang.String str5 = python2Target1.getTargetStringLiteralFromString("Python2", false);
        java.lang.String str6 = python2Target1.getVersion();
        java.lang.String str8 = python2Target1.encodeIntAsCharEscape((int) (short) 1);
        int int9 = python2Target1.getSerializedATNSegmentLimit();
        java.lang.String str10 = python2Target1.getVersion();
        java.lang.String str11 = python2Target1.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator12 = null;
        java.lang.String str15 = python2Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator12, "_tset\"tset_tsetContex\"", false);
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Python2" + "'", str5, "Python2");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "4.5.2.1" + "'", str6, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\\1" + "'", str8, "\\1");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 2147483647 + "'", int9 == 2147483647);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "4.5.2.1" + "'", str10, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "4.5.2.1" + "'", str11, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "tset\\\"tset_tsetContex" + "'", str15, "tset\\\"tset_tsetContex");
    }

    @Test
    public void test1478() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1478");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String[] strArray2 = python2Target1.targetCharValueEscape;
        org.antlr.v4.tool.Grammar grammar3 = null;
        org.stringtemplate.v4.ST sT4 = null;
        python2Target1.genRecognizerHeaderFile(grammar3, sT4, "hi!");
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = null;
        java.lang.String str10 = python2Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator7, "_tsetContext", true);
        boolean boolean11 = python2Target1.wantsBaseVisitor();
        org.antlr.v4.codegen.CodeGenerator codeGenerator12 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target13 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator12);
        java.util.Set<java.lang.String> strSet14 = python2Target13.badWords;
        java.lang.String str16 = python2Target13.encodeIntAsCharEscape(64);
        org.stringtemplate.v4.STGroup sTGroup17 = python2Target13.getTemplates();
        python2Target1.templates = sTGroup17;
        org.antlr.v4.tool.Rule rule19 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str20 = python2Target1.getRuleFunctionContextStructName(rule19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\"tsetContex\"" + "'", str10, "\"tsetContex\"");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(strSet14);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "@" + "'", str16, "@");
        org.junit.Assert.assertNotNull(sTGroup17);
    }

    @Test
    public void test1479() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1479");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str5 = python2Target1.getTargetStringLiteralFromString("hi!", false);
        int int6 = python2Target1.getInlineTestSetWordSize();
        boolean boolean7 = python2Target1.wantsBaseVisitor();
        java.lang.String str8 = python2Target1.getLanguage();
        python2Target1.addBadWords();
        boolean boolean10 = python2Target1.templatesExist();
        java.lang.String str12 = python2Target1.getTargetStringLiteralFromString("");
        java.lang.String[] strArray13 = python2Target1.targetCharValueEscape;
        org.antlr.v4.codegen.target.Python2Target.python2Keywords = strArray13;
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 64 + "'", int6 == 64);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Python2" + "'", str8, "Python2");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "\"\"" + "'", str12, "\"\"");
        org.junit.Assert.assertNotNull(strArray13);
    }

    @Test
    public void test1480() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1480");
        org.antlr.v4.codegen.target.Python2Target python2Target0 = new org.antlr.v4.codegen.target.Python2Target();
        org.antlr.v4.codegen.CodeGenerator codeGenerator1 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target2 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator1);
        java.util.Set<java.lang.String> strSet3 = python2Target2.badWords;
        java.lang.String str5 = python2Target2.encodeIntAsCharEscape(64);
        java.lang.String str6 = python2Target2.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target8 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator7);
        java.lang.String[] strArray9 = python2Target8.targetCharValueEscape;
        java.lang.String str10 = python2Target8.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup11 = python2Target8.getTemplates();
        python2Target2.templates = sTGroup11;
        org.stringtemplate.v4.STGroup sTGroup13 = python2Target2.templates;
        java.util.Set<java.lang.String> strSet14 = python2Target2.badWords;
        java.util.Set<java.lang.String> strSet15 = python2Target2.getBadWords();
        boolean boolean16 = python2Target2.supportsOverloadedMethods();
        java.util.Set<java.lang.String> strSet17 = python2Target2.getBadWords();
        org.stringtemplate.v4.STGroup sTGroup18 = python2Target2.getTemplates();
        python2Target0.templates = sTGroup18;
        org.antlr.v4.codegen.CodeGenerator codeGenerator20 = python2Target0.gen;
        org.antlr.v4.tool.Grammar grammar21 = null;
        org.stringtemplate.v4.ST sT22 = null;
        python2Target0.genRecognizerHeaderFile(grammar21, sT22, "\"d\"");
        java.util.Set<java.lang.String> strSet25 = python2Target0.badWords;
        org.stringtemplate.v4.STGroup sTGroup26 = python2Target0.getTemplates();
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "@" + "'", str5, "@");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Python2" + "'", str6, "Python2");
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Python2" + "'", str10, "Python2");
        org.junit.Assert.assertNotNull(sTGroup11);
        org.junit.Assert.assertNotNull(sTGroup13);
        org.junit.Assert.assertNotNull(strSet14);
        org.junit.Assert.assertNotNull(strSet15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(strSet17);
        org.junit.Assert.assertNotNull(sTGroup18);
        org.junit.Assert.assertNull(codeGenerator20);
        org.junit.Assert.assertNotNull(strSet25);
        org.junit.Assert.assertNotNull(sTGroup26);
    }

    @Test
    public void test1481() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1481");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str4 = python2Target1.encodeIntAsCharEscape(64);
        java.lang.String str5 = python2Target1.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup6 = python2Target1.getTemplates();
        boolean boolean7 = python2Target1.supportsOverloadedMethods();
        java.util.Set<java.lang.String> strSet8 = python2Target1.getBadWords();
        java.lang.String str10 = python2Target1.getListLabel("_tset\"\\\"\\\\\\\"hi!\\\\\\\"\\\"\"");
        org.antlr.v4.tool.ast.GrammarAST grammarAST11 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean12 = python2Target1.visibleGrammarSymbolCausesIssueInGeneratedCode(grammarAST11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "@" + "'", str4, "@");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Python2" + "'", str5, "Python2");
        org.junit.Assert.assertNotNull(sTGroup6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "_tset\"\\\"\\\\\\\"hi!\\\\\\\"\\\"\"" + "'", str10, "_tset\"\\\"\\\\\\\"hi!\\\\\\\"\\\"\"");
    }

    @Test
    public void test1482() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1482");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String[] strArray2 = python2Target1.targetCharValueEscape;
        java.lang.String str5 = python2Target1.getTargetStringLiteralFromString("_tset\\1", false);
        java.util.Set<java.lang.String> strSet6 = python2Target1.badWords;
        java.lang.String str8 = python2Target1.getImplicitSetLabel("_tset\"\\\"\\\\\\\"hi!\\\\\\\"\\\"\"Context");
        java.lang.String str10 = python2Target1.getAltLabelContextStructName("\" \"");
        java.util.Set<java.lang.String> strSet11 = python2Target1.getBadWords();
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "_tset\\\\1" + "'", str5, "_tset\\\\1");
        org.junit.Assert.assertNotNull(strSet6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "_tset_tset\"\\\"\\\\\\\"hi!\\\\\\\"\\\"\"Context" + "'", str8, "_tset_tset\"\\\"\\\\\\\"hi!\\\\\\\"\\\"\"Context");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\" \"Context" + "'", str10, "\" \"Context");
        org.junit.Assert.assertNotNull(strSet11);
    }

    @Test
    public void test1483() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1483");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String[] strArray2 = python2Target1.targetCharValueEscape;
        java.lang.String str3 = python2Target1.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup4 = python2Target1.getTemplates();
        java.lang.String str6 = python2Target1.getTargetStringLiteralFromString("_tset");
        java.lang.String str7 = python2Target1.getVersion();
        int int8 = python2Target1.getSerializedATNSegmentLimit();
        java.lang.String str9 = python2Target1.getLanguage();
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Python2" + "'", str3, "Python2");
        org.junit.Assert.assertNotNull(sTGroup4);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\"_tset\"" + "'", str6, "\"_tset\"");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "4.5.2.1" + "'", str7, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 2147483647 + "'", int8 == 2147483647);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Python2" + "'", str9, "Python2");
    }

    @Test
    public void test1484() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1484");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String[] strArray2 = python2Target1.targetCharValueEscape;
        java.lang.String str5 = python2Target1.getTargetStringLiteralFromString("_tset\\1", false);
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = null;
        python2Target1.gen = codeGenerator6;
        java.util.Set<java.lang.String> strSet8 = python2Target1.getBadWords();
        boolean boolean9 = python2Target1.templatesExist();
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "_tset\\\\1" + "'", str5, "_tset\\\\1");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
    }

    @Test
    public void test1485() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1485");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str5 = python2Target1.getTargetStringLiteralFromString("hi!", false);
        java.lang.String str7 = python2Target1.getTargetStringLiteralFromString("\"hi!\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = null;
        python2Target1.gen = codeGenerator8;
        java.lang.String[] strArray10 = null;
        python2Target1.targetCharValueEscape = strArray10;
        org.stringtemplate.v4.STGroup sTGroup12 = python2Target1.getTemplates();
        org.stringtemplate.v4.STGroup sTGroup13 = python2Target1.templates;
        python2Target1.addBadWords();
        java.lang.String str15 = python2Target1.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator16 = null;
        java.lang.String str19 = python2Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator16, "\"_tset \"", true);
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "\"\\\"hi!\\\"\"" + "'", str7, "\"\\\"hi!\\\"\"");
        org.junit.Assert.assertNotNull(sTGroup12);
        org.junit.Assert.assertNotNull(sTGroup13);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Python2" + "'", str15, "Python2");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "\"_tset \"" + "'", str19, "\"_tset \"");
    }

    @Test
    public void test1486() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1486");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str4 = python2Target1.encodeIntAsCharEscape(64);
        java.lang.String str5 = python2Target1.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target7 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator6);
        java.lang.String[] strArray8 = python2Target7.targetCharValueEscape;
        java.lang.String str9 = python2Target7.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup10 = python2Target7.getTemplates();
        python2Target1.templates = sTGroup10;
        org.stringtemplate.v4.STGroup sTGroup12 = python2Target1.templates;
        java.util.Set<java.lang.String> strSet13 = python2Target1.badWords;
        boolean boolean14 = python2Target1.supportsOverloadedMethods();
        java.lang.String str16 = python2Target1.getImplicitSetLabel("\"Hi!Context\"");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str18 = python2Target1.getElementName("_\"\\\"\\\\\\\"\\\\\\\\\\\\\\\"hi!\\\\\\\\\\\\\\\"\\\\\\\"\\\"\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "@" + "'", str4, "@");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Python2" + "'", str5, "Python2");
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Python2" + "'", str9, "Python2");
        org.junit.Assert.assertNotNull(sTGroup10);
        org.junit.Assert.assertNotNull(sTGroup12);
        org.junit.Assert.assertNotNull(strSet13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "_tset\"Hi!Context\"" + "'", str16, "_tset\"Hi!Context\"");
    }

    @Test
    public void test1487() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1487");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String[] strArray2 = python2Target1.targetCharValueEscape;
        java.lang.String str3 = python2Target1.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup4 = python2Target1.templates;
        java.lang.String str6 = python2Target1.getListLabel("\\n");
        org.antlr.v4.tool.Grammar grammar7 = null;
        org.stringtemplate.v4.ST sT8 = null;
        python2Target1.genRecognizerHeaderFile(grammar7, sT8, "\"4.5.2.1\"");
        org.antlr.v4.codegen.target.Python2Target python2Target11 = new org.antlr.v4.codegen.target.Python2Target();
        org.antlr.v4.codegen.CodeGenerator codeGenerator12 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target13 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator12);
        java.util.Set<java.lang.String> strSet14 = python2Target13.badWords;
        java.lang.String str16 = python2Target13.encodeIntAsCharEscape(64);
        java.lang.String str17 = python2Target13.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator18 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target19 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator18);
        java.lang.String[] strArray20 = python2Target19.targetCharValueEscape;
        java.lang.String str21 = python2Target19.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup22 = python2Target19.getTemplates();
        python2Target13.templates = sTGroup22;
        org.stringtemplate.v4.STGroup sTGroup24 = python2Target13.templates;
        java.util.Set<java.lang.String> strSet25 = python2Target13.badWords;
        java.util.Set<java.lang.String> strSet26 = python2Target13.getBadWords();
        boolean boolean27 = python2Target13.supportsOverloadedMethods();
        java.util.Set<java.lang.String> strSet28 = python2Target13.getBadWords();
        org.stringtemplate.v4.STGroup sTGroup29 = python2Target13.getTemplates();
        python2Target11.templates = sTGroup29;
        python2Target1.templates = sTGroup29;
        python2Target1.addBadWords();
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Python2" + "'", str3, "Python2");
        org.junit.Assert.assertNull(sTGroup4);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\\n" + "'", str6, "\\n");
        org.junit.Assert.assertNotNull(strSet14);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "@" + "'", str16, "@");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Python2" + "'", str17, "Python2");
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Python2" + "'", str21, "Python2");
        org.junit.Assert.assertNotNull(sTGroup22);
        org.junit.Assert.assertNotNull(sTGroup24);
        org.junit.Assert.assertNotNull(strSet25);
        org.junit.Assert.assertNotNull(strSet26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(strSet28);
        org.junit.Assert.assertNotNull(sTGroup29);
    }

    @Test
    public void test1488() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1488");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str5 = python2Target1.getTargetStringLiteralFromString("hi!", false);
        java.lang.String str7 = python2Target1.getTargetStringLiteralFromString("\"hi!\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target9 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator8);
        java.util.Set<java.lang.String> strSet10 = python2Target9.badWords;
        java.lang.String str12 = python2Target9.encodeIntAsCharEscape(64);
        java.lang.String str13 = python2Target9.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator14 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target15 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator14);
        java.lang.String[] strArray16 = python2Target15.targetCharValueEscape;
        java.lang.String str17 = python2Target15.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup18 = python2Target15.getTemplates();
        python2Target9.templates = sTGroup18;
        org.antlr.v4.tool.Grammar grammar20 = null;
        org.stringtemplate.v4.ST sT21 = null;
        python2Target9.genRecognizerHeaderFile(grammar20, sT21, "\"_tset\"");
        java.util.Set<java.lang.String> strSet24 = python2Target9.getBadWords();
        python2Target1.badWords = strSet24;
        java.lang.String str26 = python2Target1.language;
        org.antlr.v4.codegen.CodeGenerator codeGenerator27 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target28 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator27);
        java.util.Set<java.lang.String> strSet29 = python2Target28.badWords;
        java.lang.String str32 = python2Target28.getTargetStringLiteralFromString("4.5.2.1", true);
        boolean boolean33 = python2Target28.templatesExist();
        org.stringtemplate.v4.STGroup sTGroup34 = python2Target28.templates;
        org.stringtemplate.v4.STGroup sTGroup35 = python2Target28.templates;
        org.stringtemplate.v4.STGroup sTGroup36 = python2Target28.getTemplates();
        org.antlr.v4.tool.Grammar grammar37 = null;
        org.stringtemplate.v4.ST sT38 = null;
        python2Target28.genRecognizerHeaderFile(grammar37, sT38, "__@");
        org.stringtemplate.v4.STGroup sTGroup41 = python2Target28.templates;
        python2Target1.templates = sTGroup41;
        boolean boolean43 = python2Target1.wantsBaseListener();
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "\"\\\"hi!\\\"\"" + "'", str7, "\"\\\"hi!\\\"\"");
        org.junit.Assert.assertNotNull(strSet10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "@" + "'", str12, "@");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Python2" + "'", str13, "Python2");
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Python2" + "'", str17, "Python2");
        org.junit.Assert.assertNotNull(sTGroup18);
        org.junit.Assert.assertNotNull(strSet24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "Python2" + "'", str26, "Python2");
        org.junit.Assert.assertNotNull(strSet29);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "\"4.5.2.1\"" + "'", str32, "\"4.5.2.1\"");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(sTGroup34);
        org.junit.Assert.assertNull(sTGroup35);
        org.junit.Assert.assertNotNull(sTGroup36);
        org.junit.Assert.assertNotNull(sTGroup41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
    }

    @Test
    public void test1489() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1489");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String[] strArray2 = python2Target1.targetCharValueEscape;
        java.lang.String str3 = python2Target1.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup4 = python2Target1.templates;
        java.lang.String str6 = python2Target1.getListLabel("\\n");
        java.lang.String[] strArray7 = python2Target1.targetCharValueEscape;
        org.antlr.v4.tool.Grammar grammar8 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator9 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target10 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator9);
        java.lang.String[] strArray11 = python2Target10.targetCharValueEscape;
        java.lang.String str14 = python2Target10.getTargetStringLiteralFromString("_tset\\1", false);
        org.antlr.v4.tool.Grammar grammar15 = null;
        int[] intArray16 = new int[] {};
        java.lang.String[] strArray17 = python2Target10.getTokenTypesAsTargetLabels(grammar15, intArray16);
        java.lang.String[] strArray18 = python2Target1.getTokenTypesAsTargetLabels(grammar8, intArray16);
        boolean boolean19 = python2Target1.supportsOverloadedMethods();
        org.antlr.v4.codegen.CodeGenerator codeGenerator20 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target21 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator20);
        java.lang.String[] strArray22 = python2Target21.targetCharValueEscape;
        java.lang.String str23 = python2Target21.getLanguage();
        java.lang.String str26 = python2Target21.getTargetStringLiteralFromString("_tset", true);
        java.util.Set<java.lang.String> strSet27 = python2Target21.badWords;
        org.antlr.v4.codegen.CodeGenerator codeGenerator28 = python2Target21.gen;
        java.util.Set<java.lang.String> strSet29 = python2Target21.badWords;
        python2Target1.badWords = strSet29;
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Python2" + "'", str3, "Python2");
        org.junit.Assert.assertNull(sTGroup4);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\\n" + "'", str6, "\\n");
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "_tset\\\\1" + "'", str14, "_tset\\\\1");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[]");
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "Python2" + "'", str23, "Python2");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "\"_tset\"" + "'", str26, "\"_tset\"");
        org.junit.Assert.assertNotNull(strSet27);
        org.junit.Assert.assertNull(codeGenerator28);
        org.junit.Assert.assertNotNull(strSet29);
    }

    @Test
    public void test1490() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1490");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str4 = python2Target1.encodeIntAsCharEscape(64);
        java.lang.String str6 = python2Target1.getAltLabelContextStructName("Python2");
        java.util.Set<java.lang.String> strSet7 = python2Target1.getBadWords();
        java.lang.String str9 = python2Target1.getImplicitRuleLabel("_\"Python2\"");
        java.lang.String str10 = python2Target1.language;
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "@" + "'", str4, "@");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Python2Context" + "'", str6, "Python2Context");
        org.junit.Assert.assertNotNull(strSet7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "__\"Python2\"" + "'", str9, "__\"Python2\"");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Python2" + "'", str10, "Python2");
    }

    @Test
    public void test1491() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1491");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str5 = python2Target1.getTargetStringLiteralFromString("hi!", false);
        int int6 = python2Target1.getInlineTestSetWordSize();
        java.lang.String str8 = python2Target1.getTargetStringLiteralFromString("Hi!Context");
        java.util.Set<java.lang.String> strSet9 = python2Target1.badWords;
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = null;
        java.lang.String str13 = python2Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator10, "hi!", false);
        java.util.Set<java.lang.String> strSet14 = python2Target1.badWords;
        java.util.Set<java.lang.String> strSet15 = python2Target1.getBadWords();
        java.lang.String str17 = python2Target1.getAltLabelContextStructName("__tset");
        java.lang.String str18 = python2Target1.getVersion();
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 64 + "'", int6 == 64);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\"Hi!Context\"" + "'", str8, "\"Hi!Context\"");
        org.junit.Assert.assertNotNull(strSet9);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "i" + "'", str13, "i");
        org.junit.Assert.assertNotNull(strSet14);
        org.junit.Assert.assertNotNull(strSet15);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "__tsetContext" + "'", str17, "__tsetContext");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "4.5.2.1" + "'", str18, "4.5.2.1");
    }

    @Test
    public void test1492() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1492");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str4 = python2Target1.encodeIntAsCharEscape(64);
        java.lang.String str5 = python2Target1.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target7 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator6);
        java.lang.String[] strArray8 = python2Target7.targetCharValueEscape;
        java.lang.String str9 = python2Target7.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup10 = python2Target7.getTemplates();
        python2Target1.templates = sTGroup10;
        org.stringtemplate.v4.STGroup sTGroup12 = python2Target1.templates;
        java.util.Set<java.lang.String> strSet13 = python2Target1.badWords;
        java.util.Set<java.lang.String> strSet14 = python2Target1.getBadWords();
        boolean boolean15 = python2Target1.supportsOverloadedMethods();
        java.util.Set<java.lang.String> strSet16 = python2Target1.getBadWords();
        org.stringtemplate.v4.STGroup sTGroup17 = python2Target1.getTemplates();
        org.antlr.v4.tool.Grammar grammar18 = null;
        org.stringtemplate.v4.ST sT19 = null;
        python2Target1.genRecognizerHeaderFile(grammar18, sT19, "__@");
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "@" + "'", str4, "@");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Python2" + "'", str5, "Python2");
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Python2" + "'", str9, "Python2");
        org.junit.Assert.assertNotNull(sTGroup10);
        org.junit.Assert.assertNotNull(sTGroup12);
        org.junit.Assert.assertNotNull(strSet13);
        org.junit.Assert.assertNotNull(strSet14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertNotNull(sTGroup17);
    }

    @Test
    public void test1493() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1493");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String[] strArray2 = python2Target1.targetCharValueEscape;
        java.lang.String str5 = python2Target1.getTargetStringLiteralFromString("Python2", false);
        python2Target1.addBadWords();
        java.lang.String str8 = python2Target1.getListLabel("_tset\"Hi!Context\"");
        java.lang.String str10 = python2Target1.getListLabel("_\"\\\"\\\\\\\"\\\\\\\\\\\\\\\"hi!\\\\\\\\\\\\\\\"\\\\\\\"\\\"\"");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str12 = python2Target1.getImplicitTokenLabel("4.5.2.1");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Python2" + "'", str5, "Python2");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "_tset\"Hi!Context\"" + "'", str8, "_tset\"Hi!Context\"");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "_\"\\\"\\\\\\\"\\\\\\\\\\\\\\\"hi!\\\\\\\\\\\\\\\"\\\\\\\"\\\"\"" + "'", str10, "_\"\\\"\\\\\\\"\\\\\\\\\\\\\\\"hi!\\\\\\\\\\\\\\\"\\\\\\\"\\\"\"");
    }

    @Test
    public void test1494() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1494");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str4 = python2Target1.encodeIntAsCharEscape(64);
        java.lang.String str5 = python2Target1.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target7 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator6);
        java.lang.String[] strArray8 = python2Target7.targetCharValueEscape;
        java.lang.String str9 = python2Target7.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup10 = python2Target7.getTemplates();
        python2Target1.templates = sTGroup10;
        org.stringtemplate.v4.STGroup sTGroup12 = python2Target1.templates;
        java.util.Set<java.lang.String> strSet13 = python2Target1.badWords;
        boolean boolean14 = python2Target1.supportsOverloadedMethods();
        java.lang.String str16 = python2Target1.getImplicitSetLabel("\"Hi!Context\"");
        python2Target1.addBadWords();
        int int18 = python2Target1.getInlineTestSetWordSize();
        java.lang.String str19 = python2Target1.getLanguage();
        boolean boolean20 = python2Target1.supportsOverloadedMethods();
        org.antlr.v4.codegen.CodeGenerator codeGenerator21 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target22 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator21);
        java.lang.String[] strArray23 = python2Target22.targetCharValueEscape;
        java.lang.String str26 = python2Target22.getTargetStringLiteralFromString("Python2", false);
        java.lang.String str27 = python2Target22.getVersion();
        java.lang.String str29 = python2Target22.encodeIntAsCharEscape((int) (short) 1);
        org.antlr.v4.codegen.CodeGenerator codeGenerator30 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target31 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator30);
        java.util.Set<java.lang.String> strSet32 = python2Target31.badWords;
        java.lang.String str34 = python2Target31.encodeIntAsCharEscape(64);
        java.lang.String str35 = python2Target31.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator36 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target37 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator36);
        java.lang.String[] strArray38 = python2Target37.targetCharValueEscape;
        java.lang.String str39 = python2Target37.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup40 = python2Target37.getTemplates();
        python2Target31.templates = sTGroup40;
        java.util.Set<java.lang.String> strSet42 = python2Target31.getBadWords();
        python2Target22.badWords = strSet42;
        python2Target1.badWords = strSet42;
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "@" + "'", str4, "@");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Python2" + "'", str5, "Python2");
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Python2" + "'", str9, "Python2");
        org.junit.Assert.assertNotNull(sTGroup10);
        org.junit.Assert.assertNotNull(sTGroup12);
        org.junit.Assert.assertNotNull(strSet13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "_tset\"Hi!Context\"" + "'", str16, "_tset\"Hi!Context\"");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 64 + "'", int18 == 64);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Python2" + "'", str19, "Python2");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "Python2" + "'", str26, "Python2");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "4.5.2.1" + "'", str27, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "\\1" + "'", str29, "\\1");
        org.junit.Assert.assertNotNull(strSet32);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "@" + "'", str34, "@");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "Python2" + "'", str35, "Python2");
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "Python2" + "'", str39, "Python2");
        org.junit.Assert.assertNotNull(sTGroup40);
        org.junit.Assert.assertNotNull(strSet42);
    }

    @Test
    public void test1495() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1495");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String str3 = python2Target1.getImplicitSetLabel("");
        org.antlr.v4.tool.Grammar grammar4 = null;
        org.stringtemplate.v4.ST sT5 = null;
        python2Target1.genRecognizerHeaderFile(grammar4, sT5, "_tset");
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target9 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator8);
        java.util.Set<java.lang.String> strSet10 = python2Target9.badWords;
        java.lang.String str12 = python2Target9.encodeIntAsCharEscape(64);
        java.lang.String str13 = python2Target9.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator14 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target15 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator14);
        java.lang.String[] strArray16 = python2Target15.targetCharValueEscape;
        java.lang.String str17 = python2Target15.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup18 = python2Target15.getTemplates();
        python2Target9.templates = sTGroup18;
        python2Target1.templates = sTGroup18;
        org.antlr.v4.codegen.CodeGenerator codeGenerator21 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target22 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator21);
        java.lang.String[] strArray23 = python2Target22.targetCharValueEscape;
        java.lang.String str24 = python2Target22.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup25 = python2Target22.getTemplates();
        org.antlr.v4.codegen.CodeGenerator codeGenerator26 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target27 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator26);
        java.util.Set<java.lang.String> strSet28 = python2Target27.badWords;
        python2Target22.badWords = strSet28;
        org.antlr.v4.codegen.CodeGenerator codeGenerator30 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target31 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator30);
        java.util.Set<java.lang.String> strSet32 = python2Target31.badWords;
        java.lang.String str35 = python2Target31.getTargetStringLiteralFromString("hi!", false);
        java.lang.String str37 = python2Target31.getImplicitRuleLabel("@");
        python2Target31.language = "hi!";
        org.antlr.v4.codegen.CodeGenerator codeGenerator40 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target41 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator40);
        java.util.Set<java.lang.String> strSet42 = python2Target41.badWords;
        java.lang.String str44 = python2Target41.encodeIntAsCharEscape(64);
        java.lang.String str45 = python2Target41.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator46 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target47 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator46);
        java.lang.String[] strArray48 = python2Target47.targetCharValueEscape;
        java.lang.String str49 = python2Target47.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup50 = python2Target47.getTemplates();
        python2Target41.templates = sTGroup50;
        org.antlr.v4.codegen.CodeGenerator codeGenerator52 = python2Target41.getCodeGenerator();
        org.stringtemplate.v4.STGroup sTGroup53 = python2Target41.loadTemplates();
        python2Target31.templates = sTGroup53;
        python2Target22.templates = sTGroup53;
        python2Target1.templates = sTGroup53;
        org.antlr.v4.codegen.CodeGenerator codeGenerator57 = null;
        java.lang.String str60 = python2Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator57, "\"hi!\"", true);
        int int61 = python2Target1.getSerializedATNSegmentLimit();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "_tset" + "'", str3, "_tset");
        org.junit.Assert.assertNotNull(strSet10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "@" + "'", str12, "@");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Python2" + "'", str13, "Python2");
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Python2" + "'", str17, "Python2");
        org.junit.Assert.assertNotNull(sTGroup18);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "Python2" + "'", str24, "Python2");
        org.junit.Assert.assertNotNull(sTGroup25);
        org.junit.Assert.assertNotNull(strSet28);
        org.junit.Assert.assertNotNull(strSet32);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!" + "'", str35, "hi!");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "_@" + "'", str37, "_@");
        org.junit.Assert.assertNotNull(strSet42);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "@" + "'", str44, "@");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "Python2" + "'", str45, "Python2");
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "Python2" + "'", str49, "Python2");
        org.junit.Assert.assertNotNull(sTGroup50);
        org.junit.Assert.assertNull(codeGenerator52);
        org.junit.Assert.assertNotNull(sTGroup53);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "\"hi!\"" + "'", str60, "\"hi!\"");
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 2147483647 + "'", int61 == 2147483647);
    }

    @Test
    public void test1496() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1496");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String str3 = python2Target1.getImplicitSetLabel("");
        java.lang.String str4 = python2Target1.language;
        java.lang.String str7 = python2Target1.getTargetStringLiteralFromString("\"\"", true);
        boolean boolean8 = python2Target1.wantsBaseListener();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "_tset" + "'", str3, "_tset");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Python2" + "'", str4, "Python2");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "\"\\\"\\\"\"" + "'", str7, "\"\\\"\\\"\"");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test1497() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1497");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        boolean boolean3 = python2Target1.wantsBaseVisitor();
        python2Target1.language = "\"\"";
        java.lang.String str7 = python2Target1.getTargetStringLiteralFromString("__tset");
        boolean boolean8 = python2Target1.templatesExist();
        org.antlr.v4.codegen.target.Python2Target python2Target9 = new org.antlr.v4.codegen.target.Python2Target();
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target11 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator10);
        java.util.Set<java.lang.String> strSet12 = python2Target11.badWords;
        java.lang.String str14 = python2Target11.encodeIntAsCharEscape(64);
        java.lang.String str15 = python2Target11.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator16 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target17 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator16);
        java.lang.String[] strArray18 = python2Target17.targetCharValueEscape;
        java.lang.String str19 = python2Target17.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup20 = python2Target17.getTemplates();
        python2Target11.templates = sTGroup20;
        org.stringtemplate.v4.STGroup sTGroup22 = python2Target11.templates;
        java.util.Set<java.lang.String> strSet23 = python2Target11.badWords;
        java.util.Set<java.lang.String> strSet24 = python2Target11.getBadWords();
        boolean boolean25 = python2Target11.supportsOverloadedMethods();
        java.util.Set<java.lang.String> strSet26 = python2Target11.getBadWords();
        org.stringtemplate.v4.STGroup sTGroup27 = python2Target11.getTemplates();
        python2Target9.templates = sTGroup27;
        org.antlr.v4.codegen.CodeGenerator codeGenerator29 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target30 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator29);
        java.util.Set<java.lang.String> strSet31 = python2Target30.badWords;
        java.lang.String str33 = python2Target30.encodeIntAsCharEscape(64);
        java.lang.String str34 = python2Target30.getLanguage();
        java.lang.String str35 = python2Target30.getLanguage();
        java.lang.String str37 = python2Target30.getListLabel("\"tsetContex\"");
        java.lang.String[] strArray38 = python2Target30.targetCharValueEscape;
        python2Target9.targetCharValueEscape = strArray38;
        python2Target1.targetCharValueEscape = strArray38;
        org.antlr.v4.codegen.target.Python2Target.python2Keywords = strArray38;
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "\"__tset\"" + "'", str7, "\"__tset\"");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "@" + "'", str14, "@");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Python2" + "'", str15, "Python2");
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Python2" + "'", str19, "Python2");
        org.junit.Assert.assertNotNull(sTGroup20);
        org.junit.Assert.assertNotNull(sTGroup22);
        org.junit.Assert.assertNotNull(strSet23);
        org.junit.Assert.assertNotNull(strSet24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(strSet26);
        org.junit.Assert.assertNotNull(sTGroup27);
        org.junit.Assert.assertNotNull(strSet31);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "@" + "'", str33, "@");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "Python2" + "'", str34, "Python2");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "Python2" + "'", str35, "Python2");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "\"tsetContex\"" + "'", str37, "\"tsetContex\"");
        org.junit.Assert.assertNotNull(strArray38);
    }

    @Test
    public void test1498() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1498");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python2Target1.badWords;
        java.lang.String str4 = python2Target1.encodeIntAsCharEscape(64);
        java.lang.String str5 = python2Target1.getLanguage();
        java.lang.String str7 = python2Target1.getImplicitSetLabel("");
        java.lang.String str9 = python2Target1.getImplicitSetLabel("\\n");
        org.antlr.v4.tool.Grammar grammar10 = null;
        org.stringtemplate.v4.ST sT11 = null;
        python2Target1.genRecognizerHeaderFile(grammar10, sT11, "\"4.5.2.1\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator14 = null;
        java.lang.String str17 = python2Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator14, "\\\"\\\"", false);
        java.lang.String str19 = python2Target1.getImplicitRuleLabel("\"d\"Context");
        org.stringtemplate.v4.STGroup sTGroup20 = python2Target1.templates;
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "@" + "'", str4, "@");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Python2" + "'", str5, "Python2");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "_tset" + "'", str7, "_tset");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "_tset\\n" + "'", str9, "_tset\\n");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "\\\"\\\"" + "'", str17, "\\\"\\\"");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "_\"d\"Context" + "'", str19, "_\"d\"Context");
        org.junit.Assert.assertNotNull(sTGroup20);
    }

    @Test
    public void test1499() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1499");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String[] strArray2 = python2Target1.targetCharValueEscape;
        java.lang.String str3 = python2Target1.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup4 = python2Target1.getTemplates();
        org.antlr.v4.codegen.CodeGenerator codeGenerator5 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target6 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator5);
        java.util.Set<java.lang.String> strSet7 = python2Target6.badWords;
        python2Target1.badWords = strSet7;
        org.antlr.v4.codegen.CodeGenerator codeGenerator9 = python2Target1.gen;
        java.lang.String str10 = python2Target1.getLanguage();
        java.lang.String str11 = python2Target1.getVersion();
        boolean boolean12 = python2Target1.wantsBaseVisitor();
        org.antlr.v4.tool.ast.GrammarAST grammarAST13 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean14 = python2Target1.grammarSymbolCausesIssueInGeneratedCode(grammarAST13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Python2" + "'", str3, "Python2");
        org.junit.Assert.assertNotNull(sTGroup4);
        org.junit.Assert.assertNotNull(strSet7);
        org.junit.Assert.assertNull(codeGenerator9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Python2" + "'", str10, "Python2");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "4.5.2.1" + "'", str11, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test1500() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1500");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        org.stringtemplate.v4.STGroup sTGroup2 = python2Target1.templates;
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = null;
        java.lang.String str6 = python2Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator3, "_@", true);
        java.lang.String str8 = python2Target1.getImplicitRuleLabel("\"\\\"hi!\\\"\"");
        java.lang.String str10 = python2Target1.getImplicitSetLabel("4.5.2.1");
        java.lang.String str12 = python2Target1.getListLabel("_@");
        org.antlr.v4.codegen.CodeGenerator codeGenerator13 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target14 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator13);
        java.util.Set<java.lang.String> strSet15 = python2Target14.badWords;
        java.lang.String str18 = python2Target14.getTargetStringLiteralFromString("hi!", false);
        java.lang.String str20 = python2Target14.getImplicitRuleLabel("@");
        python2Target14.language = "hi!";
        java.util.Set<java.lang.String> strSet23 = python2Target14.getBadWords();
        org.stringtemplate.v4.STGroup sTGroup24 = python2Target14.templates;
        python2Target1.templates = sTGroup24;
        python2Target1.addBadWords();
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\"\"" + "'", str6, "\"\"");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "_\"\\\"hi!\\\"\"" + "'", str8, "_\"\\\"hi!\\\"\"");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "_tset4.5.2.1" + "'", str10, "_tset4.5.2.1");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "_@" + "'", str12, "_@");
        org.junit.Assert.assertNotNull(strSet15);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "_@" + "'", str20, "_@");
        org.junit.Assert.assertNotNull(strSet23);
        org.junit.Assert.assertNotNull(sTGroup24);
    }
}
