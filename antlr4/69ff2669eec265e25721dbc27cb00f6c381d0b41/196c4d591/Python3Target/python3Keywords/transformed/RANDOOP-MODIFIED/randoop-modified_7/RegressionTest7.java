import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest7 {

    public static boolean debug = false;

    @Test
    public void test3501() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3501");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python3Target1.getBadWords();
        java.lang.String str4 = python3Target1.getAltLabelContextStructName("d");
        org.stringtemplate.v4.STGroup sTGroup5 = python3Target1.getTemplates();
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = null;
        java.lang.String str9 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator6, "", true);
        java.lang.String str11 = python3Target1.getImplicitSetLabel("\"\\0\"");
        java.lang.String str13 = python3Target1.getListLabel("\"Python3\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator14 = python3Target1.gen;
        java.lang.String str16 = python3Target1.getTargetStringLiteralFromString("\"\"\"\"\"\"\"Context\"Context");
        java.util.Set<java.lang.String> strSet17 = python3Target1.getBadWords();
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "DContext" + "'", str4, "DContext");
        org.junit.Assert.assertNotNull(sTGroup5);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\"\"" + "'", str9, "\"\"");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "_tset\"\\0\"" + "'", str11, "_tset\"\\0\"");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "\"Python3\"" + "'", str13, "\"Python3\"");
        org.junit.Assert.assertNull(codeGenerator14);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"Context\\\"Context\"" + "'", str16, "\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"Context\\\"Context\"");
        org.junit.Assert.assertNotNull(strSet17);
    }

    @Test
    public void test3502() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3502");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python3Target1.getBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = null;
        python3Target1.gen = codeGenerator3;
        java.lang.String str6 = python3Target1.getAltLabelContextStructName("hi!");
        java.lang.String str9 = python3Target1.getTargetStringLiteralFromString("\"hi!\"", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = null;
        python3Target1.gen = codeGenerator10;
        org.antlr.v4.tool.Grammar grammar12 = null;
        org.stringtemplate.v4.ST sT13 = null;
        // The following exception was thrown during execution in test generation
        try {
            python3Target1.genFile(grammar12, sT13, "\"\\\"hi!\\\"\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Hi!Context" + "'", str6, "Hi!Context");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\"\\\"hi!\\\"\"" + "'", str9, "\"\\\"hi!\\\"\"");
    }

    @Test
    public void test3503() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3503");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray1 = python3Target0.targetCharValueEscape;
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = null;
        java.lang.String str6 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator3, "\"\\12\"", false);
        java.lang.String str7 = python3Target0.getLanguage();
        boolean boolean8 = python3Target0.supportsOverloadedMethods();
        java.lang.String str11 = python3Target0.getTargetStringLiteralFromString("\\\"\\\"\\\"\\\"\\\"\\\"Context", true);
        python3Target0.language = "DContext\\\"ContexContext";
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "12" + "'", str6, "12");
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "\"\\\"\\\"\\\"\\\"\\\"\\\"Context\"" + "'", str11, "\"\\\"\\\"\\\"\\\"\\\"\\\"Context\"");
    }

    @Test
    public void test3504() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3504");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        python3Target0.language = "4.5.2.1";
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = python3Target0.getCodeGenerator();
        org.antlr.v4.codegen.CodeGenerator codeGenerator4 = python3Target0.gen;
        java.lang.String str5 = python3Target0.getLanguage();
        python3Target0.addBadWords();
        org.antlr.v4.codegen.target.Python3Target python3Target7 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str9 = python3Target7.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = null;
        python3Target7.gen = codeGenerator10;
        java.lang.String str12 = python3Target7.getVersion();
        org.antlr.v4.codegen.target.Python3Target python3Target13 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean14 = python3Target13.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup15 = python3Target13.templates;
        org.antlr.v4.tool.Grammar grammar16 = null;
        org.stringtemplate.v4.ST sT17 = null;
        python3Target13.genRecognizerHeaderFile(grammar16, sT17, "");
        python3Target13.language = "Python3";
        int int22 = python3Target13.getSerializedATNSegmentLimit();
        org.stringtemplate.v4.STGroup sTGroup23 = python3Target13.loadTemplates();
        python3Target7.templates = sTGroup23;
        python3Target0.templates = sTGroup23;
        python3Target0.language = "\\35";
        org.stringtemplate.v4.STGroup sTGroup28 = python3Target0.getTemplates();
        java.lang.String str29 = python3Target0.getVersion();
        org.junit.Assert.assertNull(codeGenerator3);
        org.junit.Assert.assertNull(codeGenerator4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "4.5.2.1" + "'", str5, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\"\"\"\"\"\"" + "'", str9, "\"\"\"\"\"\"");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "4.5.2.1" + "'", str12, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(sTGroup15);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 29 + "'", int22 == 29);
        org.junit.Assert.assertNotNull(sTGroup23);
        org.junit.Assert.assertNotNull(sTGroup28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "4.5.2.1" + "'", str29, "4.5.2.1");
    }

    @Test
    public void test3505() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3505");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python3Target1.getBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = null;
        python3Target1.gen = codeGenerator3;
        java.lang.String str6 = python3Target1.getTargetStringLiteralFromString("\"\"\"\\\"\\\"hi!\\\"\\\"\"\"\"");
        java.util.Set<java.lang.String> strSet7 = python3Target1.badWords;
        boolean boolean8 = python3Target1.wantsBaseVisitor();
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\"\\\"\\\"\\\"\\\\\\\"\\\\\\\"hi!\\\\\\\"\\\\\\\"\\\"\\\"\\\"\"" + "'", str6, "\"\\\"\\\"\\\"\\\\\\\"\\\\\\\"hi!\\\\\\\"\\\\\\\"\\\"\\\"\\\"\"");
        org.junit.Assert.assertNotNull(strSet7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test3506() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3506");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        python3Target0.language = "4.5.2.1";
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = python3Target0.getCodeGenerator();
        java.lang.String str4 = python3Target0.language;
        java.util.Set<java.lang.String> strSet5 = python3Target0.getBadWords();
        org.antlr.v4.tool.Grammar grammar6 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target7 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean8 = python3Target7.supportsOverloadedMethods();
        org.antlr.v4.tool.Grammar grammar9 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target11 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator10);
        java.util.Set<java.lang.String> strSet12 = python3Target11.getBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator13 = null;
        python3Target11.gen = codeGenerator13;
        java.lang.String str16 = python3Target11.getAltLabelContextStructName("hi!");
        java.lang.String str19 = python3Target11.getTargetStringLiteralFromString("\"hi!\"", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator20 = null;
        python3Target11.gen = codeGenerator20;
        org.antlr.v4.tool.Grammar grammar22 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target23 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray24 = python3Target23.targetCharValueEscape;
        org.stringtemplate.v4.STGroup sTGroup25 = python3Target23.templates;
        int int26 = python3Target23.getInlineTestSetWordSize();
        org.antlr.v4.codegen.CodeGenerator codeGenerator27 = python3Target23.gen;
        org.antlr.v4.tool.Grammar grammar28 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target29 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str31 = python3Target29.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.tool.Grammar grammar32 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target33 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean34 = python3Target33.supportsOverloadedMethods();
        java.lang.String str35 = python3Target33.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator36 = null;
        java.lang.String str39 = python3Target33.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator36, "", true);
        java.lang.String str40 = python3Target33.getVersion();
        org.antlr.v4.tool.Grammar grammar41 = null;
        int[] intArray42 = new int[] {};
        java.lang.String[] strArray43 = python3Target33.getTokenTypesAsTargetLabels(grammar41, intArray42);
        java.lang.String[] strArray44 = python3Target29.getTokenTypesAsTargetLabels(grammar32, intArray42);
        java.lang.String[] strArray45 = python3Target23.getTokenTypesAsTargetLabels(grammar28, intArray42);
        java.lang.String[] strArray46 = python3Target11.getTokenTypesAsTargetLabels(grammar22, intArray42);
        java.lang.String[] strArray47 = python3Target7.getTokenTypesAsTargetLabels(grammar9, intArray42);
        java.lang.String[] strArray48 = python3Target0.getTokenTypesAsTargetLabels(grammar6, intArray42);
        org.junit.Assert.assertNull(codeGenerator3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "4.5.2.1" + "'", str4, "4.5.2.1");
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Hi!Context" + "'", str16, "Hi!Context");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "\"\\\"hi!\\\"\"" + "'", str19, "\"\\\"hi!\\\"\"");
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertNull(sTGroup25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 64 + "'", int26 == 64);
        org.junit.Assert.assertNull(codeGenerator27);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "\"\"\"\"\"\"" + "'", str31, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "4.5.2.1" + "'", str35, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "\"\"" + "'", str39, "\"\"");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "4.5.2.1" + "'", str40, "4.5.2.1");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[]");
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertNotNull(strArray48);
    }

    @Test
    public void test3507() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3507");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        org.antlr.v4.codegen.CodeGenerator codeGenerator1 = python3Target0.getCodeGenerator();
        org.antlr.v4.codegen.CodeGenerator codeGenerator2 = python3Target0.gen;
        java.lang.String str5 = python3Target0.getTargetStringLiteralFromString("\"__tset\"\"\"\"\"\"\"\"ContextContextContext\"", true);
        org.junit.Assert.assertNull(codeGenerator1);
        org.junit.Assert.assertNull(codeGenerator2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "\"\"__tset\"\"\"\"\"\"\"\"ContextContextContext\"\"" + "'", str5, "\"\"__tset\"\"\"\"\"\"\"\"ContextContextContext\"\"");
    }

    @Test
    public void test3508() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3508");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        python3Target0.language = "";
        org.antlr.v4.codegen.target.Python3Target python3Target3 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean4 = python3Target3.supportsOverloadedMethods();
        java.lang.String str5 = python3Target3.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = null;
        java.lang.String str9 = python3Target3.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator6, "", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = null;
        python3Target3.gen = codeGenerator10;
        java.lang.String[] strArray19 = new java.lang.String[] { "\"\"\"\"", "\\12", "\"\"", "4.5.2.1", "", "\"\"\"\"", "\"\"" };
        java.util.LinkedHashSet<java.lang.String> strSet20 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet20, strArray19);
        python3Target3.badWords = strSet20;
        python3Target0.badWords = strSet20;
        java.lang.String str25 = python3Target0.encodeIntAsCharEscape((int) (byte) 100);
        java.lang.String str26 = python3Target0.getLanguage();
        java.lang.String[] strArray27 = new java.lang.String[] {};
        python3Target0.targetCharValueEscape = strArray27;
        org.antlr.v4.codegen.target.Python3Target.python3Keywords = strArray27;
        org.antlr.v4.codegen.target.Python3Target.python3Keywords = strArray27;
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "4.5.2.1" + "'", str5, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\"\"" + "'", str9, "\"\"");
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "d" + "'", str25, "d");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertNotNull(strArray27);
    }

    @Test
    public void test3509() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3509");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python3Target1.getBadWords();
        java.lang.String str4 = python3Target1.getAltLabelContextStructName("d");
        org.stringtemplate.v4.STGroup sTGroup5 = python3Target1.getTemplates();
        boolean boolean6 = python3Target1.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup7 = python3Target1.getTemplates();
        python3Target1.language = "\"\"";
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = null;
        java.lang.String str13 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator10, "\\\"4.5.2.1\\\"", false);
        org.antlr.v4.codegen.CodeGenerator codeGenerator14 = python3Target1.gen;
        python3Target1.language = "\"\"\"\"\"\"\"\"ContextContextContext";
        boolean boolean17 = python3Target1.wantsBaseListener();
        boolean boolean18 = python3Target1.supportsOverloadedMethods();
        java.lang.String[] strArray19 = python3Target1.targetCharValueEscape;
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "DContext" + "'", str4, "DContext");
        org.junit.Assert.assertNotNull(sTGroup5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(sTGroup7);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "\\\"4.5.2.1\\\"" + "'", str13, "\\\"4.5.2.1\\\"");
        org.junit.Assert.assertNull(codeGenerator14);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(strArray19);
    }

    @Test
    public void test3510() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3510");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.lang.String str2 = python3Target1.getLanguage();
        org.antlr.v4.codegen.target.Python3Target python3Target3 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean4 = python3Target3.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup5 = python3Target3.templates;
        java.lang.String[] strArray8 = new java.lang.String[] { "hi!", "hi!" };
        python3Target3.targetCharValueEscape = strArray8;
        java.lang.String str11 = python3Target3.getTargetStringLiteralFromString("\"\"");
        org.stringtemplate.v4.STGroup sTGroup12 = null;
        python3Target3.templates = sTGroup12;
        java.lang.String[] strArray14 = python3Target3.targetCharValueEscape;
        int int15 = python3Target3.getInlineTestSetWordSize();
        org.antlr.v4.codegen.CodeGenerator codeGenerator16 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target17 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator16);
        java.lang.String str19 = python3Target17.getTargetStringLiteralFromString("");
        int int20 = python3Target17.getSerializedATNSegmentLimit();
        boolean boolean21 = python3Target17.wantsBaseVisitor();
        org.stringtemplate.v4.STGroup sTGroup22 = python3Target17.loadTemplates();
        org.antlr.v4.codegen.CodeGenerator codeGenerator23 = python3Target17.gen;
        org.antlr.v4.codegen.target.Python3Target python3Target24 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean25 = python3Target24.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup26 = python3Target24.templates;
        org.antlr.v4.tool.Grammar grammar27 = null;
        org.stringtemplate.v4.ST sT28 = null;
        python3Target24.genRecognizerHeaderFile(grammar27, sT28, "");
        python3Target24.language = "Python3";
        int int33 = python3Target24.getSerializedATNSegmentLimit();
        org.stringtemplate.v4.STGroup sTGroup34 = python3Target24.loadTemplates();
        python3Target17.templates = sTGroup34;
        java.lang.String str36 = python3Target17.getVersion();
        java.util.Set<java.lang.String> strSet37 = python3Target17.getBadWords();
        python3Target3.badWords = strSet37;
        java.lang.String[] strArray39 = org.antlr.v4.codegen.target.Python3Target.python3Keywords;
        org.antlr.v4.codegen.target.Python3Target.python3Keywords = strArray39;
        python3Target3.targetCharValueEscape = strArray39;
        org.antlr.v4.codegen.target.Python3Target.python3Keywords = strArray39;
        python3Target1.targetCharValueEscape = strArray39;
        java.lang.String str44 = python3Target1.language;
        org.antlr.v4.codegen.CodeGenerator codeGenerator45 = python3Target1.gen;
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "Python3" + "'", str2, "Python3");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(sTGroup5);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "\"\"\"\"" + "'", str11, "\"\"\"\"");
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 64 + "'", int15 == 64);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "\"\"" + "'", str19, "\"\"");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 29 + "'", int20 == 29);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(sTGroup22);
        org.junit.Assert.assertNull(codeGenerator23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNull(sTGroup26);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 29 + "'", int33 == 29);
        org.junit.Assert.assertNotNull(sTGroup34);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "4.5.2.1" + "'", str36, "4.5.2.1");
        org.junit.Assert.assertNotNull(strSet37);
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "Python3" + "'", str44, "Python3");
        org.junit.Assert.assertNull(codeGenerator45);
    }

    @Test
    public void test3511() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3511");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        org.antlr.v4.tool.Grammar grammar3 = null;
        org.stringtemplate.v4.ST sT4 = null;
        python3Target0.genRecognizerHeaderFile(grammar3, sT4, "");
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = python3Target0.getCodeGenerator();
        org.antlr.v4.codegen.target.Python3Target python3Target8 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray9 = python3Target8.targetCharValueEscape;
        org.stringtemplate.v4.STGroup sTGroup10 = python3Target8.templates;
        int int11 = python3Target8.getInlineTestSetWordSize();
        org.antlr.v4.codegen.CodeGenerator codeGenerator12 = python3Target8.gen;
        org.antlr.v4.tool.Grammar grammar13 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target14 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str16 = python3Target14.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.tool.Grammar grammar17 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target18 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean19 = python3Target18.supportsOverloadedMethods();
        java.lang.String str20 = python3Target18.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator21 = null;
        java.lang.String str24 = python3Target18.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator21, "", true);
        java.lang.String str25 = python3Target18.getVersion();
        org.antlr.v4.tool.Grammar grammar26 = null;
        int[] intArray27 = new int[] {};
        java.lang.String[] strArray28 = python3Target18.getTokenTypesAsTargetLabels(grammar26, intArray27);
        java.lang.String[] strArray29 = python3Target14.getTokenTypesAsTargetLabels(grammar17, intArray27);
        java.lang.String[] strArray30 = python3Target8.getTokenTypesAsTargetLabels(grammar13, intArray27);
        org.antlr.v4.codegen.target.Python3Target.python3Keywords = strArray30;
        python3Target0.targetCharValueEscape = strArray30;
        org.antlr.v4.codegen.target.Python3Target.python3Keywords = strArray30;
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertNull(codeGenerator7);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertNull(sTGroup10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 64 + "'", int11 == 64);
        org.junit.Assert.assertNull(codeGenerator12);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "\"\"\"\"\"\"" + "'", str16, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "4.5.2.1" + "'", str20, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "\"\"" + "'", str24, "\"\"");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "4.5.2.1" + "'", str25, "4.5.2.1");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[]");
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertNotNull(strArray30);
    }

    @Test
    public void test3512() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3512");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python3Target1.getBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = null;
        python3Target1.gen = codeGenerator3;
        java.lang.String str6 = python3Target1.getAltLabelContextStructName("hi!");
        boolean boolean7 = python3Target1.supportsOverloadedMethods();
        java.lang.String[] strArray8 = python3Target1.targetCharValueEscape;
        java.lang.String str9 = python3Target1.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = null;
        java.lang.String str13 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator10, "", true);
        java.lang.String[] strArray14 = python3Target1.targetCharValueEscape;
        java.lang.String str16 = python3Target1.getImplicitSetLabel("_tset\"\\\"Python3\\\"\"Context");
        boolean boolean17 = python3Target1.wantsBaseVisitor();
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Hi!Context" + "'", str6, "Hi!Context");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Python3" + "'", str9, "Python3");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "\"\"" + "'", str13, "\"\"");
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "_tset_tset\"\\\"Python3\\\"\"Context" + "'", str16, "_tset_tset\"\\\"Python3\\\"\"Context");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    }

    @Test
    public void test3513() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3513");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!", "hi!" };
        python3Target0.targetCharValueEscape = strArray5;
        java.lang.String str8 = python3Target0.getTargetStringLiteralFromString("\"\"");
        java.lang.String str9 = python3Target0.getLanguage();
        java.lang.String[] strArray10 = python3Target0.targetCharValueEscape;
        python3Target0.language = "\"Hi!Context\"";
        org.antlr.v4.codegen.CodeGenerator codeGenerator13 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target14 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator13);
        java.util.Set<java.lang.String> strSet15 = python3Target14.getBadWords();
        java.lang.String str17 = python3Target14.getAltLabelContextStructName("d");
        org.stringtemplate.v4.STGroup sTGroup18 = python3Target14.getTemplates();
        org.antlr.v4.codegen.CodeGenerator codeGenerator19 = null;
        java.lang.String str22 = python3Target14.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator19, "", true);
        java.lang.String str24 = python3Target14.getImplicitSetLabel("\"\\0\"");
        java.lang.String str26 = python3Target14.getListLabel("\"Python3\"");
        java.lang.String str28 = python3Target14.getListLabel("\"\\\"hi!\\\"\"");
        java.util.Set<java.lang.String> strSet29 = python3Target14.getBadWords();
        python3Target0.badWords = strSet29;
        org.antlr.v4.tool.Grammar grammar31 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str33 = python3Target0.getTokenTypeAsTargetLabel(grammar31, 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\"\"\"\"" + "'", str8, "\"\"\"\"");
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(strSet15);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "DContext" + "'", str17, "DContext");
        org.junit.Assert.assertNotNull(sTGroup18);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "\"\"" + "'", str22, "\"\"");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "_tset\"\\0\"" + "'", str24, "_tset\"\\0\"");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "\"Python3\"" + "'", str26, "\"Python3\"");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "\"\\\"hi!\\\"\"" + "'", str28, "\"\\\"hi!\\\"\"");
        org.junit.Assert.assertNotNull(strSet29);
    }

    @Test
    public void test3514() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3514");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        python3Target0.language = "";
        org.antlr.v4.codegen.target.Python3Target python3Target3 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean4 = python3Target3.supportsOverloadedMethods();
        java.lang.String str5 = python3Target3.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = null;
        java.lang.String str9 = python3Target3.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator6, "", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = null;
        python3Target3.gen = codeGenerator10;
        java.lang.String[] strArray19 = new java.lang.String[] { "\"\"\"\"", "\\12", "\"\"", "4.5.2.1", "", "\"\"\"\"", "\"\"" };
        java.util.LinkedHashSet<java.lang.String> strSet20 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet20, strArray19);
        python3Target3.badWords = strSet20;
        python3Target0.badWords = strSet20;
        java.lang.String str25 = python3Target0.encodeIntAsCharEscape((int) (byte) 100);
        java.lang.String str26 = python3Target0.getLanguage();
        java.lang.String[] strArray27 = new java.lang.String[] {};
        python3Target0.targetCharValueEscape = strArray27;
        boolean boolean29 = python3Target0.wantsBaseListener();
        java.lang.String str30 = python3Target0.getVersion();
        org.antlr.v4.tool.ast.GrammarAST grammarAST31 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean32 = python3Target0.visibleGrammarSymbolCausesIssueInGeneratedCode(grammarAST31);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "4.5.2.1" + "'", str5, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\"\"" + "'", str9, "\"\"");
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "d" + "'", str25, "d");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "4.5.2.1" + "'", str30, "4.5.2.1");
    }

    @Test
    public void test3515() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3515");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!", "hi!" };
        python3Target0.targetCharValueEscape = strArray5;
        java.lang.String[] strArray8 = new java.lang.String[] { "hi!" };
        org.antlr.v4.codegen.target.Python3Target.python3Keywords = strArray8;
        python3Target0.targetCharValueEscape = strArray8;
        java.lang.String str12 = python3Target0.getTargetStringLiteralFromString("\"\"\"\"\"\"");
        int int13 = python3Target0.getInlineTestSetWordSize();
        java.lang.String[] strArray14 = python3Target0.targetCharValueEscape;
        java.lang.String str17 = python3Target0.getTargetStringLiteralFromString("_\"\\\"\\\\\\\"Python3\\\\\\\"\\\"\"", true);
        org.antlr.v4.tool.Rule rule18 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str19 = python3Target0.getRuleFunctionContextStructName(rule18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "\"\"\"\"\"\"\"\"" + "'", str12, "\"\"\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 64 + "'", int13 == 64);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "\"_\"\\\"\\\\\\\"Python3\\\\\\\"\\\"\"\"" + "'", str17, "\"_\"\\\"\\\\\\\"Python3\\\\\\\"\\\"\"\"");
    }

    @Test
    public void test3516() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3516");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        java.lang.String str2 = python3Target0.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = python3Target0.getCodeGenerator();
        org.stringtemplate.v4.STGroup sTGroup4 = null;
        python3Target0.templates = sTGroup4;
        org.stringtemplate.v4.STGroup sTGroup6 = python3Target0.templates;
        java.lang.String[] strArray7 = python3Target0.targetCharValueEscape;
        java.lang.String str10 = python3Target0.getTargetStringLiteralFromString("\"12\"", false);
        org.antlr.v4.codegen.target.Python3Target python3Target11 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean12 = python3Target11.supportsOverloadedMethods();
        java.lang.String str13 = python3Target11.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator14 = python3Target11.getCodeGenerator();
        org.stringtemplate.v4.STGroup sTGroup15 = null;
        python3Target11.templates = sTGroup15;
        org.stringtemplate.v4.STGroup sTGroup17 = python3Target11.templates;
        java.lang.String[] strArray18 = python3Target11.targetCharValueEscape;
        java.util.Set<java.lang.String> strSet19 = python3Target11.badWords;
        java.util.Set<java.lang.String> strSet20 = python3Target11.getBadWords();
        python3Target0.badWords = strSet20;
        int int22 = python3Target0.getSerializedATNSegmentLimit();
        java.lang.String str25 = python3Target0.getTargetStringLiteralFromString("\"tset\\\"\\\"\\\"hi!\\\"\\\"\"", true);
        java.util.Set<java.lang.String> strSet26 = python3Target0.getBadWords();
        org.antlr.v4.tool.Grammar grammar27 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target28 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean29 = python3Target28.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup30 = python3Target28.templates;
        java.lang.String[] strArray33 = new java.lang.String[] { "hi!", "hi!" };
        python3Target28.targetCharValueEscape = strArray33;
        java.lang.String[] strArray36 = new java.lang.String[] { "hi!" };
        org.antlr.v4.codegen.target.Python3Target.python3Keywords = strArray36;
        python3Target28.targetCharValueEscape = strArray36;
        org.antlr.v4.tool.Grammar grammar39 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target40 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str42 = python3Target40.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator43 = null;
        python3Target40.gen = codeGenerator43;
        org.antlr.v4.tool.Grammar grammar45 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target46 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str48 = python3Target46.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.tool.Grammar grammar49 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target50 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean51 = python3Target50.supportsOverloadedMethods();
        java.lang.String str52 = python3Target50.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator53 = null;
        java.lang.String str56 = python3Target50.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator53, "", true);
        java.lang.String str57 = python3Target50.getVersion();
        org.antlr.v4.tool.Grammar grammar58 = null;
        int[] intArray59 = new int[] {};
        java.lang.String[] strArray60 = python3Target50.getTokenTypesAsTargetLabels(grammar58, intArray59);
        java.lang.String[] strArray61 = python3Target46.getTokenTypesAsTargetLabels(grammar49, intArray59);
        java.lang.String[] strArray62 = python3Target40.getTokenTypesAsTargetLabels(grammar45, intArray59);
        java.lang.String[] strArray63 = python3Target28.getTokenTypesAsTargetLabels(grammar39, intArray59);
        java.lang.String[] strArray64 = python3Target0.getTokenTypesAsTargetLabels(grammar27, intArray59);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "4.5.2.1" + "'", str2, "4.5.2.1");
        org.junit.Assert.assertNull(codeGenerator3);
        org.junit.Assert.assertNull(sTGroup6);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\"12\"" + "'", str10, "\"12\"");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "4.5.2.1" + "'", str13, "4.5.2.1");
        org.junit.Assert.assertNull(codeGenerator14);
        org.junit.Assert.assertNull(sTGroup17);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertNotNull(strSet19);
        org.junit.Assert.assertNotNull(strSet20);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 29 + "'", int22 == 29);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "\"\"tset\\\"\\\"\\\"hi!\\\"\\\"\"\"" + "'", str25, "\"\"tset\\\"\\\"\\\"hi!\\\"\\\"\"\"");
        org.junit.Assert.assertNotNull(strSet26);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNull(sTGroup30);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "\"\"\"\"\"\"" + "'", str42, "\"\"\"\"\"\"");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "\"\"\"\"\"\"" + "'", str48, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "4.5.2.1" + "'", str52, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "\"\"" + "'", str56, "\"\"");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "4.5.2.1" + "'", str57, "4.5.2.1");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[]");
        org.junit.Assert.assertNotNull(strArray60);
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertNotNull(strArray62);
        org.junit.Assert.assertNotNull(strArray63);
        org.junit.Assert.assertNotNull(strArray64);
    }

    @Test
    public void test3517() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3517");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        org.antlr.v4.codegen.CodeGenerator codeGenerator1 = python3Target0.getCodeGenerator();
        org.antlr.v4.codegen.CodeGenerator codeGenerator2 = python3Target0.getCodeGenerator();
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = python3Target0.gen;
        org.junit.Assert.assertNull(codeGenerator1);
        org.junit.Assert.assertNull(codeGenerator2);
        org.junit.Assert.assertNull(codeGenerator3);
    }

    @Test
    public void test3518() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3518");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        java.lang.String str2 = python3Target0.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = null;
        java.lang.String str6 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator3, "", true);
        java.lang.String str7 = python3Target0.getVersion();
        org.antlr.v4.tool.Grammar grammar8 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str10 = python3Target0.getTokenTypeAsTargetLabel(grammar8, (int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "4.5.2.1" + "'", str2, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\"\"" + "'", str6, "\"\"");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "4.5.2.1" + "'", str7, "4.5.2.1");
    }

    @Test
    public void test3519() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3519");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!", "hi!" };
        python3Target0.targetCharValueEscape = strArray5;
        java.lang.String str8 = python3Target0.getTargetStringLiteralFromString("\"\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator9 = python3Target0.gen;
        java.util.Set<java.lang.String> strSet10 = python3Target0.badWords;
        org.antlr.v4.tool.Grammar grammar11 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator12 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target13 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator12);
        java.util.Set<java.lang.String> strSet14 = python3Target13.getBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator15 = null;
        python3Target13.gen = codeGenerator15;
        java.lang.String str18 = python3Target13.getAltLabelContextStructName("hi!");
        java.lang.String str21 = python3Target13.getTargetStringLiteralFromString("\"hi!\"", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator22 = null;
        python3Target13.gen = codeGenerator22;
        java.lang.String str24 = python3Target13.language;
        int int25 = python3Target13.getSerializedATNSegmentLimit();
        java.lang.String str26 = python3Target13.getLanguage();
        org.antlr.v4.tool.Grammar grammar27 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target28 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean29 = python3Target28.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup30 = python3Target28.templates;
        org.antlr.v4.tool.Grammar grammar31 = null;
        org.stringtemplate.v4.ST sT32 = null;
        python3Target28.genRecognizerHeaderFile(grammar31, sT32, "");
        python3Target28.language = "Python3";
        java.util.Set<java.lang.String> strSet37 = null;
        python3Target28.badWords = strSet37;
        org.antlr.v4.codegen.CodeGenerator codeGenerator39 = null;
        java.lang.String str42 = python3Target28.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator39, "\"Hi!Context\"", false);
        java.lang.String str44 = python3Target28.getListLabel("Python3");
        java.lang.String str46 = python3Target28.getTargetStringLiteralFromString("\\0");
        org.antlr.v4.tool.Grammar grammar47 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target48 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str50 = python3Target48.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.tool.Grammar grammar51 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target52 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean53 = python3Target52.supportsOverloadedMethods();
        java.lang.String str54 = python3Target52.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator55 = null;
        java.lang.String str58 = python3Target52.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator55, "", true);
        java.lang.String str59 = python3Target52.getVersion();
        org.antlr.v4.tool.Grammar grammar60 = null;
        int[] intArray61 = new int[] {};
        java.lang.String[] strArray62 = python3Target52.getTokenTypesAsTargetLabels(grammar60, intArray61);
        java.lang.String[] strArray63 = python3Target48.getTokenTypesAsTargetLabels(grammar51, intArray61);
        java.lang.String[] strArray64 = python3Target28.getTokenTypesAsTargetLabels(grammar47, intArray61);
        java.lang.String[] strArray65 = python3Target13.getTokenTypesAsTargetLabels(grammar27, intArray61);
        java.lang.String[] strArray66 = python3Target0.getTokenTypesAsTargetLabels(grammar11, intArray61);
        java.lang.String str67 = python3Target0.getVersion();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\"\"\"\"" + "'", str8, "\"\"\"\"");
        org.junit.Assert.assertNull(codeGenerator9);
        org.junit.Assert.assertNotNull(strSet10);
        org.junit.Assert.assertNotNull(strSet14);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Hi!Context" + "'", str18, "Hi!Context");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "\"\\\"hi!\\\"\"" + "'", str21, "\"\\\"hi!\\\"\"");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "Python3" + "'", str24, "Python3");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 29 + "'", int25 == 29);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "Python3" + "'", str26, "Python3");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNull(sTGroup30);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "Hi!Context" + "'", str42, "Hi!Context");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "Python3" + "'", str44, "Python3");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "\"\\0\"" + "'", str46, "\"\\0\"");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "\"\"\"\"\"\"" + "'", str50, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "4.5.2.1" + "'", str54, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "\"\"" + "'", str58, "\"\"");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "4.5.2.1" + "'", str59, "4.5.2.1");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[]");
        org.junit.Assert.assertNotNull(strArray62);
        org.junit.Assert.assertNotNull(strArray63);
        org.junit.Assert.assertNotNull(strArray64);
        org.junit.Assert.assertNotNull(strArray65);
        org.junit.Assert.assertNotNull(strArray66);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "4.5.2.1" + "'", str67, "4.5.2.1");
    }

    @Test
    public void test3520() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3520");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.lang.String str3 = python3Target1.getTargetStringLiteralFromString("");
        int int4 = python3Target1.getSerializedATNSegmentLimit();
        boolean boolean5 = python3Target1.wantsBaseVisitor();
        org.stringtemplate.v4.STGroup sTGroup6 = python3Target1.loadTemplates();
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = python3Target1.gen;
        org.antlr.v4.codegen.target.Python3Target python3Target8 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean9 = python3Target8.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup10 = python3Target8.templates;
        org.antlr.v4.tool.Grammar grammar11 = null;
        org.stringtemplate.v4.ST sT12 = null;
        python3Target8.genRecognizerHeaderFile(grammar11, sT12, "");
        python3Target8.language = "Python3";
        int int17 = python3Target8.getSerializedATNSegmentLimit();
        org.stringtemplate.v4.STGroup sTGroup18 = python3Target8.loadTemplates();
        python3Target1.templates = sTGroup18;
        java.lang.String str20 = python3Target1.getVersion();
        java.lang.String str21 = python3Target1.language;
        org.stringtemplate.v4.STGroup sTGroup22 = python3Target1.templates;
        java.util.Set<java.lang.String> strSet23 = python3Target1.badWords;
        org.antlr.v4.tool.ast.GrammarAST grammarAST24 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean25 = python3Target1.grammarSymbolCausesIssueInGeneratedCode(grammarAST24);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "\"\"" + "'", str3, "\"\"");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 29 + "'", int4 == 29);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(sTGroup6);
        org.junit.Assert.assertNull(codeGenerator7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(sTGroup10);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 29 + "'", int17 == 29);
        org.junit.Assert.assertNotNull(sTGroup18);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "4.5.2.1" + "'", str20, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Python3" + "'", str21, "Python3");
        org.junit.Assert.assertNotNull(sTGroup22);
        org.junit.Assert.assertNotNull(strSet23);
    }

    @Test
    public void test3521() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3521");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.lang.String str3 = python3Target1.getTargetStringLiteralFromString("");
        int int4 = python3Target1.getSerializedATNSegmentLimit();
        boolean boolean5 = python3Target1.wantsBaseVisitor();
        java.lang.String str6 = python3Target1.getVersion();
        python3Target1.language = "\"\"\"\"\"\"\"\"";
        org.antlr.v4.codegen.CodeGenerator codeGenerator9 = null;
        java.lang.String str12 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator9, "__tset\"\"\"\"\"\"\"\"ContextContextContext", false);
        org.antlr.v4.codegen.CodeGenerator codeGenerator13 = python3Target1.getCodeGenerator();
        java.lang.String str15 = python3Target1.encodeIntAsCharEscape(100);
        org.antlr.v4.tool.ast.GrammarAST grammarAST16 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean17 = python3Target1.visibleGrammarSymbolCausesIssueInGeneratedCode(grammarAST16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "\"\"" + "'", str3, "\"\"");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 29 + "'", int4 == 29);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "4.5.2.1" + "'", str6, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "_tset\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"ContextContextContex" + "'", str12, "_tset\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"ContextContextContex");
        org.junit.Assert.assertNull(codeGenerator13);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "d" + "'", str15, "d");
    }

    @Test
    public void test3522() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3522");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        java.lang.String str2 = python3Target0.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = null;
        java.lang.String str6 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator3, "", true);
        java.lang.String str7 = python3Target0.getVersion();
        org.antlr.v4.tool.Grammar grammar8 = null;
        int[] intArray9 = new int[] {};
        java.lang.String[] strArray10 = python3Target0.getTokenTypesAsTargetLabels(grammar8, intArray9);
        java.lang.String[] strArray11 = python3Target0.targetCharValueEscape;
        java.util.Set<java.lang.String> strSet12 = python3Target0.badWords;
        python3Target0.addBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator14 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target15 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator14);
        java.util.Set<java.lang.String> strSet16 = python3Target15.getBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator17 = null;
        python3Target15.gen = codeGenerator17;
        org.antlr.v4.tool.Grammar grammar19 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target20 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean21 = python3Target20.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup22 = python3Target20.templates;
        org.antlr.v4.tool.Grammar grammar23 = null;
        org.stringtemplate.v4.ST sT24 = null;
        python3Target20.genRecognizerHeaderFile(grammar23, sT24, "");
        boolean boolean27 = python3Target20.supportsOverloadedMethods();
        python3Target20.language = "\"\\12\"";
        org.antlr.v4.tool.Grammar grammar30 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator31 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target32 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator31);
        java.util.Set<java.lang.String> strSet33 = python3Target32.getBadWords();
        java.lang.String str35 = python3Target32.getAltLabelContextStructName("d");
        java.lang.String str37 = python3Target32.getTargetStringLiteralFromString("\"\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator38 = python3Target32.getCodeGenerator();
        org.antlr.v4.tool.Grammar grammar39 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator40 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target41 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator40);
        java.util.Set<java.lang.String> strSet42 = python3Target41.getBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator43 = null;
        python3Target41.gen = codeGenerator43;
        java.lang.String str46 = python3Target41.getAltLabelContextStructName("hi!");
        java.lang.String str49 = python3Target41.getTargetStringLiteralFromString("\"hi!\"", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator50 = null;
        python3Target41.gen = codeGenerator50;
        org.antlr.v4.tool.Grammar grammar52 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target53 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray54 = python3Target53.targetCharValueEscape;
        org.stringtemplate.v4.STGroup sTGroup55 = python3Target53.templates;
        int int56 = python3Target53.getInlineTestSetWordSize();
        org.antlr.v4.codegen.CodeGenerator codeGenerator57 = python3Target53.gen;
        org.antlr.v4.tool.Grammar grammar58 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target59 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str61 = python3Target59.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.tool.Grammar grammar62 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target63 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean64 = python3Target63.supportsOverloadedMethods();
        java.lang.String str65 = python3Target63.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator66 = null;
        java.lang.String str69 = python3Target63.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator66, "", true);
        java.lang.String str70 = python3Target63.getVersion();
        org.antlr.v4.tool.Grammar grammar71 = null;
        int[] intArray72 = new int[] {};
        java.lang.String[] strArray73 = python3Target63.getTokenTypesAsTargetLabels(grammar71, intArray72);
        java.lang.String[] strArray74 = python3Target59.getTokenTypesAsTargetLabels(grammar62, intArray72);
        java.lang.String[] strArray75 = python3Target53.getTokenTypesAsTargetLabels(grammar58, intArray72);
        java.lang.String[] strArray76 = python3Target41.getTokenTypesAsTargetLabels(grammar52, intArray72);
        java.lang.String[] strArray77 = python3Target32.getTokenTypesAsTargetLabels(grammar39, intArray72);
        java.lang.String[] strArray78 = python3Target20.getTokenTypesAsTargetLabels(grammar30, intArray72);
        java.lang.String[] strArray79 = python3Target15.getTokenTypesAsTargetLabels(grammar19, intArray72);
        python3Target0.targetCharValueEscape = strArray79;
        org.antlr.v4.codegen.CodeGenerator codeGenerator81 = null;
        java.lang.String str84 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator81, "\\nContext", false);
        boolean boolean85 = python3Target0.supportsOverloadedMethods();
        java.lang.String str86 = python3Target0.language;
        org.antlr.v4.codegen.CodeGenerator codeGenerator87 = python3Target0.gen;
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "4.5.2.1" + "'", str2, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\"\"" + "'", str6, "\"\"");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "4.5.2.1" + "'", str7, "4.5.2.1");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[]");
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(sTGroup22);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(strSet33);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "DContext" + "'", str35, "DContext");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "\"\\\"\\\"\"" + "'", str37, "\"\\\"\\\"\"");
        org.junit.Assert.assertNull(codeGenerator38);
        org.junit.Assert.assertNotNull(strSet42);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "Hi!Context" + "'", str46, "Hi!Context");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "\"\\\"hi!\\\"\"" + "'", str49, "\"\\\"hi!\\\"\"");
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertNull(sTGroup55);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 64 + "'", int56 == 64);
        org.junit.Assert.assertNull(codeGenerator57);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "\"\"\"\"\"\"" + "'", str61, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "4.5.2.1" + "'", str65, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "\"\"" + "'", str69, "\"\"");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "4.5.2.1" + "'", str70, "4.5.2.1");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[]");
        org.junit.Assert.assertNotNull(strArray73);
        org.junit.Assert.assertNotNull(strArray74);
        org.junit.Assert.assertNotNull(strArray75);
        org.junit.Assert.assertNotNull(strArray76);
        org.junit.Assert.assertNotNull(strArray77);
        org.junit.Assert.assertNotNull(strArray78);
        org.junit.Assert.assertNotNull(strArray79);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "nContex" + "'", str84, "nContex");
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertNull(str86);
        org.junit.Assert.assertNull(codeGenerator87);
    }

    @Test
    public void test3523() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3523");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.lang.String str2 = python3Target1.getVersion();
        int int3 = python3Target1.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet4 = python3Target1.getBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator5 = python3Target1.gen;
        python3Target1.language = "\"\\1\"";
        // The following exception was thrown during execution in test generation
        try {
            org.stringtemplate.v4.STGroup sTGroup8 = python3Target1.getTemplates();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "4.5.2.1" + "'", str2, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 64 + "'", int3 == 64);
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertNull(codeGenerator5);
    }

    @Test
    public void test3524() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3524");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        java.lang.String str2 = python3Target0.getVersion();
        org.antlr.v4.codegen.target.Python3Target python3Target3 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean4 = python3Target3.supportsOverloadedMethods();
        python3Target3.language = "\"\"\"\"";
        org.antlr.v4.codegen.target.Python3Target python3Target7 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray8 = python3Target7.targetCharValueEscape;
        org.stringtemplate.v4.STGroup sTGroup9 = python3Target7.templates;
        int int10 = python3Target7.getInlineTestSetWordSize();
        org.antlr.v4.codegen.CodeGenerator codeGenerator11 = python3Target7.gen;
        org.antlr.v4.tool.Grammar grammar12 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target13 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str15 = python3Target13.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.tool.Grammar grammar16 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target17 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean18 = python3Target17.supportsOverloadedMethods();
        java.lang.String str19 = python3Target17.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator20 = null;
        java.lang.String str23 = python3Target17.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator20, "", true);
        java.lang.String str24 = python3Target17.getVersion();
        org.antlr.v4.tool.Grammar grammar25 = null;
        int[] intArray26 = new int[] {};
        java.lang.String[] strArray27 = python3Target17.getTokenTypesAsTargetLabels(grammar25, intArray26);
        java.lang.String[] strArray28 = python3Target13.getTokenTypesAsTargetLabels(grammar16, intArray26);
        java.lang.String[] strArray29 = python3Target7.getTokenTypesAsTargetLabels(grammar12, intArray26);
        java.lang.String[] strArray52 = new java.lang.String[] { "\"\\\"\\\"\"", "DContext", "", "hi!", "d", "\"\"\"\"\"\"", "\"\"\"\"\"\"", "_tsetPython3", "\"hi!\"", "\"hi!\"", "Hi!Context", "\"\"\"\"\"\"", "\"hi!\"", "12", "\"4.5.2.1\"", "DContext", "Hi!Context", "Python3", "\"hi!\"", "", "\"\"", "\\\"4.5.2.1\\\"" };
        java.util.LinkedHashSet<java.lang.String> strSet53 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet53, strArray52);
        python3Target7.badWords = strSet53;
        org.antlr.v4.codegen.target.Python3Target python3Target56 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean57 = python3Target56.supportsOverloadedMethods();
        java.lang.String str58 = python3Target56.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator59 = null;
        java.lang.String str62 = python3Target56.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator59, "", true);
        java.lang.String str63 = python3Target56.getVersion();
        org.antlr.v4.codegen.target.Python3Target python3Target64 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str66 = python3Target64.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.tool.Grammar grammar67 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target68 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean69 = python3Target68.supportsOverloadedMethods();
        java.lang.String str70 = python3Target68.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator71 = null;
        java.lang.String str74 = python3Target68.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator71, "", true);
        java.lang.String str75 = python3Target68.getVersion();
        org.antlr.v4.tool.Grammar grammar76 = null;
        int[] intArray77 = new int[] {};
        java.lang.String[] strArray78 = python3Target68.getTokenTypesAsTargetLabels(grammar76, intArray77);
        java.lang.String[] strArray79 = python3Target64.getTokenTypesAsTargetLabels(grammar67, intArray77);
        java.lang.String[] strArray80 = python3Target64.targetCharValueEscape;
        python3Target56.targetCharValueEscape = strArray80;
        python3Target7.targetCharValueEscape = strArray80;
        python3Target3.targetCharValueEscape = strArray80;
        python3Target0.targetCharValueEscape = strArray80;
        org.antlr.v4.codegen.CodeGenerator codeGenerator85 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target86 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator85);
        java.util.Set<java.lang.String> strSet87 = python3Target86.getBadWords();
        java.lang.String str89 = python3Target86.getAltLabelContextStructName("d");
        org.stringtemplate.v4.STGroup sTGroup90 = python3Target86.getTemplates();
        boolean boolean91 = python3Target86.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup92 = python3Target86.getTemplates();
        python3Target0.templates = sTGroup92;
        java.lang.String str95 = python3Target0.getTargetStringLiteralFromString("");
        org.antlr.v4.tool.ast.GrammarAST grammarAST96 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str97 = python3Target0.getLoopLabel(grammarAST96);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "4.5.2.1" + "'", str2, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNull(sTGroup9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 64 + "'", int10 == 64);
        org.junit.Assert.assertNull(codeGenerator11);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "\"\"\"\"\"\"" + "'", str15, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "4.5.2.1" + "'", str19, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "\"\"" + "'", str23, "\"\"");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "4.5.2.1" + "'", str24, "4.5.2.1");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[]");
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertNotNull(strArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "4.5.2.1" + "'", str58, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "\"\"" + "'", str62, "\"\"");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "4.5.2.1" + "'", str63, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "\"\"\"\"\"\"" + "'", str66, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "4.5.2.1" + "'", str70, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "\"\"" + "'", str74, "\"\"");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "4.5.2.1" + "'", str75, "4.5.2.1");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[]");
        org.junit.Assert.assertNotNull(strArray78);
        org.junit.Assert.assertNotNull(strArray79);
        org.junit.Assert.assertNotNull(strArray80);
        org.junit.Assert.assertNotNull(strSet87);
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "DContext" + "'", str89, "DContext");
        org.junit.Assert.assertNotNull(sTGroup90);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertNotNull(sTGroup92);
        org.junit.Assert.assertEquals("'" + str95 + "' != '" + "\"\"" + "'", str95, "\"\"");
    }

    @Test
    public void test3525() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3525");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.lang.String str3 = python3Target1.getTargetStringLiteralFromString("");
        int int4 = python3Target1.getSerializedATNSegmentLimit();
        boolean boolean5 = python3Target1.wantsBaseVisitor();
        org.stringtemplate.v4.STGroup sTGroup6 = python3Target1.loadTemplates();
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = python3Target1.gen;
        org.antlr.v4.codegen.target.Python3Target python3Target8 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean9 = python3Target8.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup10 = python3Target8.templates;
        org.antlr.v4.tool.Grammar grammar11 = null;
        org.stringtemplate.v4.ST sT12 = null;
        python3Target8.genRecognizerHeaderFile(grammar11, sT12, "");
        python3Target8.language = "Python3";
        int int17 = python3Target8.getSerializedATNSegmentLimit();
        org.stringtemplate.v4.STGroup sTGroup18 = python3Target8.loadTemplates();
        python3Target1.templates = sTGroup18;
        org.antlr.v4.tool.Grammar grammar20 = null;
        org.stringtemplate.v4.ST sT21 = null;
        python3Target1.genRecognizerHeaderFile(grammar20, sT21, "\"_tset12\"");
        int int24 = python3Target1.getSerializedATNSegmentLimit();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str26 = python3Target1.getElementName("_tset\"\\\"\\\\\\\"\\\\\\\"4.5.2.1\\\\\\\"\\\\\\\"\\\"Context\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "\"\"" + "'", str3, "\"\"");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 29 + "'", int4 == 29);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(sTGroup6);
        org.junit.Assert.assertNull(codeGenerator7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(sTGroup10);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 29 + "'", int17 == 29);
        org.junit.Assert.assertNotNull(sTGroup18);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 29 + "'", int24 == 29);
    }

    @Test
    public void test3526() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3526");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!", "hi!" };
        python3Target0.targetCharValueEscape = strArray5;
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = null;
        java.lang.String str10 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator7, "", false);
        org.antlr.v4.codegen.CodeGenerator codeGenerator11 = python3Target0.gen;
        org.antlr.v4.codegen.target.Python3Target python3Target12 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray13 = python3Target12.targetCharValueEscape;
        org.stringtemplate.v4.STGroup sTGroup14 = python3Target12.templates;
        org.antlr.v4.codegen.CodeGenerator codeGenerator15 = null;
        java.lang.String str18 = python3Target12.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator15, "\"\\12\"", false);
        int int19 = python3Target12.getSerializedATNSegmentLimit();
        boolean boolean20 = python3Target12.templatesExist();
        boolean boolean21 = python3Target12.supportsOverloadedMethods();
        org.antlr.v4.tool.Grammar grammar22 = null;
        org.stringtemplate.v4.ST sT23 = null;
        python3Target12.genRecognizerHeaderFile(grammar22, sT23, "_tsetPython3");
        java.util.Set<java.lang.String> strSet26 = python3Target12.badWords;
        python3Target0.badWords = strSet26;
        java.lang.String str28 = python3Target0.language;
        java.lang.String str29 = python3Target0.language;
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNull(codeGenerator11);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertNull(sTGroup14);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "12" + "'", str18, "12");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 29 + "'", int19 == 29);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(strSet26);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNull(str29);
    }

    @Test
    public void test3527() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3527");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str2 = python3Target0.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = null;
        python3Target0.gen = codeGenerator3;
        java.lang.String str5 = python3Target0.getVersion();
        org.antlr.v4.codegen.target.Python3Target python3Target6 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean7 = python3Target6.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup8 = python3Target6.templates;
        org.antlr.v4.tool.Grammar grammar9 = null;
        org.stringtemplate.v4.ST sT10 = null;
        python3Target6.genRecognizerHeaderFile(grammar9, sT10, "");
        python3Target6.language = "Python3";
        int int15 = python3Target6.getSerializedATNSegmentLimit();
        org.stringtemplate.v4.STGroup sTGroup16 = python3Target6.loadTemplates();
        python3Target0.templates = sTGroup16;
        python3Target0.addBadWords();
        java.lang.String str20 = python3Target0.getAltLabelContextStructName("_\"_tset12\"Context");
        boolean boolean21 = python3Target0.supportsOverloadedMethods();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "\"\"\"\"\"\"" + "'", str2, "\"\"\"\"\"\"");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "4.5.2.1" + "'", str5, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(sTGroup8);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 29 + "'", int15 == 29);
        org.junit.Assert.assertNotNull(sTGroup16);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "_\"_tset12\"ContextContext" + "'", str20, "_\"_tset12\"ContextContext");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
    }

    @Test
    public void test3528() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3528");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        java.util.Set<java.lang.String> strSet2 = python3Target0.badWords;
        boolean boolean3 = python3Target0.templatesExist();
        java.lang.String str4 = python3Target0.getLanguage();
        java.lang.String[] strArray5 = python3Target0.targetCharValueEscape;
        python3Target0.addBadWords();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(strArray5);
    }

    @Test
    public void test3529() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3529");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        python3Target0.language = "";
        org.antlr.v4.codegen.target.Python3Target python3Target3 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean4 = python3Target3.supportsOverloadedMethods();
        java.lang.String str5 = python3Target3.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = null;
        java.lang.String str9 = python3Target3.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator6, "", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = null;
        python3Target3.gen = codeGenerator10;
        java.lang.String[] strArray19 = new java.lang.String[] { "\"\"\"\"", "\\12", "\"\"", "4.5.2.1", "", "\"\"\"\"", "\"\"" };
        java.util.LinkedHashSet<java.lang.String> strSet20 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet20, strArray19);
        python3Target3.badWords = strSet20;
        python3Target0.badWords = strSet20;
        java.lang.String str25 = python3Target0.encodeIntAsCharEscape((int) (byte) 100);
        java.lang.String str26 = python3Target0.getLanguage();
        boolean boolean27 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup28 = python3Target0.templates;
        java.lang.String str30 = python3Target0.getTargetStringLiteralFromString("\"\"DContext\"\"Context");
        int int31 = python3Target0.getSerializedATNSegmentLimit();
        java.util.Set<java.lang.String> strSet32 = python3Target0.badWords;
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "4.5.2.1" + "'", str5, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\"\"" + "'", str9, "\"\"");
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "d" + "'", str25, "d");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNull(sTGroup28);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "\"\"\"DContext\"\"Context\"" + "'", str30, "\"\"\"DContext\"\"Context\"");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 29 + "'", int31 == 29);
        org.junit.Assert.assertNotNull(strSet32);
    }

    @Test
    public void test3530() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3530");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python3Target1.getBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = null;
        python3Target1.gen = codeGenerator3;
        java.lang.String str6 = python3Target1.getAltLabelContextStructName("hi!");
        java.lang.String str9 = python3Target1.getTargetStringLiteralFromString("\"hi!\"", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = null;
        python3Target1.gen = codeGenerator10;
        java.lang.String str12 = python3Target1.language;
        org.antlr.v4.codegen.CodeGenerator codeGenerator13 = python3Target1.gen;
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Hi!Context" + "'", str6, "Hi!Context");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\"\\\"hi!\\\"\"" + "'", str9, "\"\\\"hi!\\\"\"");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Python3" + "'", str12, "Python3");
        org.junit.Assert.assertNull(codeGenerator13);
    }

    @Test
    public void test3531() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3531");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!", "hi!" };
        python3Target0.targetCharValueEscape = strArray5;
        java.lang.String str8 = python3Target0.getTargetStringLiteralFromString("\"\"");
        java.lang.String str9 = python3Target0.getLanguage();
        java.util.Set<java.lang.String> strSet10 = python3Target0.getBadWords();
        org.antlr.v4.codegen.target.Python3Target python3Target11 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean12 = python3Target11.supportsOverloadedMethods();
        java.lang.String str13 = python3Target11.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator14 = null;
        java.lang.String str17 = python3Target11.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator14, "", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator18 = null;
        python3Target11.gen = codeGenerator18;
        java.lang.String[] strArray27 = new java.lang.String[] { "\"\"\"\"", "\\12", "\"\"", "4.5.2.1", "", "\"\"\"\"", "\"\"" };
        java.util.LinkedHashSet<java.lang.String> strSet28 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet28, strArray27);
        python3Target11.badWords = strSet28;
        boolean boolean31 = python3Target11.templatesExist();
        org.antlr.v4.codegen.CodeGenerator codeGenerator32 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target33 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator32);
        java.lang.String str35 = python3Target33.getTargetStringLiteralFromString("");
        int int36 = python3Target33.getSerializedATNSegmentLimit();
        boolean boolean37 = python3Target33.wantsBaseVisitor();
        org.stringtemplate.v4.STGroup sTGroup38 = python3Target33.loadTemplates();
        python3Target11.templates = sTGroup38;
        python3Target0.templates = sTGroup38;
        java.lang.String str42 = python3Target0.getImplicitRuleLabel("_tset12");
        java.lang.String str44 = python3Target0.getImplicitSetLabel("\\64");
        org.antlr.v4.tool.Grammar grammar45 = null;
        org.stringtemplate.v4.ST sT46 = null;
        python3Target0.genRecognizerHeaderFile(grammar45, sT46, "\"_12\"");
        python3Target0.addBadWords();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\"\"\"\"" + "'", str8, "\"\"\"\"");
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(strSet10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "4.5.2.1" + "'", str13, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "\"\"" + "'", str17, "\"\"");
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "\"\"" + "'", str35, "\"\"");
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 29 + "'", int36 == 29);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(sTGroup38);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "__tset12" + "'", str42, "__tset12");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "_tset\\64" + "'", str44, "_tset\\64");
    }

    @Test
    public void test3532() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3532");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.lang.String str3 = python3Target1.getTargetStringLiteralFromString("");
        int int4 = python3Target1.getSerializedATNSegmentLimit();
        boolean boolean5 = python3Target1.wantsBaseVisitor();
        java.lang.String str6 = python3Target1.getVersion();
        java.lang.String str8 = python3Target1.encodeIntAsCharEscape(29);
        org.antlr.v4.codegen.CodeGenerator codeGenerator9 = python3Target1.getCodeGenerator();
        int int10 = python3Target1.getSerializedATNSegmentLimit();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str12 = python3Target1.getElementListName("_\\\"\\\"\\\\\\\"\\\\\\\"hi!\\\\\\\"\\\\\\\"\\\"\\\"Context");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "\"\"" + "'", str3, "\"\"");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 29 + "'", int4 == 29);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "4.5.2.1" + "'", str6, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\\35" + "'", str8, "\\35");
        org.junit.Assert.assertNull(codeGenerator9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 29 + "'", int10 == 29);
    }

    @Test
    public void test3533() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3533");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python3Target1.getBadWords();
        java.lang.String str4 = python3Target1.getAltLabelContextStructName("d");
        org.stringtemplate.v4.STGroup sTGroup5 = python3Target1.getTemplates();
        boolean boolean6 = python3Target1.supportsOverloadedMethods();
        java.lang.String str8 = python3Target1.getImplicitRuleLabel("12");
        java.lang.String str9 = python3Target1.getVersion();
        java.util.Set<java.lang.String> strSet10 = python3Target1.badWords;
        java.lang.String str12 = python3Target1.getAltLabelContextStructName("\\0");
        python3Target1.language = "\"\\\"\\\"\\\\0\\\"\\\"\"Context";
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "DContext" + "'", str4, "DContext");
        org.junit.Assert.assertNotNull(sTGroup5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "_12" + "'", str8, "_12");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "4.5.2.1" + "'", str9, "4.5.2.1");
        org.junit.Assert.assertNotNull(strSet10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "\\0Context" + "'", str12, "\\0Context");
    }

    @Test
    public void test3534() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3534");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray1 = python3Target0.targetCharValueEscape;
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = null;
        java.lang.String str6 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator3, "\"\\12\"", false);
        java.lang.String str7 = python3Target0.getLanguage();
        boolean boolean8 = python3Target0.supportsOverloadedMethods();
        org.antlr.v4.tool.Grammar grammar9 = null;
        org.stringtemplate.v4.ST sT10 = null;
        python3Target0.genRecognizerHeaderFile(grammar9, sT10, "\"Hi!Context\"");
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "12" + "'", str6, "12");
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test3535() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3535");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        org.antlr.v4.tool.Grammar grammar3 = null;
        org.stringtemplate.v4.ST sT4 = null;
        python3Target0.genRecognizerHeaderFile(grammar3, sT4, "");
        python3Target0.language = "Python3";
        java.util.Set<java.lang.String> strSet9 = null;
        python3Target0.badWords = strSet9;
        org.antlr.v4.codegen.CodeGenerator codeGenerator11 = null;
        java.lang.String str14 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator11, "\"Hi!Context\"", false);
        java.lang.String str16 = python3Target0.getListLabel("Python3");
        java.lang.String str18 = python3Target0.getTargetStringLiteralFromString("\\0");
        org.stringtemplate.v4.STGroup sTGroup19 = python3Target0.getTemplates();
        org.antlr.v4.tool.Grammar grammar20 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target21 = new org.antlr.v4.codegen.target.Python3Target();
        python3Target21.language = "4.5.2.1";
        org.antlr.v4.codegen.CodeGenerator codeGenerator24 = python3Target21.getCodeGenerator();
        org.antlr.v4.codegen.CodeGenerator codeGenerator25 = python3Target21.gen;
        java.util.Set<java.lang.String> strSet26 = python3Target21.badWords;
        org.antlr.v4.tool.Grammar grammar27 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target28 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean29 = python3Target28.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup30 = python3Target28.templates;
        java.lang.String[] strArray33 = new java.lang.String[] { "hi!", "hi!" };
        python3Target28.targetCharValueEscape = strArray33;
        java.lang.String[] strArray36 = new java.lang.String[] { "hi!" };
        org.antlr.v4.codegen.target.Python3Target.python3Keywords = strArray36;
        python3Target28.targetCharValueEscape = strArray36;
        org.antlr.v4.tool.Grammar grammar39 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target40 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str42 = python3Target40.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator43 = null;
        python3Target40.gen = codeGenerator43;
        org.antlr.v4.tool.Grammar grammar45 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target46 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str48 = python3Target46.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.tool.Grammar grammar49 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target50 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean51 = python3Target50.supportsOverloadedMethods();
        java.lang.String str52 = python3Target50.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator53 = null;
        java.lang.String str56 = python3Target50.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator53, "", true);
        java.lang.String str57 = python3Target50.getVersion();
        org.antlr.v4.tool.Grammar grammar58 = null;
        int[] intArray59 = new int[] {};
        java.lang.String[] strArray60 = python3Target50.getTokenTypesAsTargetLabels(grammar58, intArray59);
        java.lang.String[] strArray61 = python3Target46.getTokenTypesAsTargetLabels(grammar49, intArray59);
        java.lang.String[] strArray62 = python3Target40.getTokenTypesAsTargetLabels(grammar45, intArray59);
        java.lang.String[] strArray63 = python3Target28.getTokenTypesAsTargetLabels(grammar39, intArray59);
        java.lang.String[] strArray64 = python3Target21.getTokenTypesAsTargetLabels(grammar27, intArray59);
        java.lang.String[] strArray65 = python3Target0.getTokenTypesAsTargetLabels(grammar20, intArray59);
        int int66 = python3Target0.getInlineTestSetWordSize();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Hi!Context" + "'", str14, "Hi!Context");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Python3" + "'", str16, "Python3");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "\"\\0\"" + "'", str18, "\"\\0\"");
        org.junit.Assert.assertNotNull(sTGroup19);
        org.junit.Assert.assertNull(codeGenerator24);
        org.junit.Assert.assertNull(codeGenerator25);
        org.junit.Assert.assertNotNull(strSet26);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNull(sTGroup30);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "\"\"\"\"\"\"" + "'", str42, "\"\"\"\"\"\"");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "\"\"\"\"\"\"" + "'", str48, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "4.5.2.1" + "'", str52, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "\"\"" + "'", str56, "\"\"");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "4.5.2.1" + "'", str57, "4.5.2.1");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[]");
        org.junit.Assert.assertNotNull(strArray60);
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertNotNull(strArray62);
        org.junit.Assert.assertNotNull(strArray63);
        org.junit.Assert.assertNotNull(strArray64);
        org.junit.Assert.assertNotNull(strArray65);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 64 + "'", int66 == 64);
    }

    @Test
    public void test3536() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3536");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        python3Target0.language = "";
        org.antlr.v4.codegen.target.Python3Target python3Target3 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean4 = python3Target3.supportsOverloadedMethods();
        java.lang.String str5 = python3Target3.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = null;
        java.lang.String str9 = python3Target3.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator6, "", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = null;
        python3Target3.gen = codeGenerator10;
        java.lang.String[] strArray19 = new java.lang.String[] { "\"\"\"\"", "\\12", "\"\"", "4.5.2.1", "", "\"\"\"\"", "\"\"" };
        java.util.LinkedHashSet<java.lang.String> strSet20 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet20, strArray19);
        python3Target3.badWords = strSet20;
        python3Target0.badWords = strSet20;
        python3Target0.addBadWords();
        java.util.Set<java.lang.String> strSet25 = python3Target0.badWords;
        org.antlr.v4.codegen.CodeGenerator codeGenerator26 = python3Target0.gen;
        java.lang.String str29 = python3Target0.getTargetStringLiteralFromString("", true);
        java.lang.String str31 = python3Target0.encodeIntAsCharEscape(100);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "4.5.2.1" + "'", str5, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\"\"" + "'", str9, "\"\"");
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(strSet25);
        org.junit.Assert.assertNull(codeGenerator26);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "\"\"" + "'", str29, "\"\"");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "d" + "'", str31, "d");
    }

    @Test
    public void test3537() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3537");
        java.lang.String str1 = org.stringtemplate.v4.StringRenderer.escapeHTML("_\\\"\\\\\\\"\\\\\\\"hi!\\\\\\\"\\\\\\\"\\\"");
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "_\\\"\\\\\\\"\\\\\\\"hi!\\\\\\\"\\\\\\\"\\\"" + "'", str1, "_\\\"\\\\\\\"\\\\\\\"hi!\\\\\\\"\\\\\\\"\\\"");
    }

    @Test
    public void test3538() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3538");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python3Target1.getBadWords();
        org.antlr.v4.codegen.target.Python3Target python3Target3 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str5 = python3Target3.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.codegen.target.Python3Target python3Target6 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean7 = python3Target6.supportsOverloadedMethods();
        java.util.Set<java.lang.String> strSet8 = python3Target6.badWords;
        python3Target3.badWords = strSet8;
        python3Target1.badWords = strSet8;
        java.util.Set<java.lang.String> strSet11 = python3Target1.badWords;
        org.antlr.v4.codegen.CodeGenerator codeGenerator12 = python3Target1.getCodeGenerator();
        java.lang.String str14 = python3Target1.getTargetStringLiteralFromString("@");
        org.stringtemplate.v4.STGroup sTGroup15 = python3Target1.templates;
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "\"\"\"\"\"\"" + "'", str5, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertNotNull(strSet11);
        org.junit.Assert.assertNull(codeGenerator12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "\"@\"" + "'", str14, "\"@\"");
        org.junit.Assert.assertNull(sTGroup15);
    }

    @Test
    public void test3539() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3539");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        org.antlr.v4.tool.Grammar grammar3 = null;
        org.stringtemplate.v4.ST sT4 = null;
        python3Target0.genRecognizerHeaderFile(grammar3, sT4, "");
        python3Target0.language = "Python3";
        java.util.Set<java.lang.String> strSet9 = null;
        python3Target0.badWords = strSet9;
        boolean boolean11 = python3Target0.wantsBaseVisitor();
        java.lang.String str13 = python3Target0.getImplicitSetLabel("Python3");
        int int14 = python3Target0.getInlineTestSetWordSize();
        org.antlr.v4.codegen.target.Python3Target python3Target15 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray16 = python3Target15.targetCharValueEscape;
        java.util.Set<java.lang.String> strSet17 = python3Target15.badWords;
        python3Target0.badWords = strSet17;
        java.lang.String str19 = python3Target0.language;
        org.antlr.v4.codegen.target.Python3Target python3Target20 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean21 = python3Target20.supportsOverloadedMethods();
        int int22 = python3Target20.getInlineTestSetWordSize();
        java.lang.String[] strArray23 = python3Target20.targetCharValueEscape;
        python3Target0.targetCharValueEscape = strArray23;
        java.lang.String str26 = python3Target0.getAltLabelContextStructName("_\\\"\\\"4.5.2.1\\\"\\\"");
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "_tsetPython3" + "'", str13, "_tsetPython3");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 64 + "'", int14 == 64);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertNotNull(strSet17);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Python3" + "'", str19, "Python3");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 64 + "'", int22 == 64);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "_\\\"\\\"4.5.2.1\\\"\\\"Context" + "'", str26, "_\\\"\\\"4.5.2.1\\\"\\\"Context");
    }

    @Test
    public void test3540() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3540");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        python3Target0.language = "";
        org.antlr.v4.codegen.target.Python3Target python3Target3 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean4 = python3Target3.supportsOverloadedMethods();
        java.lang.String str5 = python3Target3.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = null;
        java.lang.String str9 = python3Target3.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator6, "", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = null;
        python3Target3.gen = codeGenerator10;
        java.lang.String[] strArray19 = new java.lang.String[] { "\"\"\"\"", "\\12", "\"\"", "4.5.2.1", "", "\"\"\"\"", "\"\"" };
        java.util.LinkedHashSet<java.lang.String> strSet20 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet20, strArray19);
        python3Target3.badWords = strSet20;
        python3Target0.badWords = strSet20;
        java.lang.String str25 = python3Target0.encodeIntAsCharEscape((int) (byte) 100);
        int int26 = python3Target0.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet27 = python3Target0.badWords;
        org.antlr.v4.tool.Grammar grammar28 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str30 = python3Target0.getTokenTypeAsTargetLabel(grammar28, (int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "4.5.2.1" + "'", str5, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\"\"" + "'", str9, "\"\"");
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "d" + "'", str25, "d");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 64 + "'", int26 == 64);
        org.junit.Assert.assertNotNull(strSet27);
    }

    @Test
    public void test3541() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3541");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python3Target1.getBadWords();
        org.antlr.v4.codegen.target.Python3Target python3Target3 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str5 = python3Target3.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.codegen.target.Python3Target python3Target6 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean7 = python3Target6.supportsOverloadedMethods();
        java.util.Set<java.lang.String> strSet8 = python3Target6.badWords;
        python3Target3.badWords = strSet8;
        python3Target1.badWords = strSet8;
        java.util.Set<java.lang.String> strSet11 = python3Target1.badWords;
        org.antlr.v4.codegen.CodeGenerator codeGenerator12 = python3Target1.getCodeGenerator();
        org.antlr.v4.codegen.CodeGenerator codeGenerator13 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target14 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator13);
        java.lang.String str16 = python3Target14.getTargetStringLiteralFromString("");
        int int17 = python3Target14.getSerializedATNSegmentLimit();
        boolean boolean18 = python3Target14.wantsBaseVisitor();
        org.stringtemplate.v4.STGroup sTGroup19 = python3Target14.loadTemplates();
        org.antlr.v4.codegen.CodeGenerator codeGenerator20 = python3Target14.gen;
        java.lang.String str23 = python3Target14.getTargetStringLiteralFromString("_tset\\12", false);
        org.stringtemplate.v4.STGroup sTGroup24 = python3Target14.loadTemplates();
        python3Target1.templates = sTGroup24;
        org.antlr.v4.codegen.model.RuleFunction ruleFunction26 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str27 = python3Target1.getRuleFunctionContextStructName(ruleFunction26);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "\"\"\"\"\"\"" + "'", str5, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertNotNull(strSet11);
        org.junit.Assert.assertNull(codeGenerator12);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "\"\"" + "'", str16, "\"\"");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 29 + "'", int17 == 29);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(sTGroup19);
        org.junit.Assert.assertNull(codeGenerator20);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "_tset\\\\12" + "'", str23, "_tset\\\\12");
        org.junit.Assert.assertNotNull(sTGroup24);
    }

    @Test
    public void test3542() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3542");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python3Target1.getBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = null;
        python3Target1.gen = codeGenerator3;
        java.lang.String str6 = python3Target1.getAltLabelContextStructName("hi!");
        java.lang.String str9 = python3Target1.getTargetStringLiteralFromString("\"hi!\"", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = null;
        python3Target1.gen = codeGenerator10;
        org.antlr.v4.tool.Grammar grammar12 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target13 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray14 = python3Target13.targetCharValueEscape;
        org.stringtemplate.v4.STGroup sTGroup15 = python3Target13.templates;
        int int16 = python3Target13.getInlineTestSetWordSize();
        org.antlr.v4.codegen.CodeGenerator codeGenerator17 = python3Target13.gen;
        org.antlr.v4.tool.Grammar grammar18 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target19 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str21 = python3Target19.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.tool.Grammar grammar22 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target23 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean24 = python3Target23.supportsOverloadedMethods();
        java.lang.String str25 = python3Target23.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator26 = null;
        java.lang.String str29 = python3Target23.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator26, "", true);
        java.lang.String str30 = python3Target23.getVersion();
        org.antlr.v4.tool.Grammar grammar31 = null;
        int[] intArray32 = new int[] {};
        java.lang.String[] strArray33 = python3Target23.getTokenTypesAsTargetLabels(grammar31, intArray32);
        java.lang.String[] strArray34 = python3Target19.getTokenTypesAsTargetLabels(grammar22, intArray32);
        java.lang.String[] strArray35 = python3Target13.getTokenTypesAsTargetLabels(grammar18, intArray32);
        java.lang.String[] strArray36 = python3Target1.getTokenTypesAsTargetLabels(grammar12, intArray32);
        java.lang.String str38 = python3Target1.getAltLabelContextStructName("\"Python3\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator39 = python3Target1.gen;
        org.antlr.v4.codegen.target.Python3Target python3Target40 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean41 = python3Target40.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup42 = python3Target40.templates;
        java.lang.String[] strArray45 = new java.lang.String[] { "hi!", "hi!" };
        python3Target40.targetCharValueEscape = strArray45;
        org.antlr.v4.codegen.CodeGenerator codeGenerator47 = null;
        java.lang.String str50 = python3Target40.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator47, "", false);
        java.util.Set<java.lang.String> strSet51 = python3Target40.badWords;
        java.util.Set<java.lang.String> strSet52 = python3Target40.badWords;
        python3Target1.badWords = strSet52;
        boolean boolean54 = python3Target1.wantsBaseVisitor();
        java.lang.String str57 = python3Target1.getTargetStringLiteralFromString("\\1", true);
        org.antlr.v4.tool.Grammar grammar58 = null;
        org.stringtemplate.v4.ST sT59 = null;
        // The following exception was thrown during execution in test generation
        try {
            python3Target1.genListenerFile(grammar58, sT59);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Hi!Context" + "'", str6, "Hi!Context");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\"\\\"hi!\\\"\"" + "'", str9, "\"\\\"hi!\\\"\"");
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertNull(sTGroup15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 64 + "'", int16 == 64);
        org.junit.Assert.assertNull(codeGenerator17);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "\"\"\"\"\"\"" + "'", str21, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "4.5.2.1" + "'", str25, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "\"\"" + "'", str29, "\"\"");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "4.5.2.1" + "'", str30, "4.5.2.1");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[]");
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "\"Python3\"Context" + "'", str38, "\"Python3\"Context");
        org.junit.Assert.assertNull(codeGenerator39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNull(sTGroup42);
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "" + "'", str50, "");
        org.junit.Assert.assertNotNull(strSet51);
        org.junit.Assert.assertNotNull(strSet52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "\"\\\\1\"" + "'", str57, "\"\\\\1\"");
    }

    @Test
    public void test3543() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3543");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.lang.String str3 = python3Target1.getTargetStringLiteralFromString("");
        int int4 = python3Target1.getSerializedATNSegmentLimit();
        java.lang.String str5 = python3Target1.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup6 = python3Target1.loadTemplates();
        org.stringtemplate.v4.STGroup sTGroup7 = python3Target1.getTemplates();
        java.lang.String str9 = python3Target1.getAltLabelContextStructName("\"\"DContext\"\"");
        java.util.Set<java.lang.String> strSet10 = python3Target1.getBadWords();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "\"\"" + "'", str3, "\"\"");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 29 + "'", int4 == 29);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Python3" + "'", str5, "Python3");
        org.junit.Assert.assertNotNull(sTGroup6);
        org.junit.Assert.assertNotNull(sTGroup7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\"\"DContext\"\"Context" + "'", str9, "\"\"DContext\"\"Context");
        org.junit.Assert.assertNotNull(strSet10);
    }

    @Test
    public void test3544() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3544");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        java.lang.String str2 = python3Target0.getVersion();
        boolean boolean3 = python3Target0.supportsOverloadedMethods();
        org.antlr.v4.codegen.CodeGenerator codeGenerator4 = null;
        java.lang.String str7 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator4, "", false);
        org.antlr.v4.tool.Grammar grammar8 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target9 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean10 = python3Target9.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup11 = python3Target9.templates;
        java.lang.String[] strArray14 = new java.lang.String[] { "hi!", "hi!" };
        python3Target9.targetCharValueEscape = strArray14;
        org.antlr.v4.codegen.CodeGenerator codeGenerator16 = null;
        java.lang.String str19 = python3Target9.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator16, "", false);
        java.util.Set<java.lang.String> strSet20 = python3Target9.badWords;
        java.lang.String str22 = python3Target9.getTargetStringLiteralFromString("12");
        int int23 = python3Target9.getSerializedATNSegmentLimit();
        boolean boolean24 = python3Target9.supportsOverloadedMethods();
        org.antlr.v4.tool.Grammar grammar25 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target26 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean27 = python3Target26.supportsOverloadedMethods();
        java.util.Set<java.lang.String> strSet28 = python3Target26.badWords;
        boolean boolean29 = python3Target26.templatesExist();
        java.lang.String str30 = python3Target26.getLanguage();
        org.antlr.v4.tool.Grammar grammar31 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target32 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str34 = python3Target32.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator35 = null;
        python3Target32.gen = codeGenerator35;
        org.antlr.v4.tool.Grammar grammar37 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target38 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str40 = python3Target38.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.tool.Grammar grammar41 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target42 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean43 = python3Target42.supportsOverloadedMethods();
        java.lang.String str44 = python3Target42.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator45 = null;
        java.lang.String str48 = python3Target42.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator45, "", true);
        java.lang.String str49 = python3Target42.getVersion();
        org.antlr.v4.tool.Grammar grammar50 = null;
        int[] intArray51 = new int[] {};
        java.lang.String[] strArray52 = python3Target42.getTokenTypesAsTargetLabels(grammar50, intArray51);
        java.lang.String[] strArray53 = python3Target38.getTokenTypesAsTargetLabels(grammar41, intArray51);
        java.lang.String[] strArray54 = python3Target32.getTokenTypesAsTargetLabels(grammar37, intArray51);
        java.lang.String[] strArray55 = python3Target26.getTokenTypesAsTargetLabels(grammar31, intArray51);
        java.lang.String[] strArray56 = python3Target9.getTokenTypesAsTargetLabels(grammar25, intArray51);
        java.lang.String[] strArray57 = python3Target0.getTokenTypesAsTargetLabels(grammar8, intArray51);
        python3Target0.language = "\"\"\\1\"\"";
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str61 = python3Target0.getImplicitSetLabel("3");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "4.5.2.1" + "'", str2, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(sTGroup11);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertNotNull(strSet20);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "\"12\"" + "'", str22, "\"12\"");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 29 + "'", int23 == 29);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(strSet28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "\"\"\"\"\"\"" + "'", str34, "\"\"\"\"\"\"");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "\"\"\"\"\"\"" + "'", str40, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "4.5.2.1" + "'", str44, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "\"\"" + "'", str48, "\"\"");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "4.5.2.1" + "'", str49, "4.5.2.1");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[]");
        org.junit.Assert.assertNotNull(strArray52);
        org.junit.Assert.assertNotNull(strArray53);
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertNotNull(strArray55);
        org.junit.Assert.assertNotNull(strArray56);
        org.junit.Assert.assertNotNull(strArray57);
    }

    @Test
    public void test3545() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3545");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray1 = python3Target0.targetCharValueEscape;
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = null;
        java.lang.String str6 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator3, "\"\\12\"", false);
        int int7 = python3Target0.getSerializedATNSegmentLimit();
        boolean boolean8 = python3Target0.templatesExist();
        boolean boolean9 = python3Target0.supportsOverloadedMethods();
        org.antlr.v4.tool.Grammar grammar10 = null;
        org.stringtemplate.v4.ST sT11 = null;
        python3Target0.genRecognizerHeaderFile(grammar10, sT11, "_tsetPython3");
        boolean boolean14 = python3Target0.templatesExist();
        java.lang.String str15 = python3Target0.getLanguage();
        java.lang.String str16 = python3Target0.language;
        java.lang.String str17 = python3Target0.getVersion();
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "12" + "'", str6, "12");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 29 + "'", int7 == 29);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "4.5.2.1" + "'", str17, "4.5.2.1");
    }

    @Test
    public void test3546() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3546");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        org.antlr.v4.tool.Grammar grammar3 = null;
        org.stringtemplate.v4.ST sT4 = null;
        python3Target0.genRecognizerHeaderFile(grammar3, sT4, "");
        python3Target0.language = "Python3";
        org.antlr.v4.tool.Grammar grammar9 = null;
        org.stringtemplate.v4.ST sT10 = null;
        python3Target0.genRecognizerHeaderFile(grammar9, sT10, "\"hi!\"");
        java.lang.String str14 = python3Target0.getImplicitRuleLabel("\"\\1\"");
        java.lang.String str16 = python3Target0.getImplicitSetLabel("\\\"\\\\\\\"\\\\\\\"hi!\\\\\\\"\\\\\\\"\\\"");
        org.antlr.v4.tool.Grammar grammar17 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator18 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target19 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator18);
        java.lang.String str20 = python3Target19.getVersion();
        int int21 = python3Target19.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet22 = python3Target19.badWords;
        org.antlr.v4.tool.Grammar grammar23 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target24 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean25 = python3Target24.supportsOverloadedMethods();
        java.lang.String str26 = python3Target24.getVersion();
        boolean boolean27 = python3Target24.supportsOverloadedMethods();
        org.antlr.v4.codegen.CodeGenerator codeGenerator28 = null;
        java.lang.String str31 = python3Target24.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator28, "", false);
        org.antlr.v4.tool.Grammar grammar32 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target33 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean34 = python3Target33.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup35 = python3Target33.templates;
        java.lang.String[] strArray38 = new java.lang.String[] { "hi!", "hi!" };
        python3Target33.targetCharValueEscape = strArray38;
        org.antlr.v4.codegen.CodeGenerator codeGenerator40 = null;
        java.lang.String str43 = python3Target33.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator40, "", false);
        java.util.Set<java.lang.String> strSet44 = python3Target33.badWords;
        java.lang.String str46 = python3Target33.getTargetStringLiteralFromString("12");
        int int47 = python3Target33.getSerializedATNSegmentLimit();
        boolean boolean48 = python3Target33.supportsOverloadedMethods();
        org.antlr.v4.tool.Grammar grammar49 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target50 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean51 = python3Target50.supportsOverloadedMethods();
        java.util.Set<java.lang.String> strSet52 = python3Target50.badWords;
        boolean boolean53 = python3Target50.templatesExist();
        java.lang.String str54 = python3Target50.getLanguage();
        org.antlr.v4.tool.Grammar grammar55 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target56 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str58 = python3Target56.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator59 = null;
        python3Target56.gen = codeGenerator59;
        org.antlr.v4.tool.Grammar grammar61 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target62 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str64 = python3Target62.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.tool.Grammar grammar65 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target66 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean67 = python3Target66.supportsOverloadedMethods();
        java.lang.String str68 = python3Target66.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator69 = null;
        java.lang.String str72 = python3Target66.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator69, "", true);
        java.lang.String str73 = python3Target66.getVersion();
        org.antlr.v4.tool.Grammar grammar74 = null;
        int[] intArray75 = new int[] {};
        java.lang.String[] strArray76 = python3Target66.getTokenTypesAsTargetLabels(grammar74, intArray75);
        java.lang.String[] strArray77 = python3Target62.getTokenTypesAsTargetLabels(grammar65, intArray75);
        java.lang.String[] strArray78 = python3Target56.getTokenTypesAsTargetLabels(grammar61, intArray75);
        java.lang.String[] strArray79 = python3Target50.getTokenTypesAsTargetLabels(grammar55, intArray75);
        java.lang.String[] strArray80 = python3Target33.getTokenTypesAsTargetLabels(grammar49, intArray75);
        java.lang.String[] strArray81 = python3Target24.getTokenTypesAsTargetLabels(grammar32, intArray75);
        java.lang.String[] strArray82 = python3Target19.getTokenTypesAsTargetLabels(grammar23, intArray75);
        java.lang.String[] strArray83 = python3Target0.getTokenTypesAsTargetLabels(grammar17, intArray75);
        boolean boolean84 = python3Target0.supportsOverloadedMethods();
        java.lang.String str86 = python3Target0.getImplicitRuleLabel("_\"\"\"\"\"\"\"\"Context");
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "_\"\\1\"" + "'", str14, "_\"\\1\"");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "_tset\\\"\\\\\\\"\\\\\\\"hi!\\\\\\\"\\\\\\\"\\\"" + "'", str16, "_tset\\\"\\\\\\\"\\\\\\\"hi!\\\\\\\"\\\\\\\"\\\"");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "4.5.2.1" + "'", str20, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 64 + "'", int21 == 64);
        org.junit.Assert.assertNotNull(strSet22);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "4.5.2.1" + "'", str26, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "" + "'", str31, "");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNull(sTGroup35);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "" + "'", str43, "");
        org.junit.Assert.assertNotNull(strSet44);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "\"12\"" + "'", str46, "\"12\"");
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 29 + "'", int47 == 29);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(strSet52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "\"\"\"\"\"\"" + "'", str58, "\"\"\"\"\"\"");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "\"\"\"\"\"\"" + "'", str64, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "4.5.2.1" + "'", str68, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "\"\"" + "'", str72, "\"\"");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "4.5.2.1" + "'", str73, "4.5.2.1");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[]");
        org.junit.Assert.assertNotNull(strArray76);
        org.junit.Assert.assertNotNull(strArray77);
        org.junit.Assert.assertNotNull(strArray78);
        org.junit.Assert.assertNotNull(strArray79);
        org.junit.Assert.assertNotNull(strArray80);
        org.junit.Assert.assertNotNull(strArray81);
        org.junit.Assert.assertNotNull(strArray82);
        org.junit.Assert.assertNotNull(strArray83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "__\"\"\"\"\"\"\"\"Context" + "'", str86, "__\"\"\"\"\"\"\"\"Context");
    }

    @Test
    public void test3547() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3547");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        org.antlr.v4.tool.Grammar grammar3 = null;
        org.stringtemplate.v4.ST sT4 = null;
        python3Target0.genRecognizerHeaderFile(grammar3, sT4, "");
        python3Target0.language = "Python3";
        java.util.Set<java.lang.String> strSet9 = null;
        python3Target0.badWords = strSet9;
        org.antlr.v4.codegen.CodeGenerator codeGenerator11 = null;
        java.lang.String str14 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator11, "\"Hi!Context\"", false);
        java.lang.String str16 = python3Target0.getListLabel("Python3");
        java.lang.String str18 = python3Target0.getTargetStringLiteralFromString("\\0");
        org.stringtemplate.v4.STGroup sTGroup19 = python3Target0.getTemplates();
        org.stringtemplate.v4.STGroup sTGroup20 = python3Target0.loadTemplates();
        org.antlr.v4.tool.Grammar grammar21 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator22 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target23 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator22);
        java.lang.String str25 = python3Target23.getTargetStringLiteralFromString("");
        int int26 = python3Target23.getSerializedATNSegmentLimit();
        boolean boolean27 = python3Target23.wantsBaseVisitor();
        org.stringtemplate.v4.STGroup sTGroup28 = python3Target23.loadTemplates();
        org.antlr.v4.codegen.CodeGenerator codeGenerator29 = python3Target23.gen;
        org.antlr.v4.codegen.target.Python3Target python3Target30 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean31 = python3Target30.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup32 = python3Target30.templates;
        org.antlr.v4.tool.Grammar grammar33 = null;
        org.stringtemplate.v4.ST sT34 = null;
        python3Target30.genRecognizerHeaderFile(grammar33, sT34, "");
        python3Target30.language = "Python3";
        int int39 = python3Target30.getSerializedATNSegmentLimit();
        org.stringtemplate.v4.STGroup sTGroup40 = python3Target30.loadTemplates();
        python3Target23.templates = sTGroup40;
        org.antlr.v4.tool.Grammar grammar42 = null;
        org.stringtemplate.v4.ST sT43 = null;
        python3Target23.genRecognizerHeaderFile(grammar42, sT43, "\"_tset12\"");
        java.lang.String str48 = python3Target23.getTargetStringLiteralFromString("\"_tsetPython3\"", false);
        java.lang.String str50 = python3Target23.getListLabel("Hi!Context");
        org.antlr.v4.tool.Grammar grammar51 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target52 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray53 = python3Target52.targetCharValueEscape;
        python3Target52.addBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator55 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target56 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator55);
        java.lang.String str58 = python3Target56.getTargetStringLiteralFromString("");
        int int59 = python3Target56.getSerializedATNSegmentLimit();
        boolean boolean60 = python3Target56.wantsBaseVisitor();
        org.stringtemplate.v4.STGroup sTGroup61 = python3Target56.loadTemplates();
        python3Target52.templates = sTGroup61;
        org.antlr.v4.tool.Grammar grammar63 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target64 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray65 = python3Target64.targetCharValueEscape;
        org.stringtemplate.v4.STGroup sTGroup66 = python3Target64.templates;
        int int67 = python3Target64.getInlineTestSetWordSize();
        org.antlr.v4.codegen.CodeGenerator codeGenerator68 = python3Target64.gen;
        org.antlr.v4.tool.Grammar grammar69 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target70 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str72 = python3Target70.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.tool.Grammar grammar73 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target74 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean75 = python3Target74.supportsOverloadedMethods();
        java.lang.String str76 = python3Target74.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator77 = null;
        java.lang.String str80 = python3Target74.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator77, "", true);
        java.lang.String str81 = python3Target74.getVersion();
        org.antlr.v4.tool.Grammar grammar82 = null;
        int[] intArray83 = new int[] {};
        java.lang.String[] strArray84 = python3Target74.getTokenTypesAsTargetLabels(grammar82, intArray83);
        java.lang.String[] strArray85 = python3Target70.getTokenTypesAsTargetLabels(grammar73, intArray83);
        java.lang.String[] strArray86 = python3Target64.getTokenTypesAsTargetLabels(grammar69, intArray83);
        java.lang.String[] strArray87 = python3Target52.getTokenTypesAsTargetLabels(grammar63, intArray83);
        java.lang.String[] strArray88 = python3Target23.getTokenTypesAsTargetLabels(grammar51, intArray83);
        java.lang.String[] strArray89 = python3Target0.getTokenTypesAsTargetLabels(grammar21, intArray83);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Hi!Context" + "'", str14, "Hi!Context");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Python3" + "'", str16, "Python3");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "\"\\0\"" + "'", str18, "\"\\0\"");
        org.junit.Assert.assertNotNull(sTGroup19);
        org.junit.Assert.assertNotNull(sTGroup20);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "\"\"" + "'", str25, "\"\"");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 29 + "'", int26 == 29);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(sTGroup28);
        org.junit.Assert.assertNull(codeGenerator29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNull(sTGroup32);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 29 + "'", int39 == 29);
        org.junit.Assert.assertNotNull(sTGroup40);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "\\\"_tsetPython3\\\"" + "'", str48, "\\\"_tsetPython3\\\"");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "Hi!Context" + "'", str50, "Hi!Context");
        org.junit.Assert.assertNotNull(strArray53);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "\"\"" + "'", str58, "\"\"");
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 29 + "'", int59 == 29);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(sTGroup61);
        org.junit.Assert.assertNotNull(strArray65);
        org.junit.Assert.assertNull(sTGroup66);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 64 + "'", int67 == 64);
        org.junit.Assert.assertNull(codeGenerator68);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "\"\"\"\"\"\"" + "'", str72, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "4.5.2.1" + "'", str76, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "\"\"" + "'", str80, "\"\"");
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "4.5.2.1" + "'", str81, "4.5.2.1");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[]");
        org.junit.Assert.assertNotNull(strArray84);
        org.junit.Assert.assertNotNull(strArray85);
        org.junit.Assert.assertNotNull(strArray86);
        org.junit.Assert.assertNotNull(strArray87);
        org.junit.Assert.assertNotNull(strArray88);
        org.junit.Assert.assertNotNull(strArray89);
    }

    @Test
    public void test3548() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3548");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray1 = python3Target0.targetCharValueEscape;
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = null;
        java.lang.String str6 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator3, "\"\\12\"", false);
        int int7 = python3Target0.getSerializedATNSegmentLimit();
        boolean boolean8 = python3Target0.templatesExist();
        boolean boolean9 = python3Target0.supportsOverloadedMethods();
        java.lang.String str10 = python3Target0.language;
        boolean boolean11 = python3Target0.templatesExist();
        org.antlr.v4.tool.ast.GrammarAST grammarAST12 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean13 = python3Target0.visibleGrammarSymbolCausesIssueInGeneratedCode(grammarAST12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "12" + "'", str6, "12");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 29 + "'", int7 == 29);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test3549() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3549");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        org.antlr.v4.tool.Grammar grammar3 = null;
        org.stringtemplate.v4.ST sT4 = null;
        python3Target0.genRecognizerHeaderFile(grammar3, sT4, "");
        boolean boolean7 = python3Target0.supportsOverloadedMethods();
        python3Target0.language = "\"\\12\"";
        boolean boolean10 = python3Target0.supportsOverloadedMethods();
        boolean boolean11 = python3Target0.wantsBaseVisitor();
        boolean boolean12 = python3Target0.templatesExist();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test3550() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3550");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        org.antlr.v4.tool.Grammar grammar3 = null;
        org.stringtemplate.v4.ST sT4 = null;
        python3Target0.genRecognizerHeaderFile(grammar3, sT4, "");
        org.antlr.v4.codegen.target.Python3Target python3Target7 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray8 = python3Target7.targetCharValueEscape;
        python3Target0.targetCharValueEscape = strArray8;
        org.antlr.v4.tool.ast.GrammarAST grammarAST10 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean11 = python3Target0.grammarSymbolCausesIssueInGeneratedCode(grammarAST10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertNotNull(strArray8);
    }

    @Test
    public void test3551() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3551");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!", "hi!" };
        python3Target0.targetCharValueEscape = strArray5;
        java.lang.String str8 = python3Target0.getTargetStringLiteralFromString("\"\"");
        java.lang.String str10 = python3Target0.getTargetStringLiteralFromString("\"\"");
        python3Target0.language = "\\1";
        boolean boolean13 = python3Target0.wantsBaseVisitor();
        python3Target0.language = "";
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\"\"\"\"" + "'", str8, "\"\"\"\"");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\"\"\"\"" + "'", str10, "\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test3552() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3552");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        org.antlr.v4.tool.Grammar grammar3 = null;
        org.stringtemplate.v4.ST sT4 = null;
        python3Target0.genRecognizerHeaderFile(grammar3, sT4, "");
        python3Target0.language = "Python3";
        int int9 = python3Target0.getSerializedATNSegmentLimit();
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = python3Target0.gen;
        java.lang.String str12 = python3Target0.encodeIntAsCharEscape((int) 'a');
        org.antlr.v4.codegen.target.Python3Target python3Target13 = new org.antlr.v4.codegen.target.Python3Target();
        python3Target13.language = "4.5.2.1";
        org.antlr.v4.codegen.CodeGenerator codeGenerator16 = python3Target13.getCodeGenerator();
        org.antlr.v4.codegen.CodeGenerator codeGenerator17 = python3Target13.gen;
        java.util.Set<java.lang.String> strSet18 = python3Target13.badWords;
        org.antlr.v4.tool.Grammar grammar19 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target20 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean21 = python3Target20.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup22 = python3Target20.templates;
        java.lang.String[] strArray25 = new java.lang.String[] { "hi!", "hi!" };
        python3Target20.targetCharValueEscape = strArray25;
        java.lang.String[] strArray28 = new java.lang.String[] { "hi!" };
        org.antlr.v4.codegen.target.Python3Target.python3Keywords = strArray28;
        python3Target20.targetCharValueEscape = strArray28;
        org.antlr.v4.tool.Grammar grammar31 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target32 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str34 = python3Target32.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator35 = null;
        python3Target32.gen = codeGenerator35;
        org.antlr.v4.tool.Grammar grammar37 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target38 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str40 = python3Target38.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.tool.Grammar grammar41 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target42 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean43 = python3Target42.supportsOverloadedMethods();
        java.lang.String str44 = python3Target42.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator45 = null;
        java.lang.String str48 = python3Target42.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator45, "", true);
        java.lang.String str49 = python3Target42.getVersion();
        org.antlr.v4.tool.Grammar grammar50 = null;
        int[] intArray51 = new int[] {};
        java.lang.String[] strArray52 = python3Target42.getTokenTypesAsTargetLabels(grammar50, intArray51);
        java.lang.String[] strArray53 = python3Target38.getTokenTypesAsTargetLabels(grammar41, intArray51);
        java.lang.String[] strArray54 = python3Target32.getTokenTypesAsTargetLabels(grammar37, intArray51);
        java.lang.String[] strArray55 = python3Target20.getTokenTypesAsTargetLabels(grammar31, intArray51);
        java.lang.String[] strArray56 = python3Target13.getTokenTypesAsTargetLabels(grammar19, intArray51);
        python3Target0.targetCharValueEscape = strArray56;
        java.lang.String str59 = python3Target0.getListLabel("\"\"\"\"hi!\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 29 + "'", int9 == 29);
        org.junit.Assert.assertNull(codeGenerator10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "a" + "'", str12, "a");
        org.junit.Assert.assertNull(codeGenerator16);
        org.junit.Assert.assertNull(codeGenerator17);
        org.junit.Assert.assertNotNull(strSet18);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(sTGroup22);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "\"\"\"\"\"\"" + "'", str34, "\"\"\"\"\"\"");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "\"\"\"\"\"\"" + "'", str40, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "4.5.2.1" + "'", str44, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "\"\"" + "'", str48, "\"\"");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "4.5.2.1" + "'", str49, "4.5.2.1");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[]");
        org.junit.Assert.assertNotNull(strArray52);
        org.junit.Assert.assertNotNull(strArray53);
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertNotNull(strArray55);
        org.junit.Assert.assertNotNull(strArray56);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "\"\"\"\"hi!\"\"\"\"" + "'", str59, "\"\"\"\"hi!\"\"\"\"");
    }

    @Test
    public void test3553() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3553");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.lang.String str3 = python3Target1.getTargetStringLiteralFromString("");
        int int4 = python3Target1.getSerializedATNSegmentLimit();
        boolean boolean5 = python3Target1.wantsBaseVisitor();
        java.lang.String str6 = python3Target1.getVersion();
        java.lang.String str8 = python3Target1.encodeIntAsCharEscape(29);
        org.antlr.v4.codegen.CodeGenerator codeGenerator9 = python3Target1.getCodeGenerator();
        int int10 = python3Target1.getSerializedATNSegmentLimit();
        java.lang.String str13 = python3Target1.getTargetStringLiteralFromString("_#", false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "\"\"" + "'", str3, "\"\"");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 29 + "'", int4 == 29);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "4.5.2.1" + "'", str6, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\\35" + "'", str8, "\\35");
        org.junit.Assert.assertNull(codeGenerator9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 29 + "'", int10 == 29);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "_#" + "'", str13, "_#");
    }

    @Test
    public void test3554() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3554");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray1 = python3Target0.targetCharValueEscape;
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = null;
        java.lang.String str6 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator3, "\"\\12\"", false);
        int int7 = python3Target0.getSerializedATNSegmentLimit();
        boolean boolean8 = python3Target0.templatesExist();
        boolean boolean9 = python3Target0.supportsOverloadedMethods();
        java.lang.String str10 = python3Target0.language;
        boolean boolean11 = python3Target0.templatesExist();
        org.antlr.v4.tool.Grammar grammar12 = null;
        org.stringtemplate.v4.ST sT13 = null;
        // The following exception was thrown during execution in test generation
        try {
            python3Target0.genListenerFile(grammar12, sT13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "12" + "'", str6, "12");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 29 + "'", int7 == 29);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test3555() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3555");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!", "hi!" };
        python3Target0.targetCharValueEscape = strArray5;
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = null;
        java.lang.String str10 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator7, "", false);
        java.util.Set<java.lang.String> strSet11 = python3Target0.badWords;
        java.util.Set<java.lang.String> strSet12 = python3Target0.badWords;
        boolean boolean13 = python3Target0.templatesExist();
        org.antlr.v4.codegen.CodeGenerator codeGenerator14 = python3Target0.getCodeGenerator();
        java.lang.String[] strArray15 = python3Target0.targetCharValueEscape;
        int int16 = python3Target0.getSerializedATNSegmentLimit();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNotNull(strSet11);
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(codeGenerator14);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 29 + "'", int16 == 29);
    }

    @Test
    public void test3556() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3556");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python3Target1.getBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = null;
        python3Target1.gen = codeGenerator3;
        java.lang.String str6 = python3Target1.getAltLabelContextStructName("hi!");
        java.lang.String str9 = python3Target1.getTargetStringLiteralFromString("\"hi!\"", true);
        int int10 = python3Target1.getSerializedATNSegmentLimit();
        org.stringtemplate.v4.STGroup sTGroup11 = python3Target1.getTemplates();
        org.antlr.v4.codegen.CodeGenerator codeGenerator12 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target13 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator12);
        java.util.Set<java.lang.String> strSet14 = python3Target13.getBadWords();
        org.antlr.v4.codegen.target.Python3Target python3Target15 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str17 = python3Target15.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.codegen.target.Python3Target python3Target18 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean19 = python3Target18.supportsOverloadedMethods();
        java.util.Set<java.lang.String> strSet20 = python3Target18.badWords;
        python3Target15.badWords = strSet20;
        python3Target13.badWords = strSet20;
        java.util.Set<java.lang.String> strSet23 = python3Target13.badWords;
        org.antlr.v4.codegen.CodeGenerator codeGenerator24 = python3Target13.getCodeGenerator();
        org.antlr.v4.tool.Grammar grammar25 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target26 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean27 = python3Target26.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup28 = python3Target26.templates;
        org.antlr.v4.tool.Grammar grammar29 = null;
        org.stringtemplate.v4.ST sT30 = null;
        python3Target26.genRecognizerHeaderFile(grammar29, sT30, "");
        python3Target26.language = "Python3";
        java.util.Set<java.lang.String> strSet35 = null;
        python3Target26.badWords = strSet35;
        org.antlr.v4.codegen.CodeGenerator codeGenerator37 = null;
        java.lang.String str40 = python3Target26.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator37, "\"Hi!Context\"", false);
        java.lang.String str42 = python3Target26.getListLabel("Python3");
        java.lang.String str44 = python3Target26.getTargetStringLiteralFromString("\\0");
        org.antlr.v4.tool.Grammar grammar45 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target46 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str48 = python3Target46.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.tool.Grammar grammar49 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target50 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean51 = python3Target50.supportsOverloadedMethods();
        java.lang.String str52 = python3Target50.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator53 = null;
        java.lang.String str56 = python3Target50.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator53, "", true);
        java.lang.String str57 = python3Target50.getVersion();
        org.antlr.v4.tool.Grammar grammar58 = null;
        int[] intArray59 = new int[] {};
        java.lang.String[] strArray60 = python3Target50.getTokenTypesAsTargetLabels(grammar58, intArray59);
        java.lang.String[] strArray61 = python3Target46.getTokenTypesAsTargetLabels(grammar49, intArray59);
        java.lang.String[] strArray62 = python3Target26.getTokenTypesAsTargetLabels(grammar45, intArray59);
        java.lang.String[] strArray63 = python3Target13.getTokenTypesAsTargetLabels(grammar25, intArray59);
        org.antlr.v4.codegen.target.Python3Target.python3Keywords = strArray63;
        python3Target1.targetCharValueEscape = strArray63;
        java.lang.String str67 = python3Target1.getImplicitRuleLabel("\"\"12\"\"");
        java.lang.String str69 = python3Target1.getAltLabelContextStructName("_tset_12");
        boolean boolean70 = python3Target1.wantsBaseListener();
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Hi!Context" + "'", str6, "Hi!Context");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\"\\\"hi!\\\"\"" + "'", str9, "\"\\\"hi!\\\"\"");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 29 + "'", int10 == 29);
        org.junit.Assert.assertNotNull(sTGroup11);
        org.junit.Assert.assertNotNull(strSet14);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "\"\"\"\"\"\"" + "'", str17, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(strSet20);
        org.junit.Assert.assertNotNull(strSet23);
        org.junit.Assert.assertNull(codeGenerator24);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNull(sTGroup28);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "Hi!Context" + "'", str40, "Hi!Context");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "Python3" + "'", str42, "Python3");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "\"\\0\"" + "'", str44, "\"\\0\"");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "\"\"\"\"\"\"" + "'", str48, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "4.5.2.1" + "'", str52, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "\"\"" + "'", str56, "\"\"");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "4.5.2.1" + "'", str57, "4.5.2.1");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[]");
        org.junit.Assert.assertNotNull(strArray60);
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertNotNull(strArray62);
        org.junit.Assert.assertNotNull(strArray63);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "_\"\"12\"\"" + "'", str67, "_\"\"12\"\"");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "_tset_12Context" + "'", str69, "_tset_12Context");
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
    }

    @Test
    public void test3557() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3557");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        python3Target0.language = "4.5.2.1";
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = python3Target0.getCodeGenerator();
        org.antlr.v4.codegen.CodeGenerator codeGenerator4 = python3Target0.gen;
        org.antlr.v4.codegen.CodeGenerator codeGenerator5 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target6 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator5);
        java.lang.String str8 = python3Target6.getTargetStringLiteralFromString("");
        int int9 = python3Target6.getSerializedATNSegmentLimit();
        boolean boolean10 = python3Target6.wantsBaseVisitor();
        org.stringtemplate.v4.STGroup sTGroup11 = python3Target6.loadTemplates();
        python3Target0.templates = sTGroup11;
        java.lang.String str13 = python3Target0.language;
        org.antlr.v4.codegen.target.Python3Target python3Target14 = new org.antlr.v4.codegen.target.Python3Target();
        python3Target14.language = "";
        org.antlr.v4.codegen.target.Python3Target python3Target17 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean18 = python3Target17.supportsOverloadedMethods();
        java.lang.String str19 = python3Target17.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator20 = null;
        java.lang.String str23 = python3Target17.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator20, "", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator24 = null;
        python3Target17.gen = codeGenerator24;
        java.lang.String[] strArray33 = new java.lang.String[] { "\"\"\"\"", "\\12", "\"\"", "4.5.2.1", "", "\"\"\"\"", "\"\"" };
        java.util.LinkedHashSet<java.lang.String> strSet34 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet34, strArray33);
        python3Target17.badWords = strSet34;
        python3Target14.badWords = strSet34;
        python3Target14.addBadWords();
        java.util.Set<java.lang.String> strSet39 = python3Target14.badWords;
        python3Target0.badWords = strSet39;
        java.util.Set<java.lang.String> strSet41 = python3Target0.getBadWords();
        java.lang.String[] strArray42 = python3Target0.targetCharValueEscape;
        boolean boolean43 = python3Target0.templatesExist();
        java.lang.String str44 = python3Target0.language;
        org.junit.Assert.assertNull(codeGenerator3);
        org.junit.Assert.assertNull(codeGenerator4);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\"\"" + "'", str8, "\"\"");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 29 + "'", int9 == 29);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(sTGroup11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "4.5.2.1" + "'", str13, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "4.5.2.1" + "'", str19, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "\"\"" + "'", str23, "\"\"");
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(strSet39);
        org.junit.Assert.assertNotNull(strSet41);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "4.5.2.1" + "'", str44, "4.5.2.1");
    }

    @Test
    public void test3558() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3558");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.lang.String str3 = python3Target1.getTargetStringLiteralFromString("");
        int int4 = python3Target1.getSerializedATNSegmentLimit();
        boolean boolean5 = python3Target1.wantsBaseVisitor();
        org.stringtemplate.v4.STGroup sTGroup6 = python3Target1.loadTemplates();
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = python3Target1.gen;
        org.antlr.v4.codegen.target.Python3Target python3Target8 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean9 = python3Target8.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup10 = python3Target8.templates;
        org.antlr.v4.tool.Grammar grammar11 = null;
        org.stringtemplate.v4.ST sT12 = null;
        python3Target8.genRecognizerHeaderFile(grammar11, sT12, "");
        python3Target8.language = "Python3";
        int int17 = python3Target8.getSerializedATNSegmentLimit();
        org.stringtemplate.v4.STGroup sTGroup18 = python3Target8.loadTemplates();
        python3Target1.templates = sTGroup18;
        org.antlr.v4.tool.Grammar grammar20 = null;
        org.stringtemplate.v4.ST sT21 = null;
        python3Target1.genRecognizerHeaderFile(grammar20, sT21, "\"_tset12\"");
        int int24 = python3Target1.getSerializedATNSegmentLimit();
        org.antlr.v4.codegen.target.Python3Target python3Target25 = new org.antlr.v4.codegen.target.Python3Target();
        python3Target25.language = "4.5.2.1";
        org.antlr.v4.codegen.CodeGenerator codeGenerator28 = python3Target25.getCodeGenerator();
        org.antlr.v4.codegen.CodeGenerator codeGenerator29 = python3Target25.gen;
        java.lang.String str30 = python3Target25.getLanguage();
        python3Target25.addBadWords();
        org.antlr.v4.codegen.target.Python3Target python3Target32 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str34 = python3Target32.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator35 = null;
        python3Target32.gen = codeGenerator35;
        java.lang.String str37 = python3Target32.getVersion();
        org.antlr.v4.codegen.target.Python3Target python3Target38 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean39 = python3Target38.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup40 = python3Target38.templates;
        org.antlr.v4.tool.Grammar grammar41 = null;
        org.stringtemplate.v4.ST sT42 = null;
        python3Target38.genRecognizerHeaderFile(grammar41, sT42, "");
        python3Target38.language = "Python3";
        int int47 = python3Target38.getSerializedATNSegmentLimit();
        org.stringtemplate.v4.STGroup sTGroup48 = python3Target38.loadTemplates();
        python3Target32.templates = sTGroup48;
        python3Target25.templates = sTGroup48;
        python3Target25.language = "\\35";
        org.stringtemplate.v4.STGroup sTGroup53 = python3Target25.getTemplates();
        java.lang.String[] strArray54 = python3Target25.targetCharValueEscape;
        python3Target1.targetCharValueEscape = strArray54;
        java.lang.String str56 = python3Target1.getLanguage();
        boolean boolean57 = python3Target1.templatesExist();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "\"\"" + "'", str3, "\"\"");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 29 + "'", int4 == 29);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(sTGroup6);
        org.junit.Assert.assertNull(codeGenerator7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(sTGroup10);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 29 + "'", int17 == 29);
        org.junit.Assert.assertNotNull(sTGroup18);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 29 + "'", int24 == 29);
        org.junit.Assert.assertNull(codeGenerator28);
        org.junit.Assert.assertNull(codeGenerator29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "4.5.2.1" + "'", str30, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "\"\"\"\"\"\"" + "'", str34, "\"\"\"\"\"\"");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "4.5.2.1" + "'", str37, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNull(sTGroup40);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 29 + "'", int47 == 29);
        org.junit.Assert.assertNotNull(sTGroup48);
        org.junit.Assert.assertNotNull(sTGroup53);
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "Python3" + "'", str56, "Python3");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
    }

    @Test
    public void test3559() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3559");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        python3Target0.language = "";
        org.antlr.v4.codegen.target.Python3Target python3Target3 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean4 = python3Target3.supportsOverloadedMethods();
        java.lang.String str5 = python3Target3.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = null;
        java.lang.String str9 = python3Target3.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator6, "", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = null;
        python3Target3.gen = codeGenerator10;
        java.lang.String[] strArray19 = new java.lang.String[] { "\"\"\"\"", "\\12", "\"\"", "4.5.2.1", "", "\"\"\"\"", "\"\"" };
        java.util.LinkedHashSet<java.lang.String> strSet20 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet20, strArray19);
        python3Target3.badWords = strSet20;
        python3Target0.badWords = strSet20;
        java.lang.String str25 = python3Target0.encodeIntAsCharEscape((int) (byte) 100);
        int int26 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str29 = python3Target0.getTargetStringLiteralFromString("\"\"tset\\\"\\\"\\\"hi!\\\"\\\"\"\"", false);
        org.antlr.v4.tool.Grammar grammar30 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target31 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean32 = python3Target31.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup33 = python3Target31.templates;
        org.antlr.v4.tool.Grammar grammar34 = null;
        org.stringtemplate.v4.ST sT35 = null;
        python3Target31.genRecognizerHeaderFile(grammar34, sT35, "");
        boolean boolean38 = python3Target31.supportsOverloadedMethods();
        python3Target31.language = "\"\\12\"";
        org.antlr.v4.tool.Grammar grammar41 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator42 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target43 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator42);
        java.util.Set<java.lang.String> strSet44 = python3Target43.getBadWords();
        java.lang.String str46 = python3Target43.getAltLabelContextStructName("d");
        java.lang.String str48 = python3Target43.getTargetStringLiteralFromString("\"\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator49 = python3Target43.getCodeGenerator();
        org.antlr.v4.tool.Grammar grammar50 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator51 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target52 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator51);
        java.util.Set<java.lang.String> strSet53 = python3Target52.getBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator54 = null;
        python3Target52.gen = codeGenerator54;
        java.lang.String str57 = python3Target52.getAltLabelContextStructName("hi!");
        java.lang.String str60 = python3Target52.getTargetStringLiteralFromString("\"hi!\"", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator61 = null;
        python3Target52.gen = codeGenerator61;
        org.antlr.v4.tool.Grammar grammar63 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target64 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray65 = python3Target64.targetCharValueEscape;
        org.stringtemplate.v4.STGroup sTGroup66 = python3Target64.templates;
        int int67 = python3Target64.getInlineTestSetWordSize();
        org.antlr.v4.codegen.CodeGenerator codeGenerator68 = python3Target64.gen;
        org.antlr.v4.tool.Grammar grammar69 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target70 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str72 = python3Target70.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.tool.Grammar grammar73 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target74 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean75 = python3Target74.supportsOverloadedMethods();
        java.lang.String str76 = python3Target74.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator77 = null;
        java.lang.String str80 = python3Target74.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator77, "", true);
        java.lang.String str81 = python3Target74.getVersion();
        org.antlr.v4.tool.Grammar grammar82 = null;
        int[] intArray83 = new int[] {};
        java.lang.String[] strArray84 = python3Target74.getTokenTypesAsTargetLabels(grammar82, intArray83);
        java.lang.String[] strArray85 = python3Target70.getTokenTypesAsTargetLabels(grammar73, intArray83);
        java.lang.String[] strArray86 = python3Target64.getTokenTypesAsTargetLabels(grammar69, intArray83);
        java.lang.String[] strArray87 = python3Target52.getTokenTypesAsTargetLabels(grammar63, intArray83);
        java.lang.String[] strArray88 = python3Target43.getTokenTypesAsTargetLabels(grammar50, intArray83);
        java.lang.String[] strArray89 = python3Target31.getTokenTypesAsTargetLabels(grammar41, intArray83);
        java.lang.String[] strArray90 = python3Target0.getTokenTypesAsTargetLabels(grammar30, intArray83);
        python3Target0.language = "\"\\\"\\\"4.5.2.1\\\"\\\"\\\"Contex\"";
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "4.5.2.1" + "'", str5, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\"\"" + "'", str9, "\"\"");
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "d" + "'", str25, "d");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 64 + "'", int26 == 64);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "\"\"tset\\\"\\\"\\\"hi!\\\"\\\"\"\"" + "'", str29, "\"\"tset\\\"\\\"\\\"hi!\\\"\\\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNull(sTGroup33);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(strSet44);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "DContext" + "'", str46, "DContext");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "\"\\\"\\\"\"" + "'", str48, "\"\\\"\\\"\"");
        org.junit.Assert.assertNull(codeGenerator49);
        org.junit.Assert.assertNotNull(strSet53);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "Hi!Context" + "'", str57, "Hi!Context");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "\"\\\"hi!\\\"\"" + "'", str60, "\"\\\"hi!\\\"\"");
        org.junit.Assert.assertNotNull(strArray65);
        org.junit.Assert.assertNull(sTGroup66);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 64 + "'", int67 == 64);
        org.junit.Assert.assertNull(codeGenerator68);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "\"\"\"\"\"\"" + "'", str72, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "4.5.2.1" + "'", str76, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "\"\"" + "'", str80, "\"\"");
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "4.5.2.1" + "'", str81, "4.5.2.1");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[]");
        org.junit.Assert.assertNotNull(strArray84);
        org.junit.Assert.assertNotNull(strArray85);
        org.junit.Assert.assertNotNull(strArray86);
        org.junit.Assert.assertNotNull(strArray87);
        org.junit.Assert.assertNotNull(strArray88);
        org.junit.Assert.assertNotNull(strArray89);
        org.junit.Assert.assertNotNull(strArray90);
    }

    @Test
    public void test3560() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3560");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        python3Target0.language = "4.5.2.1";
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = python3Target0.getCodeGenerator();
        org.antlr.v4.codegen.CodeGenerator codeGenerator4 = python3Target0.gen;
        org.antlr.v4.codegen.CodeGenerator codeGenerator5 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target6 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator5);
        java.lang.String str8 = python3Target6.getTargetStringLiteralFromString("");
        int int9 = python3Target6.getSerializedATNSegmentLimit();
        boolean boolean10 = python3Target6.wantsBaseVisitor();
        org.stringtemplate.v4.STGroup sTGroup11 = python3Target6.loadTemplates();
        python3Target0.templates = sTGroup11;
        java.lang.String str13 = python3Target0.language;
        java.lang.String str15 = python3Target0.getTargetStringLiteralFromString("\"\\0\"");
        python3Target0.language = "_\\\"_\\\"\\\"\\\"DContext\\\"\\\"Context\\\"\\\"";
        org.junit.Assert.assertNull(codeGenerator3);
        org.junit.Assert.assertNull(codeGenerator4);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\"\"" + "'", str8, "\"\"");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 29 + "'", int9 == 29);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(sTGroup11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "4.5.2.1" + "'", str13, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "\"\"\\0\"\"" + "'", str15, "\"\"\\0\"\"");
    }

    @Test
    public void test3561() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3561");
        org.antlr.v4.codegen.target.Python3Target.PythonStringRenderer pythonStringRenderer0 = new org.antlr.v4.codegen.target.Python3Target.PythonStringRenderer();
        java.lang.Object obj1 = null;
        java.util.Locale locale3 = null;
        java.lang.String str4 = pythonStringRenderer0.toString(obj1, "\"\"\"\"\"\"", locale3);
        org.antlr.v4.codegen.target.Python3Target python3Target5 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray6 = python3Target5.targetCharValueEscape;
        org.stringtemplate.v4.STGroup sTGroup7 = python3Target5.templates;
        java.util.Locale locale9 = null;
        java.lang.String str10 = pythonStringRenderer0.toString((java.lang.Object) sTGroup7, "\"Hi!Context\"", locale9);
        java.util.Locale locale13 = null;
        java.lang.String str14 = pythonStringRenderer0.toString((java.lang.Object) "\"DContext\"", "", locale13);
        org.antlr.v4.codegen.target.Python3Target python3Target15 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean16 = python3Target15.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup17 = python3Target15.templates;
        org.antlr.v4.tool.Grammar grammar18 = null;
        org.stringtemplate.v4.ST sT19 = null;
        python3Target15.genRecognizerHeaderFile(grammar18, sT19, "");
        python3Target15.language = "Python3";
        java.util.Set<java.lang.String> strSet24 = null;
        python3Target15.badWords = strSet24;
        org.antlr.v4.codegen.CodeGenerator codeGenerator26 = null;
        java.lang.String str29 = python3Target15.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator26, "\"Hi!Context\"", false);
        java.lang.String str31 = python3Target15.getListLabel("Python3");
        java.util.Set<java.lang.String> strSet32 = python3Target15.badWords;
        java.util.Set<java.lang.String> strSet33 = python3Target15.badWords;
        org.antlr.v4.codegen.CodeGenerator codeGenerator34 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target35 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator34);
        java.util.Set<java.lang.String> strSet36 = python3Target35.getBadWords();
        java.lang.String str38 = python3Target35.getAltLabelContextStructName("d");
        org.stringtemplate.v4.STGroup sTGroup39 = python3Target35.getTemplates();
        boolean boolean40 = python3Target35.supportsOverloadedMethods();
        java.util.Set<java.lang.String> strSet41 = python3Target35.badWords;
        python3Target35.language = "_tsetPython3";
        java.util.Set<java.lang.String> strSet44 = python3Target35.getBadWords();
        python3Target15.badWords = strSet44;
        java.util.Locale locale47 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str48 = pythonStringRenderer0.toString((java.lang.Object) python3Target15, "_tset\"\\35\"", locale47);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: org.antlr.v4.codegen.target.Python3Target cannot be cast to java.lang.String");
        } catch (java.lang.ClassCastException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "\"\"\"\"\"\"" + "'", str4, "\"\"\"\"\"\"");
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertNull(sTGroup7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\"Hi!Context\"" + "'", str10, "\"Hi!Context\"");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(sTGroup17);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "Hi!Context" + "'", str29, "Hi!Context");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "Python3" + "'", str31, "Python3");
        org.junit.Assert.assertNull(strSet32);
        org.junit.Assert.assertNull(strSet33);
        org.junit.Assert.assertNotNull(strSet36);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "DContext" + "'", str38, "DContext");
        org.junit.Assert.assertNotNull(sTGroup39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(strSet41);
        org.junit.Assert.assertNotNull(strSet44);
    }

    @Test
    public void test3562() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3562");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.lang.String str3 = python3Target1.getTargetStringLiteralFromString("");
        int int4 = python3Target1.getSerializedATNSegmentLimit();
        boolean boolean5 = python3Target1.wantsBaseVisitor();
        org.stringtemplate.v4.STGroup sTGroup6 = python3Target1.loadTemplates();
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = python3Target1.gen;
        java.lang.String str9 = python3Target1.encodeIntAsCharEscape(0);
        java.lang.String str11 = python3Target1.encodeIntAsCharEscape(0);
        org.stringtemplate.v4.STGroup sTGroup12 = python3Target1.getTemplates();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "\"\"" + "'", str3, "\"\"");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 29 + "'", int4 == 29);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(sTGroup6);
        org.junit.Assert.assertNull(codeGenerator7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\\0" + "'", str9, "\\0");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "\\0" + "'", str11, "\\0");
        org.junit.Assert.assertNotNull(sTGroup12);
    }

    @Test
    public void test3563() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3563");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        python3Target0.language = "";
        org.antlr.v4.codegen.target.Python3Target python3Target3 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean4 = python3Target3.supportsOverloadedMethods();
        java.lang.String str5 = python3Target3.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = null;
        java.lang.String str9 = python3Target3.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator6, "", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = null;
        python3Target3.gen = codeGenerator10;
        java.lang.String[] strArray19 = new java.lang.String[] { "\"\"\"\"", "\\12", "\"\"", "4.5.2.1", "", "\"\"\"\"", "\"\"" };
        java.util.LinkedHashSet<java.lang.String> strSet20 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet20, strArray19);
        python3Target3.badWords = strSet20;
        python3Target0.badWords = strSet20;
        java.lang.String str25 = python3Target0.encodeIntAsCharEscape((int) (byte) 100);
        java.lang.String str26 = python3Target0.getLanguage();
        java.lang.String str28 = python3Target0.getTargetStringLiteralFromString("\"\\0\"");
        org.antlr.v4.codegen.target.Python3Target python3Target29 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean30 = python3Target29.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup31 = python3Target29.templates;
        org.antlr.v4.tool.Grammar grammar32 = null;
        org.stringtemplate.v4.ST sT33 = null;
        python3Target29.genRecognizerHeaderFile(grammar32, sT33, "");
        python3Target29.language = "Python3";
        java.util.Set<java.lang.String> strSet38 = null;
        python3Target29.badWords = strSet38;
        boolean boolean40 = python3Target29.wantsBaseVisitor();
        java.lang.String str42 = python3Target29.getImplicitSetLabel("Python3");
        int int43 = python3Target29.getInlineTestSetWordSize();
        java.lang.String str44 = python3Target29.language;
        java.lang.String str45 = python3Target29.getLanguage();
        int int46 = python3Target29.getInlineTestSetWordSize();
        java.lang.String str48 = python3Target29.getImplicitRuleLabel("\"\\\"\\\"4.5.2.1\\\"\\\"\"");
        java.lang.String str50 = python3Target29.getImplicitSetLabel("_tset_12");
        org.stringtemplate.v4.STGroup sTGroup51 = python3Target29.templates;
        python3Target0.templates = sTGroup51;
        org.stringtemplate.v4.STGroup sTGroup53 = python3Target0.templates;
        java.util.Set<java.lang.String> strSet54 = python3Target0.getBadWords();
        java.lang.String str56 = python3Target0.getImplicitRuleLabel("\"\\\"\\\"\\\\0\\\"\\\"\"Context");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "4.5.2.1" + "'", str5, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\"\"" + "'", str9, "\"\"");
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "d" + "'", str25, "d");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "\"\"\\0\"\"" + "'", str28, "\"\"\\0\"\"");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNull(sTGroup31);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "_tsetPython3" + "'", str42, "_tsetPython3");
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 64 + "'", int43 == 64);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "Python3" + "'", str44, "Python3");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "Python3" + "'", str45, "Python3");
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 64 + "'", int46 == 64);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "_\"\\\"\\\"4.5.2.1\\\"\\\"\"" + "'", str48, "_\"\\\"\\\"4.5.2.1\\\"\\\"\"");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "_tset_tset_12" + "'", str50, "_tset_tset_12");
        org.junit.Assert.assertNotNull(sTGroup51);
        org.junit.Assert.assertNotNull(sTGroup53);
        org.junit.Assert.assertNotNull(strSet54);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "_\"\\\"\\\"\\\\0\\\"\\\"\"Context" + "'", str56, "_\"\\\"\\\"\\\\0\\\"\\\"\"Context");
    }

    @Test
    public void test3564() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3564");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        org.antlr.v4.codegen.CodeGenerator codeGenerator1 = python3Target0.getCodeGenerator();
        org.antlr.v4.codegen.CodeGenerator codeGenerator2 = python3Target0.gen;
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = python3Target0.getCodeGenerator();
        boolean boolean4 = python3Target0.wantsBaseVisitor();
        java.lang.String str6 = python3Target0.encodeIntAsCharEscape(29);
        java.lang.String str7 = python3Target0.getVersion();
        java.lang.String str9 = python3Target0.encodeIntAsCharEscape((int) (byte) 1);
        org.junit.Assert.assertNull(codeGenerator1);
        org.junit.Assert.assertNull(codeGenerator2);
        org.junit.Assert.assertNull(codeGenerator3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\\35" + "'", str6, "\\35");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "4.5.2.1" + "'", str7, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\\1" + "'", str9, "\\1");
    }

    @Test
    public void test3565() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3565");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        java.lang.String str2 = python3Target0.getVersion();
        java.lang.String str4 = python3Target0.getTargetStringLiteralFromString("12");
        java.lang.String str7 = python3Target0.getTargetStringLiteralFromString("Hi!Context", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = null;
        java.lang.String str11 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator8, "4.5.2.1", true);
        org.stringtemplate.v4.STGroup sTGroup12 = python3Target0.templates;
        python3Target0.addBadWords();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "4.5.2.1" + "'", str2, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "\"12\"" + "'", str4, "\"12\"");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "\"Hi!Context\"" + "'", str7, "\"Hi!Context\"");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "\".5.2.\"" + "'", str11, "\".5.2.\"");
        org.junit.Assert.assertNull(sTGroup12);
    }

    @Test
    public void test3566() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3566");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        org.antlr.v4.tool.Grammar grammar3 = null;
        org.stringtemplate.v4.ST sT4 = null;
        python3Target0.genRecognizerHeaderFile(grammar3, sT4, "");
        python3Target0.language = "Python3";
        org.antlr.v4.tool.Grammar grammar9 = null;
        org.stringtemplate.v4.ST sT10 = null;
        python3Target0.genRecognizerHeaderFile(grammar9, sT10, "\"hi!\"");
        java.lang.String str15 = python3Target0.getTargetStringLiteralFromString("\"_tset\\\"\\\"Python3\\\"\\\"\"", false);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "\"_tset\\\"\\\"Python3\\\"\\\"\"" + "'", str15, "\"_tset\\\"\\\"Python3\\\"\\\"\"");
    }

    @Test
    public void test3567() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3567");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        python3Target0.language = "4.5.2.1";
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = python3Target0.getCodeGenerator();
        org.antlr.v4.codegen.CodeGenerator codeGenerator4 = python3Target0.gen;
        java.util.Set<java.lang.String> strSet5 = python3Target0.badWords;
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = python3Target0.gen;
        java.lang.String str7 = python3Target0.language;
        python3Target0.language = "\"\"\"\"\"\"\"\"Context";
        python3Target0.language = "\"\\0\"";
        boolean boolean12 = python3Target0.templatesExist();
        org.junit.Assert.assertNull(codeGenerator3);
        org.junit.Assert.assertNull(codeGenerator4);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNull(codeGenerator6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "4.5.2.1" + "'", str7, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test3568() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3568");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!", "hi!" };
        python3Target0.targetCharValueEscape = strArray5;
        java.lang.String str8 = python3Target0.getTargetStringLiteralFromString("\"\"");
        java.lang.String str10 = python3Target0.getTargetStringLiteralFromString("\"hi!\"");
        org.antlr.v4.tool.Grammar grammar11 = null;
        org.stringtemplate.v4.ST sT12 = null;
        python3Target0.genRecognizerHeaderFile(grammar11, sT12, "12Context");
        boolean boolean15 = python3Target0.wantsBaseVisitor();
        org.antlr.v4.codegen.CodeGenerator codeGenerator16 = null;
        python3Target0.gen = codeGenerator16;
        java.lang.String str18 = python3Target0.getVersion();
        java.lang.String str20 = python3Target0.getTargetStringLiteralFromString("#");
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\"\"\"\"" + "'", str8, "\"\"\"\"");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\"\"hi!\"\"" + "'", str10, "\"\"hi!\"\"");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "4.5.2.1" + "'", str18, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "\"#\"" + "'", str20, "\"#\"");
    }

    @Test
    public void test3569() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3569");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!", "hi!" };
        python3Target0.targetCharValueEscape = strArray5;
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = null;
        python3Target0.gen = codeGenerator7;
        java.lang.String str10 = python3Target0.getTargetStringLiteralFromString("Python3");
        java.lang.String[] strArray11 = python3Target0.targetCharValueEscape;
        org.antlr.v4.tool.ast.GrammarAST grammarAST12 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean13 = python3Target0.grammarSymbolCausesIssueInGeneratedCode(grammarAST12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\"Python3\"" + "'", str10, "\"Python3\"");
        org.junit.Assert.assertNotNull(strArray11);
    }

    @Test
    public void test3570() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3570");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        org.antlr.v4.codegen.CodeGenerator codeGenerator1 = python3Target0.getCodeGenerator();
        java.lang.String str3 = python3Target0.getTargetStringLiteralFromString("\\35");
        org.antlr.v4.codegen.CodeGenerator codeGenerator4 = null;
        python3Target0.gen = codeGenerator4;
        boolean boolean6 = python3Target0.wantsBaseListener();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str8 = python3Target0.getElementListName("\"_tset\\\"\\\\\\\"\\\\\\\"hi!\\\\\\\"\\\\\\\"\\\"\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(codeGenerator1);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "\"\\35\"" + "'", str3, "\"\\35\"");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    }

    @Test
    public void test3571() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3571");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        org.antlr.v4.tool.Grammar grammar3 = null;
        org.stringtemplate.v4.ST sT4 = null;
        python3Target0.genRecognizerHeaderFile(grammar3, sT4, "");
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = python3Target0.getCodeGenerator();
        java.util.Set<java.lang.String> strSet8 = python3Target0.badWords;
        boolean boolean9 = python3Target0.templatesExist();
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target11 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator10);
        java.util.Set<java.lang.String> strSet12 = python3Target11.getBadWords();
        java.lang.String str14 = python3Target11.getAltLabelContextStructName("d");
        org.stringtemplate.v4.STGroup sTGroup15 = python3Target11.getTemplates();
        python3Target0.templates = sTGroup15;
        boolean boolean17 = python3Target0.templatesExist();
        org.antlr.v4.codegen.CodeGenerator codeGenerator18 = null;
        python3Target0.gen = codeGenerator18;
        org.antlr.v4.codegen.CodeGenerator codeGenerator20 = python3Target0.gen;
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertNull(codeGenerator7);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "DContext" + "'", str14, "DContext");
        org.junit.Assert.assertNotNull(sTGroup15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNull(codeGenerator20);
    }

    @Test
    public void test3572() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3572");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python3Target1.getBadWords();
        java.lang.String str4 = python3Target1.getAltLabelContextStructName("d");
        org.stringtemplate.v4.STGroup sTGroup5 = python3Target1.getTemplates();
        boolean boolean6 = python3Target1.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup7 = python3Target1.getTemplates();
        python3Target1.language = "\"\"";
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = null;
        java.lang.String str13 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator10, "\\\"4.5.2.1\\\"", false);
        org.antlr.v4.codegen.CodeGenerator codeGenerator14 = python3Target1.gen;
        python3Target1.language = "\"\"\"\"\"\"\"\"ContextContextContext";
        boolean boolean17 = python3Target1.wantsBaseListener();
        boolean boolean18 = python3Target1.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup19 = python3Target1.templates;
        org.antlr.v4.tool.Grammar grammar20 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target21 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean22 = python3Target21.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup23 = python3Target21.templates;
        org.antlr.v4.tool.Grammar grammar24 = null;
        org.stringtemplate.v4.ST sT25 = null;
        python3Target21.genRecognizerHeaderFile(grammar24, sT25, "");
        python3Target21.language = "Python3";
        java.util.Set<java.lang.String> strSet30 = null;
        python3Target21.badWords = strSet30;
        org.antlr.v4.codegen.CodeGenerator codeGenerator32 = null;
        java.lang.String str35 = python3Target21.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator32, "\"Hi!Context\"", false);
        java.lang.String str37 = python3Target21.getListLabel("Python3");
        java.lang.String str39 = python3Target21.getTargetStringLiteralFromString("\\0");
        org.antlr.v4.tool.Grammar grammar40 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target41 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str43 = python3Target41.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.tool.Grammar grammar44 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target45 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean46 = python3Target45.supportsOverloadedMethods();
        java.lang.String str47 = python3Target45.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator48 = null;
        java.lang.String str51 = python3Target45.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator48, "", true);
        java.lang.String str52 = python3Target45.getVersion();
        org.antlr.v4.tool.Grammar grammar53 = null;
        int[] intArray54 = new int[] {};
        java.lang.String[] strArray55 = python3Target45.getTokenTypesAsTargetLabels(grammar53, intArray54);
        java.lang.String[] strArray56 = python3Target41.getTokenTypesAsTargetLabels(grammar44, intArray54);
        java.lang.String[] strArray57 = python3Target21.getTokenTypesAsTargetLabels(grammar40, intArray54);
        java.lang.String[] strArray58 = python3Target1.getTokenTypesAsTargetLabels(grammar20, intArray54);
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "DContext" + "'", str4, "DContext");
        org.junit.Assert.assertNotNull(sTGroup5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(sTGroup7);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "\\\"4.5.2.1\\\"" + "'", str13, "\\\"4.5.2.1\\\"");
        org.junit.Assert.assertNull(codeGenerator14);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(sTGroup19);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(sTGroup23);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "Hi!Context" + "'", str35, "Hi!Context");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "Python3" + "'", str37, "Python3");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "\"\\0\"" + "'", str39, "\"\\0\"");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "\"\"\"\"\"\"" + "'", str43, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "4.5.2.1" + "'", str47, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "\"\"" + "'", str51, "\"\"");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "4.5.2.1" + "'", str52, "4.5.2.1");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[]");
        org.junit.Assert.assertNotNull(strArray55);
        org.junit.Assert.assertNotNull(strArray56);
        org.junit.Assert.assertNotNull(strArray57);
        org.junit.Assert.assertNotNull(strArray58);
    }

    @Test
    public void test3573() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3573");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        org.antlr.v4.tool.Grammar grammar3 = null;
        org.stringtemplate.v4.ST sT4 = null;
        python3Target0.genRecognizerHeaderFile(grammar3, sT4, "");
        python3Target0.language = "Python3";
        java.util.Set<java.lang.String> strSet9 = null;
        python3Target0.badWords = strSet9;
        org.antlr.v4.codegen.CodeGenerator codeGenerator11 = null;
        java.lang.String str14 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator11, "\"Hi!Context\"", false);
        java.lang.String str16 = python3Target0.getListLabel("Python3");
        org.antlr.v4.codegen.CodeGenerator codeGenerator17 = python3Target0.getCodeGenerator();
        java.lang.String str18 = python3Target0.getLanguage();
        java.lang.String str21 = python3Target0.getTargetStringLiteralFromString("\\n", false);
        org.antlr.v4.tool.Grammar grammar22 = null;
        org.stringtemplate.v4.ST sT23 = null;
        python3Target0.genRecognizerHeaderFile(grammar22, sT23, "_tsethi!Context");
        boolean boolean26 = python3Target0.wantsBaseListener();
        org.antlr.v4.tool.ast.GrammarAST grammarAST27 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean28 = python3Target0.visibleGrammarSymbolCausesIssueInGeneratedCode(grammarAST27);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Hi!Context" + "'", str14, "Hi!Context");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Python3" + "'", str16, "Python3");
        org.junit.Assert.assertNull(codeGenerator17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Python3" + "'", str18, "Python3");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "\\n" + "'", str21, "\\n");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
    }

    @Test
    public void test3574() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3574");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray1 = python3Target0.targetCharValueEscape;
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = null;
        java.lang.String str6 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator3, "\"\\12\"", false);
        int int7 = python3Target0.getSerializedATNSegmentLimit();
        boolean boolean8 = python3Target0.templatesExist();
        org.antlr.v4.codegen.target.Python3Target python3Target9 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean10 = python3Target9.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup11 = python3Target9.templates;
        java.lang.String[] strArray14 = new java.lang.String[] { "hi!", "hi!" };
        python3Target9.targetCharValueEscape = strArray14;
        java.lang.String str17 = python3Target9.getTargetStringLiteralFromString("\"\"");
        java.lang.String str18 = python3Target9.getLanguage();
        java.util.Set<java.lang.String> strSet19 = python3Target9.getBadWords();
        org.antlr.v4.codegen.target.Python3Target python3Target20 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean21 = python3Target20.supportsOverloadedMethods();
        java.lang.String str22 = python3Target20.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator23 = null;
        java.lang.String str26 = python3Target20.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator23, "", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator27 = null;
        python3Target20.gen = codeGenerator27;
        java.lang.String[] strArray36 = new java.lang.String[] { "\"\"\"\"", "\\12", "\"\"", "4.5.2.1", "", "\"\"\"\"", "\"\"" };
        java.util.LinkedHashSet<java.lang.String> strSet37 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet37, strArray36);
        python3Target20.badWords = strSet37;
        boolean boolean40 = python3Target20.templatesExist();
        org.antlr.v4.codegen.CodeGenerator codeGenerator41 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target42 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator41);
        java.lang.String str44 = python3Target42.getTargetStringLiteralFromString("");
        int int45 = python3Target42.getSerializedATNSegmentLimit();
        boolean boolean46 = python3Target42.wantsBaseVisitor();
        org.stringtemplate.v4.STGroup sTGroup47 = python3Target42.loadTemplates();
        python3Target20.templates = sTGroup47;
        python3Target9.templates = sTGroup47;
        python3Target0.templates = sTGroup47;
        boolean boolean51 = python3Target0.wantsBaseListener();
        java.lang.String str53 = python3Target0.getAltLabelContextStructName("\"\"_tset_tset_12\"\"");
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "12" + "'", str6, "12");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 29 + "'", int7 == 29);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(sTGroup11);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "\"\"\"\"" + "'", str17, "\"\"\"\"");
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(strSet19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "4.5.2.1" + "'", str22, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "\"\"" + "'", str26, "\"\"");
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "\"\"" + "'", str44, "\"\"");
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 29 + "'", int45 == 29);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(sTGroup47);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "\"\"_tset_tset_12\"\"Context" + "'", str53, "\"\"_tset_tset_12\"\"Context");
    }

    @Test
    public void test3575() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3575");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        java.lang.String str2 = python3Target0.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = python3Target0.getCodeGenerator();
        org.stringtemplate.v4.STGroup sTGroup4 = null;
        python3Target0.templates = sTGroup4;
        org.stringtemplate.v4.STGroup sTGroup6 = python3Target0.templates;
        java.lang.String[] strArray7 = python3Target0.targetCharValueEscape;
        java.lang.String str10 = python3Target0.getTargetStringLiteralFromString("\"12\"", false);
        org.antlr.v4.codegen.target.Python3Target python3Target11 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean12 = python3Target11.supportsOverloadedMethods();
        java.lang.String str13 = python3Target11.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator14 = python3Target11.getCodeGenerator();
        org.stringtemplate.v4.STGroup sTGroup15 = null;
        python3Target11.templates = sTGroup15;
        org.stringtemplate.v4.STGroup sTGroup17 = python3Target11.templates;
        java.lang.String[] strArray18 = python3Target11.targetCharValueEscape;
        java.util.Set<java.lang.String> strSet19 = python3Target11.badWords;
        java.util.Set<java.lang.String> strSet20 = python3Target11.getBadWords();
        python3Target0.badWords = strSet20;
        org.antlr.v4.codegen.CodeGenerator codeGenerator22 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target23 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator22);
        java.util.Set<java.lang.String> strSet24 = python3Target23.getBadWords();
        org.antlr.v4.codegen.target.Python3Target python3Target25 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str27 = python3Target25.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.codegen.target.Python3Target python3Target28 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean29 = python3Target28.supportsOverloadedMethods();
        java.util.Set<java.lang.String> strSet30 = python3Target28.badWords;
        python3Target25.badWords = strSet30;
        python3Target23.badWords = strSet30;
        java.util.Set<java.lang.String> strSet33 = python3Target23.badWords;
        java.lang.String str34 = python3Target23.language;
        org.stringtemplate.v4.STGroup sTGroup35 = python3Target23.getTemplates();
        python3Target0.templates = sTGroup35;
        java.lang.String str37 = python3Target0.getVersion();
        boolean boolean38 = python3Target0.templatesExist();
        java.util.Set<java.lang.String> strSet39 = python3Target0.badWords;
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "4.5.2.1" + "'", str2, "4.5.2.1");
        org.junit.Assert.assertNull(codeGenerator3);
        org.junit.Assert.assertNull(sTGroup6);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\"12\"" + "'", str10, "\"12\"");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "4.5.2.1" + "'", str13, "4.5.2.1");
        org.junit.Assert.assertNull(codeGenerator14);
        org.junit.Assert.assertNull(sTGroup17);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertNotNull(strSet19);
        org.junit.Assert.assertNotNull(strSet20);
        org.junit.Assert.assertNotNull(strSet24);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "\"\"\"\"\"\"" + "'", str27, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(strSet30);
        org.junit.Assert.assertNotNull(strSet33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "Python3" + "'", str34, "Python3");
        org.junit.Assert.assertNotNull(sTGroup35);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "4.5.2.1" + "'", str37, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(strSet39);
    }

    @Test
    public void test3576() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3576");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        java.lang.String str2 = python3Target0.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = python3Target0.getCodeGenerator();
        org.stringtemplate.v4.STGroup sTGroup4 = null;
        python3Target0.templates = sTGroup4;
        org.stringtemplate.v4.STGroup sTGroup6 = python3Target0.templates;
        java.lang.String[] strArray7 = python3Target0.targetCharValueEscape;
        java.util.Set<java.lang.String> strSet8 = python3Target0.badWords;
        python3Target0.language = "@";
        java.lang.String str11 = python3Target0.getLanguage();
        java.util.Set<java.lang.String> strSet12 = python3Target0.badWords;
        org.antlr.v4.codegen.CodeGenerator codeGenerator13 = null;
        java.lang.String str16 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator13, "\"\\\"\\\\\\\"\\\\\\\"hi!\\\\\\\"\\\\\\\"\\\"\"", true);
        org.antlr.v4.tool.Grammar grammar17 = null;
        org.stringtemplate.v4.ST sT18 = null;
        // The following exception was thrown during execution in test generation
        try {
            python3Target0.genFile(grammar17, sT18, "\"_\\\"1\\\"\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "4.5.2.1" + "'", str2, "4.5.2.1");
        org.junit.Assert.assertNull(codeGenerator3);
        org.junit.Assert.assertNull(sTGroup6);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "@" + "'", str11, "@");
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "\"\\\"\\\\\\\"\\\\\\\"hi!\\\\\\\"\\\\\\\"\\\"\"" + "'", str16, "\"\\\"\\\\\\\"\\\\\\\"hi!\\\\\\\"\\\\\\\"\\\"\"");
    }

    @Test
    public void test3577() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3577");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray1 = python3Target0.targetCharValueEscape;
        python3Target0.addBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target4 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator3);
        java.lang.String str6 = python3Target4.getTargetStringLiteralFromString("");
        int int7 = python3Target4.getSerializedATNSegmentLimit();
        boolean boolean8 = python3Target4.wantsBaseVisitor();
        org.stringtemplate.v4.STGroup sTGroup9 = python3Target4.loadTemplates();
        python3Target0.templates = sTGroup9;
        org.stringtemplate.v4.STGroup sTGroup11 = python3Target0.templates;
        org.stringtemplate.v4.STGroup sTGroup12 = python3Target0.getTemplates();
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\"\"" + "'", str6, "\"\"");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 29 + "'", int7 == 29);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(sTGroup9);
        org.junit.Assert.assertNotNull(sTGroup11);
        org.junit.Assert.assertNotNull(sTGroup12);
    }

    @Test
    public void test3578() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3578");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str2 = python3Target0.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = null;
        python3Target0.gen = codeGenerator3;
        java.lang.String str5 = python3Target0.getVersion();
        org.antlr.v4.codegen.target.Python3Target python3Target6 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean7 = python3Target6.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup8 = python3Target6.templates;
        org.antlr.v4.tool.Grammar grammar9 = null;
        org.stringtemplate.v4.ST sT10 = null;
        python3Target6.genRecognizerHeaderFile(grammar9, sT10, "");
        python3Target6.language = "Python3";
        int int15 = python3Target6.getSerializedATNSegmentLimit();
        org.stringtemplate.v4.STGroup sTGroup16 = python3Target6.loadTemplates();
        python3Target0.templates = sTGroup16;
        python3Target0.addBadWords();
        java.lang.String str21 = python3Target0.getTargetStringLiteralFromString("\"\"\"_tset12\"\"\"", false);
        python3Target0.language = "_tset\"\"";
        java.lang.String str25 = python3Target0.getTargetStringLiteralFromString("");
        org.antlr.v4.codegen.target.Python3Target python3Target26 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean27 = python3Target26.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup28 = python3Target26.templates;
        java.lang.String[] strArray31 = new java.lang.String[] { "hi!", "hi!" };
        python3Target26.targetCharValueEscape = strArray31;
        java.lang.String str34 = python3Target26.getTargetStringLiteralFromString("\"\"");
        java.lang.String str35 = python3Target26.getLanguage();
        java.util.Set<java.lang.String> strSet36 = python3Target26.getBadWords();
        org.antlr.v4.codegen.target.Python3Target python3Target37 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean38 = python3Target37.supportsOverloadedMethods();
        java.util.Set<java.lang.String> strSet39 = python3Target37.badWords;
        boolean boolean40 = python3Target37.templatesExist();
        java.lang.String str41 = python3Target37.getLanguage();
        org.antlr.v4.tool.Grammar grammar42 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target43 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str45 = python3Target43.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator46 = null;
        python3Target43.gen = codeGenerator46;
        org.antlr.v4.tool.Grammar grammar48 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target49 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str51 = python3Target49.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.tool.Grammar grammar52 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target53 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean54 = python3Target53.supportsOverloadedMethods();
        java.lang.String str55 = python3Target53.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator56 = null;
        java.lang.String str59 = python3Target53.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator56, "", true);
        java.lang.String str60 = python3Target53.getVersion();
        org.antlr.v4.tool.Grammar grammar61 = null;
        int[] intArray62 = new int[] {};
        java.lang.String[] strArray63 = python3Target53.getTokenTypesAsTargetLabels(grammar61, intArray62);
        java.lang.String[] strArray64 = python3Target49.getTokenTypesAsTargetLabels(grammar52, intArray62);
        java.lang.String[] strArray65 = python3Target43.getTokenTypesAsTargetLabels(grammar48, intArray62);
        java.lang.String[] strArray66 = python3Target37.getTokenTypesAsTargetLabels(grammar42, intArray62);
        java.util.Set<java.lang.String> strSet67 = python3Target37.badWords;
        org.antlr.v4.codegen.target.Python3Target python3Target68 = new org.antlr.v4.codegen.target.Python3Target();
        python3Target68.language = "4.5.2.1";
        org.antlr.v4.codegen.CodeGenerator codeGenerator71 = python3Target68.getCodeGenerator();
        org.antlr.v4.codegen.CodeGenerator codeGenerator72 = python3Target68.gen;
        java.lang.String str73 = python3Target68.getLanguage();
        python3Target68.addBadWords();
        org.antlr.v4.codegen.target.Python3Target python3Target75 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str77 = python3Target75.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator78 = null;
        python3Target75.gen = codeGenerator78;
        java.lang.String str80 = python3Target75.getVersion();
        org.antlr.v4.codegen.target.Python3Target python3Target81 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean82 = python3Target81.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup83 = python3Target81.templates;
        org.antlr.v4.tool.Grammar grammar84 = null;
        org.stringtemplate.v4.ST sT85 = null;
        python3Target81.genRecognizerHeaderFile(grammar84, sT85, "");
        python3Target81.language = "Python3";
        int int90 = python3Target81.getSerializedATNSegmentLimit();
        org.stringtemplate.v4.STGroup sTGroup91 = python3Target81.loadTemplates();
        python3Target75.templates = sTGroup91;
        python3Target68.templates = sTGroup91;
        python3Target37.templates = sTGroup91;
        python3Target26.templates = sTGroup91;
        python3Target0.templates = sTGroup91;
        java.lang.Class<?> wildcardClass97 = python3Target0.getClass();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "\"\"\"\"\"\"" + "'", str2, "\"\"\"\"\"\"");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "4.5.2.1" + "'", str5, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(sTGroup8);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 29 + "'", int15 == 29);
        org.junit.Assert.assertNotNull(sTGroup16);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "\"\"\"_tset12\"\"\"" + "'", str21, "\"\"\"_tset12\"\"\"");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "\"\"" + "'", str25, "\"\"");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNull(sTGroup28);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "\"\"\"\"" + "'", str34, "\"\"\"\"");
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNotNull(strSet36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(strSet39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "\"\"\"\"\"\"" + "'", str45, "\"\"\"\"\"\"");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "\"\"\"\"\"\"" + "'", str51, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "4.5.2.1" + "'", str55, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "\"\"" + "'", str59, "\"\"");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "4.5.2.1" + "'", str60, "4.5.2.1");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[]");
        org.junit.Assert.assertNotNull(strArray63);
        org.junit.Assert.assertNotNull(strArray64);
        org.junit.Assert.assertNotNull(strArray65);
        org.junit.Assert.assertNotNull(strArray66);
        org.junit.Assert.assertNotNull(strSet67);
        org.junit.Assert.assertNull(codeGenerator71);
        org.junit.Assert.assertNull(codeGenerator72);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "4.5.2.1" + "'", str73, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "\"\"\"\"\"\"" + "'", str77, "\"\"\"\"\"\"");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "4.5.2.1" + "'", str80, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNull(sTGroup83);
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + 29 + "'", int90 == 29);
        org.junit.Assert.assertNotNull(sTGroup91);
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test3579() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3579");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        java.lang.String str2 = python3Target0.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = python3Target0.getCodeGenerator();
        org.antlr.v4.tool.Grammar grammar4 = null;
        org.stringtemplate.v4.ST sT5 = null;
        python3Target0.genRecognizerHeaderFile(grammar4, sT5, "_tsetPython3");
        boolean boolean8 = python3Target0.wantsBaseListener();
        org.antlr.v4.codegen.target.Python3Target python3Target9 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean10 = python3Target9.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup11 = python3Target9.templates;
        java.lang.String[] strArray14 = new java.lang.String[] { "hi!", "hi!" };
        python3Target9.targetCharValueEscape = strArray14;
        org.antlr.v4.codegen.CodeGenerator codeGenerator16 = null;
        java.lang.String str19 = python3Target9.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator16, "", false);
        java.util.Set<java.lang.String> strSet20 = python3Target9.badWords;
        java.util.Set<java.lang.String> strSet21 = python3Target9.badWords;
        java.util.Set<java.lang.String> strSet22 = python3Target9.badWords;
        python3Target0.badWords = strSet22;
        java.lang.String str25 = python3Target0.encodeIntAsCharEscape((int) (byte) 10);
        int int26 = python3Target0.getInlineTestSetWordSize();
        org.antlr.v4.codegen.model.RuleFunction ruleFunction27 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str28 = python3Target0.getRuleFunctionContextStructName(ruleFunction27);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "4.5.2.1" + "'", str2, "4.5.2.1");
        org.junit.Assert.assertNull(codeGenerator3);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(sTGroup11);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertNotNull(strSet20);
        org.junit.Assert.assertNotNull(strSet21);
        org.junit.Assert.assertNotNull(strSet22);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "\\12" + "'", str25, "\\12");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 64 + "'", int26 == 64);
    }

    @Test
    public void test3580() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3580");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        org.antlr.v4.tool.Grammar grammar3 = null;
        org.stringtemplate.v4.ST sT4 = null;
        python3Target0.genRecognizerHeaderFile(grammar3, sT4, "");
        org.antlr.v4.codegen.target.Python3Target python3Target7 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray8 = python3Target7.targetCharValueEscape;
        python3Target0.targetCharValueEscape = strArray8;
        boolean boolean10 = python3Target0.supportsOverloadedMethods();
        java.lang.String str12 = python3Target0.encodeIntAsCharEscape((int) (short) 1);
        org.antlr.v4.codegen.CodeGenerator codeGenerator13 = null;
        python3Target0.gen = codeGenerator13;
        boolean boolean15 = python3Target0.wantsBaseListener();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "\\1" + "'", str12, "\\1");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test3581() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3581");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!", "hi!" };
        python3Target0.targetCharValueEscape = strArray5;
        java.lang.String str8 = python3Target0.getTargetStringLiteralFromString("\"\"");
        java.lang.String str10 = python3Target0.getTargetStringLiteralFromString("\"hi!\"");
        org.antlr.v4.tool.Grammar grammar11 = null;
        org.stringtemplate.v4.ST sT12 = null;
        python3Target0.genRecognizerHeaderFile(grammar11, sT12, "12Context");
        boolean boolean15 = python3Target0.wantsBaseVisitor();
        java.util.Set<java.lang.String> strSet16 = python3Target0.getBadWords();
        org.antlr.v4.tool.Grammar grammar17 = null;
        org.stringtemplate.v4.ST sT18 = null;
        // The following exception was thrown during execution in test generation
        try {
            python3Target0.genFile(grammar17, sT18, "tset\\\"_tset\\\"\\\"Python3\\\"\\\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\"\"\"\"" + "'", str8, "\"\"\"\"");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\"\"hi!\"\"" + "'", str10, "\"\"hi!\"\"");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(strSet16);
    }

    @Test
    public void test3582() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3582");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        java.lang.String str2 = python3Target0.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = python3Target0.getCodeGenerator();
        org.antlr.v4.tool.Grammar grammar4 = null;
        org.stringtemplate.v4.ST sT5 = null;
        python3Target0.genRecognizerHeaderFile(grammar4, sT5, "_tsetPython3");
        boolean boolean8 = python3Target0.wantsBaseListener();
        java.lang.String str9 = python3Target0.getVersion();
        int int10 = python3Target0.getSerializedATNSegmentLimit();
        boolean boolean11 = python3Target0.templatesExist();
        boolean boolean12 = python3Target0.templatesExist();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "4.5.2.1" + "'", str2, "4.5.2.1");
        org.junit.Assert.assertNull(codeGenerator3);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "4.5.2.1" + "'", str9, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 29 + "'", int10 == 29);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test3583() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3583");
        java.lang.String str1 = org.stringtemplate.v4.StringRenderer.escapeHTML("_tset\"\\\\0\"");
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "_tset\"\\\\0\"" + "'", str1, "_tset\"\\\\0\"");
    }

    @Test
    public void test3584() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3584");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        python3Target0.language = "4.5.2.1";
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = python3Target0.getCodeGenerator();
        org.stringtemplate.v4.STGroup sTGroup4 = python3Target0.templates;
        org.junit.Assert.assertNull(codeGenerator3);
        org.junit.Assert.assertNull(sTGroup4);
    }

    @Test
    public void test3585() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3585");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python3Target1.getBadWords();
        org.antlr.v4.codegen.target.Python3Target python3Target3 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str5 = python3Target3.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.codegen.target.Python3Target python3Target6 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean7 = python3Target6.supportsOverloadedMethods();
        java.util.Set<java.lang.String> strSet8 = python3Target6.badWords;
        python3Target3.badWords = strSet8;
        python3Target1.badWords = strSet8;
        java.util.Set<java.lang.String> strSet11 = python3Target1.badWords;
        java.lang.String[] strArray12 = python3Target1.targetCharValueEscape;
        java.util.Set<java.lang.String> strSet13 = python3Target1.getBadWords();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str15 = python3Target1.getImplicitTokenLabel("\".5.2.\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "\"\"\"\"\"\"" + "'", str5, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertNotNull(strSet11);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(strSet13);
    }

    @Test
    public void test3586() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3586");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!", "hi!" };
        python3Target0.targetCharValueEscape = strArray5;
        java.lang.String str8 = python3Target0.getTargetStringLiteralFromString("\"\"");
        java.lang.String str10 = python3Target0.getTargetStringLiteralFromString("\"\"");
        java.lang.String str11 = python3Target0.getLanguage();
        int int12 = python3Target0.getInlineTestSetWordSize();
        boolean boolean13 = python3Target0.wantsBaseVisitor();
        java.lang.String str14 = python3Target0.getLanguage();
        org.antlr.v4.codegen.target.Python3Target python3Target15 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean16 = python3Target15.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup17 = python3Target15.templates;
        java.lang.String[] strArray20 = new java.lang.String[] { "hi!", "hi!" };
        python3Target15.targetCharValueEscape = strArray20;
        org.antlr.v4.codegen.CodeGenerator codeGenerator22 = null;
        java.lang.String str25 = python3Target15.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator22, "", false);
        int int26 = python3Target15.getSerializedATNSegmentLimit();
        java.lang.String str27 = python3Target15.getVersion();
        boolean boolean28 = python3Target15.supportsOverloadedMethods();
        org.antlr.v4.codegen.target.Python3Target python3Target29 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean30 = python3Target29.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup31 = python3Target29.templates;
        java.lang.String[] strArray34 = new java.lang.String[] { "hi!", "hi!" };
        python3Target29.targetCharValueEscape = strArray34;
        java.lang.String[] strArray37 = new java.lang.String[] { "hi!" };
        org.antlr.v4.codegen.target.Python3Target.python3Keywords = strArray37;
        python3Target29.targetCharValueEscape = strArray37;
        org.antlr.v4.codegen.target.Python3Target.python3Keywords = strArray37;
        python3Target15.targetCharValueEscape = strArray37;
        python3Target0.targetCharValueEscape = strArray37;
        org.antlr.v4.codegen.CodeGenerator codeGenerator43 = null;
        python3Target0.gen = codeGenerator43;
        java.lang.String str45 = python3Target0.language;
        python3Target0.language = "\"\\\"Python3\\\"\"";
        org.antlr.v4.codegen.CodeGenerator codeGenerator48 = null;
        python3Target0.gen = codeGenerator48;
        java.lang.String str52 = python3Target0.getTargetStringLiteralFromString("", true);
        python3Target0.language = "_\"\\1\"";
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str56 = python3Target0.getImplicitTokenLabel("\"__tset\"\"\"\"\"\"\"\"ContextContextContext\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\"\"\"\"" + "'", str8, "\"\"\"\"");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\"\"\"\"" + "'", str10, "\"\"\"\"");
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 64 + "'", int12 == 64);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(sTGroup17);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 29 + "'", int26 == 29);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "4.5.2.1" + "'", str27, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNull(sTGroup31);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "\"\"" + "'", str52, "\"\"");
    }

    @Test
    public void test3587() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3587");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.lang.String str3 = python3Target1.getTargetStringLiteralFromString("");
        int int4 = python3Target1.getSerializedATNSegmentLimit();
        boolean boolean5 = python3Target1.wantsBaseVisitor();
        java.lang.String str6 = python3Target1.getVersion();
        org.stringtemplate.v4.STGroup sTGroup7 = python3Target1.getTemplates();
        python3Target1.addBadWords();
        python3Target1.addBadWords();
        org.antlr.v4.tool.Rule rule10 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str11 = python3Target1.getRuleFunctionContextStructName(rule10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "\"\"" + "'", str3, "\"\"");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 29 + "'", int4 == 29);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "4.5.2.1" + "'", str6, "4.5.2.1");
        org.junit.Assert.assertNotNull(sTGroup7);
    }

    @Test
    public void test3588() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3588");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        org.antlr.v4.tool.Grammar grammar3 = null;
        org.stringtemplate.v4.ST sT4 = null;
        python3Target0.genRecognizerHeaderFile(grammar3, sT4, "");
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = python3Target0.getCodeGenerator();
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = null;
        java.lang.String str11 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator8, "12", true);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str13 = python3Target0.getElementListName("_tset\"\\0\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertNull(codeGenerator7);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "\"\"" + "'", str11, "\"\"");
    }

    @Test
    public void test3589() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3589");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.lang.String str3 = python3Target1.getTargetStringLiteralFromString("");
        int int4 = python3Target1.getSerializedATNSegmentLimit();
        boolean boolean5 = python3Target1.wantsBaseVisitor();
        org.stringtemplate.v4.STGroup sTGroup6 = python3Target1.loadTemplates();
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = python3Target1.gen;
        boolean boolean8 = python3Target1.wantsBaseListener();
        python3Target1.language = "\\35";
        java.lang.String str13 = python3Target1.getTargetStringLiteralFromString("\"\\\"tset\\\"\\\"\\\"hi!\\\"\\\"\\\"\"", true);
        org.antlr.v4.tool.ast.GrammarAST grammarAST14 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str15 = python3Target1.getLoopCounter(grammarAST14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "\"\"" + "'", str3, "\"\"");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 29 + "'", int4 == 29);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(sTGroup6);
        org.junit.Assert.assertNull(codeGenerator7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "\"\\\"\\\\\\\"tset\\\\\\\"\\\\\\\"\\\\\\\"hi!\\\\\\\"\\\\\\\"\\\\\\\"\\\"\"" + "'", str13, "\"\\\"\\\\\\\"tset\\\\\\\"\\\\\\\"\\\\\\\"hi!\\\\\\\"\\\\\\\"\\\\\\\"\\\"\"");
    }

    @Test
    public void test3590() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3590");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python3Target1.getBadWords();
        java.lang.String str4 = python3Target1.getAltLabelContextStructName("d");
        java.lang.String str5 = python3Target1.getLanguage();
        java.lang.String str6 = python3Target1.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = null;
        java.lang.String str10 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator7, "\"_tsetPython3\"", true);
        org.stringtemplate.v4.STGroup sTGroup11 = python3Target1.templates;
        java.lang.Class<?> wildcardClass12 = python3Target1.getClass();
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "DContext" + "'", str4, "DContext");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Python3" + "'", str5, "Python3");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "4.5.2.1" + "'", str6, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\"_tsetPython3\"" + "'", str10, "\"_tsetPython3\"");
        org.junit.Assert.assertNotNull(sTGroup11);
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test3591() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3591");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!", "hi!" };
        python3Target0.targetCharValueEscape = strArray5;
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = null;
        java.lang.String str10 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator7, "", false);
        java.util.Set<java.lang.String> strSet11 = python3Target0.badWords;
        java.lang.String str13 = python3Target0.getTargetStringLiteralFromString("12");
        boolean boolean14 = python3Target0.wantsBaseVisitor();
        java.lang.String str15 = python3Target0.language;
        org.antlr.v4.codegen.CodeGenerator codeGenerator16 = null;
        python3Target0.gen = codeGenerator16;
        java.lang.String str18 = python3Target0.language;
        java.lang.String str19 = python3Target0.getLanguage();
        java.util.Set<java.lang.String> strSet20 = python3Target0.badWords;
        org.antlr.v4.codegen.CodeGenerator codeGenerator21 = python3Target0.gen;
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNotNull(strSet11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "\"12\"" + "'", str13, "\"12\"");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNotNull(strSet20);
        org.junit.Assert.assertNull(codeGenerator21);
    }

    @Test
    public void test3592() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3592");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        org.antlr.v4.tool.Grammar grammar3 = null;
        org.stringtemplate.v4.ST sT4 = null;
        python3Target0.genRecognizerHeaderFile(grammar3, sT4, "");
        python3Target0.language = "Python3";
        java.util.Set<java.lang.String> strSet9 = null;
        python3Target0.badWords = strSet9;
        org.antlr.v4.codegen.CodeGenerator codeGenerator11 = null;
        java.lang.String str14 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator11, "\"Hi!Context\"", false);
        java.lang.String str16 = python3Target0.getListLabel("Python3");
        org.antlr.v4.codegen.CodeGenerator codeGenerator17 = python3Target0.getCodeGenerator();
        java.lang.String str18 = python3Target0.getLanguage();
        java.lang.String str19 = python3Target0.getLanguage();
        java.lang.String[] strArray20 = python3Target0.targetCharValueEscape;
        org.antlr.v4.codegen.CodeGenerator codeGenerator21 = python3Target0.getCodeGenerator();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Hi!Context" + "'", str14, "Hi!Context");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Python3" + "'", str16, "Python3");
        org.junit.Assert.assertNull(codeGenerator17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Python3" + "'", str18, "Python3");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Python3" + "'", str19, "Python3");
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertNull(codeGenerator21);
    }

    @Test
    public void test3593() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3593");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        java.util.Set<java.lang.String> strSet2 = python3Target0.badWords;
        boolean boolean3 = python3Target0.supportsOverloadedMethods();
        boolean boolean4 = python3Target0.supportsOverloadedMethods();
        org.antlr.v4.codegen.target.Python3Target python3Target5 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean6 = python3Target5.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup7 = python3Target5.templates;
        org.antlr.v4.tool.Grammar grammar8 = null;
        org.stringtemplate.v4.ST sT9 = null;
        python3Target5.genRecognizerHeaderFile(grammar8, sT9, "");
        python3Target5.language = "Python3";
        java.util.Set<java.lang.String> strSet14 = null;
        python3Target5.badWords = strSet14;
        boolean boolean16 = python3Target5.wantsBaseVisitor();
        java.lang.String str18 = python3Target5.getImplicitSetLabel("Python3");
        int int19 = python3Target5.getInlineTestSetWordSize();
        org.antlr.v4.codegen.target.Python3Target python3Target20 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray21 = python3Target20.targetCharValueEscape;
        java.util.Set<java.lang.String> strSet22 = python3Target20.badWords;
        python3Target5.badWords = strSet22;
        python3Target0.badWords = strSet22;
        org.antlr.v4.tool.ast.GrammarAST grammarAST25 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str26 = python3Target0.getLoopCounter(grammarAST25);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(sTGroup7);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "_tsetPython3" + "'", str18, "_tsetPython3");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 64 + "'", int19 == 64);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(strSet22);
    }

    @Test
    public void test3594() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3594");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.lang.String str3 = python3Target1.getTargetStringLiteralFromString("");
        int int4 = python3Target1.getSerializedATNSegmentLimit();
        boolean boolean5 = python3Target1.wantsBaseVisitor();
        java.lang.String str6 = python3Target1.getVersion();
        java.lang.String str7 = python3Target1.getVersion();
        python3Target1.addBadWords();
        java.lang.String str11 = python3Target1.getTargetStringLiteralFromString("__tset\"\"\"\"\"\"\"\"ContextContextContextContext", false);
        org.antlr.v4.tool.ast.GrammarAST grammarAST12 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str13 = python3Target1.getLoopCounter(grammarAST12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "\"\"" + "'", str3, "\"\"");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 29 + "'", int4 == 29);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "4.5.2.1" + "'", str6, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "4.5.2.1" + "'", str7, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "__tset\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"ContextContextContextContext" + "'", str11, "__tset\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"ContextContextContextContext");
    }

    @Test
    public void test3595() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3595");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        org.antlr.v4.tool.Grammar grammar3 = null;
        org.stringtemplate.v4.ST sT4 = null;
        python3Target0.genRecognizerHeaderFile(grammar3, sT4, "");
        python3Target0.language = "Python3";
        int int9 = python3Target0.getSerializedATNSegmentLimit();
        java.lang.String str11 = python3Target0.getListLabel("_tsetPython3");
        org.antlr.v4.codegen.CodeGenerator codeGenerator12 = null;
        java.lang.String str15 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator12, "\"\"\"hi!\"\"\"", true);
        java.lang.String str17 = python3Target0.getAltLabelContextStructName("\"\"\"\"\"\"\"\"Context");
        java.util.Set<java.lang.String> strSet18 = python3Target0.badWords;
        org.antlr.v4.tool.ast.GrammarAST grammarAST19 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str20 = python3Target0.getLoopLabel(grammarAST19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 29 + "'", int9 == 29);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "_tsetPython3" + "'", str11, "_tsetPython3");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "\"\\\"\\\"hi!\\\"\\\"\"" + "'", str15, "\"\\\"\\\"hi!\\\"\\\"\"");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "\"\"\"\"\"\"\"\"ContextContext" + "'", str17, "\"\"\"\"\"\"\"\"ContextContext");
        org.junit.Assert.assertNotNull(strSet18);
    }

    @Test
    public void test3596() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3596");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.lang.String str3 = python3Target1.getTargetStringLiteralFromString("");
        int int4 = python3Target1.getSerializedATNSegmentLimit();
        boolean boolean5 = python3Target1.wantsBaseVisitor();
        org.stringtemplate.v4.STGroup sTGroup6 = python3Target1.loadTemplates();
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = python3Target1.gen;
        org.antlr.v4.codegen.target.Python3Target python3Target8 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean9 = python3Target8.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup10 = python3Target8.templates;
        org.antlr.v4.tool.Grammar grammar11 = null;
        org.stringtemplate.v4.ST sT12 = null;
        python3Target8.genRecognizerHeaderFile(grammar11, sT12, "");
        python3Target8.language = "Python3";
        int int17 = python3Target8.getSerializedATNSegmentLimit();
        org.stringtemplate.v4.STGroup sTGroup18 = python3Target8.loadTemplates();
        python3Target1.templates = sTGroup18;
        org.antlr.v4.tool.Grammar grammar20 = null;
        org.stringtemplate.v4.ST sT21 = null;
        python3Target1.genRecognizerHeaderFile(grammar20, sT21, "\"_tset12\"");
        org.stringtemplate.v4.STGroup sTGroup24 = python3Target1.getTemplates();
        boolean boolean25 = python3Target1.templatesExist();
        java.lang.String str27 = python3Target1.getListLabel("\\\"hi!\\\"Context");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "\"\"" + "'", str3, "\"\"");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 29 + "'", int4 == 29);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(sTGroup6);
        org.junit.Assert.assertNull(codeGenerator7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(sTGroup10);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 29 + "'", int17 == 29);
        org.junit.Assert.assertNotNull(sTGroup18);
        org.junit.Assert.assertNotNull(sTGroup24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "\\\"hi!\\\"Context" + "'", str27, "\\\"hi!\\\"Context");
    }

    @Test
    public void test3597() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3597");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        org.antlr.v4.tool.Grammar grammar3 = null;
        org.stringtemplate.v4.ST sT4 = null;
        python3Target0.genRecognizerHeaderFile(grammar3, sT4, "");
        python3Target0.language = "Python3";
        int int9 = python3Target0.getSerializedATNSegmentLimit();
        java.lang.String str11 = python3Target0.getListLabel("_tsetPython3");
        boolean boolean12 = python3Target0.wantsBaseVisitor();
        org.antlr.v4.tool.ast.GrammarAST grammarAST13 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str14 = python3Target0.getLoopCounter(grammarAST13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 29 + "'", int9 == 29);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "_tsetPython3" + "'", str11, "_tsetPython3");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test3598() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3598");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        java.lang.String str2 = python3Target0.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = python3Target0.getCodeGenerator();
        org.stringtemplate.v4.STGroup sTGroup4 = null;
        python3Target0.templates = sTGroup4;
        org.stringtemplate.v4.STGroup sTGroup6 = python3Target0.templates;
        java.lang.String[] strArray7 = python3Target0.targetCharValueEscape;
        java.util.Set<java.lang.String> strSet8 = python3Target0.badWords;
        python3Target0.language = "@";
        java.lang.String str11 = python3Target0.getLanguage();
        java.lang.String str13 = python3Target0.encodeIntAsCharEscape((int) (byte) 100);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "4.5.2.1" + "'", str2, "4.5.2.1");
        org.junit.Assert.assertNull(codeGenerator3);
        org.junit.Assert.assertNull(sTGroup6);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "@" + "'", str11, "@");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "d" + "'", str13, "d");
    }

    @Test
    public void test3599() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3599");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.lang.String str3 = python3Target1.getTargetStringLiteralFromString("");
        int int4 = python3Target1.getSerializedATNSegmentLimit();
        boolean boolean5 = python3Target1.wantsBaseVisitor();
        org.stringtemplate.v4.STGroup sTGroup6 = python3Target1.loadTemplates();
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = python3Target1.gen;
        boolean boolean8 = python3Target1.wantsBaseListener();
        python3Target1.language = "\\35";
        java.lang.String str12 = python3Target1.encodeIntAsCharEscape(29);
        org.antlr.v4.codegen.target.Python3Target python3Target13 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean14 = python3Target13.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup15 = python3Target13.templates;
        java.lang.String[] strArray18 = new java.lang.String[] { "hi!", "hi!" };
        python3Target13.targetCharValueEscape = strArray18;
        java.lang.String str21 = python3Target13.getTargetStringLiteralFromString("\"\"");
        java.lang.String str23 = python3Target13.getTargetStringLiteralFromString("\"hi!\"");
        java.lang.String str24 = python3Target13.language;
        java.util.Set<java.lang.String> strSet25 = python3Target13.getBadWords();
        python3Target1.badWords = strSet25;
        python3Target1.addBadWords();
        org.antlr.v4.tool.ast.GrammarAST grammarAST28 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str29 = python3Target1.getLoopLabel(grammarAST28);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "\"\"" + "'", str3, "\"\"");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 29 + "'", int4 == 29);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(sTGroup6);
        org.junit.Assert.assertNull(codeGenerator7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "\\35" + "'", str12, "\\35");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(sTGroup15);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "\"\"\"\"" + "'", str21, "\"\"\"\"");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "\"\"hi!\"\"" + "'", str23, "\"\"hi!\"\"");
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(strSet25);
    }

    @Test
    public void test3600() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3600");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        python3Target0.language = "";
        org.antlr.v4.codegen.target.Python3Target python3Target3 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean4 = python3Target3.supportsOverloadedMethods();
        java.lang.String str5 = python3Target3.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = null;
        java.lang.String str9 = python3Target3.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator6, "", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = null;
        python3Target3.gen = codeGenerator10;
        java.lang.String[] strArray19 = new java.lang.String[] { "\"\"\"\"", "\\12", "\"\"", "4.5.2.1", "", "\"\"\"\"", "\"\"" };
        java.util.LinkedHashSet<java.lang.String> strSet20 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet20, strArray19);
        python3Target3.badWords = strSet20;
        python3Target0.badWords = strSet20;
        java.lang.String str25 = python3Target0.encodeIntAsCharEscape((int) (byte) 100);
        org.stringtemplate.v4.STGroup sTGroup26 = python3Target0.templates;
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "4.5.2.1" + "'", str5, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\"\"" + "'", str9, "\"\"");
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "d" + "'", str25, "d");
        org.junit.Assert.assertNull(sTGroup26);
    }

    @Test
    public void test3601() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3601");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python3Target1.getBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = null;
        python3Target1.gen = codeGenerator3;
        java.lang.String str6 = python3Target1.getAltLabelContextStructName("hi!");
        java.lang.String str9 = python3Target1.getTargetStringLiteralFromString("\"hi!\"", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = null;
        python3Target1.gen = codeGenerator10;
        org.antlr.v4.tool.Grammar grammar12 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target13 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray14 = python3Target13.targetCharValueEscape;
        org.stringtemplate.v4.STGroup sTGroup15 = python3Target13.templates;
        int int16 = python3Target13.getInlineTestSetWordSize();
        org.antlr.v4.codegen.CodeGenerator codeGenerator17 = python3Target13.gen;
        org.antlr.v4.tool.Grammar grammar18 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target19 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str21 = python3Target19.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.tool.Grammar grammar22 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target23 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean24 = python3Target23.supportsOverloadedMethods();
        java.lang.String str25 = python3Target23.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator26 = null;
        java.lang.String str29 = python3Target23.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator26, "", true);
        java.lang.String str30 = python3Target23.getVersion();
        org.antlr.v4.tool.Grammar grammar31 = null;
        int[] intArray32 = new int[] {};
        java.lang.String[] strArray33 = python3Target23.getTokenTypesAsTargetLabels(grammar31, intArray32);
        java.lang.String[] strArray34 = python3Target19.getTokenTypesAsTargetLabels(grammar22, intArray32);
        java.lang.String[] strArray35 = python3Target13.getTokenTypesAsTargetLabels(grammar18, intArray32);
        java.lang.String[] strArray36 = python3Target1.getTokenTypesAsTargetLabels(grammar12, intArray32);
        java.lang.String str38 = python3Target1.getAltLabelContextStructName("\"Python3\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator39 = python3Target1.gen;
        org.antlr.v4.codegen.CodeGenerator codeGenerator40 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target41 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator40);
        java.lang.String str43 = python3Target41.getTargetStringLiteralFromString("");
        int int44 = python3Target41.getSerializedATNSegmentLimit();
        boolean boolean45 = python3Target41.wantsBaseVisitor();
        org.stringtemplate.v4.STGroup sTGroup46 = python3Target41.loadTemplates();
        org.antlr.v4.codegen.CodeGenerator codeGenerator47 = python3Target41.gen;
        org.antlr.v4.codegen.target.Python3Target python3Target48 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean49 = python3Target48.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup50 = python3Target48.templates;
        org.antlr.v4.tool.Grammar grammar51 = null;
        org.stringtemplate.v4.ST sT52 = null;
        python3Target48.genRecognizerHeaderFile(grammar51, sT52, "");
        python3Target48.language = "Python3";
        int int57 = python3Target48.getSerializedATNSegmentLimit();
        org.stringtemplate.v4.STGroup sTGroup58 = python3Target48.loadTemplates();
        python3Target41.templates = sTGroup58;
        java.lang.String str60 = python3Target41.getVersion();
        java.util.Set<java.lang.String> strSet61 = python3Target41.getBadWords();
        python3Target1.badWords = strSet61;
        java.lang.String str65 = python3Target1.getTargetStringLiteralFromString("\"\\0\"", true);
        java.lang.String str66 = python3Target1.getVersion();
        java.lang.String str67 = python3Target1.getVersion();
        org.antlr.v4.codegen.target.Python3Target python3Target68 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean69 = python3Target68.supportsOverloadedMethods();
        java.lang.String str70 = python3Target68.getVersion();
        java.lang.String str72 = python3Target68.getTargetStringLiteralFromString("12");
        java.lang.String str75 = python3Target68.getTargetStringLiteralFromString("Hi!Context", true);
        int int76 = python3Target68.getInlineTestSetWordSize();
        org.antlr.v4.codegen.target.Python3Target python3Target77 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray78 = python3Target77.targetCharValueEscape;
        org.stringtemplate.v4.STGroup sTGroup79 = python3Target77.templates;
        org.antlr.v4.codegen.CodeGenerator codeGenerator80 = null;
        java.lang.String str83 = python3Target77.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator80, "\"\\12\"", false);
        int int84 = python3Target77.getSerializedATNSegmentLimit();
        boolean boolean85 = python3Target77.templatesExist();
        boolean boolean86 = python3Target77.supportsOverloadedMethods();
        org.antlr.v4.tool.Grammar grammar87 = null;
        org.stringtemplate.v4.ST sT88 = null;
        python3Target77.genRecognizerHeaderFile(grammar87, sT88, "_tsetPython3");
        java.util.Set<java.lang.String> strSet91 = python3Target77.badWords;
        java.util.Set<java.lang.String> strSet92 = python3Target77.badWords;
        python3Target68.badWords = strSet92;
        python3Target1.badWords = strSet92;
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Hi!Context" + "'", str6, "Hi!Context");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\"\\\"hi!\\\"\"" + "'", str9, "\"\\\"hi!\\\"\"");
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertNull(sTGroup15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 64 + "'", int16 == 64);
        org.junit.Assert.assertNull(codeGenerator17);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "\"\"\"\"\"\"" + "'", str21, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "4.5.2.1" + "'", str25, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "\"\"" + "'", str29, "\"\"");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "4.5.2.1" + "'", str30, "4.5.2.1");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[]");
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "\"Python3\"Context" + "'", str38, "\"Python3\"Context");
        org.junit.Assert.assertNull(codeGenerator39);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "\"\"" + "'", str43, "\"\"");
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 29 + "'", int44 == 29);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(sTGroup46);
        org.junit.Assert.assertNull(codeGenerator47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNull(sTGroup50);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 29 + "'", int57 == 29);
        org.junit.Assert.assertNotNull(sTGroup58);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "4.5.2.1" + "'", str60, "4.5.2.1");
        org.junit.Assert.assertNotNull(strSet61);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "\"\\\"\\\\0\\\"\"" + "'", str65, "\"\\\"\\\\0\\\"\"");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "4.5.2.1" + "'", str66, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "4.5.2.1" + "'", str67, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "4.5.2.1" + "'", str70, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "\"12\"" + "'", str72, "\"12\"");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "\"Hi!Context\"" + "'", str75, "\"Hi!Context\"");
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 64 + "'", int76 == 64);
        org.junit.Assert.assertNotNull(strArray78);
        org.junit.Assert.assertNull(sTGroup79);
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "12" + "'", str83, "12");
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 29 + "'", int84 == 29);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertNotNull(strSet91);
        org.junit.Assert.assertNotNull(strSet92);
    }

    @Test
    public void test3602() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3602");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python3Target1.getBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = null;
        python3Target1.gen = codeGenerator3;
        java.lang.String str6 = python3Target1.getAltLabelContextStructName("hi!");
        java.lang.String str9 = python3Target1.getTargetStringLiteralFromString("\"hi!\"", true);
        python3Target1.language = "\"\\\"\\\"hi!\\\"\\\"\"";
        java.lang.String str13 = python3Target1.getImplicitSetLabel("\"\"");
        org.stringtemplate.v4.STGroup sTGroup14 = python3Target1.getTemplates();
        boolean boolean15 = python3Target1.supportsOverloadedMethods();
        python3Target1.addBadWords();
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Hi!Context" + "'", str6, "Hi!Context");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\"\\\"hi!\\\"\"" + "'", str9, "\"\\\"hi!\\\"\"");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "_tset\"\"" + "'", str13, "_tset\"\"");
        org.junit.Assert.assertNotNull(sTGroup14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test3603() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3603");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        java.lang.String str2 = python3Target0.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = null;
        java.lang.String str6 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator3, "", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = null;
        python3Target0.gen = codeGenerator7;
        java.lang.String[] strArray16 = new java.lang.String[] { "\"\"\"\"", "\\12", "\"\"", "4.5.2.1", "", "\"\"\"\"", "\"\"" };
        java.util.LinkedHashSet<java.lang.String> strSet17 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet17, strArray16);
        python3Target0.badWords = strSet17;
        org.antlr.v4.codegen.CodeGenerator codeGenerator20 = python3Target0.gen;
        java.lang.String str21 = python3Target0.getVersion();
        int int22 = python3Target0.getSerializedATNSegmentLimit();
        org.antlr.v4.codegen.CodeGenerator codeGenerator23 = python3Target0.getCodeGenerator();
        boolean boolean24 = python3Target0.templatesExist();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str26 = python3Target0.getElementName("_tset\"___tset\"\"\"\"\"\"\"\"ContextContextContextContext\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "4.5.2.1" + "'", str2, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\"\"" + "'", str6, "\"\"");
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNull(codeGenerator20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "4.5.2.1" + "'", str21, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 29 + "'", int22 == 29);
        org.junit.Assert.assertNull(codeGenerator23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    }

    @Test
    public void test3604() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3604");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str2 = python3Target0.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = null;
        python3Target0.gen = codeGenerator3;
        java.lang.String str5 = python3Target0.getVersion();
        org.antlr.v4.codegen.target.Python3Target python3Target6 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean7 = python3Target6.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup8 = python3Target6.templates;
        org.antlr.v4.tool.Grammar grammar9 = null;
        org.stringtemplate.v4.ST sT10 = null;
        python3Target6.genRecognizerHeaderFile(grammar9, sT10, "");
        python3Target6.language = "Python3";
        int int15 = python3Target6.getSerializedATNSegmentLimit();
        org.stringtemplate.v4.STGroup sTGroup16 = python3Target6.loadTemplates();
        python3Target0.templates = sTGroup16;
        java.util.Set<java.lang.String> strSet18 = python3Target0.getBadWords();
        boolean boolean19 = python3Target0.supportsOverloadedMethods();
        org.antlr.v4.codegen.CodeGenerator codeGenerator20 = null;
        python3Target0.gen = codeGenerator20;
        org.antlr.v4.tool.Grammar grammar22 = null;
        org.stringtemplate.v4.ST sT23 = null;
        // The following exception was thrown during execution in test generation
        try {
            python3Target0.genListenerFile(grammar22, sT23);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "\"\"\"\"\"\"" + "'", str2, "\"\"\"\"\"\"");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "4.5.2.1" + "'", str5, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(sTGroup8);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 29 + "'", int15 == 29);
        org.junit.Assert.assertNotNull(sTGroup16);
        org.junit.Assert.assertNotNull(strSet18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    }

    @Test
    public void test3605() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3605");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        java.lang.String str2 = python3Target0.getVersion();
        boolean boolean3 = python3Target0.supportsOverloadedMethods();
        org.antlr.v4.codegen.CodeGenerator codeGenerator4 = null;
        java.lang.String str7 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator4, "", false);
        java.lang.String str10 = python3Target0.getTargetStringLiteralFromString("\"DContext\"", true);
        org.antlr.v4.tool.Grammar grammar11 = null;
        org.stringtemplate.v4.ST sT12 = null;
        // The following exception was thrown during execution in test generation
        try {
            python3Target0.genListenerFile(grammar11, sT12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "4.5.2.1" + "'", str2, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\"\"DContext\"\"" + "'", str10, "\"\"DContext\"\"");
    }

    @Test
    public void test3606() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3606");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        java.lang.String str2 = python3Target0.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = null;
        java.lang.String str6 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator3, "", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = null;
        python3Target0.gen = codeGenerator7;
        java.lang.String[] strArray16 = new java.lang.String[] { "\"\"\"\"", "\\12", "\"\"", "4.5.2.1", "", "\"\"\"\"", "\"\"" };
        java.util.LinkedHashSet<java.lang.String> strSet17 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet17, strArray16);
        python3Target0.badWords = strSet17;
        org.antlr.v4.tool.Grammar grammar20 = null;
        org.stringtemplate.v4.ST sT21 = null;
        python3Target0.genRecognizerHeaderFile(grammar20, sT21, "\"\"");
        java.lang.String str25 = python3Target0.encodeIntAsCharEscape((int) (byte) 10);
        java.lang.String str26 = python3Target0.language;
        java.util.Set<java.lang.String> strSet27 = python3Target0.getBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator28 = null;
        java.lang.String str31 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator28, "", false);
        java.util.Set<java.lang.String> strSet32 = python3Target0.badWords;
        org.antlr.v4.tool.Grammar grammar33 = null;
        org.stringtemplate.v4.ST sT34 = null;
        // The following exception was thrown during execution in test generation
        try {
            python3Target0.genFile(grammar33, sT34, "DContext\\\"Contex");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "4.5.2.1" + "'", str2, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\"\"" + "'", str6, "\"\"");
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "\\12" + "'", str25, "\\12");
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(strSet27);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "" + "'", str31, "");
        org.junit.Assert.assertNotNull(strSet32);
    }

    @Test
    public void test3607() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3607");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        python3Target0.language = "4.5.2.1";
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = python3Target0.getCodeGenerator();
        org.antlr.v4.codegen.CodeGenerator codeGenerator4 = python3Target0.gen;
        org.antlr.v4.codegen.CodeGenerator codeGenerator5 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target6 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator5);
        java.lang.String str8 = python3Target6.getTargetStringLiteralFromString("");
        int int9 = python3Target6.getSerializedATNSegmentLimit();
        boolean boolean10 = python3Target6.wantsBaseVisitor();
        org.stringtemplate.v4.STGroup sTGroup11 = python3Target6.loadTemplates();
        python3Target0.templates = sTGroup11;
        java.lang.String str13 = python3Target0.language;
        java.lang.String[] strArray14 = python3Target0.targetCharValueEscape;
        boolean boolean15 = python3Target0.wantsBaseListener();
        org.antlr.v4.codegen.CodeGenerator codeGenerator16 = python3Target0.getCodeGenerator();
        org.junit.Assert.assertNull(codeGenerator3);
        org.junit.Assert.assertNull(codeGenerator4);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\"\"" + "'", str8, "\"\"");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 29 + "'", int9 == 29);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(sTGroup11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "4.5.2.1" + "'", str13, "4.5.2.1");
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(codeGenerator16);
    }

    @Test
    public void test3608() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3608");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        java.util.Set<java.lang.String> strSet2 = python3Target0.badWords;
        boolean boolean3 = python3Target0.supportsOverloadedMethods();
        boolean boolean4 = python3Target0.supportsOverloadedMethods();
        org.antlr.v4.codegen.target.Python3Target python3Target5 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean6 = python3Target5.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup7 = python3Target5.templates;
        org.antlr.v4.tool.Grammar grammar8 = null;
        org.stringtemplate.v4.ST sT9 = null;
        python3Target5.genRecognizerHeaderFile(grammar8, sT9, "");
        python3Target5.language = "Python3";
        java.util.Set<java.lang.String> strSet14 = null;
        python3Target5.badWords = strSet14;
        boolean boolean16 = python3Target5.wantsBaseVisitor();
        java.lang.String str18 = python3Target5.getImplicitSetLabel("Python3");
        int int19 = python3Target5.getInlineTestSetWordSize();
        org.antlr.v4.codegen.target.Python3Target python3Target20 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray21 = python3Target20.targetCharValueEscape;
        java.util.Set<java.lang.String> strSet22 = python3Target20.badWords;
        python3Target5.badWords = strSet22;
        python3Target0.badWords = strSet22;
        python3Target0.addBadWords();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(sTGroup7);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "_tsetPython3" + "'", str18, "_tsetPython3");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 64 + "'", int19 == 64);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(strSet22);
    }

    @Test
    public void test3609() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3609");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        java.lang.String str2 = python3Target0.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = null;
        java.lang.String str6 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator3, "", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = null;
        python3Target0.gen = codeGenerator7;
        java.lang.String[] strArray16 = new java.lang.String[] { "\"\"\"\"", "\\12", "\"\"", "4.5.2.1", "", "\"\"\"\"", "\"\"" };
        java.util.LinkedHashSet<java.lang.String> strSet17 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet17, strArray16);
        python3Target0.badWords = strSet17;
        org.antlr.v4.tool.Grammar grammar20 = null;
        org.stringtemplate.v4.ST sT21 = null;
        python3Target0.genRecognizerHeaderFile(grammar20, sT21, "\"\"");
        java.lang.String str25 = python3Target0.encodeIntAsCharEscape((int) (byte) 10);
        java.lang.String str26 = python3Target0.language;
        java.util.Set<java.lang.String> strSet27 = python3Target0.getBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator28 = null;
        java.lang.String str31 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator28, "", false);
        java.util.Set<java.lang.String> strSet32 = python3Target0.badWords;
        boolean boolean33 = python3Target0.supportsOverloadedMethods();
        boolean boolean34 = python3Target0.supportsOverloadedMethods();
        org.antlr.v4.codegen.CodeGenerator codeGenerator35 = python3Target0.gen;
        java.lang.String str36 = python3Target0.getLanguage();
        java.lang.String[] strArray37 = python3Target0.targetCharValueEscape;
        java.util.Set<java.lang.String> strSet38 = python3Target0.getBadWords();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "4.5.2.1" + "'", str2, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\"\"" + "'", str6, "\"\"");
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "\\12" + "'", str25, "\\12");
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(strSet27);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "" + "'", str31, "");
        org.junit.Assert.assertNotNull(strSet32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNull(codeGenerator35);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertNotNull(strSet38);
    }

    @Test
    public void test3610() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3610");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.lang.String str3 = python3Target1.getTargetStringLiteralFromString("");
        int int4 = python3Target1.getSerializedATNSegmentLimit();
        java.lang.String str5 = python3Target1.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup6 = python3Target1.loadTemplates();
        java.lang.String str7 = python3Target1.getVersion();
        java.util.Set<java.lang.String> strSet8 = python3Target1.getBadWords();
        java.lang.String str10 = python3Target1.getTargetStringLiteralFromString("\"\\\"\\\"\"");
        org.stringtemplate.v4.STGroup sTGroup11 = python3Target1.getTemplates();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str13 = python3Target1.getAltLabelContextStructName("");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 0");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "\"\"" + "'", str3, "\"\"");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 29 + "'", int4 == 29);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Python3" + "'", str5, "Python3");
        org.junit.Assert.assertNotNull(sTGroup6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "4.5.2.1" + "'", str7, "4.5.2.1");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\"\\\"\\\\\\\"\\\\\\\"\\\"\"" + "'", str10, "\"\\\"\\\\\\\"\\\\\\\"\\\"\"");
        org.junit.Assert.assertNotNull(sTGroup11);
    }

    @Test
    public void test3611() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3611");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        java.lang.String str2 = python3Target0.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = null;
        java.lang.String str6 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator3, "", true);
        java.lang.String str7 = python3Target0.getVersion();
        org.antlr.v4.tool.Grammar grammar8 = null;
        int[] intArray9 = new int[] {};
        java.lang.String[] strArray10 = python3Target0.getTokenTypesAsTargetLabels(grammar8, intArray9);
        java.lang.String[] strArray11 = python3Target0.targetCharValueEscape;
        java.util.Set<java.lang.String> strSet12 = python3Target0.badWords;
        python3Target0.addBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator14 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target15 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator14);
        java.util.Set<java.lang.String> strSet16 = python3Target15.getBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator17 = null;
        python3Target15.gen = codeGenerator17;
        org.antlr.v4.tool.Grammar grammar19 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target20 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean21 = python3Target20.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup22 = python3Target20.templates;
        org.antlr.v4.tool.Grammar grammar23 = null;
        org.stringtemplate.v4.ST sT24 = null;
        python3Target20.genRecognizerHeaderFile(grammar23, sT24, "");
        boolean boolean27 = python3Target20.supportsOverloadedMethods();
        python3Target20.language = "\"\\12\"";
        org.antlr.v4.tool.Grammar grammar30 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator31 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target32 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator31);
        java.util.Set<java.lang.String> strSet33 = python3Target32.getBadWords();
        java.lang.String str35 = python3Target32.getAltLabelContextStructName("d");
        java.lang.String str37 = python3Target32.getTargetStringLiteralFromString("\"\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator38 = python3Target32.getCodeGenerator();
        org.antlr.v4.tool.Grammar grammar39 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator40 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target41 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator40);
        java.util.Set<java.lang.String> strSet42 = python3Target41.getBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator43 = null;
        python3Target41.gen = codeGenerator43;
        java.lang.String str46 = python3Target41.getAltLabelContextStructName("hi!");
        java.lang.String str49 = python3Target41.getTargetStringLiteralFromString("\"hi!\"", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator50 = null;
        python3Target41.gen = codeGenerator50;
        org.antlr.v4.tool.Grammar grammar52 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target53 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray54 = python3Target53.targetCharValueEscape;
        org.stringtemplate.v4.STGroup sTGroup55 = python3Target53.templates;
        int int56 = python3Target53.getInlineTestSetWordSize();
        org.antlr.v4.codegen.CodeGenerator codeGenerator57 = python3Target53.gen;
        org.antlr.v4.tool.Grammar grammar58 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target59 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str61 = python3Target59.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.tool.Grammar grammar62 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target63 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean64 = python3Target63.supportsOverloadedMethods();
        java.lang.String str65 = python3Target63.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator66 = null;
        java.lang.String str69 = python3Target63.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator66, "", true);
        java.lang.String str70 = python3Target63.getVersion();
        org.antlr.v4.tool.Grammar grammar71 = null;
        int[] intArray72 = new int[] {};
        java.lang.String[] strArray73 = python3Target63.getTokenTypesAsTargetLabels(grammar71, intArray72);
        java.lang.String[] strArray74 = python3Target59.getTokenTypesAsTargetLabels(grammar62, intArray72);
        java.lang.String[] strArray75 = python3Target53.getTokenTypesAsTargetLabels(grammar58, intArray72);
        java.lang.String[] strArray76 = python3Target41.getTokenTypesAsTargetLabels(grammar52, intArray72);
        java.lang.String[] strArray77 = python3Target32.getTokenTypesAsTargetLabels(grammar39, intArray72);
        java.lang.String[] strArray78 = python3Target20.getTokenTypesAsTargetLabels(grammar30, intArray72);
        java.lang.String[] strArray79 = python3Target15.getTokenTypesAsTargetLabels(grammar19, intArray72);
        python3Target0.targetCharValueEscape = strArray79;
        org.antlr.v4.codegen.target.Python3Target python3Target81 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean82 = python3Target81.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup83 = python3Target81.templates;
        org.antlr.v4.tool.Grammar grammar84 = null;
        org.stringtemplate.v4.ST sT85 = null;
        python3Target81.genRecognizerHeaderFile(grammar84, sT85, "");
        python3Target81.language = "Python3";
        int int90 = python3Target81.getSerializedATNSegmentLimit();
        org.antlr.v4.codegen.CodeGenerator codeGenerator91 = python3Target81.gen;
        org.stringtemplate.v4.STGroup sTGroup92 = python3Target81.loadTemplates();
        python3Target0.templates = sTGroup92;
        int int94 = python3Target0.getSerializedATNSegmentLimit();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "4.5.2.1" + "'", str2, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\"\"" + "'", str6, "\"\"");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "4.5.2.1" + "'", str7, "4.5.2.1");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[]");
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(sTGroup22);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(strSet33);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "DContext" + "'", str35, "DContext");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "\"\\\"\\\"\"" + "'", str37, "\"\\\"\\\"\"");
        org.junit.Assert.assertNull(codeGenerator38);
        org.junit.Assert.assertNotNull(strSet42);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "Hi!Context" + "'", str46, "Hi!Context");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "\"\\\"hi!\\\"\"" + "'", str49, "\"\\\"hi!\\\"\"");
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertNull(sTGroup55);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 64 + "'", int56 == 64);
        org.junit.Assert.assertNull(codeGenerator57);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "\"\"\"\"\"\"" + "'", str61, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "4.5.2.1" + "'", str65, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "\"\"" + "'", str69, "\"\"");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "4.5.2.1" + "'", str70, "4.5.2.1");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[]");
        org.junit.Assert.assertNotNull(strArray73);
        org.junit.Assert.assertNotNull(strArray74);
        org.junit.Assert.assertNotNull(strArray75);
        org.junit.Assert.assertNotNull(strArray76);
        org.junit.Assert.assertNotNull(strArray77);
        org.junit.Assert.assertNotNull(strArray78);
        org.junit.Assert.assertNotNull(strArray79);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNull(sTGroup83);
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + 29 + "'", int90 == 29);
        org.junit.Assert.assertNull(codeGenerator91);
        org.junit.Assert.assertNotNull(sTGroup92);
        org.junit.Assert.assertTrue("'" + int94 + "' != '" + 29 + "'", int94 == 29);
    }

    @Test
    public void test3612() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3612");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        int int2 = python3Target0.getInlineTestSetWordSize();
        java.lang.String[] strArray3 = python3Target0.targetCharValueEscape;
        org.antlr.v4.codegen.target.Python3Target python3Target4 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean5 = python3Target4.supportsOverloadedMethods();
        java.lang.String str6 = python3Target4.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = null;
        java.lang.String str10 = python3Target4.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator7, "", true);
        java.lang.String str11 = python3Target4.getVersion();
        org.antlr.v4.codegen.target.Python3Target python3Target12 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean13 = python3Target12.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup14 = python3Target12.templates;
        java.lang.String[] strArray17 = new java.lang.String[] { "hi!", "hi!" };
        python3Target12.targetCharValueEscape = strArray17;
        java.lang.String[] strArray20 = new java.lang.String[] { "hi!" };
        org.antlr.v4.codegen.target.Python3Target.python3Keywords = strArray20;
        python3Target12.targetCharValueEscape = strArray20;
        org.antlr.v4.codegen.target.Python3Target.python3Keywords = strArray20;
        python3Target4.targetCharValueEscape = strArray20;
        python3Target0.targetCharValueEscape = strArray20;
        org.antlr.v4.codegen.target.Python3Target python3Target26 = new org.antlr.v4.codegen.target.Python3Target();
        python3Target26.language = "4.5.2.1";
        org.antlr.v4.codegen.CodeGenerator codeGenerator29 = python3Target26.getCodeGenerator();
        org.antlr.v4.codegen.CodeGenerator codeGenerator30 = python3Target26.gen;
        org.antlr.v4.codegen.CodeGenerator codeGenerator31 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target32 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator31);
        java.lang.String str34 = python3Target32.getTargetStringLiteralFromString("");
        int int35 = python3Target32.getSerializedATNSegmentLimit();
        boolean boolean36 = python3Target32.wantsBaseVisitor();
        org.stringtemplate.v4.STGroup sTGroup37 = python3Target32.loadTemplates();
        python3Target26.templates = sTGroup37;
        java.lang.String str39 = python3Target26.language;
        org.antlr.v4.codegen.target.Python3Target python3Target40 = new org.antlr.v4.codegen.target.Python3Target();
        python3Target40.language = "";
        org.antlr.v4.codegen.target.Python3Target python3Target43 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean44 = python3Target43.supportsOverloadedMethods();
        java.lang.String str45 = python3Target43.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator46 = null;
        java.lang.String str49 = python3Target43.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator46, "", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator50 = null;
        python3Target43.gen = codeGenerator50;
        java.lang.String[] strArray59 = new java.lang.String[] { "\"\"\"\"", "\\12", "\"\"", "4.5.2.1", "", "\"\"\"\"", "\"\"" };
        java.util.LinkedHashSet<java.lang.String> strSet60 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet60, strArray59);
        python3Target43.badWords = strSet60;
        python3Target40.badWords = strSet60;
        python3Target40.addBadWords();
        java.util.Set<java.lang.String> strSet65 = python3Target40.badWords;
        python3Target26.badWords = strSet65;
        java.util.Set<java.lang.String> strSet67 = python3Target26.getBadWords();
        python3Target0.badWords = strSet67;
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "4.5.2.1" + "'", str6, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\"\"" + "'", str10, "\"\"");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "4.5.2.1" + "'", str11, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(sTGroup14);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertNull(codeGenerator29);
        org.junit.Assert.assertNull(codeGenerator30);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "\"\"" + "'", str34, "\"\"");
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 29 + "'", int35 == 29);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(sTGroup37);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "4.5.2.1" + "'", str39, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "4.5.2.1" + "'", str45, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "\"\"" + "'", str49, "\"\"");
        org.junit.Assert.assertNotNull(strArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(strSet65);
        org.junit.Assert.assertNotNull(strSet67);
    }

    @Test
    public void test3613() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3613");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        java.lang.String str2 = python3Target0.getVersion();
        java.lang.String str4 = python3Target0.getTargetStringLiteralFromString("12");
        java.lang.String str7 = python3Target0.getTargetStringLiteralFromString("Hi!Context", true);
        int int8 = python3Target0.getInlineTestSetWordSize();
        org.antlr.v4.codegen.target.Python3Target python3Target9 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray10 = python3Target9.targetCharValueEscape;
        org.stringtemplate.v4.STGroup sTGroup11 = python3Target9.templates;
        org.antlr.v4.codegen.CodeGenerator codeGenerator12 = null;
        java.lang.String str15 = python3Target9.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator12, "\"\\12\"", false);
        int int16 = python3Target9.getSerializedATNSegmentLimit();
        boolean boolean17 = python3Target9.templatesExist();
        boolean boolean18 = python3Target9.supportsOverloadedMethods();
        org.antlr.v4.tool.Grammar grammar19 = null;
        org.stringtemplate.v4.ST sT20 = null;
        python3Target9.genRecognizerHeaderFile(grammar19, sT20, "_tsetPython3");
        java.util.Set<java.lang.String> strSet23 = python3Target9.badWords;
        java.util.Set<java.lang.String> strSet24 = python3Target9.badWords;
        python3Target0.badWords = strSet24;
        org.antlr.v4.codegen.CodeGenerator codeGenerator26 = null;
        python3Target0.gen = codeGenerator26;
        org.antlr.v4.codegen.model.RuleFunction ruleFunction28 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str29 = python3Target0.getRuleFunctionContextStructName(ruleFunction28);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "4.5.2.1" + "'", str2, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "\"12\"" + "'", str4, "\"12\"");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "\"Hi!Context\"" + "'", str7, "\"Hi!Context\"");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 64 + "'", int8 == 64);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNull(sTGroup11);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "12" + "'", str15, "12");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 29 + "'", int16 == 29);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(strSet23);
        org.junit.Assert.assertNotNull(strSet24);
    }

    @Test
    public void test3614() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3614");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray1 = python3Target0.targetCharValueEscape;
        java.lang.String str2 = python3Target0.language;
        int int3 = python3Target0.getSerializedATNSegmentLimit();
        java.lang.String str5 = python3Target0.encodeIntAsCharEscape(1);
        java.lang.String str7 = python3Target0.encodeIntAsCharEscape(0);
        python3Target0.addBadWords();
        org.stringtemplate.v4.STGroup sTGroup9 = python3Target0.templates;
        int int10 = python3Target0.getSerializedATNSegmentLimit();
        java.lang.String str11 = python3Target0.language;
        java.lang.String str12 = python3Target0.getLanguage();
        int int13 = python3Target0.getSerializedATNSegmentLimit();
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 29 + "'", int3 == 29);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "\\1" + "'", str5, "\\1");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "\\0" + "'", str7, "\\0");
        org.junit.Assert.assertNull(sTGroup9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 29 + "'", int10 == 29);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 29 + "'", int13 == 29);
    }

    @Test
    public void test3615() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3615");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python3Target1.getBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = null;
        python3Target1.gen = codeGenerator3;
        org.antlr.v4.tool.Grammar grammar5 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target6 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean7 = python3Target6.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup8 = python3Target6.templates;
        org.antlr.v4.tool.Grammar grammar9 = null;
        org.stringtemplate.v4.ST sT10 = null;
        python3Target6.genRecognizerHeaderFile(grammar9, sT10, "");
        boolean boolean13 = python3Target6.supportsOverloadedMethods();
        python3Target6.language = "\"\\12\"";
        org.antlr.v4.tool.Grammar grammar16 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator17 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target18 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator17);
        java.util.Set<java.lang.String> strSet19 = python3Target18.getBadWords();
        java.lang.String str21 = python3Target18.getAltLabelContextStructName("d");
        java.lang.String str23 = python3Target18.getTargetStringLiteralFromString("\"\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator24 = python3Target18.getCodeGenerator();
        org.antlr.v4.tool.Grammar grammar25 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator26 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target27 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator26);
        java.util.Set<java.lang.String> strSet28 = python3Target27.getBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator29 = null;
        python3Target27.gen = codeGenerator29;
        java.lang.String str32 = python3Target27.getAltLabelContextStructName("hi!");
        java.lang.String str35 = python3Target27.getTargetStringLiteralFromString("\"hi!\"", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator36 = null;
        python3Target27.gen = codeGenerator36;
        org.antlr.v4.tool.Grammar grammar38 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target39 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray40 = python3Target39.targetCharValueEscape;
        org.stringtemplate.v4.STGroup sTGroup41 = python3Target39.templates;
        int int42 = python3Target39.getInlineTestSetWordSize();
        org.antlr.v4.codegen.CodeGenerator codeGenerator43 = python3Target39.gen;
        org.antlr.v4.tool.Grammar grammar44 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target45 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str47 = python3Target45.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.tool.Grammar grammar48 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target49 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean50 = python3Target49.supportsOverloadedMethods();
        java.lang.String str51 = python3Target49.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator52 = null;
        java.lang.String str55 = python3Target49.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator52, "", true);
        java.lang.String str56 = python3Target49.getVersion();
        org.antlr.v4.tool.Grammar grammar57 = null;
        int[] intArray58 = new int[] {};
        java.lang.String[] strArray59 = python3Target49.getTokenTypesAsTargetLabels(grammar57, intArray58);
        java.lang.String[] strArray60 = python3Target45.getTokenTypesAsTargetLabels(grammar48, intArray58);
        java.lang.String[] strArray61 = python3Target39.getTokenTypesAsTargetLabels(grammar44, intArray58);
        java.lang.String[] strArray62 = python3Target27.getTokenTypesAsTargetLabels(grammar38, intArray58);
        java.lang.String[] strArray63 = python3Target18.getTokenTypesAsTargetLabels(grammar25, intArray58);
        java.lang.String[] strArray64 = python3Target6.getTokenTypesAsTargetLabels(grammar16, intArray58);
        java.lang.String[] strArray65 = python3Target1.getTokenTypesAsTargetLabels(grammar5, intArray58);
        org.stringtemplate.v4.STGroup sTGroup66 = python3Target1.getTemplates();
        org.antlr.v4.tool.Grammar grammar67 = null;
        org.stringtemplate.v4.ST sT68 = null;
        python3Target1.genRecognizerHeaderFile(grammar67, sT68, "_\"\"hi!\"\"");
        java.util.Set<java.lang.String> strSet71 = python3Target1.getBadWords();
        java.lang.String str72 = python3Target1.getVersion();
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(sTGroup8);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strSet19);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "DContext" + "'", str21, "DContext");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "\"\\\"\\\"\"" + "'", str23, "\"\\\"\\\"\"");
        org.junit.Assert.assertNull(codeGenerator24);
        org.junit.Assert.assertNotNull(strSet28);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "Hi!Context" + "'", str32, "Hi!Context");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "\"\\\"hi!\\\"\"" + "'", str35, "\"\\\"hi!\\\"\"");
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertNull(sTGroup41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 64 + "'", int42 == 64);
        org.junit.Assert.assertNull(codeGenerator43);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "\"\"\"\"\"\"" + "'", str47, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "4.5.2.1" + "'", str51, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "\"\"" + "'", str55, "\"\"");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "4.5.2.1" + "'", str56, "4.5.2.1");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[]");
        org.junit.Assert.assertNotNull(strArray59);
        org.junit.Assert.assertNotNull(strArray60);
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertNotNull(strArray62);
        org.junit.Assert.assertNotNull(strArray63);
        org.junit.Assert.assertNotNull(strArray64);
        org.junit.Assert.assertNotNull(strArray65);
        org.junit.Assert.assertNotNull(sTGroup66);
        org.junit.Assert.assertNotNull(strSet71);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "4.5.2.1" + "'", str72, "4.5.2.1");
    }

    @Test
    public void test3616() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3616");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        org.antlr.v4.tool.Grammar grammar3 = null;
        org.stringtemplate.v4.ST sT4 = null;
        python3Target0.genRecognizerHeaderFile(grammar3, sT4, "");
        python3Target0.language = "Python3";
        java.util.Set<java.lang.String> strSet9 = null;
        python3Target0.badWords = strSet9;
        org.antlr.v4.codegen.CodeGenerator codeGenerator11 = null;
        java.lang.String str14 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator11, "\"Hi!Context\"", false);
        java.lang.String str16 = python3Target0.getListLabel("Python3");
        org.antlr.v4.codegen.CodeGenerator codeGenerator17 = python3Target0.getCodeGenerator();
        java.lang.String str18 = python3Target0.getLanguage();
        java.lang.String str19 = python3Target0.getLanguage();
        java.lang.String[] strArray20 = python3Target0.targetCharValueEscape;
        python3Target0.language = "\"d\"Context";
        boolean boolean23 = python3Target0.templatesExist();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Hi!Context" + "'", str14, "Hi!Context");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Python3" + "'", str16, "Python3");
        org.junit.Assert.assertNull(codeGenerator17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Python3" + "'", str18, "Python3");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Python3" + "'", str19, "Python3");
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
    }

    @Test
    public void test3617() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3617");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.lang.String str3 = python3Target1.getTargetStringLiteralFromString("");
        int int4 = python3Target1.getSerializedATNSegmentLimit();
        org.stringtemplate.v4.STGroup sTGroup5 = python3Target1.loadTemplates();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "\"\"" + "'", str3, "\"\"");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 29 + "'", int4 == 29);
        org.junit.Assert.assertNotNull(sTGroup5);
    }

    @Test
    public void test3618() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3618");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!", "hi!" };
        python3Target0.targetCharValueEscape = strArray5;
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = null;
        java.lang.String str10 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator7, "", false);
        java.util.Set<java.lang.String> strSet11 = python3Target0.badWords;
        java.util.Set<java.lang.String> strSet12 = python3Target0.badWords;
        boolean boolean13 = python3Target0.templatesExist();
        int int14 = python3Target0.getSerializedATNSegmentLimit();
        boolean boolean15 = python3Target0.supportsOverloadedMethods();
        org.antlr.v4.tool.Grammar grammar16 = null;
        int[] intArray17 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String[] strArray18 = python3Target0.getTokenTypesAsTargetLabels(grammar16, intArray17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNotNull(strSet11);
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 29 + "'", int14 == 29);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test3619() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3619");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray1 = python3Target0.targetCharValueEscape;
        python3Target0.addBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target4 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator3);
        java.lang.String str6 = python3Target4.getTargetStringLiteralFromString("");
        int int7 = python3Target4.getSerializedATNSegmentLimit();
        boolean boolean8 = python3Target4.wantsBaseVisitor();
        org.stringtemplate.v4.STGroup sTGroup9 = python3Target4.loadTemplates();
        python3Target0.templates = sTGroup9;
        boolean boolean11 = python3Target0.wantsBaseVisitor();
        org.antlr.v4.codegen.CodeGenerator codeGenerator12 = null;
        python3Target0.gen = codeGenerator12;
        org.antlr.v4.tool.ast.GrammarAST grammarAST14 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean15 = python3Target0.visibleGrammarSymbolCausesIssueInGeneratedCode(grammarAST14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\"\"" + "'", str6, "\"\"");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 29 + "'", int7 == 29);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(sTGroup9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test3620() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3620");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python3Target1.getBadWords();
        org.antlr.v4.codegen.target.Python3Target python3Target3 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str5 = python3Target3.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.codegen.target.Python3Target python3Target6 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean7 = python3Target6.supportsOverloadedMethods();
        java.util.Set<java.lang.String> strSet8 = python3Target6.badWords;
        python3Target3.badWords = strSet8;
        python3Target1.badWords = strSet8;
        java.util.Set<java.lang.String> strSet11 = python3Target1.badWords;
        org.antlr.v4.codegen.target.Python3Target python3Target12 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean13 = python3Target12.supportsOverloadedMethods();
        java.lang.String str14 = python3Target12.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator15 = null;
        java.lang.String str18 = python3Target12.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator15, "", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator19 = null;
        python3Target12.gen = codeGenerator19;
        java.lang.String[] strArray28 = new java.lang.String[] { "\"\"\"\"", "\\12", "\"\"", "4.5.2.1", "", "\"\"\"\"", "\"\"" };
        java.util.LinkedHashSet<java.lang.String> strSet29 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet29, strArray28);
        python3Target12.badWords = strSet29;
        org.antlr.v4.tool.Grammar grammar32 = null;
        org.stringtemplate.v4.ST sT33 = null;
        python3Target12.genRecognizerHeaderFile(grammar32, sT33, "\"\"");
        python3Target12.addBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator37 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target38 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator37);
        java.lang.String str39 = python3Target38.getVersion();
        int int40 = python3Target38.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet41 = python3Target38.badWords;
        java.util.Set<java.lang.String> strSet42 = python3Target38.getBadWords();
        python3Target12.badWords = strSet42;
        python3Target1.badWords = strSet42;
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "\"\"\"\"\"\"" + "'", str5, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertNotNull(strSet11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "4.5.2.1" + "'", str14, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "\"\"" + "'", str18, "\"\"");
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "4.5.2.1" + "'", str39, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 64 + "'", int40 == 64);
        org.junit.Assert.assertNotNull(strSet41);
        org.junit.Assert.assertNotNull(strSet42);
    }

    @Test
    public void test3621() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3621");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        org.antlr.v4.tool.Grammar grammar3 = null;
        org.stringtemplate.v4.ST sT4 = null;
        python3Target0.genRecognizerHeaderFile(grammar3, sT4, "");
        python3Target0.language = "Python3";
        int int9 = python3Target0.getSerializedATNSegmentLimit();
        org.stringtemplate.v4.STGroup sTGroup10 = python3Target0.loadTemplates();
        python3Target0.addBadWords();
        java.lang.String str13 = python3Target0.getTargetStringLiteralFromString("\\35");
        java.lang.String str16 = python3Target0.getTargetStringLiteralFromString("@", true);
        org.antlr.v4.codegen.target.Python3Target python3Target17 = new org.antlr.v4.codegen.target.Python3Target();
        python3Target17.language = "";
        org.antlr.v4.codegen.target.Python3Target python3Target20 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean21 = python3Target20.supportsOverloadedMethods();
        java.lang.String str22 = python3Target20.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator23 = null;
        java.lang.String str26 = python3Target20.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator23, "", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator27 = null;
        python3Target20.gen = codeGenerator27;
        java.lang.String[] strArray36 = new java.lang.String[] { "\"\"\"\"", "\\12", "\"\"", "4.5.2.1", "", "\"\"\"\"", "\"\"" };
        java.util.LinkedHashSet<java.lang.String> strSet37 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet37, strArray36);
        python3Target20.badWords = strSet37;
        python3Target17.badWords = strSet37;
        java.lang.String str42 = python3Target17.encodeIntAsCharEscape((int) (byte) 100);
        boolean boolean43 = python3Target17.templatesExist();
        org.antlr.v4.codegen.target.Python3Target python3Target44 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str46 = python3Target44.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator47 = null;
        python3Target44.gen = codeGenerator47;
        org.antlr.v4.tool.Grammar grammar49 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target50 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str52 = python3Target50.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.tool.Grammar grammar53 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target54 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean55 = python3Target54.supportsOverloadedMethods();
        java.lang.String str56 = python3Target54.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator57 = null;
        java.lang.String str60 = python3Target54.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator57, "", true);
        java.lang.String str61 = python3Target54.getVersion();
        org.antlr.v4.tool.Grammar grammar62 = null;
        int[] intArray63 = new int[] {};
        java.lang.String[] strArray64 = python3Target54.getTokenTypesAsTargetLabels(grammar62, intArray63);
        java.lang.String[] strArray65 = python3Target50.getTokenTypesAsTargetLabels(grammar53, intArray63);
        java.lang.String[] strArray66 = python3Target44.getTokenTypesAsTargetLabels(grammar49, intArray63);
        python3Target17.targetCharValueEscape = strArray66;
        python3Target0.targetCharValueEscape = strArray66;
        java.util.Set<java.lang.String> strSet69 = python3Target0.getBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator70 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target71 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator70);
        java.lang.String str73 = python3Target71.getTargetStringLiteralFromString("");
        int int74 = python3Target71.getSerializedATNSegmentLimit();
        boolean boolean75 = python3Target71.wantsBaseVisitor();
        org.stringtemplate.v4.STGroup sTGroup76 = python3Target71.loadTemplates();
        org.antlr.v4.codegen.CodeGenerator codeGenerator77 = python3Target71.gen;
        java.lang.String str80 = python3Target71.getTargetStringLiteralFromString("_tset\\12", false);
        org.stringtemplate.v4.STGroup sTGroup81 = python3Target71.loadTemplates();
        python3Target0.templates = sTGroup81;
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 29 + "'", int9 == 29);
        org.junit.Assert.assertNotNull(sTGroup10);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "\"\\35\"" + "'", str13, "\"\\35\"");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "\"@\"" + "'", str16, "\"@\"");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "4.5.2.1" + "'", str22, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "\"\"" + "'", str26, "\"\"");
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "d" + "'", str42, "d");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "\"\"\"\"\"\"" + "'", str46, "\"\"\"\"\"\"");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "\"\"\"\"\"\"" + "'", str52, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "4.5.2.1" + "'", str56, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "\"\"" + "'", str60, "\"\"");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "4.5.2.1" + "'", str61, "4.5.2.1");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[]");
        org.junit.Assert.assertNotNull(strArray64);
        org.junit.Assert.assertNotNull(strArray65);
        org.junit.Assert.assertNotNull(strArray66);
        org.junit.Assert.assertNotNull(strSet69);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "\"\"" + "'", str73, "\"\"");
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 29 + "'", int74 == 29);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(sTGroup76);
        org.junit.Assert.assertNull(codeGenerator77);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "_tset\\\\12" + "'", str80, "_tset\\\\12");
        org.junit.Assert.assertNotNull(sTGroup81);
    }

    @Test
    public void test3622() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3622");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray1 = python3Target0.targetCharValueEscape;
        java.lang.String str2 = python3Target0.getVersion();
        int int3 = python3Target0.getInlineTestSetWordSize();
        boolean boolean4 = python3Target0.supportsOverloadedMethods();
        org.antlr.v4.codegen.CodeGenerator codeGenerator5 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target6 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator5);
        java.lang.String str8 = python3Target6.getTargetStringLiteralFromString("");
        int int9 = python3Target6.getSerializedATNSegmentLimit();
        boolean boolean10 = python3Target6.wantsBaseVisitor();
        org.stringtemplate.v4.STGroup sTGroup11 = python3Target6.loadTemplates();
        org.antlr.v4.codegen.CodeGenerator codeGenerator12 = python3Target6.gen;
        org.antlr.v4.codegen.target.Python3Target python3Target13 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean14 = python3Target13.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup15 = python3Target13.templates;
        org.antlr.v4.tool.Grammar grammar16 = null;
        org.stringtemplate.v4.ST sT17 = null;
        python3Target13.genRecognizerHeaderFile(grammar16, sT17, "");
        python3Target13.language = "Python3";
        int int22 = python3Target13.getSerializedATNSegmentLimit();
        org.stringtemplate.v4.STGroup sTGroup23 = python3Target13.loadTemplates();
        python3Target6.templates = sTGroup23;
        java.lang.String str25 = python3Target6.getVersion();
        java.lang.String str27 = python3Target6.getAltLabelContextStructName("\"\\\"\\\"\\\\0\\\"\\\"\"");
        java.lang.String[] strArray28 = python3Target6.targetCharValueEscape;
        python3Target0.targetCharValueEscape = strArray28;
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "4.5.2.1" + "'", str2, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 64 + "'", int3 == 64);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\"\"" + "'", str8, "\"\"");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 29 + "'", int9 == 29);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(sTGroup11);
        org.junit.Assert.assertNull(codeGenerator12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(sTGroup15);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 29 + "'", int22 == 29);
        org.junit.Assert.assertNotNull(sTGroup23);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "4.5.2.1" + "'", str25, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "\"\\\"\\\"\\\\0\\\"\\\"\"Context" + "'", str27, "\"\\\"\\\"\\\\0\\\"\\\"\"Context");
        org.junit.Assert.assertNotNull(strArray28);
    }

    @Test
    public void test3623() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3623");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        org.antlr.v4.tool.Grammar grammar3 = null;
        org.stringtemplate.v4.ST sT4 = null;
        python3Target0.genRecognizerHeaderFile(grammar3, sT4, "");
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = python3Target0.getCodeGenerator();
        boolean boolean8 = python3Target0.supportsOverloadedMethods();
        org.antlr.v4.codegen.target.Python3Target python3Target9 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean10 = python3Target9.supportsOverloadedMethods();
        java.lang.String str11 = python3Target9.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator12 = python3Target9.getCodeGenerator();
        org.antlr.v4.tool.Grammar grammar13 = null;
        org.stringtemplate.v4.ST sT14 = null;
        python3Target9.genRecognizerHeaderFile(grammar13, sT14, "_tsetPython3");
        boolean boolean17 = python3Target9.wantsBaseListener();
        org.antlr.v4.codegen.target.Python3Target python3Target18 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean19 = python3Target18.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup20 = python3Target18.templates;
        java.lang.String[] strArray23 = new java.lang.String[] { "hi!", "hi!" };
        python3Target18.targetCharValueEscape = strArray23;
        org.antlr.v4.codegen.CodeGenerator codeGenerator25 = null;
        java.lang.String str28 = python3Target18.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator25, "", false);
        java.util.Set<java.lang.String> strSet29 = python3Target18.badWords;
        java.util.Set<java.lang.String> strSet30 = python3Target18.badWords;
        java.util.Set<java.lang.String> strSet31 = python3Target18.badWords;
        python3Target9.badWords = strSet31;
        python3Target0.badWords = strSet31;
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertNull(codeGenerator7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "4.5.2.1" + "'", str11, "4.5.2.1");
        org.junit.Assert.assertNull(codeGenerator12);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(sTGroup20);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
        org.junit.Assert.assertNotNull(strSet29);
        org.junit.Assert.assertNotNull(strSet30);
        org.junit.Assert.assertNotNull(strSet31);
    }

    @Test
    public void test3624() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3624");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        java.lang.String str2 = python3Target0.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = null;
        java.lang.String str6 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator3, "", true);
        python3Target0.addBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = python3Target0.getCodeGenerator();
        java.lang.String str9 = python3Target0.language;
        org.antlr.v4.tool.Rule rule10 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str11 = python3Target0.getRuleFunctionContextStructName(rule10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "4.5.2.1" + "'", str2, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\"\"" + "'", str6, "\"\"");
        org.junit.Assert.assertNull(codeGenerator8);
        org.junit.Assert.assertNull(str9);
    }

    @Test
    public void test3625() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3625");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        java.lang.String str2 = python3Target0.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = null;
        java.lang.String str6 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator3, "", true);
        java.lang.String str7 = python3Target0.getVersion();
        org.antlr.v4.tool.Grammar grammar8 = null;
        int[] intArray9 = new int[] {};
        java.lang.String[] strArray10 = python3Target0.getTokenTypesAsTargetLabels(grammar8, intArray9);
        java.lang.String[] strArray11 = python3Target0.targetCharValueEscape;
        java.util.Set<java.lang.String> strSet12 = python3Target0.badWords;
        python3Target0.addBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator14 = null;
        python3Target0.gen = codeGenerator14;
        org.antlr.v4.codegen.CodeGenerator codeGenerator16 = python3Target0.gen;
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "4.5.2.1" + "'", str2, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\"\"" + "'", str6, "\"\"");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "4.5.2.1" + "'", str7, "4.5.2.1");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[]");
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertNull(codeGenerator16);
    }

    @Test
    public void test3626() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3626");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        python3Target0.language = "";
        org.antlr.v4.codegen.target.Python3Target python3Target3 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean4 = python3Target3.supportsOverloadedMethods();
        java.lang.String str5 = python3Target3.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = null;
        java.lang.String str9 = python3Target3.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator6, "", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = null;
        python3Target3.gen = codeGenerator10;
        java.lang.String[] strArray19 = new java.lang.String[] { "\"\"\"\"", "\\12", "\"\"", "4.5.2.1", "", "\"\"\"\"", "\"\"" };
        java.util.LinkedHashSet<java.lang.String> strSet20 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet20, strArray19);
        python3Target3.badWords = strSet20;
        python3Target0.badWords = strSet20;
        java.lang.String str25 = python3Target0.encodeIntAsCharEscape((int) (byte) 100);
        boolean boolean26 = python3Target0.templatesExist();
        java.util.Set<java.lang.String> strSet27 = python3Target0.getBadWords();
        org.antlr.v4.tool.Grammar grammar28 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str30 = python3Target0.getTokenTypeAsTargetLabel(grammar28, (int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "4.5.2.1" + "'", str5, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\"\"" + "'", str9, "\"\"");
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "d" + "'", str25, "d");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(strSet27);
    }

    @Test
    public void test3627() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3627");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!", "hi!" };
        python3Target0.targetCharValueEscape = strArray5;
        java.lang.String[] strArray8 = new java.lang.String[] { "hi!" };
        org.antlr.v4.codegen.target.Python3Target.python3Keywords = strArray8;
        python3Target0.targetCharValueEscape = strArray8;
        java.lang.String str12 = python3Target0.getTargetStringLiteralFromString("\"\"\"\"\"\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator13 = null;
        java.lang.String str16 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator13, "\"_tset\"\\\"Python3\\\"\"\"", true);
        int int17 = python3Target0.getSerializedATNSegmentLimit();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str19 = python3Target0.getAltLabelContextStructName("_tset\\\"\\\"tset\\\"\\\"\\\"hi!\\\"\\\"\\\"\\\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "\"\"\"\"\"\"\"\"" + "'", str12, "\"\"\"\"\"\"\"\"");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "\"_tset\\\"\\\"Python3\\\"\\\"\"" + "'", str16, "\"_tset\\\"\\\"Python3\\\"\\\"\"");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 29 + "'", int17 == 29);
    }

    @Test
    public void test3628() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3628");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.lang.String str3 = python3Target1.getTargetStringLiteralFromString("");
        int int4 = python3Target1.getSerializedATNSegmentLimit();
        int int5 = python3Target1.getInlineTestSetWordSize();
        org.antlr.v4.tool.Grammar grammar6 = null;
        org.stringtemplate.v4.ST sT7 = null;
        python3Target1.genRecognizerHeaderFile(grammar6, sT7, "@");
        boolean boolean10 = python3Target1.templatesExist();
        boolean boolean11 = python3Target1.templatesExist();
        java.lang.String str12 = python3Target1.language;
        org.antlr.v4.tool.Grammar grammar13 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator14 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target15 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator14);
        java.util.Set<java.lang.String> strSet16 = python3Target15.getBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator17 = null;
        python3Target15.gen = codeGenerator17;
        java.lang.String str20 = python3Target15.getAltLabelContextStructName("hi!");
        java.lang.String str23 = python3Target15.getTargetStringLiteralFromString("\"hi!\"", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator24 = null;
        python3Target15.gen = codeGenerator24;
        org.antlr.v4.tool.Grammar grammar26 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target27 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray28 = python3Target27.targetCharValueEscape;
        org.stringtemplate.v4.STGroup sTGroup29 = python3Target27.templates;
        int int30 = python3Target27.getInlineTestSetWordSize();
        org.antlr.v4.codegen.CodeGenerator codeGenerator31 = python3Target27.gen;
        org.antlr.v4.tool.Grammar grammar32 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target33 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str35 = python3Target33.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.tool.Grammar grammar36 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target37 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean38 = python3Target37.supportsOverloadedMethods();
        java.lang.String str39 = python3Target37.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator40 = null;
        java.lang.String str43 = python3Target37.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator40, "", true);
        java.lang.String str44 = python3Target37.getVersion();
        org.antlr.v4.tool.Grammar grammar45 = null;
        int[] intArray46 = new int[] {};
        java.lang.String[] strArray47 = python3Target37.getTokenTypesAsTargetLabels(grammar45, intArray46);
        java.lang.String[] strArray48 = python3Target33.getTokenTypesAsTargetLabels(grammar36, intArray46);
        java.lang.String[] strArray49 = python3Target27.getTokenTypesAsTargetLabels(grammar32, intArray46);
        java.lang.String[] strArray50 = python3Target15.getTokenTypesAsTargetLabels(grammar26, intArray46);
        java.lang.String[] strArray51 = python3Target1.getTokenTypesAsTargetLabels(grammar13, intArray46);
        python3Target1.language = "tset\\\\\\\"\\\\\\\"0\\\\\\\"\\\\\\\"Contex";
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "\"\"" + "'", str3, "\"\"");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 29 + "'", int4 == 29);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 64 + "'", int5 == 64);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Python3" + "'", str12, "Python3");
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "Hi!Context" + "'", str20, "Hi!Context");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "\"\\\"hi!\\\"\"" + "'", str23, "\"\\\"hi!\\\"\"");
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertNull(sTGroup29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 64 + "'", int30 == 64);
        org.junit.Assert.assertNull(codeGenerator31);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "\"\"\"\"\"\"" + "'", str35, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "4.5.2.1" + "'", str39, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "\"\"" + "'", str43, "\"\"");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "4.5.2.1" + "'", str44, "4.5.2.1");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[]");
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertNotNull(strArray49);
        org.junit.Assert.assertNotNull(strArray50);
        org.junit.Assert.assertNotNull(strArray51);
    }

    @Test
    public void test3629() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3629");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.lang.String str2 = python3Target1.getVersion();
        int int3 = python3Target1.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet4 = python3Target1.badWords;
        java.lang.String str6 = python3Target1.encodeIntAsCharEscape((int) '4');
        int int7 = python3Target1.getInlineTestSetWordSize();
        java.lang.String[] strArray8 = python3Target1.targetCharValueEscape;
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "4.5.2.1" + "'", str2, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 64 + "'", int3 == 64);
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\\64" + "'", str6, "\\64");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 64 + "'", int7 == 64);
        org.junit.Assert.assertNotNull(strArray8);
    }

    @Test
    public void test3630() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3630");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!", "hi!" };
        python3Target0.targetCharValueEscape = strArray5;
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = null;
        java.lang.String str10 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator7, "", false);
        java.util.Set<java.lang.String> strSet11 = python3Target0.badWords;
        java.lang.String str13 = python3Target0.getTargetStringLiteralFromString("12");
        int int14 = python3Target0.getSerializedATNSegmentLimit();
        java.lang.String str15 = python3Target0.getVersion();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNotNull(strSet11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "\"12\"" + "'", str13, "\"12\"");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 29 + "'", int14 == 29);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "4.5.2.1" + "'", str15, "4.5.2.1");
    }

    @Test
    public void test3631() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3631");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.lang.String str3 = python3Target1.getTargetStringLiteralFromString("");
        int int4 = python3Target1.getSerializedATNSegmentLimit();
        boolean boolean5 = python3Target1.wantsBaseVisitor();
        org.stringtemplate.v4.STGroup sTGroup6 = python3Target1.loadTemplates();
        java.lang.String str7 = python3Target1.getLanguage();
        java.lang.String str9 = python3Target1.getTargetStringLiteralFromString("\"\"\\0\"\"");
        org.stringtemplate.v4.STGroup sTGroup10 = python3Target1.loadTemplates();
        java.util.Set<java.lang.String> strSet11 = python3Target1.getBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator12 = null;
        java.lang.String str15 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator12, "\"\"\"\"\"\"", true);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "\"\"" + "'", str3, "\"\"");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 29 + "'", int4 == 29);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(sTGroup6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Python3" + "'", str7, "Python3");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\"\\\"\\\"\\\\0\\\"\\\"\"" + "'", str9, "\"\\\"\\\"\\\\0\\\"\\\"\"");
        org.junit.Assert.assertNotNull(sTGroup10);
        org.junit.Assert.assertNotNull(strSet11);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "\"\\\"\\\"\\\"\\\"\"" + "'", str15, "\"\\\"\\\"\\\"\\\"\"");
    }

    @Test
    public void test3632() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3632");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        java.lang.String str2 = python3Target0.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = null;
        java.lang.String str6 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator3, "", true);
        java.lang.String str7 = python3Target0.getVersion();
        org.antlr.v4.tool.Grammar grammar8 = null;
        int[] intArray9 = new int[] {};
        java.lang.String[] strArray10 = python3Target0.getTokenTypesAsTargetLabels(grammar8, intArray9);
        int int11 = python3Target0.getSerializedATNSegmentLimit();
        java.lang.String[] strArray12 = python3Target0.targetCharValueEscape;
        org.antlr.v4.codegen.target.Python3Target python3Target13 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean14 = python3Target13.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup15 = python3Target13.templates;
        org.antlr.v4.tool.Grammar grammar16 = null;
        org.stringtemplate.v4.ST sT17 = null;
        python3Target13.genRecognizerHeaderFile(grammar16, sT17, "");
        python3Target13.language = "Python3";
        int int22 = python3Target13.getSerializedATNSegmentLimit();
        org.stringtemplate.v4.STGroup sTGroup23 = python3Target13.loadTemplates();
        python3Target0.templates = sTGroup23;
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "4.5.2.1" + "'", str2, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\"\"" + "'", str6, "\"\"");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "4.5.2.1" + "'", str7, "4.5.2.1");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[]");
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 29 + "'", int11 == 29);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(sTGroup15);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 29 + "'", int22 == 29);
        org.junit.Assert.assertNotNull(sTGroup23);
    }

    @Test
    public void test3633() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3633");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python3Target1.getBadWords();
        java.lang.String str4 = python3Target1.getAltLabelContextStructName("d");
        org.stringtemplate.v4.STGroup sTGroup5 = python3Target1.getTemplates();
        boolean boolean6 = python3Target1.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup7 = python3Target1.getTemplates();
        python3Target1.language = "\"\"";
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = null;
        java.lang.String str13 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator10, "\\\"4.5.2.1\\\"", false);
        org.antlr.v4.tool.Grammar grammar14 = null;
        org.stringtemplate.v4.ST sT15 = null;
        python3Target1.genRecognizerHeaderFile(grammar14, sT15, "\\\"hi!\\\"");
        boolean boolean18 = python3Target1.supportsOverloadedMethods();
        boolean boolean19 = python3Target1.supportsOverloadedMethods();
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "DContext" + "'", str4, "DContext");
        org.junit.Assert.assertNotNull(sTGroup5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(sTGroup7);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "\\\"4.5.2.1\\\"" + "'", str13, "\\\"4.5.2.1\\\"");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    }

    @Test
    public void test3634() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3634");
        org.antlr.v4.codegen.target.Python3Target.PythonStringRenderer pythonStringRenderer0 = new org.antlr.v4.codegen.target.Python3Target.PythonStringRenderer();
        java.lang.Object obj1 = null;
        java.util.Locale locale3 = null;
        java.lang.String str4 = pythonStringRenderer0.toString(obj1, "\"\"\"\"\"\"", locale3);
        org.antlr.v4.codegen.CodeGenerator codeGenerator5 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target6 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator5);
        java.lang.String str8 = python3Target6.getTargetStringLiteralFromString("");
        python3Target6.language = "";
        java.util.Locale locale12 = null;
        java.lang.String str13 = pythonStringRenderer0.toString((java.lang.Object) "", "\"\\\"hi!\\\"\"", locale12);
        org.antlr.v4.codegen.target.Python3Target python3Target14 = new org.antlr.v4.codegen.target.Python3Target();
        python3Target14.language = "";
        org.antlr.v4.codegen.target.Python3Target python3Target17 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean18 = python3Target17.supportsOverloadedMethods();
        java.lang.String str19 = python3Target17.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator20 = null;
        java.lang.String str23 = python3Target17.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator20, "", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator24 = null;
        python3Target17.gen = codeGenerator24;
        java.lang.String[] strArray33 = new java.lang.String[] { "\"\"\"\"", "\\12", "\"\"", "4.5.2.1", "", "\"\"\"\"", "\"\"" };
        java.util.LinkedHashSet<java.lang.String> strSet34 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet34, strArray33);
        python3Target17.badWords = strSet34;
        python3Target14.badWords = strSet34;
        java.lang.String str39 = python3Target14.encodeIntAsCharEscape((int) (byte) 100);
        java.lang.String str40 = python3Target14.getLanguage();
        java.lang.String[] strArray41 = new java.lang.String[] {};
        python3Target14.targetCharValueEscape = strArray41;
        org.antlr.v4.codegen.CodeGenerator codeGenerator43 = null;
        python3Target14.gen = codeGenerator43;
        java.util.Locale locale46 = null;
        java.lang.String str47 = pythonStringRenderer0.toString((java.lang.Object) codeGenerator43, "__\"\"\\\"DContext\\\"\"\"", locale46);
        org.antlr.v4.codegen.target.Python3Target python3Target48 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean49 = python3Target48.supportsOverloadedMethods();
        java.lang.String str50 = python3Target48.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator51 = python3Target48.getCodeGenerator();
        org.stringtemplate.v4.STGroup sTGroup52 = null;
        python3Target48.templates = sTGroup52;
        org.stringtemplate.v4.STGroup sTGroup54 = python3Target48.templates;
        java.lang.String[] strArray55 = python3Target48.targetCharValueEscape;
        java.util.Set<java.lang.String> strSet56 = python3Target48.badWords;
        java.util.Set<java.lang.String> strSet57 = python3Target48.getBadWords();
        python3Target48.addBadWords();
        org.stringtemplate.v4.STGroup sTGroup59 = python3Target48.templates;
        org.antlr.v4.codegen.target.Python3Target python3Target60 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean61 = python3Target60.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup62 = python3Target60.templates;
        java.lang.String[] strArray65 = new java.lang.String[] { "hi!", "hi!" };
        python3Target60.targetCharValueEscape = strArray65;
        java.lang.String str68 = python3Target60.getTargetStringLiteralFromString("\"\"");
        org.stringtemplate.v4.STGroup sTGroup69 = null;
        python3Target60.templates = sTGroup69;
        java.lang.String[] strArray71 = python3Target60.targetCharValueEscape;
        python3Target48.targetCharValueEscape = strArray71;
        java.util.Locale locale74 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str75 = pythonStringRenderer0.toString((java.lang.Object) python3Target48, "\\1", locale74);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: org.antlr.v4.codegen.target.Python3Target cannot be cast to java.lang.String");
        } catch (java.lang.ClassCastException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "\"\"\"\"\"\"" + "'", str4, "\"\"\"\"\"\"");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\"\"" + "'", str8, "\"\"");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "\"\\\"hi!\\\"\"" + "'", str13, "\"\\\"hi!\\\"\"");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "4.5.2.1" + "'", str19, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "\"\"" + "'", str23, "\"\"");
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "d" + "'", str39, "d");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "" + "'", str40, "");
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "__\"\"\\\"DContext\\\"\"\"" + "'", str47, "__\"\"\\\"DContext\\\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "4.5.2.1" + "'", str50, "4.5.2.1");
        org.junit.Assert.assertNull(codeGenerator51);
        org.junit.Assert.assertNull(sTGroup54);
        org.junit.Assert.assertNotNull(strArray55);
        org.junit.Assert.assertNotNull(strSet56);
        org.junit.Assert.assertNotNull(strSet57);
        org.junit.Assert.assertNull(sTGroup59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNull(sTGroup62);
        org.junit.Assert.assertNotNull(strArray65);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "\"\"\"\"" + "'", str68, "\"\"\"\"");
        org.junit.Assert.assertNotNull(strArray71);
    }

    @Test
    public void test3635() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3635");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        org.antlr.v4.tool.Grammar grammar3 = null;
        org.stringtemplate.v4.ST sT4 = null;
        python3Target0.genRecognizerHeaderFile(grammar3, sT4, "");
        org.antlr.v4.codegen.target.Python3Target python3Target7 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray8 = python3Target7.targetCharValueEscape;
        python3Target0.targetCharValueEscape = strArray8;
        python3Target0.addBadWords();
        boolean boolean11 = python3Target0.supportsOverloadedMethods();
        org.antlr.v4.tool.ast.GrammarAST grammarAST12 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str13 = python3Target0.getLoopCounter(grammarAST12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test3636() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3636");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!", "hi!" };
        python3Target0.targetCharValueEscape = strArray5;
        java.lang.String str8 = python3Target0.getTargetStringLiteralFromString("\"\"");
        java.lang.String str9 = python3Target0.getLanguage();
        org.antlr.v4.codegen.target.Python3Target python3Target10 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray11 = python3Target10.targetCharValueEscape;
        org.stringtemplate.v4.STGroup sTGroup12 = python3Target10.templates;
        int int13 = python3Target10.getInlineTestSetWordSize();
        org.antlr.v4.codegen.CodeGenerator codeGenerator14 = python3Target10.gen;
        org.antlr.v4.tool.Grammar grammar15 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target16 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str18 = python3Target16.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.tool.Grammar grammar19 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target20 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean21 = python3Target20.supportsOverloadedMethods();
        java.lang.String str22 = python3Target20.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator23 = null;
        java.lang.String str26 = python3Target20.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator23, "", true);
        java.lang.String str27 = python3Target20.getVersion();
        org.antlr.v4.tool.Grammar grammar28 = null;
        int[] intArray29 = new int[] {};
        java.lang.String[] strArray30 = python3Target20.getTokenTypesAsTargetLabels(grammar28, intArray29);
        java.lang.String[] strArray31 = python3Target16.getTokenTypesAsTargetLabels(grammar19, intArray29);
        java.lang.String[] strArray32 = python3Target10.getTokenTypesAsTargetLabels(grammar15, intArray29);
        python3Target0.targetCharValueEscape = strArray32;
        int int34 = python3Target0.getInlineTestSetWordSize();
        org.antlr.v4.codegen.target.Python3Target python3Target35 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean36 = python3Target35.supportsOverloadedMethods();
        java.lang.String str37 = python3Target35.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator38 = python3Target35.getCodeGenerator();
        org.antlr.v4.tool.Grammar grammar39 = null;
        org.stringtemplate.v4.ST sT40 = null;
        python3Target35.genRecognizerHeaderFile(grammar39, sT40, "_tsetPython3");
        boolean boolean43 = python3Target35.wantsBaseListener();
        org.antlr.v4.codegen.target.Python3Target python3Target44 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean45 = python3Target44.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup46 = python3Target44.templates;
        java.lang.String[] strArray49 = new java.lang.String[] { "hi!", "hi!" };
        python3Target44.targetCharValueEscape = strArray49;
        org.antlr.v4.codegen.CodeGenerator codeGenerator51 = null;
        java.lang.String str54 = python3Target44.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator51, "", false);
        java.util.Set<java.lang.String> strSet55 = python3Target44.badWords;
        java.util.Set<java.lang.String> strSet56 = python3Target44.badWords;
        java.util.Set<java.lang.String> strSet57 = python3Target44.badWords;
        python3Target35.badWords = strSet57;
        org.antlr.v4.codegen.target.Python3Target python3Target59 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean60 = python3Target59.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup61 = python3Target59.templates;
        org.antlr.v4.tool.Grammar grammar62 = null;
        org.stringtemplate.v4.ST sT63 = null;
        python3Target59.genRecognizerHeaderFile(grammar62, sT63, "");
        python3Target59.language = "Python3";
        int int68 = python3Target59.getSerializedATNSegmentLimit();
        org.stringtemplate.v4.STGroup sTGroup69 = python3Target59.loadTemplates();
        python3Target35.templates = sTGroup69;
        python3Target0.templates = sTGroup69;
        org.antlr.v4.tool.Grammar grammar72 = null;
        org.stringtemplate.v4.ST sT73 = null;
        python3Target0.genRecognizerHeaderFile(grammar72, sT73, "\"\"Python3\"\"");
        boolean boolean76 = python3Target0.templatesExist();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\"\"\"\"" + "'", str8, "\"\"\"\"");
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNull(sTGroup12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 64 + "'", int13 == 64);
        org.junit.Assert.assertNull(codeGenerator14);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "\"\"\"\"\"\"" + "'", str18, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "4.5.2.1" + "'", str22, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "\"\"" + "'", str26, "\"\"");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "4.5.2.1" + "'", str27, "4.5.2.1");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[]");
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 64 + "'", int34 == 64);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "4.5.2.1" + "'", str37, "4.5.2.1");
        org.junit.Assert.assertNull(codeGenerator38);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNull(sTGroup46);
        org.junit.Assert.assertNotNull(strArray49);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "" + "'", str54, "");
        org.junit.Assert.assertNotNull(strSet55);
        org.junit.Assert.assertNotNull(strSet56);
        org.junit.Assert.assertNotNull(strSet57);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNull(sTGroup61);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 29 + "'", int68 == 29);
        org.junit.Assert.assertNotNull(sTGroup69);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
    }

    @Test
    public void test3637() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3637");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        python3Target0.language = "";
        org.antlr.v4.codegen.target.Python3Target python3Target3 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean4 = python3Target3.supportsOverloadedMethods();
        java.lang.String str5 = python3Target3.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = null;
        java.lang.String str9 = python3Target3.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator6, "", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = null;
        python3Target3.gen = codeGenerator10;
        java.lang.String[] strArray19 = new java.lang.String[] { "\"\"\"\"", "\\12", "\"\"", "4.5.2.1", "", "\"\"\"\"", "\"\"" };
        java.util.LinkedHashSet<java.lang.String> strSet20 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet20, strArray19);
        python3Target3.badWords = strSet20;
        python3Target0.badWords = strSet20;
        java.lang.String str25 = python3Target0.encodeIntAsCharEscape((int) (byte) 100);
        java.lang.String str26 = python3Target0.getLanguage();
        java.lang.String[] strArray27 = new java.lang.String[] {};
        python3Target0.targetCharValueEscape = strArray27;
        boolean boolean29 = python3Target0.wantsBaseListener();
        int int30 = python3Target0.getInlineTestSetWordSize();
        boolean boolean31 = python3Target0.templatesExist();
        org.antlr.v4.codegen.target.Python3Target python3Target32 = new org.antlr.v4.codegen.target.Python3Target();
        python3Target32.language = "4.5.2.1";
        org.antlr.v4.codegen.CodeGenerator codeGenerator35 = python3Target32.getCodeGenerator();
        org.antlr.v4.codegen.CodeGenerator codeGenerator36 = python3Target32.gen;
        java.lang.String str37 = python3Target32.getLanguage();
        python3Target32.addBadWords();
        boolean boolean39 = python3Target32.templatesExist();
        java.lang.String str41 = python3Target32.getTargetStringLiteralFromString("");
        java.util.Set<java.lang.String> strSet42 = python3Target32.badWords;
        python3Target0.badWords = strSet42;
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "4.5.2.1" + "'", str5, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\"\"" + "'", str9, "\"\"");
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "d" + "'", str25, "d");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 64 + "'", int30 == 64);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNull(codeGenerator35);
        org.junit.Assert.assertNull(codeGenerator36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "4.5.2.1" + "'", str37, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "\"\"" + "'", str41, "\"\"");
        org.junit.Assert.assertNotNull(strSet42);
    }

    @Test
    public void test3638() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3638");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        python3Target0.language = "";
        org.antlr.v4.codegen.target.Python3Target python3Target3 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean4 = python3Target3.supportsOverloadedMethods();
        java.lang.String str5 = python3Target3.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = null;
        java.lang.String str9 = python3Target3.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator6, "", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = null;
        python3Target3.gen = codeGenerator10;
        java.lang.String[] strArray19 = new java.lang.String[] { "\"\"\"\"", "\\12", "\"\"", "4.5.2.1", "", "\"\"\"\"", "\"\"" };
        java.util.LinkedHashSet<java.lang.String> strSet20 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet20, strArray19);
        python3Target3.badWords = strSet20;
        python3Target0.badWords = strSet20;
        java.lang.String str25 = python3Target0.encodeIntAsCharEscape((int) (byte) 100);
        boolean boolean26 = python3Target0.templatesExist();
        java.util.Set<java.lang.String> strSet27 = python3Target0.getBadWords();
        java.lang.String[] strArray28 = python3Target0.targetCharValueEscape;
        java.lang.String str30 = python3Target0.encodeIntAsCharEscape(64);
        boolean boolean31 = python3Target0.templatesExist();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "4.5.2.1" + "'", str5, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\"\"" + "'", str9, "\"\"");
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "d" + "'", str25, "d");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(strSet27);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "@" + "'", str30, "@");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
    }

    @Test
    public void test3639() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3639");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        int int2 = python3Target0.getInlineTestSetWordSize();
        boolean boolean3 = python3Target0.wantsBaseVisitor();
        java.util.Set<java.lang.String> strSet4 = python3Target0.getBadWords();
        org.stringtemplate.v4.STGroup sTGroup5 = python3Target0.templates;
        org.antlr.v4.tool.Grammar grammar6 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target7 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean8 = python3Target7.supportsOverloadedMethods();
        java.util.Set<java.lang.String> strSet9 = python3Target7.badWords;
        boolean boolean10 = python3Target7.templatesExist();
        java.lang.String str11 = python3Target7.getLanguage();
        org.antlr.v4.tool.Grammar grammar12 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target13 = new org.antlr.v4.codegen.target.Python3Target();
        python3Target13.language = "";
        org.antlr.v4.codegen.target.Python3Target python3Target16 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean17 = python3Target16.supportsOverloadedMethods();
        java.lang.String str18 = python3Target16.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator19 = null;
        java.lang.String str22 = python3Target16.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator19, "", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator23 = null;
        python3Target16.gen = codeGenerator23;
        java.lang.String[] strArray32 = new java.lang.String[] { "\"\"\"\"", "\\12", "\"\"", "4.5.2.1", "", "\"\"\"\"", "\"\"" };
        java.util.LinkedHashSet<java.lang.String> strSet33 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet33, strArray32);
        python3Target16.badWords = strSet33;
        python3Target13.badWords = strSet33;
        java.lang.String str38 = python3Target13.encodeIntAsCharEscape((int) (byte) 100);
        java.lang.String str39 = python3Target13.getLanguage();
        java.lang.String str41 = python3Target13.getTargetStringLiteralFromString("\"\\0\"");
        org.antlr.v4.codegen.target.Python3Target python3Target42 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean43 = python3Target42.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup44 = python3Target42.templates;
        org.antlr.v4.tool.Grammar grammar45 = null;
        org.stringtemplate.v4.ST sT46 = null;
        python3Target42.genRecognizerHeaderFile(grammar45, sT46, "");
        python3Target42.language = "Python3";
        java.util.Set<java.lang.String> strSet51 = null;
        python3Target42.badWords = strSet51;
        boolean boolean53 = python3Target42.wantsBaseVisitor();
        java.lang.String str55 = python3Target42.getImplicitSetLabel("Python3");
        int int56 = python3Target42.getInlineTestSetWordSize();
        java.lang.String str57 = python3Target42.language;
        java.lang.String str58 = python3Target42.getLanguage();
        int int59 = python3Target42.getInlineTestSetWordSize();
        java.lang.String str61 = python3Target42.getImplicitRuleLabel("\"\\\"\\\"4.5.2.1\\\"\\\"\"");
        java.lang.String str63 = python3Target42.getImplicitSetLabel("_tset_12");
        org.stringtemplate.v4.STGroup sTGroup64 = python3Target42.templates;
        python3Target13.templates = sTGroup64;
        org.antlr.v4.tool.Grammar grammar66 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target67 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean68 = python3Target67.supportsOverloadedMethods();
        java.lang.String str69 = python3Target67.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator70 = null;
        java.lang.String str73 = python3Target67.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator70, "", true);
        java.lang.String str74 = python3Target67.getVersion();
        org.antlr.v4.tool.Grammar grammar75 = null;
        int[] intArray76 = new int[] {};
        java.lang.String[] strArray77 = python3Target67.getTokenTypesAsTargetLabels(grammar75, intArray76);
        java.lang.String[] strArray78 = python3Target13.getTokenTypesAsTargetLabels(grammar66, intArray76);
        java.lang.String[] strArray79 = python3Target7.getTokenTypesAsTargetLabels(grammar12, intArray76);
        java.lang.String[] strArray80 = python3Target0.getTokenTypesAsTargetLabels(grammar6, intArray76);
        org.antlr.v4.tool.Grammar grammar81 = null;
        org.stringtemplate.v4.ST sT82 = null;
        // The following exception was thrown during execution in test generation
        try {
            python3Target0.genListenerFile(grammar81, sT82);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertNull(sTGroup5);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(strSet9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "4.5.2.1" + "'", str18, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "\"\"" + "'", str22, "\"\"");
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "d" + "'", str38, "d");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "" + "'", str39, "");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "\"\"\\0\"\"" + "'", str41, "\"\"\\0\"\"");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNull(sTGroup44);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "_tsetPython3" + "'", str55, "_tsetPython3");
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 64 + "'", int56 == 64);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "Python3" + "'", str57, "Python3");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "Python3" + "'", str58, "Python3");
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 64 + "'", int59 == 64);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "_\"\\\"\\\"4.5.2.1\\\"\\\"\"" + "'", str61, "_\"\\\"\\\"4.5.2.1\\\"\\\"\"");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "_tset_tset_12" + "'", str63, "_tset_tset_12");
        org.junit.Assert.assertNotNull(sTGroup64);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "4.5.2.1" + "'", str69, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "\"\"" + "'", str73, "\"\"");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "4.5.2.1" + "'", str74, "4.5.2.1");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[]");
        org.junit.Assert.assertNotNull(strArray77);
        org.junit.Assert.assertNotNull(strArray78);
        org.junit.Assert.assertNotNull(strArray79);
        org.junit.Assert.assertNotNull(strArray80);
    }

    @Test
    public void test3640() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3640");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        java.lang.String str2 = python3Target0.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = null;
        java.lang.String str6 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator3, "", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = null;
        python3Target0.gen = codeGenerator7;
        java.lang.String[] strArray16 = new java.lang.String[] { "\"\"\"\"", "\\12", "\"\"", "4.5.2.1", "", "\"\"\"\"", "\"\"" };
        java.util.LinkedHashSet<java.lang.String> strSet17 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet17, strArray16);
        python3Target0.badWords = strSet17;
        org.antlr.v4.codegen.CodeGenerator codeGenerator20 = python3Target0.gen;
        // The following exception was thrown during execution in test generation
        try {
            org.stringtemplate.v4.STGroup sTGroup21 = python3Target0.loadTemplates();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "4.5.2.1" + "'", str2, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\"\"" + "'", str6, "\"\"");
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNull(codeGenerator20);
    }

    @Test
    public void test3641() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3641");
        java.lang.String str1 = org.stringtemplate.v4.StringRenderer.escapeHTML("\"\\\"0\\\"\"");
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "\"\\\"0\\\"\"" + "'", str1, "\"\\\"0\\\"\"");
    }

    @Test
    public void test3642() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3642");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray1 = python3Target0.targetCharValueEscape;
        java.lang.String str2 = python3Target0.language;
        int int3 = python3Target0.getSerializedATNSegmentLimit();
        java.lang.String str5 = python3Target0.encodeIntAsCharEscape(1);
        boolean boolean6 = python3Target0.wantsBaseVisitor();
        org.antlr.v4.tool.Grammar grammar7 = null;
        org.stringtemplate.v4.ST sT8 = null;
        python3Target0.genRecognizerHeaderFile(grammar7, sT8, "\"\"tset\\\"\\\"\\\"hi!\\\"\\\"\"\"");
        java.lang.String str11 = python3Target0.language;
        java.util.Set<java.lang.String> strSet12 = python3Target0.getBadWords();
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 29 + "'", int3 == 29);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "\\1" + "'", str5, "\\1");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(strSet12);
    }

    @Test
    public void test3643() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3643");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray1 = python3Target0.targetCharValueEscape;
        java.lang.String str2 = python3Target0.language;
        int int3 = python3Target0.getSerializedATNSegmentLimit();
        org.antlr.v4.codegen.CodeGenerator codeGenerator4 = null;
        python3Target0.gen = codeGenerator4;
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target7 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator6);
        java.util.Set<java.lang.String> strSet8 = python3Target7.getBadWords();
        java.lang.String str10 = python3Target7.getAltLabelContextStructName("d");
        org.stringtemplate.v4.STGroup sTGroup11 = python3Target7.getTemplates();
        python3Target0.templates = sTGroup11;
        org.antlr.v4.codegen.CodeGenerator codeGenerator13 = python3Target0.gen;
        int int14 = python3Target0.getInlineTestSetWordSize();
        boolean boolean15 = python3Target0.templatesExist();
        boolean boolean16 = python3Target0.wantsBaseListener();
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 29 + "'", int3 == 29);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "DContext" + "'", str10, "DContext");
        org.junit.Assert.assertNotNull(sTGroup11);
        org.junit.Assert.assertNull(codeGenerator13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 64 + "'", int14 == 64);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    }

    @Test
    public void test3644() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3644");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        java.util.Set<java.lang.String> strSet2 = python3Target0.badWords;
        boolean boolean3 = python3Target0.templatesExist();
        java.lang.String str4 = python3Target0.getLanguage();
        org.antlr.v4.tool.Grammar grammar5 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target6 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str8 = python3Target6.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator9 = null;
        python3Target6.gen = codeGenerator9;
        org.antlr.v4.tool.Grammar grammar11 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target12 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str14 = python3Target12.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.tool.Grammar grammar15 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target16 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean17 = python3Target16.supportsOverloadedMethods();
        java.lang.String str18 = python3Target16.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator19 = null;
        java.lang.String str22 = python3Target16.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator19, "", true);
        java.lang.String str23 = python3Target16.getVersion();
        org.antlr.v4.tool.Grammar grammar24 = null;
        int[] intArray25 = new int[] {};
        java.lang.String[] strArray26 = python3Target16.getTokenTypesAsTargetLabels(grammar24, intArray25);
        java.lang.String[] strArray27 = python3Target12.getTokenTypesAsTargetLabels(grammar15, intArray25);
        java.lang.String[] strArray28 = python3Target6.getTokenTypesAsTargetLabels(grammar11, intArray25);
        java.lang.String[] strArray29 = python3Target0.getTokenTypesAsTargetLabels(grammar5, intArray25);
        python3Target0.language = "\"\"";
        org.antlr.v4.codegen.CodeGenerator codeGenerator32 = null;
        python3Target0.gen = codeGenerator32;
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\"\"\"\"\"\"" + "'", str8, "\"\"\"\"\"\"");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "\"\"\"\"\"\"" + "'", str14, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "4.5.2.1" + "'", str18, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "\"\"" + "'", str22, "\"\"");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "4.5.2.1" + "'", str23, "4.5.2.1");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[]");
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertNotNull(strArray29);
    }

    @Test
    public void test3645() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3645");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        org.antlr.v4.tool.Grammar grammar3 = null;
        org.stringtemplate.v4.ST sT4 = null;
        python3Target0.genRecognizerHeaderFile(grammar3, sT4, "");
        python3Target0.language = "Python3";
        java.util.Set<java.lang.String> strSet9 = null;
        python3Target0.badWords = strSet9;
        org.antlr.v4.codegen.CodeGenerator codeGenerator11 = null;
        java.lang.String str14 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator11, "\"Hi!Context\"", false);
        java.lang.String str16 = python3Target0.getListLabel("Python3");
        org.antlr.v4.codegen.CodeGenerator codeGenerator17 = python3Target0.getCodeGenerator();
        java.lang.String str19 = python3Target0.getListLabel("4.5.2.1");
        java.lang.String str21 = python3Target0.getImplicitSetLabel("\".5.2.\"");
        python3Target0.language = "\"\\\"hi!\\\"Context\"";
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Hi!Context" + "'", str14, "Hi!Context");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Python3" + "'", str16, "Python3");
        org.junit.Assert.assertNull(codeGenerator17);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "4.5.2.1" + "'", str19, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "_tset\".5.2.\"" + "'", str21, "_tset\".5.2.\"");
    }

    @Test
    public void test3646() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3646");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        python3Target0.language = "";
        org.antlr.v4.codegen.target.Python3Target python3Target3 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean4 = python3Target3.supportsOverloadedMethods();
        java.lang.String str5 = python3Target3.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = null;
        java.lang.String str9 = python3Target3.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator6, "", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = null;
        python3Target3.gen = codeGenerator10;
        java.lang.String[] strArray19 = new java.lang.String[] { "\"\"\"\"", "\\12", "\"\"", "4.5.2.1", "", "\"\"\"\"", "\"\"" };
        java.util.LinkedHashSet<java.lang.String> strSet20 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet20, strArray19);
        python3Target3.badWords = strSet20;
        python3Target0.badWords = strSet20;
        java.lang.String str25 = python3Target0.encodeIntAsCharEscape((int) (byte) 100);
        java.lang.String str26 = python3Target0.getLanguage();
        java.lang.String str28 = python3Target0.getTargetStringLiteralFromString("\"\\0\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator29 = null;
        python3Target0.gen = codeGenerator29;
        java.lang.String str31 = python3Target0.getVersion();
        java.lang.String str32 = python3Target0.language;
        java.lang.String str34 = python3Target0.getTargetStringLiteralFromString("_tset\"\"\\0\"\"");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "4.5.2.1" + "'", str5, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\"\"" + "'", str9, "\"\"");
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "d" + "'", str25, "d");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "\"\"\\0\"\"" + "'", str28, "\"\"\\0\"\"");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "4.5.2.1" + "'", str31, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "" + "'", str32, "");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "\"_tset\"\"\\0\"\"\"" + "'", str34, "\"_tset\"\"\\0\"\"\"");
    }

    @Test
    public void test3647() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3647");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str2 = python3Target0.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = null;
        python3Target0.gen = codeGenerator3;
        java.lang.String str5 = python3Target0.getVersion();
        org.antlr.v4.codegen.target.Python3Target python3Target6 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean7 = python3Target6.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup8 = python3Target6.templates;
        org.antlr.v4.tool.Grammar grammar9 = null;
        org.stringtemplate.v4.ST sT10 = null;
        python3Target6.genRecognizerHeaderFile(grammar9, sT10, "");
        python3Target6.language = "Python3";
        int int15 = python3Target6.getSerializedATNSegmentLimit();
        org.stringtemplate.v4.STGroup sTGroup16 = python3Target6.loadTemplates();
        python3Target0.templates = sTGroup16;
        java.util.Set<java.lang.String> strSet18 = python3Target0.getBadWords();
        boolean boolean19 = python3Target0.supportsOverloadedMethods();
        java.lang.String str21 = python3Target0.getImplicitRuleLabel("\"__\"\"\\\"DContext\\\"\"\"Context\"");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "\"\"\"\"\"\"" + "'", str2, "\"\"\"\"\"\"");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "4.5.2.1" + "'", str5, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(sTGroup8);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 29 + "'", int15 == 29);
        org.junit.Assert.assertNotNull(sTGroup16);
        org.junit.Assert.assertNotNull(strSet18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "_\"__\"\"\\\"DContext\\\"\"\"Context\"" + "'", str21, "_\"__\"\"\\\"DContext\\\"\"\"Context\"");
    }

    @Test
    public void test3648() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3648");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        python3Target0.language = "";
        org.antlr.v4.codegen.target.Python3Target python3Target3 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean4 = python3Target3.supportsOverloadedMethods();
        java.lang.String str5 = python3Target3.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = null;
        java.lang.String str9 = python3Target3.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator6, "", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = null;
        python3Target3.gen = codeGenerator10;
        java.lang.String[] strArray19 = new java.lang.String[] { "\"\"\"\"", "\\12", "\"\"", "4.5.2.1", "", "\"\"\"\"", "\"\"" };
        java.util.LinkedHashSet<java.lang.String> strSet20 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet20, strArray19);
        python3Target3.badWords = strSet20;
        python3Target0.badWords = strSet20;
        java.lang.String str25 = python3Target0.encodeIntAsCharEscape((int) (byte) 100);
        java.lang.String str26 = python3Target0.getLanguage();
        boolean boolean27 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup28 = python3Target0.templates;
        java.lang.String str30 = python3Target0.encodeIntAsCharEscape(0);
        org.antlr.v4.codegen.CodeGenerator codeGenerator31 = python3Target0.getCodeGenerator();
        org.antlr.v4.codegen.CodeGenerator codeGenerator32 = null;
        python3Target0.gen = codeGenerator32;
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "4.5.2.1" + "'", str5, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\"\"" + "'", str9, "\"\"");
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "d" + "'", str25, "d");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNull(sTGroup28);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "\\0" + "'", str30, "\\0");
        org.junit.Assert.assertNull(codeGenerator31);
    }

    @Test
    public void test3649() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3649");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!", "hi!" };
        python3Target0.targetCharValueEscape = strArray5;
        java.lang.String str8 = python3Target0.getTargetStringLiteralFromString("\"\"");
        java.lang.String str10 = python3Target0.getTargetStringLiteralFromString("\"\"");
        java.lang.String str11 = python3Target0.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup12 = python3Target0.templates;
        org.antlr.v4.codegen.CodeGenerator codeGenerator13 = python3Target0.gen;
        java.lang.String str14 = python3Target0.getVersion();
        org.antlr.v4.codegen.target.Python3Target python3Target15 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean16 = python3Target15.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup17 = python3Target15.templates;
        org.antlr.v4.tool.Grammar grammar18 = null;
        org.stringtemplate.v4.ST sT19 = null;
        python3Target15.genRecognizerHeaderFile(grammar18, sT19, "");
        python3Target15.language = "Python3";
        java.util.Set<java.lang.String> strSet24 = null;
        python3Target15.badWords = strSet24;
        boolean boolean26 = python3Target15.wantsBaseVisitor();
        java.lang.String str28 = python3Target15.getImplicitSetLabel("Python3");
        org.antlr.v4.codegen.target.Python3Target python3Target29 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean30 = python3Target29.supportsOverloadedMethods();
        java.lang.String str31 = python3Target29.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator32 = python3Target29.getCodeGenerator();
        org.stringtemplate.v4.STGroup sTGroup33 = null;
        python3Target29.templates = sTGroup33;
        org.stringtemplate.v4.STGroup sTGroup35 = python3Target29.templates;
        java.lang.String[] strArray36 = python3Target29.targetCharValueEscape;
        java.lang.String str39 = python3Target29.getTargetStringLiteralFromString("\"12\"", false);
        org.antlr.v4.codegen.target.Python3Target python3Target40 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean41 = python3Target40.supportsOverloadedMethods();
        java.lang.String str42 = python3Target40.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator43 = python3Target40.getCodeGenerator();
        org.stringtemplate.v4.STGroup sTGroup44 = null;
        python3Target40.templates = sTGroup44;
        org.stringtemplate.v4.STGroup sTGroup46 = python3Target40.templates;
        java.lang.String[] strArray47 = python3Target40.targetCharValueEscape;
        java.util.Set<java.lang.String> strSet48 = python3Target40.badWords;
        java.util.Set<java.lang.String> strSet49 = python3Target40.getBadWords();
        python3Target29.badWords = strSet49;
        python3Target15.badWords = strSet49;
        python3Target0.badWords = strSet49;
        python3Target0.language = "\"\\1\"";
        org.stringtemplate.v4.STGroup sTGroup55 = python3Target0.templates;
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\"\"\"\"" + "'", str8, "\"\"\"\"");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\"\"\"\"" + "'", str10, "\"\"\"\"");
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(sTGroup12);
        org.junit.Assert.assertNull(codeGenerator13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "4.5.2.1" + "'", str14, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(sTGroup17);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "_tsetPython3" + "'", str28, "_tsetPython3");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "4.5.2.1" + "'", str31, "4.5.2.1");
        org.junit.Assert.assertNull(codeGenerator32);
        org.junit.Assert.assertNull(sTGroup35);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "\"12\"" + "'", str39, "\"12\"");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "4.5.2.1" + "'", str42, "4.5.2.1");
        org.junit.Assert.assertNull(codeGenerator43);
        org.junit.Assert.assertNull(sTGroup46);
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertNotNull(strSet48);
        org.junit.Assert.assertNotNull(strSet49);
        org.junit.Assert.assertNull(sTGroup55);
    }

    @Test
    public void test3650() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3650");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.lang.String str3 = python3Target1.getTargetStringLiteralFromString("");
        int int4 = python3Target1.getSerializedATNSegmentLimit();
        boolean boolean5 = python3Target1.wantsBaseVisitor();
        org.stringtemplate.v4.STGroup sTGroup6 = python3Target1.loadTemplates();
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = python3Target1.gen;
        org.antlr.v4.codegen.target.Python3Target python3Target8 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean9 = python3Target8.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup10 = python3Target8.templates;
        org.antlr.v4.tool.Grammar grammar11 = null;
        org.stringtemplate.v4.ST sT12 = null;
        python3Target8.genRecognizerHeaderFile(grammar11, sT12, "");
        python3Target8.language = "Python3";
        int int17 = python3Target8.getSerializedATNSegmentLimit();
        org.stringtemplate.v4.STGroup sTGroup18 = python3Target8.loadTemplates();
        python3Target1.templates = sTGroup18;
        org.antlr.v4.tool.Grammar grammar20 = null;
        org.stringtemplate.v4.ST sT21 = null;
        python3Target1.genRecognizerHeaderFile(grammar20, sT21, "\"_tset12\"");
        org.stringtemplate.v4.STGroup sTGroup24 = python3Target1.getTemplates();
        boolean boolean25 = python3Target1.templatesExist();
        org.antlr.v4.codegen.CodeGenerator codeGenerator26 = python3Target1.gen;
        org.antlr.v4.tool.ast.GrammarAST grammarAST27 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str28 = python3Target1.getLoopCounter(grammarAST27);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "\"\"" + "'", str3, "\"\"");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 29 + "'", int4 == 29);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(sTGroup6);
        org.junit.Assert.assertNull(codeGenerator7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(sTGroup10);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 29 + "'", int17 == 29);
        org.junit.Assert.assertNotNull(sTGroup18);
        org.junit.Assert.assertNotNull(sTGroup24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(codeGenerator26);
    }

    @Test
    public void test3651() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3651");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python3Target1.getBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = null;
        python3Target1.gen = codeGenerator3;
        org.antlr.v4.codegen.CodeGenerator codeGenerator5 = null;
        java.lang.String str8 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator5, "\"12\"", true);
        java.lang.String str9 = python3Target1.language;
        java.lang.String str11 = python3Target1.getImplicitRuleLabel("\"\"\"DContext\"\"Context\"");
        java.util.Set<java.lang.String> strSet12 = python3Target1.badWords;
        boolean boolean13 = python3Target1.supportsOverloadedMethods();
        org.antlr.v4.tool.ast.GrammarAST grammarAST14 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean15 = python3Target1.visibleGrammarSymbolCausesIssueInGeneratedCode(grammarAST14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\"12\"" + "'", str8, "\"12\"");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Python3" + "'", str9, "Python3");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "_\"\"\"DContext\"\"Context\"" + "'", str11, "_\"\"\"DContext\"\"Context\"");
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test3652() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3652");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray1 = python3Target0.targetCharValueEscape;
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = null;
        java.lang.String str6 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator3, "\"\\12\"", false);
        int int7 = python3Target0.getInlineTestSetWordSize();
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = python3Target0.getCodeGenerator();
        boolean boolean9 = python3Target0.wantsBaseListener();
        org.antlr.v4.tool.Grammar grammar10 = null;
        org.stringtemplate.v4.ST sT11 = null;
        python3Target0.genRecognizerHeaderFile(grammar10, sT11, "\"\"\"\"\"\"");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str15 = python3Target0.getImplicitRuleLabel("_\"\\\"tset\\\\\\\"0\\\"\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "12" + "'", str6, "12");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 64 + "'", int7 == 64);
        org.junit.Assert.assertNull(codeGenerator8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test3653() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3653");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.lang.String str2 = python3Target1.getVersion();
        int int3 = python3Target1.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet4 = python3Target1.badWords;
        java.util.Set<java.lang.String> strSet5 = python3Target1.getBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = python3Target1.getCodeGenerator();
        boolean boolean7 = python3Target1.wantsBaseListener();
        java.lang.String str9 = python3Target1.getTargetStringLiteralFromString("_tset\"\\\"\\\"hi!\\\"\\\"\"");
        int int10 = python3Target1.getSerializedATNSegmentLimit();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "4.5.2.1" + "'", str2, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 64 + "'", int3 == 64);
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNull(codeGenerator6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\"_tset\\\"\\\\\\\"\\\\\\\"hi!\\\\\\\"\\\\\\\"\\\"\"" + "'", str9, "\"_tset\\\"\\\\\\\"\\\\\\\"hi!\\\\\\\"\\\\\\\"\\\"\"");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 29 + "'", int10 == 29);
    }

    @Test
    public void test3654() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3654");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        org.antlr.v4.tool.Grammar grammar3 = null;
        org.stringtemplate.v4.ST sT4 = null;
        python3Target0.genRecognizerHeaderFile(grammar3, sT4, "");
        python3Target0.language = "Python3";
        java.util.Set<java.lang.String> strSet9 = null;
        python3Target0.badWords = strSet9;
        org.antlr.v4.codegen.CodeGenerator codeGenerator11 = null;
        java.lang.String str14 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator11, "\"Hi!Context\"", false);
        java.lang.String str16 = python3Target0.getListLabel("Python3");
        java.lang.String str18 = python3Target0.getImplicitSetLabel("_12");
        int int19 = python3Target0.getSerializedATNSegmentLimit();
        org.antlr.v4.tool.Rule rule20 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str21 = python3Target0.getRuleFunctionContextStructName(rule20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Hi!Context" + "'", str14, "Hi!Context");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Python3" + "'", str16, "Python3");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "_tset_12" + "'", str18, "_tset_12");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 29 + "'", int19 == 29);
    }

    @Test
    public void test3655() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3655");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        java.lang.String str2 = python3Target0.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = null;
        java.lang.String str6 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator3, "", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = null;
        python3Target0.gen = codeGenerator7;
        java.lang.String[] strArray16 = new java.lang.String[] { "\"\"\"\"", "\\12", "\"\"", "4.5.2.1", "", "\"\"\"\"", "\"\"" };
        java.util.LinkedHashSet<java.lang.String> strSet17 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet17, strArray16);
        python3Target0.badWords = strSet17;
        org.antlr.v4.codegen.CodeGenerator codeGenerator20 = python3Target0.gen;
        java.lang.String str23 = python3Target0.getTargetStringLiteralFromString("\\12", true);
        java.util.Set<java.lang.String> strSet24 = python3Target0.badWords;
        java.lang.String str25 = python3Target0.language;
        java.util.Set<java.lang.String> strSet26 = python3Target0.getBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator27 = null;
        java.lang.String str30 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator27, "\"\"\"4.5.2.1\"\"\"", false);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "4.5.2.1" + "'", str2, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\"\"" + "'", str6, "\"\"");
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNull(codeGenerator20);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "\"\\12\"" + "'", str23, "\"\\12\"");
        org.junit.Assert.assertNotNull(strSet24);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNotNull(strSet26);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "\\\"\\\"4.5.2.1\\\"\\\"" + "'", str30, "\\\"\\\"4.5.2.1\\\"\\\"");
    }

    @Test
    public void test3656() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3656");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray1 = python3Target0.targetCharValueEscape;
        java.lang.String str2 = python3Target0.getVersion();
        org.antlr.v4.codegen.target.Python3Target python3Target3 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str5 = python3Target3.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = null;
        python3Target3.gen = codeGenerator6;
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target9 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator8);
        java.util.Set<java.lang.String> strSet10 = python3Target9.getBadWords();
        python3Target3.badWords = strSet10;
        python3Target0.badWords = strSet10;
        boolean boolean13 = python3Target0.templatesExist();
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "4.5.2.1" + "'", str2, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "\"\"\"\"\"\"" + "'", str5, "\"\"\"\"\"\"");
        org.junit.Assert.assertNotNull(strSet10);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test3657() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3657");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!", "hi!" };
        python3Target0.targetCharValueEscape = strArray5;
        java.lang.String str8 = python3Target0.getTargetStringLiteralFromString("\"\"");
        java.lang.String str9 = python3Target0.getLanguage();
        org.antlr.v4.codegen.target.Python3Target python3Target10 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean11 = python3Target10.supportsOverloadedMethods();
        java.lang.String str12 = python3Target10.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator13 = null;
        java.lang.String str16 = python3Target10.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator13, "", true);
        java.lang.String str17 = python3Target10.getVersion();
        org.antlr.v4.codegen.target.Python3Target python3Target18 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean19 = python3Target18.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup20 = python3Target18.templates;
        java.lang.String[] strArray23 = new java.lang.String[] { "hi!", "hi!" };
        python3Target18.targetCharValueEscape = strArray23;
        java.lang.String[] strArray26 = new java.lang.String[] { "hi!" };
        org.antlr.v4.codegen.target.Python3Target.python3Keywords = strArray26;
        python3Target18.targetCharValueEscape = strArray26;
        org.antlr.v4.codegen.target.Python3Target.python3Keywords = strArray26;
        python3Target10.targetCharValueEscape = strArray26;
        python3Target0.targetCharValueEscape = strArray26;
        org.antlr.v4.tool.Grammar grammar32 = null;
        org.stringtemplate.v4.ST sT33 = null;
        python3Target0.genRecognizerHeaderFile(grammar32, sT33, "\"_tsetHi!Context\"");
        boolean boolean36 = python3Target0.wantsBaseVisitor();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\"\"\"\"" + "'", str8, "\"\"\"\"");
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "4.5.2.1" + "'", str12, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "\"\"" + "'", str16, "\"\"");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "4.5.2.1" + "'", str17, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(sTGroup20);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
    }

    @Test
    public void test3658() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3658");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python3Target1.getBadWords();
        java.lang.String str4 = python3Target1.getAltLabelContextStructName("d");
        org.stringtemplate.v4.STGroup sTGroup5 = python3Target1.getTemplates();
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = null;
        java.lang.String str9 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator6, "", true);
        java.lang.String str11 = python3Target1.getImplicitSetLabel("\"\\0\"");
        java.lang.String str13 = python3Target1.getListLabel("\"Python3\"");
        java.lang.String str15 = python3Target1.getListLabel("\"\\\"hi!\\\"\"");
        python3Target1.addBadWords();
        java.lang.Class<?> wildcardClass17 = python3Target1.getClass();
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "DContext" + "'", str4, "DContext");
        org.junit.Assert.assertNotNull(sTGroup5);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\"\"" + "'", str9, "\"\"");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "_tset\"\\0\"" + "'", str11, "_tset\"\\0\"");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "\"Python3\"" + "'", str13, "\"Python3\"");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "\"\\\"hi!\\\"\"" + "'", str15, "\"\\\"hi!\\\"\"");
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test3659() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3659");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!", "hi!" };
        python3Target0.targetCharValueEscape = strArray5;
        java.lang.String[] strArray8 = new java.lang.String[] { "hi!" };
        org.antlr.v4.codegen.target.Python3Target.python3Keywords = strArray8;
        python3Target0.targetCharValueEscape = strArray8;
        java.lang.String str12 = python3Target0.getTargetStringLiteralFromString("\"\"\"\"\"\"");
        org.antlr.v4.tool.Grammar grammar13 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target14 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean15 = python3Target14.supportsOverloadedMethods();
        java.lang.String str16 = python3Target14.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator17 = null;
        java.lang.String str20 = python3Target14.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator17, "", true);
        java.lang.String str21 = python3Target14.getVersion();
        org.antlr.v4.tool.Grammar grammar22 = null;
        int[] intArray23 = new int[] {};
        java.lang.String[] strArray24 = python3Target14.getTokenTypesAsTargetLabels(grammar22, intArray23);
        java.lang.String[] strArray25 = python3Target0.getTokenTypesAsTargetLabels(grammar13, intArray23);
        java.lang.String str27 = python3Target0.encodeIntAsCharEscape(29);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "\"\"\"\"\"\"\"\"" + "'", str12, "\"\"\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "4.5.2.1" + "'", str16, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "\"\"" + "'", str20, "\"\"");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "4.5.2.1" + "'", str21, "4.5.2.1");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[]");
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "\\35" + "'", str27, "\\35");
    }

    @Test
    public void test3660() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3660");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        java.util.Set<java.lang.String> strSet2 = python3Target0.badWords;
        boolean boolean3 = python3Target0.templatesExist();
        org.antlr.v4.codegen.CodeGenerator codeGenerator4 = null;
        python3Target0.gen = codeGenerator4;
        int int6 = python3Target0.getInlineTestSetWordSize();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 64 + "'", int6 == 64);
    }

    @Test
    public void test3661() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3661");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        java.lang.String str2 = python3Target0.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = python3Target0.getCodeGenerator();
        org.stringtemplate.v4.STGroup sTGroup4 = null;
        python3Target0.templates = sTGroup4;
        org.stringtemplate.v4.STGroup sTGroup6 = python3Target0.templates;
        java.lang.String[] strArray7 = python3Target0.targetCharValueEscape;
        java.util.Set<java.lang.String> strSet8 = python3Target0.badWords;
        java.util.Set<java.lang.String> strSet9 = python3Target0.getBadWords();
        python3Target0.addBadWords();
        org.stringtemplate.v4.STGroup sTGroup11 = python3Target0.templates;
        org.antlr.v4.codegen.target.Python3Target python3Target12 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean13 = python3Target12.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup14 = python3Target12.templates;
        java.lang.String[] strArray17 = new java.lang.String[] { "hi!", "hi!" };
        python3Target12.targetCharValueEscape = strArray17;
        java.lang.String str20 = python3Target12.getTargetStringLiteralFromString("\"\"");
        org.stringtemplate.v4.STGroup sTGroup21 = null;
        python3Target12.templates = sTGroup21;
        java.lang.String[] strArray23 = python3Target12.targetCharValueEscape;
        python3Target0.targetCharValueEscape = strArray23;
        java.lang.String str25 = python3Target0.getLanguage();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "4.5.2.1" + "'", str2, "4.5.2.1");
        org.junit.Assert.assertNull(codeGenerator3);
        org.junit.Assert.assertNull(sTGroup6);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertNotNull(strSet9);
        org.junit.Assert.assertNull(sTGroup11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(sTGroup14);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "\"\"\"\"" + "'", str20, "\"\"\"\"");
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertNull(str25);
    }

    @Test
    public void test3662() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3662");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        python3Target0.language = "4.5.2.1";
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = python3Target0.getCodeGenerator();
        org.antlr.v4.codegen.CodeGenerator codeGenerator4 = python3Target0.gen;
        java.util.Set<java.lang.String> strSet5 = python3Target0.badWords;
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = python3Target0.gen;
        java.lang.String str8 = python3Target0.encodeIntAsCharEscape((int) (byte) 100);
        java.lang.String str9 = python3Target0.language;
        org.junit.Assert.assertNull(codeGenerator3);
        org.junit.Assert.assertNull(codeGenerator4);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNull(codeGenerator6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "d" + "'", str8, "d");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "4.5.2.1" + "'", str9, "4.5.2.1");
    }

    @Test
    public void test3663() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3663");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python3Target1.getBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = null;
        python3Target1.gen = codeGenerator3;
        java.lang.String str6 = python3Target1.getAltLabelContextStructName("hi!");
        java.lang.String str9 = python3Target1.getTargetStringLiteralFromString("\"hi!\"", true);
        int int10 = python3Target1.getSerializedATNSegmentLimit();
        org.stringtemplate.v4.STGroup sTGroup11 = python3Target1.getTemplates();
        org.stringtemplate.v4.STGroup sTGroup12 = python3Target1.getTemplates();
        org.antlr.v4.codegen.CodeGenerator codeGenerator13 = null;
        python3Target1.gen = codeGenerator13;
        java.util.Set<java.lang.String> strSet15 = python3Target1.badWords;
        java.lang.String str17 = python3Target1.getTargetStringLiteralFromString("\"\\0\"");
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Hi!Context" + "'", str6, "Hi!Context");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\"\\\"hi!\\\"\"" + "'", str9, "\"\\\"hi!\\\"\"");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 29 + "'", int10 == 29);
        org.junit.Assert.assertNotNull(sTGroup11);
        org.junit.Assert.assertNotNull(sTGroup12);
        org.junit.Assert.assertNotNull(strSet15);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "\"\\\"\\\\0\\\"\"" + "'", str17, "\"\\\"\\\\0\\\"\"");
    }

    @Test
    public void test3664() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3664");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        java.util.Set<java.lang.String> strSet2 = python3Target0.badWords;
        boolean boolean3 = python3Target0.templatesExist();
        java.lang.String str4 = python3Target0.getLanguage();
        org.antlr.v4.tool.Grammar grammar5 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target6 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str8 = python3Target6.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator9 = null;
        python3Target6.gen = codeGenerator9;
        org.antlr.v4.tool.Grammar grammar11 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target12 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str14 = python3Target12.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.tool.Grammar grammar15 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target16 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean17 = python3Target16.supportsOverloadedMethods();
        java.lang.String str18 = python3Target16.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator19 = null;
        java.lang.String str22 = python3Target16.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator19, "", true);
        java.lang.String str23 = python3Target16.getVersion();
        org.antlr.v4.tool.Grammar grammar24 = null;
        int[] intArray25 = new int[] {};
        java.lang.String[] strArray26 = python3Target16.getTokenTypesAsTargetLabels(grammar24, intArray25);
        java.lang.String[] strArray27 = python3Target12.getTokenTypesAsTargetLabels(grammar15, intArray25);
        java.lang.String[] strArray28 = python3Target6.getTokenTypesAsTargetLabels(grammar11, intArray25);
        java.lang.String[] strArray29 = python3Target0.getTokenTypesAsTargetLabels(grammar5, intArray25);
        java.util.Set<java.lang.String> strSet30 = python3Target0.badWords;
        int int31 = python3Target0.getSerializedATNSegmentLimit();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str33 = python3Target0.getImplicitRuleLabel("\"_\"\\1\"\"Context");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\"\"\"\"\"\"" + "'", str8, "\"\"\"\"\"\"");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "\"\"\"\"\"\"" + "'", str14, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "4.5.2.1" + "'", str18, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "\"\"" + "'", str22, "\"\"");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "4.5.2.1" + "'", str23, "4.5.2.1");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[]");
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertNotNull(strSet30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 29 + "'", int31 == 29);
    }

    @Test
    public void test3665() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3665");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        org.antlr.v4.tool.Grammar grammar3 = null;
        org.stringtemplate.v4.ST sT4 = null;
        python3Target0.genRecognizerHeaderFile(grammar3, sT4, "");
        python3Target0.language = "Python3";
        java.util.Set<java.lang.String> strSet9 = null;
        python3Target0.badWords = strSet9;
        org.antlr.v4.codegen.CodeGenerator codeGenerator11 = null;
        java.lang.String str14 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator11, "\"Hi!Context\"", false);
        java.lang.String str16 = python3Target0.getListLabel("Python3");
        java.util.Set<java.lang.String> strSet17 = python3Target0.badWords;
        java.lang.String str18 = python3Target0.language;
        boolean boolean19 = python3Target0.wantsBaseListener();
        org.antlr.v4.tool.ast.GrammarAST grammarAST20 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean21 = python3Target0.visibleGrammarSymbolCausesIssueInGeneratedCode(grammarAST20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Hi!Context" + "'", str14, "Hi!Context");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Python3" + "'", str16, "Python3");
        org.junit.Assert.assertNull(strSet17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Python3" + "'", str18, "Python3");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    }

    @Test
    public void test3666() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3666");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!", "hi!" };
        python3Target0.targetCharValueEscape = strArray5;
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = null;
        java.lang.String str10 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator7, "", false);
        java.util.Set<java.lang.String> strSet11 = python3Target0.badWords;
        java.lang.String str13 = python3Target0.getTargetStringLiteralFromString("12");
        int int14 = python3Target0.getSerializedATNSegmentLimit();
        python3Target0.addBadWords();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str17 = python3Target0.getAltLabelContextStructName("\"#\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNotNull(strSet11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "\"12\"" + "'", str13, "\"12\"");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 29 + "'", int14 == 29);
    }

    @Test
    public void test3667() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3667");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!", "hi!" };
        python3Target0.targetCharValueEscape = strArray5;
        java.lang.String str8 = python3Target0.getTargetStringLiteralFromString("\"\"");
        java.lang.String str10 = python3Target0.getTargetStringLiteralFromString("\"\"");
        boolean boolean11 = python3Target0.wantsBaseVisitor();
        org.antlr.v4.tool.Grammar grammar12 = null;
        org.stringtemplate.v4.ST sT13 = null;
        python3Target0.genRecognizerHeaderFile(grammar12, sT13, "");
        java.lang.String str16 = python3Target0.language;
        org.stringtemplate.v4.STGroup sTGroup17 = python3Target0.templates;
        org.antlr.v4.codegen.model.RuleFunction ruleFunction18 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str19 = python3Target0.getRuleFunctionContextStructName(ruleFunction18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\"\"\"\"" + "'", str8, "\"\"\"\"");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\"\"\"\"" + "'", str10, "\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNull(sTGroup17);
    }

    @Test
    public void test3668() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3668");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        java.lang.String str2 = python3Target0.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = python3Target0.getCodeGenerator();
        org.stringtemplate.v4.STGroup sTGroup4 = null;
        python3Target0.templates = sTGroup4;
        org.stringtemplate.v4.STGroup sTGroup6 = python3Target0.templates;
        java.lang.String[] strArray7 = python3Target0.targetCharValueEscape;
        java.util.Set<java.lang.String> strSet8 = python3Target0.badWords;
        java.util.Set<java.lang.String> strSet9 = python3Target0.getBadWords();
        python3Target0.addBadWords();
        org.stringtemplate.v4.STGroup sTGroup11 = python3Target0.templates;
        org.antlr.v4.codegen.CodeGenerator codeGenerator12 = null;
        python3Target0.gen = codeGenerator12;
        org.antlr.v4.tool.Grammar grammar14 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target15 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray16 = python3Target15.targetCharValueEscape;
        org.stringtemplate.v4.STGroup sTGroup17 = python3Target15.templates;
        org.antlr.v4.codegen.CodeGenerator codeGenerator18 = null;
        java.lang.String str21 = python3Target15.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator18, "\"\\12\"", false);
        int int22 = python3Target15.getInlineTestSetWordSize();
        org.antlr.v4.codegen.CodeGenerator codeGenerator23 = python3Target15.getCodeGenerator();
        org.antlr.v4.tool.Grammar grammar24 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator25 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target26 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator25);
        java.lang.String str27 = python3Target26.getVersion();
        int int28 = python3Target26.getSerializedATNSegmentLimit();
        java.lang.String str29 = python3Target26.getVersion();
        boolean boolean30 = python3Target26.wantsBaseListener();
        python3Target26.addBadWords();
        org.antlr.v4.tool.Grammar grammar32 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator33 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target34 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator33);
        java.util.Set<java.lang.String> strSet35 = python3Target34.getBadWords();
        org.antlr.v4.codegen.target.Python3Target python3Target36 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str38 = python3Target36.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.codegen.target.Python3Target python3Target39 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean40 = python3Target39.supportsOverloadedMethods();
        java.util.Set<java.lang.String> strSet41 = python3Target39.badWords;
        python3Target36.badWords = strSet41;
        python3Target34.badWords = strSet41;
        java.util.Set<java.lang.String> strSet44 = python3Target34.badWords;
        org.antlr.v4.codegen.CodeGenerator codeGenerator45 = python3Target34.getCodeGenerator();
        org.antlr.v4.tool.Grammar grammar46 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target47 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean48 = python3Target47.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup49 = python3Target47.templates;
        org.antlr.v4.tool.Grammar grammar50 = null;
        org.stringtemplate.v4.ST sT51 = null;
        python3Target47.genRecognizerHeaderFile(grammar50, sT51, "");
        python3Target47.language = "Python3";
        java.util.Set<java.lang.String> strSet56 = null;
        python3Target47.badWords = strSet56;
        org.antlr.v4.codegen.CodeGenerator codeGenerator58 = null;
        java.lang.String str61 = python3Target47.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator58, "\"Hi!Context\"", false);
        java.lang.String str63 = python3Target47.getListLabel("Python3");
        java.lang.String str65 = python3Target47.getTargetStringLiteralFromString("\\0");
        org.antlr.v4.tool.Grammar grammar66 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target67 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str69 = python3Target67.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.tool.Grammar grammar70 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target71 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean72 = python3Target71.supportsOverloadedMethods();
        java.lang.String str73 = python3Target71.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator74 = null;
        java.lang.String str77 = python3Target71.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator74, "", true);
        java.lang.String str78 = python3Target71.getVersion();
        org.antlr.v4.tool.Grammar grammar79 = null;
        int[] intArray80 = new int[] {};
        java.lang.String[] strArray81 = python3Target71.getTokenTypesAsTargetLabels(grammar79, intArray80);
        java.lang.String[] strArray82 = python3Target67.getTokenTypesAsTargetLabels(grammar70, intArray80);
        java.lang.String[] strArray83 = python3Target47.getTokenTypesAsTargetLabels(grammar66, intArray80);
        java.lang.String[] strArray84 = python3Target34.getTokenTypesAsTargetLabels(grammar46, intArray80);
        java.lang.String[] strArray85 = python3Target26.getTokenTypesAsTargetLabels(grammar32, intArray80);
        java.lang.String[] strArray86 = python3Target15.getTokenTypesAsTargetLabels(grammar24, intArray80);
        java.lang.String[] strArray87 = python3Target0.getTokenTypesAsTargetLabels(grammar14, intArray80);
        org.antlr.v4.tool.ast.GrammarAST grammarAST88 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean89 = python3Target0.grammarSymbolCausesIssueInGeneratedCode(grammarAST88);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "4.5.2.1" + "'", str2, "4.5.2.1");
        org.junit.Assert.assertNull(codeGenerator3);
        org.junit.Assert.assertNull(sTGroup6);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertNotNull(strSet9);
        org.junit.Assert.assertNull(sTGroup11);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertNull(sTGroup17);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "12" + "'", str21, "12");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 64 + "'", int22 == 64);
        org.junit.Assert.assertNull(codeGenerator23);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "4.5.2.1" + "'", str27, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 29 + "'", int28 == 29);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "4.5.2.1" + "'", str29, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(strSet35);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "\"\"\"\"\"\"" + "'", str38, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(strSet41);
        org.junit.Assert.assertNotNull(strSet44);
        org.junit.Assert.assertNull(codeGenerator45);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNull(sTGroup49);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "Hi!Context" + "'", str61, "Hi!Context");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "Python3" + "'", str63, "Python3");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "\"\\0\"" + "'", str65, "\"\\0\"");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "\"\"\"\"\"\"" + "'", str69, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "4.5.2.1" + "'", str73, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "\"\"" + "'", str77, "\"\"");
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "4.5.2.1" + "'", str78, "4.5.2.1");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[]");
        org.junit.Assert.assertNotNull(strArray81);
        org.junit.Assert.assertNotNull(strArray82);
        org.junit.Assert.assertNotNull(strArray83);
        org.junit.Assert.assertNotNull(strArray84);
        org.junit.Assert.assertNotNull(strArray85);
        org.junit.Assert.assertNotNull(strArray86);
        org.junit.Assert.assertNotNull(strArray87);
    }

    @Test
    public void test3669() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3669");
        java.lang.String str1 = org.stringtemplate.v4.StringRenderer.escapeHTML("__\"_tset12\"Context");
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "__\"_tset12\"Context" + "'", str1, "__\"_tset12\"Context");
    }

    @Test
    public void test3670() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3670");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str2 = python3Target0.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.tool.Grammar grammar3 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target4 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean5 = python3Target4.supportsOverloadedMethods();
        java.lang.String str6 = python3Target4.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = null;
        java.lang.String str10 = python3Target4.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator7, "", true);
        java.lang.String str11 = python3Target4.getVersion();
        org.antlr.v4.tool.Grammar grammar12 = null;
        int[] intArray13 = new int[] {};
        java.lang.String[] strArray14 = python3Target4.getTokenTypesAsTargetLabels(grammar12, intArray13);
        java.lang.String[] strArray15 = python3Target0.getTokenTypesAsTargetLabels(grammar3, intArray13);
        java.lang.String[] strArray16 = python3Target0.targetCharValueEscape;
        java.lang.String str18 = python3Target0.getTargetStringLiteralFromString("\"\"\"\"\"\"");
        java.lang.String[] strArray19 = python3Target0.targetCharValueEscape;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str21 = python3Target0.getImplicitTokenLabel("_tsettset\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"ContextContextConte");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "\"\"\"\"\"\"" + "'", str2, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "4.5.2.1" + "'", str6, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\"\"" + "'", str10, "\"\"");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "4.5.2.1" + "'", str11, "4.5.2.1");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[]");
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "\"\"\"\"\"\"\"\"" + "'", str18, "\"\"\"\"\"\"\"\"");
        org.junit.Assert.assertNotNull(strArray19);
    }

    @Test
    public void test3671() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3671");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        java.lang.String str2 = python3Target0.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = null;
        java.lang.String str6 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator3, "", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = null;
        python3Target0.gen = codeGenerator7;
        java.lang.String[] strArray16 = new java.lang.String[] { "\"\"\"\"", "\\12", "\"\"", "4.5.2.1", "", "\"\"\"\"", "\"\"" };
        java.util.LinkedHashSet<java.lang.String> strSet17 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet17, strArray16);
        python3Target0.badWords = strSet17;
        org.antlr.v4.tool.Grammar grammar20 = null;
        org.stringtemplate.v4.ST sT21 = null;
        python3Target0.genRecognizerHeaderFile(grammar20, sT21, "\"\"");
        python3Target0.addBadWords();
        java.util.Set<java.lang.String> strSet25 = python3Target0.badWords;
        java.lang.String str27 = python3Target0.getTargetStringLiteralFromString("\"\"");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str29 = python3Target0.getAltLabelContextStructName("\"Python3\"Context");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "4.5.2.1" + "'", str2, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\"\"" + "'", str6, "\"\"");
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(strSet25);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "\"\"\"\"" + "'", str27, "\"\"\"\"");
    }

    @Test
    public void test3672() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3672");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        java.util.Set<java.lang.String> strSet2 = python3Target0.badWords;
        boolean boolean3 = python3Target0.templatesExist();
        java.lang.String str4 = python3Target0.getLanguage();
        org.antlr.v4.tool.Grammar grammar5 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target6 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str8 = python3Target6.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator9 = null;
        python3Target6.gen = codeGenerator9;
        org.antlr.v4.tool.Grammar grammar11 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target12 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str14 = python3Target12.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.tool.Grammar grammar15 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target16 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean17 = python3Target16.supportsOverloadedMethods();
        java.lang.String str18 = python3Target16.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator19 = null;
        java.lang.String str22 = python3Target16.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator19, "", true);
        java.lang.String str23 = python3Target16.getVersion();
        org.antlr.v4.tool.Grammar grammar24 = null;
        int[] intArray25 = new int[] {};
        java.lang.String[] strArray26 = python3Target16.getTokenTypesAsTargetLabels(grammar24, intArray25);
        java.lang.String[] strArray27 = python3Target12.getTokenTypesAsTargetLabels(grammar15, intArray25);
        java.lang.String[] strArray28 = python3Target6.getTokenTypesAsTargetLabels(grammar11, intArray25);
        java.lang.String[] strArray29 = python3Target0.getTokenTypesAsTargetLabels(grammar5, intArray25);
        java.util.Set<java.lang.String> strSet30 = python3Target0.badWords;
        org.antlr.v4.codegen.target.Python3Target python3Target31 = new org.antlr.v4.codegen.target.Python3Target();
        python3Target31.language = "4.5.2.1";
        org.antlr.v4.codegen.CodeGenerator codeGenerator34 = python3Target31.getCodeGenerator();
        org.antlr.v4.codegen.CodeGenerator codeGenerator35 = python3Target31.gen;
        java.lang.String str36 = python3Target31.getLanguage();
        python3Target31.addBadWords();
        org.antlr.v4.codegen.target.Python3Target python3Target38 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str40 = python3Target38.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator41 = null;
        python3Target38.gen = codeGenerator41;
        java.lang.String str43 = python3Target38.getVersion();
        org.antlr.v4.codegen.target.Python3Target python3Target44 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean45 = python3Target44.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup46 = python3Target44.templates;
        org.antlr.v4.tool.Grammar grammar47 = null;
        org.stringtemplate.v4.ST sT48 = null;
        python3Target44.genRecognizerHeaderFile(grammar47, sT48, "");
        python3Target44.language = "Python3";
        int int53 = python3Target44.getSerializedATNSegmentLimit();
        org.stringtemplate.v4.STGroup sTGroup54 = python3Target44.loadTemplates();
        python3Target38.templates = sTGroup54;
        python3Target31.templates = sTGroup54;
        python3Target0.templates = sTGroup54;
        java.util.Set<java.lang.String> strSet58 = python3Target0.getBadWords();
        java.lang.String str60 = python3Target0.getAltLabelContextStructName("\\0Context");
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\"\"\"\"\"\"" + "'", str8, "\"\"\"\"\"\"");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "\"\"\"\"\"\"" + "'", str14, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "4.5.2.1" + "'", str18, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "\"\"" + "'", str22, "\"\"");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "4.5.2.1" + "'", str23, "4.5.2.1");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[]");
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertNotNull(strSet30);
        org.junit.Assert.assertNull(codeGenerator34);
        org.junit.Assert.assertNull(codeGenerator35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "4.5.2.1" + "'", str36, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "\"\"\"\"\"\"" + "'", str40, "\"\"\"\"\"\"");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "4.5.2.1" + "'", str43, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNull(sTGroup46);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 29 + "'", int53 == 29);
        org.junit.Assert.assertNotNull(sTGroup54);
        org.junit.Assert.assertNotNull(strSet58);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "\\0ContextContext" + "'", str60, "\\0ContextContext");
    }

    @Test
    public void test3673() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3673");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python3Target1.getBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = null;
        python3Target1.gen = codeGenerator3;
        java.lang.String str6 = python3Target1.getAltLabelContextStructName("hi!");
        java.lang.String str9 = python3Target1.getTargetStringLiteralFromString("\"hi!\"", true);
        int int10 = python3Target1.getSerializedATNSegmentLimit();
        org.stringtemplate.v4.STGroup sTGroup11 = python3Target1.getTemplates();
        org.antlr.v4.codegen.CodeGenerator codeGenerator12 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target13 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator12);
        java.util.Set<java.lang.String> strSet14 = python3Target13.getBadWords();
        org.antlr.v4.codegen.target.Python3Target python3Target15 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str17 = python3Target15.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.codegen.target.Python3Target python3Target18 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean19 = python3Target18.supportsOverloadedMethods();
        java.util.Set<java.lang.String> strSet20 = python3Target18.badWords;
        python3Target15.badWords = strSet20;
        python3Target13.badWords = strSet20;
        java.util.Set<java.lang.String> strSet23 = python3Target13.badWords;
        org.antlr.v4.codegen.CodeGenerator codeGenerator24 = python3Target13.getCodeGenerator();
        org.antlr.v4.tool.Grammar grammar25 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target26 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean27 = python3Target26.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup28 = python3Target26.templates;
        org.antlr.v4.tool.Grammar grammar29 = null;
        org.stringtemplate.v4.ST sT30 = null;
        python3Target26.genRecognizerHeaderFile(grammar29, sT30, "");
        python3Target26.language = "Python3";
        java.util.Set<java.lang.String> strSet35 = null;
        python3Target26.badWords = strSet35;
        org.antlr.v4.codegen.CodeGenerator codeGenerator37 = null;
        java.lang.String str40 = python3Target26.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator37, "\"Hi!Context\"", false);
        java.lang.String str42 = python3Target26.getListLabel("Python3");
        java.lang.String str44 = python3Target26.getTargetStringLiteralFromString("\\0");
        org.antlr.v4.tool.Grammar grammar45 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target46 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str48 = python3Target46.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.tool.Grammar grammar49 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target50 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean51 = python3Target50.supportsOverloadedMethods();
        java.lang.String str52 = python3Target50.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator53 = null;
        java.lang.String str56 = python3Target50.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator53, "", true);
        java.lang.String str57 = python3Target50.getVersion();
        org.antlr.v4.tool.Grammar grammar58 = null;
        int[] intArray59 = new int[] {};
        java.lang.String[] strArray60 = python3Target50.getTokenTypesAsTargetLabels(grammar58, intArray59);
        java.lang.String[] strArray61 = python3Target46.getTokenTypesAsTargetLabels(grammar49, intArray59);
        java.lang.String[] strArray62 = python3Target26.getTokenTypesAsTargetLabels(grammar45, intArray59);
        java.lang.String[] strArray63 = python3Target13.getTokenTypesAsTargetLabels(grammar25, intArray59);
        org.antlr.v4.codegen.target.Python3Target.python3Keywords = strArray63;
        python3Target1.targetCharValueEscape = strArray63;
        java.lang.String str67 = python3Target1.getImplicitRuleLabel("\"\"12\"\"");
        boolean boolean68 = python3Target1.wantsBaseListener();
        int int69 = python3Target1.getInlineTestSetWordSize();
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Hi!Context" + "'", str6, "Hi!Context");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\"\\\"hi!\\\"\"" + "'", str9, "\"\\\"hi!\\\"\"");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 29 + "'", int10 == 29);
        org.junit.Assert.assertNotNull(sTGroup11);
        org.junit.Assert.assertNotNull(strSet14);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "\"\"\"\"\"\"" + "'", str17, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(strSet20);
        org.junit.Assert.assertNotNull(strSet23);
        org.junit.Assert.assertNull(codeGenerator24);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNull(sTGroup28);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "Hi!Context" + "'", str40, "Hi!Context");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "Python3" + "'", str42, "Python3");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "\"\\0\"" + "'", str44, "\"\\0\"");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "\"\"\"\"\"\"" + "'", str48, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "4.5.2.1" + "'", str52, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "\"\"" + "'", str56, "\"\"");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "4.5.2.1" + "'", str57, "4.5.2.1");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[]");
        org.junit.Assert.assertNotNull(strArray60);
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertNotNull(strArray62);
        org.junit.Assert.assertNotNull(strArray63);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "_\"\"12\"\"" + "'", str67, "_\"\"12\"\"");
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 64 + "'", int69 == 64);
    }

    @Test
    public void test3674() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3674");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!", "hi!" };
        python3Target0.targetCharValueEscape = strArray5;
        java.lang.String str8 = python3Target0.getTargetStringLiteralFromString("\"\"");
        java.lang.String str10 = python3Target0.getTargetStringLiteralFromString("\"\"");
        boolean boolean11 = python3Target0.wantsBaseListener();
        org.antlr.v4.codegen.CodeGenerator codeGenerator12 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target13 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator12);
        java.lang.String str15 = python3Target13.getTargetStringLiteralFromString("");
        int int16 = python3Target13.getSerializedATNSegmentLimit();
        boolean boolean17 = python3Target13.wantsBaseVisitor();
        org.stringtemplate.v4.STGroup sTGroup18 = python3Target13.loadTemplates();
        org.antlr.v4.codegen.CodeGenerator codeGenerator19 = python3Target13.gen;
        boolean boolean20 = python3Target13.wantsBaseListener();
        int int21 = python3Target13.getSerializedATNSegmentLimit();
        org.antlr.v4.codegen.target.Python3Target python3Target22 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean23 = python3Target22.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup24 = python3Target22.templates;
        org.antlr.v4.tool.Grammar grammar25 = null;
        org.stringtemplate.v4.ST sT26 = null;
        python3Target22.genRecognizerHeaderFile(grammar25, sT26, "");
        python3Target22.language = "Python3";
        java.util.Set<java.lang.String> strSet31 = null;
        python3Target22.badWords = strSet31;
        org.antlr.v4.codegen.CodeGenerator codeGenerator33 = null;
        java.lang.String str36 = python3Target22.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator33, "\"Hi!Context\"", false);
        java.lang.String str38 = python3Target22.getListLabel("Python3");
        org.antlr.v4.codegen.CodeGenerator codeGenerator39 = python3Target22.getCodeGenerator();
        org.antlr.v4.codegen.target.Python3Target python3Target40 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean41 = python3Target40.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup42 = python3Target40.templates;
        org.antlr.v4.tool.Grammar grammar43 = null;
        org.stringtemplate.v4.ST sT44 = null;
        python3Target40.genRecognizerHeaderFile(grammar43, sT44, "");
        python3Target40.language = "Python3";
        java.util.Set<java.lang.String> strSet49 = null;
        python3Target40.badWords = strSet49;
        org.antlr.v4.codegen.CodeGenerator codeGenerator51 = null;
        java.lang.String str54 = python3Target40.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator51, "\"Hi!Context\"", false);
        java.lang.String str56 = python3Target40.getListLabel("Python3");
        java.lang.String str58 = python3Target40.getTargetStringLiteralFromString("\\0");
        org.antlr.v4.tool.Grammar grammar59 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target60 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str62 = python3Target60.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.tool.Grammar grammar63 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target64 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean65 = python3Target64.supportsOverloadedMethods();
        java.lang.String str66 = python3Target64.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator67 = null;
        java.lang.String str70 = python3Target64.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator67, "", true);
        java.lang.String str71 = python3Target64.getVersion();
        org.antlr.v4.tool.Grammar grammar72 = null;
        int[] intArray73 = new int[] {};
        java.lang.String[] strArray74 = python3Target64.getTokenTypesAsTargetLabels(grammar72, intArray73);
        java.lang.String[] strArray75 = python3Target60.getTokenTypesAsTargetLabels(grammar63, intArray73);
        java.lang.String[] strArray76 = python3Target40.getTokenTypesAsTargetLabels(grammar59, intArray73);
        org.stringtemplate.v4.STGroup sTGroup77 = python3Target40.getTemplates();
        python3Target40.language = "\"\"4.5.2.1\"\"";
        org.stringtemplate.v4.STGroup sTGroup80 = python3Target40.getTemplates();
        python3Target22.templates = sTGroup80;
        python3Target13.templates = sTGroup80;
        python3Target0.templates = sTGroup80;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str85 = python3Target0.getElementName("\"\\64\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\"\"\"\"" + "'", str8, "\"\"\"\"");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\"\"\"\"" + "'", str10, "\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "\"\"" + "'", str15, "\"\"");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 29 + "'", int16 == 29);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(sTGroup18);
        org.junit.Assert.assertNull(codeGenerator19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 29 + "'", int21 == 29);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNull(sTGroup24);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "Hi!Context" + "'", str36, "Hi!Context");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "Python3" + "'", str38, "Python3");
        org.junit.Assert.assertNull(codeGenerator39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNull(sTGroup42);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "Hi!Context" + "'", str54, "Hi!Context");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "Python3" + "'", str56, "Python3");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "\"\\0\"" + "'", str58, "\"\\0\"");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "\"\"\"\"\"\"" + "'", str62, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "4.5.2.1" + "'", str66, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "\"\"" + "'", str70, "\"\"");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "4.5.2.1" + "'", str71, "4.5.2.1");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[]");
        org.junit.Assert.assertNotNull(strArray74);
        org.junit.Assert.assertNotNull(strArray75);
        org.junit.Assert.assertNotNull(strArray76);
        org.junit.Assert.assertNotNull(sTGroup77);
        org.junit.Assert.assertNotNull(sTGroup80);
    }

    @Test
    public void test3675() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3675");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        org.antlr.v4.tool.Grammar grammar3 = null;
        org.stringtemplate.v4.ST sT4 = null;
        python3Target0.genRecognizerHeaderFile(grammar3, sT4, "");
        python3Target0.language = "Python3";
        java.util.Set<java.lang.String> strSet9 = null;
        python3Target0.badWords = strSet9;
        org.antlr.v4.codegen.CodeGenerator codeGenerator11 = null;
        java.lang.String str14 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator11, "\"Hi!Context\"", false);
        org.antlr.v4.tool.Grammar grammar15 = null;
        org.stringtemplate.v4.ST sT16 = null;
        python3Target0.genRecognizerHeaderFile(grammar15, sT16, "\"\"");
        java.lang.String str19 = python3Target0.getVersion();
        boolean boolean20 = python3Target0.wantsBaseVisitor();
        org.antlr.v4.tool.Grammar grammar21 = null;
        org.stringtemplate.v4.ST sT22 = null;
        // The following exception was thrown during execution in test generation
        try {
            python3Target0.genFile(grammar21, sT22, "\"_tset\"\\\"\\\\\\\"\\\\\\\"4.5.2.1\\\\\\\"\\\\\\\"\\\"Context\"\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Hi!Context" + "'", str14, "Hi!Context");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "4.5.2.1" + "'", str19, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    }

    @Test
    public void test3676() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3676");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray1 = python3Target0.targetCharValueEscape;
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = null;
        java.lang.String str6 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator3, "\"\\12\"", false);
        java.lang.String str7 = python3Target0.getLanguage();
        boolean boolean8 = python3Target0.supportsOverloadedMethods();
        java.lang.String str11 = python3Target0.getTargetStringLiteralFromString("\\\"\\\"\\\"\\\"\\\"\\\"Context", true);
        // The following exception was thrown during execution in test generation
        try {
            org.stringtemplate.v4.STGroup sTGroup12 = python3Target0.loadTemplates();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "12" + "'", str6, "12");
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "\"\\\"\\\"\\\"\\\"\\\"\\\"Context\"" + "'", str11, "\"\\\"\\\"\\\"\\\"\\\"\\\"Context\"");
    }

    @Test
    public void test3677() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3677");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray1 = python3Target0.targetCharValueEscape;
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = null;
        java.lang.String str6 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator3, "\"\\12\"", false);
        java.lang.String str7 = python3Target0.getLanguage();
        java.lang.String str9 = python3Target0.getTargetStringLiteralFromString("Hi!Context");
        java.lang.String[] strArray10 = python3Target0.targetCharValueEscape;
        int int11 = python3Target0.getSerializedATNSegmentLimit();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str13 = python3Target0.getAltLabelContextStructName("@");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "12" + "'", str6, "12");
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\"Hi!Context\"" + "'", str9, "\"Hi!Context\"");
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 29 + "'", int11 == 29);
    }

    @Test
    public void test3678() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3678");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        java.lang.String str2 = python3Target0.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = python3Target0.getCodeGenerator();
        org.stringtemplate.v4.STGroup sTGroup4 = null;
        python3Target0.templates = sTGroup4;
        org.stringtemplate.v4.STGroup sTGroup6 = python3Target0.templates;
        java.lang.String[] strArray7 = python3Target0.targetCharValueEscape;
        java.util.Set<java.lang.String> strSet8 = python3Target0.badWords;
        java.util.Set<java.lang.String> strSet9 = python3Target0.getBadWords();
        boolean boolean10 = python3Target0.wantsBaseVisitor();
        java.lang.String[] strArray11 = python3Target0.targetCharValueEscape;
        python3Target0.addBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator13 = python3Target0.gen;
        org.antlr.v4.codegen.CodeGenerator codeGenerator14 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target15 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator14);
        java.util.Set<java.lang.String> strSet16 = python3Target15.getBadWords();
        java.lang.String str18 = python3Target15.getAltLabelContextStructName("d");
        org.stringtemplate.v4.STGroup sTGroup19 = python3Target15.getTemplates();
        org.antlr.v4.codegen.CodeGenerator codeGenerator20 = null;
        java.lang.String str23 = python3Target15.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator20, "", true);
        java.lang.String str25 = python3Target15.getImplicitSetLabel("\"\\0\"");
        java.lang.String str27 = python3Target15.getListLabel("\"Python3\"");
        java.lang.String str28 = python3Target15.getLanguage();
        java.util.Set<java.lang.String> strSet29 = python3Target15.badWords;
        org.stringtemplate.v4.STGroup sTGroup30 = python3Target15.loadTemplates();
        python3Target0.templates = sTGroup30;
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "4.5.2.1" + "'", str2, "4.5.2.1");
        org.junit.Assert.assertNull(codeGenerator3);
        org.junit.Assert.assertNull(sTGroup6);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertNotNull(strSet9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNull(codeGenerator13);
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "DContext" + "'", str18, "DContext");
        org.junit.Assert.assertNotNull(sTGroup19);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "\"\"" + "'", str23, "\"\"");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "_tset\"\\0\"" + "'", str25, "_tset\"\\0\"");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "\"Python3\"" + "'", str27, "\"Python3\"");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "Python3" + "'", str28, "Python3");
        org.junit.Assert.assertNotNull(strSet29);
        org.junit.Assert.assertNotNull(sTGroup30);
    }

    @Test
    public void test3679() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3679");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!", "hi!" };
        python3Target0.targetCharValueEscape = strArray5;
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = null;
        java.lang.String str10 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator7, "", false);
        java.util.Set<java.lang.String> strSet11 = python3Target0.badWords;
        org.antlr.v4.codegen.CodeGenerator codeGenerator12 = null;
        java.lang.String str15 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator12, "@", false);
        org.antlr.v4.codegen.target.Python3Target python3Target16 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean17 = python3Target16.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup18 = python3Target16.templates;
        java.lang.String[] strArray21 = new java.lang.String[] { "hi!", "hi!" };
        python3Target16.targetCharValueEscape = strArray21;
        java.lang.String str24 = python3Target16.getTargetStringLiteralFromString("\"\"");
        org.stringtemplate.v4.STGroup sTGroup25 = null;
        python3Target16.templates = sTGroup25;
        java.lang.String[] strArray27 = python3Target16.targetCharValueEscape;
        python3Target0.targetCharValueEscape = strArray27;
        org.antlr.v4.codegen.CodeGenerator codeGenerator29 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target30 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator29);
        java.lang.String str32 = python3Target30.getTargetStringLiteralFromString("");
        int int33 = python3Target30.getSerializedATNSegmentLimit();
        boolean boolean34 = python3Target30.wantsBaseVisitor();
        org.stringtemplate.v4.STGroup sTGroup35 = python3Target30.loadTemplates();
        org.antlr.v4.codegen.CodeGenerator codeGenerator36 = python3Target30.gen;
        java.lang.String str39 = python3Target30.getTargetStringLiteralFromString("_tset\\12", false);
        org.stringtemplate.v4.STGroup sTGroup40 = python3Target30.loadTemplates();
        python3Target0.templates = sTGroup40;
        java.lang.String str42 = python3Target0.getVersion();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNotNull(strSet11);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNull(sTGroup18);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "\"\"\"\"" + "'", str24, "\"\"\"\"");
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "\"\"" + "'", str32, "\"\"");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 29 + "'", int33 == 29);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(sTGroup35);
        org.junit.Assert.assertNull(codeGenerator36);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "_tset\\\\12" + "'", str39, "_tset\\\\12");
        org.junit.Assert.assertNotNull(sTGroup40);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "4.5.2.1" + "'", str42, "4.5.2.1");
    }

    @Test
    public void test3680() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3680");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.lang.String str3 = python3Target1.getTargetStringLiteralFromString("");
        int int4 = python3Target1.getSerializedATNSegmentLimit();
        java.lang.String str5 = python3Target1.getLanguage();
        java.lang.String str7 = python3Target1.encodeIntAsCharEscape((int) (short) 0);
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = null;
        python3Target1.gen = codeGenerator8;
        java.util.Set<java.lang.String> strSet10 = python3Target1.badWords;
        java.util.Set<java.lang.String> strSet11 = python3Target1.getBadWords();
        java.lang.String str12 = python3Target1.getLanguage();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "\"\"" + "'", str3, "\"\"");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 29 + "'", int4 == 29);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Python3" + "'", str5, "Python3");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "\\0" + "'", str7, "\\0");
        org.junit.Assert.assertNotNull(strSet10);
        org.junit.Assert.assertNotNull(strSet11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Python3" + "'", str12, "Python3");
    }

    @Test
    public void test3681() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3681");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        python3Target0.language = "4.5.2.1";
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = python3Target0.getCodeGenerator();
        org.antlr.v4.codegen.CodeGenerator codeGenerator4 = python3Target0.gen;
        java.lang.String str5 = python3Target0.getLanguage();
        python3Target0.addBadWords();
        java.lang.String str8 = python3Target0.encodeIntAsCharEscape(10);
        org.antlr.v4.codegen.CodeGenerator codeGenerator9 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target10 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator9);
        java.util.Set<java.lang.String> strSet11 = python3Target10.getBadWords();
        java.lang.String str13 = python3Target10.getAltLabelContextStructName("d");
        org.stringtemplate.v4.STGroup sTGroup14 = python3Target10.getTemplates();
        python3Target0.templates = sTGroup14;
        java.lang.String str17 = python3Target0.encodeIntAsCharEscape((int) (short) 1);
        org.antlr.v4.codegen.CodeGenerator codeGenerator18 = null;
        java.lang.String str21 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator18, "_12", false);
        boolean boolean22 = python3Target0.templatesExist();
        org.antlr.v4.codegen.CodeGenerator codeGenerator23 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target24 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator23);
        java.util.Set<java.lang.String> strSet25 = python3Target24.getBadWords();
        org.antlr.v4.codegen.target.Python3Target python3Target26 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str28 = python3Target26.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.codegen.target.Python3Target python3Target29 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean30 = python3Target29.supportsOverloadedMethods();
        java.util.Set<java.lang.String> strSet31 = python3Target29.badWords;
        python3Target26.badWords = strSet31;
        python3Target24.badWords = strSet31;
        java.util.Set<java.lang.String> strSet34 = python3Target24.badWords;
        org.antlr.v4.codegen.CodeGenerator codeGenerator35 = python3Target24.getCodeGenerator();
        java.lang.String str37 = python3Target24.getImplicitSetLabel("12");
        java.lang.String str38 = python3Target24.getLanguage();
        java.util.Set<java.lang.String> strSet39 = python3Target24.badWords;
        org.stringtemplate.v4.STGroup sTGroup40 = python3Target24.loadTemplates();
        python3Target0.templates = sTGroup40;
        org.junit.Assert.assertNull(codeGenerator3);
        org.junit.Assert.assertNull(codeGenerator4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "4.5.2.1" + "'", str5, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\\12" + "'", str8, "\\12");
        org.junit.Assert.assertNotNull(strSet11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "DContext" + "'", str13, "DContext");
        org.junit.Assert.assertNotNull(sTGroup14);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "\\1" + "'", str17, "\\1");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "1" + "'", str21, "1");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(strSet25);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "\"\"\"\"\"\"" + "'", str28, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(strSet31);
        org.junit.Assert.assertNotNull(strSet34);
        org.junit.Assert.assertNull(codeGenerator35);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "_tset12" + "'", str37, "_tset12");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "Python3" + "'", str38, "Python3");
        org.junit.Assert.assertNotNull(strSet39);
        org.junit.Assert.assertNotNull(sTGroup40);
    }

    @Test
    public void test3682() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3682");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray1 = python3Target0.targetCharValueEscape;
        java.lang.String str2 = python3Target0.language;
        int int3 = python3Target0.getSerializedATNSegmentLimit();
        org.antlr.v4.codegen.CodeGenerator codeGenerator4 = null;
        java.lang.String str7 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator4, "d", true);
        org.antlr.v4.codegen.target.Python3Target python3Target8 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str10 = python3Target8.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.tool.Grammar grammar11 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target12 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean13 = python3Target12.supportsOverloadedMethods();
        java.lang.String str14 = python3Target12.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator15 = null;
        java.lang.String str18 = python3Target12.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator15, "", true);
        java.lang.String str19 = python3Target12.getVersion();
        org.antlr.v4.tool.Grammar grammar20 = null;
        int[] intArray21 = new int[] {};
        java.lang.String[] strArray22 = python3Target12.getTokenTypesAsTargetLabels(grammar20, intArray21);
        java.lang.String[] strArray23 = python3Target8.getTokenTypesAsTargetLabels(grammar11, intArray21);
        python3Target0.targetCharValueEscape = strArray23;
        java.util.Set<java.lang.String> strSet25 = python3Target0.badWords;
        org.antlr.v4.tool.ast.GrammarAST grammarAST26 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean27 = python3Target0.visibleGrammarSymbolCausesIssueInGeneratedCode(grammarAST26);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 29 + "'", int3 == 29);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "\"\"" + "'", str7, "\"\"");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\"\"\"\"\"\"" + "'", str10, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "4.5.2.1" + "'", str14, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "\"\"" + "'", str18, "\"\"");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "4.5.2.1" + "'", str19, "4.5.2.1");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[]");
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertNotNull(strSet25);
    }

    @Test
    public void test3683() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3683");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!", "hi!" };
        python3Target0.targetCharValueEscape = strArray5;
        java.lang.String str8 = python3Target0.getTargetStringLiteralFromString("\"\"");
        java.lang.String str9 = python3Target0.getLanguage();
        org.antlr.v4.codegen.target.Python3Target python3Target10 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray11 = python3Target10.targetCharValueEscape;
        org.stringtemplate.v4.STGroup sTGroup12 = python3Target10.templates;
        int int13 = python3Target10.getInlineTestSetWordSize();
        org.antlr.v4.codegen.CodeGenerator codeGenerator14 = python3Target10.gen;
        org.antlr.v4.tool.Grammar grammar15 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target16 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str18 = python3Target16.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.tool.Grammar grammar19 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target20 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean21 = python3Target20.supportsOverloadedMethods();
        java.lang.String str22 = python3Target20.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator23 = null;
        java.lang.String str26 = python3Target20.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator23, "", true);
        java.lang.String str27 = python3Target20.getVersion();
        org.antlr.v4.tool.Grammar grammar28 = null;
        int[] intArray29 = new int[] {};
        java.lang.String[] strArray30 = python3Target20.getTokenTypesAsTargetLabels(grammar28, intArray29);
        java.lang.String[] strArray31 = python3Target16.getTokenTypesAsTargetLabels(grammar19, intArray29);
        java.lang.String[] strArray32 = python3Target10.getTokenTypesAsTargetLabels(grammar15, intArray29);
        python3Target0.targetCharValueEscape = strArray32;
        org.stringtemplate.v4.STGroup sTGroup34 = python3Target0.templates;
        java.lang.String str36 = python3Target0.encodeIntAsCharEscape((int) (short) 1);
        python3Target0.addBadWords();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\"\"\"\"" + "'", str8, "\"\"\"\"");
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNull(sTGroup12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 64 + "'", int13 == 64);
        org.junit.Assert.assertNull(codeGenerator14);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "\"\"\"\"\"\"" + "'", str18, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "4.5.2.1" + "'", str22, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "\"\"" + "'", str26, "\"\"");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "4.5.2.1" + "'", str27, "4.5.2.1");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[]");
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertNull(sTGroup34);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "\\1" + "'", str36, "\\1");
    }

    @Test
    public void test3684() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3684");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        java.lang.String str2 = python3Target0.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = null;
        java.lang.String str6 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator3, "", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = null;
        python3Target0.gen = codeGenerator7;
        java.lang.String[] strArray16 = new java.lang.String[] { "\"\"\"\"", "\\12", "\"\"", "4.5.2.1", "", "\"\"\"\"", "\"\"" };
        java.util.LinkedHashSet<java.lang.String> strSet17 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet17, strArray16);
        python3Target0.badWords = strSet17;
        org.antlr.v4.tool.Grammar grammar20 = null;
        org.stringtemplate.v4.ST sT21 = null;
        python3Target0.genRecognizerHeaderFile(grammar20, sT21, "\"\"");
        java.lang.String str25 = python3Target0.encodeIntAsCharEscape((int) (byte) 10);
        java.lang.String str26 = python3Target0.language;
        java.util.Set<java.lang.String> strSet27 = python3Target0.getBadWords();
        java.lang.String str28 = python3Target0.language;
        org.antlr.v4.codegen.CodeGenerator codeGenerator29 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target30 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator29);
        java.util.Set<java.lang.String> strSet31 = python3Target30.getBadWords();
        java.lang.String str33 = python3Target30.getAltLabelContextStructName("d");
        org.stringtemplate.v4.STGroup sTGroup34 = python3Target30.getTemplates();
        boolean boolean35 = python3Target30.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup36 = python3Target30.getTemplates();
        python3Target30.language = "\"\"";
        org.antlr.v4.codegen.CodeGenerator codeGenerator39 = null;
        java.lang.String str42 = python3Target30.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator39, "\\\"4.5.2.1\\\"", false);
        org.antlr.v4.codegen.CodeGenerator codeGenerator43 = python3Target30.getCodeGenerator();
        org.antlr.v4.codegen.CodeGenerator codeGenerator44 = python3Target30.getCodeGenerator();
        org.antlr.v4.codegen.CodeGenerator codeGenerator45 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target46 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator45);
        java.lang.String str47 = python3Target46.getLanguage();
        java.lang.String str49 = python3Target46.getImplicitSetLabel("Python3");
        org.antlr.v4.codegen.CodeGenerator codeGenerator50 = null;
        java.lang.String str53 = python3Target46.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator50, "\"\"\"\"", true);
        java.util.Set<java.lang.String> strSet54 = python3Target46.getBadWords();
        python3Target30.badWords = strSet54;
        python3Target0.badWords = strSet54;
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "4.5.2.1" + "'", str2, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\"\"" + "'", str6, "\"\"");
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "\\12" + "'", str25, "\\12");
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(strSet27);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNotNull(strSet31);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "DContext" + "'", str33, "DContext");
        org.junit.Assert.assertNotNull(sTGroup34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(sTGroup36);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "\\\"4.5.2.1\\\"" + "'", str42, "\\\"4.5.2.1\\\"");
        org.junit.Assert.assertNull(codeGenerator43);
        org.junit.Assert.assertNull(codeGenerator44);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "Python3" + "'", str47, "Python3");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "_tsetPython3" + "'", str49, "_tsetPython3");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "\"\\\"\\\"\"" + "'", str53, "\"\\\"\\\"\"");
        org.junit.Assert.assertNotNull(strSet54);
    }

    @Test
    public void test3685() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3685");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        org.antlr.v4.tool.Grammar grammar3 = null;
        org.stringtemplate.v4.ST sT4 = null;
        python3Target0.genRecognizerHeaderFile(grammar3, sT4, "");
        python3Target0.language = "Python3";
        java.util.Set<java.lang.String> strSet9 = null;
        python3Target0.badWords = strSet9;
        org.antlr.v4.codegen.CodeGenerator codeGenerator11 = null;
        java.lang.String str14 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator11, "\"Hi!Context\"", false);
        java.lang.String str16 = python3Target0.getListLabel("Python3");
        org.antlr.v4.codegen.CodeGenerator codeGenerator17 = python3Target0.getCodeGenerator();
        org.antlr.v4.codegen.target.Python3Target python3Target18 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean19 = python3Target18.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup20 = python3Target18.templates;
        org.antlr.v4.tool.Grammar grammar21 = null;
        org.stringtemplate.v4.ST sT22 = null;
        python3Target18.genRecognizerHeaderFile(grammar21, sT22, "");
        python3Target18.language = "Python3";
        java.util.Set<java.lang.String> strSet27 = null;
        python3Target18.badWords = strSet27;
        org.antlr.v4.codegen.CodeGenerator codeGenerator29 = null;
        java.lang.String str32 = python3Target18.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator29, "\"Hi!Context\"", false);
        java.lang.String str34 = python3Target18.getListLabel("Python3");
        java.lang.String str36 = python3Target18.getTargetStringLiteralFromString("\\0");
        org.antlr.v4.tool.Grammar grammar37 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target38 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str40 = python3Target38.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.tool.Grammar grammar41 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target42 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean43 = python3Target42.supportsOverloadedMethods();
        java.lang.String str44 = python3Target42.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator45 = null;
        java.lang.String str48 = python3Target42.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator45, "", true);
        java.lang.String str49 = python3Target42.getVersion();
        org.antlr.v4.tool.Grammar grammar50 = null;
        int[] intArray51 = new int[] {};
        java.lang.String[] strArray52 = python3Target42.getTokenTypesAsTargetLabels(grammar50, intArray51);
        java.lang.String[] strArray53 = python3Target38.getTokenTypesAsTargetLabels(grammar41, intArray51);
        java.lang.String[] strArray54 = python3Target18.getTokenTypesAsTargetLabels(grammar37, intArray51);
        org.stringtemplate.v4.STGroup sTGroup55 = python3Target18.getTemplates();
        python3Target18.language = "\"\"4.5.2.1\"\"";
        org.stringtemplate.v4.STGroup sTGroup58 = python3Target18.getTemplates();
        python3Target0.templates = sTGroup58;
        org.stringtemplate.v4.STGroup sTGroup60 = python3Target0.loadTemplates();
        org.antlr.v4.tool.Grammar grammar61 = null;
        org.stringtemplate.v4.ST sT62 = null;
        // The following exception was thrown during execution in test generation
        try {
            python3Target0.genFile(grammar61, sT62, "_tset_tset_12Context");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Hi!Context" + "'", str14, "Hi!Context");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Python3" + "'", str16, "Python3");
        org.junit.Assert.assertNull(codeGenerator17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(sTGroup20);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "Hi!Context" + "'", str32, "Hi!Context");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "Python3" + "'", str34, "Python3");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "\"\\0\"" + "'", str36, "\"\\0\"");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "\"\"\"\"\"\"" + "'", str40, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "4.5.2.1" + "'", str44, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "\"\"" + "'", str48, "\"\"");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "4.5.2.1" + "'", str49, "4.5.2.1");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[]");
        org.junit.Assert.assertNotNull(strArray52);
        org.junit.Assert.assertNotNull(strArray53);
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertNotNull(sTGroup55);
        org.junit.Assert.assertNotNull(sTGroup58);
        org.junit.Assert.assertNotNull(sTGroup60);
    }

    @Test
    public void test3686() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3686");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        python3Target0.language = "";
        org.antlr.v4.codegen.target.Python3Target python3Target3 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean4 = python3Target3.supportsOverloadedMethods();
        java.lang.String str5 = python3Target3.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = null;
        java.lang.String str9 = python3Target3.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator6, "", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = null;
        python3Target3.gen = codeGenerator10;
        java.lang.String[] strArray19 = new java.lang.String[] { "\"\"\"\"", "\\12", "\"\"", "4.5.2.1", "", "\"\"\"\"", "\"\"" };
        java.util.LinkedHashSet<java.lang.String> strSet20 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet20, strArray19);
        python3Target3.badWords = strSet20;
        python3Target0.badWords = strSet20;
        java.lang.String str25 = python3Target0.encodeIntAsCharEscape((int) (byte) 100);
        java.lang.String str26 = python3Target0.getLanguage();
        boolean boolean27 = python3Target0.supportsOverloadedMethods();
        org.antlr.v4.tool.Grammar grammar28 = null;
        org.stringtemplate.v4.ST sT29 = null;
        python3Target0.genRecognizerHeaderFile(grammar28, sT29, "\"\"\"\\\"\\\"hi!\\\"\\\"\"\"\"");
        org.antlr.v4.codegen.target.Python3Target python3Target32 = new org.antlr.v4.codegen.target.Python3Target();
        python3Target32.language = "";
        java.lang.String str36 = python3Target32.encodeIntAsCharEscape(10);
        org.antlr.v4.codegen.CodeGenerator codeGenerator37 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target38 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator37);
        java.util.Set<java.lang.String> strSet39 = python3Target38.getBadWords();
        java.lang.String str41 = python3Target38.getAltLabelContextStructName("d");
        org.stringtemplate.v4.STGroup sTGroup42 = python3Target38.templates;
        python3Target32.templates = sTGroup42;
        org.antlr.v4.codegen.target.Python3Target python3Target44 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray45 = python3Target44.targetCharValueEscape;
        org.stringtemplate.v4.STGroup sTGroup46 = python3Target44.templates;
        int int47 = python3Target44.getInlineTestSetWordSize();
        int int48 = python3Target44.getSerializedATNSegmentLimit();
        java.util.Set<java.lang.String> strSet49 = python3Target44.badWords;
        python3Target32.badWords = strSet49;
        python3Target0.badWords = strSet49;
        org.antlr.v4.codegen.CodeGenerator codeGenerator52 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target53 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator52);
        java.util.Set<java.lang.String> strSet54 = python3Target53.getBadWords();
        org.antlr.v4.codegen.target.Python3Target python3Target55 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str57 = python3Target55.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.codegen.target.Python3Target python3Target58 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean59 = python3Target58.supportsOverloadedMethods();
        java.util.Set<java.lang.String> strSet60 = python3Target58.badWords;
        python3Target55.badWords = strSet60;
        python3Target53.badWords = strSet60;
        java.util.Set<java.lang.String> strSet63 = python3Target53.badWords;
        java.lang.String str64 = python3Target53.language;
        java.util.Set<java.lang.String> strSet65 = python3Target53.badWords;
        java.lang.String str67 = python3Target53.getListLabel("\"\\\"\\\\\\\"Python3\\\\\\\"\\\"\"");
        org.antlr.v4.codegen.target.Python3Target python3Target68 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean69 = python3Target68.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup70 = python3Target68.templates;
        java.lang.String[] strArray73 = new java.lang.String[] { "hi!", "hi!" };
        python3Target68.targetCharValueEscape = strArray73;
        org.antlr.v4.codegen.CodeGenerator codeGenerator75 = null;
        java.lang.String str78 = python3Target68.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator75, "", false);
        boolean boolean79 = python3Target68.wantsBaseListener();
        org.antlr.v4.codegen.CodeGenerator codeGenerator80 = python3Target68.gen;
        org.antlr.v4.codegen.target.Python3Target python3Target81 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray82 = python3Target81.targetCharValueEscape;
        java.lang.String str83 = python3Target81.language;
        int int84 = python3Target81.getSerializedATNSegmentLimit();
        org.antlr.v4.codegen.CodeGenerator codeGenerator85 = null;
        python3Target81.gen = codeGenerator85;
        org.antlr.v4.codegen.CodeGenerator codeGenerator87 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target88 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator87);
        java.util.Set<java.lang.String> strSet89 = python3Target88.getBadWords();
        java.lang.String str91 = python3Target88.getAltLabelContextStructName("d");
        org.stringtemplate.v4.STGroup sTGroup92 = python3Target88.getTemplates();
        python3Target81.templates = sTGroup92;
        python3Target68.templates = sTGroup92;
        python3Target53.templates = sTGroup92;
        python3Target0.templates = sTGroup92;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str98 = python3Target0.getElementListName("_tset\"\\\\0\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "4.5.2.1" + "'", str5, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\"\"" + "'", str9, "\"\"");
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "d" + "'", str25, "d");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "\\12" + "'", str36, "\\12");
        org.junit.Assert.assertNotNull(strSet39);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "DContext" + "'", str41, "DContext");
        org.junit.Assert.assertNotNull(sTGroup42);
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertNull(sTGroup46);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 64 + "'", int47 == 64);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 29 + "'", int48 == 29);
        org.junit.Assert.assertNotNull(strSet49);
        org.junit.Assert.assertNotNull(strSet54);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "\"\"\"\"\"\"" + "'", str57, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(strSet60);
        org.junit.Assert.assertNotNull(strSet63);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "Python3" + "'", str64, "Python3");
        org.junit.Assert.assertNotNull(strSet65);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "\"\\\"\\\\\\\"Python3\\\\\\\"\\\"\"" + "'", str67, "\"\\\"\\\\\\\"Python3\\\\\\\"\\\"\"");
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNull(sTGroup70);
        org.junit.Assert.assertNotNull(strArray73);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "" + "'", str78, "");
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNull(codeGenerator80);
        org.junit.Assert.assertNotNull(strArray82);
        org.junit.Assert.assertNull(str83);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 29 + "'", int84 == 29);
        org.junit.Assert.assertNotNull(strSet89);
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "DContext" + "'", str91, "DContext");
        org.junit.Assert.assertNotNull(sTGroup92);
    }

    @Test
    public void test3687() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3687");
        java.lang.String str1 = org.stringtemplate.v4.StringRenderer.escapeHTML("\"\\\"\\\"\\\"\\\"\\\"Conte\"");
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "\"\\\"\\\"\\\"\\\"\\\"Conte\"" + "'", str1, "\"\\\"\\\"\\\"\\\"\\\"Conte\"");
    }

    @Test
    public void test3688() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3688");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        java.lang.String str2 = python3Target0.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = python3Target0.getCodeGenerator();
        org.antlr.v4.tool.Grammar grammar4 = null;
        org.stringtemplate.v4.ST sT5 = null;
        python3Target0.genRecognizerHeaderFile(grammar4, sT5, "_tsetPython3");
        boolean boolean8 = python3Target0.wantsBaseListener();
        java.lang.String str9 = python3Target0.getVersion();
        int int10 = python3Target0.getSerializedATNSegmentLimit();
        boolean boolean11 = python3Target0.wantsBaseListener();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "4.5.2.1" + "'", str2, "4.5.2.1");
        org.junit.Assert.assertNull(codeGenerator3);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "4.5.2.1" + "'", str9, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 29 + "'", int10 == 29);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test3689() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3689");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray1 = python3Target0.targetCharValueEscape;
        java.lang.String str2 = python3Target0.language;
        int int3 = python3Target0.getSerializedATNSegmentLimit();
        java.util.Set<java.lang.String> strSet4 = python3Target0.badWords;
        int int5 = python3Target0.getSerializedATNSegmentLimit();
        java.lang.String str6 = python3Target0.language;
        java.lang.String str9 = python3Target0.getTargetStringLiteralFromString("\\nContext", true);
        java.lang.String str12 = python3Target0.getTargetStringLiteralFromString("\\\"\\\\\\\"\\\\\\\"hi!\\\\\\\"\\\\\\\"\\\"", true);
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 29 + "'", int3 == 29);
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 29 + "'", int5 == 29);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\"\\nContext\"" + "'", str9, "\"\\nContext\"");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "\"\\\"\\\\\\\"\\\\\\\"hi!\\\\\\\"\\\\\\\"\\\"\"" + "'", str12, "\"\\\"\\\\\\\"\\\\\\\"hi!\\\\\\\"\\\\\\\"\\\"\"");
    }

    @Test
    public void test3690() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3690");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!", "hi!" };
        python3Target0.targetCharValueEscape = strArray5;
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = null;
        java.lang.String str10 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator7, "", false);
        java.util.Set<java.lang.String> strSet11 = python3Target0.badWords;
        org.antlr.v4.codegen.CodeGenerator codeGenerator12 = null;
        java.lang.String str15 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator12, "@", false);
        org.antlr.v4.codegen.target.Python3Target python3Target16 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean17 = python3Target16.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup18 = python3Target16.templates;
        java.lang.String[] strArray21 = new java.lang.String[] { "hi!", "hi!" };
        python3Target16.targetCharValueEscape = strArray21;
        java.lang.String str24 = python3Target16.getTargetStringLiteralFromString("\"\"");
        org.stringtemplate.v4.STGroup sTGroup25 = null;
        python3Target16.templates = sTGroup25;
        java.lang.String[] strArray27 = python3Target16.targetCharValueEscape;
        python3Target0.targetCharValueEscape = strArray27;
        org.antlr.v4.tool.Grammar grammar29 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target30 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean31 = python3Target30.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup32 = python3Target30.templates;
        java.lang.String[] strArray35 = new java.lang.String[] { "hi!", "hi!" };
        python3Target30.targetCharValueEscape = strArray35;
        org.antlr.v4.codegen.CodeGenerator codeGenerator37 = null;
        java.lang.String str40 = python3Target30.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator37, "", false);
        org.antlr.v4.tool.Grammar grammar41 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target42 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str44 = python3Target42.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.tool.Grammar grammar45 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target46 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean47 = python3Target46.supportsOverloadedMethods();
        java.lang.String str48 = python3Target46.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator49 = null;
        java.lang.String str52 = python3Target46.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator49, "", true);
        java.lang.String str53 = python3Target46.getVersion();
        org.antlr.v4.tool.Grammar grammar54 = null;
        int[] intArray55 = new int[] {};
        java.lang.String[] strArray56 = python3Target46.getTokenTypesAsTargetLabels(grammar54, intArray55);
        java.lang.String[] strArray57 = python3Target42.getTokenTypesAsTargetLabels(grammar45, intArray55);
        java.lang.String[] strArray58 = python3Target30.getTokenTypesAsTargetLabels(grammar41, intArray55);
        java.lang.String[] strArray59 = python3Target0.getTokenTypesAsTargetLabels(grammar29, intArray55);
        org.antlr.v4.codegen.CodeGenerator codeGenerator60 = null;
        python3Target0.gen = codeGenerator60;
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNotNull(strSet11);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNull(sTGroup18);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "\"\"\"\"" + "'", str24, "\"\"\"\"");
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNull(sTGroup32);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "" + "'", str40, "");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "\"\"\"\"\"\"" + "'", str44, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "4.5.2.1" + "'", str48, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "\"\"" + "'", str52, "\"\"");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "4.5.2.1" + "'", str53, "4.5.2.1");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[]");
        org.junit.Assert.assertNotNull(strArray56);
        org.junit.Assert.assertNotNull(strArray57);
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertNotNull(strArray59);
    }

    @Test
    public void test3691() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3691");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        java.lang.String str2 = python3Target0.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = null;
        java.lang.String str6 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator3, "", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = null;
        python3Target0.gen = codeGenerator7;
        java.lang.String[] strArray16 = new java.lang.String[] { "\"\"\"\"", "\\12", "\"\"", "4.5.2.1", "", "\"\"\"\"", "\"\"" };
        java.util.LinkedHashSet<java.lang.String> strSet17 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet17, strArray16);
        python3Target0.badWords = strSet17;
        java.lang.String str20 = python3Target0.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator21 = python3Target0.getCodeGenerator();
        boolean boolean22 = python3Target0.templatesExist();
        org.antlr.v4.tool.Grammar grammar23 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target24 = new org.antlr.v4.codegen.target.Python3Target();
        python3Target24.language = "";
        java.lang.String str28 = python3Target24.encodeIntAsCharEscape(10);
        org.antlr.v4.codegen.CodeGenerator codeGenerator29 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target30 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator29);
        java.util.Set<java.lang.String> strSet31 = python3Target30.getBadWords();
        java.lang.String str33 = python3Target30.getAltLabelContextStructName("d");
        org.stringtemplate.v4.STGroup sTGroup34 = python3Target30.templates;
        python3Target24.templates = sTGroup34;
        int int36 = python3Target24.getSerializedATNSegmentLimit();
        org.antlr.v4.tool.Grammar grammar37 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target38 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean39 = python3Target38.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup40 = python3Target38.templates;
        java.lang.String[] strArray43 = new java.lang.String[] { "hi!", "hi!" };
        python3Target38.targetCharValueEscape = strArray43;
        java.lang.String[] strArray46 = new java.lang.String[] { "hi!" };
        org.antlr.v4.codegen.target.Python3Target.python3Keywords = strArray46;
        python3Target38.targetCharValueEscape = strArray46;
        org.antlr.v4.tool.Grammar grammar49 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target50 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str52 = python3Target50.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator53 = null;
        python3Target50.gen = codeGenerator53;
        org.antlr.v4.tool.Grammar grammar55 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target56 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str58 = python3Target56.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.tool.Grammar grammar59 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target60 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean61 = python3Target60.supportsOverloadedMethods();
        java.lang.String str62 = python3Target60.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator63 = null;
        java.lang.String str66 = python3Target60.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator63, "", true);
        java.lang.String str67 = python3Target60.getVersion();
        org.antlr.v4.tool.Grammar grammar68 = null;
        int[] intArray69 = new int[] {};
        java.lang.String[] strArray70 = python3Target60.getTokenTypesAsTargetLabels(grammar68, intArray69);
        java.lang.String[] strArray71 = python3Target56.getTokenTypesAsTargetLabels(grammar59, intArray69);
        java.lang.String[] strArray72 = python3Target50.getTokenTypesAsTargetLabels(grammar55, intArray69);
        java.lang.String[] strArray73 = python3Target38.getTokenTypesAsTargetLabels(grammar49, intArray69);
        java.lang.String[] strArray74 = python3Target24.getTokenTypesAsTargetLabels(grammar37, intArray69);
        java.lang.String[] strArray75 = python3Target0.getTokenTypesAsTargetLabels(grammar23, intArray69);
        java.lang.Class<?> wildcardClass76 = strArray75.getClass();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "4.5.2.1" + "'", str2, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\"\"" + "'", str6, "\"\"");
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNull(codeGenerator21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "\\12" + "'", str28, "\\12");
        org.junit.Assert.assertNotNull(strSet31);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "DContext" + "'", str33, "DContext");
        org.junit.Assert.assertNotNull(sTGroup34);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 29 + "'", int36 == 29);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNull(sTGroup40);
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "\"\"\"\"\"\"" + "'", str52, "\"\"\"\"\"\"");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "\"\"\"\"\"\"" + "'", str58, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "4.5.2.1" + "'", str62, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "\"\"" + "'", str66, "\"\"");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "4.5.2.1" + "'", str67, "4.5.2.1");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[]");
        org.junit.Assert.assertNotNull(strArray70);
        org.junit.Assert.assertNotNull(strArray71);
        org.junit.Assert.assertNotNull(strArray72);
        org.junit.Assert.assertNotNull(strArray73);
        org.junit.Assert.assertNotNull(strArray74);
        org.junit.Assert.assertNotNull(strArray75);
        org.junit.Assert.assertNotNull(wildcardClass76);
    }

    @Test
    public void test3692() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3692");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        java.util.Set<java.lang.String> strSet2 = python3Target0.badWords;
        boolean boolean3 = python3Target0.templatesExist();
        boolean boolean4 = python3Target0.templatesExist();
        java.lang.String str6 = python3Target0.getTargetStringLiteralFromString("DContext");
        boolean boolean7 = python3Target0.wantsBaseListener();
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target9 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator8);
        java.util.Set<java.lang.String> strSet10 = python3Target9.getBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator11 = null;
        python3Target9.gen = codeGenerator11;
        java.lang.String str14 = python3Target9.getAltLabelContextStructName("hi!");
        java.lang.String str17 = python3Target9.getTargetStringLiteralFromString("\"hi!\"", true);
        int int18 = python3Target9.getSerializedATNSegmentLimit();
        org.stringtemplate.v4.STGroup sTGroup19 = python3Target9.getTemplates();
        org.stringtemplate.v4.STGroup sTGroup20 = python3Target9.templates;
        python3Target0.templates = sTGroup20;
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\"DContext\"" + "'", str6, "\"DContext\"");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(strSet10);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Hi!Context" + "'", str14, "Hi!Context");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "\"\\\"hi!\\\"\"" + "'", str17, "\"\\\"hi!\\\"\"");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 29 + "'", int18 == 29);
        org.junit.Assert.assertNotNull(sTGroup19);
        org.junit.Assert.assertNotNull(sTGroup20);
    }

    @Test
    public void test3693() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3693");
        org.antlr.v4.codegen.target.Python3Target.PythonStringRenderer pythonStringRenderer0 = new org.antlr.v4.codegen.target.Python3Target.PythonStringRenderer();
        java.lang.Object obj1 = null;
        java.util.Locale locale3 = null;
        java.lang.String str4 = pythonStringRenderer0.toString(obj1, "\"\"\"\"\"\"", locale3);
        java.util.Locale locale7 = null;
        java.lang.String str8 = pythonStringRenderer0.toString((java.lang.Object) "_tset\"\"\\0\"\"Context", "@", locale7);
        org.antlr.v4.codegen.target.Python3Target python3Target9 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean10 = python3Target9.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup11 = python3Target9.templates;
        java.util.Locale locale13 = null;
        java.lang.String str14 = pythonStringRenderer0.toString((java.lang.Object) sTGroup11, "", locale13);
        org.antlr.v4.codegen.target.Python3Target python3Target15 = new org.antlr.v4.codegen.target.Python3Target();
        python3Target15.language = "";
        int int18 = python3Target15.getSerializedATNSegmentLimit();
        org.antlr.v4.tool.Grammar grammar19 = null;
        org.stringtemplate.v4.ST sT20 = null;
        python3Target15.genRecognizerHeaderFile(grammar19, sT20, "\"_tset12\"");
        java.util.Locale locale24 = null;
        java.lang.String str25 = pythonStringRenderer0.toString((java.lang.Object) grammar19, "\"\\\"\\\"\\\"\\\"\\\"Conte\"", locale24);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "\"\"\"\"\"\"" + "'", str4, "\"\"\"\"\"\"");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "@" + "'", str8, "@");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(sTGroup11);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 29 + "'", int18 == 29);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "\"\\\"\\\"\\\"\\\"\\\"Conte\"" + "'", str25, "\"\\\"\\\"\\\"\\\"\\\"Conte\"");
    }

    @Test
    public void test3694() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3694");
        org.antlr.v4.codegen.target.Python3Target.PythonStringRenderer pythonStringRenderer0 = new org.antlr.v4.codegen.target.Python3Target.PythonStringRenderer();
        java.lang.Object obj1 = null;
        java.util.Locale locale3 = null;
        java.lang.String str4 = pythonStringRenderer0.toString(obj1, "\"\"\"\"\"\"", locale3);
        org.antlr.v4.codegen.target.Python3Target python3Target5 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray6 = python3Target5.targetCharValueEscape;
        org.stringtemplate.v4.STGroup sTGroup7 = python3Target5.templates;
        java.util.Locale locale9 = null;
        java.lang.String str10 = pythonStringRenderer0.toString((java.lang.Object) sTGroup7, "\"Hi!Context\"", locale9);
        java.util.Locale locale13 = null;
        java.lang.String str14 = pythonStringRenderer0.toString((java.lang.Object) "\"DContext\"", "", locale13);
        java.lang.Object obj15 = null;
        java.util.Locale locale17 = null;
        java.lang.String str18 = pythonStringRenderer0.toString(obj15, "\"\\\"hi!\\\"\"", locale17);
        java.util.Locale locale21 = null;
        java.lang.String str22 = pythonStringRenderer0.toString((java.lang.Object) "#", "", locale21);
        org.antlr.v4.codegen.target.Python3Target python3Target23 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean24 = python3Target23.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup25 = python3Target23.templates;
        org.antlr.v4.tool.Grammar grammar26 = null;
        org.stringtemplate.v4.ST sT27 = null;
        python3Target23.genRecognizerHeaderFile(grammar26, sT27, "");
        python3Target23.language = "Python3";
        java.util.Set<java.lang.String> strSet32 = null;
        python3Target23.badWords = strSet32;
        boolean boolean34 = python3Target23.wantsBaseVisitor();
        java.lang.String str36 = python3Target23.getImplicitSetLabel("Python3");
        int int37 = python3Target23.getInlineTestSetWordSize();
        org.antlr.v4.codegen.target.Python3Target python3Target38 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray39 = python3Target38.targetCharValueEscape;
        java.util.Set<java.lang.String> strSet40 = python3Target38.badWords;
        python3Target23.badWords = strSet40;
        java.lang.String str42 = python3Target23.language;
        java.util.Locale locale44 = null;
        java.lang.String str45 = pythonStringRenderer0.toString((java.lang.Object) str42, "\"\"\"\\0\"\"\"", locale44);
        java.util.Locale locale48 = null;
        java.lang.String str49 = pythonStringRenderer0.toString((java.lang.Object) "\\\"_tsetPython3\\\"Context", "_\\\"_\\\"\\\"\\\"DContext\\\"\\\"Context\\\"\\\"", locale48);
        org.antlr.v4.codegen.CodeGenerator codeGenerator50 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target51 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator50);
        java.util.Set<java.lang.String> strSet52 = python3Target51.getBadWords();
        java.util.Locale locale54 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str55 = pythonStringRenderer0.toString((java.lang.Object) python3Target51, "ont", locale54);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: org.antlr.v4.codegen.target.Python3Target cannot be cast to java.lang.String");
        } catch (java.lang.ClassCastException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "\"\"\"\"\"\"" + "'", str4, "\"\"\"\"\"\"");
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertNull(sTGroup7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\"Hi!Context\"" + "'", str10, "\"Hi!Context\"");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "\"\\\"hi!\\\"\"" + "'", str18, "\"\\\"hi!\\\"\"");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNull(sTGroup25);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "_tsetPython3" + "'", str36, "_tsetPython3");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 64 + "'", int37 == 64);
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertNotNull(strSet40);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "Python3" + "'", str42, "Python3");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "\"\"\"\\0\"\"\"" + "'", str45, "\"\"\"\\0\"\"\"");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "_\\\"_\\\"\\\"\\\"DContext\\\"\\\"Context\\\"\\\"" + "'", str49, "_\\\"_\\\"\\\"\\\"DContext\\\"\\\"Context\\\"\\\"");
        org.junit.Assert.assertNotNull(strSet52);
    }

    @Test
    public void test3695() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3695");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray1 = python3Target0.targetCharValueEscape;
        java.lang.String str2 = python3Target0.language;
        int int3 = python3Target0.getSerializedATNSegmentLimit();
        java.lang.String str5 = python3Target0.encodeIntAsCharEscape(1);
        boolean boolean6 = python3Target0.wantsBaseVisitor();
        org.antlr.v4.tool.Grammar grammar7 = null;
        org.stringtemplate.v4.ST sT8 = null;
        python3Target0.genRecognizerHeaderFile(grammar7, sT8, "\"\"tset\\\"\\\"\\\"hi!\\\"\\\"\"\"");
        org.stringtemplate.v4.STGroup sTGroup11 = python3Target0.templates;
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 29 + "'", int3 == 29);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "\\1" + "'", str5, "\\1");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(sTGroup11);
    }

    @Test
    public void test3696() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3696");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        org.antlr.v4.tool.Grammar grammar3 = null;
        org.stringtemplate.v4.ST sT4 = null;
        python3Target0.genRecognizerHeaderFile(grammar3, sT4, "");
        python3Target0.language = "Python3";
        java.util.Set<java.lang.String> strSet9 = null;
        python3Target0.badWords = strSet9;
        org.antlr.v4.codegen.CodeGenerator codeGenerator11 = null;
        java.lang.String str14 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator11, "\"Hi!Context\"", false);
        java.lang.String str16 = python3Target0.getListLabel("Python3");
        java.lang.String str18 = python3Target0.getTargetStringLiteralFromString("\\0");
        org.antlr.v4.tool.Grammar grammar19 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target20 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str22 = python3Target20.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.tool.Grammar grammar23 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target24 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean25 = python3Target24.supportsOverloadedMethods();
        java.lang.String str26 = python3Target24.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator27 = null;
        java.lang.String str30 = python3Target24.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator27, "", true);
        java.lang.String str31 = python3Target24.getVersion();
        org.antlr.v4.tool.Grammar grammar32 = null;
        int[] intArray33 = new int[] {};
        java.lang.String[] strArray34 = python3Target24.getTokenTypesAsTargetLabels(grammar32, intArray33);
        java.lang.String[] strArray35 = python3Target20.getTokenTypesAsTargetLabels(grammar23, intArray33);
        java.lang.String[] strArray36 = python3Target0.getTokenTypesAsTargetLabels(grammar19, intArray33);
        java.lang.String str38 = python3Target0.getListLabel("\"\"\"\"\"\"Context");
        org.antlr.v4.codegen.CodeGenerator codeGenerator39 = null;
        python3Target0.gen = codeGenerator39;
        org.antlr.v4.tool.Grammar grammar41 = null;
        org.stringtemplate.v4.ST sT42 = null;
        // The following exception was thrown during execution in test generation
        try {
            python3Target0.genListenerFile(grammar41, sT42);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Hi!Context" + "'", str14, "Hi!Context");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Python3" + "'", str16, "Python3");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "\"\\0\"" + "'", str18, "\"\\0\"");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "\"\"\"\"\"\"" + "'", str22, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "4.5.2.1" + "'", str26, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "\"\"" + "'", str30, "\"\"");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "4.5.2.1" + "'", str31, "4.5.2.1");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[]");
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "\"\"\"\"\"\"Context" + "'", str38, "\"\"\"\"\"\"Context");
    }

    @Test
    public void test3697() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3697");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python3Target1.getBadWords();
        java.lang.String str4 = python3Target1.getAltLabelContextStructName("d");
        org.stringtemplate.v4.STGroup sTGroup5 = python3Target1.getTemplates();
        boolean boolean6 = python3Target1.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup7 = python3Target1.getTemplates();
        boolean boolean8 = python3Target1.templatesExist();
        org.stringtemplate.v4.STGroup sTGroup9 = python3Target1.getTemplates();
        org.stringtemplate.v4.STGroup sTGroup10 = python3Target1.templates;
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "DContext" + "'", str4, "DContext");
        org.junit.Assert.assertNotNull(sTGroup5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(sTGroup7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(sTGroup9);
        org.junit.Assert.assertNotNull(sTGroup10);
    }

    @Test
    public void test3698() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3698");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        org.antlr.v4.tool.Grammar grammar3 = null;
        org.stringtemplate.v4.ST sT4 = null;
        python3Target0.genRecognizerHeaderFile(grammar3, sT4, "");
        python3Target0.language = "Python3";
        java.util.Set<java.lang.String> strSet9 = null;
        python3Target0.badWords = strSet9;
        org.stringtemplate.v4.STGroup sTGroup11 = python3Target0.templates;
        org.antlr.v4.codegen.CodeGenerator codeGenerator12 = null;
        java.lang.String str15 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator12, "\"\\\"\\\"\\\"\\\\\\\"\\\\\\\"hi!\\\\\\\"\\\\\\\"\\\"\\\"\\\"\"", true);
        java.lang.String str16 = python3Target0.getVersion();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertNull(sTGroup11);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "\"\\\"\\\"\\\"\\\\\\\"\\\\\\\"hi!\\\\\\\"\\\\\\\"\\\"\\\"\\\"\"" + "'", str15, "\"\\\"\\\"\\\"\\\\\\\"\\\\\\\"hi!\\\\\\\"\\\\\\\"\\\"\\\"\\\"\"");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "4.5.2.1" + "'", str16, "4.5.2.1");
    }

    @Test
    public void test3699() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3699");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        python3Target0.language = "4.5.2.1";
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = python3Target0.getCodeGenerator();
        org.antlr.v4.codegen.CodeGenerator codeGenerator4 = python3Target0.gen;
        org.antlr.v4.codegen.CodeGenerator codeGenerator5 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target6 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator5);
        java.lang.String str8 = python3Target6.getTargetStringLiteralFromString("");
        int int9 = python3Target6.getSerializedATNSegmentLimit();
        boolean boolean10 = python3Target6.wantsBaseVisitor();
        org.stringtemplate.v4.STGroup sTGroup11 = python3Target6.loadTemplates();
        python3Target0.templates = sTGroup11;
        java.lang.String str13 = python3Target0.language;
        org.antlr.v4.codegen.target.Python3Target python3Target14 = new org.antlr.v4.codegen.target.Python3Target();
        python3Target14.language = "";
        org.antlr.v4.codegen.target.Python3Target python3Target17 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean18 = python3Target17.supportsOverloadedMethods();
        java.lang.String str19 = python3Target17.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator20 = null;
        java.lang.String str23 = python3Target17.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator20, "", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator24 = null;
        python3Target17.gen = codeGenerator24;
        java.lang.String[] strArray33 = new java.lang.String[] { "\"\"\"\"", "\\12", "\"\"", "4.5.2.1", "", "\"\"\"\"", "\"\"" };
        java.util.LinkedHashSet<java.lang.String> strSet34 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet34, strArray33);
        python3Target17.badWords = strSet34;
        python3Target14.badWords = strSet34;
        python3Target14.addBadWords();
        java.util.Set<java.lang.String> strSet39 = python3Target14.badWords;
        python3Target0.badWords = strSet39;
        int int41 = python3Target0.getSerializedATNSegmentLimit();
        java.lang.String str42 = python3Target0.language;
        org.antlr.v4.codegen.target.Python3Target python3Target43 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray44 = python3Target43.targetCharValueEscape;
        java.lang.String str45 = python3Target43.language;
        int int46 = python3Target43.getSerializedATNSegmentLimit();
        java.lang.String str49 = python3Target43.getTargetStringLiteralFromString("\"\"\"\"\"\"", false);
        boolean boolean50 = python3Target43.supportsOverloadedMethods();
        org.antlr.v4.codegen.target.Python3Target python3Target51 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str53 = python3Target51.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.codegen.target.Python3Target python3Target54 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean55 = python3Target54.supportsOverloadedMethods();
        java.util.Set<java.lang.String> strSet56 = python3Target54.badWords;
        python3Target51.badWords = strSet56;
        python3Target43.badWords = strSet56;
        python3Target0.badWords = strSet56;
        java.lang.String str60 = python3Target0.getVersion();
        java.lang.String str62 = python3Target0.getImplicitRuleLabel("3");
        org.junit.Assert.assertNull(codeGenerator3);
        org.junit.Assert.assertNull(codeGenerator4);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\"\"" + "'", str8, "\"\"");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 29 + "'", int9 == 29);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(sTGroup11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "4.5.2.1" + "'", str13, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "4.5.2.1" + "'", str19, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "\"\"" + "'", str23, "\"\"");
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(strSet39);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 29 + "'", int41 == 29);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "4.5.2.1" + "'", str42, "4.5.2.1");
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 29 + "'", int46 == 29);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "\"\"\"\"\"\"" + "'", str49, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "\"\"\"\"\"\"" + "'", str53, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(strSet56);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "4.5.2.1" + "'", str60, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "_3" + "'", str62, "_3");
    }

    @Test
    public void test3700() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3700");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        org.antlr.v4.tool.Grammar grammar3 = null;
        org.stringtemplate.v4.ST sT4 = null;
        python3Target0.genRecognizerHeaderFile(grammar3, sT4, "");
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = python3Target0.getCodeGenerator();
        int int8 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str11 = python3Target0.getTargetStringLiteralFromString("\"\\\"Python3\\\"\"", false);
        java.lang.String str13 = python3Target0.getTargetStringLiteralFromString("\\12");
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertNull(codeGenerator7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 64 + "'", int8 == 64);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "\"\\\"Python3\\\"\"" + "'", str11, "\"\\\"Python3\\\"\"");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "\"\\12\"" + "'", str13, "\"\\12\"");
    }

    @Test
    public void test3701() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3701");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python3Target1.getBadWords();
        org.antlr.v4.codegen.target.Python3Target python3Target3 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str5 = python3Target3.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.codegen.target.Python3Target python3Target6 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean7 = python3Target6.supportsOverloadedMethods();
        java.util.Set<java.lang.String> strSet8 = python3Target6.badWords;
        python3Target3.badWords = strSet8;
        python3Target1.badWords = strSet8;
        java.util.Set<java.lang.String> strSet11 = python3Target1.badWords;
        java.lang.String str12 = python3Target1.language;
        org.stringtemplate.v4.STGroup sTGroup13 = python3Target1.getTemplates();
        boolean boolean14 = python3Target1.wantsBaseVisitor();
        org.antlr.v4.codegen.CodeGenerator codeGenerator15 = python3Target1.gen;
        java.lang.String str17 = python3Target1.getTargetStringLiteralFromString("_tsetPython3");
        python3Target1.language = "\"\"\"\"\"\"\"\"Context";
        boolean boolean20 = python3Target1.wantsBaseListener();
        java.lang.String str21 = python3Target1.language;
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "\"\"\"\"\"\"" + "'", str5, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertNotNull(strSet11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Python3" + "'", str12, "Python3");
        org.junit.Assert.assertNotNull(sTGroup13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(codeGenerator15);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "\"_tsetPython3\"" + "'", str17, "\"_tsetPython3\"");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "\"\"\"\"\"\"\"\"Context" + "'", str21, "\"\"\"\"\"\"\"\"Context");
    }

    @Test
    public void test3702() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3702");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        org.antlr.v4.tool.Grammar grammar3 = null;
        org.stringtemplate.v4.ST sT4 = null;
        python3Target0.genRecognizerHeaderFile(grammar3, sT4, "");
        org.antlr.v4.codegen.target.Python3Target python3Target7 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray8 = python3Target7.targetCharValueEscape;
        python3Target0.targetCharValueEscape = strArray8;
        boolean boolean10 = python3Target0.supportsOverloadedMethods();
        boolean boolean11 = python3Target0.wantsBaseListener();
        java.lang.String str13 = python3Target0.getTargetStringLiteralFromString("_tset12");
        python3Target0.addBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator15 = null;
        python3Target0.gen = codeGenerator15;
        org.antlr.v4.tool.ast.GrammarAST grammarAST17 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean18 = python3Target0.visibleGrammarSymbolCausesIssueInGeneratedCode(grammarAST17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "\"_tset12\"" + "'", str13, "\"_tset12\"");
    }

    @Test
    public void test3703() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3703");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!", "hi!" };
        python3Target0.targetCharValueEscape = strArray5;
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = null;
        java.lang.String str10 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator7, "", false);
        java.util.Set<java.lang.String> strSet11 = python3Target0.badWords;
        java.util.Set<java.lang.String> strSet12 = python3Target0.badWords;
        org.antlr.v4.codegen.target.Python3Target python3Target13 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean14 = python3Target13.supportsOverloadedMethods();
        java.lang.String str15 = python3Target13.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator16 = null;
        java.lang.String str19 = python3Target13.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator16, "", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator20 = null;
        python3Target13.gen = codeGenerator20;
        java.lang.String[] strArray29 = new java.lang.String[] { "\"\"\"\"", "\\12", "\"\"", "4.5.2.1", "", "\"\"\"\"", "\"\"" };
        java.util.LinkedHashSet<java.lang.String> strSet30 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet30, strArray29);
        python3Target13.badWords = strSet30;
        boolean boolean33 = python3Target13.templatesExist();
        org.antlr.v4.codegen.CodeGenerator codeGenerator34 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target35 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator34);
        java.lang.String str37 = python3Target35.getTargetStringLiteralFromString("");
        int int38 = python3Target35.getSerializedATNSegmentLimit();
        boolean boolean39 = python3Target35.wantsBaseVisitor();
        org.stringtemplate.v4.STGroup sTGroup40 = python3Target35.loadTemplates();
        python3Target13.templates = sTGroup40;
        python3Target0.templates = sTGroup40;
        java.lang.String str45 = python3Target0.getTargetStringLiteralFromString("\"\\\"\\\"\\\"\\\"\\\"\\\"Contex\"", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator46 = python3Target0.gen;
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNotNull(strSet11);
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "4.5.2.1" + "'", str15, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "\"\"" + "'", str19, "\"\"");
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "\"\"" + "'", str37, "\"\"");
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 29 + "'", int38 == 29);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(sTGroup40);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "\"\"\\\"\\\"\\\"\\\"\\\"\\\"Contex\"\"" + "'", str45, "\"\"\\\"\\\"\\\"\\\"\\\"\\\"Contex\"\"");
        org.junit.Assert.assertNull(codeGenerator46);
    }

    @Test
    public void test3704() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3704");
        java.lang.String str1 = org.stringtemplate.v4.StringRenderer.escapeHTML("\"tset\\\"\\\"_tset12\\\"\\\"Contex\"");
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "\"tset\\\"\\\"_tset12\\\"\\\"Contex\"" + "'", str1, "\"tset\\\"\\\"_tset12\\\"\\\"Contex\"");
    }

    @Test
    public void test3705() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3705");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray1 = python3Target0.targetCharValueEscape;
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = null;
        java.lang.String str6 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator3, "\"\\12\"", false);
        java.lang.String str7 = python3Target0.getLanguage();
        java.lang.String str9 = python3Target0.getTargetStringLiteralFromString("Hi!Context");
        java.lang.String str12 = python3Target0.getTargetStringLiteralFromString("\"\"\\0\"\"", true);
        org.stringtemplate.v4.STGroup sTGroup13 = python3Target0.templates;
        python3Target0.language = "a";
        org.antlr.v4.codegen.target.Python3Target python3Target16 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean17 = python3Target16.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup18 = python3Target16.templates;
        org.antlr.v4.tool.Grammar grammar19 = null;
        org.stringtemplate.v4.ST sT20 = null;
        python3Target16.genRecognizerHeaderFile(grammar19, sT20, "");
        python3Target16.language = "Python3";
        org.antlr.v4.tool.Grammar grammar25 = null;
        org.stringtemplate.v4.ST sT26 = null;
        python3Target16.genRecognizerHeaderFile(grammar25, sT26, "_tset_12");
        java.util.Set<java.lang.String> strSet29 = python3Target16.badWords;
        python3Target0.badWords = strSet29;
        org.antlr.v4.codegen.CodeGenerator codeGenerator31 = null;
        python3Target0.gen = codeGenerator31;
        boolean boolean33 = python3Target0.templatesExist();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str35 = python3Target0.getElementListName("_tset\"\"1\"\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "12" + "'", str6, "12");
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\"Hi!Context\"" + "'", str9, "\"Hi!Context\"");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "\"\"\"\\0\"\"\"" + "'", str12, "\"\"\"\\0\"\"\"");
        org.junit.Assert.assertNull(sTGroup13);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNull(sTGroup18);
        org.junit.Assert.assertNotNull(strSet29);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
    }

    @Test
    public void test3706() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3706");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!", "hi!" };
        python3Target0.targetCharValueEscape = strArray5;
        java.lang.String str8 = python3Target0.getTargetStringLiteralFromString("\"\"");
        java.lang.String str10 = python3Target0.getTargetStringLiteralFromString("\"\"");
        java.lang.String str11 = python3Target0.getLanguage();
        int int12 = python3Target0.getInlineTestSetWordSize();
        boolean boolean13 = python3Target0.wantsBaseVisitor();
        java.lang.String str14 = python3Target0.getLanguage();
        org.antlr.v4.codegen.target.Python3Target python3Target15 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean16 = python3Target15.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup17 = python3Target15.templates;
        java.lang.String[] strArray20 = new java.lang.String[] { "hi!", "hi!" };
        python3Target15.targetCharValueEscape = strArray20;
        org.antlr.v4.codegen.CodeGenerator codeGenerator22 = null;
        java.lang.String str25 = python3Target15.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator22, "", false);
        int int26 = python3Target15.getSerializedATNSegmentLimit();
        java.lang.String str27 = python3Target15.getVersion();
        boolean boolean28 = python3Target15.supportsOverloadedMethods();
        org.antlr.v4.codegen.target.Python3Target python3Target29 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean30 = python3Target29.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup31 = python3Target29.templates;
        java.lang.String[] strArray34 = new java.lang.String[] { "hi!", "hi!" };
        python3Target29.targetCharValueEscape = strArray34;
        java.lang.String[] strArray37 = new java.lang.String[] { "hi!" };
        org.antlr.v4.codegen.target.Python3Target.python3Keywords = strArray37;
        python3Target29.targetCharValueEscape = strArray37;
        org.antlr.v4.codegen.target.Python3Target.python3Keywords = strArray37;
        python3Target15.targetCharValueEscape = strArray37;
        python3Target0.targetCharValueEscape = strArray37;
        org.antlr.v4.codegen.CodeGenerator codeGenerator43 = null;
        python3Target0.gen = codeGenerator43;
        java.lang.String str45 = python3Target0.language;
        org.antlr.v4.tool.Grammar grammar46 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str48 = python3Target0.getTokenTypeAsTargetLabel(grammar46, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\"\"\"\"" + "'", str8, "\"\"\"\"");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\"\"\"\"" + "'", str10, "\"\"\"\"");
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 64 + "'", int12 == 64);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(sTGroup17);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 29 + "'", int26 == 29);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "4.5.2.1" + "'", str27, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNull(sTGroup31);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertNull(str45);
    }

    @Test
    public void test3707() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3707");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python3Target1.getBadWords();
        java.lang.String str4 = python3Target1.getAltLabelContextStructName("d");
        org.stringtemplate.v4.STGroup sTGroup5 = python3Target1.getTemplates();
        boolean boolean6 = python3Target1.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup7 = python3Target1.getTemplates();
        boolean boolean8 = python3Target1.templatesExist();
        org.stringtemplate.v4.STGroup sTGroup9 = python3Target1.getTemplates();
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = null;
        python3Target1.gen = codeGenerator10;
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "DContext" + "'", str4, "DContext");
        org.junit.Assert.assertNotNull(sTGroup5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(sTGroup7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(sTGroup9);
    }

    @Test
    public void test3708() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3708");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python3Target1.getBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = null;
        python3Target1.gen = codeGenerator3;
        java.lang.String str6 = python3Target1.getAltLabelContextStructName("hi!");
        java.lang.String str9 = python3Target1.getTargetStringLiteralFromString("\"hi!\"", true);
        int int10 = python3Target1.getSerializedATNSegmentLimit();
        org.stringtemplate.v4.STGroup sTGroup11 = python3Target1.getTemplates();
        java.lang.String[] strArray12 = python3Target1.targetCharValueEscape;
        java.lang.String str14 = python3Target1.getImplicitRuleLabel("nContex");
        org.antlr.v4.codegen.target.Python3Target python3Target15 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean16 = python3Target15.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup17 = python3Target15.templates;
        java.lang.String[] strArray20 = new java.lang.String[] { "hi!", "hi!" };
        python3Target15.targetCharValueEscape = strArray20;
        java.lang.String str23 = python3Target15.getTargetStringLiteralFromString("\"\"");
        java.lang.String str25 = python3Target15.getTargetStringLiteralFromString("\"\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator26 = python3Target15.gen;
        java.lang.String str27 = python3Target15.language;
        java.util.Set<java.lang.String> strSet28 = python3Target15.badWords;
        python3Target1.badWords = strSet28;
        boolean boolean30 = python3Target1.wantsBaseListener();
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Hi!Context" + "'", str6, "Hi!Context");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\"\\\"hi!\\\"\"" + "'", str9, "\"\\\"hi!\\\"\"");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 29 + "'", int10 == 29);
        org.junit.Assert.assertNotNull(sTGroup11);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "_nContex" + "'", str14, "_nContex");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(sTGroup17);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "\"\"\"\"" + "'", str23, "\"\"\"\"");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "\"\"\"\"" + "'", str25, "\"\"\"\"");
        org.junit.Assert.assertNull(codeGenerator26);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(strSet28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
    }

    @Test
    public void test3709() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3709");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!", "hi!" };
        python3Target0.targetCharValueEscape = strArray5;
        java.lang.String str8 = python3Target0.getTargetStringLiteralFromString("\"\"");
        java.lang.String str10 = python3Target0.getTargetStringLiteralFromString("\"\"");
        java.lang.String str11 = python3Target0.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup12 = python3Target0.templates;
        org.antlr.v4.codegen.CodeGenerator codeGenerator13 = python3Target0.gen;
        boolean boolean14 = python3Target0.templatesExist();
        java.lang.String str15 = python3Target0.getLanguage();
        java.lang.String str17 = python3Target0.getTargetStringLiteralFromString("\"#\"");
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\"\"\"\"" + "'", str8, "\"\"\"\"");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\"\"\"\"" + "'", str10, "\"\"\"\"");
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(sTGroup12);
        org.junit.Assert.assertNull(codeGenerator13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "\"\"#\"\"" + "'", str17, "\"\"#\"\"");
    }

    @Test
    public void test3710() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3710");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python3Target1.getBadWords();
        java.lang.String str4 = python3Target1.getAltLabelContextStructName("d");
        org.stringtemplate.v4.STGroup sTGroup5 = python3Target1.templates;
        org.antlr.v4.tool.ast.GrammarAST grammarAST6 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str7 = python3Target1.getLoopLabel(grammarAST6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "DContext" + "'", str4, "DContext");
        org.junit.Assert.assertNotNull(sTGroup5);
    }

    @Test
    public void test3711() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3711");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python3Target1.getBadWords();
        org.antlr.v4.codegen.target.Python3Target python3Target3 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str5 = python3Target3.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.codegen.target.Python3Target python3Target6 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean7 = python3Target6.supportsOverloadedMethods();
        java.util.Set<java.lang.String> strSet8 = python3Target6.badWords;
        python3Target3.badWords = strSet8;
        python3Target1.badWords = strSet8;
        java.util.Set<java.lang.String> strSet11 = python3Target1.badWords;
        org.antlr.v4.codegen.CodeGenerator codeGenerator12 = python3Target1.getCodeGenerator();
        java.lang.String str14 = python3Target1.getTargetStringLiteralFromString("@");
        boolean boolean15 = python3Target1.wantsBaseListener();
        org.antlr.v4.tool.ast.GrammarAST grammarAST16 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str17 = python3Target1.getLoopLabel(grammarAST16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "\"\"\"\"\"\"" + "'", str5, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertNotNull(strSet11);
        org.junit.Assert.assertNull(codeGenerator12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "\"@\"" + "'", str14, "\"@\"");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test3712() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3712");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python3Target1.getBadWords();
        java.lang.String str4 = python3Target1.getAltLabelContextStructName("d");
        org.stringtemplate.v4.STGroup sTGroup5 = python3Target1.getTemplates();
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = null;
        java.lang.String str9 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator6, "", true);
        org.antlr.v4.codegen.target.Python3Target python3Target10 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray11 = python3Target10.targetCharValueEscape;
        java.lang.String str12 = python3Target10.language;
        int int13 = python3Target10.getSerializedATNSegmentLimit();
        java.util.Set<java.lang.String> strSet14 = python3Target10.badWords;
        int int15 = python3Target10.getSerializedATNSegmentLimit();
        java.lang.String[] strArray16 = python3Target10.targetCharValueEscape;
        python3Target1.targetCharValueEscape = strArray16;
        org.antlr.v4.codegen.target.Python3Target.python3Keywords = strArray16;
        org.antlr.v4.codegen.target.Python3Target.python3Keywords = strArray16;
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "DContext" + "'", str4, "DContext");
        org.junit.Assert.assertNotNull(sTGroup5);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\"\"" + "'", str9, "\"\"");
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 29 + "'", int13 == 29);
        org.junit.Assert.assertNotNull(strSet14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 29 + "'", int15 == 29);
        org.junit.Assert.assertNotNull(strArray16);
    }

    @Test
    public void test3713() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3713");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python3Target1.getBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = null;
        python3Target1.gen = codeGenerator3;
        java.lang.String str6 = python3Target1.getAltLabelContextStructName("hi!");
        java.lang.String str9 = python3Target1.getTargetStringLiteralFromString("\"hi!\"", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = null;
        python3Target1.gen = codeGenerator10;
        org.antlr.v4.tool.Grammar grammar12 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target13 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray14 = python3Target13.targetCharValueEscape;
        org.stringtemplate.v4.STGroup sTGroup15 = python3Target13.templates;
        int int16 = python3Target13.getInlineTestSetWordSize();
        org.antlr.v4.codegen.CodeGenerator codeGenerator17 = python3Target13.gen;
        org.antlr.v4.tool.Grammar grammar18 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target19 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str21 = python3Target19.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.tool.Grammar grammar22 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target23 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean24 = python3Target23.supportsOverloadedMethods();
        java.lang.String str25 = python3Target23.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator26 = null;
        java.lang.String str29 = python3Target23.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator26, "", true);
        java.lang.String str30 = python3Target23.getVersion();
        org.antlr.v4.tool.Grammar grammar31 = null;
        int[] intArray32 = new int[] {};
        java.lang.String[] strArray33 = python3Target23.getTokenTypesAsTargetLabels(grammar31, intArray32);
        java.lang.String[] strArray34 = python3Target19.getTokenTypesAsTargetLabels(grammar22, intArray32);
        java.lang.String[] strArray35 = python3Target13.getTokenTypesAsTargetLabels(grammar18, intArray32);
        java.lang.String[] strArray36 = python3Target1.getTokenTypesAsTargetLabels(grammar12, intArray32);
        java.lang.String[] strArray37 = python3Target1.targetCharValueEscape;
        java.lang.String str39 = python3Target1.getImplicitRuleLabel("#");
        java.lang.String str41 = python3Target1.getAltLabelContextStructName("\"\\\"\\\"\\\\1\\\"\\\"\"");
        java.util.Set<java.lang.String> strSet42 = python3Target1.badWords;
        java.lang.String str44 = python3Target1.getImplicitSetLabel("___tset\"\"\"\"\"\"\"\"ContextContextContextContext");
        java.util.Set<java.lang.String> strSet45 = python3Target1.getBadWords();
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Hi!Context" + "'", str6, "Hi!Context");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\"\\\"hi!\\\"\"" + "'", str9, "\"\\\"hi!\\\"\"");
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertNull(sTGroup15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 64 + "'", int16 == 64);
        org.junit.Assert.assertNull(codeGenerator17);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "\"\"\"\"\"\"" + "'", str21, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "4.5.2.1" + "'", str25, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "\"\"" + "'", str29, "\"\"");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "4.5.2.1" + "'", str30, "4.5.2.1");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[]");
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "_#" + "'", str39, "_#");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "\"\\\"\\\"\\\\1\\\"\\\"\"Context" + "'", str41, "\"\\\"\\\"\\\\1\\\"\\\"\"Context");
        org.junit.Assert.assertNotNull(strSet42);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "_tset___tset\"\"\"\"\"\"\"\"ContextContextContextContext" + "'", str44, "_tset___tset\"\"\"\"\"\"\"\"ContextContextContextContext");
        org.junit.Assert.assertNotNull(strSet45);
    }

    @Test
    public void test3714() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3714");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray1 = python3Target0.targetCharValueEscape;
        java.lang.String str2 = python3Target0.language;
        int int3 = python3Target0.getSerializedATNSegmentLimit();
        org.antlr.v4.codegen.CodeGenerator codeGenerator4 = python3Target0.getCodeGenerator();
        org.antlr.v4.codegen.CodeGenerator codeGenerator5 = python3Target0.gen;
        org.antlr.v4.codegen.target.Python3Target python3Target6 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean7 = python3Target6.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup8 = python3Target6.templates;
        org.antlr.v4.tool.Grammar grammar9 = null;
        org.stringtemplate.v4.ST sT10 = null;
        python3Target6.genRecognizerHeaderFile(grammar9, sT10, "");
        python3Target6.language = "Python3";
        int int15 = python3Target6.getSerializedATNSegmentLimit();
        java.lang.String str17 = python3Target6.getListLabel("_tsetPython3");
        org.stringtemplate.v4.STGroup sTGroup18 = python3Target6.loadTemplates();
        int int19 = python3Target6.getInlineTestSetWordSize();
        java.lang.String str22 = python3Target6.getTargetStringLiteralFromString("\"\"_tset12\"\"", true);
        org.stringtemplate.v4.STGroup sTGroup23 = python3Target6.loadTemplates();
        org.stringtemplate.v4.STGroup sTGroup24 = python3Target6.templates;
        org.antlr.v4.codegen.CodeGenerator codeGenerator25 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target26 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator25);
        java.util.Set<java.lang.String> strSet27 = python3Target26.getBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator28 = null;
        python3Target26.gen = codeGenerator28;
        java.lang.String str31 = python3Target26.getAltLabelContextStructName("hi!");
        java.lang.String str34 = python3Target26.getTargetStringLiteralFromString("\"hi!\"", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator35 = null;
        python3Target26.gen = codeGenerator35;
        org.antlr.v4.tool.Grammar grammar37 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target38 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray39 = python3Target38.targetCharValueEscape;
        org.stringtemplate.v4.STGroup sTGroup40 = python3Target38.templates;
        int int41 = python3Target38.getInlineTestSetWordSize();
        org.antlr.v4.codegen.CodeGenerator codeGenerator42 = python3Target38.gen;
        org.antlr.v4.tool.Grammar grammar43 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target44 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str46 = python3Target44.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.tool.Grammar grammar47 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target48 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean49 = python3Target48.supportsOverloadedMethods();
        java.lang.String str50 = python3Target48.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator51 = null;
        java.lang.String str54 = python3Target48.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator51, "", true);
        java.lang.String str55 = python3Target48.getVersion();
        org.antlr.v4.tool.Grammar grammar56 = null;
        int[] intArray57 = new int[] {};
        java.lang.String[] strArray58 = python3Target48.getTokenTypesAsTargetLabels(grammar56, intArray57);
        java.lang.String[] strArray59 = python3Target44.getTokenTypesAsTargetLabels(grammar47, intArray57);
        java.lang.String[] strArray60 = python3Target38.getTokenTypesAsTargetLabels(grammar43, intArray57);
        java.lang.String[] strArray61 = python3Target26.getTokenTypesAsTargetLabels(grammar37, intArray57);
        java.lang.String[] strArray62 = python3Target26.targetCharValueEscape;
        java.lang.String str64 = python3Target26.getImplicitRuleLabel("#");
        org.antlr.v4.codegen.target.Python3Target python3Target65 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean66 = python3Target65.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup67 = python3Target65.templates;
        org.antlr.v4.tool.Grammar grammar68 = null;
        org.stringtemplate.v4.ST sT69 = null;
        python3Target65.genRecognizerHeaderFile(grammar68, sT69, "");
        python3Target65.language = "Python3";
        java.util.Set<java.lang.String> strSet74 = null;
        python3Target65.badWords = strSet74;
        boolean boolean76 = python3Target65.wantsBaseVisitor();
        org.antlr.v4.codegen.target.Python3Target python3Target77 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean78 = python3Target77.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup79 = python3Target77.templates;
        java.lang.String[] strArray82 = new java.lang.String[] { "hi!", "hi!" };
        python3Target77.targetCharValueEscape = strArray82;
        org.antlr.v4.codegen.CodeGenerator codeGenerator84 = null;
        java.lang.String str87 = python3Target77.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator84, "", false);
        java.util.Set<java.lang.String> strSet88 = python3Target77.badWords;
        java.util.Set<java.lang.String> strSet89 = python3Target77.badWords;
        python3Target65.badWords = strSet89;
        python3Target26.badWords = strSet89;
        python3Target6.badWords = strSet89;
        python3Target0.badWords = strSet89;
        python3Target0.addBadWords();
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 29 + "'", int3 == 29);
        org.junit.Assert.assertNull(codeGenerator4);
        org.junit.Assert.assertNull(codeGenerator5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(sTGroup8);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 29 + "'", int15 == 29);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "_tsetPython3" + "'", str17, "_tsetPython3");
        org.junit.Assert.assertNotNull(sTGroup18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 64 + "'", int19 == 64);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "\"\"\"_tset12\"\"\"" + "'", str22, "\"\"\"_tset12\"\"\"");
        org.junit.Assert.assertNotNull(sTGroup23);
        org.junit.Assert.assertNotNull(sTGroup24);
        org.junit.Assert.assertNotNull(strSet27);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "Hi!Context" + "'", str31, "Hi!Context");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "\"\\\"hi!\\\"\"" + "'", str34, "\"\\\"hi!\\\"\"");
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertNull(sTGroup40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 64 + "'", int41 == 64);
        org.junit.Assert.assertNull(codeGenerator42);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "\"\"\"\"\"\"" + "'", str46, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "4.5.2.1" + "'", str50, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "\"\"" + "'", str54, "\"\"");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "4.5.2.1" + "'", str55, "4.5.2.1");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[]");
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertNotNull(strArray59);
        org.junit.Assert.assertNotNull(strArray60);
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertNotNull(strArray62);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "_#" + "'", str64, "_#");
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNull(sTGroup67);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNull(sTGroup79);
        org.junit.Assert.assertNotNull(strArray82);
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "" + "'", str87, "");
        org.junit.Assert.assertNotNull(strSet88);
        org.junit.Assert.assertNotNull(strSet89);
    }

    @Test
    public void test3715() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3715");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str2 = python3Target0.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.tool.Grammar grammar3 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target4 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean5 = python3Target4.supportsOverloadedMethods();
        java.lang.String str6 = python3Target4.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = null;
        java.lang.String str10 = python3Target4.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator7, "", true);
        java.lang.String str11 = python3Target4.getVersion();
        org.antlr.v4.tool.Grammar grammar12 = null;
        int[] intArray13 = new int[] {};
        java.lang.String[] strArray14 = python3Target4.getTokenTypesAsTargetLabels(grammar12, intArray13);
        java.lang.String[] strArray15 = python3Target0.getTokenTypesAsTargetLabels(grammar3, intArray13);
        org.stringtemplate.v4.STGroup sTGroup16 = python3Target0.templates;
        java.lang.String str18 = python3Target0.encodeIntAsCharEscape((int) ' ');
        int int19 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str20 = python3Target0.getLanguage();
        org.antlr.v4.tool.Grammar grammar21 = null;
        org.stringtemplate.v4.ST sT22 = null;
        // The following exception was thrown during execution in test generation
        try {
            python3Target0.genListenerFile(grammar21, sT22);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "\"\"\"\"\"\"" + "'", str2, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "4.5.2.1" + "'", str6, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\"\"" + "'", str10, "\"\"");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "4.5.2.1" + "'", str11, "4.5.2.1");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[]");
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNull(sTGroup16);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + " " + "'", str18, " ");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 64 + "'", int19 == 64);
        org.junit.Assert.assertNull(str20);
    }

    @Test
    public void test3716() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3716");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!", "hi!" };
        python3Target0.targetCharValueEscape = strArray5;
        java.lang.String str8 = python3Target0.getTargetStringLiteralFromString("\"\"");
        java.lang.String str9 = python3Target0.getLanguage();
        org.antlr.v4.codegen.target.Python3Target python3Target10 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray11 = python3Target10.targetCharValueEscape;
        org.stringtemplate.v4.STGroup sTGroup12 = python3Target10.templates;
        int int13 = python3Target10.getInlineTestSetWordSize();
        org.antlr.v4.codegen.CodeGenerator codeGenerator14 = python3Target10.gen;
        org.antlr.v4.tool.Grammar grammar15 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target16 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str18 = python3Target16.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.tool.Grammar grammar19 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target20 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean21 = python3Target20.supportsOverloadedMethods();
        java.lang.String str22 = python3Target20.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator23 = null;
        java.lang.String str26 = python3Target20.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator23, "", true);
        java.lang.String str27 = python3Target20.getVersion();
        org.antlr.v4.tool.Grammar grammar28 = null;
        int[] intArray29 = new int[] {};
        java.lang.String[] strArray30 = python3Target20.getTokenTypesAsTargetLabels(grammar28, intArray29);
        java.lang.String[] strArray31 = python3Target16.getTokenTypesAsTargetLabels(grammar19, intArray29);
        java.lang.String[] strArray32 = python3Target10.getTokenTypesAsTargetLabels(grammar15, intArray29);
        python3Target0.targetCharValueEscape = strArray32;
        org.stringtemplate.v4.STGroup sTGroup34 = python3Target0.templates;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str36 = python3Target0.getElementName("\"\"\\nContext\"\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\"\"\"\"" + "'", str8, "\"\"\"\"");
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNull(sTGroup12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 64 + "'", int13 == 64);
        org.junit.Assert.assertNull(codeGenerator14);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "\"\"\"\"\"\"" + "'", str18, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "4.5.2.1" + "'", str22, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "\"\"" + "'", str26, "\"\"");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "4.5.2.1" + "'", str27, "4.5.2.1");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[]");
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertNull(sTGroup34);
    }

    @Test
    public void test3717() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3717");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        org.antlr.v4.codegen.CodeGenerator codeGenerator1 = python3Target0.getCodeGenerator();
        org.antlr.v4.codegen.CodeGenerator codeGenerator2 = python3Target0.gen;
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = python3Target0.getCodeGenerator();
        boolean boolean4 = python3Target0.wantsBaseVisitor();
        java.lang.String str6 = python3Target0.encodeIntAsCharEscape(29);
        java.lang.String str7 = python3Target0.getVersion();
        java.lang.String[] strArray8 = python3Target0.targetCharValueEscape;
        org.junit.Assert.assertNull(codeGenerator1);
        org.junit.Assert.assertNull(codeGenerator2);
        org.junit.Assert.assertNull(codeGenerator3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\\35" + "'", str6, "\\35");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "4.5.2.1" + "'", str7, "4.5.2.1");
        org.junit.Assert.assertNotNull(strArray8);
    }

    @Test
    public void test3718() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3718");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.lang.String str3 = python3Target1.getTargetStringLiteralFromString("");
        int int4 = python3Target1.getSerializedATNSegmentLimit();
        boolean boolean5 = python3Target1.wantsBaseVisitor();
        org.stringtemplate.v4.STGroup sTGroup6 = python3Target1.loadTemplates();
        java.lang.String str7 = python3Target1.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup8 = python3Target1.loadTemplates();
        org.antlr.v4.tool.ast.GrammarAST grammarAST9 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean10 = python3Target1.grammarSymbolCausesIssueInGeneratedCode(grammarAST9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "\"\"" + "'", str3, "\"\"");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 29 + "'", int4 == 29);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(sTGroup6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Python3" + "'", str7, "Python3");
        org.junit.Assert.assertNotNull(sTGroup8);
    }

    @Test
    public void test3719() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3719");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        org.antlr.v4.tool.Grammar grammar3 = null;
        org.stringtemplate.v4.ST sT4 = null;
        python3Target0.genRecognizerHeaderFile(grammar3, sT4, "");
        python3Target0.language = "Python3";
        java.util.Set<java.lang.String> strSet9 = null;
        python3Target0.badWords = strSet9;
        org.antlr.v4.codegen.CodeGenerator codeGenerator11 = null;
        java.lang.String str14 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator11, "\"Hi!Context\"", false);
        org.antlr.v4.tool.Grammar grammar15 = null;
        org.stringtemplate.v4.ST sT16 = null;
        python3Target0.genRecognizerHeaderFile(grammar15, sT16, "\"\"");
        boolean boolean19 = python3Target0.wantsBaseListener();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Hi!Context" + "'", str14, "Hi!Context");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    }

    @Test
    public void test3720() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3720");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        org.antlr.v4.codegen.CodeGenerator codeGenerator1 = python3Target0.getCodeGenerator();
        org.antlr.v4.codegen.CodeGenerator codeGenerator2 = python3Target0.gen;
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = python3Target0.getCodeGenerator();
        boolean boolean4 = python3Target0.wantsBaseVisitor();
        java.lang.String[] strArray5 = null;
        python3Target0.targetCharValueEscape = strArray5;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str8 = python3Target0.getImplicitSetLabel("\"\\\"4.5.2.1\"Context");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(codeGenerator1);
        org.junit.Assert.assertNull(codeGenerator2);
        org.junit.Assert.assertNull(codeGenerator3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    }

    @Test
    public void test3721() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3721");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        java.lang.String str2 = python3Target0.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = null;
        java.lang.String str6 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator3, "", true);
        java.lang.String str7 = python3Target0.getVersion();
        org.antlr.v4.tool.Grammar grammar8 = null;
        int[] intArray9 = new int[] {};
        java.lang.String[] strArray10 = python3Target0.getTokenTypesAsTargetLabels(grammar8, intArray9);
        java.lang.String[] strArray11 = python3Target0.targetCharValueEscape;
        java.util.Set<java.lang.String> strSet12 = python3Target0.badWords;
        python3Target0.addBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator14 = null;
        python3Target0.gen = codeGenerator14;
        org.antlr.v4.tool.Grammar grammar16 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str18 = python3Target0.getTokenTypeAsTargetLabel(grammar16, (int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "4.5.2.1" + "'", str2, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\"\"" + "'", str6, "\"\"");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "4.5.2.1" + "'", str7, "4.5.2.1");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[]");
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(strSet12);
    }

    @Test
    public void test3722() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3722");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray1 = python3Target0.targetCharValueEscape;
        java.lang.String str2 = python3Target0.language;
        int int3 = python3Target0.getSerializedATNSegmentLimit();
        java.lang.String str5 = python3Target0.encodeIntAsCharEscape(1);
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = python3Target0.gen;
        boolean boolean7 = python3Target0.wantsBaseVisitor();
        org.antlr.v4.tool.Rule rule8 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str9 = python3Target0.getRuleFunctionContextStructName(rule8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 29 + "'", int3 == 29);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "\\1" + "'", str5, "\\1");
        org.junit.Assert.assertNull(codeGenerator6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    public void test3723() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3723");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        java.lang.String str2 = python3Target0.getVersion();
        boolean boolean3 = python3Target0.supportsOverloadedMethods();
        org.antlr.v4.codegen.CodeGenerator codeGenerator4 = null;
        java.lang.String str7 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator4, "", false);
        java.lang.String str8 = python3Target0.getLanguage();
        org.antlr.v4.tool.Grammar grammar9 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target10 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray11 = python3Target10.targetCharValueEscape;
        org.stringtemplate.v4.STGroup sTGroup12 = python3Target10.templates;
        org.antlr.v4.codegen.CodeGenerator codeGenerator13 = null;
        java.lang.String str16 = python3Target10.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator13, "\"\\12\"", false);
        int int17 = python3Target10.getSerializedATNSegmentLimit();
        boolean boolean18 = python3Target10.templatesExist();
        boolean boolean19 = python3Target10.supportsOverloadedMethods();
        org.antlr.v4.tool.Grammar grammar20 = null;
        org.stringtemplate.v4.ST sT21 = null;
        python3Target10.genRecognizerHeaderFile(grammar20, sT21, "_tsetPython3");
        java.util.Set<java.lang.String> strSet24 = python3Target10.badWords;
        org.antlr.v4.codegen.CodeGenerator codeGenerator25 = null;
        python3Target10.gen = codeGenerator25;
        org.antlr.v4.codegen.CodeGenerator codeGenerator27 = null;
        python3Target10.gen = codeGenerator27;
        boolean boolean29 = python3Target10.supportsOverloadedMethods();
        org.antlr.v4.tool.Grammar grammar30 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target31 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean32 = python3Target31.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup33 = python3Target31.templates;
        java.lang.String[] strArray36 = new java.lang.String[] { "hi!", "hi!" };
        python3Target31.targetCharValueEscape = strArray36;
        java.lang.String[] strArray39 = new java.lang.String[] { "hi!" };
        org.antlr.v4.codegen.target.Python3Target.python3Keywords = strArray39;
        python3Target31.targetCharValueEscape = strArray39;
        java.util.Set<java.lang.String> strSet42 = python3Target31.getBadWords();
        int int43 = python3Target31.getInlineTestSetWordSize();
        boolean boolean44 = python3Target31.wantsBaseListener();
        org.antlr.v4.tool.Grammar grammar45 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target46 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray47 = python3Target46.targetCharValueEscape;
        org.stringtemplate.v4.STGroup sTGroup48 = python3Target46.templates;
        int int49 = python3Target46.getInlineTestSetWordSize();
        org.antlr.v4.codegen.CodeGenerator codeGenerator50 = python3Target46.gen;
        org.antlr.v4.tool.Grammar grammar51 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target52 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str54 = python3Target52.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.tool.Grammar grammar55 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target56 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean57 = python3Target56.supportsOverloadedMethods();
        java.lang.String str58 = python3Target56.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator59 = null;
        java.lang.String str62 = python3Target56.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator59, "", true);
        java.lang.String str63 = python3Target56.getVersion();
        org.antlr.v4.tool.Grammar grammar64 = null;
        int[] intArray65 = new int[] {};
        java.lang.String[] strArray66 = python3Target56.getTokenTypesAsTargetLabels(grammar64, intArray65);
        java.lang.String[] strArray67 = python3Target52.getTokenTypesAsTargetLabels(grammar55, intArray65);
        java.lang.String[] strArray68 = python3Target46.getTokenTypesAsTargetLabels(grammar51, intArray65);
        java.lang.String[] strArray69 = python3Target31.getTokenTypesAsTargetLabels(grammar45, intArray65);
        java.lang.String[] strArray70 = python3Target10.getTokenTypesAsTargetLabels(grammar30, intArray65);
        java.lang.String[] strArray71 = python3Target0.getTokenTypesAsTargetLabels(grammar9, intArray65);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "4.5.2.1" + "'", str2, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNull(sTGroup12);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "12" + "'", str16, "12");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 29 + "'", int17 == 29);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(strSet24);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNull(sTGroup33);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertNotNull(strSet42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 64 + "'", int43 == 64);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertNull(sTGroup48);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 64 + "'", int49 == 64);
        org.junit.Assert.assertNull(codeGenerator50);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "\"\"\"\"\"\"" + "'", str54, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "4.5.2.1" + "'", str58, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "\"\"" + "'", str62, "\"\"");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "4.5.2.1" + "'", str63, "4.5.2.1");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[]");
        org.junit.Assert.assertNotNull(strArray66);
        org.junit.Assert.assertNotNull(strArray67);
        org.junit.Assert.assertNotNull(strArray68);
        org.junit.Assert.assertNotNull(strArray69);
        org.junit.Assert.assertNotNull(strArray70);
        org.junit.Assert.assertNotNull(strArray71);
    }

    @Test
    public void test3724() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3724");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!", "hi!" };
        python3Target0.targetCharValueEscape = strArray5;
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = null;
        java.lang.String str10 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator7, "", false);
        java.util.Set<java.lang.String> strSet11 = python3Target0.badWords;
        java.lang.String str13 = python3Target0.getTargetStringLiteralFromString("12");
        int int14 = python3Target0.getSerializedATNSegmentLimit();
        java.util.Set<java.lang.String> strSet15 = python3Target0.badWords;
        java.lang.String str17 = python3Target0.encodeIntAsCharEscape(10);
        java.lang.String str18 = python3Target0.language;
        java.lang.Class<?> wildcardClass19 = python3Target0.getClass();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNotNull(strSet11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "\"12\"" + "'", str13, "\"12\"");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 29 + "'", int14 == 29);
        org.junit.Assert.assertNotNull(strSet15);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "\\12" + "'", str17, "\\12");
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test3725() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3725");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!", "hi!" };
        python3Target0.targetCharValueEscape = strArray5;
        java.lang.String str8 = python3Target0.getTargetStringLiteralFromString("\"\"");
        java.lang.String str10 = python3Target0.getTargetStringLiteralFromString("\"\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator11 = null;
        python3Target0.gen = codeGenerator11;
        int int13 = python3Target0.getSerializedATNSegmentLimit();
        java.lang.Class<?> wildcardClass14 = python3Target0.getClass();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\"\"\"\"" + "'", str8, "\"\"\"\"");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\"\"\"\"" + "'", str10, "\"\"\"\"");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 29 + "'", int13 == 29);
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test3726() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3726");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray1 = python3Target0.targetCharValueEscape;
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = null;
        java.lang.String str6 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator3, "\"\\12\"", false);
        int int7 = python3Target0.getSerializedATNSegmentLimit();
        java.lang.String str9 = python3Target0.encodeIntAsCharEscape(0);
        python3Target0.addBadWords();
        java.util.Set<java.lang.String> strSet11 = python3Target0.getBadWords();
        org.stringtemplate.v4.STGroup sTGroup12 = python3Target0.templates;
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "12" + "'", str6, "12");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 29 + "'", int7 == 29);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\\0" + "'", str9, "\\0");
        org.junit.Assert.assertNotNull(strSet11);
        org.junit.Assert.assertNull(sTGroup12);
    }

    @Test
    public void test3727() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3727");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray1 = python3Target0.targetCharValueEscape;
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = null;
        java.lang.String str6 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator3, "\"\\12\"", false);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str8 = python3Target0.getListLabel("\"_\\\"\\\\\\\"Python3\\\\\\\"\\\"\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "12" + "'", str6, "12");
    }

    @Test
    public void test3728() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3728");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        java.lang.String str2 = python3Target0.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = python3Target0.getCodeGenerator();
        org.stringtemplate.v4.STGroup sTGroup4 = null;
        python3Target0.templates = sTGroup4;
        org.stringtemplate.v4.STGroup sTGroup6 = python3Target0.templates;
        java.lang.String[] strArray7 = python3Target0.targetCharValueEscape;
        java.util.Set<java.lang.String> strSet8 = python3Target0.badWords;
        java.util.Set<java.lang.String> strSet9 = python3Target0.getBadWords();
        python3Target0.addBadWords();
        org.stringtemplate.v4.STGroup sTGroup11 = python3Target0.templates;
        org.antlr.v4.tool.Grammar grammar12 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target13 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean14 = python3Target13.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup15 = python3Target13.templates;
        org.antlr.v4.tool.Grammar grammar16 = null;
        org.stringtemplate.v4.ST sT17 = null;
        python3Target13.genRecognizerHeaderFile(grammar16, sT17, "");
        python3Target13.language = "Python3";
        int int22 = python3Target13.getSerializedATNSegmentLimit();
        java.lang.String str24 = python3Target13.getListLabel("_tsetPython3");
        org.stringtemplate.v4.STGroup sTGroup25 = python3Target13.loadTemplates();
        org.antlr.v4.codegen.CodeGenerator codeGenerator26 = python3Target13.getCodeGenerator();
        org.antlr.v4.tool.Grammar grammar27 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target28 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray29 = python3Target28.targetCharValueEscape;
        python3Target28.addBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator31 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target32 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator31);
        java.lang.String str34 = python3Target32.getTargetStringLiteralFromString("");
        int int35 = python3Target32.getSerializedATNSegmentLimit();
        boolean boolean36 = python3Target32.wantsBaseVisitor();
        org.stringtemplate.v4.STGroup sTGroup37 = python3Target32.loadTemplates();
        python3Target28.templates = sTGroup37;
        org.antlr.v4.tool.Grammar grammar39 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target40 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray41 = python3Target40.targetCharValueEscape;
        org.stringtemplate.v4.STGroup sTGroup42 = python3Target40.templates;
        int int43 = python3Target40.getInlineTestSetWordSize();
        org.antlr.v4.codegen.CodeGenerator codeGenerator44 = python3Target40.gen;
        org.antlr.v4.tool.Grammar grammar45 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target46 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str48 = python3Target46.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.tool.Grammar grammar49 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target50 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean51 = python3Target50.supportsOverloadedMethods();
        java.lang.String str52 = python3Target50.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator53 = null;
        java.lang.String str56 = python3Target50.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator53, "", true);
        java.lang.String str57 = python3Target50.getVersion();
        org.antlr.v4.tool.Grammar grammar58 = null;
        int[] intArray59 = new int[] {};
        java.lang.String[] strArray60 = python3Target50.getTokenTypesAsTargetLabels(grammar58, intArray59);
        java.lang.String[] strArray61 = python3Target46.getTokenTypesAsTargetLabels(grammar49, intArray59);
        java.lang.String[] strArray62 = python3Target40.getTokenTypesAsTargetLabels(grammar45, intArray59);
        java.lang.String[] strArray63 = python3Target28.getTokenTypesAsTargetLabels(grammar39, intArray59);
        java.lang.String[] strArray64 = python3Target13.getTokenTypesAsTargetLabels(grammar27, intArray59);
        java.lang.String[] strArray65 = python3Target0.getTokenTypesAsTargetLabels(grammar12, intArray59);
        java.lang.Class<?> wildcardClass66 = intArray59.getClass();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "4.5.2.1" + "'", str2, "4.5.2.1");
        org.junit.Assert.assertNull(codeGenerator3);
        org.junit.Assert.assertNull(sTGroup6);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertNotNull(strSet9);
        org.junit.Assert.assertNull(sTGroup11);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(sTGroup15);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 29 + "'", int22 == 29);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "_tsetPython3" + "'", str24, "_tsetPython3");
        org.junit.Assert.assertNotNull(sTGroup25);
        org.junit.Assert.assertNull(codeGenerator26);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "\"\"" + "'", str34, "\"\"");
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 29 + "'", int35 == 29);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(sTGroup37);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertNull(sTGroup42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 64 + "'", int43 == 64);
        org.junit.Assert.assertNull(codeGenerator44);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "\"\"\"\"\"\"" + "'", str48, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "4.5.2.1" + "'", str52, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "\"\"" + "'", str56, "\"\"");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "4.5.2.1" + "'", str57, "4.5.2.1");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[]");
        org.junit.Assert.assertNotNull(strArray60);
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertNotNull(strArray62);
        org.junit.Assert.assertNotNull(strArray63);
        org.junit.Assert.assertNotNull(strArray64);
        org.junit.Assert.assertNotNull(strArray65);
        org.junit.Assert.assertNotNull(wildcardClass66);
    }

    @Test
    public void test3729() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3729");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!", "hi!" };
        python3Target0.targetCharValueEscape = strArray5;
        java.lang.String str8 = python3Target0.getTargetStringLiteralFromString("\"\"");
        java.lang.String str10 = python3Target0.getTargetStringLiteralFromString("\"\"");
        java.lang.String str11 = python3Target0.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup12 = python3Target0.templates;
        org.antlr.v4.codegen.CodeGenerator codeGenerator13 = python3Target0.gen;
        java.lang.String str14 = python3Target0.getVersion();
        boolean boolean15 = python3Target0.templatesExist();
        org.antlr.v4.codegen.CodeGenerator codeGenerator16 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target17 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator16);
        java.util.Set<java.lang.String> strSet18 = python3Target17.getBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator19 = null;
        python3Target17.gen = codeGenerator19;
        java.lang.String str22 = python3Target17.getAltLabelContextStructName("hi!");
        java.lang.String str25 = python3Target17.getTargetStringLiteralFromString("\"hi!\"", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator26 = null;
        python3Target17.gen = codeGenerator26;
        org.antlr.v4.tool.Grammar grammar28 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target29 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray30 = python3Target29.targetCharValueEscape;
        org.stringtemplate.v4.STGroup sTGroup31 = python3Target29.templates;
        int int32 = python3Target29.getInlineTestSetWordSize();
        org.antlr.v4.codegen.CodeGenerator codeGenerator33 = python3Target29.gen;
        org.antlr.v4.tool.Grammar grammar34 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target35 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str37 = python3Target35.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.tool.Grammar grammar38 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target39 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean40 = python3Target39.supportsOverloadedMethods();
        java.lang.String str41 = python3Target39.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator42 = null;
        java.lang.String str45 = python3Target39.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator42, "", true);
        java.lang.String str46 = python3Target39.getVersion();
        org.antlr.v4.tool.Grammar grammar47 = null;
        int[] intArray48 = new int[] {};
        java.lang.String[] strArray49 = python3Target39.getTokenTypesAsTargetLabels(grammar47, intArray48);
        java.lang.String[] strArray50 = python3Target35.getTokenTypesAsTargetLabels(grammar38, intArray48);
        java.lang.String[] strArray51 = python3Target29.getTokenTypesAsTargetLabels(grammar34, intArray48);
        java.lang.String[] strArray52 = python3Target17.getTokenTypesAsTargetLabels(grammar28, intArray48);
        java.lang.String str54 = python3Target17.getAltLabelContextStructName("\"Python3\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator55 = python3Target17.gen;
        org.antlr.v4.tool.Grammar grammar56 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target57 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean58 = python3Target57.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup59 = python3Target57.templates;
        java.lang.String[] strArray62 = new java.lang.String[] { "hi!", "hi!" };
        python3Target57.targetCharValueEscape = strArray62;
        org.antlr.v4.codegen.CodeGenerator codeGenerator64 = null;
        java.lang.String str67 = python3Target57.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator64, "", false);
        org.antlr.v4.tool.Grammar grammar68 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target69 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str71 = python3Target69.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.tool.Grammar grammar72 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target73 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean74 = python3Target73.supportsOverloadedMethods();
        java.lang.String str75 = python3Target73.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator76 = null;
        java.lang.String str79 = python3Target73.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator76, "", true);
        java.lang.String str80 = python3Target73.getVersion();
        org.antlr.v4.tool.Grammar grammar81 = null;
        int[] intArray82 = new int[] {};
        java.lang.String[] strArray83 = python3Target73.getTokenTypesAsTargetLabels(grammar81, intArray82);
        java.lang.String[] strArray84 = python3Target69.getTokenTypesAsTargetLabels(grammar72, intArray82);
        java.lang.String[] strArray85 = python3Target57.getTokenTypesAsTargetLabels(grammar68, intArray82);
        java.lang.String[] strArray86 = python3Target17.getTokenTypesAsTargetLabels(grammar56, intArray82);
        python3Target0.targetCharValueEscape = strArray86;
        python3Target0.language = "\"\"__tset\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"ContextContextContext\"\"";
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\"\"\"\"" + "'", str8, "\"\"\"\"");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\"\"\"\"" + "'", str10, "\"\"\"\"");
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(sTGroup12);
        org.junit.Assert.assertNull(codeGenerator13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "4.5.2.1" + "'", str14, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(strSet18);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "Hi!Context" + "'", str22, "Hi!Context");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "\"\\\"hi!\\\"\"" + "'", str25, "\"\\\"hi!\\\"\"");
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertNull(sTGroup31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 64 + "'", int32 == 64);
        org.junit.Assert.assertNull(codeGenerator33);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "\"\"\"\"\"\"" + "'", str37, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "4.5.2.1" + "'", str41, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "\"\"" + "'", str45, "\"\"");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "4.5.2.1" + "'", str46, "4.5.2.1");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[]");
        org.junit.Assert.assertNotNull(strArray49);
        org.junit.Assert.assertNotNull(strArray50);
        org.junit.Assert.assertNotNull(strArray51);
        org.junit.Assert.assertNotNull(strArray52);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "\"Python3\"Context" + "'", str54, "\"Python3\"Context");
        org.junit.Assert.assertNull(codeGenerator55);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNull(sTGroup59);
        org.junit.Assert.assertNotNull(strArray62);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "" + "'", str67, "");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "\"\"\"\"\"\"" + "'", str71, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "4.5.2.1" + "'", str75, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "\"\"" + "'", str79, "\"\"");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "4.5.2.1" + "'", str80, "4.5.2.1");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[]");
        org.junit.Assert.assertNotNull(strArray83);
        org.junit.Assert.assertNotNull(strArray84);
        org.junit.Assert.assertNotNull(strArray85);
        org.junit.Assert.assertNotNull(strArray86);
    }

    @Test
    public void test3730() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3730");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray1 = python3Target0.targetCharValueEscape;
        java.lang.String str2 = python3Target0.language;
        int int3 = python3Target0.getSerializedATNSegmentLimit();
        java.util.Set<java.lang.String> strSet4 = python3Target0.badWords;
        int int5 = python3Target0.getSerializedATNSegmentLimit();
        java.lang.String[] strArray6 = python3Target0.targetCharValueEscape;
        java.lang.String str8 = python3Target0.encodeIntAsCharEscape(29);
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 29 + "'", int3 == 29);
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 29 + "'", int5 == 29);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\\35" + "'", str8, "\\35");
    }

    @Test
    public void test3731() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3731");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        org.antlr.v4.tool.Grammar grammar3 = null;
        org.stringtemplate.v4.ST sT4 = null;
        python3Target0.genRecognizerHeaderFile(grammar3, sT4, "");
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = python3Target0.getCodeGenerator();
        org.antlr.v4.codegen.target.Python3Target python3Target8 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray9 = python3Target8.targetCharValueEscape;
        org.stringtemplate.v4.STGroup sTGroup10 = python3Target8.templates;
        int int11 = python3Target8.getInlineTestSetWordSize();
        org.antlr.v4.codegen.CodeGenerator codeGenerator12 = python3Target8.gen;
        org.antlr.v4.tool.Grammar grammar13 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target14 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str16 = python3Target14.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.tool.Grammar grammar17 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target18 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean19 = python3Target18.supportsOverloadedMethods();
        java.lang.String str20 = python3Target18.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator21 = null;
        java.lang.String str24 = python3Target18.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator21, "", true);
        java.lang.String str25 = python3Target18.getVersion();
        org.antlr.v4.tool.Grammar grammar26 = null;
        int[] intArray27 = new int[] {};
        java.lang.String[] strArray28 = python3Target18.getTokenTypesAsTargetLabels(grammar26, intArray27);
        java.lang.String[] strArray29 = python3Target14.getTokenTypesAsTargetLabels(grammar17, intArray27);
        java.lang.String[] strArray30 = python3Target8.getTokenTypesAsTargetLabels(grammar13, intArray27);
        org.antlr.v4.codegen.target.Python3Target.python3Keywords = strArray30;
        python3Target0.targetCharValueEscape = strArray30;
        org.antlr.v4.codegen.CodeGenerator codeGenerator33 = null;
        python3Target0.gen = codeGenerator33;
        java.lang.String str35 = python3Target0.getLanguage();
        java.lang.Class<?> wildcardClass36 = python3Target0.getClass();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertNull(codeGenerator7);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertNull(sTGroup10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 64 + "'", int11 == 64);
        org.junit.Assert.assertNull(codeGenerator12);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "\"\"\"\"\"\"" + "'", str16, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "4.5.2.1" + "'", str20, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "\"\"" + "'", str24, "\"\"");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "4.5.2.1" + "'", str25, "4.5.2.1");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[]");
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNotNull(wildcardClass36);
    }

    @Test
    public void test3732() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3732");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.lang.String str3 = python3Target1.getTargetStringLiteralFromString("");
        int int4 = python3Target1.getSerializedATNSegmentLimit();
        boolean boolean5 = python3Target1.wantsBaseVisitor();
        org.stringtemplate.v4.STGroup sTGroup6 = python3Target1.loadTemplates();
        java.lang.String str7 = python3Target1.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup8 = python3Target1.loadTemplates();
        python3Target1.language = "\"\\\\\\\"\\\\\\\"4.5.2.1\\\\\\\"\\\\\\\"\"";
        java.lang.String str11 = python3Target1.getLanguage();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "\"\"" + "'", str3, "\"\"");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 29 + "'", int4 == 29);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(sTGroup6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Python3" + "'", str7, "Python3");
        org.junit.Assert.assertNotNull(sTGroup8);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "\"\\\\\\\"\\\\\\\"4.5.2.1\\\\\\\"\\\\\\\"\"" + "'", str11, "\"\\\\\\\"\\\\\\\"4.5.2.1\\\\\\\"\\\\\\\"\"");
    }

    @Test
    public void test3733() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3733");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python3Target1.getBadWords();
        java.lang.String str3 = python3Target1.language;
        java.util.Set<java.lang.String> strSet4 = python3Target1.getBadWords();
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Python3" + "'", str3, "Python3");
        org.junit.Assert.assertNotNull(strSet4);
    }

    @Test
    public void test3734() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3734");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        python3Target0.language = "4.5.2.1";
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = python3Target0.getCodeGenerator();
        org.antlr.v4.codegen.CodeGenerator codeGenerator4 = python3Target0.gen;
        org.antlr.v4.codegen.CodeGenerator codeGenerator5 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target6 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator5);
        java.lang.String str8 = python3Target6.getTargetStringLiteralFromString("");
        int int9 = python3Target6.getSerializedATNSegmentLimit();
        boolean boolean10 = python3Target6.wantsBaseVisitor();
        org.stringtemplate.v4.STGroup sTGroup11 = python3Target6.loadTemplates();
        python3Target0.templates = sTGroup11;
        java.lang.String str13 = python3Target0.language;
        org.antlr.v4.codegen.CodeGenerator codeGenerator14 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target15 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator14);
        java.util.Set<java.lang.String> strSet16 = python3Target15.getBadWords();
        java.lang.String str18 = python3Target15.getAltLabelContextStructName("d");
        org.stringtemplate.v4.STGroup sTGroup19 = python3Target15.getTemplates();
        python3Target0.templates = sTGroup19;
        org.stringtemplate.v4.STGroup sTGroup21 = python3Target0.templates;
        boolean boolean22 = python3Target0.wantsBaseVisitor();
        org.antlr.v4.codegen.model.RuleFunction ruleFunction23 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str24 = python3Target0.getRuleFunctionContextStructName(ruleFunction23);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(codeGenerator3);
        org.junit.Assert.assertNull(codeGenerator4);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\"\"" + "'", str8, "\"\"");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 29 + "'", int9 == 29);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(sTGroup11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "4.5.2.1" + "'", str13, "4.5.2.1");
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "DContext" + "'", str18, "DContext");
        org.junit.Assert.assertNotNull(sTGroup19);
        org.junit.Assert.assertNotNull(sTGroup21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
    }

    @Test
    public void test3735() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3735");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python3Target1.getBadWords();
        java.lang.String str4 = python3Target1.getAltLabelContextStructName("d");
        org.stringtemplate.v4.STGroup sTGroup5 = python3Target1.getTemplates();
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = null;
        java.lang.String str9 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator6, "", true);
        org.antlr.v4.codegen.target.Python3Target python3Target10 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray11 = python3Target10.targetCharValueEscape;
        java.lang.String str12 = python3Target10.language;
        int int13 = python3Target10.getSerializedATNSegmentLimit();
        java.util.Set<java.lang.String> strSet14 = python3Target10.badWords;
        int int15 = python3Target10.getSerializedATNSegmentLimit();
        java.lang.String[] strArray16 = python3Target10.targetCharValueEscape;
        python3Target1.targetCharValueEscape = strArray16;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str19 = python3Target1.getElementName("_\"\"\\\"\\\"hi!\\\"\\\"\"\"Context");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "DContext" + "'", str4, "DContext");
        org.junit.Assert.assertNotNull(sTGroup5);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\"\"" + "'", str9, "\"\"");
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 29 + "'", int13 == 29);
        org.junit.Assert.assertNotNull(strSet14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 29 + "'", int15 == 29);
        org.junit.Assert.assertNotNull(strArray16);
    }

    @Test
    public void test3736() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3736");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        org.antlr.v4.tool.Grammar grammar3 = null;
        org.stringtemplate.v4.ST sT4 = null;
        python3Target0.genRecognizerHeaderFile(grammar3, sT4, "");
        python3Target0.language = "Python3";
        int int9 = python3Target0.getSerializedATNSegmentLimit();
        java.lang.String str11 = python3Target0.getListLabel("_tsetPython3");
        org.antlr.v4.codegen.CodeGenerator codeGenerator12 = null;
        java.lang.String str15 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator12, "\"\"\"hi!\"\"\"", true);
        java.lang.String str17 = python3Target0.getAltLabelContextStructName("\"\"\"\"\"\"\"\"Context");
        java.util.Set<java.lang.String> strSet18 = python3Target0.badWords;
        org.antlr.v4.tool.Grammar grammar19 = null;
        org.stringtemplate.v4.ST sT20 = null;
        python3Target0.genRecognizerHeaderFile(grammar19, sT20, "_\"\"\\\"\\\"hi!\\\"\\\"\"\"");
        org.antlr.v4.codegen.target.Python3Target python3Target23 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray24 = python3Target23.targetCharValueEscape;
        org.stringtemplate.v4.STGroup sTGroup25 = python3Target23.templates;
        org.antlr.v4.codegen.CodeGenerator codeGenerator26 = null;
        java.lang.String str29 = python3Target23.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator26, "\"\\12\"", false);
        int int30 = python3Target23.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet31 = python3Target23.getBadWords();
        python3Target0.badWords = strSet31;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str34 = python3Target0.getElementListName("\"\"tset\\\"\\\"Python3\\\"\"\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 29 + "'", int9 == 29);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "_tsetPython3" + "'", str11, "_tsetPython3");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "\"\\\"\\\"hi!\\\"\\\"\"" + "'", str15, "\"\\\"\\\"hi!\\\"\\\"\"");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "\"\"\"\"\"\"\"\"ContextContext" + "'", str17, "\"\"\"\"\"\"\"\"ContextContext");
        org.junit.Assert.assertNotNull(strSet18);
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertNull(sTGroup25);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "12" + "'", str29, "12");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 64 + "'", int30 == 64);
        org.junit.Assert.assertNotNull(strSet31);
    }

    @Test
    public void test3737() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3737");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        java.lang.String str2 = python3Target0.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = null;
        java.lang.String str6 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator3, "", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = null;
        python3Target0.gen = codeGenerator7;
        int int9 = python3Target0.getSerializedATNSegmentLimit();
        org.antlr.v4.tool.Grammar grammar10 = null;
        org.stringtemplate.v4.ST sT11 = null;
        python3Target0.genRecognizerHeaderFile(grammar10, sT11, "_tset12");
        org.stringtemplate.v4.STGroup sTGroup14 = python3Target0.templates;
        org.stringtemplate.v4.STGroup sTGroup15 = python3Target0.templates;
        org.antlr.v4.codegen.CodeGenerator codeGenerator16 = python3Target0.getCodeGenerator();
        python3Target0.addBadWords();
        java.lang.String str18 = python3Target0.getLanguage();
        int int19 = python3Target0.getSerializedATNSegmentLimit();
        org.antlr.v4.codegen.CodeGenerator codeGenerator20 = null;
        java.lang.String str23 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator20, "DContext\\\"Contex", false);
        boolean boolean24 = python3Target0.supportsOverloadedMethods();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "4.5.2.1" + "'", str2, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\"\"" + "'", str6, "\"\"");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 29 + "'", int9 == 29);
        org.junit.Assert.assertNull(sTGroup14);
        org.junit.Assert.assertNull(sTGroup15);
        org.junit.Assert.assertNull(codeGenerator16);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 29 + "'", int19 == 29);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "Context\\\"Conte" + "'", str23, "Context\\\"Conte");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    }

    @Test
    public void test3738() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3738");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        org.antlr.v4.tool.Grammar grammar3 = null;
        org.stringtemplate.v4.ST sT4 = null;
        python3Target0.genRecognizerHeaderFile(grammar3, sT4, "");
        python3Target0.language = "Python3";
        int int9 = python3Target0.getSerializedATNSegmentLimit();
        java.lang.String str11 = python3Target0.getListLabel("_tsetPython3");
        org.antlr.v4.codegen.CodeGenerator codeGenerator12 = null;
        java.lang.String str15 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator12, "\"\"\"hi!\"\"\"", true);
        java.lang.String str17 = python3Target0.getAltLabelContextStructName("\"\"\"\"\"\"\"\"Context");
        java.util.Set<java.lang.String> strSet18 = python3Target0.badWords;
        python3Target0.addBadWords();
        org.antlr.v4.tool.Grammar grammar20 = null;
        org.stringtemplate.v4.ST sT21 = null;
        python3Target0.genRecognizerHeaderFile(grammar20, sT21, "_\"\\\"\\\\\\\"Python3\\\\\\\"\\\"\"");
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 29 + "'", int9 == 29);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "_tsetPython3" + "'", str11, "_tsetPython3");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "\"\\\"\\\"hi!\\\"\\\"\"" + "'", str15, "\"\\\"\\\"hi!\\\"\\\"\"");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "\"\"\"\"\"\"\"\"ContextContext" + "'", str17, "\"\"\"\"\"\"\"\"ContextContext");
        org.junit.Assert.assertNotNull(strSet18);
    }

    @Test
    public void test3739() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3739");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python3Target1.getBadWords();
        java.lang.String str4 = python3Target1.getAltLabelContextStructName("d");
        org.stringtemplate.v4.STGroup sTGroup5 = python3Target1.getTemplates();
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = null;
        java.lang.String str9 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator6, "", true);
        org.antlr.v4.tool.Grammar grammar10 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target11 = new org.antlr.v4.codegen.target.Python3Target();
        python3Target11.language = "";
        org.antlr.v4.codegen.target.Python3Target python3Target14 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean15 = python3Target14.supportsOverloadedMethods();
        java.lang.String str16 = python3Target14.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator17 = null;
        java.lang.String str20 = python3Target14.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator17, "", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator21 = null;
        python3Target14.gen = codeGenerator21;
        java.lang.String[] strArray30 = new java.lang.String[] { "\"\"\"\"", "\\12", "\"\"", "4.5.2.1", "", "\"\"\"\"", "\"\"" };
        java.util.LinkedHashSet<java.lang.String> strSet31 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet31, strArray30);
        python3Target14.badWords = strSet31;
        python3Target11.badWords = strSet31;
        java.lang.String str36 = python3Target11.encodeIntAsCharEscape((int) (byte) 100);
        java.lang.String str37 = python3Target11.getLanguage();
        java.lang.String[] strArray38 = new java.lang.String[] {};
        python3Target11.targetCharValueEscape = strArray38;
        org.antlr.v4.tool.Grammar grammar40 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target41 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean42 = python3Target41.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup43 = python3Target41.templates;
        java.lang.String[] strArray46 = new java.lang.String[] { "hi!", "hi!" };
        python3Target41.targetCharValueEscape = strArray46;
        org.antlr.v4.codegen.CodeGenerator codeGenerator48 = null;
        java.lang.String str51 = python3Target41.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator48, "", false);
        java.util.Set<java.lang.String> strSet52 = python3Target41.badWords;
        java.lang.String str54 = python3Target41.getTargetStringLiteralFromString("12");
        int int55 = python3Target41.getSerializedATNSegmentLimit();
        boolean boolean56 = python3Target41.supportsOverloadedMethods();
        org.antlr.v4.tool.Grammar grammar57 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target58 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean59 = python3Target58.supportsOverloadedMethods();
        java.util.Set<java.lang.String> strSet60 = python3Target58.badWords;
        boolean boolean61 = python3Target58.templatesExist();
        java.lang.String str62 = python3Target58.getLanguage();
        org.antlr.v4.tool.Grammar grammar63 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target64 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str66 = python3Target64.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator67 = null;
        python3Target64.gen = codeGenerator67;
        org.antlr.v4.tool.Grammar grammar69 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target70 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str72 = python3Target70.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.tool.Grammar grammar73 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target74 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean75 = python3Target74.supportsOverloadedMethods();
        java.lang.String str76 = python3Target74.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator77 = null;
        java.lang.String str80 = python3Target74.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator77, "", true);
        java.lang.String str81 = python3Target74.getVersion();
        org.antlr.v4.tool.Grammar grammar82 = null;
        int[] intArray83 = new int[] {};
        java.lang.String[] strArray84 = python3Target74.getTokenTypesAsTargetLabels(grammar82, intArray83);
        java.lang.String[] strArray85 = python3Target70.getTokenTypesAsTargetLabels(grammar73, intArray83);
        java.lang.String[] strArray86 = python3Target64.getTokenTypesAsTargetLabels(grammar69, intArray83);
        java.lang.String[] strArray87 = python3Target58.getTokenTypesAsTargetLabels(grammar63, intArray83);
        java.lang.String[] strArray88 = python3Target41.getTokenTypesAsTargetLabels(grammar57, intArray83);
        java.lang.String[] strArray89 = python3Target11.getTokenTypesAsTargetLabels(grammar40, intArray83);
        java.lang.String[] strArray90 = python3Target1.getTokenTypesAsTargetLabels(grammar10, intArray83);
        java.lang.String str92 = python3Target1.encodeIntAsCharEscape((int) (short) 10);
        boolean boolean93 = python3Target1.wantsBaseVisitor();
        int int94 = python3Target1.getInlineTestSetWordSize();
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "DContext" + "'", str4, "DContext");
        org.junit.Assert.assertNotNull(sTGroup5);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\"\"" + "'", str9, "\"\"");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "4.5.2.1" + "'", str16, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "\"\"" + "'", str20, "\"\"");
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "d" + "'", str36, "d");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "" + "'", str37, "");
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNull(sTGroup43);
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "" + "'", str51, "");
        org.junit.Assert.assertNotNull(strSet52);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "\"12\"" + "'", str54, "\"12\"");
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 29 + "'", int55 == 29);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(strSet60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNull(str62);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "\"\"\"\"\"\"" + "'", str66, "\"\"\"\"\"\"");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "\"\"\"\"\"\"" + "'", str72, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "4.5.2.1" + "'", str76, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "\"\"" + "'", str80, "\"\"");
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "4.5.2.1" + "'", str81, "4.5.2.1");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[]");
        org.junit.Assert.assertNotNull(strArray84);
        org.junit.Assert.assertNotNull(strArray85);
        org.junit.Assert.assertNotNull(strArray86);
        org.junit.Assert.assertNotNull(strArray87);
        org.junit.Assert.assertNotNull(strArray88);
        org.junit.Assert.assertNotNull(strArray89);
        org.junit.Assert.assertNotNull(strArray90);
        org.junit.Assert.assertEquals("'" + str92 + "' != '" + "\\n" + "'", str92, "\\n");
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertTrue("'" + int94 + "' != '" + 64 + "'", int94 == 64);
    }

    @Test
    public void test3740() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3740");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.lang.String str3 = python3Target1.getTargetStringLiteralFromString("");
        int int4 = python3Target1.getSerializedATNSegmentLimit();
        boolean boolean5 = python3Target1.wantsBaseVisitor();
        org.stringtemplate.v4.STGroup sTGroup6 = python3Target1.loadTemplates();
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = python3Target1.gen;
        org.antlr.v4.codegen.target.Python3Target python3Target8 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean9 = python3Target8.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup10 = python3Target8.templates;
        org.antlr.v4.tool.Grammar grammar11 = null;
        org.stringtemplate.v4.ST sT12 = null;
        python3Target8.genRecognizerHeaderFile(grammar11, sT12, "");
        python3Target8.language = "Python3";
        int int17 = python3Target8.getSerializedATNSegmentLimit();
        org.stringtemplate.v4.STGroup sTGroup18 = python3Target8.loadTemplates();
        python3Target1.templates = sTGroup18;
        java.lang.String str21 = python3Target1.encodeIntAsCharEscape((int) (byte) 0);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "\"\"" + "'", str3, "\"\"");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 29 + "'", int4 == 29);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(sTGroup6);
        org.junit.Assert.assertNull(codeGenerator7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(sTGroup10);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 29 + "'", int17 == 29);
        org.junit.Assert.assertNotNull(sTGroup18);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "\\0" + "'", str21, "\\0");
    }

    @Test
    public void test3741() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3741");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!", "hi!" };
        python3Target0.targetCharValueEscape = strArray5;
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = null;
        java.lang.String str10 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator7, "", false);
        int int11 = python3Target0.getSerializedATNSegmentLimit();
        java.lang.String str12 = python3Target0.getVersion();
        boolean boolean13 = python3Target0.supportsOverloadedMethods();
        org.antlr.v4.codegen.target.Python3Target python3Target14 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean15 = python3Target14.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup16 = python3Target14.templates;
        java.lang.String[] strArray19 = new java.lang.String[] { "hi!", "hi!" };
        python3Target14.targetCharValueEscape = strArray19;
        java.lang.String[] strArray22 = new java.lang.String[] { "hi!" };
        org.antlr.v4.codegen.target.Python3Target.python3Keywords = strArray22;
        python3Target14.targetCharValueEscape = strArray22;
        org.antlr.v4.codegen.target.Python3Target.python3Keywords = strArray22;
        python3Target0.targetCharValueEscape = strArray22;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str28 = python3Target0.getImplicitSetLabel("\"_\"\\\"tset\\\\\\\"0\\\"\"\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 29 + "'", int11 == 29);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "4.5.2.1" + "'", str12, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(sTGroup16);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertNotNull(strArray22);
    }

    @Test
    public void test3742() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3742");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python3Target1.getBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = null;
        python3Target1.gen = codeGenerator3;
        java.lang.String str6 = python3Target1.getAltLabelContextStructName("hi!");
        java.lang.String str9 = python3Target1.getTargetStringLiteralFromString("\"hi!\"", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = null;
        python3Target1.gen = codeGenerator10;
        java.lang.String str12 = python3Target1.language;
        int int13 = python3Target1.getSerializedATNSegmentLimit();
        java.lang.String str14 = python3Target1.getLanguage();
        java.lang.String str17 = python3Target1.getTargetStringLiteralFromString("_\"_\"\"\"DContext\"\"Context\"\"", false);
        org.stringtemplate.v4.STGroup sTGroup18 = python3Target1.getTemplates();
        java.lang.String str20 = python3Target1.encodeIntAsCharEscape((int) (short) 1);
        org.antlr.v4.codegen.CodeGenerator codeGenerator21 = null;
        java.lang.String str24 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator21, "\\64", false);
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Hi!Context" + "'", str6, "Hi!Context");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\"\\\"hi!\\\"\"" + "'", str9, "\"\\\"hi!\\\"\"");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Python3" + "'", str12, "Python3");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 29 + "'", int13 == 29);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Python3" + "'", str14, "Python3");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "_\\\"_\\\"\\\"\\\"DContext\\\"\\\"Context\\\"\\\"" + "'", str17, "_\\\"_\\\"\\\"\\\"DContext\\\"\\\"Context\\\"\\\"");
        org.junit.Assert.assertNotNull(sTGroup18);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "\\1" + "'", str20, "\\1");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "6" + "'", str24, "6");
    }

    @Test
    public void test3743() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3743");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        org.antlr.v4.tool.Grammar grammar3 = null;
        org.stringtemplate.v4.ST sT4 = null;
        python3Target0.genRecognizerHeaderFile(grammar3, sT4, "");
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = python3Target0.getCodeGenerator();
        java.util.Set<java.lang.String> strSet8 = python3Target0.badWords;
        boolean boolean9 = python3Target0.templatesExist();
        boolean boolean10 = python3Target0.templatesExist();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str12 = python3Target0.getElementName("\"d\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertNull(codeGenerator7);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test3744() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3744");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        java.lang.String str2 = python3Target0.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = python3Target0.getCodeGenerator();
        org.stringtemplate.v4.STGroup sTGroup4 = null;
        python3Target0.templates = sTGroup4;
        org.stringtemplate.v4.STGroup sTGroup6 = python3Target0.templates;
        java.lang.String[] strArray7 = python3Target0.targetCharValueEscape;
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = null;
        java.lang.String str11 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator8, "\\\"4.5.2.1\\\"", true);
        int int12 = python3Target0.getInlineTestSetWordSize();
        org.antlr.v4.tool.Grammar grammar13 = null;
        org.stringtemplate.v4.ST sT14 = null;
        python3Target0.genRecognizerHeaderFile(grammar13, sT14, "\"\\35\"");
        org.antlr.v4.tool.ast.GrammarAST grammarAST17 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str18 = python3Target0.getLoopLabel(grammarAST17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "4.5.2.1" + "'", str2, "4.5.2.1");
        org.junit.Assert.assertNull(codeGenerator3);
        org.junit.Assert.assertNull(sTGroup6);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "\"\\\"4.5.2.1\\\"\"" + "'", str11, "\"\\\"4.5.2.1\\\"\"");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 64 + "'", int12 == 64);
    }

    @Test
    public void test3745() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3745");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray1 = python3Target0.targetCharValueEscape;
        java.lang.String str2 = python3Target0.language;
        int int3 = python3Target0.getSerializedATNSegmentLimit();
        java.util.Set<java.lang.String> strSet4 = python3Target0.badWords;
        python3Target0.language = "\"\"\"\"\"\"Context";
        org.antlr.v4.tool.Grammar grammar7 = null;
        org.stringtemplate.v4.ST sT8 = null;
        python3Target0.genRecognizerHeaderFile(grammar7, sT8, "\"Hi!Context\"");
        org.antlr.v4.tool.ast.GrammarAST grammarAST11 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean12 = python3Target0.grammarSymbolCausesIssueInGeneratedCode(grammarAST11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 29 + "'", int3 == 29);
        org.junit.Assert.assertNotNull(strSet4);
    }

    @Test
    public void test3746() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3746");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.lang.String str2 = python3Target1.getLanguage();
        java.lang.String str4 = python3Target1.getImplicitSetLabel("Python3");
        org.antlr.v4.codegen.CodeGenerator codeGenerator5 = null;
        java.lang.String str8 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator5, "\"\"\"\"", true);
        org.stringtemplate.v4.STGroup sTGroup9 = python3Target1.loadTemplates();
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = python3Target1.getCodeGenerator();
        org.antlr.v4.codegen.target.Python3Target python3Target11 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean12 = python3Target11.supportsOverloadedMethods();
        java.util.Set<java.lang.String> strSet13 = python3Target11.badWords;
        boolean boolean14 = python3Target11.templatesExist();
        java.lang.String str15 = python3Target11.getLanguage();
        org.antlr.v4.tool.Grammar grammar16 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target17 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str19 = python3Target17.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator20 = null;
        python3Target17.gen = codeGenerator20;
        org.antlr.v4.tool.Grammar grammar22 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target23 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str25 = python3Target23.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.tool.Grammar grammar26 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target27 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean28 = python3Target27.supportsOverloadedMethods();
        java.lang.String str29 = python3Target27.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator30 = null;
        java.lang.String str33 = python3Target27.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator30, "", true);
        java.lang.String str34 = python3Target27.getVersion();
        org.antlr.v4.tool.Grammar grammar35 = null;
        int[] intArray36 = new int[] {};
        java.lang.String[] strArray37 = python3Target27.getTokenTypesAsTargetLabels(grammar35, intArray36);
        java.lang.String[] strArray38 = python3Target23.getTokenTypesAsTargetLabels(grammar26, intArray36);
        java.lang.String[] strArray39 = python3Target17.getTokenTypesAsTargetLabels(grammar22, intArray36);
        java.lang.String[] strArray40 = python3Target11.getTokenTypesAsTargetLabels(grammar16, intArray36);
        java.util.Set<java.lang.String> strSet41 = python3Target11.badWords;
        org.antlr.v4.codegen.target.Python3Target python3Target42 = new org.antlr.v4.codegen.target.Python3Target();
        python3Target42.language = "4.5.2.1";
        org.antlr.v4.codegen.CodeGenerator codeGenerator45 = python3Target42.getCodeGenerator();
        org.antlr.v4.codegen.CodeGenerator codeGenerator46 = python3Target42.gen;
        java.lang.String str47 = python3Target42.getLanguage();
        python3Target42.addBadWords();
        org.antlr.v4.codegen.target.Python3Target python3Target49 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str51 = python3Target49.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator52 = null;
        python3Target49.gen = codeGenerator52;
        java.lang.String str54 = python3Target49.getVersion();
        org.antlr.v4.codegen.target.Python3Target python3Target55 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean56 = python3Target55.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup57 = python3Target55.templates;
        org.antlr.v4.tool.Grammar grammar58 = null;
        org.stringtemplate.v4.ST sT59 = null;
        python3Target55.genRecognizerHeaderFile(grammar58, sT59, "");
        python3Target55.language = "Python3";
        int int64 = python3Target55.getSerializedATNSegmentLimit();
        org.stringtemplate.v4.STGroup sTGroup65 = python3Target55.loadTemplates();
        python3Target49.templates = sTGroup65;
        python3Target42.templates = sTGroup65;
        python3Target11.templates = sTGroup65;
        python3Target1.templates = sTGroup65;
        org.stringtemplate.v4.STGroup sTGroup70 = python3Target1.loadTemplates();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "Python3" + "'", str2, "Python3");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "_tsetPython3" + "'", str4, "_tsetPython3");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\"\\\"\\\"\"" + "'", str8, "\"\\\"\\\"\"");
        org.junit.Assert.assertNotNull(sTGroup9);
        org.junit.Assert.assertNull(codeGenerator10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(strSet13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "\"\"\"\"\"\"" + "'", str19, "\"\"\"\"\"\"");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "\"\"\"\"\"\"" + "'", str25, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "4.5.2.1" + "'", str29, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "\"\"" + "'", str33, "\"\"");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "4.5.2.1" + "'", str34, "4.5.2.1");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[]");
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertNotNull(strSet41);
        org.junit.Assert.assertNull(codeGenerator45);
        org.junit.Assert.assertNull(codeGenerator46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "4.5.2.1" + "'", str47, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "\"\"\"\"\"\"" + "'", str51, "\"\"\"\"\"\"");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "4.5.2.1" + "'", str54, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNull(sTGroup57);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 29 + "'", int64 == 29);
        org.junit.Assert.assertNotNull(sTGroup65);
        org.junit.Assert.assertNotNull(sTGroup70);
    }

    @Test
    public void test3747() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3747");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray1 = python3Target0.targetCharValueEscape;
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        int int3 = python3Target0.getInlineTestSetWordSize();
        org.antlr.v4.codegen.CodeGenerator codeGenerator4 = python3Target0.gen;
        org.antlr.v4.tool.Grammar grammar5 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target6 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str8 = python3Target6.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.tool.Grammar grammar9 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target10 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean11 = python3Target10.supportsOverloadedMethods();
        java.lang.String str12 = python3Target10.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator13 = null;
        java.lang.String str16 = python3Target10.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator13, "", true);
        java.lang.String str17 = python3Target10.getVersion();
        org.antlr.v4.tool.Grammar grammar18 = null;
        int[] intArray19 = new int[] {};
        java.lang.String[] strArray20 = python3Target10.getTokenTypesAsTargetLabels(grammar18, intArray19);
        java.lang.String[] strArray21 = python3Target6.getTokenTypesAsTargetLabels(grammar9, intArray19);
        java.lang.String[] strArray22 = python3Target0.getTokenTypesAsTargetLabels(grammar5, intArray19);
        java.lang.String[] strArray23 = python3Target0.targetCharValueEscape;
        org.antlr.v4.codegen.CodeGenerator codeGenerator24 = python3Target0.getCodeGenerator();
        java.lang.String str27 = python3Target0.getTargetStringLiteralFromString("\"\"\\\"\\\"hi!\\\"\\\"\"\"", true);
        int int28 = python3Target0.getInlineTestSetWordSize();
        org.antlr.v4.tool.Grammar grammar29 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target30 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray31 = python3Target30.targetCharValueEscape;
        python3Target30.addBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator33 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target34 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator33);
        java.lang.String str36 = python3Target34.getTargetStringLiteralFromString("");
        int int37 = python3Target34.getSerializedATNSegmentLimit();
        boolean boolean38 = python3Target34.wantsBaseVisitor();
        org.stringtemplate.v4.STGroup sTGroup39 = python3Target34.loadTemplates();
        python3Target30.templates = sTGroup39;
        org.antlr.v4.tool.Grammar grammar41 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target42 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray43 = python3Target42.targetCharValueEscape;
        org.stringtemplate.v4.STGroup sTGroup44 = python3Target42.templates;
        int int45 = python3Target42.getInlineTestSetWordSize();
        org.antlr.v4.codegen.CodeGenerator codeGenerator46 = python3Target42.gen;
        org.antlr.v4.tool.Grammar grammar47 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target48 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str50 = python3Target48.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.tool.Grammar grammar51 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target52 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean53 = python3Target52.supportsOverloadedMethods();
        java.lang.String str54 = python3Target52.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator55 = null;
        java.lang.String str58 = python3Target52.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator55, "", true);
        java.lang.String str59 = python3Target52.getVersion();
        org.antlr.v4.tool.Grammar grammar60 = null;
        int[] intArray61 = new int[] {};
        java.lang.String[] strArray62 = python3Target52.getTokenTypesAsTargetLabels(grammar60, intArray61);
        java.lang.String[] strArray63 = python3Target48.getTokenTypesAsTargetLabels(grammar51, intArray61);
        java.lang.String[] strArray64 = python3Target42.getTokenTypesAsTargetLabels(grammar47, intArray61);
        java.lang.String[] strArray65 = python3Target30.getTokenTypesAsTargetLabels(grammar41, intArray61);
        java.lang.String[] strArray66 = python3Target0.getTokenTypesAsTargetLabels(grammar29, intArray61);
        boolean boolean67 = python3Target0.wantsBaseVisitor();
        org.antlr.v4.tool.Grammar grammar68 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str70 = python3Target0.getTokenTypeAsTargetLabel(grammar68, (int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 64 + "'", int3 == 64);
        org.junit.Assert.assertNull(codeGenerator4);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\"\"\"\"\"\"" + "'", str8, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "4.5.2.1" + "'", str12, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "\"\"" + "'", str16, "\"\"");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "4.5.2.1" + "'", str17, "4.5.2.1");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[]");
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertNull(codeGenerator24);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "\"\"\"\\\"\\\"hi!\\\"\\\"\"\"\"" + "'", str27, "\"\"\"\\\"\\\"hi!\\\"\\\"\"\"\"");
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 64 + "'", int28 == 64);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "\"\"" + "'", str36, "\"\"");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 29 + "'", int37 == 29);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(sTGroup39);
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertNull(sTGroup44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 64 + "'", int45 == 64);
        org.junit.Assert.assertNull(codeGenerator46);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "\"\"\"\"\"\"" + "'", str50, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "4.5.2.1" + "'", str54, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "\"\"" + "'", str58, "\"\"");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "4.5.2.1" + "'", str59, "4.5.2.1");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[]");
        org.junit.Assert.assertNotNull(strArray62);
        org.junit.Assert.assertNotNull(strArray63);
        org.junit.Assert.assertNotNull(strArray64);
        org.junit.Assert.assertNotNull(strArray65);
        org.junit.Assert.assertNotNull(strArray66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
    }

    @Test
    public void test3748() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3748");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python3Target1.getBadWords();
        java.lang.String str4 = python3Target1.getAltLabelContextStructName("d");
        org.stringtemplate.v4.STGroup sTGroup5 = python3Target1.getTemplates();
        boolean boolean6 = python3Target1.supportsOverloadedMethods();
        java.util.Set<java.lang.String> strSet7 = python3Target1.getBadWords();
        python3Target1.language = "\"_tset_tset_12\"";
        boolean boolean10 = python3Target1.templatesExist();
        java.lang.Class<?> wildcardClass11 = python3Target1.getClass();
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "DContext" + "'", str4, "DContext");
        org.junit.Assert.assertNotNull(sTGroup5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(strSet7);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test3749() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3749");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.lang.String str2 = python3Target1.getVersion();
        int int3 = python3Target1.getSerializedATNSegmentLimit();
        java.lang.String str4 = python3Target1.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator5 = python3Target1.gen;
        java.lang.String str6 = python3Target1.language;
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "4.5.2.1" + "'", str2, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 29 + "'", int3 == 29);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "4.5.2.1" + "'", str4, "4.5.2.1");
        org.junit.Assert.assertNull(codeGenerator5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Python3" + "'", str6, "Python3");
    }

    @Test
    public void test3750() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3750");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        java.lang.String str2 = python3Target0.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = null;
        java.lang.String str6 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator3, "", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = null;
        python3Target0.gen = codeGenerator7;
        int int9 = python3Target0.getSerializedATNSegmentLimit();
        org.antlr.v4.tool.Grammar grammar10 = null;
        org.stringtemplate.v4.ST sT11 = null;
        python3Target0.genRecognizerHeaderFile(grammar10, sT11, "_tset12");
        java.lang.String str15 = python3Target0.encodeIntAsCharEscape(0);
        org.antlr.v4.codegen.CodeGenerator codeGenerator16 = python3Target0.getCodeGenerator();
        java.lang.String str18 = python3Target0.getTargetStringLiteralFromString("\"\"DContext\"\"Context");
        org.antlr.v4.tool.ast.GrammarAST grammarAST19 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str20 = python3Target0.getLoopCounter(grammarAST19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "4.5.2.1" + "'", str2, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\"\"" + "'", str6, "\"\"");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 29 + "'", int9 == 29);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "\\0" + "'", str15, "\\0");
        org.junit.Assert.assertNull(codeGenerator16);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "\"\"\"DContext\"\"Context\"" + "'", str18, "\"\"\"DContext\"\"Context\"");
    }

    @Test
    public void test3751() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3751");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!", "hi!" };
        python3Target0.targetCharValueEscape = strArray5;
        java.lang.String str8 = python3Target0.getTargetStringLiteralFromString("\"\"");
        java.lang.String str10 = python3Target0.getTargetStringLiteralFromString("\"\"");
        java.lang.String str11 = python3Target0.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup12 = python3Target0.templates;
        org.antlr.v4.codegen.CodeGenerator codeGenerator13 = python3Target0.gen;
        java.lang.String str14 = python3Target0.getVersion();
        org.antlr.v4.codegen.target.Python3Target python3Target15 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean16 = python3Target15.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup17 = python3Target15.templates;
        org.antlr.v4.tool.Grammar grammar18 = null;
        org.stringtemplate.v4.ST sT19 = null;
        python3Target15.genRecognizerHeaderFile(grammar18, sT19, "");
        python3Target15.language = "Python3";
        java.util.Set<java.lang.String> strSet24 = null;
        python3Target15.badWords = strSet24;
        boolean boolean26 = python3Target15.wantsBaseVisitor();
        java.lang.String str28 = python3Target15.getImplicitSetLabel("Python3");
        org.antlr.v4.codegen.target.Python3Target python3Target29 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean30 = python3Target29.supportsOverloadedMethods();
        java.lang.String str31 = python3Target29.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator32 = python3Target29.getCodeGenerator();
        org.stringtemplate.v4.STGroup sTGroup33 = null;
        python3Target29.templates = sTGroup33;
        org.stringtemplate.v4.STGroup sTGroup35 = python3Target29.templates;
        java.lang.String[] strArray36 = python3Target29.targetCharValueEscape;
        java.lang.String str39 = python3Target29.getTargetStringLiteralFromString("\"12\"", false);
        org.antlr.v4.codegen.target.Python3Target python3Target40 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean41 = python3Target40.supportsOverloadedMethods();
        java.lang.String str42 = python3Target40.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator43 = python3Target40.getCodeGenerator();
        org.stringtemplate.v4.STGroup sTGroup44 = null;
        python3Target40.templates = sTGroup44;
        org.stringtemplate.v4.STGroup sTGroup46 = python3Target40.templates;
        java.lang.String[] strArray47 = python3Target40.targetCharValueEscape;
        java.util.Set<java.lang.String> strSet48 = python3Target40.badWords;
        java.util.Set<java.lang.String> strSet49 = python3Target40.getBadWords();
        python3Target29.badWords = strSet49;
        python3Target15.badWords = strSet49;
        python3Target0.badWords = strSet49;
        org.antlr.v4.codegen.CodeGenerator codeGenerator53 = python3Target0.getCodeGenerator();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\"\"\"\"" + "'", str8, "\"\"\"\"");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\"\"\"\"" + "'", str10, "\"\"\"\"");
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(sTGroup12);
        org.junit.Assert.assertNull(codeGenerator13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "4.5.2.1" + "'", str14, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(sTGroup17);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "_tsetPython3" + "'", str28, "_tsetPython3");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "4.5.2.1" + "'", str31, "4.5.2.1");
        org.junit.Assert.assertNull(codeGenerator32);
        org.junit.Assert.assertNull(sTGroup35);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "\"12\"" + "'", str39, "\"12\"");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "4.5.2.1" + "'", str42, "4.5.2.1");
        org.junit.Assert.assertNull(codeGenerator43);
        org.junit.Assert.assertNull(sTGroup46);
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertNotNull(strSet48);
        org.junit.Assert.assertNotNull(strSet49);
        org.junit.Assert.assertNull(codeGenerator53);
    }

    @Test
    public void test3752() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3752");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        org.antlr.v4.tool.Grammar grammar3 = null;
        org.stringtemplate.v4.ST sT4 = null;
        python3Target0.genRecognizerHeaderFile(grammar3, sT4, "");
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = python3Target0.getCodeGenerator();
        boolean boolean8 = python3Target0.supportsOverloadedMethods();
        org.antlr.v4.codegen.CodeGenerator codeGenerator9 = python3Target0.gen;
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = python3Target0.gen;
        java.lang.String str13 = python3Target0.getTargetStringLiteralFromString("_\"_tset_tset_12\"", false);
        java.lang.String str14 = python3Target0.getLanguage();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertNull(codeGenerator7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(codeGenerator9);
        org.junit.Assert.assertNull(codeGenerator10);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "_\"_tset_tset_12\"" + "'", str13, "_\"_tset_tset_12\"");
        org.junit.Assert.assertNull(str14);
    }

    @Test
    public void test3753() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3753");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.lang.String str3 = python3Target1.getTargetStringLiteralFromString("");
        int int4 = python3Target1.getSerializedATNSegmentLimit();
        boolean boolean5 = python3Target1.wantsBaseVisitor();
        java.lang.String str6 = python3Target1.getVersion();
        org.stringtemplate.v4.STGroup sTGroup7 = python3Target1.getTemplates();
        java.lang.String str9 = python3Target1.getImplicitRuleLabel("\"_\"\"\"DContext\"\"Context\"\"");
        org.stringtemplate.v4.STGroup sTGroup10 = python3Target1.getTemplates();
        java.lang.String str11 = python3Target1.language;
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "\"\"" + "'", str3, "\"\"");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 29 + "'", int4 == 29);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "4.5.2.1" + "'", str6, "4.5.2.1");
        org.junit.Assert.assertNotNull(sTGroup7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "_\"_\"\"\"DContext\"\"Context\"\"" + "'", str9, "_\"_\"\"\"DContext\"\"Context\"\"");
        org.junit.Assert.assertNotNull(sTGroup10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Python3" + "'", str11, "Python3");
    }

    @Test
    public void test3754() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3754");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python3Target1.getBadWords();
        java.lang.String str4 = python3Target1.getAltLabelContextStructName("d");
        org.stringtemplate.v4.STGroup sTGroup5 = python3Target1.getTemplates();
        boolean boolean6 = python3Target1.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup7 = python3Target1.getTemplates();
        python3Target1.language = "\"\"";
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = null;
        java.lang.String str13 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator10, "\\\"4.5.2.1\\\"", false);
        org.antlr.v4.codegen.CodeGenerator codeGenerator14 = python3Target1.gen;
        python3Target1.language = "\"\"\"\"\"\"\"\"ContextContextContext";
        boolean boolean17 = python3Target1.wantsBaseListener();
        boolean boolean18 = python3Target1.supportsOverloadedMethods();
        java.lang.String str20 = python3Target1.getTargetStringLiteralFromString("nContex");
        java.lang.String[] strArray21 = python3Target1.targetCharValueEscape;
        java.lang.String[] strArray22 = python3Target1.targetCharValueEscape;
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "DContext" + "'", str4, "DContext");
        org.junit.Assert.assertNotNull(sTGroup5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(sTGroup7);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "\\\"4.5.2.1\\\"" + "'", str13, "\\\"4.5.2.1\\\"");
        org.junit.Assert.assertNull(codeGenerator14);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "\"nContex\"" + "'", str20, "\"nContex\"");
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(strArray22);
    }

    @Test
    public void test3755() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3755");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray1 = python3Target0.targetCharValueEscape;
        python3Target0.addBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target4 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator3);
        java.lang.String str6 = python3Target4.getTargetStringLiteralFromString("");
        int int7 = python3Target4.getSerializedATNSegmentLimit();
        boolean boolean8 = python3Target4.wantsBaseVisitor();
        org.stringtemplate.v4.STGroup sTGroup9 = python3Target4.loadTemplates();
        python3Target0.templates = sTGroup9;
        boolean boolean11 = python3Target0.wantsBaseListener();
        java.lang.String[] strArray12 = python3Target0.targetCharValueEscape;
        org.antlr.v4.codegen.target.Python3Target python3Target13 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean14 = python3Target13.supportsOverloadedMethods();
        python3Target13.language = "\"\"\"\"";
        org.antlr.v4.codegen.target.Python3Target python3Target17 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean18 = python3Target17.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup19 = python3Target17.templates;
        java.lang.String[] strArray22 = new java.lang.String[] { "hi!", "hi!" };
        python3Target17.targetCharValueEscape = strArray22;
        org.antlr.v4.codegen.CodeGenerator codeGenerator24 = null;
        java.lang.String str27 = python3Target17.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator24, "", false);
        java.util.Set<java.lang.String> strSet28 = python3Target17.badWords;
        python3Target13.badWords = strSet28;
        python3Target0.badWords = strSet28;
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\"\"" + "'", str6, "\"\"");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 29 + "'", int7 == 29);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(sTGroup9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(sTGroup19);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertNotNull(strSet28);
    }

    @Test
    public void test3756() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3756");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!", "hi!" };
        python3Target0.targetCharValueEscape = strArray5;
        java.lang.String[] strArray8 = new java.lang.String[] { "hi!" };
        org.antlr.v4.codegen.target.Python3Target.python3Keywords = strArray8;
        python3Target0.targetCharValueEscape = strArray8;
        java.util.Set<java.lang.String> strSet11 = python3Target0.getBadWords();
        int int12 = python3Target0.getSerializedATNSegmentLimit();
        java.lang.String str15 = python3Target0.getTargetStringLiteralFromString("_\"\\\"\\\"\"", true);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(strSet11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 29 + "'", int12 == 29);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "\"_\"\\\"\\\"\"\"" + "'", str15, "\"_\"\\\"\\\"\"\"");
    }

    @Test
    public void test3757() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3757");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        org.antlr.v4.tool.Grammar grammar3 = null;
        org.stringtemplate.v4.ST sT4 = null;
        python3Target0.genRecognizerHeaderFile(grammar3, sT4, "");
        org.antlr.v4.codegen.target.Python3Target python3Target7 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray8 = python3Target7.targetCharValueEscape;
        python3Target0.targetCharValueEscape = strArray8;
        python3Target0.addBadWords();
        java.lang.String[] strArray11 = python3Target0.targetCharValueEscape;
        org.antlr.v4.codegen.target.Python3Target python3Target12 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean13 = python3Target12.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup14 = python3Target12.templates;
        java.lang.String[] strArray17 = new java.lang.String[] { "hi!", "hi!" };
        python3Target12.targetCharValueEscape = strArray17;
        org.antlr.v4.codegen.CodeGenerator codeGenerator19 = null;
        java.lang.String str22 = python3Target12.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator19, "", false);
        int int23 = python3Target12.getSerializedATNSegmentLimit();
        java.lang.String str24 = python3Target12.getVersion();
        boolean boolean25 = python3Target12.supportsOverloadedMethods();
        org.antlr.v4.codegen.target.Python3Target python3Target26 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean27 = python3Target26.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup28 = python3Target26.templates;
        java.lang.String[] strArray31 = new java.lang.String[] { "hi!", "hi!" };
        python3Target26.targetCharValueEscape = strArray31;
        java.lang.String[] strArray34 = new java.lang.String[] { "hi!" };
        org.antlr.v4.codegen.target.Python3Target.python3Keywords = strArray34;
        python3Target26.targetCharValueEscape = strArray34;
        org.antlr.v4.codegen.target.Python3Target.python3Keywords = strArray34;
        python3Target12.targetCharValueEscape = strArray34;
        python3Target0.targetCharValueEscape = strArray34;
        boolean boolean40 = python3Target0.templatesExist();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(sTGroup14);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 29 + "'", int23 == 29);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "4.5.2.1" + "'", str24, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNull(sTGroup28);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
    }

    @Test
    public void test3758() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3758");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python3Target1.getBadWords();
        org.antlr.v4.codegen.target.Python3Target python3Target3 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str5 = python3Target3.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.codegen.target.Python3Target python3Target6 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean7 = python3Target6.supportsOverloadedMethods();
        java.util.Set<java.lang.String> strSet8 = python3Target6.badWords;
        python3Target3.badWords = strSet8;
        python3Target1.badWords = strSet8;
        java.util.Set<java.lang.String> strSet11 = python3Target1.badWords;
        org.antlr.v4.codegen.target.Python3Target python3Target12 = new org.antlr.v4.codegen.target.Python3Target();
        python3Target12.language = "";
        org.antlr.v4.codegen.target.Python3Target python3Target15 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean16 = python3Target15.supportsOverloadedMethods();
        java.lang.String str17 = python3Target15.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator18 = null;
        java.lang.String str21 = python3Target15.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator18, "", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator22 = null;
        python3Target15.gen = codeGenerator22;
        java.lang.String[] strArray31 = new java.lang.String[] { "\"\"\"\"", "\\12", "\"\"", "4.5.2.1", "", "\"\"\"\"", "\"\"" };
        java.util.LinkedHashSet<java.lang.String> strSet32 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet32, strArray31);
        python3Target15.badWords = strSet32;
        python3Target12.badWords = strSet32;
        python3Target1.badWords = strSet32;
        boolean boolean37 = python3Target1.wantsBaseVisitor();
        python3Target1.language = "_tset\"\\\"0\\\"\"Context";
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "\"\"\"\"\"\"" + "'", str5, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertNotNull(strSet11);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "4.5.2.1" + "'", str17, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "\"\"" + "'", str21, "\"\"");
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
    }

    @Test
    public void test3759() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3759");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python3Target1.getBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = null;
        python3Target1.gen = codeGenerator3;
        java.lang.String str7 = python3Target1.getTargetStringLiteralFromString("", true);
        org.antlr.v4.tool.Grammar grammar8 = null;
        org.stringtemplate.v4.ST sT9 = null;
        python3Target1.genRecognizerHeaderFile(grammar8, sT9, "\\1");
        java.lang.String[] strArray12 = python3Target1.targetCharValueEscape;
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "\"\"" + "'", str7, "\"\"");
        org.junit.Assert.assertNotNull(strArray12);
    }

    @Test
    public void test3760() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3760");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        org.antlr.v4.tool.Grammar grammar3 = null;
        org.stringtemplate.v4.ST sT4 = null;
        python3Target0.genRecognizerHeaderFile(grammar3, sT4, "");
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = python3Target0.getCodeGenerator();
        java.util.Set<java.lang.String> strSet8 = python3Target0.badWords;
        boolean boolean9 = python3Target0.supportsOverloadedMethods();
        org.antlr.v4.codegen.model.RuleFunction ruleFunction10 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str11 = python3Target0.getRuleFunctionContextStructName(ruleFunction10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertNull(codeGenerator7);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test3761() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3761");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python3Target1.getBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = null;
        python3Target1.gen = codeGenerator3;
        java.lang.String str6 = python3Target1.getAltLabelContextStructName("hi!");
        java.lang.String str8 = python3Target1.encodeIntAsCharEscape((int) (byte) 10);
        boolean boolean9 = python3Target1.wantsBaseListener();
        boolean boolean10 = python3Target1.templatesExist();
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Hi!Context" + "'", str6, "Hi!Context");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\\n" + "'", str8, "\\n");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
    }

    @Test
    public void test3762() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3762");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        org.antlr.v4.tool.Grammar grammar3 = null;
        org.stringtemplate.v4.ST sT4 = null;
        python3Target0.genRecognizerHeaderFile(grammar3, sT4, "");
        python3Target0.language = "Python3";
        java.util.Set<java.lang.String> strSet9 = null;
        python3Target0.badWords = strSet9;
        org.antlr.v4.codegen.CodeGenerator codeGenerator11 = null;
        java.lang.String str14 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator11, "\"Hi!Context\"", false);
        java.lang.String str16 = python3Target0.getListLabel("Python3");
        org.antlr.v4.codegen.CodeGenerator codeGenerator17 = python3Target0.getCodeGenerator();
        java.lang.String str18 = python3Target0.getLanguage();
        java.lang.String str21 = python3Target0.getTargetStringLiteralFromString("\\n", false);
        org.antlr.v4.tool.Grammar grammar22 = null;
        org.stringtemplate.v4.ST sT23 = null;
        python3Target0.genRecognizerHeaderFile(grammar22, sT23, "_tsethi!Context");
        java.lang.String str26 = python3Target0.getLanguage();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Hi!Context" + "'", str14, "Hi!Context");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Python3" + "'", str16, "Python3");
        org.junit.Assert.assertNull(codeGenerator17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Python3" + "'", str18, "Python3");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "\\n" + "'", str21, "\\n");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "Python3" + "'", str26, "Python3");
    }

    @Test
    public void test3763() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3763");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        org.antlr.v4.tool.Grammar grammar3 = null;
        org.stringtemplate.v4.ST sT4 = null;
        python3Target0.genRecognizerHeaderFile(grammar3, sT4, "");
        python3Target0.language = "Python3";
        java.lang.String str9 = python3Target0.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = null;
        java.lang.String str13 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator10, "", true);
        org.antlr.v4.codegen.target.Python3Target python3Target14 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean15 = python3Target14.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup16 = python3Target14.templates;
        java.lang.String[] strArray19 = new java.lang.String[] { "hi!", "hi!" };
        python3Target14.targetCharValueEscape = strArray19;
        java.lang.String str22 = python3Target14.getTargetStringLiteralFromString("\"\"");
        org.stringtemplate.v4.STGroup sTGroup23 = null;
        python3Target14.templates = sTGroup23;
        java.lang.String[] strArray25 = python3Target14.targetCharValueEscape;
        int int26 = python3Target14.getInlineTestSetWordSize();
        org.antlr.v4.codegen.CodeGenerator codeGenerator27 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target28 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator27);
        java.lang.String str30 = python3Target28.getTargetStringLiteralFromString("");
        int int31 = python3Target28.getSerializedATNSegmentLimit();
        boolean boolean32 = python3Target28.wantsBaseVisitor();
        org.stringtemplate.v4.STGroup sTGroup33 = python3Target28.loadTemplates();
        org.antlr.v4.codegen.CodeGenerator codeGenerator34 = python3Target28.gen;
        org.antlr.v4.codegen.target.Python3Target python3Target35 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean36 = python3Target35.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup37 = python3Target35.templates;
        org.antlr.v4.tool.Grammar grammar38 = null;
        org.stringtemplate.v4.ST sT39 = null;
        python3Target35.genRecognizerHeaderFile(grammar38, sT39, "");
        python3Target35.language = "Python3";
        int int44 = python3Target35.getSerializedATNSegmentLimit();
        org.stringtemplate.v4.STGroup sTGroup45 = python3Target35.loadTemplates();
        python3Target28.templates = sTGroup45;
        java.lang.String str47 = python3Target28.getVersion();
        java.util.Set<java.lang.String> strSet48 = python3Target28.getBadWords();
        python3Target14.badWords = strSet48;
        python3Target0.badWords = strSet48;
        java.lang.String str52 = python3Target0.getTargetStringLiteralFromString("_\"\\\"Python3\\\"\"");
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "4.5.2.1" + "'", str9, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "\"\"" + "'", str13, "\"\"");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(sTGroup16);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "\"\"\"\"" + "'", str22, "\"\"\"\"");
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 64 + "'", int26 == 64);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "\"\"" + "'", str30, "\"\"");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 29 + "'", int31 == 29);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(sTGroup33);
        org.junit.Assert.assertNull(codeGenerator34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNull(sTGroup37);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 29 + "'", int44 == 29);
        org.junit.Assert.assertNotNull(sTGroup45);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "4.5.2.1" + "'", str47, "4.5.2.1");
        org.junit.Assert.assertNotNull(strSet48);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "\"_\"\\\"Python3\\\"\"\"" + "'", str52, "\"_\"\\\"Python3\\\"\"\"");
    }

    @Test
    public void test3764() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3764");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        org.antlr.v4.tool.Grammar grammar3 = null;
        org.stringtemplate.v4.ST sT4 = null;
        python3Target0.genRecognizerHeaderFile(grammar3, sT4, "");
        python3Target0.language = "Python3";
        java.util.Set<java.lang.String> strSet9 = null;
        python3Target0.badWords = strSet9;
        org.antlr.v4.codegen.CodeGenerator codeGenerator11 = null;
        java.lang.String str14 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator11, "\"Hi!Context\"", false);
        java.lang.String str16 = python3Target0.getListLabel("Python3");
        java.lang.String str18 = python3Target0.getTargetStringLiteralFromString("\\0");
        org.antlr.v4.tool.Grammar grammar19 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target20 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str22 = python3Target20.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.tool.Grammar grammar23 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target24 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean25 = python3Target24.supportsOverloadedMethods();
        java.lang.String str26 = python3Target24.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator27 = null;
        java.lang.String str30 = python3Target24.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator27, "", true);
        java.lang.String str31 = python3Target24.getVersion();
        org.antlr.v4.tool.Grammar grammar32 = null;
        int[] intArray33 = new int[] {};
        java.lang.String[] strArray34 = python3Target24.getTokenTypesAsTargetLabels(grammar32, intArray33);
        java.lang.String[] strArray35 = python3Target20.getTokenTypesAsTargetLabels(grammar23, intArray33);
        java.lang.String[] strArray36 = python3Target0.getTokenTypesAsTargetLabels(grammar19, intArray33);
        java.lang.String str38 = python3Target0.getImplicitSetLabel("\"\\\"Python3\\\"\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator39 = python3Target0.gen;
        org.antlr.v4.codegen.target.Python3Target python3Target40 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean41 = python3Target40.supportsOverloadedMethods();
        java.util.Set<java.lang.String> strSet42 = python3Target40.badWords;
        boolean boolean43 = python3Target40.templatesExist();
        python3Target40.addBadWords();
        java.lang.String str45 = python3Target40.getLanguage();
        org.antlr.v4.codegen.target.Python3Target python3Target46 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean47 = python3Target46.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup48 = python3Target46.templates;
        org.antlr.v4.tool.Grammar grammar49 = null;
        org.stringtemplate.v4.ST sT50 = null;
        python3Target46.genRecognizerHeaderFile(grammar49, sT50, "");
        org.antlr.v4.codegen.target.Python3Target python3Target53 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray54 = python3Target53.targetCharValueEscape;
        python3Target46.targetCharValueEscape = strArray54;
        boolean boolean56 = python3Target46.supportsOverloadedMethods();
        boolean boolean57 = python3Target46.wantsBaseListener();
        java.lang.String str59 = python3Target46.getTargetStringLiteralFromString("_tset12");
        org.antlr.v4.codegen.target.Python3Target python3Target60 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray61 = python3Target60.targetCharValueEscape;
        java.lang.String str62 = python3Target60.language;
        int int63 = python3Target60.getSerializedATNSegmentLimit();
        org.antlr.v4.codegen.CodeGenerator codeGenerator64 = null;
        python3Target60.gen = codeGenerator64;
        org.antlr.v4.codegen.CodeGenerator codeGenerator66 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target67 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator66);
        java.util.Set<java.lang.String> strSet68 = python3Target67.getBadWords();
        java.lang.String str70 = python3Target67.getAltLabelContextStructName("d");
        org.stringtemplate.v4.STGroup sTGroup71 = python3Target67.getTemplates();
        python3Target60.templates = sTGroup71;
        python3Target46.templates = sTGroup71;
        python3Target40.templates = sTGroup71;
        python3Target0.templates = sTGroup71;
        org.stringtemplate.v4.STGroup sTGroup76 = python3Target0.loadTemplates();
        python3Target0.language = "\"_\\\"_\\\"\\\"\\\"DContext\\\"\\\"Context\\\"\\\"\"Context";
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Hi!Context" + "'", str14, "Hi!Context");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Python3" + "'", str16, "Python3");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "\"\\0\"" + "'", str18, "\"\\0\"");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "\"\"\"\"\"\"" + "'", str22, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "4.5.2.1" + "'", str26, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "\"\"" + "'", str30, "\"\"");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "4.5.2.1" + "'", str31, "4.5.2.1");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[]");
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "_tset\"\\\"Python3\\\"\"" + "'", str38, "_tset\"\\\"Python3\\\"\"");
        org.junit.Assert.assertNull(codeGenerator39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(strSet42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNull(sTGroup48);
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "\"_tset12\"" + "'", str59, "\"_tset12\"");
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertNull(str62);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 29 + "'", int63 == 29);
        org.junit.Assert.assertNotNull(strSet68);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "DContext" + "'", str70, "DContext");
        org.junit.Assert.assertNotNull(sTGroup71);
        org.junit.Assert.assertNotNull(sTGroup76);
    }

    @Test
    public void test3765() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3765");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python3Target1.getBadWords();
        org.antlr.v4.codegen.target.Python3Target python3Target3 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str5 = python3Target3.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.codegen.target.Python3Target python3Target6 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean7 = python3Target6.supportsOverloadedMethods();
        java.util.Set<java.lang.String> strSet8 = python3Target6.badWords;
        python3Target3.badWords = strSet8;
        python3Target1.badWords = strSet8;
        java.util.Set<java.lang.String> strSet11 = python3Target1.badWords;
        org.antlr.v4.codegen.CodeGenerator codeGenerator12 = python3Target1.getCodeGenerator();
        java.lang.String str14 = python3Target1.getTargetStringLiteralFromString("@");
        org.antlr.v4.codegen.CodeGenerator codeGenerator15 = python3Target1.gen;
        java.lang.String str17 = python3Target1.encodeIntAsCharEscape(0);
        int int18 = python3Target1.getInlineTestSetWordSize();
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "\"\"\"\"\"\"" + "'", str5, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertNotNull(strSet11);
        org.junit.Assert.assertNull(codeGenerator12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "\"@\"" + "'", str14, "\"@\"");
        org.junit.Assert.assertNull(codeGenerator15);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "\\0" + "'", str17, "\\0");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 64 + "'", int18 == 64);
    }

    @Test
    public void test3766() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3766");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        java.lang.String str2 = python3Target0.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = null;
        java.lang.String str6 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator3, "", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = null;
        python3Target0.gen = codeGenerator7;
        int int9 = python3Target0.getSerializedATNSegmentLimit();
        org.antlr.v4.tool.Grammar grammar10 = null;
        org.stringtemplate.v4.ST sT11 = null;
        python3Target0.genRecognizerHeaderFile(grammar10, sT11, "_tset12");
        java.lang.String str15 = python3Target0.encodeIntAsCharEscape(0);
        java.util.Set<java.lang.String> strSet16 = python3Target0.badWords;
        boolean boolean17 = python3Target0.wantsBaseListener();
        org.antlr.v4.codegen.CodeGenerator codeGenerator18 = null;
        java.lang.String str21 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator18, "\"tset\\\"\\\"\\\"hi!\\\"\\\"\"Context", false);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "4.5.2.1" + "'", str2, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\"\"" + "'", str6, "\"\"");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 29 + "'", int9 == 29);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "\\0" + "'", str15, "\\0");
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "tset\\\"\\\"\\\"hi!\\\"\\\"\\\"Contex" + "'", str21, "tset\\\"\\\"\\\"hi!\\\"\\\"\\\"Contex");
    }

    @Test
    public void test3767() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3767");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray1 = python3Target0.targetCharValueEscape;
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = null;
        java.lang.String str6 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator3, "\"\\12\"", false);
        int int7 = python3Target0.getInlineTestSetWordSize();
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = python3Target0.getCodeGenerator();
        int int9 = python3Target0.getInlineTestSetWordSize();
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "12" + "'", str6, "12");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 64 + "'", int7 == 64);
        org.junit.Assert.assertNull(codeGenerator8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 64 + "'", int9 == 64);
    }

    @Test
    public void test3768() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3768");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!", "hi!" };
        python3Target0.targetCharValueEscape = strArray5;
        java.lang.String str8 = python3Target0.getTargetStringLiteralFromString("\"\"");
        java.lang.String str10 = python3Target0.getTargetStringLiteralFromString("\"\"");
        java.lang.String str11 = python3Target0.getLanguage();
        int int12 = python3Target0.getInlineTestSetWordSize();
        boolean boolean13 = python3Target0.wantsBaseVisitor();
        java.lang.String str14 = python3Target0.getLanguage();
        org.antlr.v4.codegen.target.Python3Target python3Target15 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean16 = python3Target15.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup17 = python3Target15.templates;
        java.lang.String[] strArray20 = new java.lang.String[] { "hi!", "hi!" };
        python3Target15.targetCharValueEscape = strArray20;
        org.antlr.v4.codegen.CodeGenerator codeGenerator22 = null;
        java.lang.String str25 = python3Target15.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator22, "", false);
        int int26 = python3Target15.getSerializedATNSegmentLimit();
        java.lang.String str27 = python3Target15.getVersion();
        boolean boolean28 = python3Target15.supportsOverloadedMethods();
        org.antlr.v4.codegen.target.Python3Target python3Target29 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean30 = python3Target29.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup31 = python3Target29.templates;
        java.lang.String[] strArray34 = new java.lang.String[] { "hi!", "hi!" };
        python3Target29.targetCharValueEscape = strArray34;
        java.lang.String[] strArray37 = new java.lang.String[] { "hi!" };
        org.antlr.v4.codegen.target.Python3Target.python3Keywords = strArray37;
        python3Target29.targetCharValueEscape = strArray37;
        org.antlr.v4.codegen.target.Python3Target.python3Keywords = strArray37;
        python3Target15.targetCharValueEscape = strArray37;
        python3Target0.targetCharValueEscape = strArray37;
        python3Target0.language = "\"DContext\"";
        java.util.Set<java.lang.String> strSet45 = python3Target0.badWords;
        int int46 = python3Target0.getSerializedATNSegmentLimit();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\"\"\"\"" + "'", str8, "\"\"\"\"");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\"\"\"\"" + "'", str10, "\"\"\"\"");
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 64 + "'", int12 == 64);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(sTGroup17);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 29 + "'", int26 == 29);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "4.5.2.1" + "'", str27, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNull(sTGroup31);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertNotNull(strSet45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 29 + "'", int46 == 29);
    }

    @Test
    public void test3769() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3769");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        java.lang.String str2 = python3Target0.getVersion();
        java.lang.String str4 = python3Target0.getTargetStringLiteralFromString("12");
        boolean boolean5 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup6 = python3Target0.templates;
        int int7 = python3Target0.getSerializedATNSegmentLimit();
        java.lang.String str9 = python3Target0.getTargetStringLiteralFromString("_\"_tset12\"Context");
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "4.5.2.1" + "'", str2, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "\"12\"" + "'", str4, "\"12\"");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(sTGroup6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 29 + "'", int7 == 29);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\"_\"_tset12\"Context\"" + "'", str9, "\"_\"_tset12\"Context\"");
    }

    @Test
    public void test3770() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3770");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python3Target1.getBadWords();
        java.lang.String str4 = python3Target1.getAltLabelContextStructName("d");
        org.stringtemplate.v4.STGroup sTGroup5 = python3Target1.getTemplates();
        boolean boolean6 = python3Target1.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup7 = python3Target1.getTemplates();
        python3Target1.language = "\"\"";
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = null;
        java.lang.String str13 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator10, "\\\"4.5.2.1\\\"", false);
        org.antlr.v4.tool.Grammar grammar14 = null;
        org.stringtemplate.v4.ST sT15 = null;
        python3Target1.genRecognizerHeaderFile(grammar14, sT15, "\\\"hi!\\\"");
        boolean boolean18 = python3Target1.supportsOverloadedMethods();
        java.lang.String str20 = python3Target1.getImplicitRuleLabel("\"\"DContext\"\"Context");
        java.lang.String[] strArray21 = python3Target1.targetCharValueEscape;
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "DContext" + "'", str4, "DContext");
        org.junit.Assert.assertNotNull(sTGroup5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(sTGroup7);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "\\\"4.5.2.1\\\"" + "'", str13, "\\\"4.5.2.1\\\"");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "_\"\"DContext\"\"Context" + "'", str20, "_\"\"DContext\"\"Context");
        org.junit.Assert.assertNotNull(strArray21);
    }

    @Test
    public void test3771() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3771");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        int int2 = python3Target0.getInlineTestSetWordSize();
        java.lang.String[] strArray3 = python3Target0.targetCharValueEscape;
        org.antlr.v4.codegen.target.Python3Target python3Target4 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean5 = python3Target4.supportsOverloadedMethods();
        java.lang.String str6 = python3Target4.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = null;
        java.lang.String str10 = python3Target4.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator7, "", true);
        java.lang.String str11 = python3Target4.getVersion();
        org.antlr.v4.codegen.target.Python3Target python3Target12 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean13 = python3Target12.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup14 = python3Target12.templates;
        java.lang.String[] strArray17 = new java.lang.String[] { "hi!", "hi!" };
        python3Target12.targetCharValueEscape = strArray17;
        java.lang.String[] strArray20 = new java.lang.String[] { "hi!" };
        org.antlr.v4.codegen.target.Python3Target.python3Keywords = strArray20;
        python3Target12.targetCharValueEscape = strArray20;
        org.antlr.v4.codegen.target.Python3Target.python3Keywords = strArray20;
        python3Target4.targetCharValueEscape = strArray20;
        python3Target0.targetCharValueEscape = strArray20;
        // The following exception was thrown during execution in test generation
        try {
            org.stringtemplate.v4.STGroup sTGroup26 = python3Target0.getTemplates();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "4.5.2.1" + "'", str6, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\"\"" + "'", str10, "\"\"");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "4.5.2.1" + "'", str11, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(sTGroup14);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertNotNull(strArray20);
    }

    @Test
    public void test3772() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3772");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!", "hi!" };
        python3Target0.targetCharValueEscape = strArray5;
        java.lang.String str8 = python3Target0.getTargetStringLiteralFromString("\"\"");
        java.lang.String str10 = python3Target0.getTargetStringLiteralFromString("\"\"");
        java.lang.String[] strArray11 = python3Target0.targetCharValueEscape;
        org.antlr.v4.codegen.target.Python3Target python3Target12 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean13 = python3Target12.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup14 = python3Target12.templates;
        org.antlr.v4.tool.Grammar grammar15 = null;
        org.stringtemplate.v4.ST sT16 = null;
        python3Target12.genRecognizerHeaderFile(grammar15, sT16, "");
        python3Target12.language = "Python3";
        int int21 = python3Target12.getSerializedATNSegmentLimit();
        java.lang.String str23 = python3Target12.getListLabel("_tsetPython3");
        org.stringtemplate.v4.STGroup sTGroup24 = python3Target12.loadTemplates();
        python3Target0.templates = sTGroup24;
        java.lang.String str27 = python3Target0.getImplicitRuleLabel("\"\"\\\"DContext\\\"\"\"");
        int int28 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str31 = python3Target0.getTargetStringLiteralFromString("\"_tset\"\\\"\\\\\\\"\\\\\\\"4.5.2.1\\\\\\\"\\\\\\\"\\\"Context\"\"", true);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\"\"\"\"" + "'", str8, "\"\"\"\"");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\"\"\"\"" + "'", str10, "\"\"\"\"");
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(sTGroup14);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 29 + "'", int21 == 29);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "_tsetPython3" + "'", str23, "_tsetPython3");
        org.junit.Assert.assertNotNull(sTGroup24);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "_\"\"\\\"DContext\\\"\"\"" + "'", str27, "_\"\"\\\"DContext\\\"\"\"");
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 64 + "'", int28 == 64);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "\"\"_tset\"\\\"\\\\\\\"\\\\\\\"4.5.2.1\\\\\\\"\\\\\\\"\\\"Context\"\"\"" + "'", str31, "\"\"_tset\"\\\"\\\\\\\"\\\\\\\"4.5.2.1\\\\\\\"\\\\\\\"\\\"Context\"\"\"");
    }

    @Test
    public void test3773() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3773");
        org.antlr.v4.codegen.target.Python3Target.PythonStringRenderer pythonStringRenderer0 = new org.antlr.v4.codegen.target.Python3Target.PythonStringRenderer();
        java.lang.Object obj1 = null;
        java.util.Locale locale3 = null;
        java.lang.String str4 = pythonStringRenderer0.toString(obj1, "\"\"\"\"\"\"", locale3);
        org.antlr.v4.codegen.target.Python3Target python3Target5 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray6 = python3Target5.targetCharValueEscape;
        org.stringtemplate.v4.STGroup sTGroup7 = python3Target5.templates;
        java.util.Locale locale9 = null;
        java.lang.String str10 = pythonStringRenderer0.toString((java.lang.Object) sTGroup7, "\"Hi!Context\"", locale9);
        java.util.Locale locale13 = null;
        java.lang.String str14 = pythonStringRenderer0.toString((java.lang.Object) "\"DContext\"", "", locale13);
        java.lang.Object obj15 = null;
        java.util.Locale locale17 = null;
        java.lang.String str18 = pythonStringRenderer0.toString(obj15, "\"\\\"hi!\\\"\"", locale17);
        java.util.Locale locale21 = null;
        java.lang.String str22 = pythonStringRenderer0.toString((java.lang.Object) "#", "", locale21);
        org.antlr.v4.codegen.target.Python3Target python3Target23 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean24 = python3Target23.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup25 = python3Target23.templates;
        org.antlr.v4.tool.Grammar grammar26 = null;
        org.stringtemplate.v4.ST sT27 = null;
        python3Target23.genRecognizerHeaderFile(grammar26, sT27, "");
        python3Target23.language = "Python3";
        java.util.Set<java.lang.String> strSet32 = null;
        python3Target23.badWords = strSet32;
        boolean boolean34 = python3Target23.wantsBaseVisitor();
        java.lang.String str36 = python3Target23.getImplicitSetLabel("Python3");
        int int37 = python3Target23.getInlineTestSetWordSize();
        org.antlr.v4.codegen.target.Python3Target python3Target38 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray39 = python3Target38.targetCharValueEscape;
        java.util.Set<java.lang.String> strSet40 = python3Target38.badWords;
        python3Target23.badWords = strSet40;
        java.lang.String str42 = python3Target23.language;
        java.util.Locale locale44 = null;
        java.lang.String str45 = pythonStringRenderer0.toString((java.lang.Object) str42, "\"\"\"\\0\"\"\"", locale44);
        org.antlr.v4.codegen.target.Python3Target python3Target46 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean47 = python3Target46.supportsOverloadedMethods();
        java.lang.String str48 = python3Target46.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator49 = null;
        java.lang.String str52 = python3Target46.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator49, "", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator53 = null;
        python3Target46.gen = codeGenerator53;
        int int55 = python3Target46.getSerializedATNSegmentLimit();
        org.antlr.v4.tool.Grammar grammar56 = null;
        org.stringtemplate.v4.ST sT57 = null;
        python3Target46.genRecognizerHeaderFile(grammar56, sT57, "_tset12");
        org.stringtemplate.v4.STGroup sTGroup60 = python3Target46.templates;
        org.stringtemplate.v4.STGroup sTGroup61 = python3Target46.templates;
        org.antlr.v4.codegen.CodeGenerator codeGenerator62 = python3Target46.getCodeGenerator();
        python3Target46.addBadWords();
        java.lang.String str64 = python3Target46.getLanguage();
        java.util.Locale locale66 = null;
        java.lang.String str67 = pythonStringRenderer0.toString((java.lang.Object) str64, "___tset\"\"\"\"\"\"\"\"ContextContextContextContext", locale66);
        java.util.Locale locale70 = null;
        java.lang.String str71 = pythonStringRenderer0.toString((java.lang.Object) "_\"\"\"_tset12\"\"\"", "_tset\"\\\"0\\\"\"", locale70);
        org.antlr.v4.codegen.CodeGenerator codeGenerator72 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target73 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator72);
        java.util.Set<java.lang.String> strSet74 = python3Target73.getBadWords();
        java.lang.String str76 = python3Target73.getAltLabelContextStructName("d");
        java.lang.String str77 = python3Target73.getLanguage();
        java.lang.String str79 = python3Target73.getTargetStringLiteralFromString("_tset_\"\"\\\"DContext\\\"\"\"");
        java.util.Locale locale81 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str82 = pythonStringRenderer0.toString((java.lang.Object) python3Target73, "\"\"\\\"\\\"\\\"\\\"\\\"\\\"Context\"\"", locale81);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: org.antlr.v4.codegen.target.Python3Target cannot be cast to java.lang.String");
        } catch (java.lang.ClassCastException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "\"\"\"\"\"\"" + "'", str4, "\"\"\"\"\"\"");
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertNull(sTGroup7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\"Hi!Context\"" + "'", str10, "\"Hi!Context\"");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "\"\\\"hi!\\\"\"" + "'", str18, "\"\\\"hi!\\\"\"");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNull(sTGroup25);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "_tsetPython3" + "'", str36, "_tsetPython3");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 64 + "'", int37 == 64);
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertNotNull(strSet40);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "Python3" + "'", str42, "Python3");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "\"\"\"\\0\"\"\"" + "'", str45, "\"\"\"\\0\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "4.5.2.1" + "'", str48, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "\"\"" + "'", str52, "\"\"");
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 29 + "'", int55 == 29);
        org.junit.Assert.assertNull(sTGroup60);
        org.junit.Assert.assertNull(sTGroup61);
        org.junit.Assert.assertNull(codeGenerator62);
        org.junit.Assert.assertNull(str64);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "___tset\"\"\"\"\"\"\"\"ContextContextContextContext" + "'", str67, "___tset\"\"\"\"\"\"\"\"ContextContextContextContext");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "_tset\"\\\"0\\\"\"" + "'", str71, "_tset\"\\\"0\\\"\"");
        org.junit.Assert.assertNotNull(strSet74);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "DContext" + "'", str76, "DContext");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "Python3" + "'", str77, "Python3");
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "\"_tset_\\\"\\\"\\\\\\\"DContext\\\\\\\"\\\"\\\"\"" + "'", str79, "\"_tset_\\\"\\\"\\\\\\\"DContext\\\\\\\"\\\"\\\"\"");
    }

    @Test
    public void test3774() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3774");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.lang.String str3 = python3Target1.getTargetStringLiteralFromString("");
        int int4 = python3Target1.getSerializedATNSegmentLimit();
        java.lang.String str6 = python3Target1.getAltLabelContextStructName("\"\"\"\"\"\"");
        java.lang.String str9 = python3Target1.getTargetStringLiteralFromString("\"__tset\"\"\"\"\"\"\"\"ContextContextContext\"", false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "\"\"" + "'", str3, "\"\"");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 29 + "'", int4 == 29);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\"\"\"\"\"\"Context" + "'", str6, "\"\"\"\"\"\"Context");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\\\"__tset\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"ContextContextContext\\\"" + "'", str9, "\\\"__tset\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"ContextContextContext\\\"");
    }

    @Test
    public void test3775() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3775");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray1 = python3Target0.targetCharValueEscape;
        java.lang.String str2 = python3Target0.language;
        int int3 = python3Target0.getSerializedATNSegmentLimit();
        java.lang.String str5 = python3Target0.encodeIntAsCharEscape(1);
        boolean boolean6 = python3Target0.wantsBaseVisitor();
        org.antlr.v4.tool.Grammar grammar7 = null;
        org.stringtemplate.v4.ST sT8 = null;
        python3Target0.genRecognizerHeaderFile(grammar7, sT8, "\"\"tset\\\"\\\"\\\"hi!\\\"\\\"\"\"");
        java.lang.String str11 = python3Target0.language;
        java.lang.String[] strArray12 = python3Target0.targetCharValueEscape;
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 29 + "'", int3 == 29);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "\\1" + "'", str5, "\\1");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(strArray12);
    }

    @Test
    public void test3776() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3776");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        java.lang.String str2 = python3Target0.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = python3Target0.getCodeGenerator();
        org.stringtemplate.v4.STGroup sTGroup4 = null;
        python3Target0.templates = sTGroup4;
        org.stringtemplate.v4.STGroup sTGroup6 = python3Target0.templates;
        org.antlr.v4.tool.Grammar grammar7 = null;
        org.stringtemplate.v4.ST sT8 = null;
        python3Target0.genRecognizerHeaderFile(grammar7, sT8, "");
        java.lang.String[] strArray11 = python3Target0.targetCharValueEscape;
        org.antlr.v4.codegen.target.Python3Target.python3Keywords = strArray11;
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "4.5.2.1" + "'", str2, "4.5.2.1");
        org.junit.Assert.assertNull(codeGenerator3);
        org.junit.Assert.assertNull(sTGroup6);
        org.junit.Assert.assertNotNull(strArray11);
    }

    @Test
    public void test3777() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3777");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        python3Target0.language = "";
        org.antlr.v4.codegen.target.Python3Target python3Target3 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean4 = python3Target3.supportsOverloadedMethods();
        java.lang.String str5 = python3Target3.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = null;
        java.lang.String str9 = python3Target3.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator6, "", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = null;
        python3Target3.gen = codeGenerator10;
        java.lang.String[] strArray19 = new java.lang.String[] { "\"\"\"\"", "\\12", "\"\"", "4.5.2.1", "", "\"\"\"\"", "\"\"" };
        java.util.LinkedHashSet<java.lang.String> strSet20 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet20, strArray19);
        python3Target3.badWords = strSet20;
        python3Target0.badWords = strSet20;
        java.lang.String str25 = python3Target0.encodeIntAsCharEscape((int) (byte) 100);
        java.lang.String str26 = python3Target0.getLanguage();
        java.lang.String[] strArray27 = new java.lang.String[] {};
        python3Target0.targetCharValueEscape = strArray27;
        java.lang.String str31 = python3Target0.getTargetStringLiteralFromString("", true);
        boolean boolean32 = python3Target0.templatesExist();
        python3Target0.language = "_\\\"\\\"4.5.2.1\\\"\\\"Context";
        int int35 = python3Target0.getSerializedATNSegmentLimit();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "4.5.2.1" + "'", str5, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\"\"" + "'", str9, "\"\"");
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "d" + "'", str25, "d");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "\"\"" + "'", str31, "\"\"");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 29 + "'", int35 == 29);
    }

    @Test
    public void test3778() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3778");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.lang.String str3 = python3Target1.getTargetStringLiteralFromString("");
        int int4 = python3Target1.getSerializedATNSegmentLimit();
        java.lang.String str5 = python3Target1.getLanguage();
        java.lang.String str7 = python3Target1.encodeIntAsCharEscape((int) (short) 0);
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = null;
        python3Target1.gen = codeGenerator8;
        java.lang.String str11 = python3Target1.getImplicitRuleLabel("\"\"4.5.2.1\"\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator12 = null;
        python3Target1.gen = codeGenerator12;
        java.lang.String str15 = python3Target1.getTargetStringLiteralFromString("tset1");
        org.stringtemplate.v4.STGroup sTGroup16 = python3Target1.getTemplates();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "\"\"" + "'", str3, "\"\"");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 29 + "'", int4 == 29);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Python3" + "'", str5, "Python3");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "\\0" + "'", str7, "\\0");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "_\"\"4.5.2.1\"\"" + "'", str11, "_\"\"4.5.2.1\"\"");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "\"tset1\"" + "'", str15, "\"tset1\"");
        org.junit.Assert.assertNotNull(sTGroup16);
    }

    @Test
    public void test3779() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3779");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!", "hi!" };
        python3Target0.targetCharValueEscape = strArray5;
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = null;
        java.lang.String str10 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator7, "", false);
        int int11 = python3Target0.getSerializedATNSegmentLimit();
        java.lang.String str12 = python3Target0.getVersion();
        boolean boolean13 = python3Target0.supportsOverloadedMethods();
        python3Target0.addBadWords();
        boolean boolean15 = python3Target0.wantsBaseVisitor();
        int int16 = python3Target0.getInlineTestSetWordSize();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str18 = python3Target0.getImplicitRuleLabel("\"_tset12\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 29 + "'", int11 == 29);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "4.5.2.1" + "'", str12, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 64 + "'", int16 == 64);
    }

    @Test
    public void test3780() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3780");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray1 = python3Target0.targetCharValueEscape;
        java.lang.String str2 = python3Target0.getVersion();
        int int3 = python3Target0.getInlineTestSetWordSize();
        boolean boolean4 = python3Target0.supportsOverloadedMethods();
        boolean boolean5 = python3Target0.wantsBaseListener();
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "4.5.2.1" + "'", str2, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 64 + "'", int3 == 64);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
    }

    @Test
    public void test3781() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3781");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!", "hi!" };
        python3Target0.targetCharValueEscape = strArray5;
        java.lang.String str8 = python3Target0.getTargetStringLiteralFromString("\"\"");
        org.stringtemplate.v4.STGroup sTGroup9 = null;
        python3Target0.templates = sTGroup9;
        org.antlr.v4.tool.Grammar grammar11 = null;
        org.stringtemplate.v4.ST sT12 = null;
        python3Target0.genRecognizerHeaderFile(grammar11, sT12, "Hi!Context");
        java.util.Set<java.lang.String> strSet15 = python3Target0.getBadWords();
        org.antlr.v4.codegen.model.RuleFunction ruleFunction16 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str17 = python3Target0.getRuleFunctionContextStructName(ruleFunction16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\"\"\"\"" + "'", str8, "\"\"\"\"");
        org.junit.Assert.assertNotNull(strSet15);
    }

    @Test
    public void test3782() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3782");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python3Target1.getBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = null;
        python3Target1.gen = codeGenerator3;
        java.lang.String str6 = python3Target1.getAltLabelContextStructName("hi!");
        java.lang.String str9 = python3Target1.getTargetStringLiteralFromString("\"hi!\"", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = null;
        python3Target1.gen = codeGenerator10;
        org.antlr.v4.tool.Grammar grammar12 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target13 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray14 = python3Target13.targetCharValueEscape;
        org.stringtemplate.v4.STGroup sTGroup15 = python3Target13.templates;
        int int16 = python3Target13.getInlineTestSetWordSize();
        org.antlr.v4.codegen.CodeGenerator codeGenerator17 = python3Target13.gen;
        org.antlr.v4.tool.Grammar grammar18 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target19 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str21 = python3Target19.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.tool.Grammar grammar22 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target23 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean24 = python3Target23.supportsOverloadedMethods();
        java.lang.String str25 = python3Target23.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator26 = null;
        java.lang.String str29 = python3Target23.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator26, "", true);
        java.lang.String str30 = python3Target23.getVersion();
        org.antlr.v4.tool.Grammar grammar31 = null;
        int[] intArray32 = new int[] {};
        java.lang.String[] strArray33 = python3Target23.getTokenTypesAsTargetLabels(grammar31, intArray32);
        java.lang.String[] strArray34 = python3Target19.getTokenTypesAsTargetLabels(grammar22, intArray32);
        java.lang.String[] strArray35 = python3Target13.getTokenTypesAsTargetLabels(grammar18, intArray32);
        java.lang.String[] strArray36 = python3Target1.getTokenTypesAsTargetLabels(grammar12, intArray32);
        java.lang.String[] strArray37 = python3Target1.targetCharValueEscape;
        java.lang.String str39 = python3Target1.getImplicitRuleLabel("#");
        java.lang.String str41 = python3Target1.getListLabel("\"\"tset\\\"\\\"\\\"hi!\\\"\\\"\"\"");
        int int42 = python3Target1.getInlineTestSetWordSize();
        boolean boolean43 = python3Target1.wantsBaseListener();
        boolean boolean44 = python3Target1.wantsBaseListener();
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Hi!Context" + "'", str6, "Hi!Context");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\"\\\"hi!\\\"\"" + "'", str9, "\"\\\"hi!\\\"\"");
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertNull(sTGroup15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 64 + "'", int16 == 64);
        org.junit.Assert.assertNull(codeGenerator17);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "\"\"\"\"\"\"" + "'", str21, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "4.5.2.1" + "'", str25, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "\"\"" + "'", str29, "\"\"");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "4.5.2.1" + "'", str30, "4.5.2.1");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[]");
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "_#" + "'", str39, "_#");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "\"\"tset\\\"\\\"\\\"hi!\\\"\\\"\"\"" + "'", str41, "\"\"tset\\\"\\\"\\\"hi!\\\"\\\"\"\"");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 64 + "'", int42 == 64);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
    }

    @Test
    public void test3783() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3783");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        java.lang.String str2 = python3Target0.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = null;
        java.lang.String str6 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator3, "", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = null;
        python3Target0.gen = codeGenerator7;
        int int9 = python3Target0.getSerializedATNSegmentLimit();
        java.lang.String str11 = python3Target0.getTargetStringLiteralFromString("\\1");
        java.lang.String str12 = python3Target0.language;
        org.antlr.v4.tool.Grammar grammar13 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator14 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target15 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator14);
        java.util.Set<java.lang.String> strSet16 = python3Target15.getBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator17 = null;
        python3Target15.gen = codeGenerator17;
        java.lang.String str20 = python3Target15.getAltLabelContextStructName("hi!");
        org.antlr.v4.tool.Grammar grammar21 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target22 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean23 = python3Target22.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup24 = python3Target22.templates;
        java.lang.String[] strArray27 = new java.lang.String[] { "hi!", "hi!" };
        python3Target22.targetCharValueEscape = strArray27;
        java.lang.String[] strArray30 = new java.lang.String[] { "hi!" };
        org.antlr.v4.codegen.target.Python3Target.python3Keywords = strArray30;
        python3Target22.targetCharValueEscape = strArray30;
        org.antlr.v4.tool.Grammar grammar33 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target34 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str36 = python3Target34.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator37 = null;
        python3Target34.gen = codeGenerator37;
        org.antlr.v4.tool.Grammar grammar39 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target40 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str42 = python3Target40.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.tool.Grammar grammar43 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target44 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean45 = python3Target44.supportsOverloadedMethods();
        java.lang.String str46 = python3Target44.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator47 = null;
        java.lang.String str50 = python3Target44.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator47, "", true);
        java.lang.String str51 = python3Target44.getVersion();
        org.antlr.v4.tool.Grammar grammar52 = null;
        int[] intArray53 = new int[] {};
        java.lang.String[] strArray54 = python3Target44.getTokenTypesAsTargetLabels(grammar52, intArray53);
        java.lang.String[] strArray55 = python3Target40.getTokenTypesAsTargetLabels(grammar43, intArray53);
        java.lang.String[] strArray56 = python3Target34.getTokenTypesAsTargetLabels(grammar39, intArray53);
        java.lang.String[] strArray57 = python3Target22.getTokenTypesAsTargetLabels(grammar33, intArray53);
        java.lang.String[] strArray58 = python3Target15.getTokenTypesAsTargetLabels(grammar21, intArray53);
        java.lang.String[] strArray59 = python3Target0.getTokenTypesAsTargetLabels(grammar13, intArray53);
        boolean boolean60 = python3Target0.wantsBaseVisitor();
        org.antlr.v4.tool.Grammar grammar61 = null;
        org.stringtemplate.v4.ST sT62 = null;
        // The following exception was thrown during execution in test generation
        try {
            python3Target0.genFile(grammar61, sT62, "\"\\\"\\\"\\\"\\\"\\\"\\\"Context\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "4.5.2.1" + "'", str2, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\"\"" + "'", str6, "\"\"");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 29 + "'", int9 == 29);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "\"\\1\"" + "'", str11, "\"\\1\"");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "Hi!Context" + "'", str20, "Hi!Context");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNull(sTGroup24);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "\"\"\"\"\"\"" + "'", str36, "\"\"\"\"\"\"");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "\"\"\"\"\"\"" + "'", str42, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "4.5.2.1" + "'", str46, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "\"\"" + "'", str50, "\"\"");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "4.5.2.1" + "'", str51, "4.5.2.1");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[]");
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertNotNull(strArray55);
        org.junit.Assert.assertNotNull(strArray56);
        org.junit.Assert.assertNotNull(strArray57);
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertNotNull(strArray59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
    }

    @Test
    public void test3784() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3784");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray1 = python3Target0.targetCharValueEscape;
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = null;
        java.lang.String str6 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator3, "\"\\12\"", false);
        int int7 = python3Target0.getInlineTestSetWordSize();
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = python3Target0.getCodeGenerator();
        boolean boolean9 = python3Target0.wantsBaseListener();
        java.lang.String str10 = python3Target0.getVersion();
        boolean boolean11 = python3Target0.wantsBaseVisitor();
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "12" + "'", str6, "12");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 64 + "'", int7 == 64);
        org.junit.Assert.assertNull(codeGenerator8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "4.5.2.1" + "'", str10, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test3785() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3785");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!", "hi!" };
        python3Target0.targetCharValueEscape = strArray5;
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = null;
        java.lang.String str10 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator7, "", false);
        org.antlr.v4.codegen.CodeGenerator codeGenerator11 = python3Target0.gen;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str13 = python3Target0.getImplicitTokenLabel("\"_tset_\\\"\\\"\\\\\\\"DContext\\\\\\\"\\\"\\\"\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNull(codeGenerator11);
    }

    @Test
    public void test3786() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3786");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        python3Target0.language = "";
        org.antlr.v4.codegen.target.Python3Target python3Target3 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean4 = python3Target3.supportsOverloadedMethods();
        java.lang.String str5 = python3Target3.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = null;
        java.lang.String str9 = python3Target3.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator6, "", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = null;
        python3Target3.gen = codeGenerator10;
        java.lang.String[] strArray19 = new java.lang.String[] { "\"\"\"\"", "\\12", "\"\"", "4.5.2.1", "", "\"\"\"\"", "\"\"" };
        java.util.LinkedHashSet<java.lang.String> strSet20 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet20, strArray19);
        python3Target3.badWords = strSet20;
        python3Target0.badWords = strSet20;
        python3Target0.language = "_tsetPython3";
        org.antlr.v4.tool.Grammar grammar26 = null;
        org.stringtemplate.v4.ST sT27 = null;
        python3Target0.genRecognizerHeaderFile(grammar26, sT27, "_tsetPython3");
        java.lang.String[] strArray30 = python3Target0.targetCharValueEscape;
        org.stringtemplate.v4.STGroup sTGroup31 = python3Target0.templates;
        java.lang.String str33 = python3Target0.encodeIntAsCharEscape((int) '4');
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "4.5.2.1" + "'", str5, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\"\"" + "'", str9, "\"\"");
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertNull(sTGroup31);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "\\64" + "'", str33, "\\64");
    }

    @Test
    public void test3787() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3787");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        python3Target0.language = "4.5.2.1";
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = python3Target0.getCodeGenerator();
        org.antlr.v4.codegen.CodeGenerator codeGenerator4 = python3Target0.gen;
        java.lang.String str5 = python3Target0.getLanguage();
        python3Target0.addBadWords();
        java.lang.String str8 = python3Target0.encodeIntAsCharEscape(10);
        org.antlr.v4.codegen.CodeGenerator codeGenerator9 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target10 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator9);
        java.util.Set<java.lang.String> strSet11 = python3Target10.getBadWords();
        java.lang.String str13 = python3Target10.getAltLabelContextStructName("d");
        org.stringtemplate.v4.STGroup sTGroup14 = python3Target10.getTemplates();
        python3Target0.templates = sTGroup14;
        java.lang.String str17 = python3Target0.encodeIntAsCharEscape((int) (short) 1);
        org.antlr.v4.codegen.CodeGenerator codeGenerator18 = null;
        java.lang.String str21 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator18, "_12", false);
        boolean boolean22 = python3Target0.templatesExist();
        boolean boolean23 = python3Target0.wantsBaseVisitor();
        java.lang.String str24 = python3Target0.getLanguage();
        java.lang.String str25 = python3Target0.getLanguage();
        org.antlr.v4.tool.ast.GrammarAST grammarAST26 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str27 = python3Target0.getLoopLabel(grammarAST26);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(codeGenerator3);
        org.junit.Assert.assertNull(codeGenerator4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "4.5.2.1" + "'", str5, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\\12" + "'", str8, "\\12");
        org.junit.Assert.assertNotNull(strSet11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "DContext" + "'", str13, "DContext");
        org.junit.Assert.assertNotNull(sTGroup14);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "\\1" + "'", str17, "\\1");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "1" + "'", str21, "1");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "4.5.2.1" + "'", str24, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "4.5.2.1" + "'", str25, "4.5.2.1");
    }

    @Test
    public void test3788() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3788");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python3Target1.getBadWords();
        java.lang.String str4 = python3Target1.getAltLabelContextStructName("d");
        org.stringtemplate.v4.STGroup sTGroup5 = python3Target1.getTemplates();
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = null;
        java.lang.String str9 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator6, "", true);
        org.antlr.v4.tool.Grammar grammar10 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target11 = new org.antlr.v4.codegen.target.Python3Target();
        python3Target11.language = "";
        org.antlr.v4.codegen.target.Python3Target python3Target14 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean15 = python3Target14.supportsOverloadedMethods();
        java.lang.String str16 = python3Target14.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator17 = null;
        java.lang.String str20 = python3Target14.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator17, "", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator21 = null;
        python3Target14.gen = codeGenerator21;
        java.lang.String[] strArray30 = new java.lang.String[] { "\"\"\"\"", "\\12", "\"\"", "4.5.2.1", "", "\"\"\"\"", "\"\"" };
        java.util.LinkedHashSet<java.lang.String> strSet31 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet31, strArray30);
        python3Target14.badWords = strSet31;
        python3Target11.badWords = strSet31;
        java.lang.String str36 = python3Target11.encodeIntAsCharEscape((int) (byte) 100);
        java.lang.String str37 = python3Target11.getLanguage();
        java.lang.String[] strArray38 = new java.lang.String[] {};
        python3Target11.targetCharValueEscape = strArray38;
        org.antlr.v4.tool.Grammar grammar40 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target41 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean42 = python3Target41.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup43 = python3Target41.templates;
        java.lang.String[] strArray46 = new java.lang.String[] { "hi!", "hi!" };
        python3Target41.targetCharValueEscape = strArray46;
        org.antlr.v4.codegen.CodeGenerator codeGenerator48 = null;
        java.lang.String str51 = python3Target41.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator48, "", false);
        java.util.Set<java.lang.String> strSet52 = python3Target41.badWords;
        java.lang.String str54 = python3Target41.getTargetStringLiteralFromString("12");
        int int55 = python3Target41.getSerializedATNSegmentLimit();
        boolean boolean56 = python3Target41.supportsOverloadedMethods();
        org.antlr.v4.tool.Grammar grammar57 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target58 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean59 = python3Target58.supportsOverloadedMethods();
        java.util.Set<java.lang.String> strSet60 = python3Target58.badWords;
        boolean boolean61 = python3Target58.templatesExist();
        java.lang.String str62 = python3Target58.getLanguage();
        org.antlr.v4.tool.Grammar grammar63 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target64 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str66 = python3Target64.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator67 = null;
        python3Target64.gen = codeGenerator67;
        org.antlr.v4.tool.Grammar grammar69 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target70 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str72 = python3Target70.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.tool.Grammar grammar73 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target74 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean75 = python3Target74.supportsOverloadedMethods();
        java.lang.String str76 = python3Target74.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator77 = null;
        java.lang.String str80 = python3Target74.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator77, "", true);
        java.lang.String str81 = python3Target74.getVersion();
        org.antlr.v4.tool.Grammar grammar82 = null;
        int[] intArray83 = new int[] {};
        java.lang.String[] strArray84 = python3Target74.getTokenTypesAsTargetLabels(grammar82, intArray83);
        java.lang.String[] strArray85 = python3Target70.getTokenTypesAsTargetLabels(grammar73, intArray83);
        java.lang.String[] strArray86 = python3Target64.getTokenTypesAsTargetLabels(grammar69, intArray83);
        java.lang.String[] strArray87 = python3Target58.getTokenTypesAsTargetLabels(grammar63, intArray83);
        java.lang.String[] strArray88 = python3Target41.getTokenTypesAsTargetLabels(grammar57, intArray83);
        java.lang.String[] strArray89 = python3Target11.getTokenTypesAsTargetLabels(grammar40, intArray83);
        java.lang.String[] strArray90 = python3Target1.getTokenTypesAsTargetLabels(grammar10, intArray83);
        java.lang.String str91 = python3Target1.getVersion();
        boolean boolean92 = python3Target1.wantsBaseListener();
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "DContext" + "'", str4, "DContext");
        org.junit.Assert.assertNotNull(sTGroup5);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\"\"" + "'", str9, "\"\"");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "4.5.2.1" + "'", str16, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "\"\"" + "'", str20, "\"\"");
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "d" + "'", str36, "d");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "" + "'", str37, "");
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNull(sTGroup43);
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "" + "'", str51, "");
        org.junit.Assert.assertNotNull(strSet52);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "\"12\"" + "'", str54, "\"12\"");
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 29 + "'", int55 == 29);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(strSet60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNull(str62);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "\"\"\"\"\"\"" + "'", str66, "\"\"\"\"\"\"");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "\"\"\"\"\"\"" + "'", str72, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "4.5.2.1" + "'", str76, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "\"\"" + "'", str80, "\"\"");
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "4.5.2.1" + "'", str81, "4.5.2.1");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[]");
        org.junit.Assert.assertNotNull(strArray84);
        org.junit.Assert.assertNotNull(strArray85);
        org.junit.Assert.assertNotNull(strArray86);
        org.junit.Assert.assertNotNull(strArray87);
        org.junit.Assert.assertNotNull(strArray88);
        org.junit.Assert.assertNotNull(strArray89);
        org.junit.Assert.assertNotNull(strArray90);
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "4.5.2.1" + "'", str91, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
    }

    @Test
    public void test3789() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3789");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python3Target1.getBadWords();
        java.lang.String str4 = python3Target1.getAltLabelContextStructName("d");
        org.stringtemplate.v4.STGroup sTGroup5 = python3Target1.getTemplates();
        boolean boolean6 = python3Target1.supportsOverloadedMethods();
        java.lang.String str8 = python3Target1.getImplicitRuleLabel("12");
        org.stringtemplate.v4.STGroup sTGroup9 = python3Target1.templates;
        int int10 = python3Target1.getInlineTestSetWordSize();
        boolean boolean11 = python3Target1.wantsBaseVisitor();
        org.antlr.v4.tool.Grammar grammar12 = null;
        int[] intArray15 = new int[] { (byte) 100, ' ' };
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String[] strArray16 = python3Target1.getTokenTypesAsTargetLabels(grammar12, intArray15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "DContext" + "'", str4, "DContext");
        org.junit.Assert.assertNotNull(sTGroup5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "_12" + "'", str8, "_12");
        org.junit.Assert.assertNotNull(sTGroup9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 64 + "'", int10 == 64);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[100, 32]");
    }

    @Test
    public void test3790() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3790");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        java.lang.String str2 = python3Target0.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = null;
        java.lang.String str6 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator3, "", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = null;
        python3Target0.gen = codeGenerator7;
        java.lang.String[] strArray16 = new java.lang.String[] { "\"\"\"\"", "\\12", "\"\"", "4.5.2.1", "", "\"\"\"\"", "\"\"" };
        java.util.LinkedHashSet<java.lang.String> strSet17 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet17, strArray16);
        python3Target0.badWords = strSet17;
        org.antlr.v4.codegen.CodeGenerator codeGenerator20 = python3Target0.gen;
        org.antlr.v4.codegen.target.Python3Target python3Target21 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean22 = python3Target21.supportsOverloadedMethods();
        java.lang.String str23 = python3Target21.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator24 = python3Target21.getCodeGenerator();
        org.stringtemplate.v4.STGroup sTGroup25 = null;
        python3Target21.templates = sTGroup25;
        org.stringtemplate.v4.STGroup sTGroup27 = python3Target21.templates;
        org.antlr.v4.codegen.target.Python3Target python3Target28 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray29 = python3Target28.targetCharValueEscape;
        python3Target28.addBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator31 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target32 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator31);
        java.lang.String str34 = python3Target32.getTargetStringLiteralFromString("");
        int int35 = python3Target32.getSerializedATNSegmentLimit();
        boolean boolean36 = python3Target32.wantsBaseVisitor();
        org.stringtemplate.v4.STGroup sTGroup37 = python3Target32.loadTemplates();
        python3Target28.templates = sTGroup37;
        python3Target21.templates = sTGroup37;
        python3Target0.templates = sTGroup37;
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "4.5.2.1" + "'", str2, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\"\"" + "'", str6, "\"\"");
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNull(codeGenerator20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "4.5.2.1" + "'", str23, "4.5.2.1");
        org.junit.Assert.assertNull(codeGenerator24);
        org.junit.Assert.assertNull(sTGroup27);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "\"\"" + "'", str34, "\"\"");
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 29 + "'", int35 == 29);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(sTGroup37);
    }

    @Test
    public void test3791() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3791");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python3Target1.getBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = null;
        python3Target1.gen = codeGenerator3;
        org.antlr.v4.codegen.CodeGenerator codeGenerator5 = null;
        python3Target1.gen = codeGenerator5;
        java.lang.String str9 = python3Target1.getTargetStringLiteralFromString("_tset_12", false);
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = python3Target1.getCodeGenerator();
        org.antlr.v4.tool.ast.GrammarAST grammarAST11 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean12 = python3Target1.grammarSymbolCausesIssueInGeneratedCode(grammarAST11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "_tset_12" + "'", str9, "_tset_12");
        org.junit.Assert.assertNull(codeGenerator10);
    }

    @Test
    public void test3792() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3792");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray1 = python3Target0.targetCharValueEscape;
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = null;
        java.lang.String str6 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator3, "\"\\12\"", false);
        int int7 = python3Target0.getSerializedATNSegmentLimit();
        boolean boolean8 = python3Target0.templatesExist();
        boolean boolean9 = python3Target0.supportsOverloadedMethods();
        org.antlr.v4.tool.Grammar grammar10 = null;
        org.stringtemplate.v4.ST sT11 = null;
        python3Target0.genRecognizerHeaderFile(grammar10, sT11, "_tsetPython3");
        java.lang.String str14 = python3Target0.getVersion();
        java.lang.String[] strArray15 = python3Target0.targetCharValueEscape;
        boolean boolean16 = python3Target0.wantsBaseVisitor();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str18 = python3Target0.getImplicitTokenLabel("_4.5.2.1");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "12" + "'", str6, "12");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 29 + "'", int7 == 29);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "4.5.2.1" + "'", str14, "4.5.2.1");
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    }

    @Test
    public void test3793() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3793");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.lang.String str3 = python3Target1.getTargetStringLiteralFromString("");
        int int4 = python3Target1.getSerializedATNSegmentLimit();
        boolean boolean5 = python3Target1.wantsBaseVisitor();
        org.stringtemplate.v4.STGroup sTGroup6 = python3Target1.loadTemplates();
        java.lang.String str7 = python3Target1.getLanguage();
        java.lang.String str9 = python3Target1.getTargetStringLiteralFromString("\"\"\\0\"\"");
        org.stringtemplate.v4.STGroup sTGroup10 = python3Target1.loadTemplates();
        boolean boolean11 = python3Target1.wantsBaseVisitor();
        org.antlr.v4.codegen.CodeGenerator codeGenerator12 = null;
        java.lang.String str15 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator12, "\"\"DContext\"\"Context", true);
        org.antlr.v4.codegen.target.Python3Target python3Target16 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean17 = python3Target16.supportsOverloadedMethods();
        java.lang.String str18 = python3Target16.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator19 = null;
        java.lang.String str22 = python3Target16.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator19, "", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator23 = null;
        python3Target16.gen = codeGenerator23;
        int int25 = python3Target16.getSerializedATNSegmentLimit();
        org.antlr.v4.tool.Grammar grammar26 = null;
        org.stringtemplate.v4.ST sT27 = null;
        python3Target16.genRecognizerHeaderFile(grammar26, sT27, "_tset12");
        org.stringtemplate.v4.STGroup sTGroup30 = python3Target16.templates;
        org.stringtemplate.v4.STGroup sTGroup31 = python3Target16.templates;
        python3Target16.language = "\\nContext";
        java.lang.String[] strArray34 = python3Target16.targetCharValueEscape;
        python3Target1.targetCharValueEscape = strArray34;
        python3Target1.language = "\\\"\\\"\\\"\\\"\\\"\\\"\\\"ContextContextContex";
        java.lang.String str38 = python3Target1.getVersion();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str40 = python3Target1.getImplicitRuleLabel("\"_tset_tset\\\\64\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "\"\"" + "'", str3, "\"\"");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 29 + "'", int4 == 29);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(sTGroup6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Python3" + "'", str7, "Python3");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\"\\\"\\\"\\\\0\\\"\\\"\"" + "'", str9, "\"\\\"\\\"\\\\0\\\"\\\"\"");
        org.junit.Assert.assertNotNull(sTGroup10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "\"\\\"DContext\\\"\\\"Contex\"" + "'", str15, "\"\\\"DContext\\\"\\\"Contex\"");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "4.5.2.1" + "'", str18, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "\"\"" + "'", str22, "\"\"");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 29 + "'", int25 == 29);
        org.junit.Assert.assertNull(sTGroup30);
        org.junit.Assert.assertNull(sTGroup31);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "4.5.2.1" + "'", str38, "4.5.2.1");
    }

    @Test
    public void test3794() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3794");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        python3Target0.language = "4.5.2.1";
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = python3Target0.getCodeGenerator();
        org.antlr.v4.codegen.CodeGenerator codeGenerator4 = python3Target0.gen;
        org.antlr.v4.codegen.target.Python3Target python3Target5 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray6 = python3Target5.targetCharValueEscape;
        python3Target5.addBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target9 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator8);
        java.lang.String str11 = python3Target9.getTargetStringLiteralFromString("");
        int int12 = python3Target9.getSerializedATNSegmentLimit();
        boolean boolean13 = python3Target9.wantsBaseVisitor();
        org.stringtemplate.v4.STGroup sTGroup14 = python3Target9.loadTemplates();
        python3Target5.templates = sTGroup14;
        python3Target0.templates = sTGroup14;
        boolean boolean17 = python3Target0.templatesExist();
        org.antlr.v4.codegen.target.Python3Target python3Target18 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean19 = python3Target18.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup20 = python3Target18.templates;
        java.lang.String str21 = python3Target18.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator22 = null;
        java.lang.String str25 = python3Target18.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator22, "\"\\\"hi!\\\"\"", true);
        org.stringtemplate.v4.STGroup sTGroup26 = python3Target18.templates;
        org.antlr.v4.codegen.target.Python3Target python3Target27 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean28 = python3Target27.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup29 = python3Target27.templates;
        java.lang.String[] strArray32 = new java.lang.String[] { "hi!", "hi!" };
        python3Target27.targetCharValueEscape = strArray32;
        java.lang.String str35 = python3Target27.getTargetStringLiteralFromString("\"\"");
        java.lang.String str36 = python3Target27.getLanguage();
        java.util.Set<java.lang.String> strSet37 = python3Target27.getBadWords();
        python3Target18.badWords = strSet37;
        python3Target0.badWords = strSet37;
        org.junit.Assert.assertNull(codeGenerator3);
        org.junit.Assert.assertNull(codeGenerator4);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "\"\"" + "'", str11, "\"\"");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 29 + "'", int12 == 29);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(sTGroup14);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(sTGroup20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "4.5.2.1" + "'", str21, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "\"\\\"hi!\\\"\"" + "'", str25, "\"\\\"hi!\\\"\"");
        org.junit.Assert.assertNull(sTGroup26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(sTGroup29);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "\"\"\"\"" + "'", str35, "\"\"\"\"");
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNotNull(strSet37);
    }

    @Test
    public void test3795() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3795");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!", "hi!" };
        python3Target0.targetCharValueEscape = strArray5;
        java.lang.String str8 = python3Target0.getTargetStringLiteralFromString("\"\"");
        java.lang.String str10 = python3Target0.getTargetStringLiteralFromString("\"\"");
        java.lang.String str11 = python3Target0.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup12 = python3Target0.templates;
        org.antlr.v4.codegen.CodeGenerator codeGenerator13 = python3Target0.gen;
        java.lang.String str14 = python3Target0.getVersion();
        org.antlr.v4.codegen.target.Python3Target python3Target15 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean16 = python3Target15.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup17 = python3Target15.templates;
        org.antlr.v4.tool.Grammar grammar18 = null;
        org.stringtemplate.v4.ST sT19 = null;
        python3Target15.genRecognizerHeaderFile(grammar18, sT19, "");
        python3Target15.language = "Python3";
        java.util.Set<java.lang.String> strSet24 = null;
        python3Target15.badWords = strSet24;
        boolean boolean26 = python3Target15.wantsBaseVisitor();
        java.lang.String str28 = python3Target15.getImplicitSetLabel("Python3");
        org.antlr.v4.codegen.target.Python3Target python3Target29 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean30 = python3Target29.supportsOverloadedMethods();
        java.lang.String str31 = python3Target29.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator32 = python3Target29.getCodeGenerator();
        org.stringtemplate.v4.STGroup sTGroup33 = null;
        python3Target29.templates = sTGroup33;
        org.stringtemplate.v4.STGroup sTGroup35 = python3Target29.templates;
        java.lang.String[] strArray36 = python3Target29.targetCharValueEscape;
        java.lang.String str39 = python3Target29.getTargetStringLiteralFromString("\"12\"", false);
        org.antlr.v4.codegen.target.Python3Target python3Target40 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean41 = python3Target40.supportsOverloadedMethods();
        java.lang.String str42 = python3Target40.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator43 = python3Target40.getCodeGenerator();
        org.stringtemplate.v4.STGroup sTGroup44 = null;
        python3Target40.templates = sTGroup44;
        org.stringtemplate.v4.STGroup sTGroup46 = python3Target40.templates;
        java.lang.String[] strArray47 = python3Target40.targetCharValueEscape;
        java.util.Set<java.lang.String> strSet48 = python3Target40.badWords;
        java.util.Set<java.lang.String> strSet49 = python3Target40.getBadWords();
        python3Target29.badWords = strSet49;
        python3Target15.badWords = strSet49;
        python3Target0.badWords = strSet49;
        python3Target0.language = "\"\\1\"";
        org.antlr.v4.codegen.CodeGenerator codeGenerator55 = python3Target0.getCodeGenerator();
        org.antlr.v4.codegen.CodeGenerator codeGenerator56 = null;
        java.lang.String str59 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator56, "_\"\\\"\\\"\\\\0\\\"\\\"\"Context", false);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\"\"\"\"" + "'", str8, "\"\"\"\"");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\"\"\"\"" + "'", str10, "\"\"\"\"");
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(sTGroup12);
        org.junit.Assert.assertNull(codeGenerator13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "4.5.2.1" + "'", str14, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(sTGroup17);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "_tsetPython3" + "'", str28, "_tsetPython3");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "4.5.2.1" + "'", str31, "4.5.2.1");
        org.junit.Assert.assertNull(codeGenerator32);
        org.junit.Assert.assertNull(sTGroup35);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "\"12\"" + "'", str39, "\"12\"");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "4.5.2.1" + "'", str42, "4.5.2.1");
        org.junit.Assert.assertNull(codeGenerator43);
        org.junit.Assert.assertNull(sTGroup46);
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertNotNull(strSet48);
        org.junit.Assert.assertNotNull(strSet49);
        org.junit.Assert.assertNull(codeGenerator55);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "\\\"\\\"\\\"\\\\0\\\"\\\"\\\"Contex" + "'", str59, "\\\"\\\"\\\"\\\\0\\\"\\\"\\\"Contex");
    }

    @Test
    public void test3796() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3796");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!", "hi!" };
        python3Target0.targetCharValueEscape = strArray5;
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = null;
        java.lang.String str10 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator7, "", false);
        java.util.Set<java.lang.String> strSet11 = python3Target0.badWords;
        java.util.Set<java.lang.String> strSet12 = python3Target0.badWords;
        org.antlr.v4.codegen.target.Python3Target python3Target13 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean14 = python3Target13.supportsOverloadedMethods();
        java.lang.String str15 = python3Target13.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator16 = null;
        java.lang.String str19 = python3Target13.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator16, "", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator20 = null;
        python3Target13.gen = codeGenerator20;
        java.lang.String[] strArray29 = new java.lang.String[] { "\"\"\"\"", "\\12", "\"\"", "4.5.2.1", "", "\"\"\"\"", "\"\"" };
        java.util.LinkedHashSet<java.lang.String> strSet30 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet30, strArray29);
        python3Target13.badWords = strSet30;
        boolean boolean33 = python3Target13.templatesExist();
        org.antlr.v4.codegen.CodeGenerator codeGenerator34 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target35 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator34);
        java.lang.String str37 = python3Target35.getTargetStringLiteralFromString("");
        int int38 = python3Target35.getSerializedATNSegmentLimit();
        boolean boolean39 = python3Target35.wantsBaseVisitor();
        org.stringtemplate.v4.STGroup sTGroup40 = python3Target35.loadTemplates();
        python3Target13.templates = sTGroup40;
        python3Target0.templates = sTGroup40;
        boolean boolean43 = python3Target0.wantsBaseListener();
        java.lang.String str44 = python3Target0.getLanguage();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNotNull(strSet11);
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "4.5.2.1" + "'", str15, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "\"\"" + "'", str19, "\"\"");
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "\"\"" + "'", str37, "\"\"");
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 29 + "'", int38 == 29);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(sTGroup40);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNull(str44);
    }

    @Test
    public void test3797() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3797");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python3Target1.getBadWords();
        java.lang.String str4 = python3Target1.getAltLabelContextStructName("d");
        org.stringtemplate.v4.STGroup sTGroup5 = python3Target1.getTemplates();
        java.lang.String str6 = python3Target1.language;
        org.antlr.v4.tool.Grammar grammar7 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target9 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator8);
        java.util.Set<java.lang.String> strSet10 = python3Target9.getBadWords();
        org.antlr.v4.codegen.target.Python3Target python3Target11 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str13 = python3Target11.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.codegen.target.Python3Target python3Target14 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean15 = python3Target14.supportsOverloadedMethods();
        java.util.Set<java.lang.String> strSet16 = python3Target14.badWords;
        python3Target11.badWords = strSet16;
        python3Target9.badWords = strSet16;
        java.util.Set<java.lang.String> strSet19 = python3Target9.badWords;
        java.lang.String str21 = python3Target9.getAltLabelContextStructName("d");
        org.antlr.v4.tool.Grammar grammar22 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target23 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean24 = python3Target23.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup25 = python3Target23.templates;
        org.antlr.v4.tool.Grammar grammar26 = null;
        org.stringtemplate.v4.ST sT27 = null;
        python3Target23.genRecognizerHeaderFile(grammar26, sT27, "");
        boolean boolean30 = python3Target23.supportsOverloadedMethods();
        python3Target23.language = "\"\\12\"";
        org.antlr.v4.tool.Grammar grammar33 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator34 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target35 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator34);
        java.util.Set<java.lang.String> strSet36 = python3Target35.getBadWords();
        java.lang.String str38 = python3Target35.getAltLabelContextStructName("d");
        java.lang.String str40 = python3Target35.getTargetStringLiteralFromString("\"\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator41 = python3Target35.getCodeGenerator();
        org.antlr.v4.tool.Grammar grammar42 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator43 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target44 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator43);
        java.util.Set<java.lang.String> strSet45 = python3Target44.getBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator46 = null;
        python3Target44.gen = codeGenerator46;
        java.lang.String str49 = python3Target44.getAltLabelContextStructName("hi!");
        java.lang.String str52 = python3Target44.getTargetStringLiteralFromString("\"hi!\"", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator53 = null;
        python3Target44.gen = codeGenerator53;
        org.antlr.v4.tool.Grammar grammar55 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target56 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray57 = python3Target56.targetCharValueEscape;
        org.stringtemplate.v4.STGroup sTGroup58 = python3Target56.templates;
        int int59 = python3Target56.getInlineTestSetWordSize();
        org.antlr.v4.codegen.CodeGenerator codeGenerator60 = python3Target56.gen;
        org.antlr.v4.tool.Grammar grammar61 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target62 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str64 = python3Target62.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.tool.Grammar grammar65 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target66 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean67 = python3Target66.supportsOverloadedMethods();
        java.lang.String str68 = python3Target66.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator69 = null;
        java.lang.String str72 = python3Target66.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator69, "", true);
        java.lang.String str73 = python3Target66.getVersion();
        org.antlr.v4.tool.Grammar grammar74 = null;
        int[] intArray75 = new int[] {};
        java.lang.String[] strArray76 = python3Target66.getTokenTypesAsTargetLabels(grammar74, intArray75);
        java.lang.String[] strArray77 = python3Target62.getTokenTypesAsTargetLabels(grammar65, intArray75);
        java.lang.String[] strArray78 = python3Target56.getTokenTypesAsTargetLabels(grammar61, intArray75);
        java.lang.String[] strArray79 = python3Target44.getTokenTypesAsTargetLabels(grammar55, intArray75);
        java.lang.String[] strArray80 = python3Target35.getTokenTypesAsTargetLabels(grammar42, intArray75);
        java.lang.String[] strArray81 = python3Target23.getTokenTypesAsTargetLabels(grammar33, intArray75);
        java.lang.String[] strArray82 = python3Target9.getTokenTypesAsTargetLabels(grammar22, intArray75);
        java.lang.String[] strArray83 = python3Target1.getTokenTypesAsTargetLabels(grammar7, intArray75);
        java.lang.String str85 = python3Target1.getListLabel("\"\\\"4.5.2.1\\\"\"");
        java.lang.String[] strArray86 = python3Target1.targetCharValueEscape;
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "DContext" + "'", str4, "DContext");
        org.junit.Assert.assertNotNull(sTGroup5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Python3" + "'", str6, "Python3");
        org.junit.Assert.assertNotNull(strSet10);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "\"\"\"\"\"\"" + "'", str13, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertNotNull(strSet19);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "DContext" + "'", str21, "DContext");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNull(sTGroup25);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(strSet36);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "DContext" + "'", str38, "DContext");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "\"\\\"\\\"\"" + "'", str40, "\"\\\"\\\"\"");
        org.junit.Assert.assertNull(codeGenerator41);
        org.junit.Assert.assertNotNull(strSet45);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "Hi!Context" + "'", str49, "Hi!Context");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "\"\\\"hi!\\\"\"" + "'", str52, "\"\\\"hi!\\\"\"");
        org.junit.Assert.assertNotNull(strArray57);
        org.junit.Assert.assertNull(sTGroup58);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 64 + "'", int59 == 64);
        org.junit.Assert.assertNull(codeGenerator60);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "\"\"\"\"\"\"" + "'", str64, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "4.5.2.1" + "'", str68, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "\"\"" + "'", str72, "\"\"");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "4.5.2.1" + "'", str73, "4.5.2.1");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[]");
        org.junit.Assert.assertNotNull(strArray76);
        org.junit.Assert.assertNotNull(strArray77);
        org.junit.Assert.assertNotNull(strArray78);
        org.junit.Assert.assertNotNull(strArray79);
        org.junit.Assert.assertNotNull(strArray80);
        org.junit.Assert.assertNotNull(strArray81);
        org.junit.Assert.assertNotNull(strArray82);
        org.junit.Assert.assertNotNull(strArray83);
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "\"\\\"4.5.2.1\\\"\"" + "'", str85, "\"\\\"4.5.2.1\\\"\"");
        org.junit.Assert.assertNotNull(strArray86);
    }

    @Test
    public void test3798() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3798");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!", "hi!" };
        python3Target0.targetCharValueEscape = strArray5;
        java.lang.String[] strArray8 = new java.lang.String[] { "hi!" };
        org.antlr.v4.codegen.target.Python3Target.python3Keywords = strArray8;
        python3Target0.targetCharValueEscape = strArray8;
        java.lang.String str12 = python3Target0.getTargetStringLiteralFromString("\"\"\"\"\"\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator13 = python3Target0.gen;
        java.lang.String str15 = python3Target0.encodeIntAsCharEscape((int) (short) 0);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "\"\"\"\"\"\"\"\"" + "'", str12, "\"\"\"\"\"\"\"\"");
        org.junit.Assert.assertNull(codeGenerator13);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
    }

    @Test
    public void test3799() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3799");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python3Target1.getBadWords();
        org.antlr.v4.codegen.target.Python3Target python3Target3 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str5 = python3Target3.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.codegen.target.Python3Target python3Target6 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean7 = python3Target6.supportsOverloadedMethods();
        java.util.Set<java.lang.String> strSet8 = python3Target6.badWords;
        python3Target3.badWords = strSet8;
        python3Target1.badWords = strSet8;
        java.util.Set<java.lang.String> strSet11 = python3Target1.badWords;
        org.antlr.v4.codegen.CodeGenerator codeGenerator12 = python3Target1.getCodeGenerator();
        java.lang.String str14 = python3Target1.getTargetStringLiteralFromString("@");
        org.antlr.v4.codegen.CodeGenerator codeGenerator15 = python3Target1.gen;
        org.antlr.v4.codegen.target.Python3Target python3Target16 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean17 = python3Target16.supportsOverloadedMethods();
        java.lang.String str18 = python3Target16.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator19 = null;
        java.lang.String str22 = python3Target16.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator19, "", true);
        java.lang.String str23 = python3Target16.getVersion();
        org.antlr.v4.tool.Grammar grammar24 = null;
        int[] intArray25 = new int[] {};
        java.lang.String[] strArray26 = python3Target16.getTokenTypesAsTargetLabels(grammar24, intArray25);
        java.lang.String[] strArray27 = python3Target16.targetCharValueEscape;
        java.util.Set<java.lang.String> strSet28 = python3Target16.badWords;
        python3Target16.addBadWords();
        org.antlr.v4.codegen.target.Python3Target python3Target30 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray31 = python3Target30.targetCharValueEscape;
        org.stringtemplate.v4.STGroup sTGroup32 = python3Target30.templates;
        int int33 = python3Target30.getInlineTestSetWordSize();
        org.antlr.v4.codegen.CodeGenerator codeGenerator34 = python3Target30.gen;
        org.antlr.v4.tool.Grammar grammar35 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target36 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str38 = python3Target36.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.tool.Grammar grammar39 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target40 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean41 = python3Target40.supportsOverloadedMethods();
        java.lang.String str42 = python3Target40.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator43 = null;
        java.lang.String str46 = python3Target40.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator43, "", true);
        java.lang.String str47 = python3Target40.getVersion();
        org.antlr.v4.tool.Grammar grammar48 = null;
        int[] intArray49 = new int[] {};
        java.lang.String[] strArray50 = python3Target40.getTokenTypesAsTargetLabels(grammar48, intArray49);
        java.lang.String[] strArray51 = python3Target36.getTokenTypesAsTargetLabels(grammar39, intArray49);
        java.lang.String[] strArray52 = python3Target30.getTokenTypesAsTargetLabels(grammar35, intArray49);
        java.lang.String[] strArray53 = python3Target30.targetCharValueEscape;
        python3Target16.targetCharValueEscape = strArray53;
        python3Target1.targetCharValueEscape = strArray53;
        org.antlr.v4.codegen.CodeGenerator codeGenerator56 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target57 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator56);
        java.util.Set<java.lang.String> strSet58 = python3Target57.getBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator59 = null;
        python3Target57.gen = codeGenerator59;
        java.lang.String str62 = python3Target57.getAltLabelContextStructName("hi!");
        boolean boolean63 = python3Target57.supportsOverloadedMethods();
        java.lang.String[] strArray64 = python3Target57.targetCharValueEscape;
        java.lang.String str65 = python3Target57.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator66 = null;
        java.lang.String str69 = python3Target57.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator66, "", true);
        java.lang.String[] strArray70 = python3Target57.targetCharValueEscape;
        python3Target1.targetCharValueEscape = strArray70;
        java.lang.String str73 = python3Target1.getListLabel("12Context");
        java.lang.String str74 = python3Target1.language;
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "\"\"\"\"\"\"" + "'", str5, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertNotNull(strSet11);
        org.junit.Assert.assertNull(codeGenerator12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "\"@\"" + "'", str14, "\"@\"");
        org.junit.Assert.assertNull(codeGenerator15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "4.5.2.1" + "'", str18, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "\"\"" + "'", str22, "\"\"");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "4.5.2.1" + "'", str23, "4.5.2.1");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[]");
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertNotNull(strSet28);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertNull(sTGroup32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 64 + "'", int33 == 64);
        org.junit.Assert.assertNull(codeGenerator34);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "\"\"\"\"\"\"" + "'", str38, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "4.5.2.1" + "'", str42, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "\"\"" + "'", str46, "\"\"");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "4.5.2.1" + "'", str47, "4.5.2.1");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[]");
        org.junit.Assert.assertNotNull(strArray50);
        org.junit.Assert.assertNotNull(strArray51);
        org.junit.Assert.assertNotNull(strArray52);
        org.junit.Assert.assertNotNull(strArray53);
        org.junit.Assert.assertNotNull(strSet58);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "Hi!Context" + "'", str62, "Hi!Context");
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(strArray64);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "Python3" + "'", str65, "Python3");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "\"\"" + "'", str69, "\"\"");
        org.junit.Assert.assertNotNull(strArray70);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "12Context" + "'", str73, "12Context");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "Python3" + "'", str74, "Python3");
    }

    @Test
    public void test3800() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3800");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.lang.String str3 = python3Target1.getTargetStringLiteralFromString("");
        int int4 = python3Target1.getSerializedATNSegmentLimit();
        org.stringtemplate.v4.STGroup sTGroup5 = python3Target1.getTemplates();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "\"\"" + "'", str3, "\"\"");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 29 + "'", int4 == 29);
        org.junit.Assert.assertNotNull(sTGroup5);
    }

    @Test
    public void test3801() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3801");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.lang.String str3 = python3Target1.getTargetStringLiteralFromString("");
        int int4 = python3Target1.getSerializedATNSegmentLimit();
        int int5 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str6 = python3Target1.getVersion();
        boolean boolean7 = python3Target1.templatesExist();
        boolean boolean8 = python3Target1.templatesExist();
        org.antlr.v4.codegen.target.Python3Target python3Target9 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray10 = python3Target9.targetCharValueEscape;
        org.stringtemplate.v4.STGroup sTGroup11 = python3Target9.templates;
        org.antlr.v4.codegen.CodeGenerator codeGenerator12 = null;
        java.lang.String str15 = python3Target9.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator12, "\"\\12\"", false);
        int int16 = python3Target9.getInlineTestSetWordSize();
        org.antlr.v4.codegen.CodeGenerator codeGenerator17 = python3Target9.getCodeGenerator();
        org.antlr.v4.tool.Grammar grammar18 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator19 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target20 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator19);
        java.lang.String str21 = python3Target20.getVersion();
        int int22 = python3Target20.getSerializedATNSegmentLimit();
        java.lang.String str23 = python3Target20.getVersion();
        boolean boolean24 = python3Target20.wantsBaseListener();
        python3Target20.addBadWords();
        org.antlr.v4.tool.Grammar grammar26 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator27 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target28 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator27);
        java.util.Set<java.lang.String> strSet29 = python3Target28.getBadWords();
        org.antlr.v4.codegen.target.Python3Target python3Target30 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str32 = python3Target30.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.codegen.target.Python3Target python3Target33 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean34 = python3Target33.supportsOverloadedMethods();
        java.util.Set<java.lang.String> strSet35 = python3Target33.badWords;
        python3Target30.badWords = strSet35;
        python3Target28.badWords = strSet35;
        java.util.Set<java.lang.String> strSet38 = python3Target28.badWords;
        org.antlr.v4.codegen.CodeGenerator codeGenerator39 = python3Target28.getCodeGenerator();
        org.antlr.v4.tool.Grammar grammar40 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target41 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean42 = python3Target41.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup43 = python3Target41.templates;
        org.antlr.v4.tool.Grammar grammar44 = null;
        org.stringtemplate.v4.ST sT45 = null;
        python3Target41.genRecognizerHeaderFile(grammar44, sT45, "");
        python3Target41.language = "Python3";
        java.util.Set<java.lang.String> strSet50 = null;
        python3Target41.badWords = strSet50;
        org.antlr.v4.codegen.CodeGenerator codeGenerator52 = null;
        java.lang.String str55 = python3Target41.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator52, "\"Hi!Context\"", false);
        java.lang.String str57 = python3Target41.getListLabel("Python3");
        java.lang.String str59 = python3Target41.getTargetStringLiteralFromString("\\0");
        org.antlr.v4.tool.Grammar grammar60 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target61 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str63 = python3Target61.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.tool.Grammar grammar64 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target65 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean66 = python3Target65.supportsOverloadedMethods();
        java.lang.String str67 = python3Target65.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator68 = null;
        java.lang.String str71 = python3Target65.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator68, "", true);
        java.lang.String str72 = python3Target65.getVersion();
        org.antlr.v4.tool.Grammar grammar73 = null;
        int[] intArray74 = new int[] {};
        java.lang.String[] strArray75 = python3Target65.getTokenTypesAsTargetLabels(grammar73, intArray74);
        java.lang.String[] strArray76 = python3Target61.getTokenTypesAsTargetLabels(grammar64, intArray74);
        java.lang.String[] strArray77 = python3Target41.getTokenTypesAsTargetLabels(grammar60, intArray74);
        java.lang.String[] strArray78 = python3Target28.getTokenTypesAsTargetLabels(grammar40, intArray74);
        java.lang.String[] strArray79 = python3Target20.getTokenTypesAsTargetLabels(grammar26, intArray74);
        java.lang.String[] strArray80 = python3Target9.getTokenTypesAsTargetLabels(grammar18, intArray74);
        org.antlr.v4.codegen.target.Python3Target.python3Keywords = strArray80;
        python3Target1.targetCharValueEscape = strArray80;
        java.lang.String str84 = python3Target1.getImplicitSetLabel(" ");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "\"\"" + "'", str3, "\"\"");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 29 + "'", int4 == 29);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 64 + "'", int5 == 64);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "4.5.2.1" + "'", str6, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNull(sTGroup11);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "12" + "'", str15, "12");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 64 + "'", int16 == 64);
        org.junit.Assert.assertNull(codeGenerator17);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "4.5.2.1" + "'", str21, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 29 + "'", int22 == 29);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "4.5.2.1" + "'", str23, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(strSet29);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "\"\"\"\"\"\"" + "'", str32, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(strSet35);
        org.junit.Assert.assertNotNull(strSet38);
        org.junit.Assert.assertNull(codeGenerator39);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNull(sTGroup43);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "Hi!Context" + "'", str55, "Hi!Context");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "Python3" + "'", str57, "Python3");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "\"\\0\"" + "'", str59, "\"\\0\"");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "\"\"\"\"\"\"" + "'", str63, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "4.5.2.1" + "'", str67, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "\"\"" + "'", str71, "\"\"");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "4.5.2.1" + "'", str72, "4.5.2.1");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[]");
        org.junit.Assert.assertNotNull(strArray75);
        org.junit.Assert.assertNotNull(strArray76);
        org.junit.Assert.assertNotNull(strArray77);
        org.junit.Assert.assertNotNull(strArray78);
        org.junit.Assert.assertNotNull(strArray79);
        org.junit.Assert.assertNotNull(strArray80);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "_tset " + "'", str84, "_tset ");
    }

    @Test
    public void test3802() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3802");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray1 = python3Target0.targetCharValueEscape;
        java.lang.String str2 = python3Target0.language;
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = null;
        python3Target0.gen = codeGenerator3;
        java.lang.String[] strArray5 = python3Target0.targetCharValueEscape;
        java.lang.String str8 = python3Target0.getTargetStringLiteralFromString("\"\"\"\"\"\"\"\"\"\"", true);
        python3Target0.language = "\"\\\"\\\"\\\\0\\\"\\\"\"Context";
        java.util.Set<java.lang.String> strSet11 = python3Target0.badWords;
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\"\"\"\"\"\"\"\"\"\"\"\"" + "'", str8, "\"\"\"\"\"\"\"\"\"\"\"\"");
        org.junit.Assert.assertNotNull(strSet11);
    }

    @Test
    public void test3803() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3803");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        python3Target0.language = "4.5.2.1";
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = python3Target0.getCodeGenerator();
        org.antlr.v4.codegen.CodeGenerator codeGenerator4 = python3Target0.gen;
        org.antlr.v4.codegen.target.Python3Target python3Target5 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean6 = python3Target5.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup7 = python3Target5.templates;
        org.antlr.v4.tool.Grammar grammar8 = null;
        org.stringtemplate.v4.ST sT9 = null;
        python3Target5.genRecognizerHeaderFile(grammar8, sT9, "");
        boolean boolean12 = python3Target5.supportsOverloadedMethods();
        python3Target5.language = "\"\\12\"";
        org.antlr.v4.tool.Grammar grammar15 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator16 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target17 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator16);
        java.util.Set<java.lang.String> strSet18 = python3Target17.getBadWords();
        java.lang.String str20 = python3Target17.getAltLabelContextStructName("d");
        java.lang.String str22 = python3Target17.getTargetStringLiteralFromString("\"\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator23 = python3Target17.getCodeGenerator();
        org.antlr.v4.tool.Grammar grammar24 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator25 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target26 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator25);
        java.util.Set<java.lang.String> strSet27 = python3Target26.getBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator28 = null;
        python3Target26.gen = codeGenerator28;
        java.lang.String str31 = python3Target26.getAltLabelContextStructName("hi!");
        java.lang.String str34 = python3Target26.getTargetStringLiteralFromString("\"hi!\"", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator35 = null;
        python3Target26.gen = codeGenerator35;
        org.antlr.v4.tool.Grammar grammar37 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target38 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray39 = python3Target38.targetCharValueEscape;
        org.stringtemplate.v4.STGroup sTGroup40 = python3Target38.templates;
        int int41 = python3Target38.getInlineTestSetWordSize();
        org.antlr.v4.codegen.CodeGenerator codeGenerator42 = python3Target38.gen;
        org.antlr.v4.tool.Grammar grammar43 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target44 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str46 = python3Target44.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.tool.Grammar grammar47 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target48 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean49 = python3Target48.supportsOverloadedMethods();
        java.lang.String str50 = python3Target48.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator51 = null;
        java.lang.String str54 = python3Target48.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator51, "", true);
        java.lang.String str55 = python3Target48.getVersion();
        org.antlr.v4.tool.Grammar grammar56 = null;
        int[] intArray57 = new int[] {};
        java.lang.String[] strArray58 = python3Target48.getTokenTypesAsTargetLabels(grammar56, intArray57);
        java.lang.String[] strArray59 = python3Target44.getTokenTypesAsTargetLabels(grammar47, intArray57);
        java.lang.String[] strArray60 = python3Target38.getTokenTypesAsTargetLabels(grammar43, intArray57);
        java.lang.String[] strArray61 = python3Target26.getTokenTypesAsTargetLabels(grammar37, intArray57);
        java.lang.String[] strArray62 = python3Target17.getTokenTypesAsTargetLabels(grammar24, intArray57);
        java.lang.String[] strArray63 = python3Target5.getTokenTypesAsTargetLabels(grammar15, intArray57);
        python3Target0.targetCharValueEscape = strArray63;
        int int65 = python3Target0.getInlineTestSetWordSize();
        org.junit.Assert.assertNull(codeGenerator3);
        org.junit.Assert.assertNull(codeGenerator4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(sTGroup7);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(strSet18);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "DContext" + "'", str20, "DContext");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "\"\\\"\\\"\"" + "'", str22, "\"\\\"\\\"\"");
        org.junit.Assert.assertNull(codeGenerator23);
        org.junit.Assert.assertNotNull(strSet27);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "Hi!Context" + "'", str31, "Hi!Context");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "\"\\\"hi!\\\"\"" + "'", str34, "\"\\\"hi!\\\"\"");
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertNull(sTGroup40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 64 + "'", int41 == 64);
        org.junit.Assert.assertNull(codeGenerator42);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "\"\"\"\"\"\"" + "'", str46, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "4.5.2.1" + "'", str50, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "\"\"" + "'", str54, "\"\"");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "4.5.2.1" + "'", str55, "4.5.2.1");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[]");
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertNotNull(strArray59);
        org.junit.Assert.assertNotNull(strArray60);
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertNotNull(strArray62);
        org.junit.Assert.assertNotNull(strArray63);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 64 + "'", int65 == 64);
    }

    @Test
    public void test3804() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3804");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        python3Target0.language = "";
        org.antlr.v4.codegen.target.Python3Target python3Target3 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean4 = python3Target3.supportsOverloadedMethods();
        java.lang.String str5 = python3Target3.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = null;
        java.lang.String str9 = python3Target3.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator6, "", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = null;
        python3Target3.gen = codeGenerator10;
        java.lang.String[] strArray19 = new java.lang.String[] { "\"\"\"\"", "\\12", "\"\"", "4.5.2.1", "", "\"\"\"\"", "\"\"" };
        java.util.LinkedHashSet<java.lang.String> strSet20 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet20, strArray19);
        python3Target3.badWords = strSet20;
        python3Target0.badWords = strSet20;
        java.lang.String str25 = python3Target0.encodeIntAsCharEscape((int) (byte) 100);
        java.lang.String str26 = python3Target0.getLanguage();
        java.lang.String[] strArray27 = new java.lang.String[] {};
        python3Target0.targetCharValueEscape = strArray27;
        org.antlr.v4.codegen.CodeGenerator codeGenerator29 = null;
        java.lang.String str32 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator29, "\\n", true);
        org.antlr.v4.codegen.target.Python3Target python3Target33 = new org.antlr.v4.codegen.target.Python3Target();
        python3Target33.language = "4.5.2.1";
        org.antlr.v4.codegen.CodeGenerator codeGenerator36 = python3Target33.getCodeGenerator();
        org.antlr.v4.codegen.CodeGenerator codeGenerator37 = python3Target33.gen;
        java.util.Set<java.lang.String> strSet38 = python3Target33.badWords;
        python3Target0.badWords = strSet38;
        java.lang.String str40 = python3Target0.language;
        boolean boolean41 = python3Target0.wantsBaseVisitor();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "4.5.2.1" + "'", str5, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\"\"" + "'", str9, "\"\"");
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "d" + "'", str25, "d");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "\"\"" + "'", str32, "\"\"");
        org.junit.Assert.assertNull(codeGenerator36);
        org.junit.Assert.assertNull(codeGenerator37);
        org.junit.Assert.assertNotNull(strSet38);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "" + "'", str40, "");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
    }

    @Test
    public void test3805() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3805");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        java.lang.String str2 = python3Target0.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = null;
        java.lang.String str6 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator3, "", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = null;
        python3Target0.gen = codeGenerator7;
        java.lang.String[] strArray16 = new java.lang.String[] { "\"\"\"\"", "\\12", "\"\"", "4.5.2.1", "", "\"\"\"\"", "\"\"" };
        java.util.LinkedHashSet<java.lang.String> strSet17 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet17, strArray16);
        python3Target0.badWords = strSet17;
        org.antlr.v4.codegen.CodeGenerator codeGenerator20 = python3Target0.gen;
        java.lang.String str21 = python3Target0.getVersion();
        int int22 = python3Target0.getSerializedATNSegmentLimit();
        java.lang.String str23 = python3Target0.getLanguage();
        boolean boolean24 = python3Target0.wantsBaseListener();
        java.util.Set<java.lang.String> strSet25 = python3Target0.getBadWords();
        org.antlr.v4.tool.Grammar grammar26 = null;
        org.stringtemplate.v4.ST sT27 = null;
        // The following exception was thrown during execution in test generation
        try {
            python3Target0.genFile(grammar26, sT27, "_\"\"\\\"\\\"4.5.2.1\\\"\\\"\"\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "4.5.2.1" + "'", str2, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\"\"" + "'", str6, "\"\"");
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNull(codeGenerator20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "4.5.2.1" + "'", str21, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 29 + "'", int22 == 29);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(strSet25);
    }

    @Test
    public void test3806() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3806");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray1 = python3Target0.targetCharValueEscape;
        java.lang.String str2 = python3Target0.language;
        int int3 = python3Target0.getSerializedATNSegmentLimit();
        java.lang.String str6 = python3Target0.getTargetStringLiteralFromString("\"\"\"\"\"\"", false);
        java.lang.String str9 = python3Target0.getTargetStringLiteralFromString("\"Hi!Context\"", false);
        org.antlr.v4.tool.Grammar grammar10 = null;
        org.stringtemplate.v4.ST sT11 = null;
        python3Target0.genRecognizerHeaderFile(grammar10, sT11, "\"_tsetHi!Context\"");
        java.lang.String[] strArray14 = python3Target0.targetCharValueEscape;
        python3Target0.addBadWords();
        org.antlr.v4.tool.ast.GrammarAST grammarAST16 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean17 = python3Target0.visibleGrammarSymbolCausesIssueInGeneratedCode(grammarAST16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 29 + "'", int3 == 29);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\"\"\"\"\"\"" + "'", str6, "\"\"\"\"\"\"");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\"Hi!Context\"" + "'", str9, "\"Hi!Context\"");
        org.junit.Assert.assertNotNull(strArray14);
    }

    @Test
    public void test3807() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3807");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray1 = python3Target0.targetCharValueEscape;
        java.lang.String str2 = python3Target0.language;
        java.util.Set<java.lang.String> strSet3 = python3Target0.badWords;
        boolean boolean4 = python3Target0.supportsOverloadedMethods();
        java.lang.String str5 = python3Target0.language;
        boolean boolean6 = python3Target0.templatesExist();
        int int7 = python3Target0.getInlineTestSetWordSize();
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = python3Target0.getCodeGenerator();
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 64 + "'", int7 == 64);
        org.junit.Assert.assertNull(codeGenerator8);
    }

    @Test
    public void test3808() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3808");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray1 = python3Target0.targetCharValueEscape;
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = null;
        java.lang.String str6 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator3, "\"\\12\"", false);
        org.antlr.v4.codegen.target.Python3Target python3Target7 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean8 = python3Target7.supportsOverloadedMethods();
        python3Target7.language = "\"\"\"\"";
        org.antlr.v4.codegen.target.Python3Target python3Target11 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray12 = python3Target11.targetCharValueEscape;
        org.stringtemplate.v4.STGroup sTGroup13 = python3Target11.templates;
        int int14 = python3Target11.getInlineTestSetWordSize();
        org.antlr.v4.codegen.CodeGenerator codeGenerator15 = python3Target11.gen;
        org.antlr.v4.tool.Grammar grammar16 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target17 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str19 = python3Target17.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.tool.Grammar grammar20 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target21 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean22 = python3Target21.supportsOverloadedMethods();
        java.lang.String str23 = python3Target21.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator24 = null;
        java.lang.String str27 = python3Target21.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator24, "", true);
        java.lang.String str28 = python3Target21.getVersion();
        org.antlr.v4.tool.Grammar grammar29 = null;
        int[] intArray30 = new int[] {};
        java.lang.String[] strArray31 = python3Target21.getTokenTypesAsTargetLabels(grammar29, intArray30);
        java.lang.String[] strArray32 = python3Target17.getTokenTypesAsTargetLabels(grammar20, intArray30);
        java.lang.String[] strArray33 = python3Target11.getTokenTypesAsTargetLabels(grammar16, intArray30);
        java.lang.String[] strArray56 = new java.lang.String[] { "\"\\\"\\\"\"", "DContext", "", "hi!", "d", "\"\"\"\"\"\"", "\"\"\"\"\"\"", "_tsetPython3", "\"hi!\"", "\"hi!\"", "Hi!Context", "\"\"\"\"\"\"", "\"hi!\"", "12", "\"4.5.2.1\"", "DContext", "Hi!Context", "Python3", "\"hi!\"", "", "\"\"", "\\\"4.5.2.1\\\"" };
        java.util.LinkedHashSet<java.lang.String> strSet57 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet57, strArray56);
        python3Target11.badWords = strSet57;
        org.antlr.v4.codegen.target.Python3Target python3Target60 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean61 = python3Target60.supportsOverloadedMethods();
        java.lang.String str62 = python3Target60.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator63 = null;
        java.lang.String str66 = python3Target60.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator63, "", true);
        java.lang.String str67 = python3Target60.getVersion();
        org.antlr.v4.codegen.target.Python3Target python3Target68 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str70 = python3Target68.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.tool.Grammar grammar71 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target72 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean73 = python3Target72.supportsOverloadedMethods();
        java.lang.String str74 = python3Target72.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator75 = null;
        java.lang.String str78 = python3Target72.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator75, "", true);
        java.lang.String str79 = python3Target72.getVersion();
        org.antlr.v4.tool.Grammar grammar80 = null;
        int[] intArray81 = new int[] {};
        java.lang.String[] strArray82 = python3Target72.getTokenTypesAsTargetLabels(grammar80, intArray81);
        java.lang.String[] strArray83 = python3Target68.getTokenTypesAsTargetLabels(grammar71, intArray81);
        java.lang.String[] strArray84 = python3Target68.targetCharValueEscape;
        python3Target60.targetCharValueEscape = strArray84;
        python3Target11.targetCharValueEscape = strArray84;
        python3Target7.targetCharValueEscape = strArray84;
        python3Target0.targetCharValueEscape = strArray84;
        java.util.Set<java.lang.String> strSet89 = python3Target0.badWords;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str91 = python3Target0.getElementListName("\"\\\"\\\"\\\\1\\\"\\\"\"Context");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "12" + "'", str6, "12");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNull(sTGroup13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 64 + "'", int14 == 64);
        org.junit.Assert.assertNull(codeGenerator15);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "\"\"\"\"\"\"" + "'", str19, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "4.5.2.1" + "'", str23, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "\"\"" + "'", str27, "\"\"");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "4.5.2.1" + "'", str28, "4.5.2.1");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[]");
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertNotNull(strArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "4.5.2.1" + "'", str62, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "\"\"" + "'", str66, "\"\"");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "4.5.2.1" + "'", str67, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "\"\"\"\"\"\"" + "'", str70, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "4.5.2.1" + "'", str74, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "\"\"" + "'", str78, "\"\"");
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "4.5.2.1" + "'", str79, "4.5.2.1");
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[]");
        org.junit.Assert.assertNotNull(strArray82);
        org.junit.Assert.assertNotNull(strArray83);
        org.junit.Assert.assertNotNull(strArray84);
        org.junit.Assert.assertNotNull(strSet89);
    }

    @Test
    public void test3809() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3809");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        org.antlr.v4.tool.Grammar grammar3 = null;
        org.stringtemplate.v4.ST sT4 = null;
        python3Target0.genRecognizerHeaderFile(grammar3, sT4, "");
        python3Target0.language = "Python3";
        java.util.Set<java.lang.String> strSet9 = null;
        python3Target0.badWords = strSet9;
        boolean boolean11 = python3Target0.wantsBaseVisitor();
        java.lang.String str13 = python3Target0.getImplicitSetLabel("Python3");
        org.antlr.v4.codegen.target.Python3Target python3Target14 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean15 = python3Target14.supportsOverloadedMethods();
        java.lang.String str16 = python3Target14.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator17 = python3Target14.getCodeGenerator();
        org.stringtemplate.v4.STGroup sTGroup18 = null;
        python3Target14.templates = sTGroup18;
        org.stringtemplate.v4.STGroup sTGroup20 = python3Target14.templates;
        java.lang.String[] strArray21 = python3Target14.targetCharValueEscape;
        java.lang.String str24 = python3Target14.getTargetStringLiteralFromString("\"12\"", false);
        org.antlr.v4.codegen.target.Python3Target python3Target25 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean26 = python3Target25.supportsOverloadedMethods();
        java.lang.String str27 = python3Target25.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator28 = python3Target25.getCodeGenerator();
        org.stringtemplate.v4.STGroup sTGroup29 = null;
        python3Target25.templates = sTGroup29;
        org.stringtemplate.v4.STGroup sTGroup31 = python3Target25.templates;
        java.lang.String[] strArray32 = python3Target25.targetCharValueEscape;
        java.util.Set<java.lang.String> strSet33 = python3Target25.badWords;
        java.util.Set<java.lang.String> strSet34 = python3Target25.getBadWords();
        python3Target14.badWords = strSet34;
        python3Target0.badWords = strSet34;
        java.lang.String str37 = python3Target0.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator38 = python3Target0.gen;
        org.stringtemplate.v4.STGroup sTGroup39 = python3Target0.getTemplates();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "_tsetPython3" + "'", str13, "_tsetPython3");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "4.5.2.1" + "'", str16, "4.5.2.1");
        org.junit.Assert.assertNull(codeGenerator17);
        org.junit.Assert.assertNull(sTGroup20);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "\"12\"" + "'", str24, "\"12\"");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "4.5.2.1" + "'", str27, "4.5.2.1");
        org.junit.Assert.assertNull(codeGenerator28);
        org.junit.Assert.assertNull(sTGroup31);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertNotNull(strSet33);
        org.junit.Assert.assertNotNull(strSet34);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "Python3" + "'", str37, "Python3");
        org.junit.Assert.assertNull(codeGenerator38);
        org.junit.Assert.assertNotNull(sTGroup39);
    }

    @Test
    public void test3810() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3810");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        java.lang.String str2 = python3Target0.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = null;
        java.lang.String str6 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator3, "", true);
        python3Target0.addBadWords();
        int int8 = python3Target0.getSerializedATNSegmentLimit();
        java.lang.String str11 = python3Target0.getTargetStringLiteralFromString("\"\\\"4.5.2.1\"", true);
        org.antlr.v4.tool.Grammar grammar12 = null;
        org.stringtemplate.v4.ST sT13 = null;
        python3Target0.genRecognizerHeaderFile(grammar12, sT13, "");
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "4.5.2.1" + "'", str2, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\"\"" + "'", str6, "\"\"");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 29 + "'", int8 == 29);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "\"\"\\\"4.5.2.1\"\"" + "'", str11, "\"\"\\\"4.5.2.1\"\"");
    }

    @Test
    public void test3811() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3811");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        java.lang.String str2 = python3Target0.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = python3Target0.getCodeGenerator();
        org.stringtemplate.v4.STGroup sTGroup4 = null;
        python3Target0.templates = sTGroup4;
        org.stringtemplate.v4.STGroup sTGroup6 = python3Target0.templates;
        java.lang.String[] strArray7 = python3Target0.targetCharValueEscape;
        java.lang.String str10 = python3Target0.getTargetStringLiteralFromString("\"12\"", false);
        org.antlr.v4.codegen.target.Python3Target python3Target11 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean12 = python3Target11.supportsOverloadedMethods();
        java.lang.String str13 = python3Target11.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator14 = python3Target11.getCodeGenerator();
        org.stringtemplate.v4.STGroup sTGroup15 = null;
        python3Target11.templates = sTGroup15;
        org.stringtemplate.v4.STGroup sTGroup17 = python3Target11.templates;
        java.lang.String[] strArray18 = python3Target11.targetCharValueEscape;
        java.util.Set<java.lang.String> strSet19 = python3Target11.badWords;
        java.util.Set<java.lang.String> strSet20 = python3Target11.getBadWords();
        python3Target0.badWords = strSet20;
        org.antlr.v4.codegen.CodeGenerator codeGenerator22 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target23 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator22);
        java.util.Set<java.lang.String> strSet24 = python3Target23.getBadWords();
        org.antlr.v4.codegen.target.Python3Target python3Target25 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str27 = python3Target25.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.codegen.target.Python3Target python3Target28 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean29 = python3Target28.supportsOverloadedMethods();
        java.util.Set<java.lang.String> strSet30 = python3Target28.badWords;
        python3Target25.badWords = strSet30;
        python3Target23.badWords = strSet30;
        java.util.Set<java.lang.String> strSet33 = python3Target23.badWords;
        java.lang.String str34 = python3Target23.language;
        org.stringtemplate.v4.STGroup sTGroup35 = python3Target23.getTemplates();
        python3Target0.templates = sTGroup35;
        java.lang.String str37 = python3Target0.getVersion();
        java.lang.String str38 = python3Target0.getLanguage();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "4.5.2.1" + "'", str2, "4.5.2.1");
        org.junit.Assert.assertNull(codeGenerator3);
        org.junit.Assert.assertNull(sTGroup6);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\"12\"" + "'", str10, "\"12\"");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "4.5.2.1" + "'", str13, "4.5.2.1");
        org.junit.Assert.assertNull(codeGenerator14);
        org.junit.Assert.assertNull(sTGroup17);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertNotNull(strSet19);
        org.junit.Assert.assertNotNull(strSet20);
        org.junit.Assert.assertNotNull(strSet24);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "\"\"\"\"\"\"" + "'", str27, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(strSet30);
        org.junit.Assert.assertNotNull(strSet33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "Python3" + "'", str34, "Python3");
        org.junit.Assert.assertNotNull(sTGroup35);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "4.5.2.1" + "'", str37, "4.5.2.1");
        org.junit.Assert.assertNull(str38);
    }

    @Test
    public void test3812() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3812");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        java.util.Set<java.lang.String> strSet2 = python3Target0.badWords;
        boolean boolean3 = python3Target0.templatesExist();
        python3Target0.addBadWords();
        java.lang.String str5 = python3Target0.getLanguage();
        org.antlr.v4.codegen.target.Python3Target python3Target6 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean7 = python3Target6.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup8 = python3Target6.templates;
        org.antlr.v4.tool.Grammar grammar9 = null;
        org.stringtemplate.v4.ST sT10 = null;
        python3Target6.genRecognizerHeaderFile(grammar9, sT10, "");
        org.antlr.v4.codegen.target.Python3Target python3Target13 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray14 = python3Target13.targetCharValueEscape;
        python3Target6.targetCharValueEscape = strArray14;
        boolean boolean16 = python3Target6.supportsOverloadedMethods();
        boolean boolean17 = python3Target6.wantsBaseListener();
        java.lang.String str19 = python3Target6.getTargetStringLiteralFromString("_tset12");
        org.antlr.v4.codegen.target.Python3Target python3Target20 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray21 = python3Target20.targetCharValueEscape;
        java.lang.String str22 = python3Target20.language;
        int int23 = python3Target20.getSerializedATNSegmentLimit();
        org.antlr.v4.codegen.CodeGenerator codeGenerator24 = null;
        python3Target20.gen = codeGenerator24;
        org.antlr.v4.codegen.CodeGenerator codeGenerator26 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target27 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator26);
        java.util.Set<java.lang.String> strSet28 = python3Target27.getBadWords();
        java.lang.String str30 = python3Target27.getAltLabelContextStructName("d");
        org.stringtemplate.v4.STGroup sTGroup31 = python3Target27.getTemplates();
        python3Target20.templates = sTGroup31;
        python3Target6.templates = sTGroup31;
        python3Target0.templates = sTGroup31;
        java.util.Set<java.lang.String> strSet35 = python3Target0.badWords;
        boolean boolean36 = python3Target0.wantsBaseVisitor();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(sTGroup8);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "\"_tset12\"" + "'", str19, "\"_tset12\"");
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 29 + "'", int23 == 29);
        org.junit.Assert.assertNotNull(strSet28);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "DContext" + "'", str30, "DContext");
        org.junit.Assert.assertNotNull(sTGroup31);
        org.junit.Assert.assertNotNull(strSet35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
    }

    @Test
    public void test3813() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3813");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray1 = python3Target0.targetCharValueEscape;
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        int int3 = python3Target0.getInlineTestSetWordSize();
        boolean boolean4 = python3Target0.supportsOverloadedMethods();
        java.lang.String str6 = python3Target0.encodeIntAsCharEscape(64);
        java.lang.String str7 = python3Target0.language;
        java.lang.String str9 = python3Target0.encodeIntAsCharEscape((int) 'a');
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 64 + "'", int3 == 64);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "@" + "'", str6, "@");
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "a" + "'", str9, "a");
    }

    @Test
    public void test3814() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3814");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!", "hi!" };
        python3Target0.targetCharValueEscape = strArray5;
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = null;
        java.lang.String str10 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator7, "", false);
        org.antlr.v4.codegen.CodeGenerator codeGenerator11 = python3Target0.gen;
        org.antlr.v4.codegen.target.Python3Target python3Target12 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray13 = python3Target12.targetCharValueEscape;
        org.stringtemplate.v4.STGroup sTGroup14 = python3Target12.templates;
        org.antlr.v4.codegen.CodeGenerator codeGenerator15 = null;
        java.lang.String str18 = python3Target12.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator15, "\"\\12\"", false);
        int int19 = python3Target12.getSerializedATNSegmentLimit();
        boolean boolean20 = python3Target12.templatesExist();
        boolean boolean21 = python3Target12.supportsOverloadedMethods();
        org.antlr.v4.tool.Grammar grammar22 = null;
        org.stringtemplate.v4.ST sT23 = null;
        python3Target12.genRecognizerHeaderFile(grammar22, sT23, "_tsetPython3");
        java.util.Set<java.lang.String> strSet26 = python3Target12.badWords;
        python3Target0.badWords = strSet26;
        org.antlr.v4.tool.ast.GrammarAST grammarAST28 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean29 = python3Target0.visibleGrammarSymbolCausesIssueInGeneratedCode(grammarAST28);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNull(codeGenerator11);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertNull(sTGroup14);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "12" + "'", str18, "12");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 29 + "'", int19 == 29);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(strSet26);
    }

    @Test
    public void test3815() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3815");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python3Target1.getBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = null;
        python3Target1.gen = codeGenerator3;
        java.lang.String str6 = python3Target1.getAltLabelContextStructName("hi!");
        java.lang.String str9 = python3Target1.getTargetStringLiteralFromString("\"hi!\"", true);
        int int10 = python3Target1.getSerializedATNSegmentLimit();
        org.stringtemplate.v4.STGroup sTGroup11 = python3Target1.getTemplates();
        org.antlr.v4.codegen.target.Python3Target python3Target12 = new org.antlr.v4.codegen.target.Python3Target();
        python3Target12.language = "";
        org.antlr.v4.codegen.target.Python3Target python3Target15 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean16 = python3Target15.supportsOverloadedMethods();
        java.lang.String str17 = python3Target15.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator18 = null;
        java.lang.String str21 = python3Target15.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator18, "", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator22 = null;
        python3Target15.gen = codeGenerator22;
        java.lang.String[] strArray31 = new java.lang.String[] { "\"\"\"\"", "\\12", "\"\"", "4.5.2.1", "", "\"\"\"\"", "\"\"" };
        java.util.LinkedHashSet<java.lang.String> strSet32 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet32, strArray31);
        python3Target15.badWords = strSet32;
        python3Target12.badWords = strSet32;
        java.lang.String str37 = python3Target12.encodeIntAsCharEscape((int) (byte) 100);
        java.lang.String str38 = python3Target12.getLanguage();
        java.lang.String str40 = python3Target12.getTargetStringLiteralFromString("\"\\0\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator41 = null;
        python3Target12.gen = codeGenerator41;
        org.antlr.v4.codegen.CodeGenerator codeGenerator43 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target44 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator43);
        java.lang.String str45 = python3Target44.getLanguage();
        java.lang.String str47 = python3Target44.getImplicitSetLabel("Python3");
        org.antlr.v4.codegen.CodeGenerator codeGenerator48 = null;
        java.lang.String str51 = python3Target44.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator48, "\"\"\"\"", true);
        org.stringtemplate.v4.STGroup sTGroup52 = python3Target44.loadTemplates();
        python3Target12.templates = sTGroup52;
        python3Target1.templates = sTGroup52;
        java.util.Set<java.lang.String> strSet55 = python3Target1.getBadWords();
        org.stringtemplate.v4.STGroup sTGroup56 = python3Target1.loadTemplates();
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Hi!Context" + "'", str6, "Hi!Context");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\"\\\"hi!\\\"\"" + "'", str9, "\"\\\"hi!\\\"\"");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 29 + "'", int10 == 29);
        org.junit.Assert.assertNotNull(sTGroup11);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "4.5.2.1" + "'", str17, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "\"\"" + "'", str21, "\"\"");
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "d" + "'", str37, "d");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "" + "'", str38, "");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "\"\"\\0\"\"" + "'", str40, "\"\"\\0\"\"");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "Python3" + "'", str45, "Python3");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "_tsetPython3" + "'", str47, "_tsetPython3");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "\"\\\"\\\"\"" + "'", str51, "\"\\\"\\\"\"");
        org.junit.Assert.assertNotNull(sTGroup52);
        org.junit.Assert.assertNotNull(strSet55);
        org.junit.Assert.assertNotNull(sTGroup56);
    }

    @Test
    public void test3816() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3816");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        python3Target0.language = "4.5.2.1";
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = python3Target0.getCodeGenerator();
        org.antlr.v4.codegen.CodeGenerator codeGenerator4 = python3Target0.gen;
        org.antlr.v4.codegen.CodeGenerator codeGenerator5 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target6 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator5);
        java.lang.String str8 = python3Target6.getTargetStringLiteralFromString("");
        int int9 = python3Target6.getSerializedATNSegmentLimit();
        boolean boolean10 = python3Target6.wantsBaseVisitor();
        org.stringtemplate.v4.STGroup sTGroup11 = python3Target6.loadTemplates();
        python3Target0.templates = sTGroup11;
        java.lang.String str14 = python3Target0.encodeIntAsCharEscape((int) (byte) 10);
        org.antlr.v4.codegen.CodeGenerator codeGenerator15 = null;
        python3Target0.gen = codeGenerator15;
        java.util.Set<java.lang.String> strSet17 = python3Target0.badWords;
        java.lang.String str19 = python3Target0.getImplicitRuleLabel("\"_tset\\\"\\\\\\\"\\\\\\\"hi!\\\\\\\"\\\\\\\"\\\"\"");
        org.antlr.v4.codegen.target.Python3Target python3Target20 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean21 = python3Target20.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup22 = python3Target20.templates;
        java.lang.String[] strArray25 = new java.lang.String[] { "hi!", "hi!" };
        python3Target20.targetCharValueEscape = strArray25;
        java.lang.String str28 = python3Target20.getTargetStringLiteralFromString("\"\"");
        org.stringtemplate.v4.STGroup sTGroup29 = null;
        python3Target20.templates = sTGroup29;
        java.lang.String[] strArray31 = python3Target20.targetCharValueEscape;
        int int32 = python3Target20.getInlineTestSetWordSize();
        org.antlr.v4.codegen.CodeGenerator codeGenerator33 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target34 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator33);
        java.lang.String str36 = python3Target34.getTargetStringLiteralFromString("");
        int int37 = python3Target34.getSerializedATNSegmentLimit();
        boolean boolean38 = python3Target34.wantsBaseVisitor();
        org.stringtemplate.v4.STGroup sTGroup39 = python3Target34.loadTemplates();
        org.antlr.v4.codegen.CodeGenerator codeGenerator40 = python3Target34.gen;
        org.antlr.v4.codegen.target.Python3Target python3Target41 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean42 = python3Target41.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup43 = python3Target41.templates;
        org.antlr.v4.tool.Grammar grammar44 = null;
        org.stringtemplate.v4.ST sT45 = null;
        python3Target41.genRecognizerHeaderFile(grammar44, sT45, "");
        python3Target41.language = "Python3";
        int int50 = python3Target41.getSerializedATNSegmentLimit();
        org.stringtemplate.v4.STGroup sTGroup51 = python3Target41.loadTemplates();
        python3Target34.templates = sTGroup51;
        java.lang.String str53 = python3Target34.getVersion();
        java.util.Set<java.lang.String> strSet54 = python3Target34.getBadWords();
        python3Target20.badWords = strSet54;
        java.lang.String[] strArray56 = org.antlr.v4.codegen.target.Python3Target.python3Keywords;
        org.antlr.v4.codegen.target.Python3Target.python3Keywords = strArray56;
        python3Target20.targetCharValueEscape = strArray56;
        org.antlr.v4.codegen.target.Python3Target.python3Keywords = strArray56;
        python3Target0.targetCharValueEscape = strArray56;
        org.junit.Assert.assertNull(codeGenerator3);
        org.junit.Assert.assertNull(codeGenerator4);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\"\"" + "'", str8, "\"\"");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 29 + "'", int9 == 29);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(sTGroup11);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "\\12" + "'", str14, "\\12");
        org.junit.Assert.assertNotNull(strSet17);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "_\"_tset\\\"\\\\\\\"\\\\\\\"hi!\\\\\\\"\\\\\\\"\\\"\"" + "'", str19, "_\"_tset\\\"\\\\\\\"\\\\\\\"hi!\\\\\\\"\\\\\\\"\\\"\"");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(sTGroup22);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "\"\"\"\"" + "'", str28, "\"\"\"\"");
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 64 + "'", int32 == 64);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "\"\"" + "'", str36, "\"\"");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 29 + "'", int37 == 29);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(sTGroup39);
        org.junit.Assert.assertNull(codeGenerator40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNull(sTGroup43);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 29 + "'", int50 == 29);
        org.junit.Assert.assertNotNull(sTGroup51);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "4.5.2.1" + "'", str53, "4.5.2.1");
        org.junit.Assert.assertNotNull(strSet54);
        org.junit.Assert.assertNotNull(strArray56);
    }

    @Test
    public void test3817() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3817");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        java.lang.String str2 = python3Target0.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = null;
        java.lang.String str6 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator3, "", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = null;
        python3Target0.gen = codeGenerator7;
        int int9 = python3Target0.getSerializedATNSegmentLimit();
        org.antlr.v4.tool.Grammar grammar10 = null;
        org.stringtemplate.v4.ST sT11 = null;
        python3Target0.genRecognizerHeaderFile(grammar10, sT11, "_tset12");
        org.stringtemplate.v4.STGroup sTGroup14 = python3Target0.templates;
        org.antlr.v4.codegen.CodeGenerator codeGenerator15 = python3Target0.gen;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str17 = python3Target0.getAltLabelContextStructName("tset\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"ContextContextConte");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "4.5.2.1" + "'", str2, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\"\"" + "'", str6, "\"\"");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 29 + "'", int9 == 29);
        org.junit.Assert.assertNull(sTGroup14);
        org.junit.Assert.assertNull(codeGenerator15);
    }

    @Test
    public void test3818() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3818");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray1 = python3Target0.targetCharValueEscape;
        java.lang.String str2 = python3Target0.language;
        int int3 = python3Target0.getSerializedATNSegmentLimit();
        org.antlr.v4.codegen.CodeGenerator codeGenerator4 = null;
        java.lang.String str7 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator4, "d", true);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str9 = python3Target0.getImplicitSetLabel("\"\"tset\\\"\\\"Python3\\\"\"\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 29 + "'", int3 == 29);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "\"\"" + "'", str7, "\"\"");
    }

    @Test
    public void test3819() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3819");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray1 = python3Target0.targetCharValueEscape;
        java.lang.String str2 = python3Target0.language;
        int int3 = python3Target0.getSerializedATNSegmentLimit();
        org.antlr.v4.codegen.CodeGenerator codeGenerator4 = python3Target0.getCodeGenerator();
        org.antlr.v4.codegen.CodeGenerator codeGenerator5 = null;
        java.lang.String str8 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator5, "_tset\"\\\"\\\"hi!\\\"\\\"\"", true);
        java.lang.String str9 = python3Target0.language;
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target11 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator10);
        java.util.Set<java.lang.String> strSet12 = python3Target11.getBadWords();
        org.antlr.v4.codegen.target.Python3Target python3Target13 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str15 = python3Target13.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.codegen.target.Python3Target python3Target16 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean17 = python3Target16.supportsOverloadedMethods();
        java.util.Set<java.lang.String> strSet18 = python3Target16.badWords;
        python3Target13.badWords = strSet18;
        python3Target11.badWords = strSet18;
        python3Target0.badWords = strSet18;
        int int22 = python3Target0.getSerializedATNSegmentLimit();
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 29 + "'", int3 == 29);
        org.junit.Assert.assertNull(codeGenerator4);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\"tset\\\"\\\"\\\"hi!\\\"\\\"\"" + "'", str8, "\"tset\\\"\\\"\\\"hi!\\\"\\\"\"");
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "\"\"\"\"\"\"" + "'", str15, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(strSet18);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 29 + "'", int22 == 29);
    }

    @Test
    public void test3820() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3820");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        org.antlr.v4.tool.Grammar grammar3 = null;
        org.stringtemplate.v4.ST sT4 = null;
        python3Target0.genRecognizerHeaderFile(grammar3, sT4, "");
        boolean boolean7 = python3Target0.supportsOverloadedMethods();
        python3Target0.language = "\"\\12\"";
        boolean boolean10 = python3Target0.supportsOverloadedMethods();
        boolean boolean11 = python3Target0.wantsBaseVisitor();
        python3Target0.language = "_\"4.5.2.1\"";
        java.util.Set<java.lang.String> strSet14 = python3Target0.getBadWords();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(strSet14);
    }

    @Test
    public void test3821() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3821");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        org.antlr.v4.tool.Grammar grammar3 = null;
        org.stringtemplate.v4.ST sT4 = null;
        python3Target0.genRecognizerHeaderFile(grammar3, sT4, "");
        python3Target0.language = "Python3";
        org.antlr.v4.tool.Grammar grammar9 = null;
        org.stringtemplate.v4.ST sT10 = null;
        python3Target0.genRecognizerHeaderFile(grammar9, sT10, "\"hi!\"");
        java.lang.String str14 = python3Target0.getImplicitRuleLabel("\"\\1\"");
        java.lang.String str16 = python3Target0.getImplicitSetLabel("\\\"\\\\\\\"\\\\\\\"hi!\\\\\\\"\\\\\\\"\\\"");
        org.antlr.v4.tool.Grammar grammar17 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator18 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target19 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator18);
        java.lang.String str20 = python3Target19.getVersion();
        int int21 = python3Target19.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet22 = python3Target19.badWords;
        org.antlr.v4.tool.Grammar grammar23 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target24 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean25 = python3Target24.supportsOverloadedMethods();
        java.lang.String str26 = python3Target24.getVersion();
        boolean boolean27 = python3Target24.supportsOverloadedMethods();
        org.antlr.v4.codegen.CodeGenerator codeGenerator28 = null;
        java.lang.String str31 = python3Target24.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator28, "", false);
        org.antlr.v4.tool.Grammar grammar32 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target33 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean34 = python3Target33.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup35 = python3Target33.templates;
        java.lang.String[] strArray38 = new java.lang.String[] { "hi!", "hi!" };
        python3Target33.targetCharValueEscape = strArray38;
        org.antlr.v4.codegen.CodeGenerator codeGenerator40 = null;
        java.lang.String str43 = python3Target33.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator40, "", false);
        java.util.Set<java.lang.String> strSet44 = python3Target33.badWords;
        java.lang.String str46 = python3Target33.getTargetStringLiteralFromString("12");
        int int47 = python3Target33.getSerializedATNSegmentLimit();
        boolean boolean48 = python3Target33.supportsOverloadedMethods();
        org.antlr.v4.tool.Grammar grammar49 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target50 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean51 = python3Target50.supportsOverloadedMethods();
        java.util.Set<java.lang.String> strSet52 = python3Target50.badWords;
        boolean boolean53 = python3Target50.templatesExist();
        java.lang.String str54 = python3Target50.getLanguage();
        org.antlr.v4.tool.Grammar grammar55 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target56 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str58 = python3Target56.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator59 = null;
        python3Target56.gen = codeGenerator59;
        org.antlr.v4.tool.Grammar grammar61 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target62 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str64 = python3Target62.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.tool.Grammar grammar65 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target66 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean67 = python3Target66.supportsOverloadedMethods();
        java.lang.String str68 = python3Target66.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator69 = null;
        java.lang.String str72 = python3Target66.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator69, "", true);
        java.lang.String str73 = python3Target66.getVersion();
        org.antlr.v4.tool.Grammar grammar74 = null;
        int[] intArray75 = new int[] {};
        java.lang.String[] strArray76 = python3Target66.getTokenTypesAsTargetLabels(grammar74, intArray75);
        java.lang.String[] strArray77 = python3Target62.getTokenTypesAsTargetLabels(grammar65, intArray75);
        java.lang.String[] strArray78 = python3Target56.getTokenTypesAsTargetLabels(grammar61, intArray75);
        java.lang.String[] strArray79 = python3Target50.getTokenTypesAsTargetLabels(grammar55, intArray75);
        java.lang.String[] strArray80 = python3Target33.getTokenTypesAsTargetLabels(grammar49, intArray75);
        java.lang.String[] strArray81 = python3Target24.getTokenTypesAsTargetLabels(grammar32, intArray75);
        java.lang.String[] strArray82 = python3Target19.getTokenTypesAsTargetLabels(grammar23, intArray75);
        java.lang.String[] strArray83 = python3Target0.getTokenTypesAsTargetLabels(grammar17, intArray75);
        boolean boolean84 = python3Target0.supportsOverloadedMethods();
        org.antlr.v4.tool.Rule rule85 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str86 = python3Target0.getRuleFunctionContextStructName(rule85);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "_\"\\1\"" + "'", str14, "_\"\\1\"");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "_tset\\\"\\\\\\\"\\\\\\\"hi!\\\\\\\"\\\\\\\"\\\"" + "'", str16, "_tset\\\"\\\\\\\"\\\\\\\"hi!\\\\\\\"\\\\\\\"\\\"");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "4.5.2.1" + "'", str20, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 64 + "'", int21 == 64);
        org.junit.Assert.assertNotNull(strSet22);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "4.5.2.1" + "'", str26, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "" + "'", str31, "");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNull(sTGroup35);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "" + "'", str43, "");
        org.junit.Assert.assertNotNull(strSet44);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "\"12\"" + "'", str46, "\"12\"");
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 29 + "'", int47 == 29);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(strSet52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "\"\"\"\"\"\"" + "'", str58, "\"\"\"\"\"\"");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "\"\"\"\"\"\"" + "'", str64, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "4.5.2.1" + "'", str68, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "\"\"" + "'", str72, "\"\"");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "4.5.2.1" + "'", str73, "4.5.2.1");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[]");
        org.junit.Assert.assertNotNull(strArray76);
        org.junit.Assert.assertNotNull(strArray77);
        org.junit.Assert.assertNotNull(strArray78);
        org.junit.Assert.assertNotNull(strArray79);
        org.junit.Assert.assertNotNull(strArray80);
        org.junit.Assert.assertNotNull(strArray81);
        org.junit.Assert.assertNotNull(strArray82);
        org.junit.Assert.assertNotNull(strArray83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
    }

    @Test
    public void test3822() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3822");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.lang.String str2 = python3Target1.getVersion();
        int int3 = python3Target1.getSerializedATNSegmentLimit();
        java.util.Set<java.lang.String> strSet4 = null;
        python3Target1.badWords = strSet4;
        org.antlr.v4.tool.Rule rule6 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str7 = python3Target1.getRuleFunctionContextStructName(rule6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "4.5.2.1" + "'", str2, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 29 + "'", int3 == 29);
    }

    @Test
    public void test3823() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3823");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        java.lang.String str2 = python3Target0.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = python3Target0.getCodeGenerator();
        org.stringtemplate.v4.STGroup sTGroup4 = null;
        python3Target0.templates = sTGroup4;
        org.stringtemplate.v4.STGroup sTGroup6 = python3Target0.templates;
        org.antlr.v4.codegen.target.Python3Target python3Target7 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray8 = python3Target7.targetCharValueEscape;
        python3Target7.addBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target11 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator10);
        java.lang.String str13 = python3Target11.getTargetStringLiteralFromString("");
        int int14 = python3Target11.getSerializedATNSegmentLimit();
        boolean boolean15 = python3Target11.wantsBaseVisitor();
        org.stringtemplate.v4.STGroup sTGroup16 = python3Target11.loadTemplates();
        python3Target7.templates = sTGroup16;
        python3Target0.templates = sTGroup16;
        java.lang.String str20 = python3Target0.getListLabel("\"\"");
        java.lang.String str21 = python3Target0.language;
        java.lang.String[] strArray22 = python3Target0.targetCharValueEscape;
        java.lang.String str25 = python3Target0.getTargetStringLiteralFromString("\"_tset\\\"\\\\\\\"\\\\\\\"hi!\\\\\\\"\\\\\\\"\\\"\"", true);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "4.5.2.1" + "'", str2, "4.5.2.1");
        org.junit.Assert.assertNull(codeGenerator3);
        org.junit.Assert.assertNull(sTGroup6);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "\"\"" + "'", str13, "\"\"");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 29 + "'", int14 == 29);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(sTGroup16);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "\"\"" + "'", str20, "\"\"");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "\"\"_tset\\\"\\\\\\\"\\\\\\\"hi!\\\\\\\"\\\\\\\"\\\"\"\"" + "'", str25, "\"\"_tset\\\"\\\\\\\"\\\\\\\"hi!\\\\\\\"\\\\\\\"\\\"\"\"");
    }

    @Test
    public void test3824() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3824");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python3Target1.getBadWords();
        java.lang.String str4 = python3Target1.getAltLabelContextStructName("d");
        org.stringtemplate.v4.STGroup sTGroup5 = python3Target1.getTemplates();
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = null;
        java.lang.String str9 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator6, "", true);
        org.antlr.v4.tool.Grammar grammar10 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target11 = new org.antlr.v4.codegen.target.Python3Target();
        python3Target11.language = "";
        org.antlr.v4.codegen.target.Python3Target python3Target14 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean15 = python3Target14.supportsOverloadedMethods();
        java.lang.String str16 = python3Target14.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator17 = null;
        java.lang.String str20 = python3Target14.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator17, "", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator21 = null;
        python3Target14.gen = codeGenerator21;
        java.lang.String[] strArray30 = new java.lang.String[] { "\"\"\"\"", "\\12", "\"\"", "4.5.2.1", "", "\"\"\"\"", "\"\"" };
        java.util.LinkedHashSet<java.lang.String> strSet31 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet31, strArray30);
        python3Target14.badWords = strSet31;
        python3Target11.badWords = strSet31;
        java.lang.String str36 = python3Target11.encodeIntAsCharEscape((int) (byte) 100);
        java.lang.String str37 = python3Target11.getLanguage();
        java.lang.String[] strArray38 = new java.lang.String[] {};
        python3Target11.targetCharValueEscape = strArray38;
        org.antlr.v4.tool.Grammar grammar40 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target41 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean42 = python3Target41.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup43 = python3Target41.templates;
        java.lang.String[] strArray46 = new java.lang.String[] { "hi!", "hi!" };
        python3Target41.targetCharValueEscape = strArray46;
        org.antlr.v4.codegen.CodeGenerator codeGenerator48 = null;
        java.lang.String str51 = python3Target41.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator48, "", false);
        java.util.Set<java.lang.String> strSet52 = python3Target41.badWords;
        java.lang.String str54 = python3Target41.getTargetStringLiteralFromString("12");
        int int55 = python3Target41.getSerializedATNSegmentLimit();
        boolean boolean56 = python3Target41.supportsOverloadedMethods();
        org.antlr.v4.tool.Grammar grammar57 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target58 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean59 = python3Target58.supportsOverloadedMethods();
        java.util.Set<java.lang.String> strSet60 = python3Target58.badWords;
        boolean boolean61 = python3Target58.templatesExist();
        java.lang.String str62 = python3Target58.getLanguage();
        org.antlr.v4.tool.Grammar grammar63 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target64 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str66 = python3Target64.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator67 = null;
        python3Target64.gen = codeGenerator67;
        org.antlr.v4.tool.Grammar grammar69 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target70 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str72 = python3Target70.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.tool.Grammar grammar73 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target74 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean75 = python3Target74.supportsOverloadedMethods();
        java.lang.String str76 = python3Target74.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator77 = null;
        java.lang.String str80 = python3Target74.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator77, "", true);
        java.lang.String str81 = python3Target74.getVersion();
        org.antlr.v4.tool.Grammar grammar82 = null;
        int[] intArray83 = new int[] {};
        java.lang.String[] strArray84 = python3Target74.getTokenTypesAsTargetLabels(grammar82, intArray83);
        java.lang.String[] strArray85 = python3Target70.getTokenTypesAsTargetLabels(grammar73, intArray83);
        java.lang.String[] strArray86 = python3Target64.getTokenTypesAsTargetLabels(grammar69, intArray83);
        java.lang.String[] strArray87 = python3Target58.getTokenTypesAsTargetLabels(grammar63, intArray83);
        java.lang.String[] strArray88 = python3Target41.getTokenTypesAsTargetLabels(grammar57, intArray83);
        java.lang.String[] strArray89 = python3Target11.getTokenTypesAsTargetLabels(grammar40, intArray83);
        java.lang.String[] strArray90 = python3Target1.getTokenTypesAsTargetLabels(grammar10, intArray83);
        java.lang.String str91 = python3Target1.getVersion();
        java.lang.String str92 = python3Target1.getLanguage();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str94 = python3Target1.getImplicitTokenLabel("\\0Context");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "DContext" + "'", str4, "DContext");
        org.junit.Assert.assertNotNull(sTGroup5);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\"\"" + "'", str9, "\"\"");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "4.5.2.1" + "'", str16, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "\"\"" + "'", str20, "\"\"");
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "d" + "'", str36, "d");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "" + "'", str37, "");
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNull(sTGroup43);
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "" + "'", str51, "");
        org.junit.Assert.assertNotNull(strSet52);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "\"12\"" + "'", str54, "\"12\"");
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 29 + "'", int55 == 29);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(strSet60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNull(str62);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "\"\"\"\"\"\"" + "'", str66, "\"\"\"\"\"\"");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "\"\"\"\"\"\"" + "'", str72, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "4.5.2.1" + "'", str76, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "\"\"" + "'", str80, "\"\"");
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "4.5.2.1" + "'", str81, "4.5.2.1");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[]");
        org.junit.Assert.assertNotNull(strArray84);
        org.junit.Assert.assertNotNull(strArray85);
        org.junit.Assert.assertNotNull(strArray86);
        org.junit.Assert.assertNotNull(strArray87);
        org.junit.Assert.assertNotNull(strArray88);
        org.junit.Assert.assertNotNull(strArray89);
        org.junit.Assert.assertNotNull(strArray90);
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "4.5.2.1" + "'", str91, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str92 + "' != '" + "Python3" + "'", str92, "Python3");
    }

    @Test
    public void test3825() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3825");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray1 = python3Target0.targetCharValueEscape;
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = null;
        java.lang.String str6 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator3, "\"\\12\"", false);
        java.lang.String[] strArray7 = python3Target0.targetCharValueEscape;
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "12" + "'", str6, "12");
        org.junit.Assert.assertNotNull(strArray7);
    }

    @Test
    public void test3826() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3826");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.lang.String str3 = python3Target1.getTargetStringLiteralFromString("");
        int int4 = python3Target1.getSerializedATNSegmentLimit();
        boolean boolean5 = python3Target1.wantsBaseVisitor();
        org.stringtemplate.v4.STGroup sTGroup6 = python3Target1.loadTemplates();
        java.lang.String str7 = python3Target1.getLanguage();
        java.lang.String str9 = python3Target1.getTargetStringLiteralFromString("\"\"\\0\"\"");
        java.lang.String str10 = python3Target1.getLanguage();
        org.antlr.v4.tool.ast.GrammarAST grammarAST11 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str12 = python3Target1.getLoopLabel(grammarAST11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "\"\"" + "'", str3, "\"\"");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 29 + "'", int4 == 29);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(sTGroup6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Python3" + "'", str7, "Python3");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\"\\\"\\\"\\\\0\\\"\\\"\"" + "'", str9, "\"\\\"\\\"\\\\0\\\"\\\"\"");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Python3" + "'", str10, "Python3");
    }

    @Test
    public void test3827() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3827");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray1 = python3Target0.targetCharValueEscape;
        java.lang.String str2 = python3Target0.language;
        int int3 = python3Target0.getSerializedATNSegmentLimit();
        java.lang.String str5 = python3Target0.encodeIntAsCharEscape(1);
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = python3Target0.gen;
        java.util.Set<java.lang.String> strSet7 = python3Target0.getBadWords();
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 29 + "'", int3 == 29);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "\\1" + "'", str5, "\\1");
        org.junit.Assert.assertNull(codeGenerator6);
        org.junit.Assert.assertNotNull(strSet7);
    }

    @Test
    public void test3828() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3828");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!", "hi!" };
        python3Target0.targetCharValueEscape = strArray5;
        java.lang.String[] strArray8 = new java.lang.String[] { "hi!" };
        org.antlr.v4.codegen.target.Python3Target.python3Keywords = strArray8;
        python3Target0.targetCharValueEscape = strArray8;
        java.lang.String str12 = python3Target0.getTargetStringLiteralFromString("\"\"\"\"\"\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator13 = python3Target0.gen;
        org.antlr.v4.codegen.target.Python3Target python3Target14 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str16 = python3Target14.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator17 = null;
        python3Target14.gen = codeGenerator17;
        java.lang.String str19 = python3Target14.getVersion();
        org.antlr.v4.codegen.target.Python3Target python3Target20 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean21 = python3Target20.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup22 = python3Target20.templates;
        org.antlr.v4.tool.Grammar grammar23 = null;
        org.stringtemplate.v4.ST sT24 = null;
        python3Target20.genRecognizerHeaderFile(grammar23, sT24, "");
        python3Target20.language = "Python3";
        int int29 = python3Target20.getSerializedATNSegmentLimit();
        org.stringtemplate.v4.STGroup sTGroup30 = python3Target20.loadTemplates();
        python3Target14.templates = sTGroup30;
        java.util.Set<java.lang.String> strSet32 = python3Target14.getBadWords();
        boolean boolean33 = python3Target14.supportsOverloadedMethods();
        org.antlr.v4.codegen.CodeGenerator codeGenerator34 = null;
        python3Target14.gen = codeGenerator34;
        org.antlr.v4.codegen.CodeGenerator codeGenerator36 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target37 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator36);
        java.util.Set<java.lang.String> strSet38 = python3Target37.getBadWords();
        java.lang.String str40 = python3Target37.getAltLabelContextStructName("d");
        org.stringtemplate.v4.STGroup sTGroup41 = python3Target37.getTemplates();
        boolean boolean42 = python3Target37.supportsOverloadedMethods();
        boolean boolean43 = python3Target37.supportsOverloadedMethods();
        org.antlr.v4.codegen.CodeGenerator codeGenerator44 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target45 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator44);
        java.lang.String str47 = python3Target45.getTargetStringLiteralFromString("");
        int int48 = python3Target45.getSerializedATNSegmentLimit();
        int int49 = python3Target45.getInlineTestSetWordSize();
        org.antlr.v4.tool.Grammar grammar50 = null;
        org.stringtemplate.v4.ST sT51 = null;
        python3Target45.genRecognizerHeaderFile(grammar50, sT51, "@");
        boolean boolean54 = python3Target45.templatesExist();
        org.stringtemplate.v4.STGroup sTGroup55 = python3Target45.loadTemplates();
        python3Target37.templates = sTGroup55;
        python3Target14.templates = sTGroup55;
        python3Target0.templates = sTGroup55;
        int int59 = python3Target0.getInlineTestSetWordSize();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "\"\"\"\"\"\"\"\"" + "'", str12, "\"\"\"\"\"\"\"\"");
        org.junit.Assert.assertNull(codeGenerator13);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "\"\"\"\"\"\"" + "'", str16, "\"\"\"\"\"\"");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "4.5.2.1" + "'", str19, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(sTGroup22);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 29 + "'", int29 == 29);
        org.junit.Assert.assertNotNull(sTGroup30);
        org.junit.Assert.assertNotNull(strSet32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(strSet38);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "DContext" + "'", str40, "DContext");
        org.junit.Assert.assertNotNull(sTGroup41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "\"\"" + "'", str47, "\"\"");
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 29 + "'", int48 == 29);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 64 + "'", int49 == 64);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(sTGroup55);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 64 + "'", int59 == 64);
    }

    @Test
    public void test3829() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3829");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!", "hi!" };
        python3Target0.targetCharValueEscape = strArray5;
        java.lang.String str8 = python3Target0.getTargetStringLiteralFromString("\"\"");
        org.stringtemplate.v4.STGroup sTGroup9 = null;
        python3Target0.templates = sTGroup9;
        java.lang.String[] strArray11 = python3Target0.targetCharValueEscape;
        int int12 = python3Target0.getInlineTestSetWordSize();
        java.lang.String[] strArray13 = new java.lang.String[] {};
        python3Target0.targetCharValueEscape = strArray13;
        java.lang.String str16 = python3Target0.getTargetStringLiteralFromString("_tsetPython3");
        java.util.Set<java.lang.String> strSet17 = python3Target0.badWords;
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\"\"\"\"" + "'", str8, "\"\"\"\"");
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 64 + "'", int12 == 64);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "\"_tsetPython3\"" + "'", str16, "\"_tsetPython3\"");
        org.junit.Assert.assertNotNull(strSet17);
    }

    @Test
    public void test3830() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3830");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray1 = python3Target0.targetCharValueEscape;
        java.lang.String str2 = python3Target0.language;
        int int3 = python3Target0.getSerializedATNSegmentLimit();
        org.antlr.v4.codegen.CodeGenerator codeGenerator4 = python3Target0.getCodeGenerator();
        org.antlr.v4.codegen.CodeGenerator codeGenerator5 = null;
        java.lang.String str8 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator5, "_tset\"\\\"\\\"hi!\\\"\\\"\"", true);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str10 = python3Target0.getElementName("\"\\\"1\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 29 + "'", int3 == 29);
        org.junit.Assert.assertNull(codeGenerator4);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\"tset\\\"\\\"\\\"hi!\\\"\\\"\"" + "'", str8, "\"tset\\\"\\\"\\\"hi!\\\"\\\"\"");
    }

    @Test
    public void test3831() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3831");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str2 = python3Target0.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.tool.Grammar grammar3 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target4 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean5 = python3Target4.supportsOverloadedMethods();
        java.lang.String str6 = python3Target4.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = null;
        java.lang.String str10 = python3Target4.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator7, "", true);
        java.lang.String str11 = python3Target4.getVersion();
        org.antlr.v4.tool.Grammar grammar12 = null;
        int[] intArray13 = new int[] {};
        java.lang.String[] strArray14 = python3Target4.getTokenTypesAsTargetLabels(grammar12, intArray13);
        java.lang.String[] strArray15 = python3Target0.getTokenTypesAsTargetLabels(grammar3, intArray13);
        java.lang.String[] strArray16 = python3Target0.targetCharValueEscape;
        java.lang.String str18 = python3Target0.getTargetStringLiteralFromString("\"\"\"\"\"\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator19 = python3Target0.getCodeGenerator();
        java.lang.String str21 = python3Target0.getTargetStringLiteralFromString("");
        java.lang.String str22 = python3Target0.getVersion();
        org.antlr.v4.codegen.model.RuleFunction ruleFunction23 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str24 = python3Target0.getRuleFunctionContextStructName(ruleFunction23);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "\"\"\"\"\"\"" + "'", str2, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "4.5.2.1" + "'", str6, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\"\"" + "'", str10, "\"\"");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "4.5.2.1" + "'", str11, "4.5.2.1");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[]");
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "\"\"\"\"\"\"\"\"" + "'", str18, "\"\"\"\"\"\"\"\"");
        org.junit.Assert.assertNull(codeGenerator19);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "\"\"" + "'", str21, "\"\"");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "4.5.2.1" + "'", str22, "4.5.2.1");
    }

    @Test
    public void test3832() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3832");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.lang.String str3 = python3Target1.getTargetStringLiteralFromString("");
        int int4 = python3Target1.getSerializedATNSegmentLimit();
        boolean boolean5 = python3Target1.wantsBaseVisitor();
        org.stringtemplate.v4.STGroup sTGroup6 = python3Target1.loadTemplates();
        java.lang.String str7 = python3Target1.getLanguage();
        boolean boolean8 = python3Target1.wantsBaseVisitor();
        java.util.Set<java.lang.String> strSet9 = python3Target1.getBadWords();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "\"\"" + "'", str3, "\"\"");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 29 + "'", int4 == 29);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(sTGroup6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Python3" + "'", str7, "Python3");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(strSet9);
    }

    @Test
    public void test3833() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3833");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!", "hi!" };
        python3Target0.targetCharValueEscape = strArray5;
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = null;
        java.lang.String str10 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator7, "", false);
        java.util.Set<java.lang.String> strSet11 = python3Target0.badWords;
        java.util.Set<java.lang.String> strSet12 = python3Target0.badWords;
        boolean boolean13 = python3Target0.templatesExist();
        int int14 = python3Target0.getSerializedATNSegmentLimit();
        boolean boolean15 = python3Target0.supportsOverloadedMethods();
        org.antlr.v4.tool.Grammar grammar16 = null;
        org.stringtemplate.v4.ST sT17 = null;
        python3Target0.genRecognizerHeaderFile(grammar16, sT17, "\"\"\\\"\\\"hi!\\\"\\\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNotNull(strSet11);
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 29 + "'", int14 == 29);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test3834() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3834");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray1 = python3Target0.targetCharValueEscape;
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = null;
        java.lang.String str6 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator3, "\"\\12\"", false);
        java.lang.String str7 = python3Target0.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = python3Target0.gen;
        int int9 = python3Target0.getInlineTestSetWordSize();
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = python3Target0.getCodeGenerator();
        org.antlr.v4.tool.ast.GrammarAST grammarAST11 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str12 = python3Target0.getLoopLabel(grammarAST11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "12" + "'", str6, "12");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "4.5.2.1" + "'", str7, "4.5.2.1");
        org.junit.Assert.assertNull(codeGenerator8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 64 + "'", int9 == 64);
        org.junit.Assert.assertNull(codeGenerator10);
    }

    @Test
    public void test3835() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3835");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        java.lang.String str2 = python3Target0.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = python3Target0.getCodeGenerator();
        org.stringtemplate.v4.STGroup sTGroup4 = null;
        python3Target0.templates = sTGroup4;
        org.stringtemplate.v4.STGroup sTGroup6 = python3Target0.templates;
        java.lang.String[] strArray7 = python3Target0.targetCharValueEscape;
        java.util.Set<java.lang.String> strSet8 = python3Target0.badWords;
        java.util.Set<java.lang.String> strSet9 = python3Target0.getBadWords();
        python3Target0.addBadWords();
        org.stringtemplate.v4.STGroup sTGroup11 = python3Target0.templates;
        java.lang.String str13 = python3Target0.getTargetStringLiteralFromString("_tset\"\\\"0\\\"\"Context");
        java.lang.String str15 = python3Target0.getTargetStringLiteralFromString("\"\"\"\"\"\"\"\"ContextContextContext");
        java.lang.String str17 = python3Target0.getTargetStringLiteralFromString("_tset\"\\64\"");
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "4.5.2.1" + "'", str2, "4.5.2.1");
        org.junit.Assert.assertNull(codeGenerator3);
        org.junit.Assert.assertNull(sTGroup6);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertNotNull(strSet9);
        org.junit.Assert.assertNull(sTGroup11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "\"_tset\"\\\"0\\\"\"Context\"" + "'", str13, "\"_tset\"\\\"0\\\"\"Context\"");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "\"\"\"\"\"\"\"\"\"ContextContextContext\"" + "'", str15, "\"\"\"\"\"\"\"\"\"ContextContextContext\"");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "\"_tset\"\\64\"\"" + "'", str17, "\"_tset\"\\64\"\"");
    }

    @Test
    public void test3836() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3836");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        java.lang.String str2 = python3Target0.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = python3Target0.getCodeGenerator();
        org.stringtemplate.v4.STGroup sTGroup4 = null;
        python3Target0.templates = sTGroup4;
        org.stringtemplate.v4.STGroup sTGroup6 = python3Target0.templates;
        java.lang.String[] strArray7 = python3Target0.targetCharValueEscape;
        java.util.Set<java.lang.String> strSet8 = python3Target0.badWords;
        java.util.Set<java.lang.String> strSet9 = python3Target0.getBadWords();
        org.antlr.v4.tool.Rule rule10 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str11 = python3Target0.getRuleFunctionContextStructName(rule10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "4.5.2.1" + "'", str2, "4.5.2.1");
        org.junit.Assert.assertNull(codeGenerator3);
        org.junit.Assert.assertNull(sTGroup6);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertNotNull(strSet9);
    }

    @Test
    public void test3837() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3837");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        org.antlr.v4.tool.Grammar grammar3 = null;
        org.stringtemplate.v4.ST sT4 = null;
        python3Target0.genRecognizerHeaderFile(grammar3, sT4, "");
        org.antlr.v4.codegen.target.Python3Target python3Target7 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray8 = python3Target7.targetCharValueEscape;
        python3Target0.targetCharValueEscape = strArray8;
        python3Target0.addBadWords();
        java.lang.String[] strArray11 = python3Target0.targetCharValueEscape;
        org.antlr.v4.codegen.target.Python3Target python3Target12 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean13 = python3Target12.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup14 = python3Target12.templates;
        java.lang.String[] strArray17 = new java.lang.String[] { "hi!", "hi!" };
        python3Target12.targetCharValueEscape = strArray17;
        org.antlr.v4.codegen.CodeGenerator codeGenerator19 = null;
        java.lang.String str22 = python3Target12.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator19, "", false);
        int int23 = python3Target12.getSerializedATNSegmentLimit();
        java.lang.String str24 = python3Target12.getVersion();
        boolean boolean25 = python3Target12.supportsOverloadedMethods();
        org.antlr.v4.codegen.target.Python3Target python3Target26 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean27 = python3Target26.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup28 = python3Target26.templates;
        java.lang.String[] strArray31 = new java.lang.String[] { "hi!", "hi!" };
        python3Target26.targetCharValueEscape = strArray31;
        java.lang.String[] strArray34 = new java.lang.String[] { "hi!" };
        org.antlr.v4.codegen.target.Python3Target.python3Keywords = strArray34;
        python3Target26.targetCharValueEscape = strArray34;
        org.antlr.v4.codegen.target.Python3Target.python3Keywords = strArray34;
        python3Target12.targetCharValueEscape = strArray34;
        python3Target0.targetCharValueEscape = strArray34;
        java.lang.String[] strArray40 = python3Target0.targetCharValueEscape;
        org.stringtemplate.v4.STGroup sTGroup41 = python3Target0.templates;
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(sTGroup14);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 29 + "'", int23 == 29);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "4.5.2.1" + "'", str24, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNull(sTGroup28);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertNull(sTGroup41);
    }

    @Test
    public void test3838() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3838");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        java.util.Set<java.lang.String> strSet2 = python3Target0.badWords;
        boolean boolean3 = python3Target0.templatesExist();
        java.lang.String str4 = python3Target0.getLanguage();
        org.antlr.v4.tool.Grammar grammar5 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target6 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str8 = python3Target6.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator9 = null;
        python3Target6.gen = codeGenerator9;
        org.antlr.v4.tool.Grammar grammar11 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target12 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str14 = python3Target12.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.tool.Grammar grammar15 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target16 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean17 = python3Target16.supportsOverloadedMethods();
        java.lang.String str18 = python3Target16.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator19 = null;
        java.lang.String str22 = python3Target16.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator19, "", true);
        java.lang.String str23 = python3Target16.getVersion();
        org.antlr.v4.tool.Grammar grammar24 = null;
        int[] intArray25 = new int[] {};
        java.lang.String[] strArray26 = python3Target16.getTokenTypesAsTargetLabels(grammar24, intArray25);
        java.lang.String[] strArray27 = python3Target12.getTokenTypesAsTargetLabels(grammar15, intArray25);
        java.lang.String[] strArray28 = python3Target6.getTokenTypesAsTargetLabels(grammar11, intArray25);
        java.lang.String[] strArray29 = python3Target0.getTokenTypesAsTargetLabels(grammar5, intArray25);
        java.util.Set<java.lang.String> strSet30 = python3Target0.badWords;
        org.antlr.v4.codegen.target.Python3Target python3Target31 = new org.antlr.v4.codegen.target.Python3Target();
        python3Target31.language = "4.5.2.1";
        org.antlr.v4.codegen.CodeGenerator codeGenerator34 = python3Target31.getCodeGenerator();
        org.antlr.v4.codegen.CodeGenerator codeGenerator35 = python3Target31.gen;
        java.lang.String str36 = python3Target31.getLanguage();
        python3Target31.addBadWords();
        org.antlr.v4.codegen.target.Python3Target python3Target38 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str40 = python3Target38.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator41 = null;
        python3Target38.gen = codeGenerator41;
        java.lang.String str43 = python3Target38.getVersion();
        org.antlr.v4.codegen.target.Python3Target python3Target44 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean45 = python3Target44.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup46 = python3Target44.templates;
        org.antlr.v4.tool.Grammar grammar47 = null;
        org.stringtemplate.v4.ST sT48 = null;
        python3Target44.genRecognizerHeaderFile(grammar47, sT48, "");
        python3Target44.language = "Python3";
        int int53 = python3Target44.getSerializedATNSegmentLimit();
        org.stringtemplate.v4.STGroup sTGroup54 = python3Target44.loadTemplates();
        python3Target38.templates = sTGroup54;
        python3Target31.templates = sTGroup54;
        python3Target0.templates = sTGroup54;
        java.util.Set<java.lang.String> strSet58 = python3Target0.getBadWords();
        java.lang.String str59 = python3Target0.language;
        java.lang.String str61 = python3Target0.getImplicitSetLabel("\"\\\"\\\"\\\\0\\\"\\\"\"");
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\"\"\"\"\"\"" + "'", str8, "\"\"\"\"\"\"");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "\"\"\"\"\"\"" + "'", str14, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "4.5.2.1" + "'", str18, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "\"\"" + "'", str22, "\"\"");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "4.5.2.1" + "'", str23, "4.5.2.1");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[]");
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertNotNull(strSet30);
        org.junit.Assert.assertNull(codeGenerator34);
        org.junit.Assert.assertNull(codeGenerator35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "4.5.2.1" + "'", str36, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "\"\"\"\"\"\"" + "'", str40, "\"\"\"\"\"\"");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "4.5.2.1" + "'", str43, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNull(sTGroup46);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 29 + "'", int53 == 29);
        org.junit.Assert.assertNotNull(sTGroup54);
        org.junit.Assert.assertNotNull(strSet58);
        org.junit.Assert.assertNull(str59);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "_tset\"\\\"\\\"\\\\0\\\"\\\"\"" + "'", str61, "_tset\"\\\"\\\"\\\\0\\\"\\\"\"");
    }

    @Test
    public void test3839() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3839");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!", "hi!" };
        python3Target0.targetCharValueEscape = strArray5;
        java.lang.String str8 = python3Target0.getTargetStringLiteralFromString("\"\"");
        org.stringtemplate.v4.STGroup sTGroup9 = null;
        python3Target0.templates = sTGroup9;
        java.lang.String[] strArray11 = python3Target0.targetCharValueEscape;
        int int12 = python3Target0.getInlineTestSetWordSize();
        org.antlr.v4.codegen.CodeGenerator codeGenerator13 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target14 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator13);
        java.lang.String str16 = python3Target14.getTargetStringLiteralFromString("");
        int int17 = python3Target14.getSerializedATNSegmentLimit();
        boolean boolean18 = python3Target14.wantsBaseVisitor();
        org.stringtemplate.v4.STGroup sTGroup19 = python3Target14.loadTemplates();
        org.antlr.v4.codegen.CodeGenerator codeGenerator20 = python3Target14.gen;
        org.antlr.v4.codegen.target.Python3Target python3Target21 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean22 = python3Target21.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup23 = python3Target21.templates;
        org.antlr.v4.tool.Grammar grammar24 = null;
        org.stringtemplate.v4.ST sT25 = null;
        python3Target21.genRecognizerHeaderFile(grammar24, sT25, "");
        python3Target21.language = "Python3";
        int int30 = python3Target21.getSerializedATNSegmentLimit();
        org.stringtemplate.v4.STGroup sTGroup31 = python3Target21.loadTemplates();
        python3Target14.templates = sTGroup31;
        java.lang.String str33 = python3Target14.getVersion();
        java.util.Set<java.lang.String> strSet34 = python3Target14.getBadWords();
        python3Target0.badWords = strSet34;
        // The following exception was thrown during execution in test generation
        try {
            org.stringtemplate.v4.STGroup sTGroup36 = python3Target0.getTemplates();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\"\"\"\"" + "'", str8, "\"\"\"\"");
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 64 + "'", int12 == 64);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "\"\"" + "'", str16, "\"\"");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 29 + "'", int17 == 29);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(sTGroup19);
        org.junit.Assert.assertNull(codeGenerator20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(sTGroup23);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 29 + "'", int30 == 29);
        org.junit.Assert.assertNotNull(sTGroup31);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "4.5.2.1" + "'", str33, "4.5.2.1");
        org.junit.Assert.assertNotNull(strSet34);
    }

    @Test
    public void test3840() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3840");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python3Target1.getBadWords();
        java.lang.String str4 = python3Target1.getAltLabelContextStructName("d");
        org.stringtemplate.v4.STGroup sTGroup5 = python3Target1.getTemplates();
        boolean boolean6 = python3Target1.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup7 = python3Target1.getTemplates();
        python3Target1.language = "\"\"";
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = null;
        java.lang.String str13 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator10, "\\\"4.5.2.1\\\"", false);
        org.antlr.v4.codegen.CodeGenerator codeGenerator14 = python3Target1.gen;
        python3Target1.addBadWords();
        boolean boolean16 = python3Target1.templatesExist();
        java.lang.String str18 = python3Target1.getListLabel("DContext");
        java.lang.String str20 = python3Target1.getListLabel("_\"\\\"\\\"4.5.2.1\\\"\\\"\"Context");
        java.util.Set<java.lang.String> strSet21 = python3Target1.badWords;
        org.stringtemplate.v4.STGroup sTGroup22 = python3Target1.templates;
        java.lang.String[] strArray23 = python3Target1.targetCharValueEscape;
        org.antlr.v4.codegen.target.Python3Target python3Target24 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray25 = python3Target24.targetCharValueEscape;
        org.stringtemplate.v4.STGroup sTGroup26 = python3Target24.templates;
        int int27 = python3Target24.getInlineTestSetWordSize();
        org.antlr.v4.codegen.CodeGenerator codeGenerator28 = python3Target24.gen;
        org.antlr.v4.tool.Grammar grammar29 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target30 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str32 = python3Target30.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.tool.Grammar grammar33 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target34 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean35 = python3Target34.supportsOverloadedMethods();
        java.lang.String str36 = python3Target34.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator37 = null;
        java.lang.String str40 = python3Target34.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator37, "", true);
        java.lang.String str41 = python3Target34.getVersion();
        org.antlr.v4.tool.Grammar grammar42 = null;
        int[] intArray43 = new int[] {};
        java.lang.String[] strArray44 = python3Target34.getTokenTypesAsTargetLabels(grammar42, intArray43);
        java.lang.String[] strArray45 = python3Target30.getTokenTypesAsTargetLabels(grammar33, intArray43);
        java.lang.String[] strArray46 = python3Target24.getTokenTypesAsTargetLabels(grammar29, intArray43);
        org.antlr.v4.codegen.CodeGenerator codeGenerator47 = python3Target24.gen;
        org.antlr.v4.codegen.target.Python3Target python3Target48 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean49 = python3Target48.supportsOverloadedMethods();
        java.lang.String str50 = python3Target48.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator51 = null;
        java.lang.String str54 = python3Target48.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator51, "", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator55 = null;
        python3Target48.gen = codeGenerator55;
        java.lang.String[] strArray64 = new java.lang.String[] { "\"\"\"\"", "\\12", "\"\"", "4.5.2.1", "", "\"\"\"\"", "\"\"" };
        java.util.LinkedHashSet<java.lang.String> strSet65 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet65, strArray64);
        python3Target48.badWords = strSet65;
        org.antlr.v4.codegen.CodeGenerator codeGenerator68 = python3Target48.gen;
        java.lang.String str71 = python3Target48.getTargetStringLiteralFromString("\\12", true);
        java.util.Set<java.lang.String> strSet72 = python3Target48.badWords;
        python3Target24.badWords = strSet72;
        org.stringtemplate.v4.STGroup sTGroup74 = python3Target24.templates;
        java.util.Set<java.lang.String> strSet75 = python3Target24.badWords;
        java.util.Set<java.lang.String> strSet76 = python3Target24.badWords;
        python3Target1.badWords = strSet76;
        java.util.Set<java.lang.String> strSet78 = python3Target1.badWords;
        java.lang.String str79 = python3Target1.language;
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "DContext" + "'", str4, "DContext");
        org.junit.Assert.assertNotNull(sTGroup5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(sTGroup7);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "\\\"4.5.2.1\\\"" + "'", str13, "\\\"4.5.2.1\\\"");
        org.junit.Assert.assertNull(codeGenerator14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "DContext" + "'", str18, "DContext");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "_\"\\\"\\\"4.5.2.1\\\"\\\"\"Context" + "'", str20, "_\"\\\"\\\"4.5.2.1\\\"\\\"\"Context");
        org.junit.Assert.assertNotNull(strSet21);
        org.junit.Assert.assertNotNull(sTGroup22);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertNull(sTGroup26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 64 + "'", int27 == 64);
        org.junit.Assert.assertNull(codeGenerator28);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "\"\"\"\"\"\"" + "'", str32, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "4.5.2.1" + "'", str36, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "\"\"" + "'", str40, "\"\"");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "4.5.2.1" + "'", str41, "4.5.2.1");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[]");
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertNull(codeGenerator47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "4.5.2.1" + "'", str50, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "\"\"" + "'", str54, "\"\"");
        org.junit.Assert.assertNotNull(strArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNull(codeGenerator68);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "\"\\12\"" + "'", str71, "\"\\12\"");
        org.junit.Assert.assertNotNull(strSet72);
        org.junit.Assert.assertNull(sTGroup74);
        org.junit.Assert.assertNotNull(strSet75);
        org.junit.Assert.assertNotNull(strSet76);
        org.junit.Assert.assertNotNull(strSet78);
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "\"\"" + "'", str79, "\"\"");
    }

    @Test
    public void test3841() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3841");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python3Target1.getBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = null;
        python3Target1.gen = codeGenerator3;
        java.lang.String str6 = python3Target1.getAltLabelContextStructName("hi!");
        java.lang.String str9 = python3Target1.getTargetStringLiteralFromString("\"hi!\"", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = null;
        python3Target1.gen = codeGenerator10;
        org.antlr.v4.tool.Grammar grammar12 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target13 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray14 = python3Target13.targetCharValueEscape;
        org.stringtemplate.v4.STGroup sTGroup15 = python3Target13.templates;
        int int16 = python3Target13.getInlineTestSetWordSize();
        org.antlr.v4.codegen.CodeGenerator codeGenerator17 = python3Target13.gen;
        org.antlr.v4.tool.Grammar grammar18 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target19 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str21 = python3Target19.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.tool.Grammar grammar22 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target23 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean24 = python3Target23.supportsOverloadedMethods();
        java.lang.String str25 = python3Target23.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator26 = null;
        java.lang.String str29 = python3Target23.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator26, "", true);
        java.lang.String str30 = python3Target23.getVersion();
        org.antlr.v4.tool.Grammar grammar31 = null;
        int[] intArray32 = new int[] {};
        java.lang.String[] strArray33 = python3Target23.getTokenTypesAsTargetLabels(grammar31, intArray32);
        java.lang.String[] strArray34 = python3Target19.getTokenTypesAsTargetLabels(grammar22, intArray32);
        java.lang.String[] strArray35 = python3Target13.getTokenTypesAsTargetLabels(grammar18, intArray32);
        java.lang.String[] strArray36 = python3Target1.getTokenTypesAsTargetLabels(grammar12, intArray32);
        java.lang.String str38 = python3Target1.getAltLabelContextStructName("\"Python3\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator39 = python3Target1.gen;
        org.antlr.v4.codegen.CodeGenerator codeGenerator40 = null;
        java.lang.String str43 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator40, "_#", true);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str45 = python3Target1.getElementListName("tset\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"ContextContextConte");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Hi!Context" + "'", str6, "Hi!Context");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\"\\\"hi!\\\"\"" + "'", str9, "\"\\\"hi!\\\"\"");
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertNull(sTGroup15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 64 + "'", int16 == 64);
        org.junit.Assert.assertNull(codeGenerator17);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "\"\"\"\"\"\"" + "'", str21, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "4.5.2.1" + "'", str25, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "\"\"" + "'", str29, "\"\"");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "4.5.2.1" + "'", str30, "4.5.2.1");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[]");
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "\"Python3\"Context" + "'", str38, "\"Python3\"Context");
        org.junit.Assert.assertNull(codeGenerator39);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "\"\"" + "'", str43, "\"\"");
    }

    @Test
    public void test3842() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3842");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!", "hi!" };
        python3Target0.targetCharValueEscape = strArray5;
        java.lang.String str8 = python3Target0.getTargetStringLiteralFromString("\"\"");
        java.lang.String str10 = python3Target0.getTargetStringLiteralFromString("\"\"");
        java.lang.String str11 = python3Target0.getLanguage();
        boolean boolean12 = python3Target0.wantsBaseVisitor();
        python3Target0.language = "_tset\"\"\\\"\\\"\"\"";
        boolean boolean15 = python3Target0.templatesExist();
        python3Target0.language = "__tset\"\"\\0\"\"Context";
        boolean boolean18 = python3Target0.templatesExist();
        java.lang.String str20 = python3Target0.getTargetStringLiteralFromString("\"\"\"\"\"\"\"\"\"\"\"\"\"\"");
        java.lang.String str21 = python3Target0.getLanguage();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\"\"\"\"" + "'", str8, "\"\"\"\"");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\"\"\"\"" + "'", str10, "\"\"\"\"");
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"" + "'", str20, "\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "__tset\"\"\\0\"\"Context" + "'", str21, "__tset\"\"\\0\"\"Context");
    }

    @Test
    public void test3843() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3843");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python3Target1.getBadWords();
        org.antlr.v4.codegen.target.Python3Target python3Target3 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str5 = python3Target3.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.codegen.target.Python3Target python3Target6 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean7 = python3Target6.supportsOverloadedMethods();
        java.util.Set<java.lang.String> strSet8 = python3Target6.badWords;
        python3Target3.badWords = strSet8;
        python3Target1.badWords = strSet8;
        java.util.Set<java.lang.String> strSet11 = python3Target1.badWords;
        java.lang.String str13 = python3Target1.getAltLabelContextStructName("d");
        java.lang.String str15 = python3Target1.getImplicitRuleLabel("\"tset\\\"64\"");
        java.lang.String str17 = python3Target1.getImplicitRuleLabel("\"__tset\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"ContextContextContext\"");
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "\"\"\"\"\"\"" + "'", str5, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertNotNull(strSet11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "DContext" + "'", str13, "DContext");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "_\"tset\\\"64\"" + "'", str15, "_\"tset\\\"64\"");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "_\"__tset\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"ContextContextContext\"" + "'", str17, "_\"__tset\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"ContextContextContext\"");
    }

    @Test
    public void test3844() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3844");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.lang.String str3 = python3Target1.getTargetStringLiteralFromString("");
        int int4 = python3Target1.getSerializedATNSegmentLimit();
        boolean boolean5 = python3Target1.wantsBaseVisitor();
        org.stringtemplate.v4.STGroup sTGroup6 = python3Target1.loadTemplates();
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = python3Target1.gen;
        org.antlr.v4.codegen.target.Python3Target python3Target8 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean9 = python3Target8.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup10 = python3Target8.templates;
        org.antlr.v4.tool.Grammar grammar11 = null;
        org.stringtemplate.v4.ST sT12 = null;
        python3Target8.genRecognizerHeaderFile(grammar11, sT12, "");
        python3Target8.language = "Python3";
        int int17 = python3Target8.getSerializedATNSegmentLimit();
        org.stringtemplate.v4.STGroup sTGroup18 = python3Target8.loadTemplates();
        python3Target1.templates = sTGroup18;
        java.lang.String str20 = python3Target1.getVersion();
        java.lang.String str22 = python3Target1.getAltLabelContextStructName("\"\\\"\\\"\\\\0\\\"\\\"\"");
        java.lang.String[] strArray23 = python3Target1.targetCharValueEscape;
        org.antlr.v4.tool.Rule rule24 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str25 = python3Target1.getRuleFunctionContextStructName(rule24);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "\"\"" + "'", str3, "\"\"");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 29 + "'", int4 == 29);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(sTGroup6);
        org.junit.Assert.assertNull(codeGenerator7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(sTGroup10);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 29 + "'", int17 == 29);
        org.junit.Assert.assertNotNull(sTGroup18);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "4.5.2.1" + "'", str20, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "\"\\\"\\\"\\\\0\\\"\\\"\"Context" + "'", str22, "\"\\\"\\\"\\\\0\\\"\\\"\"Context");
        org.junit.Assert.assertNotNull(strArray23);
    }

    @Test
    public void test3845() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3845");
        java.lang.String str1 = org.stringtemplate.v4.StringRenderer.escapeHTML("_tset_tset\"\"");
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "_tset_tset\"\"" + "'", str1, "_tset_tset\"\"");
    }

    @Test
    public void test3846() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3846");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        python3Target0.language = "";
        org.antlr.v4.codegen.target.Python3Target python3Target3 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean4 = python3Target3.supportsOverloadedMethods();
        java.lang.String str5 = python3Target3.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = null;
        java.lang.String str9 = python3Target3.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator6, "", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = null;
        python3Target3.gen = codeGenerator10;
        java.lang.String[] strArray19 = new java.lang.String[] { "\"\"\"\"", "\\12", "\"\"", "4.5.2.1", "", "\"\"\"\"", "\"\"" };
        java.util.LinkedHashSet<java.lang.String> strSet20 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet20, strArray19);
        python3Target3.badWords = strSet20;
        python3Target0.badWords = strSet20;
        java.lang.String str25 = python3Target0.encodeIntAsCharEscape((int) (byte) 100);
        java.lang.String str26 = python3Target0.getLanguage();
        java.lang.String str28 = python3Target0.getTargetStringLiteralFromString("\"\\0\"");
        java.lang.String[] strArray29 = python3Target0.targetCharValueEscape;
        java.util.Set<java.lang.String> strSet30 = python3Target0.getBadWords();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "4.5.2.1" + "'", str5, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\"\"" + "'", str9, "\"\"");
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "d" + "'", str25, "d");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "\"\"\\0\"\"" + "'", str28, "\"\"\\0\"\"");
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertNotNull(strSet30);
    }

    @Test
    public void test3847() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3847");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!", "hi!" };
        python3Target0.targetCharValueEscape = strArray5;
        java.lang.String[] strArray8 = new java.lang.String[] { "hi!" };
        org.antlr.v4.codegen.target.Python3Target.python3Keywords = strArray8;
        python3Target0.targetCharValueEscape = strArray8;
        java.util.Set<java.lang.String> strSet11 = python3Target0.getBadWords();
        boolean boolean12 = python3Target0.wantsBaseListener();
        org.antlr.v4.tool.ast.GrammarAST grammarAST13 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean14 = python3Target0.grammarSymbolCausesIssueInGeneratedCode(grammarAST13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(strSet11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test3848() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3848");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        java.lang.String str2 = python3Target0.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = null;
        java.lang.String str6 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator3, "", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = null;
        python3Target0.gen = codeGenerator7;
        java.lang.String[] strArray16 = new java.lang.String[] { "\"\"\"\"", "\\12", "\"\"", "4.5.2.1", "", "\"\"\"\"", "\"\"" };
        java.util.LinkedHashSet<java.lang.String> strSet17 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet17, strArray16);
        python3Target0.badWords = strSet17;
        boolean boolean20 = python3Target0.templatesExist();
        org.antlr.v4.codegen.CodeGenerator codeGenerator21 = null;
        python3Target0.gen = codeGenerator21;
        java.util.Set<java.lang.String> strSet23 = python3Target0.getBadWords();
        java.lang.String str26 = python3Target0.getTargetStringLiteralFromString("\"_\"\\1\"\"", true);
        java.util.Set<java.lang.String> strSet27 = null;
        python3Target0.badWords = strSet27;
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "4.5.2.1" + "'", str2, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\"\"" + "'", str6, "\"\"");
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(strSet23);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "\"\"_\"\\1\"\"\"" + "'", str26, "\"\"_\"\\1\"\"\"");
    }

    @Test
    public void test3849() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3849");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        org.antlr.v4.tool.Grammar grammar3 = null;
        org.stringtemplate.v4.ST sT4 = null;
        python3Target0.genRecognizerHeaderFile(grammar3, sT4, "");
        python3Target0.language = "Python3";
        java.util.Set<java.lang.String> strSet9 = null;
        python3Target0.badWords = strSet9;
        boolean boolean11 = python3Target0.wantsBaseVisitor();
        java.lang.String str12 = python3Target0.getVersion();
        boolean boolean13 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup14 = python3Target0.getTemplates();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "4.5.2.1" + "'", str12, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(sTGroup14);
    }

    @Test
    public void test3850() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3850");
        org.antlr.v4.codegen.target.Python3Target.PythonStringRenderer pythonStringRenderer0 = new org.antlr.v4.codegen.target.Python3Target.PythonStringRenderer();
        java.lang.Object obj1 = null;
        java.util.Locale locale3 = null;
        java.lang.String str4 = pythonStringRenderer0.toString(obj1, "\"\"\"\"\"\"", locale3);
        org.antlr.v4.codegen.CodeGenerator codeGenerator5 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target6 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator5);
        java.lang.String str8 = python3Target6.getTargetStringLiteralFromString("");
        python3Target6.language = "";
        java.util.Locale locale12 = null;
        java.lang.String str13 = pythonStringRenderer0.toString((java.lang.Object) "", "\"\\\"hi!\\\"\"", locale12);
        org.antlr.v4.codegen.target.Python3Target python3Target14 = new org.antlr.v4.codegen.target.Python3Target();
        python3Target14.language = "4.5.2.1";
        org.antlr.v4.codegen.CodeGenerator codeGenerator17 = python3Target14.getCodeGenerator();
        org.antlr.v4.codegen.CodeGenerator codeGenerator18 = python3Target14.gen;
        java.lang.String str19 = python3Target14.getLanguage();
        python3Target14.addBadWords();
        java.lang.String str22 = python3Target14.encodeIntAsCharEscape(10);
        org.antlr.v4.codegen.CodeGenerator codeGenerator23 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target24 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator23);
        java.util.Set<java.lang.String> strSet25 = python3Target24.getBadWords();
        java.lang.String str27 = python3Target24.getAltLabelContextStructName("d");
        org.stringtemplate.v4.STGroup sTGroup28 = python3Target24.getTemplates();
        python3Target14.templates = sTGroup28;
        java.lang.String str31 = python3Target14.encodeIntAsCharEscape((int) (short) 1);
        java.lang.String str33 = python3Target14.getImplicitSetLabel("\"\\\\0\"");
        java.util.Locale locale35 = null;
        java.lang.String str36 = pythonStringRenderer0.toString((java.lang.Object) str33, "\\0", locale35);
        org.antlr.v4.codegen.target.Python3Target python3Target37 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean38 = python3Target37.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup39 = python3Target37.templates;
        java.lang.String[] strArray42 = new java.lang.String[] { "hi!", "hi!" };
        python3Target37.targetCharValueEscape = strArray42;
        org.antlr.v4.codegen.CodeGenerator codeGenerator44 = null;
        java.lang.String str47 = python3Target37.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator44, "", false);
        java.util.Set<java.lang.String> strSet48 = python3Target37.badWords;
        python3Target37.addBadWords();
        boolean boolean50 = python3Target37.supportsOverloadedMethods();
        java.lang.String str51 = python3Target37.language;
        org.antlr.v4.tool.Grammar grammar52 = null;
        org.stringtemplate.v4.ST sT53 = null;
        python3Target37.genRecognizerHeaderFile(grammar52, sT53, "_\\12");
        java.util.Locale locale57 = null;
        java.lang.String str58 = pythonStringRenderer0.toString((java.lang.Object) grammar52, "_tset\".5.2.\"", locale57);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "\"\"\"\"\"\"" + "'", str4, "\"\"\"\"\"\"");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\"\"" + "'", str8, "\"\"");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "\"\\\"hi!\\\"\"" + "'", str13, "\"\\\"hi!\\\"\"");
        org.junit.Assert.assertNull(codeGenerator17);
        org.junit.Assert.assertNull(codeGenerator18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "4.5.2.1" + "'", str19, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "\\12" + "'", str22, "\\12");
        org.junit.Assert.assertNotNull(strSet25);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "DContext" + "'", str27, "DContext");
        org.junit.Assert.assertNotNull(sTGroup28);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "\\1" + "'", str31, "\\1");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "_tset\"\\\\0\"" + "'", str33, "_tset\"\\\\0\"");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "\\0" + "'", str36, "\\0");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNull(sTGroup39);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "" + "'", str47, "");
        org.junit.Assert.assertNotNull(strSet48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "_tset\".5.2.\"" + "'", str58, "_tset\".5.2.\"");
    }

    @Test
    public void test3851() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3851");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        org.antlr.v4.tool.Grammar grammar3 = null;
        org.stringtemplate.v4.ST sT4 = null;
        python3Target0.genRecognizerHeaderFile(grammar3, sT4, "");
        python3Target0.language = "Python3";
        java.util.Set<java.lang.String> strSet9 = null;
        python3Target0.badWords = strSet9;
        boolean boolean11 = python3Target0.wantsBaseVisitor();
        java.lang.String str13 = python3Target0.getImplicitSetLabel("Python3");
        int int14 = python3Target0.getInlineTestSetWordSize();
        org.antlr.v4.codegen.target.Python3Target python3Target15 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray16 = python3Target15.targetCharValueEscape;
        java.util.Set<java.lang.String> strSet17 = python3Target15.badWords;
        python3Target0.badWords = strSet17;
        java.lang.String str19 = python3Target0.language;
        org.antlr.v4.codegen.target.Python3Target python3Target20 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean21 = python3Target20.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup22 = python3Target20.templates;
        java.lang.String[] strArray25 = new java.lang.String[] { "hi!", "hi!" };
        python3Target20.targetCharValueEscape = strArray25;
        java.lang.String[] strArray28 = new java.lang.String[] { "hi!" };
        org.antlr.v4.codegen.target.Python3Target.python3Keywords = strArray28;
        python3Target20.targetCharValueEscape = strArray28;
        org.antlr.v4.codegen.target.Python3Target.python3Keywords = strArray28;
        python3Target0.targetCharValueEscape = strArray28;
        java.util.Set<java.lang.String> strSet33 = python3Target0.getBadWords();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "_tsetPython3" + "'", str13, "_tsetPython3");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 64 + "'", int14 == 64);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertNotNull(strSet17);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Python3" + "'", str19, "Python3");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(sTGroup22);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertNotNull(strSet33);
    }

    @Test
    public void test3852() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3852");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray1 = python3Target0.targetCharValueEscape;
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = null;
        java.lang.String str6 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator3, "\"\\12\"", false);
        int int7 = python3Target0.getSerializedATNSegmentLimit();
        boolean boolean8 = python3Target0.templatesExist();
        org.antlr.v4.codegen.target.Python3Target python3Target9 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean10 = python3Target9.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup11 = python3Target9.templates;
        java.lang.String[] strArray14 = new java.lang.String[] { "hi!", "hi!" };
        python3Target9.targetCharValueEscape = strArray14;
        java.lang.String str17 = python3Target9.getTargetStringLiteralFromString("\"\"");
        java.lang.String str18 = python3Target9.getLanguage();
        java.util.Set<java.lang.String> strSet19 = python3Target9.getBadWords();
        org.antlr.v4.codegen.target.Python3Target python3Target20 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean21 = python3Target20.supportsOverloadedMethods();
        java.lang.String str22 = python3Target20.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator23 = null;
        java.lang.String str26 = python3Target20.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator23, "", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator27 = null;
        python3Target20.gen = codeGenerator27;
        java.lang.String[] strArray36 = new java.lang.String[] { "\"\"\"\"", "\\12", "\"\"", "4.5.2.1", "", "\"\"\"\"", "\"\"" };
        java.util.LinkedHashSet<java.lang.String> strSet37 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet37, strArray36);
        python3Target20.badWords = strSet37;
        boolean boolean40 = python3Target20.templatesExist();
        org.antlr.v4.codegen.CodeGenerator codeGenerator41 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target42 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator41);
        java.lang.String str44 = python3Target42.getTargetStringLiteralFromString("");
        int int45 = python3Target42.getSerializedATNSegmentLimit();
        boolean boolean46 = python3Target42.wantsBaseVisitor();
        org.stringtemplate.v4.STGroup sTGroup47 = python3Target42.loadTemplates();
        python3Target20.templates = sTGroup47;
        python3Target9.templates = sTGroup47;
        python3Target0.templates = sTGroup47;
        boolean boolean51 = python3Target0.wantsBaseListener();
        java.util.Set<java.lang.String> strSet52 = python3Target0.getBadWords();
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "12" + "'", str6, "12");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 29 + "'", int7 == 29);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(sTGroup11);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "\"\"\"\"" + "'", str17, "\"\"\"\"");
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(strSet19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "4.5.2.1" + "'", str22, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "\"\"" + "'", str26, "\"\"");
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "\"\"" + "'", str44, "\"\"");
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 29 + "'", int45 == 29);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(sTGroup47);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(strSet52);
    }

    @Test
    public void test3853() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3853");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.lang.String str3 = python3Target1.getTargetStringLiteralFromString("");
        int int4 = python3Target1.getSerializedATNSegmentLimit();
        boolean boolean5 = python3Target1.wantsBaseVisitor();
        org.stringtemplate.v4.STGroup sTGroup6 = python3Target1.loadTemplates();
        java.lang.String str7 = python3Target1.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup8 = python3Target1.loadTemplates();
        java.util.Set<java.lang.String> strSet9 = python3Target1.badWords;
        org.stringtemplate.v4.STGroup sTGroup10 = python3Target1.templates;
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "\"\"" + "'", str3, "\"\"");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 29 + "'", int4 == 29);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(sTGroup6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Python3" + "'", str7, "Python3");
        org.junit.Assert.assertNotNull(sTGroup8);
        org.junit.Assert.assertNotNull(strSet9);
        org.junit.Assert.assertNull(sTGroup10);
    }

    @Test
    public void test3854() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3854");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python3Target1.getBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = null;
        python3Target1.gen = codeGenerator3;
        org.antlr.v4.codegen.CodeGenerator codeGenerator5 = null;
        java.lang.String str8 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator5, "\"12\"", true);
        java.lang.String str9 = python3Target1.language;
        boolean boolean10 = python3Target1.templatesExist();
        org.stringtemplate.v4.STGroup sTGroup11 = python3Target1.loadTemplates();
        java.lang.String str12 = python3Target1.getVersion();
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\"12\"" + "'", str8, "\"12\"");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Python3" + "'", str9, "Python3");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(sTGroup11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "4.5.2.1" + "'", str12, "4.5.2.1");
    }

    @Test
    public void test3855() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3855");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        java.lang.String str2 = python3Target0.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = python3Target0.getCodeGenerator();
        org.stringtemplate.v4.STGroup sTGroup4 = null;
        python3Target0.templates = sTGroup4;
        org.stringtemplate.v4.STGroup sTGroup6 = python3Target0.templates;
        java.lang.String[] strArray7 = python3Target0.targetCharValueEscape;
        java.util.Set<java.lang.String> strSet8 = python3Target0.badWords;
        java.util.Set<java.lang.String> strSet9 = python3Target0.getBadWords();
        python3Target0.addBadWords();
        org.stringtemplate.v4.STGroup sTGroup11 = python3Target0.templates;
        org.antlr.v4.codegen.CodeGenerator codeGenerator12 = null;
        python3Target0.gen = codeGenerator12;
        java.lang.String str14 = python3Target0.getVersion();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str16 = python3Target0.getElementListName("\"_\\\"\\\\\\\"Python3\\\\\\\"\\\"\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "4.5.2.1" + "'", str2, "4.5.2.1");
        org.junit.Assert.assertNull(codeGenerator3);
        org.junit.Assert.assertNull(sTGroup6);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertNotNull(strSet9);
        org.junit.Assert.assertNull(sTGroup11);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "4.5.2.1" + "'", str14, "4.5.2.1");
    }

    @Test
    public void test3856() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3856");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python3Target1.getBadWords();
        org.antlr.v4.codegen.target.Python3Target python3Target3 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str5 = python3Target3.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.codegen.target.Python3Target python3Target6 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean7 = python3Target6.supportsOverloadedMethods();
        java.util.Set<java.lang.String> strSet8 = python3Target6.badWords;
        python3Target3.badWords = strSet8;
        python3Target1.badWords = strSet8;
        java.util.Set<java.lang.String> strSet11 = python3Target1.badWords;
        org.antlr.v4.codegen.CodeGenerator codeGenerator12 = python3Target1.getCodeGenerator();
        java.lang.String str14 = python3Target1.getTargetStringLiteralFromString("@");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str16 = python3Target1.getImplicitTokenLabel("");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "\"\"\"\"\"\"" + "'", str5, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertNotNull(strSet11);
        org.junit.Assert.assertNull(codeGenerator12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "\"@\"" + "'", str14, "\"@\"");
    }

    @Test
    public void test3857() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3857");
        org.antlr.v4.codegen.target.Python3Target.PythonStringRenderer pythonStringRenderer0 = new org.antlr.v4.codegen.target.Python3Target.PythonStringRenderer();
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean2 = python3Target1.supportsOverloadedMethods();
        java.lang.String str3 = python3Target1.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator4 = python3Target1.getCodeGenerator();
        org.stringtemplate.v4.STGroup sTGroup5 = null;
        python3Target1.templates = sTGroup5;
        org.stringtemplate.v4.STGroup sTGroup7 = python3Target1.templates;
        java.util.Locale locale9 = null;
        java.lang.String str10 = pythonStringRenderer0.toString((java.lang.Object) sTGroup7, "Hi!Context", locale9);
        org.antlr.v4.codegen.target.Python3Target python3Target11 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean12 = python3Target11.supportsOverloadedMethods();
        java.lang.String str13 = python3Target11.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator14 = null;
        java.lang.String str17 = python3Target11.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator14, "", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator18 = null;
        python3Target11.gen = codeGenerator18;
        int int20 = python3Target11.getSerializedATNSegmentLimit();
        java.lang.String str22 = python3Target11.getTargetStringLiteralFromString("\\1");
        java.lang.String str23 = python3Target11.language;
        org.antlr.v4.tool.Grammar grammar24 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator25 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target26 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator25);
        java.util.Set<java.lang.String> strSet27 = python3Target26.getBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator28 = null;
        python3Target26.gen = codeGenerator28;
        java.lang.String str31 = python3Target26.getAltLabelContextStructName("hi!");
        org.antlr.v4.tool.Grammar grammar32 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target33 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean34 = python3Target33.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup35 = python3Target33.templates;
        java.lang.String[] strArray38 = new java.lang.String[] { "hi!", "hi!" };
        python3Target33.targetCharValueEscape = strArray38;
        java.lang.String[] strArray41 = new java.lang.String[] { "hi!" };
        org.antlr.v4.codegen.target.Python3Target.python3Keywords = strArray41;
        python3Target33.targetCharValueEscape = strArray41;
        org.antlr.v4.tool.Grammar grammar44 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target45 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str47 = python3Target45.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator48 = null;
        python3Target45.gen = codeGenerator48;
        org.antlr.v4.tool.Grammar grammar50 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target51 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str53 = python3Target51.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.tool.Grammar grammar54 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target55 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean56 = python3Target55.supportsOverloadedMethods();
        java.lang.String str57 = python3Target55.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator58 = null;
        java.lang.String str61 = python3Target55.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator58, "", true);
        java.lang.String str62 = python3Target55.getVersion();
        org.antlr.v4.tool.Grammar grammar63 = null;
        int[] intArray64 = new int[] {};
        java.lang.String[] strArray65 = python3Target55.getTokenTypesAsTargetLabels(grammar63, intArray64);
        java.lang.String[] strArray66 = python3Target51.getTokenTypesAsTargetLabels(grammar54, intArray64);
        java.lang.String[] strArray67 = python3Target45.getTokenTypesAsTargetLabels(grammar50, intArray64);
        java.lang.String[] strArray68 = python3Target33.getTokenTypesAsTargetLabels(grammar44, intArray64);
        java.lang.String[] strArray69 = python3Target26.getTokenTypesAsTargetLabels(grammar32, intArray64);
        java.lang.String[] strArray70 = python3Target11.getTokenTypesAsTargetLabels(grammar24, intArray64);
        java.util.Locale locale72 = null;
        java.lang.String str73 = pythonStringRenderer0.toString((java.lang.Object) grammar24, "\"\"", locale72);
        org.antlr.v4.codegen.target.Python3Target python3Target74 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean75 = python3Target74.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup76 = python3Target74.templates;
        java.lang.String[] strArray79 = new java.lang.String[] { "hi!", "hi!" };
        python3Target74.targetCharValueEscape = strArray79;
        java.lang.String str82 = python3Target74.getTargetStringLiteralFromString("\"\"");
        org.stringtemplate.v4.STGroup sTGroup83 = null;
        python3Target74.templates = sTGroup83;
        java.lang.String[] strArray85 = python3Target74.targetCharValueEscape;
        int int86 = python3Target74.getInlineTestSetWordSize();
        java.lang.String[] strArray87 = new java.lang.String[] {};
        python3Target74.targetCharValueEscape = strArray87;
        java.util.Locale locale90 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str91 = pythonStringRenderer0.toString((java.lang.Object) python3Target74, "_tset_tset\\64", locale90);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: org.antlr.v4.codegen.target.Python3Target cannot be cast to java.lang.String");
        } catch (java.lang.ClassCastException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "4.5.2.1" + "'", str3, "4.5.2.1");
        org.junit.Assert.assertNull(codeGenerator4);
        org.junit.Assert.assertNull(sTGroup7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Hi!Context" + "'", str10, "Hi!Context");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "4.5.2.1" + "'", str13, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "\"\"" + "'", str17, "\"\"");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 29 + "'", int20 == 29);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "\"\\1\"" + "'", str22, "\"\\1\"");
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNotNull(strSet27);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "Hi!Context" + "'", str31, "Hi!Context");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNull(sTGroup35);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "\"\"\"\"\"\"" + "'", str47, "\"\"\"\"\"\"");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "\"\"\"\"\"\"" + "'", str53, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "4.5.2.1" + "'", str57, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "\"\"" + "'", str61, "\"\"");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "4.5.2.1" + "'", str62, "4.5.2.1");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[]");
        org.junit.Assert.assertNotNull(strArray65);
        org.junit.Assert.assertNotNull(strArray66);
        org.junit.Assert.assertNotNull(strArray67);
        org.junit.Assert.assertNotNull(strArray68);
        org.junit.Assert.assertNotNull(strArray69);
        org.junit.Assert.assertNotNull(strArray70);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "\"\"" + "'", str73, "\"\"");
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNull(sTGroup76);
        org.junit.Assert.assertNotNull(strArray79);
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "\"\"\"\"" + "'", str82, "\"\"\"\"");
        org.junit.Assert.assertNotNull(strArray85);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + 64 + "'", int86 == 64);
        org.junit.Assert.assertNotNull(strArray87);
    }

    @Test
    public void test3858() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3858");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.lang.String str3 = python3Target1.getTargetStringLiteralFromString("");
        int int4 = python3Target1.getSerializedATNSegmentLimit();
        boolean boolean5 = python3Target1.wantsBaseVisitor();
        org.stringtemplate.v4.STGroup sTGroup6 = python3Target1.loadTemplates();
        java.lang.String str7 = python3Target1.getLanguage();
        java.lang.String str9 = python3Target1.getTargetStringLiteralFromString("\"\"\\0\"\"");
        org.stringtemplate.v4.STGroup sTGroup10 = python3Target1.loadTemplates();
        boolean boolean11 = python3Target1.wantsBaseVisitor();
        org.antlr.v4.codegen.CodeGenerator codeGenerator12 = null;
        java.lang.String str15 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator12, "\"\"DContext\"\"Context", true);
        org.antlr.v4.codegen.target.Python3Target python3Target16 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean17 = python3Target16.supportsOverloadedMethods();
        java.lang.String str18 = python3Target16.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator19 = null;
        java.lang.String str22 = python3Target16.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator19, "", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator23 = null;
        python3Target16.gen = codeGenerator23;
        int int25 = python3Target16.getSerializedATNSegmentLimit();
        org.antlr.v4.tool.Grammar grammar26 = null;
        org.stringtemplate.v4.ST sT27 = null;
        python3Target16.genRecognizerHeaderFile(grammar26, sT27, "_tset12");
        org.stringtemplate.v4.STGroup sTGroup30 = python3Target16.templates;
        org.stringtemplate.v4.STGroup sTGroup31 = python3Target16.templates;
        python3Target16.language = "\\nContext";
        java.lang.String[] strArray34 = python3Target16.targetCharValueEscape;
        python3Target1.targetCharValueEscape = strArray34;
        python3Target1.language = "\\\"\\\"\\\"\\\"\\\"\\\"\\\"ContextContextContex";
        org.antlr.v4.codegen.CodeGenerator codeGenerator38 = null;
        python3Target1.gen = codeGenerator38;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str41 = python3Target1.getImplicitRuleLabel("_\\\"\\\"4.5.2.1\\\"\\\"Context");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "\"\"" + "'", str3, "\"\"");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 29 + "'", int4 == 29);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(sTGroup6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Python3" + "'", str7, "Python3");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\"\\\"\\\"\\\\0\\\"\\\"\"" + "'", str9, "\"\\\"\\\"\\\\0\\\"\\\"\"");
        org.junit.Assert.assertNotNull(sTGroup10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "\"\\\"DContext\\\"\\\"Contex\"" + "'", str15, "\"\\\"DContext\\\"\\\"Contex\"");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "4.5.2.1" + "'", str18, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "\"\"" + "'", str22, "\"\"");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 29 + "'", int25 == 29);
        org.junit.Assert.assertNull(sTGroup30);
        org.junit.Assert.assertNull(sTGroup31);
        org.junit.Assert.assertNotNull(strArray34);
    }

    @Test
    public void test3859() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3859");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!", "hi!" };
        python3Target0.targetCharValueEscape = strArray5;
        java.lang.String str8 = python3Target0.getTargetStringLiteralFromString("\"\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator9 = python3Target0.gen;
        org.antlr.v4.codegen.target.Python3Target python3Target10 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean11 = python3Target10.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup12 = python3Target10.templates;
        java.lang.String str13 = python3Target10.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator14 = null;
        java.lang.String str17 = python3Target10.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator14, "\"\\\"hi!\\\"\"", true);
        java.util.Set<java.lang.String> strSet18 = python3Target10.badWords;
        python3Target0.badWords = strSet18;
        java.lang.String str21 = python3Target0.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator22 = null;
        java.lang.String str25 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator22, "\"1\"", true);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\"\"\"\"" + "'", str8, "\"\"\"\"");
        org.junit.Assert.assertNull(codeGenerator9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(sTGroup12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "4.5.2.1" + "'", str13, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "\"\\\"hi!\\\"\"" + "'", str17, "\"\\\"hi!\\\"\"");
        org.junit.Assert.assertNotNull(strSet18);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "\"\"\"\"\"\"" + "'", str21, "\"\"\"\"\"\"");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "\"1\"" + "'", str25, "\"1\"");
    }

    @Test
    public void test3860() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3860");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        python3Target0.language = "";
        org.antlr.v4.codegen.target.Python3Target python3Target3 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean4 = python3Target3.supportsOverloadedMethods();
        java.lang.String str5 = python3Target3.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = null;
        java.lang.String str9 = python3Target3.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator6, "", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = null;
        python3Target3.gen = codeGenerator10;
        java.lang.String[] strArray19 = new java.lang.String[] { "\"\"\"\"", "\\12", "\"\"", "4.5.2.1", "", "\"\"\"\"", "\"\"" };
        java.util.LinkedHashSet<java.lang.String> strSet20 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet20, strArray19);
        python3Target3.badWords = strSet20;
        python3Target0.badWords = strSet20;
        python3Target0.addBadWords();
        boolean boolean25 = python3Target0.supportsOverloadedMethods();
        python3Target0.language = "\"nContex\"";
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "4.5.2.1" + "'", str5, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\"\"" + "'", str9, "\"\"");
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
    }

    @Test
    public void test3861() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3861");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.lang.String str3 = python3Target1.getTargetStringLiteralFromString("");
        int int4 = python3Target1.getSerializedATNSegmentLimit();
        boolean boolean5 = python3Target1.wantsBaseVisitor();
        org.stringtemplate.v4.STGroup sTGroup6 = python3Target1.loadTemplates();
        java.lang.String str7 = python3Target1.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup8 = python3Target1.loadTemplates();
        org.stringtemplate.v4.STGroup sTGroup9 = python3Target1.loadTemplates();
        boolean boolean10 = python3Target1.templatesExist();
        java.lang.String str11 = python3Target1.getLanguage();
        java.lang.String str13 = python3Target1.getAltLabelContextStructName("\\\"hi!\\\"");
        java.lang.String str15 = python3Target1.getListLabel("\"__tset\"\"\"\"\"\"\"\"ContextContextContextContext\"");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "\"\"" + "'", str3, "\"\"");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 29 + "'", int4 == 29);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(sTGroup6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Python3" + "'", str7, "Python3");
        org.junit.Assert.assertNotNull(sTGroup8);
        org.junit.Assert.assertNotNull(sTGroup9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Python3" + "'", str11, "Python3");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "\\\"hi!\\\"Context" + "'", str13, "\\\"hi!\\\"Context");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "\"__tset\"\"\"\"\"\"\"\"ContextContextContextContext\"" + "'", str15, "\"__tset\"\"\"\"\"\"\"\"ContextContextContextContext\"");
    }

    @Test
    public void test3862() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3862");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray1 = python3Target0.targetCharValueEscape;
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = null;
        java.lang.String str6 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator3, "\"\\12\"", false);
        int int7 = python3Target0.getInlineTestSetWordSize();
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = python3Target0.getCodeGenerator();
        boolean boolean9 = python3Target0.wantsBaseListener();
        java.lang.String str10 = python3Target0.getVersion();
        org.antlr.v4.tool.Grammar grammar11 = null;
        org.stringtemplate.v4.ST sT12 = null;
        python3Target0.genRecognizerHeaderFile(grammar11, sT12, "\"\"\"\"\"\"\"\"\"\"\"\"\"\"");
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "12" + "'", str6, "12");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 64 + "'", int7 == 64);
        org.junit.Assert.assertNull(codeGenerator8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "4.5.2.1" + "'", str10, "4.5.2.1");
    }

    @Test
    public void test3863() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3863");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python3Target1.getBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = null;
        python3Target1.gen = codeGenerator3;
        java.lang.String str6 = python3Target1.getAltLabelContextStructName("hi!");
        java.lang.String str9 = python3Target1.getTargetStringLiteralFromString("\"hi!\"", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = null;
        python3Target1.gen = codeGenerator10;
        org.antlr.v4.tool.Grammar grammar12 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target13 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray14 = python3Target13.targetCharValueEscape;
        org.stringtemplate.v4.STGroup sTGroup15 = python3Target13.templates;
        int int16 = python3Target13.getInlineTestSetWordSize();
        org.antlr.v4.codegen.CodeGenerator codeGenerator17 = python3Target13.gen;
        org.antlr.v4.tool.Grammar grammar18 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target19 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str21 = python3Target19.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.tool.Grammar grammar22 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target23 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean24 = python3Target23.supportsOverloadedMethods();
        java.lang.String str25 = python3Target23.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator26 = null;
        java.lang.String str29 = python3Target23.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator26, "", true);
        java.lang.String str30 = python3Target23.getVersion();
        org.antlr.v4.tool.Grammar grammar31 = null;
        int[] intArray32 = new int[] {};
        java.lang.String[] strArray33 = python3Target23.getTokenTypesAsTargetLabels(grammar31, intArray32);
        java.lang.String[] strArray34 = python3Target19.getTokenTypesAsTargetLabels(grammar22, intArray32);
        java.lang.String[] strArray35 = python3Target13.getTokenTypesAsTargetLabels(grammar18, intArray32);
        java.lang.String[] strArray36 = python3Target1.getTokenTypesAsTargetLabels(grammar12, intArray32);
        java.lang.String str38 = python3Target1.getAltLabelContextStructName("\"Python3\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator39 = python3Target1.gen;
        org.stringtemplate.v4.STGroup sTGroup40 = python3Target1.templates;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str42 = python3Target1.getImplicitTokenLabel("\"__tset\"\"\"\"\"\"\"\"ContextContextContextContext\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Hi!Context" + "'", str6, "Hi!Context");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\"\\\"hi!\\\"\"" + "'", str9, "\"\\\"hi!\\\"\"");
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertNull(sTGroup15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 64 + "'", int16 == 64);
        org.junit.Assert.assertNull(codeGenerator17);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "\"\"\"\"\"\"" + "'", str21, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "4.5.2.1" + "'", str25, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "\"\"" + "'", str29, "\"\"");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "4.5.2.1" + "'", str30, "4.5.2.1");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[]");
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "\"Python3\"Context" + "'", str38, "\"Python3\"Context");
        org.junit.Assert.assertNull(codeGenerator39);
        org.junit.Assert.assertNotNull(sTGroup40);
    }

    @Test
    public void test3864() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3864");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        java.lang.String str2 = python3Target0.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = python3Target0.getCodeGenerator();
        org.stringtemplate.v4.STGroup sTGroup4 = null;
        python3Target0.templates = sTGroup4;
        org.stringtemplate.v4.STGroup sTGroup6 = python3Target0.templates;
        java.lang.String[] strArray7 = python3Target0.targetCharValueEscape;
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target9 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator8);
        java.util.Set<java.lang.String> strSet10 = python3Target9.getBadWords();
        java.lang.String str12 = python3Target9.getAltLabelContextStructName("d");
        org.stringtemplate.v4.STGroup sTGroup13 = python3Target9.templates;
        python3Target0.templates = sTGroup13;
        org.antlr.v4.codegen.CodeGenerator codeGenerator15 = python3Target0.gen;
        java.lang.String str16 = python3Target0.getLanguage();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "4.5.2.1" + "'", str2, "4.5.2.1");
        org.junit.Assert.assertNull(codeGenerator3);
        org.junit.Assert.assertNull(sTGroup6);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strSet10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "DContext" + "'", str12, "DContext");
        org.junit.Assert.assertNotNull(sTGroup13);
        org.junit.Assert.assertNull(codeGenerator15);
        org.junit.Assert.assertNull(str16);
    }

    @Test
    public void test3865() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3865");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.lang.String str3 = python3Target1.getTargetStringLiteralFromString("");
        int int4 = python3Target1.getSerializedATNSegmentLimit();
        int int5 = python3Target1.getInlineTestSetWordSize();
        org.antlr.v4.tool.Grammar grammar6 = null;
        org.stringtemplate.v4.ST sT7 = null;
        python3Target1.genRecognizerHeaderFile(grammar6, sT7, "@");
        boolean boolean10 = python3Target1.templatesExist();
        boolean boolean11 = python3Target1.templatesExist();
        java.lang.String str12 = python3Target1.language;
        java.lang.String str13 = python3Target1.getVersion();
        boolean boolean14 = python3Target1.wantsBaseVisitor();
        org.antlr.v4.tool.Grammar grammar15 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str17 = python3Target1.getTokenTypeAsTargetLabel(grammar15, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "\"\"" + "'", str3, "\"\"");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 29 + "'", int4 == 29);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 64 + "'", int5 == 64);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Python3" + "'", str12, "Python3");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "4.5.2.1" + "'", str13, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test3866() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3866");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        python3Target0.language = "4.5.2.1";
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = python3Target0.getCodeGenerator();
        org.antlr.v4.codegen.CodeGenerator codeGenerator4 = python3Target0.gen;
        java.lang.String str5 = python3Target0.getLanguage();
        python3Target0.addBadWords();
        java.lang.String str8 = python3Target0.encodeIntAsCharEscape(10);
        org.antlr.v4.codegen.CodeGenerator codeGenerator9 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target10 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator9);
        java.util.Set<java.lang.String> strSet11 = python3Target10.getBadWords();
        java.lang.String str13 = python3Target10.getAltLabelContextStructName("d");
        org.stringtemplate.v4.STGroup sTGroup14 = python3Target10.getTemplates();
        python3Target0.templates = sTGroup14;
        java.lang.String str17 = python3Target0.encodeIntAsCharEscape((int) (short) 1);
        org.antlr.v4.codegen.CodeGenerator codeGenerator18 = null;
        java.lang.String str21 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator18, "_12", false);
        org.antlr.v4.codegen.CodeGenerator codeGenerator22 = null;
        java.lang.String str25 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator22, "\"d\"Context", false);
        org.junit.Assert.assertNull(codeGenerator3);
        org.junit.Assert.assertNull(codeGenerator4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "4.5.2.1" + "'", str5, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\\12" + "'", str8, "\\12");
        org.junit.Assert.assertNotNull(strSet11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "DContext" + "'", str13, "DContext");
        org.junit.Assert.assertNotNull(sTGroup14);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "\\1" + "'", str17, "\\1");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "1" + "'", str21, "1");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "d\\\"Contex" + "'", str25, "d\\\"Contex");
    }

    @Test
    public void test3867() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3867");
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!", "", "hi!", "hi!", "hi!" };
        org.antlr.v4.codegen.target.Python3Target.python3Keywords = strArray5;
        java.lang.Class<?> wildcardClass7 = strArray5.getClass();
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test3868() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3868");
        java.lang.String[] strArray1 = new java.lang.String[] { "" };
        org.antlr.v4.codegen.target.Python3Target.python3Keywords = strArray1;
        org.antlr.v4.codegen.target.Python3Target.python3Keywords = strArray1;
        org.junit.Assert.assertNotNull(strArray1);
    }

    @Test
    public void test3869() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3869");
        java.lang.String[] strArray6 = new java.lang.String[] { "hi!", "hi!", "", "hi!", "", "hi!" };
        org.antlr.v4.codegen.target.Python3Target.python3Keywords = strArray6;
        java.lang.Class<?> wildcardClass8 = strArray6.getClass();
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertNotNull(wildcardClass8);
    }

    @Test
    public void test3870() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3870");
        java.lang.String[] strArray6 = new java.lang.String[] { "hi!", "hi!", "", "hi!", "", "hi!" };
        org.antlr.v4.codegen.target.Python3Target.python3Keywords = strArray6;
        org.antlr.v4.codegen.target.Python3Target.python3Keywords = strArray6;
        java.lang.Class<?> wildcardClass9 = strArray6.getClass();
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test3871() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3871");
        java.lang.String[] strArray5 = new java.lang.String[] { "", "hi!", "hi!", "hi!", "hi!" };
        org.antlr.v4.codegen.target.Python3Target.python3Keywords = strArray5;
        java.lang.Class<?> wildcardClass7 = strArray5.getClass();
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test3872() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3872");
        java.lang.String[] strArray6 = new java.lang.String[] { "hi!", "hi!", "", "hi!", "", "hi!" };
        org.antlr.v4.codegen.target.Python3Target.python3Keywords = strArray6;
        org.antlr.v4.codegen.target.Python3Target.python3Keywords = strArray6;
        org.antlr.v4.codegen.target.Python3Target.python3Keywords = strArray6;
        java.lang.Class<?> wildcardClass10 = strArray6.getClass();
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test3873() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3873");
        java.lang.String[] strArray6 = new java.lang.String[] { "hi!", "hi!", "", "hi!", "", "hi!" };
        org.antlr.v4.codegen.target.Python3Target.python3Keywords = strArray6;
        org.antlr.v4.codegen.target.Python3Target.python3Keywords = strArray6;
        org.antlr.v4.codegen.target.Python3Target.python3Keywords = strArray6;
        org.antlr.v4.codegen.target.Python3Target.python3Keywords = strArray6;
        java.lang.Class<?> wildcardClass11 = strArray6.getClass();
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test3874() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3874");
        java.lang.String[] strArray3 = new java.lang.String[] { "", "hi!", "hi!" };
        org.antlr.v4.codegen.target.Python3Target.python3Keywords = strArray3;
        org.antlr.v4.codegen.target.Python3Target.python3Keywords = strArray3;
        org.antlr.v4.codegen.target.Python3Target.python3Keywords = strArray3;
        org.antlr.v4.codegen.target.Python3Target.python3Keywords = strArray3;
        org.junit.Assert.assertNotNull(strArray3);
    }

    @Test
    public void test3875() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3875");
        java.lang.String[] strArray3 = new java.lang.String[] { "", "hi!", "hi!" };
        org.antlr.v4.codegen.target.Python3Target.python3Keywords = strArray3;
        org.antlr.v4.codegen.target.Python3Target.python3Keywords = strArray3;
        java.lang.Class<?> wildcardClass6 = strArray3.getClass();
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertNotNull(wildcardClass6);
    }

    @Test
    public void test3876() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3876");
        java.lang.String[] strArray5 = new java.lang.String[] { "", "hi!", "hi!", "hi!", "hi!" };
        org.antlr.v4.codegen.target.Python3Target.python3Keywords = strArray5;
        org.antlr.v4.codegen.target.Python3Target.python3Keywords = strArray5;
        org.antlr.v4.codegen.target.Python3Target.python3Keywords = strArray5;
        java.lang.Class<?> wildcardClass9 = strArray5.getClass();
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test3877() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3877");
        java.lang.String[] strArray5 = new java.lang.String[] { "", "hi!", "hi!", "hi!", "hi!" };
        org.antlr.v4.codegen.target.Python3Target.python3Keywords = strArray5;
        org.antlr.v4.codegen.target.Python3Target.python3Keywords = strArray5;
        org.antlr.v4.codegen.target.Python3Target.python3Keywords = strArray5;
        org.antlr.v4.codegen.target.Python3Target.python3Keywords = strArray5;
        org.junit.Assert.assertNotNull(strArray5);
    }

    @Test
    public void test3878() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3878");
        java.lang.String[] strArray5 = new java.lang.String[] { "", "hi!", "hi!", "hi!", "hi!" };
        org.antlr.v4.codegen.target.Python3Target.python3Keywords = strArray5;
        org.antlr.v4.codegen.target.Python3Target.python3Keywords = strArray5;
        java.lang.Class<?> wildcardClass8 = strArray5.getClass();
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(wildcardClass8);
    }

    @Test
    public void test3879() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3879");
        java.lang.String[] strArray3 = new java.lang.String[] { "", "hi!", "hi!" };
        org.antlr.v4.codegen.target.Python3Target.python3Keywords = strArray3;
        java.lang.Class<?> wildcardClass5 = strArray3.getClass();
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertNotNull(wildcardClass5);
    }
}

