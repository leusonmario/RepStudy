import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest3 {

    public static boolean debug = false;

    @Test
    public void test1501() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1501");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.lang.String str3 = python3Target1.getTargetStringLiteralFromString("");
        int int4 = python3Target1.getSerializedATNSegmentLimit();
        java.lang.String str5 = python3Target1.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup6 = python3Target1.loadTemplates();
        org.stringtemplate.v4.STGroup sTGroup7 = python3Target1.getTemplates();
        java.lang.String str9 = python3Target1.getListLabel("_#");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str11 = python3Target1.getElementName("d");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "\"\"" + "'", str3, "\"\"");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 29 + "'", int4 == 29);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Python3" + "'", str5, "Python3");
        org.junit.Assert.assertNotNull(sTGroup6);
        org.junit.Assert.assertNotNull(sTGroup7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "_#" + "'", str9, "_#");
    }

    @Test
    public void test1502() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1502");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.antlr.v4.codegen.CodeGenerator codeGenerator2 = null;
        python3Target0.gen = codeGenerator2;
        org.antlr.v4.codegen.CodeGenerator codeGenerator4 = null;
        java.lang.String str7 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator4, "", false);
        java.lang.String str10 = python3Target0.getTargetStringLiteralFromString("_tset\\\\12", false);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "_tset\\\\12" + "'", str10, "_tset\\\\12");
    }

    @Test
    public void test1503() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1503");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python3Target1.getBadWords();
        java.lang.String str4 = python3Target1.getAltLabelContextStructName("d");
        org.stringtemplate.v4.STGroup sTGroup5 = python3Target1.getTemplates();
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = null;
        java.lang.String str9 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator6, "", true);
        java.lang.String str11 = python3Target1.getImplicitSetLabel("\"\\0\"");
        java.lang.String str13 = python3Target1.getListLabel("\"Python3\"");
        org.stringtemplate.v4.STGroup sTGroup14 = null;
        python3Target1.templates = sTGroup14;
        java.lang.String str17 = python3Target1.getAltLabelContextStructName("\"\"\\1\"\"");
        org.stringtemplate.v4.STGroup sTGroup18 = python3Target1.getTemplates();
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "DContext" + "'", str4, "DContext");
        org.junit.Assert.assertNotNull(sTGroup5);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\"\"" + "'", str9, "\"\"");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "_tset\"\\0\"" + "'", str11, "_tset\"\\0\"");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "\"Python3\"" + "'", str13, "\"Python3\"");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "\"\"\\1\"\"Context" + "'", str17, "\"\"\\1\"\"Context");
        org.junit.Assert.assertNotNull(sTGroup18);
    }

    @Test
    public void test1504() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1504");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        java.util.Set<java.lang.String> strSet2 = python3Target0.badWords;
        boolean boolean3 = python3Target0.templatesExist();
        python3Target0.language = "_tset\"\\0\"";
        org.antlr.v4.codegen.target.Python3Target python3Target6 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean7 = python3Target6.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup8 = python3Target6.templates;
        org.antlr.v4.tool.Grammar grammar9 = null;
        org.stringtemplate.v4.ST sT10 = null;
        python3Target6.genRecognizerHeaderFile(grammar9, sT10, "");
        python3Target6.language = "Python3";
        int int15 = python3Target6.getSerializedATNSegmentLimit();
        java.lang.String str17 = python3Target6.getListLabel("_tsetPython3");
        org.stringtemplate.v4.STGroup sTGroup18 = python3Target6.loadTemplates();
        python3Target0.templates = sTGroup18;
        org.antlr.v4.tool.ast.GrammarAST grammarAST20 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean21 = python3Target0.visibleGrammarSymbolCausesIssueInGeneratedCode(grammarAST20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(sTGroup8);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 29 + "'", int15 == 29);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "_tsetPython3" + "'", str17, "_tsetPython3");
        org.junit.Assert.assertNotNull(sTGroup18);
    }

    @Test
    public void test1505() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1505");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        java.lang.String str2 = python3Target0.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = null;
        java.lang.String str6 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator3, "", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = null;
        python3Target0.gen = codeGenerator7;
        java.lang.String[] strArray16 = new java.lang.String[] { "\"\"\"\"", "\\12", "\"\"", "4.5.2.1", "", "\"\"\"\"", "\"\"" };
        java.util.LinkedHashSet<java.lang.String> strSet17 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet17, strArray16);
        python3Target0.badWords = strSet17;
        org.antlr.v4.tool.Grammar grammar20 = null;
        org.stringtemplate.v4.ST sT21 = null;
        python3Target0.genRecognizerHeaderFile(grammar20, sT21, "\"\"");
        java.lang.String str25 = python3Target0.encodeIntAsCharEscape((int) (byte) 10);
        java.lang.String str26 = python3Target0.language;
        java.util.Set<java.lang.String> strSet27 = python3Target0.getBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator28 = null;
        java.lang.String str31 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator28, "", false);
        java.util.Set<java.lang.String> strSet32 = python3Target0.badWords;
        boolean boolean33 = python3Target0.supportsOverloadedMethods();
        boolean boolean34 = python3Target0.supportsOverloadedMethods();
        java.lang.String str37 = python3Target0.getTargetStringLiteralFromString("_\"4.5.2.1\"", false);
        org.antlr.v4.codegen.CodeGenerator codeGenerator38 = python3Target0.getCodeGenerator();
        org.antlr.v4.codegen.CodeGenerator codeGenerator39 = null;
        java.lang.String str42 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator39, "", false);
        boolean boolean43 = python3Target0.wantsBaseVisitor();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "4.5.2.1" + "'", str2, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\"\"" + "'", str6, "\"\"");
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "\\12" + "'", str25, "\\12");
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(strSet27);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "" + "'", str31, "");
        org.junit.Assert.assertNotNull(strSet32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "_\"4.5.2.1\"" + "'", str37, "_\"4.5.2.1\"");
        org.junit.Assert.assertNull(codeGenerator38);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "" + "'", str42, "");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
    }

    @Test
    public void test1506() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1506");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python3Target1.getBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = null;
        python3Target1.gen = codeGenerator3;
        java.lang.String str6 = python3Target1.getAltLabelContextStructName("hi!");
        java.lang.String str9 = python3Target1.getTargetStringLiteralFromString("\"hi!\"", true);
        java.lang.String str11 = python3Target1.getAltLabelContextStructName("\"\"\"\"\"\"\"\"");
        org.antlr.v4.codegen.target.Python3Target python3Target12 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean13 = python3Target12.supportsOverloadedMethods();
        java.lang.String str14 = python3Target12.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator15 = null;
        java.lang.String str18 = python3Target12.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator15, "", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator19 = null;
        python3Target12.gen = codeGenerator19;
        int int21 = python3Target12.getSerializedATNSegmentLimit();
        org.antlr.v4.tool.Grammar grammar22 = null;
        org.stringtemplate.v4.ST sT23 = null;
        python3Target12.genRecognizerHeaderFile(grammar22, sT23, "_tset12");
        java.util.Set<java.lang.String> strSet26 = python3Target12.getBadWords();
        python3Target1.badWords = strSet26;
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Hi!Context" + "'", str6, "Hi!Context");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\"\\\"hi!\\\"\"" + "'", str9, "\"\\\"hi!\\\"\"");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "\"\"\"\"\"\"\"\"Context" + "'", str11, "\"\"\"\"\"\"\"\"Context");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "4.5.2.1" + "'", str14, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "\"\"" + "'", str18, "\"\"");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 29 + "'", int21 == 29);
        org.junit.Assert.assertNotNull(strSet26);
    }

    @Test
    public void test1507() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1507");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        org.antlr.v4.tool.Grammar grammar3 = null;
        org.stringtemplate.v4.ST sT4 = null;
        python3Target0.genRecognizerHeaderFile(grammar3, sT4, "");
        python3Target0.language = "Python3";
        int int9 = python3Target0.getSerializedATNSegmentLimit();
        java.lang.String str11 = python3Target0.getListLabel("_tsetPython3");
        org.stringtemplate.v4.STGroup sTGroup12 = python3Target0.loadTemplates();
        int int13 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str15 = python3Target0.getAltLabelContextStructName("\"_tset12\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator16 = python3Target0.getCodeGenerator();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str18 = python3Target0.getElementListName("\"\"\\1\"\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 29 + "'", int9 == 29);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "_tsetPython3" + "'", str11, "_tsetPython3");
        org.junit.Assert.assertNotNull(sTGroup12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 64 + "'", int13 == 64);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "\"_tset12\"Context" + "'", str15, "\"_tset12\"Context");
        org.junit.Assert.assertNull(codeGenerator16);
    }

    @Test
    public void test1508() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1508");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str2 = python3Target0.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = null;
        python3Target0.gen = codeGenerator3;
        org.antlr.v4.codegen.CodeGenerator codeGenerator5 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target6 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator5);
        java.util.Set<java.lang.String> strSet7 = python3Target6.getBadWords();
        python3Target0.badWords = strSet7;
        int int9 = python3Target0.getSerializedATNSegmentLimit();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str11 = python3Target0.getImplicitSetLabel("\"_\"\\1\"\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "\"\"\"\"\"\"" + "'", str2, "\"\"\"\"\"\"");
        org.junit.Assert.assertNotNull(strSet7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 29 + "'", int9 == 29);
    }

    @Test
    public void test1509() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1509");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray1 = python3Target0.targetCharValueEscape;
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        int int3 = python3Target0.getInlineTestSetWordSize();
        org.antlr.v4.codegen.CodeGenerator codeGenerator4 = python3Target0.gen;
        org.antlr.v4.tool.Grammar grammar5 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target6 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str8 = python3Target6.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.tool.Grammar grammar9 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target10 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean11 = python3Target10.supportsOverloadedMethods();
        java.lang.String str12 = python3Target10.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator13 = null;
        java.lang.String str16 = python3Target10.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator13, "", true);
        java.lang.String str17 = python3Target10.getVersion();
        org.antlr.v4.tool.Grammar grammar18 = null;
        int[] intArray19 = new int[] {};
        java.lang.String[] strArray20 = python3Target10.getTokenTypesAsTargetLabels(grammar18, intArray19);
        java.lang.String[] strArray21 = python3Target6.getTokenTypesAsTargetLabels(grammar9, intArray19);
        java.lang.String[] strArray22 = python3Target0.getTokenTypesAsTargetLabels(grammar5, intArray19);
        java.lang.String[] strArray23 = python3Target0.targetCharValueEscape;
        org.antlr.v4.codegen.CodeGenerator codeGenerator24 = python3Target0.getCodeGenerator();
        java.lang.String str27 = python3Target0.getTargetStringLiteralFromString("\"\"\\\"\\\"hi!\\\"\\\"\"\"", true);
        int int28 = python3Target0.getInlineTestSetWordSize();
        org.antlr.v4.tool.Grammar grammar29 = null;
        org.stringtemplate.v4.ST sT30 = null;
        // The following exception was thrown during execution in test generation
        try {
            python3Target0.genFile(grammar29, sT30, "#");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 64 + "'", int3 == 64);
        org.junit.Assert.assertNull(codeGenerator4);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\"\"\"\"\"\"" + "'", str8, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "4.5.2.1" + "'", str12, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "\"\"" + "'", str16, "\"\"");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "4.5.2.1" + "'", str17, "4.5.2.1");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[]");
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertNull(codeGenerator24);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "\"\"\"\\\"\\\"hi!\\\"\\\"\"\"\"" + "'", str27, "\"\"\"\\\"\\\"hi!\\\"\\\"\"\"\"");
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 64 + "'", int28 == 64);
    }

    @Test
    public void test1510() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1510");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!", "hi!" };
        python3Target0.targetCharValueEscape = strArray5;
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = null;
        java.lang.String str10 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator7, "", false);
        java.util.Set<java.lang.String> strSet11 = python3Target0.badWords;
        org.antlr.v4.codegen.CodeGenerator codeGenerator12 = null;
        java.lang.String str15 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator12, "@", false);
        org.antlr.v4.codegen.target.Python3Target python3Target16 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean17 = python3Target16.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup18 = python3Target16.templates;
        java.lang.String[] strArray21 = new java.lang.String[] { "hi!", "hi!" };
        python3Target16.targetCharValueEscape = strArray21;
        java.lang.String str24 = python3Target16.getTargetStringLiteralFromString("\"\"");
        org.stringtemplate.v4.STGroup sTGroup25 = null;
        python3Target16.templates = sTGroup25;
        java.lang.String[] strArray27 = python3Target16.targetCharValueEscape;
        python3Target0.targetCharValueEscape = strArray27;
        org.antlr.v4.codegen.target.Python3Target python3Target29 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean30 = python3Target29.supportsOverloadedMethods();
        java.lang.String str31 = python3Target29.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator32 = null;
        java.lang.String str35 = python3Target29.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator32, "", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator36 = null;
        python3Target29.gen = codeGenerator36;
        java.lang.String[] strArray45 = new java.lang.String[] { "\"\"\"\"", "\\12", "\"\"", "4.5.2.1", "", "\"\"\"\"", "\"\"" };
        java.util.LinkedHashSet<java.lang.String> strSet46 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet46, strArray45);
        python3Target29.badWords = strSet46;
        org.antlr.v4.codegen.CodeGenerator codeGenerator49 = python3Target29.gen;
        java.lang.String str52 = python3Target29.getTargetStringLiteralFromString("\\12", true);
        boolean boolean53 = python3Target29.wantsBaseListener();
        org.antlr.v4.codegen.CodeGenerator codeGenerator54 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target55 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator54);
        java.util.Set<java.lang.String> strSet56 = python3Target55.getBadWords();
        java.lang.String str58 = python3Target55.getAltLabelContextStructName("d");
        org.stringtemplate.v4.STGroup sTGroup59 = python3Target55.getTemplates();
        org.antlr.v4.codegen.CodeGenerator codeGenerator60 = null;
        java.lang.String str63 = python3Target55.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator60, "", true);
        java.lang.String str65 = python3Target55.getImplicitSetLabel("\"\\0\"");
        java.lang.String str67 = python3Target55.getListLabel("\"Python3\"");
        java.lang.String str69 = python3Target55.getListLabel("\"\\\"hi!\\\"\"");
        java.util.Set<java.lang.String> strSet70 = python3Target55.getBadWords();
        python3Target29.badWords = strSet70;
        python3Target0.badWords = strSet70;
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNotNull(strSet11);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNull(sTGroup18);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "\"\"\"\"" + "'", str24, "\"\"\"\"");
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "4.5.2.1" + "'", str31, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "\"\"" + "'", str35, "\"\"");
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNull(codeGenerator49);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "\"\\12\"" + "'", str52, "\"\\12\"");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(strSet56);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "DContext" + "'", str58, "DContext");
        org.junit.Assert.assertNotNull(sTGroup59);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "\"\"" + "'", str63, "\"\"");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "_tset\"\\0\"" + "'", str65, "_tset\"\\0\"");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "\"Python3\"" + "'", str67, "\"Python3\"");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "\"\\\"hi!\\\"\"" + "'", str69, "\"\\\"hi!\\\"\"");
        org.junit.Assert.assertNotNull(strSet70);
    }

    @Test
    public void test1511() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1511");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray1 = python3Target0.targetCharValueEscape;
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = null;
        java.lang.String str6 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator3, "\"\\12\"", false);
        int int7 = python3Target0.getSerializedATNSegmentLimit();
        boolean boolean8 = python3Target0.templatesExist();
        boolean boolean9 = python3Target0.supportsOverloadedMethods();
        org.antlr.v4.tool.Grammar grammar10 = null;
        org.stringtemplate.v4.ST sT11 = null;
        python3Target0.genRecognizerHeaderFile(grammar10, sT11, "_tsetPython3");
        org.antlr.v4.codegen.model.RuleFunction ruleFunction14 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str15 = python3Target0.getRuleFunctionContextStructName(ruleFunction14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "12" + "'", str6, "12");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 29 + "'", int7 == 29);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test1512() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1512");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python3Target1.getBadWords();
        org.antlr.v4.codegen.target.Python3Target python3Target3 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str5 = python3Target3.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.codegen.target.Python3Target python3Target6 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean7 = python3Target6.supportsOverloadedMethods();
        java.util.Set<java.lang.String> strSet8 = python3Target6.badWords;
        python3Target3.badWords = strSet8;
        python3Target1.badWords = strSet8;
        java.util.Set<java.lang.String> strSet11 = python3Target1.badWords;
        org.antlr.v4.codegen.CodeGenerator codeGenerator12 = python3Target1.getCodeGenerator();
        org.antlr.v4.tool.Grammar grammar13 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target14 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean15 = python3Target14.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup16 = python3Target14.templates;
        org.antlr.v4.tool.Grammar grammar17 = null;
        org.stringtemplate.v4.ST sT18 = null;
        python3Target14.genRecognizerHeaderFile(grammar17, sT18, "");
        python3Target14.language = "Python3";
        java.util.Set<java.lang.String> strSet23 = null;
        python3Target14.badWords = strSet23;
        org.antlr.v4.codegen.CodeGenerator codeGenerator25 = null;
        java.lang.String str28 = python3Target14.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator25, "\"Hi!Context\"", false);
        java.lang.String str30 = python3Target14.getListLabel("Python3");
        java.lang.String str32 = python3Target14.getTargetStringLiteralFromString("\\0");
        org.antlr.v4.tool.Grammar grammar33 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target34 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str36 = python3Target34.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.tool.Grammar grammar37 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target38 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean39 = python3Target38.supportsOverloadedMethods();
        java.lang.String str40 = python3Target38.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator41 = null;
        java.lang.String str44 = python3Target38.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator41, "", true);
        java.lang.String str45 = python3Target38.getVersion();
        org.antlr.v4.tool.Grammar grammar46 = null;
        int[] intArray47 = new int[] {};
        java.lang.String[] strArray48 = python3Target38.getTokenTypesAsTargetLabels(grammar46, intArray47);
        java.lang.String[] strArray49 = python3Target34.getTokenTypesAsTargetLabels(grammar37, intArray47);
        java.lang.String[] strArray50 = python3Target14.getTokenTypesAsTargetLabels(grammar33, intArray47);
        java.lang.String[] strArray51 = python3Target1.getTokenTypesAsTargetLabels(grammar13, intArray47);
        java.lang.String str54 = python3Target1.getTargetStringLiteralFromString("\"DContext\"", true);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str56 = python3Target1.getElementListName("\"_12\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "\"\"\"\"\"\"" + "'", str5, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertNotNull(strSet11);
        org.junit.Assert.assertNull(codeGenerator12);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(sTGroup16);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "Hi!Context" + "'", str28, "Hi!Context");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "Python3" + "'", str30, "Python3");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "\"\\0\"" + "'", str32, "\"\\0\"");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "\"\"\"\"\"\"" + "'", str36, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "4.5.2.1" + "'", str40, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "\"\"" + "'", str44, "\"\"");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "4.5.2.1" + "'", str45, "4.5.2.1");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[]");
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertNotNull(strArray49);
        org.junit.Assert.assertNotNull(strArray50);
        org.junit.Assert.assertNotNull(strArray51);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "\"\\\"DContext\\\"\"" + "'", str54, "\"\\\"DContext\\\"\"");
    }

    @Test
    public void test1513() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1513");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        java.lang.String str2 = python3Target0.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = python3Target0.getCodeGenerator();
        org.stringtemplate.v4.STGroup sTGroup4 = null;
        python3Target0.templates = sTGroup4;
        org.stringtemplate.v4.STGroup sTGroup6 = python3Target0.templates;
        java.lang.String[] strArray7 = python3Target0.targetCharValueEscape;
        java.util.Set<java.lang.String> strSet8 = python3Target0.badWords;
        python3Target0.language = "@";
        java.lang.String str11 = python3Target0.getLanguage();
        java.util.Set<java.lang.String> strSet12 = python3Target0.badWords;
        org.antlr.v4.codegen.CodeGenerator codeGenerator13 = null;
        java.lang.String str16 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator13, "\"\\\"\\\\\\\"\\\\\\\"hi!\\\\\\\"\\\\\\\"\\\"\"", true);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str18 = python3Target0.getImplicitSetLabel("\\\"\\\"DContext\\\"\\\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "4.5.2.1" + "'", str2, "4.5.2.1");
        org.junit.Assert.assertNull(codeGenerator3);
        org.junit.Assert.assertNull(sTGroup6);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "@" + "'", str11, "@");
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "\"\\\"\\\\\\\"\\\\\\\"hi!\\\\\\\"\\\\\\\"\\\"\"" + "'", str16, "\"\\\"\\\\\\\"\\\\\\\"hi!\\\\\\\"\\\\\\\"\\\"\"");
    }

    @Test
    public void test1514() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1514");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray1 = python3Target0.targetCharValueEscape;
        java.lang.String str2 = python3Target0.getVersion();
        int int3 = python3Target0.getInlineTestSetWordSize();
        org.antlr.v4.tool.Grammar grammar4 = null;
        org.stringtemplate.v4.ST sT5 = null;
        python3Target0.genRecognizerHeaderFile(grammar4, sT5, "\"\\\"1\"");
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "4.5.2.1" + "'", str2, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 64 + "'", int3 == 64);
    }

    @Test
    public void test1515() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1515");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.lang.String str3 = python3Target1.getTargetStringLiteralFromString("");
        org.antlr.v4.codegen.CodeGenerator codeGenerator4 = python3Target1.gen;
        org.stringtemplate.v4.STGroup sTGroup5 = python3Target1.templates;
        org.stringtemplate.v4.STGroup sTGroup6 = python3Target1.loadTemplates();
        java.lang.String str8 = python3Target1.getImplicitSetLabel("\"\\35\"");
        java.lang.String[] strArray9 = python3Target1.targetCharValueEscape;
        boolean boolean10 = python3Target1.wantsBaseListener();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "\"\"" + "'", str3, "\"\"");
        org.junit.Assert.assertNull(codeGenerator4);
        org.junit.Assert.assertNull(sTGroup5);
        org.junit.Assert.assertNotNull(sTGroup6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "_tset\"\\35\"" + "'", str8, "_tset\"\\35\"");
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test1516() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1516");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str2 = python3Target0.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.tool.Grammar grammar3 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target4 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean5 = python3Target4.supportsOverloadedMethods();
        java.lang.String str6 = python3Target4.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = null;
        java.lang.String str10 = python3Target4.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator7, "", true);
        java.lang.String str11 = python3Target4.getVersion();
        org.antlr.v4.tool.Grammar grammar12 = null;
        int[] intArray13 = new int[] {};
        java.lang.String[] strArray14 = python3Target4.getTokenTypesAsTargetLabels(grammar12, intArray13);
        java.lang.String[] strArray15 = python3Target0.getTokenTypesAsTargetLabels(grammar3, intArray13);
        java.lang.String[] strArray16 = python3Target0.targetCharValueEscape;
        org.antlr.v4.codegen.target.Python3Target python3Target17 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray18 = python3Target17.targetCharValueEscape;
        org.stringtemplate.v4.STGroup sTGroup19 = python3Target17.templates;
        org.antlr.v4.codegen.CodeGenerator codeGenerator20 = null;
        java.lang.String str23 = python3Target17.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator20, "\"\\12\"", false);
        int int24 = python3Target17.getInlineTestSetWordSize();
        org.antlr.v4.codegen.CodeGenerator codeGenerator25 = python3Target17.getCodeGenerator();
        org.antlr.v4.tool.Grammar grammar26 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator27 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target28 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator27);
        java.lang.String str29 = python3Target28.getVersion();
        int int30 = python3Target28.getSerializedATNSegmentLimit();
        java.lang.String str31 = python3Target28.getVersion();
        boolean boolean32 = python3Target28.wantsBaseListener();
        python3Target28.addBadWords();
        org.antlr.v4.tool.Grammar grammar34 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator35 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target36 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator35);
        java.util.Set<java.lang.String> strSet37 = python3Target36.getBadWords();
        org.antlr.v4.codegen.target.Python3Target python3Target38 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str40 = python3Target38.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.codegen.target.Python3Target python3Target41 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean42 = python3Target41.supportsOverloadedMethods();
        java.util.Set<java.lang.String> strSet43 = python3Target41.badWords;
        python3Target38.badWords = strSet43;
        python3Target36.badWords = strSet43;
        java.util.Set<java.lang.String> strSet46 = python3Target36.badWords;
        org.antlr.v4.codegen.CodeGenerator codeGenerator47 = python3Target36.getCodeGenerator();
        org.antlr.v4.tool.Grammar grammar48 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target49 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean50 = python3Target49.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup51 = python3Target49.templates;
        org.antlr.v4.tool.Grammar grammar52 = null;
        org.stringtemplate.v4.ST sT53 = null;
        python3Target49.genRecognizerHeaderFile(grammar52, sT53, "");
        python3Target49.language = "Python3";
        java.util.Set<java.lang.String> strSet58 = null;
        python3Target49.badWords = strSet58;
        org.antlr.v4.codegen.CodeGenerator codeGenerator60 = null;
        java.lang.String str63 = python3Target49.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator60, "\"Hi!Context\"", false);
        java.lang.String str65 = python3Target49.getListLabel("Python3");
        java.lang.String str67 = python3Target49.getTargetStringLiteralFromString("\\0");
        org.antlr.v4.tool.Grammar grammar68 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target69 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str71 = python3Target69.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.tool.Grammar grammar72 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target73 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean74 = python3Target73.supportsOverloadedMethods();
        java.lang.String str75 = python3Target73.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator76 = null;
        java.lang.String str79 = python3Target73.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator76, "", true);
        java.lang.String str80 = python3Target73.getVersion();
        org.antlr.v4.tool.Grammar grammar81 = null;
        int[] intArray82 = new int[] {};
        java.lang.String[] strArray83 = python3Target73.getTokenTypesAsTargetLabels(grammar81, intArray82);
        java.lang.String[] strArray84 = python3Target69.getTokenTypesAsTargetLabels(grammar72, intArray82);
        java.lang.String[] strArray85 = python3Target49.getTokenTypesAsTargetLabels(grammar68, intArray82);
        java.lang.String[] strArray86 = python3Target36.getTokenTypesAsTargetLabels(grammar48, intArray82);
        java.lang.String[] strArray87 = python3Target28.getTokenTypesAsTargetLabels(grammar34, intArray82);
        java.lang.String[] strArray88 = python3Target17.getTokenTypesAsTargetLabels(grammar26, intArray82);
        python3Target0.targetCharValueEscape = strArray88;
        java.util.Set<java.lang.String> strSet90 = python3Target0.badWords;
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "\"\"\"\"\"\"" + "'", str2, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "4.5.2.1" + "'", str6, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\"\"" + "'", str10, "\"\"");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "4.5.2.1" + "'", str11, "4.5.2.1");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[]");
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertNull(sTGroup19);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "12" + "'", str23, "12");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 64 + "'", int24 == 64);
        org.junit.Assert.assertNull(codeGenerator25);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "4.5.2.1" + "'", str29, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 29 + "'", int30 == 29);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "4.5.2.1" + "'", str31, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(strSet37);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "\"\"\"\"\"\"" + "'", str40, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(strSet43);
        org.junit.Assert.assertNotNull(strSet46);
        org.junit.Assert.assertNull(codeGenerator47);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNull(sTGroup51);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "Hi!Context" + "'", str63, "Hi!Context");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "Python3" + "'", str65, "Python3");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "\"\\0\"" + "'", str67, "\"\\0\"");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "\"\"\"\"\"\"" + "'", str71, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "4.5.2.1" + "'", str75, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "\"\"" + "'", str79, "\"\"");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "4.5.2.1" + "'", str80, "4.5.2.1");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[]");
        org.junit.Assert.assertNotNull(strArray83);
        org.junit.Assert.assertNotNull(strArray84);
        org.junit.Assert.assertNotNull(strArray85);
        org.junit.Assert.assertNotNull(strArray86);
        org.junit.Assert.assertNotNull(strArray87);
        org.junit.Assert.assertNotNull(strArray88);
        org.junit.Assert.assertNotNull(strSet90);
    }

    @Test
    public void test1517() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1517");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str2 = python3Target0.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.tool.Grammar grammar3 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target4 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean5 = python3Target4.supportsOverloadedMethods();
        java.lang.String str6 = python3Target4.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = null;
        java.lang.String str10 = python3Target4.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator7, "", true);
        java.lang.String str11 = python3Target4.getVersion();
        org.antlr.v4.tool.Grammar grammar12 = null;
        int[] intArray13 = new int[] {};
        java.lang.String[] strArray14 = python3Target4.getTokenTypesAsTargetLabels(grammar12, intArray13);
        java.lang.String[] strArray15 = python3Target0.getTokenTypesAsTargetLabels(grammar3, intArray13);
        java.lang.String[] strArray16 = python3Target0.targetCharValueEscape;
        java.lang.String str18 = python3Target0.getTargetStringLiteralFromString("\"\"\"\"\"\"");
        java.lang.String[] strArray19 = python3Target0.targetCharValueEscape;
        org.antlr.v4.tool.ast.GrammarAST grammarAST20 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean21 = python3Target0.visibleGrammarSymbolCausesIssueInGeneratedCode(grammarAST20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "\"\"\"\"\"\"" + "'", str2, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "4.5.2.1" + "'", str6, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\"\"" + "'", str10, "\"\"");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "4.5.2.1" + "'", str11, "4.5.2.1");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[]");
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "\"\"\"\"\"\"\"\"" + "'", str18, "\"\"\"\"\"\"\"\"");
        org.junit.Assert.assertNotNull(strArray19);
    }

    @Test
    public void test1518() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1518");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!", "hi!" };
        python3Target0.targetCharValueEscape = strArray5;
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = null;
        java.lang.String str10 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator7, "", false);
        java.lang.String str12 = python3Target0.encodeIntAsCharEscape((int) '4');
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str14 = python3Target0.getImplicitRuleLabel("");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "\\64" + "'", str12, "\\64");
    }

    @Test
    public void test1519() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1519");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        org.antlr.v4.tool.Grammar grammar3 = null;
        org.stringtemplate.v4.ST sT4 = null;
        python3Target0.genRecognizerHeaderFile(grammar3, sT4, "");
        python3Target0.language = "Python3";
        java.util.Set<java.lang.String> strSet9 = null;
        python3Target0.badWords = strSet9;
        org.antlr.v4.codegen.CodeGenerator codeGenerator11 = null;
        java.lang.String str14 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator11, "\"Hi!Context\"", false);
        java.lang.String str16 = python3Target0.getListLabel("Python3");
        org.antlr.v4.codegen.CodeGenerator codeGenerator17 = python3Target0.getCodeGenerator();
        java.lang.String str18 = python3Target0.getVersion();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Hi!Context" + "'", str14, "Hi!Context");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Python3" + "'", str16, "Python3");
        org.junit.Assert.assertNull(codeGenerator17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "4.5.2.1" + "'", str18, "4.5.2.1");
    }

    @Test
    public void test1520() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1520");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python3Target1.getBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = null;
        python3Target1.gen = codeGenerator3;
        java.lang.String str6 = python3Target1.getAltLabelContextStructName("hi!");
        java.lang.String str9 = python3Target1.getTargetStringLiteralFromString("\"hi!\"", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = null;
        python3Target1.gen = codeGenerator10;
        org.antlr.v4.tool.Grammar grammar12 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target13 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray14 = python3Target13.targetCharValueEscape;
        org.stringtemplate.v4.STGroup sTGroup15 = python3Target13.templates;
        int int16 = python3Target13.getInlineTestSetWordSize();
        org.antlr.v4.codegen.CodeGenerator codeGenerator17 = python3Target13.gen;
        org.antlr.v4.tool.Grammar grammar18 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target19 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str21 = python3Target19.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.tool.Grammar grammar22 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target23 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean24 = python3Target23.supportsOverloadedMethods();
        java.lang.String str25 = python3Target23.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator26 = null;
        java.lang.String str29 = python3Target23.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator26, "", true);
        java.lang.String str30 = python3Target23.getVersion();
        org.antlr.v4.tool.Grammar grammar31 = null;
        int[] intArray32 = new int[] {};
        java.lang.String[] strArray33 = python3Target23.getTokenTypesAsTargetLabels(grammar31, intArray32);
        java.lang.String[] strArray34 = python3Target19.getTokenTypesAsTargetLabels(grammar22, intArray32);
        java.lang.String[] strArray35 = python3Target13.getTokenTypesAsTargetLabels(grammar18, intArray32);
        java.lang.String[] strArray36 = python3Target1.getTokenTypesAsTargetLabels(grammar12, intArray32);
        org.antlr.v4.codegen.CodeGenerator codeGenerator37 = null;
        python3Target1.gen = codeGenerator37;
        org.antlr.v4.codegen.CodeGenerator codeGenerator39 = python3Target1.gen;
        org.antlr.v4.codegen.CodeGenerator codeGenerator40 = python3Target1.gen;
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Hi!Context" + "'", str6, "Hi!Context");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\"\\\"hi!\\\"\"" + "'", str9, "\"\\\"hi!\\\"\"");
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertNull(sTGroup15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 64 + "'", int16 == 64);
        org.junit.Assert.assertNull(codeGenerator17);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "\"\"\"\"\"\"" + "'", str21, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "4.5.2.1" + "'", str25, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "\"\"" + "'", str29, "\"\"");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "4.5.2.1" + "'", str30, "4.5.2.1");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[]");
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertNull(codeGenerator39);
        org.junit.Assert.assertNull(codeGenerator40);
    }

    @Test
    public void test1521() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1521");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!", "hi!" };
        python3Target0.targetCharValueEscape = strArray5;
        java.lang.String str8 = python3Target0.getTargetStringLiteralFromString("\"\"");
        org.stringtemplate.v4.STGroup sTGroup9 = null;
        python3Target0.templates = sTGroup9;
        java.lang.String[] strArray11 = python3Target0.targetCharValueEscape;
        int int12 = python3Target0.getInlineTestSetWordSize();
        java.lang.String[] strArray13 = new java.lang.String[] {};
        python3Target0.targetCharValueEscape = strArray13;
        java.lang.String str16 = python3Target0.getTargetStringLiteralFromString("_tsetPython3");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str18 = python3Target0.getElementName("_12");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\"\"\"\"" + "'", str8, "\"\"\"\"");
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 64 + "'", int12 == 64);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "\"_tsetPython3\"" + "'", str16, "\"_tsetPython3\"");
    }

    @Test
    public void test1522() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1522");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python3Target1.getBadWords();
        java.lang.String str4 = python3Target1.getAltLabelContextStructName("d");
        org.stringtemplate.v4.STGroup sTGroup5 = python3Target1.getTemplates();
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = null;
        java.lang.String str9 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator6, "", true);
        org.antlr.v4.tool.Grammar grammar10 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target11 = new org.antlr.v4.codegen.target.Python3Target();
        python3Target11.language = "";
        org.antlr.v4.codegen.target.Python3Target python3Target14 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean15 = python3Target14.supportsOverloadedMethods();
        java.lang.String str16 = python3Target14.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator17 = null;
        java.lang.String str20 = python3Target14.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator17, "", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator21 = null;
        python3Target14.gen = codeGenerator21;
        java.lang.String[] strArray30 = new java.lang.String[] { "\"\"\"\"", "\\12", "\"\"", "4.5.2.1", "", "\"\"\"\"", "\"\"" };
        java.util.LinkedHashSet<java.lang.String> strSet31 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet31, strArray30);
        python3Target14.badWords = strSet31;
        python3Target11.badWords = strSet31;
        java.lang.String str36 = python3Target11.encodeIntAsCharEscape((int) (byte) 100);
        java.lang.String str37 = python3Target11.getLanguage();
        java.lang.String[] strArray38 = new java.lang.String[] {};
        python3Target11.targetCharValueEscape = strArray38;
        org.antlr.v4.tool.Grammar grammar40 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target41 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean42 = python3Target41.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup43 = python3Target41.templates;
        java.lang.String[] strArray46 = new java.lang.String[] { "hi!", "hi!" };
        python3Target41.targetCharValueEscape = strArray46;
        org.antlr.v4.codegen.CodeGenerator codeGenerator48 = null;
        java.lang.String str51 = python3Target41.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator48, "", false);
        java.util.Set<java.lang.String> strSet52 = python3Target41.badWords;
        java.lang.String str54 = python3Target41.getTargetStringLiteralFromString("12");
        int int55 = python3Target41.getSerializedATNSegmentLimit();
        boolean boolean56 = python3Target41.supportsOverloadedMethods();
        org.antlr.v4.tool.Grammar grammar57 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target58 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean59 = python3Target58.supportsOverloadedMethods();
        java.util.Set<java.lang.String> strSet60 = python3Target58.badWords;
        boolean boolean61 = python3Target58.templatesExist();
        java.lang.String str62 = python3Target58.getLanguage();
        org.antlr.v4.tool.Grammar grammar63 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target64 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str66 = python3Target64.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator67 = null;
        python3Target64.gen = codeGenerator67;
        org.antlr.v4.tool.Grammar grammar69 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target70 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str72 = python3Target70.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.tool.Grammar grammar73 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target74 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean75 = python3Target74.supportsOverloadedMethods();
        java.lang.String str76 = python3Target74.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator77 = null;
        java.lang.String str80 = python3Target74.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator77, "", true);
        java.lang.String str81 = python3Target74.getVersion();
        org.antlr.v4.tool.Grammar grammar82 = null;
        int[] intArray83 = new int[] {};
        java.lang.String[] strArray84 = python3Target74.getTokenTypesAsTargetLabels(grammar82, intArray83);
        java.lang.String[] strArray85 = python3Target70.getTokenTypesAsTargetLabels(grammar73, intArray83);
        java.lang.String[] strArray86 = python3Target64.getTokenTypesAsTargetLabels(grammar69, intArray83);
        java.lang.String[] strArray87 = python3Target58.getTokenTypesAsTargetLabels(grammar63, intArray83);
        java.lang.String[] strArray88 = python3Target41.getTokenTypesAsTargetLabels(grammar57, intArray83);
        java.lang.String[] strArray89 = python3Target11.getTokenTypesAsTargetLabels(grammar40, intArray83);
        java.lang.String[] strArray90 = python3Target1.getTokenTypesAsTargetLabels(grammar10, intArray83);
        java.lang.String str92 = python3Target1.encodeIntAsCharEscape((int) (short) 10);
        boolean boolean93 = python3Target1.wantsBaseVisitor();
        java.util.Set<java.lang.String> strSet94 = python3Target1.getBadWords();
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "DContext" + "'", str4, "DContext");
        org.junit.Assert.assertNotNull(sTGroup5);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\"\"" + "'", str9, "\"\"");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "4.5.2.1" + "'", str16, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "\"\"" + "'", str20, "\"\"");
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "d" + "'", str36, "d");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "" + "'", str37, "");
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNull(sTGroup43);
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "" + "'", str51, "");
        org.junit.Assert.assertNotNull(strSet52);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "\"12\"" + "'", str54, "\"12\"");
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 29 + "'", int55 == 29);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(strSet60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNull(str62);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "\"\"\"\"\"\"" + "'", str66, "\"\"\"\"\"\"");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "\"\"\"\"\"\"" + "'", str72, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "4.5.2.1" + "'", str76, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "\"\"" + "'", str80, "\"\"");
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "4.5.2.1" + "'", str81, "4.5.2.1");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[]");
        org.junit.Assert.assertNotNull(strArray84);
        org.junit.Assert.assertNotNull(strArray85);
        org.junit.Assert.assertNotNull(strArray86);
        org.junit.Assert.assertNotNull(strArray87);
        org.junit.Assert.assertNotNull(strArray88);
        org.junit.Assert.assertNotNull(strArray89);
        org.junit.Assert.assertNotNull(strArray90);
        org.junit.Assert.assertEquals("'" + str92 + "' != '" + "\\n" + "'", str92, "\\n");
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertNotNull(strSet94);
    }

    @Test
    public void test1523() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1523");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.lang.String str3 = python3Target1.getTargetStringLiteralFromString("");
        int int4 = python3Target1.getSerializedATNSegmentLimit();
        int int5 = python3Target1.getInlineTestSetWordSize();
        org.antlr.v4.tool.Grammar grammar6 = null;
        org.stringtemplate.v4.ST sT7 = null;
        python3Target1.genRecognizerHeaderFile(grammar6, sT7, "@");
        boolean boolean10 = python3Target1.templatesExist();
        boolean boolean11 = python3Target1.templatesExist();
        java.lang.String str12 = python3Target1.language;
        java.lang.String str13 = python3Target1.getVersion();
        boolean boolean14 = python3Target1.wantsBaseVisitor();
        java.lang.String str15 = python3Target1.getLanguage();
        org.antlr.v4.tool.ast.GrammarAST grammarAST16 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str17 = python3Target1.getLoopLabel(grammarAST16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "\"\"" + "'", str3, "\"\"");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 29 + "'", int4 == 29);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 64 + "'", int5 == 64);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Python3" + "'", str12, "Python3");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "4.5.2.1" + "'", str13, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Python3" + "'", str15, "Python3");
    }

    @Test
    public void test1524() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1524");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray1 = python3Target0.targetCharValueEscape;
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = null;
        java.lang.String str6 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator3, "\"\\12\"", false);
        int int7 = python3Target0.getSerializedATNSegmentLimit();
        boolean boolean8 = python3Target0.templatesExist();
        boolean boolean9 = python3Target0.supportsOverloadedMethods();
        org.antlr.v4.tool.Grammar grammar10 = null;
        org.stringtemplate.v4.ST sT11 = null;
        python3Target0.genRecognizerHeaderFile(grammar10, sT11, "_tsetPython3");
        java.lang.String str14 = python3Target0.getVersion();
        java.lang.Class<?> wildcardClass15 = python3Target0.getClass();
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "12" + "'", str6, "12");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 29 + "'", int7 == 29);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "4.5.2.1" + "'", str14, "4.5.2.1");
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test1525() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1525");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!", "hi!" };
        python3Target0.targetCharValueEscape = strArray5;
        java.lang.String str8 = python3Target0.getTargetStringLiteralFromString("\"\"");
        java.lang.String str10 = python3Target0.getTargetStringLiteralFromString("\"\"");
        boolean boolean11 = python3Target0.wantsBaseVisitor();
        org.antlr.v4.tool.Grammar grammar12 = null;
        org.stringtemplate.v4.ST sT13 = null;
        python3Target0.genRecognizerHeaderFile(grammar12, sT13, "");
        java.lang.String str16 = python3Target0.getVersion();
        python3Target0.addBadWords();
        org.antlr.v4.tool.Grammar grammar18 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str20 = python3Target0.getTokenTypeAsTargetLabel(grammar18, (int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\"\"\"\"" + "'", str8, "\"\"\"\"");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\"\"\"\"" + "'", str10, "\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "4.5.2.1" + "'", str16, "4.5.2.1");
    }

    @Test
    public void test1526() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1526");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.lang.String str3 = python3Target1.getTargetStringLiteralFromString("");
        int int4 = python3Target1.getSerializedATNSegmentLimit();
        boolean boolean5 = python3Target1.wantsBaseVisitor();
        org.stringtemplate.v4.STGroup sTGroup6 = python3Target1.loadTemplates();
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = python3Target1.gen;
        org.antlr.v4.codegen.target.Python3Target python3Target8 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean9 = python3Target8.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup10 = python3Target8.templates;
        org.antlr.v4.tool.Grammar grammar11 = null;
        org.stringtemplate.v4.ST sT12 = null;
        python3Target8.genRecognizerHeaderFile(grammar11, sT12, "");
        python3Target8.language = "Python3";
        int int17 = python3Target8.getSerializedATNSegmentLimit();
        org.stringtemplate.v4.STGroup sTGroup18 = python3Target8.loadTemplates();
        python3Target1.templates = sTGroup18;
        java.lang.String str20 = python3Target1.getVersion();
        java.lang.String str21 = python3Target1.language;
        java.lang.String str22 = python3Target1.getVersion();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "\"\"" + "'", str3, "\"\"");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 29 + "'", int4 == 29);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(sTGroup6);
        org.junit.Assert.assertNull(codeGenerator7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(sTGroup10);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 29 + "'", int17 == 29);
        org.junit.Assert.assertNotNull(sTGroup18);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "4.5.2.1" + "'", str20, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Python3" + "'", str21, "Python3");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "4.5.2.1" + "'", str22, "4.5.2.1");
    }

    @Test
    public void test1527() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1527");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.antlr.v4.codegen.CodeGenerator codeGenerator2 = null;
        python3Target0.gen = codeGenerator2;
        org.antlr.v4.codegen.CodeGenerator codeGenerator4 = null;
        java.lang.String str7 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator4, "", false);
        python3Target0.language = "\\1";
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
    }

    @Test
    public void test1528() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1528");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        org.antlr.v4.tool.Grammar grammar3 = null;
        org.stringtemplate.v4.ST sT4 = null;
        python3Target0.genRecognizerHeaderFile(grammar3, sT4, "");
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = python3Target0.getCodeGenerator();
        boolean boolean8 = python3Target0.supportsOverloadedMethods();
        org.antlr.v4.codegen.CodeGenerator codeGenerator9 = python3Target0.gen;
        python3Target0.language = "\"\\\"\\\"\\\\0\\\"\\\"\"";
        org.antlr.v4.codegen.target.Python3Target python3Target12 = new org.antlr.v4.codegen.target.Python3Target();
        python3Target12.language = "";
        org.antlr.v4.codegen.target.Python3Target python3Target15 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean16 = python3Target15.supportsOverloadedMethods();
        java.lang.String str17 = python3Target15.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator18 = null;
        java.lang.String str21 = python3Target15.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator18, "", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator22 = null;
        python3Target15.gen = codeGenerator22;
        java.lang.String[] strArray31 = new java.lang.String[] { "\"\"\"\"", "\\12", "\"\"", "4.5.2.1", "", "\"\"\"\"", "\"\"" };
        java.util.LinkedHashSet<java.lang.String> strSet32 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet32, strArray31);
        python3Target15.badWords = strSet32;
        python3Target12.badWords = strSet32;
        java.lang.String str37 = python3Target12.encodeIntAsCharEscape((int) (byte) 100);
        boolean boolean38 = python3Target12.templatesExist();
        java.util.Set<java.lang.String> strSet39 = python3Target12.getBadWords();
        java.lang.String[] strArray40 = python3Target12.targetCharValueEscape;
        python3Target0.targetCharValueEscape = strArray40;
        python3Target0.language = "\"\"__tset\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"ContextContextContext\"\"";
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertNull(codeGenerator7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(codeGenerator9);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "4.5.2.1" + "'", str17, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "\"\"" + "'", str21, "\"\"");
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "d" + "'", str37, "d");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(strSet39);
        org.junit.Assert.assertNotNull(strArray40);
    }

    @Test
    public void test1529() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1529");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.lang.String str2 = python3Target1.getLanguage();
        java.lang.String str4 = python3Target1.getImplicitSetLabel("Python3");
        org.antlr.v4.codegen.CodeGenerator codeGenerator5 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target6 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator5);
        java.util.Set<java.lang.String> strSet7 = python3Target6.getBadWords();
        python3Target1.badWords = strSet7;
        boolean boolean9 = python3Target1.wantsBaseVisitor();
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = null;
        python3Target1.gen = codeGenerator10;
        boolean boolean12 = python3Target1.supportsOverloadedMethods();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "Python3" + "'", str2, "Python3");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "_tsetPython3" + "'", str4, "_tsetPython3");
        org.junit.Assert.assertNotNull(strSet7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test1530() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1530");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python3Target1.getBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = null;
        python3Target1.gen = codeGenerator3;
        java.lang.String str6 = python3Target1.getAltLabelContextStructName("hi!");
        java.lang.String str9 = python3Target1.getTargetStringLiteralFromString("\"hi!\"", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = null;
        python3Target1.gen = codeGenerator10;
        org.antlr.v4.tool.Grammar grammar12 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target13 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray14 = python3Target13.targetCharValueEscape;
        org.stringtemplate.v4.STGroup sTGroup15 = python3Target13.templates;
        int int16 = python3Target13.getInlineTestSetWordSize();
        org.antlr.v4.codegen.CodeGenerator codeGenerator17 = python3Target13.gen;
        org.antlr.v4.tool.Grammar grammar18 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target19 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str21 = python3Target19.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.tool.Grammar grammar22 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target23 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean24 = python3Target23.supportsOverloadedMethods();
        java.lang.String str25 = python3Target23.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator26 = null;
        java.lang.String str29 = python3Target23.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator26, "", true);
        java.lang.String str30 = python3Target23.getVersion();
        org.antlr.v4.tool.Grammar grammar31 = null;
        int[] intArray32 = new int[] {};
        java.lang.String[] strArray33 = python3Target23.getTokenTypesAsTargetLabels(grammar31, intArray32);
        java.lang.String[] strArray34 = python3Target19.getTokenTypesAsTargetLabels(grammar22, intArray32);
        java.lang.String[] strArray35 = python3Target13.getTokenTypesAsTargetLabels(grammar18, intArray32);
        java.lang.String[] strArray36 = python3Target1.getTokenTypesAsTargetLabels(grammar12, intArray32);
        java.lang.String[] strArray37 = python3Target1.targetCharValueEscape;
        java.lang.String str39 = python3Target1.getImplicitRuleLabel("_\"\"\\\"DContext\\\"\"\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator40 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target41 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator40);
        java.lang.String str43 = python3Target41.getTargetStringLiteralFromString("");
        python3Target41.language = "";
        java.lang.String str48 = python3Target41.getTargetStringLiteralFromString("\"4.5.2.1\"", false);
        java.lang.String[] strArray50 = new java.lang.String[] { "hi!" };
        org.antlr.v4.codegen.target.Python3Target.python3Keywords = strArray50;
        python3Target41.targetCharValueEscape = strArray50;
        python3Target1.targetCharValueEscape = strArray50;
        int int54 = python3Target1.getInlineTestSetWordSize();
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Hi!Context" + "'", str6, "Hi!Context");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\"\\\"hi!\\\"\"" + "'", str9, "\"\\\"hi!\\\"\"");
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertNull(sTGroup15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 64 + "'", int16 == 64);
        org.junit.Assert.assertNull(codeGenerator17);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "\"\"\"\"\"\"" + "'", str21, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "4.5.2.1" + "'", str25, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "\"\"" + "'", str29, "\"\"");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "4.5.2.1" + "'", str30, "4.5.2.1");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[]");
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "__\"\"\\\"DContext\\\"\"\"" + "'", str39, "__\"\"\\\"DContext\\\"\"\"");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "\"\"" + "'", str43, "\"\"");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "\\\"4.5.2.1\\\"" + "'", str48, "\\\"4.5.2.1\\\"");
        org.junit.Assert.assertNotNull(strArray50);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 64 + "'", int54 == 64);
    }

    @Test
    public void test1531() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1531");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python3Target1.getBadWords();
        java.lang.String str4 = python3Target1.getAltLabelContextStructName("d");
        org.stringtemplate.v4.STGroup sTGroup5 = python3Target1.getTemplates();
        boolean boolean6 = python3Target1.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup7 = python3Target1.getTemplates();
        boolean boolean8 = python3Target1.templatesExist();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str10 = python3Target1.getElementListName("_tset\\\"\\\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "DContext" + "'", str4, "DContext");
        org.junit.Assert.assertNotNull(sTGroup5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(sTGroup7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
    }

    @Test
    public void test1532() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1532");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python3Target1.getBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = null;
        python3Target1.gen = codeGenerator3;
        java.lang.String str6 = python3Target1.getAltLabelContextStructName("hi!");
        org.antlr.v4.tool.Grammar grammar7 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target8 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean9 = python3Target8.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup10 = python3Target8.templates;
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "hi!" };
        python3Target8.targetCharValueEscape = strArray13;
        java.lang.String[] strArray16 = new java.lang.String[] { "hi!" };
        org.antlr.v4.codegen.target.Python3Target.python3Keywords = strArray16;
        python3Target8.targetCharValueEscape = strArray16;
        org.antlr.v4.tool.Grammar grammar19 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target20 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str22 = python3Target20.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator23 = null;
        python3Target20.gen = codeGenerator23;
        org.antlr.v4.tool.Grammar grammar25 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target26 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str28 = python3Target26.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.tool.Grammar grammar29 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target30 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean31 = python3Target30.supportsOverloadedMethods();
        java.lang.String str32 = python3Target30.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator33 = null;
        java.lang.String str36 = python3Target30.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator33, "", true);
        java.lang.String str37 = python3Target30.getVersion();
        org.antlr.v4.tool.Grammar grammar38 = null;
        int[] intArray39 = new int[] {};
        java.lang.String[] strArray40 = python3Target30.getTokenTypesAsTargetLabels(grammar38, intArray39);
        java.lang.String[] strArray41 = python3Target26.getTokenTypesAsTargetLabels(grammar29, intArray39);
        java.lang.String[] strArray42 = python3Target20.getTokenTypesAsTargetLabels(grammar25, intArray39);
        java.lang.String[] strArray43 = python3Target8.getTokenTypesAsTargetLabels(grammar19, intArray39);
        java.lang.String[] strArray44 = python3Target1.getTokenTypesAsTargetLabels(grammar7, intArray39);
        java.util.Set<java.lang.String> strSet45 = python3Target1.getBadWords();
        org.antlr.v4.tool.Grammar grammar46 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str48 = python3Target1.getTokenTypeAsTargetLabel(grammar46, (int) (byte) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Hi!Context" + "'", str6, "Hi!Context");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(sTGroup10);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "\"\"\"\"\"\"" + "'", str22, "\"\"\"\"\"\"");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "\"\"\"\"\"\"" + "'", str28, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "4.5.2.1" + "'", str32, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "\"\"" + "'", str36, "\"\"");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "4.5.2.1" + "'", str37, "4.5.2.1");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[]");
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertNotNull(strSet45);
    }

    @Test
    public void test1533() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1533");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        java.lang.String str2 = python3Target0.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = null;
        java.lang.String str6 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator3, "", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = null;
        python3Target0.gen = codeGenerator7;
        java.lang.String[] strArray16 = new java.lang.String[] { "\"\"\"\"", "\\12", "\"\"", "4.5.2.1", "", "\"\"\"\"", "\"\"" };
        java.util.LinkedHashSet<java.lang.String> strSet17 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet17, strArray16);
        python3Target0.badWords = strSet17;
        boolean boolean20 = python3Target0.templatesExist();
        int int21 = python3Target0.getSerializedATNSegmentLimit();
        org.stringtemplate.v4.STGroup sTGroup22 = python3Target0.templates;
        // The following exception was thrown during execution in test generation
        try {
            org.stringtemplate.v4.STGroup sTGroup23 = python3Target0.loadTemplates();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "4.5.2.1" + "'", str2, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\"\"" + "'", str6, "\"\"");
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 29 + "'", int21 == 29);
        org.junit.Assert.assertNull(sTGroup22);
    }

    @Test
    public void test1534() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1534");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python3Target1.getBadWords();
        org.antlr.v4.codegen.target.Python3Target python3Target3 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str5 = python3Target3.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.codegen.target.Python3Target python3Target6 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean7 = python3Target6.supportsOverloadedMethods();
        java.util.Set<java.lang.String> strSet8 = python3Target6.badWords;
        python3Target3.badWords = strSet8;
        python3Target1.badWords = strSet8;
        org.antlr.v4.codegen.model.RuleFunction ruleFunction11 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str12 = python3Target1.getRuleFunctionContextStructName(ruleFunction11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "\"\"\"\"\"\"" + "'", str5, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(strSet8);
    }

    @Test
    public void test1535() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1535");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        java.lang.String str2 = python3Target0.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = null;
        java.lang.String str6 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator3, "", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = null;
        python3Target0.gen = codeGenerator7;
        java.lang.String[] strArray16 = new java.lang.String[] { "\"\"\"\"", "\\12", "\"\"", "4.5.2.1", "", "\"\"\"\"", "\"\"" };
        java.util.LinkedHashSet<java.lang.String> strSet17 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet17, strArray16);
        python3Target0.badWords = strSet17;
        java.lang.String str20 = python3Target0.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator21 = python3Target0.getCodeGenerator();
        org.antlr.v4.tool.Grammar grammar22 = null;
        org.stringtemplate.v4.ST sT23 = null;
        python3Target0.genRecognizerHeaderFile(grammar22, sT23, "\"\"\"\"\"\"Context");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str27 = python3Target0.getImplicitSetLabel("\"\"_tset12\"\"Context");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "4.5.2.1" + "'", str2, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\"\"" + "'", str6, "\"\"");
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNull(codeGenerator21);
    }

    @Test
    public void test1536() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1536");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray1 = python3Target0.targetCharValueEscape;
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        int int3 = python3Target0.getInlineTestSetWordSize();
        org.antlr.v4.codegen.CodeGenerator codeGenerator4 = python3Target0.gen;
        org.antlr.v4.tool.Grammar grammar5 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target6 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str8 = python3Target6.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.tool.Grammar grammar9 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target10 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean11 = python3Target10.supportsOverloadedMethods();
        java.lang.String str12 = python3Target10.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator13 = null;
        java.lang.String str16 = python3Target10.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator13, "", true);
        java.lang.String str17 = python3Target10.getVersion();
        org.antlr.v4.tool.Grammar grammar18 = null;
        int[] intArray19 = new int[] {};
        java.lang.String[] strArray20 = python3Target10.getTokenTypesAsTargetLabels(grammar18, intArray19);
        java.lang.String[] strArray21 = python3Target6.getTokenTypesAsTargetLabels(grammar9, intArray19);
        java.lang.String[] strArray22 = python3Target0.getTokenTypesAsTargetLabels(grammar5, intArray19);
        java.lang.String[] strArray45 = new java.lang.String[] { "\"\\\"\\\"\"", "DContext", "", "hi!", "d", "\"\"\"\"\"\"", "\"\"\"\"\"\"", "_tsetPython3", "\"hi!\"", "\"hi!\"", "Hi!Context", "\"\"\"\"\"\"", "\"hi!\"", "12", "\"4.5.2.1\"", "DContext", "Hi!Context", "Python3", "\"hi!\"", "", "\"\"", "\\\"4.5.2.1\\\"" };
        java.util.LinkedHashSet<java.lang.String> strSet46 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet46, strArray45);
        python3Target0.badWords = strSet46;
        python3Target0.addBadWords();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str51 = python3Target0.encodeIntAsCharEscape((int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot encode the specified value: -1");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 64 + "'", int3 == 64);
        org.junit.Assert.assertNull(codeGenerator4);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\"\"\"\"\"\"" + "'", str8, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "4.5.2.1" + "'", str12, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "\"\"" + "'", str16, "\"\"");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "4.5.2.1" + "'", str17, "4.5.2.1");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[]");
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
    }

    @Test
    public void test1537() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1537");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!", "hi!" };
        python3Target0.targetCharValueEscape = strArray5;
        java.lang.String str8 = python3Target0.getTargetStringLiteralFromString("\"\"");
        java.lang.String str10 = python3Target0.getTargetStringLiteralFromString("\"\"");
        java.lang.String str11 = python3Target0.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup12 = python3Target0.templates;
        org.antlr.v4.codegen.CodeGenerator codeGenerator13 = python3Target0.gen;
        boolean boolean14 = python3Target0.wantsBaseListener();
        org.antlr.v4.tool.ast.GrammarAST grammarAST15 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean16 = python3Target0.visibleGrammarSymbolCausesIssueInGeneratedCode(grammarAST15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\"\"\"\"" + "'", str8, "\"\"\"\"");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\"\"\"\"" + "'", str10, "\"\"\"\"");
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(sTGroup12);
        org.junit.Assert.assertNull(codeGenerator13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test1538() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1538");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        org.antlr.v4.tool.Grammar grammar3 = null;
        org.stringtemplate.v4.ST sT4 = null;
        python3Target0.genRecognizerHeaderFile(grammar3, sT4, "");
        org.antlr.v4.codegen.target.Python3Target python3Target7 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray8 = python3Target7.targetCharValueEscape;
        python3Target0.targetCharValueEscape = strArray8;
        python3Target0.addBadWords();
        int int11 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str14 = python3Target0.getTargetStringLiteralFromString("\\\"\\\"4.5.2.1\\\"\\\"", true);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str16 = python3Target0.getElementName("\"_#\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 64 + "'", int11 == 64);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "\"\\\"\\\"4.5.2.1\\\"\\\"\"" + "'", str14, "\"\\\"\\\"4.5.2.1\\\"\\\"\"");
    }

    @Test
    public void test1539() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1539");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!", "hi!" };
        python3Target0.targetCharValueEscape = strArray5;
        java.lang.String str8 = python3Target0.getTargetStringLiteralFromString("\"\"");
        org.stringtemplate.v4.STGroup sTGroup9 = null;
        python3Target0.templates = sTGroup9;
        java.lang.String[] strArray11 = python3Target0.targetCharValueEscape;
        int int12 = python3Target0.getInlineTestSetWordSize();
        // The following exception was thrown during execution in test generation
        try {
            org.stringtemplate.v4.STGroup sTGroup13 = python3Target0.loadTemplates();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\"\"\"\"" + "'", str8, "\"\"\"\"");
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 64 + "'", int12 == 64);
    }

    @Test
    public void test1540() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1540");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python3Target1.getBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = null;
        python3Target1.gen = codeGenerator3;
        java.lang.String str6 = python3Target1.getAltLabelContextStructName("hi!");
        boolean boolean7 = python3Target1.supportsOverloadedMethods();
        java.lang.String[] strArray8 = python3Target1.targetCharValueEscape;
        java.lang.String str9 = python3Target1.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = null;
        java.lang.String str13 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator10, "", true);
        java.lang.String[] strArray14 = python3Target1.targetCharValueEscape;
        org.antlr.v4.tool.ast.GrammarAST grammarAST15 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean16 = python3Target1.grammarSymbolCausesIssueInGeneratedCode(grammarAST15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Hi!Context" + "'", str6, "Hi!Context");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Python3" + "'", str9, "Python3");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "\"\"" + "'", str13, "\"\"");
        org.junit.Assert.assertNotNull(strArray14);
    }

    @Test
    public void test1541() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1541");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        org.antlr.v4.tool.Grammar grammar3 = null;
        org.stringtemplate.v4.ST sT4 = null;
        python3Target0.genRecognizerHeaderFile(grammar3, sT4, "");
        org.antlr.v4.codegen.target.Python3Target python3Target7 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray8 = python3Target7.targetCharValueEscape;
        python3Target0.targetCharValueEscape = strArray8;
        python3Target0.addBadWords();
        java.lang.String[] strArray11 = python3Target0.targetCharValueEscape;
        java.lang.Class<?> wildcardClass12 = python3Target0.getClass();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test1542() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1542");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str2 = python3Target0.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = null;
        python3Target0.gen = codeGenerator3;
        org.antlr.v4.codegen.CodeGenerator codeGenerator5 = python3Target0.getCodeGenerator();
        org.stringtemplate.v4.STGroup sTGroup6 = python3Target0.templates;
        java.lang.String str7 = python3Target0.getLanguage();
        python3Target0.language = "_\"\"4.5.2.1\"\"";
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "\"\"\"\"\"\"" + "'", str2, "\"\"\"\"\"\"");
        org.junit.Assert.assertNull(codeGenerator5);
        org.junit.Assert.assertNull(sTGroup6);
        org.junit.Assert.assertNull(str7);
    }

    @Test
    public void test1543() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1543");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        java.lang.String str2 = python3Target0.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = python3Target0.getCodeGenerator();
        org.stringtemplate.v4.STGroup sTGroup4 = null;
        python3Target0.templates = sTGroup4;
        org.stringtemplate.v4.STGroup sTGroup6 = python3Target0.templates;
        java.lang.String[] strArray7 = python3Target0.targetCharValueEscape;
        java.util.Set<java.lang.String> strSet8 = python3Target0.badWords;
        python3Target0.language = "@";
        org.antlr.v4.tool.ast.GrammarAST grammarAST11 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean12 = python3Target0.grammarSymbolCausesIssueInGeneratedCode(grammarAST11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "4.5.2.1" + "'", str2, "4.5.2.1");
        org.junit.Assert.assertNull(codeGenerator3);
        org.junit.Assert.assertNull(sTGroup6);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strSet8);
    }

    @Test
    public void test1544() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1544");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        python3Target0.language = "";
        org.antlr.v4.codegen.target.Python3Target python3Target3 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean4 = python3Target3.supportsOverloadedMethods();
        java.lang.String str5 = python3Target3.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = null;
        java.lang.String str9 = python3Target3.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator6, "", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = null;
        python3Target3.gen = codeGenerator10;
        java.lang.String[] strArray19 = new java.lang.String[] { "\"\"\"\"", "\\12", "\"\"", "4.5.2.1", "", "\"\"\"\"", "\"\"" };
        java.util.LinkedHashSet<java.lang.String> strSet20 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet20, strArray19);
        python3Target3.badWords = strSet20;
        python3Target0.badWords = strSet20;
        python3Target0.language = "_tsetPython3";
        org.antlr.v4.tool.Grammar grammar26 = null;
        org.stringtemplate.v4.ST sT27 = null;
        python3Target0.genRecognizerHeaderFile(grammar26, sT27, "_tsetPython3");
        java.lang.String str31 = python3Target0.encodeIntAsCharEscape((int) '#');
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "4.5.2.1" + "'", str5, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\"\"" + "'", str9, "\"\"");
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "#" + "'", str31, "#");
    }

    @Test
    public void test1545() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1545");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.lang.String str2 = python3Target1.getLanguage();
        java.lang.String str4 = python3Target1.getImplicitSetLabel("Python3");
        org.antlr.v4.codegen.CodeGenerator codeGenerator5 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target6 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator5);
        java.util.Set<java.lang.String> strSet7 = python3Target6.getBadWords();
        python3Target1.badWords = strSet7;
        java.lang.String str10 = python3Target1.getListLabel("\"hi!\"");
        java.lang.String str12 = python3Target1.getListLabel("_tset\"\\\"\\\"hi!\\\"\\\"\"");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "Python3" + "'", str2, "Python3");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "_tsetPython3" + "'", str4, "_tsetPython3");
        org.junit.Assert.assertNotNull(strSet7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\"hi!\"" + "'", str10, "\"hi!\"");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "_tset\"\\\"\\\"hi!\\\"\\\"\"" + "'", str12, "_tset\"\\\"\\\"hi!\\\"\\\"\"");
    }

    @Test
    public void test1546() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1546");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python3Target1.getBadWords();
        java.lang.String str4 = python3Target1.getAltLabelContextStructName("d");
        org.stringtemplate.v4.STGroup sTGroup5 = python3Target1.getTemplates();
        java.lang.String str6 = python3Target1.language;
        org.antlr.v4.tool.Grammar grammar7 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target9 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator8);
        java.util.Set<java.lang.String> strSet10 = python3Target9.getBadWords();
        org.antlr.v4.codegen.target.Python3Target python3Target11 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str13 = python3Target11.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.codegen.target.Python3Target python3Target14 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean15 = python3Target14.supportsOverloadedMethods();
        java.util.Set<java.lang.String> strSet16 = python3Target14.badWords;
        python3Target11.badWords = strSet16;
        python3Target9.badWords = strSet16;
        java.util.Set<java.lang.String> strSet19 = python3Target9.badWords;
        java.lang.String str21 = python3Target9.getAltLabelContextStructName("d");
        org.antlr.v4.tool.Grammar grammar22 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target23 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean24 = python3Target23.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup25 = python3Target23.templates;
        org.antlr.v4.tool.Grammar grammar26 = null;
        org.stringtemplate.v4.ST sT27 = null;
        python3Target23.genRecognizerHeaderFile(grammar26, sT27, "");
        boolean boolean30 = python3Target23.supportsOverloadedMethods();
        python3Target23.language = "\"\\12\"";
        org.antlr.v4.tool.Grammar grammar33 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator34 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target35 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator34);
        java.util.Set<java.lang.String> strSet36 = python3Target35.getBadWords();
        java.lang.String str38 = python3Target35.getAltLabelContextStructName("d");
        java.lang.String str40 = python3Target35.getTargetStringLiteralFromString("\"\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator41 = python3Target35.getCodeGenerator();
        org.antlr.v4.tool.Grammar grammar42 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator43 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target44 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator43);
        java.util.Set<java.lang.String> strSet45 = python3Target44.getBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator46 = null;
        python3Target44.gen = codeGenerator46;
        java.lang.String str49 = python3Target44.getAltLabelContextStructName("hi!");
        java.lang.String str52 = python3Target44.getTargetStringLiteralFromString("\"hi!\"", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator53 = null;
        python3Target44.gen = codeGenerator53;
        org.antlr.v4.tool.Grammar grammar55 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target56 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray57 = python3Target56.targetCharValueEscape;
        org.stringtemplate.v4.STGroup sTGroup58 = python3Target56.templates;
        int int59 = python3Target56.getInlineTestSetWordSize();
        org.antlr.v4.codegen.CodeGenerator codeGenerator60 = python3Target56.gen;
        org.antlr.v4.tool.Grammar grammar61 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target62 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str64 = python3Target62.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.tool.Grammar grammar65 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target66 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean67 = python3Target66.supportsOverloadedMethods();
        java.lang.String str68 = python3Target66.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator69 = null;
        java.lang.String str72 = python3Target66.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator69, "", true);
        java.lang.String str73 = python3Target66.getVersion();
        org.antlr.v4.tool.Grammar grammar74 = null;
        int[] intArray75 = new int[] {};
        java.lang.String[] strArray76 = python3Target66.getTokenTypesAsTargetLabels(grammar74, intArray75);
        java.lang.String[] strArray77 = python3Target62.getTokenTypesAsTargetLabels(grammar65, intArray75);
        java.lang.String[] strArray78 = python3Target56.getTokenTypesAsTargetLabels(grammar61, intArray75);
        java.lang.String[] strArray79 = python3Target44.getTokenTypesAsTargetLabels(grammar55, intArray75);
        java.lang.String[] strArray80 = python3Target35.getTokenTypesAsTargetLabels(grammar42, intArray75);
        java.lang.String[] strArray81 = python3Target23.getTokenTypesAsTargetLabels(grammar33, intArray75);
        java.lang.String[] strArray82 = python3Target9.getTokenTypesAsTargetLabels(grammar22, intArray75);
        java.lang.String[] strArray83 = python3Target1.getTokenTypesAsTargetLabels(grammar7, intArray75);
        org.antlr.v4.tool.Grammar grammar84 = null;
        org.stringtemplate.v4.ST sT85 = null;
        // The following exception was thrown during execution in test generation
        try {
            python3Target1.genListenerFile(grammar84, sT85);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "DContext" + "'", str4, "DContext");
        org.junit.Assert.assertNotNull(sTGroup5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Python3" + "'", str6, "Python3");
        org.junit.Assert.assertNotNull(strSet10);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "\"\"\"\"\"\"" + "'", str13, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertNotNull(strSet19);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "DContext" + "'", str21, "DContext");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNull(sTGroup25);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(strSet36);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "DContext" + "'", str38, "DContext");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "\"\\\"\\\"\"" + "'", str40, "\"\\\"\\\"\"");
        org.junit.Assert.assertNull(codeGenerator41);
        org.junit.Assert.assertNotNull(strSet45);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "Hi!Context" + "'", str49, "Hi!Context");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "\"\\\"hi!\\\"\"" + "'", str52, "\"\\\"hi!\\\"\"");
        org.junit.Assert.assertNotNull(strArray57);
        org.junit.Assert.assertNull(sTGroup58);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 64 + "'", int59 == 64);
        org.junit.Assert.assertNull(codeGenerator60);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "\"\"\"\"\"\"" + "'", str64, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "4.5.2.1" + "'", str68, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "\"\"" + "'", str72, "\"\"");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "4.5.2.1" + "'", str73, "4.5.2.1");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[]");
        org.junit.Assert.assertNotNull(strArray76);
        org.junit.Assert.assertNotNull(strArray77);
        org.junit.Assert.assertNotNull(strArray78);
        org.junit.Assert.assertNotNull(strArray79);
        org.junit.Assert.assertNotNull(strArray80);
        org.junit.Assert.assertNotNull(strArray81);
        org.junit.Assert.assertNotNull(strArray82);
        org.junit.Assert.assertNotNull(strArray83);
    }

    @Test
    public void test1547() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1547");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        python3Target0.language = "";
        org.antlr.v4.codegen.target.Python3Target python3Target3 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean4 = python3Target3.supportsOverloadedMethods();
        java.lang.String str5 = python3Target3.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = null;
        java.lang.String str9 = python3Target3.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator6, "", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = null;
        python3Target3.gen = codeGenerator10;
        java.lang.String[] strArray19 = new java.lang.String[] { "\"\"\"\"", "\\12", "\"\"", "4.5.2.1", "", "\"\"\"\"", "\"\"" };
        java.util.LinkedHashSet<java.lang.String> strSet20 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet20, strArray19);
        python3Target3.badWords = strSet20;
        python3Target0.badWords = strSet20;
        java.lang.String str25 = python3Target0.encodeIntAsCharEscape((int) (byte) 100);
        java.lang.String str27 = python3Target0.getTargetStringLiteralFromString("12");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str29 = python3Target0.getAltLabelContextStructName("Conte");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "4.5.2.1" + "'", str5, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\"\"" + "'", str9, "\"\"");
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "d" + "'", str25, "d");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "\"12\"" + "'", str27, "\"12\"");
    }

    @Test
    public void test1548() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1548");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!", "hi!" };
        python3Target0.targetCharValueEscape = strArray5;
        java.lang.String str8 = python3Target0.getTargetStringLiteralFromString("\"\"");
        java.lang.String str10 = python3Target0.getTargetStringLiteralFromString("\"\"");
        boolean boolean11 = python3Target0.wantsBaseVisitor();
        org.antlr.v4.tool.Grammar grammar12 = null;
        org.stringtemplate.v4.ST sT13 = null;
        python3Target0.genRecognizerHeaderFile(grammar12, sT13, "");
        java.lang.String str16 = python3Target0.language;
        java.lang.String str17 = python3Target0.getVersion();
        boolean boolean18 = python3Target0.templatesExist();
        org.antlr.v4.tool.ast.GrammarAST grammarAST19 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean20 = python3Target0.grammarSymbolCausesIssueInGeneratedCode(grammarAST19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\"\"\"\"" + "'", str8, "\"\"\"\"");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\"\"\"\"" + "'", str10, "\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "4.5.2.1" + "'", str17, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    }

    @Test
    public void test1549() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1549");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str2 = python3Target0.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = null;
        python3Target0.gen = codeGenerator3;
        java.lang.String str5 = python3Target0.getVersion();
        org.antlr.v4.codegen.target.Python3Target python3Target6 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean7 = python3Target6.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup8 = python3Target6.templates;
        org.antlr.v4.tool.Grammar grammar9 = null;
        org.stringtemplate.v4.ST sT10 = null;
        python3Target6.genRecognizerHeaderFile(grammar9, sT10, "");
        python3Target6.language = "Python3";
        int int15 = python3Target6.getSerializedATNSegmentLimit();
        org.stringtemplate.v4.STGroup sTGroup16 = python3Target6.loadTemplates();
        python3Target0.templates = sTGroup16;
        java.lang.String str19 = python3Target0.getAltLabelContextStructName("12");
        org.antlr.v4.codegen.target.Python3Target python3Target20 = new org.antlr.v4.codegen.target.Python3Target();
        python3Target20.language = "4.5.2.1";
        org.antlr.v4.codegen.CodeGenerator codeGenerator23 = python3Target20.getCodeGenerator();
        org.antlr.v4.codegen.CodeGenerator codeGenerator24 = python3Target20.gen;
        org.antlr.v4.codegen.CodeGenerator codeGenerator25 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target26 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator25);
        java.lang.String str28 = python3Target26.getTargetStringLiteralFromString("");
        int int29 = python3Target26.getSerializedATNSegmentLimit();
        boolean boolean30 = python3Target26.wantsBaseVisitor();
        org.stringtemplate.v4.STGroup sTGroup31 = python3Target26.loadTemplates();
        python3Target20.templates = sTGroup31;
        org.antlr.v4.codegen.CodeGenerator codeGenerator33 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target34 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator33);
        java.util.Set<java.lang.String> strSet35 = python3Target34.getBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator36 = null;
        python3Target34.gen = codeGenerator36;
        java.lang.String str39 = python3Target34.getAltLabelContextStructName("hi!");
        java.lang.String str42 = python3Target34.getTargetStringLiteralFromString("\"hi!\"", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator43 = null;
        python3Target34.gen = codeGenerator43;
        org.antlr.v4.tool.Grammar grammar45 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target46 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray47 = python3Target46.targetCharValueEscape;
        org.stringtemplate.v4.STGroup sTGroup48 = python3Target46.templates;
        int int49 = python3Target46.getInlineTestSetWordSize();
        org.antlr.v4.codegen.CodeGenerator codeGenerator50 = python3Target46.gen;
        org.antlr.v4.tool.Grammar grammar51 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target52 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str54 = python3Target52.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.tool.Grammar grammar55 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target56 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean57 = python3Target56.supportsOverloadedMethods();
        java.lang.String str58 = python3Target56.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator59 = null;
        java.lang.String str62 = python3Target56.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator59, "", true);
        java.lang.String str63 = python3Target56.getVersion();
        org.antlr.v4.tool.Grammar grammar64 = null;
        int[] intArray65 = new int[] {};
        java.lang.String[] strArray66 = python3Target56.getTokenTypesAsTargetLabels(grammar64, intArray65);
        java.lang.String[] strArray67 = python3Target52.getTokenTypesAsTargetLabels(grammar55, intArray65);
        java.lang.String[] strArray68 = python3Target46.getTokenTypesAsTargetLabels(grammar51, intArray65);
        java.lang.String[] strArray69 = python3Target34.getTokenTypesAsTargetLabels(grammar45, intArray65);
        org.antlr.v4.codegen.target.Python3Target.python3Keywords = strArray69;
        python3Target20.targetCharValueEscape = strArray69;
        python3Target0.targetCharValueEscape = strArray69;
        java.util.Set<java.lang.String> strSet73 = python3Target0.getBadWords();
        org.antlr.v4.tool.ast.GrammarAST grammarAST74 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean75 = python3Target0.visibleGrammarSymbolCausesIssueInGeneratedCode(grammarAST74);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "\"\"\"\"\"\"" + "'", str2, "\"\"\"\"\"\"");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "4.5.2.1" + "'", str5, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(sTGroup8);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 29 + "'", int15 == 29);
        org.junit.Assert.assertNotNull(sTGroup16);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "12Context" + "'", str19, "12Context");
        org.junit.Assert.assertNull(codeGenerator23);
        org.junit.Assert.assertNull(codeGenerator24);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "\"\"" + "'", str28, "\"\"");
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 29 + "'", int29 == 29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(sTGroup31);
        org.junit.Assert.assertNotNull(strSet35);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "Hi!Context" + "'", str39, "Hi!Context");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "\"\\\"hi!\\\"\"" + "'", str42, "\"\\\"hi!\\\"\"");
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertNull(sTGroup48);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 64 + "'", int49 == 64);
        org.junit.Assert.assertNull(codeGenerator50);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "\"\"\"\"\"\"" + "'", str54, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "4.5.2.1" + "'", str58, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "\"\"" + "'", str62, "\"\"");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "4.5.2.1" + "'", str63, "4.5.2.1");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[]");
        org.junit.Assert.assertNotNull(strArray66);
        org.junit.Assert.assertNotNull(strArray67);
        org.junit.Assert.assertNotNull(strArray68);
        org.junit.Assert.assertNotNull(strArray69);
        org.junit.Assert.assertNotNull(strSet73);
    }

    @Test
    public void test1550() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1550");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        python3Target0.language = "";
        org.antlr.v4.codegen.target.Python3Target python3Target3 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean4 = python3Target3.supportsOverloadedMethods();
        java.lang.String str5 = python3Target3.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = null;
        java.lang.String str9 = python3Target3.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator6, "", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = null;
        python3Target3.gen = codeGenerator10;
        java.lang.String[] strArray19 = new java.lang.String[] { "\"\"\"\"", "\\12", "\"\"", "4.5.2.1", "", "\"\"\"\"", "\"\"" };
        java.util.LinkedHashSet<java.lang.String> strSet20 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet20, strArray19);
        python3Target3.badWords = strSet20;
        python3Target0.badWords = strSet20;
        java.lang.String str25 = python3Target0.encodeIntAsCharEscape((int) (byte) 100);
        java.lang.String str26 = python3Target0.getLanguage();
        java.lang.String str28 = python3Target0.getTargetStringLiteralFromString("\"\\0\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator29 = null;
        python3Target0.gen = codeGenerator29;
        org.antlr.v4.codegen.CodeGenerator codeGenerator31 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target32 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator31);
        java.lang.String str33 = python3Target32.getLanguage();
        java.lang.String str35 = python3Target32.getImplicitSetLabel("Python3");
        org.antlr.v4.codegen.CodeGenerator codeGenerator36 = null;
        java.lang.String str39 = python3Target32.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator36, "\"\"\"\"", true);
        org.stringtemplate.v4.STGroup sTGroup40 = python3Target32.loadTemplates();
        python3Target0.templates = sTGroup40;
        org.antlr.v4.tool.ast.GrammarAST grammarAST42 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean43 = python3Target0.visibleGrammarSymbolCausesIssueInGeneratedCode(grammarAST42);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "4.5.2.1" + "'", str5, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\"\"" + "'", str9, "\"\"");
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "d" + "'", str25, "d");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "\"\"\\0\"\"" + "'", str28, "\"\"\\0\"\"");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "Python3" + "'", str33, "Python3");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "_tsetPython3" + "'", str35, "_tsetPython3");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "\"\\\"\\\"\"" + "'", str39, "\"\\\"\\\"\"");
        org.junit.Assert.assertNotNull(sTGroup40);
    }

    @Test
    public void test1551() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1551");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray1 = python3Target0.targetCharValueEscape;
        java.lang.String str2 = python3Target0.getVersion();
        org.antlr.v4.codegen.target.Python3Target python3Target3 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str5 = python3Target3.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = null;
        python3Target3.gen = codeGenerator6;
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target9 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator8);
        java.util.Set<java.lang.String> strSet10 = python3Target9.getBadWords();
        python3Target3.badWords = strSet10;
        python3Target0.badWords = strSet10;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str14 = python3Target0.getAltLabelContextStructName("_\"\"\"_tset12\"\"\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "4.5.2.1" + "'", str2, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "\"\"\"\"\"\"" + "'", str5, "\"\"\"\"\"\"");
        org.junit.Assert.assertNotNull(strSet10);
    }

    @Test
    public void test1552() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1552");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        org.antlr.v4.tool.Grammar grammar3 = null;
        org.stringtemplate.v4.ST sT4 = null;
        python3Target0.genRecognizerHeaderFile(grammar3, sT4, "");
        org.antlr.v4.codegen.target.Python3Target python3Target7 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray8 = python3Target7.targetCharValueEscape;
        python3Target0.targetCharValueEscape = strArray8;
        boolean boolean10 = python3Target0.supportsOverloadedMethods();
        boolean boolean11 = python3Target0.wantsBaseListener();
        java.lang.String str13 = python3Target0.getTargetStringLiteralFromString("_tset12");
        boolean boolean14 = python3Target0.wantsBaseListener();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "\"_tset12\"" + "'", str13, "\"_tset12\"");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test1553() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1553");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        java.lang.String str2 = python3Target0.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = python3Target0.getCodeGenerator();
        org.stringtemplate.v4.STGroup sTGroup4 = null;
        python3Target0.templates = sTGroup4;
        org.stringtemplate.v4.STGroup sTGroup6 = python3Target0.templates;
        java.lang.String[] strArray7 = python3Target0.targetCharValueEscape;
        java.lang.String str10 = python3Target0.getTargetStringLiteralFromString("\"12\"", false);
        org.antlr.v4.codegen.target.Python3Target python3Target11 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean12 = python3Target11.supportsOverloadedMethods();
        java.lang.String str13 = python3Target11.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator14 = python3Target11.getCodeGenerator();
        org.stringtemplate.v4.STGroup sTGroup15 = null;
        python3Target11.templates = sTGroup15;
        org.stringtemplate.v4.STGroup sTGroup17 = python3Target11.templates;
        java.lang.String[] strArray18 = python3Target11.targetCharValueEscape;
        java.util.Set<java.lang.String> strSet19 = python3Target11.badWords;
        java.util.Set<java.lang.String> strSet20 = python3Target11.getBadWords();
        python3Target0.badWords = strSet20;
        int int22 = python3Target0.getSerializedATNSegmentLimit();
        python3Target0.language = "\"_tset12\"";
        java.lang.String[] strArray25 = python3Target0.targetCharValueEscape;
        org.antlr.v4.tool.ast.GrammarAST grammarAST26 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean27 = python3Target0.grammarSymbolCausesIssueInGeneratedCode(grammarAST26);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "4.5.2.1" + "'", str2, "4.5.2.1");
        org.junit.Assert.assertNull(codeGenerator3);
        org.junit.Assert.assertNull(sTGroup6);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\"12\"" + "'", str10, "\"12\"");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "4.5.2.1" + "'", str13, "4.5.2.1");
        org.junit.Assert.assertNull(codeGenerator14);
        org.junit.Assert.assertNull(sTGroup17);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertNotNull(strSet19);
        org.junit.Assert.assertNotNull(strSet20);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 29 + "'", int22 == 29);
        org.junit.Assert.assertNotNull(strArray25);
    }

    @Test
    public void test1554() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1554");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!", "hi!" };
        python3Target0.targetCharValueEscape = strArray5;
        java.lang.String[] strArray8 = new java.lang.String[] { "hi!" };
        org.antlr.v4.codegen.target.Python3Target.python3Keywords = strArray8;
        python3Target0.targetCharValueEscape = strArray8;
        java.util.Set<java.lang.String> strSet11 = python3Target0.getBadWords();
        int int12 = python3Target0.getInlineTestSetWordSize();
        boolean boolean13 = python3Target0.wantsBaseListener();
        org.antlr.v4.tool.Grammar grammar14 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target15 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray16 = python3Target15.targetCharValueEscape;
        org.stringtemplate.v4.STGroup sTGroup17 = python3Target15.templates;
        int int18 = python3Target15.getInlineTestSetWordSize();
        org.antlr.v4.codegen.CodeGenerator codeGenerator19 = python3Target15.gen;
        org.antlr.v4.tool.Grammar grammar20 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target21 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str23 = python3Target21.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.tool.Grammar grammar24 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target25 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean26 = python3Target25.supportsOverloadedMethods();
        java.lang.String str27 = python3Target25.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator28 = null;
        java.lang.String str31 = python3Target25.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator28, "", true);
        java.lang.String str32 = python3Target25.getVersion();
        org.antlr.v4.tool.Grammar grammar33 = null;
        int[] intArray34 = new int[] {};
        java.lang.String[] strArray35 = python3Target25.getTokenTypesAsTargetLabels(grammar33, intArray34);
        java.lang.String[] strArray36 = python3Target21.getTokenTypesAsTargetLabels(grammar24, intArray34);
        java.lang.String[] strArray37 = python3Target15.getTokenTypesAsTargetLabels(grammar20, intArray34);
        java.lang.String[] strArray38 = python3Target0.getTokenTypesAsTargetLabels(grammar14, intArray34);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str40 = python3Target0.getAltLabelContextStructName("_\"\"4.5.2.1\"\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(strSet11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 64 + "'", int12 == 64);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertNull(sTGroup17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 64 + "'", int18 == 64);
        org.junit.Assert.assertNull(codeGenerator19);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "\"\"\"\"\"\"" + "'", str23, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "4.5.2.1" + "'", str27, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "\"\"" + "'", str31, "\"\"");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "4.5.2.1" + "'", str32, "4.5.2.1");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[]");
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertNotNull(strArray38);
    }

    @Test
    public void test1555() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1555");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python3Target1.getBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = null;
        python3Target1.gen = codeGenerator3;
        java.lang.String str6 = python3Target1.getAltLabelContextStructName("hi!");
        java.lang.String str9 = python3Target1.getTargetStringLiteralFromString("\"hi!\"", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = null;
        python3Target1.gen = codeGenerator10;
        org.antlr.v4.tool.Grammar grammar12 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target13 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray14 = python3Target13.targetCharValueEscape;
        org.stringtemplate.v4.STGroup sTGroup15 = python3Target13.templates;
        int int16 = python3Target13.getInlineTestSetWordSize();
        org.antlr.v4.codegen.CodeGenerator codeGenerator17 = python3Target13.gen;
        org.antlr.v4.tool.Grammar grammar18 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target19 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str21 = python3Target19.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.tool.Grammar grammar22 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target23 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean24 = python3Target23.supportsOverloadedMethods();
        java.lang.String str25 = python3Target23.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator26 = null;
        java.lang.String str29 = python3Target23.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator26, "", true);
        java.lang.String str30 = python3Target23.getVersion();
        org.antlr.v4.tool.Grammar grammar31 = null;
        int[] intArray32 = new int[] {};
        java.lang.String[] strArray33 = python3Target23.getTokenTypesAsTargetLabels(grammar31, intArray32);
        java.lang.String[] strArray34 = python3Target19.getTokenTypesAsTargetLabels(grammar22, intArray32);
        java.lang.String[] strArray35 = python3Target13.getTokenTypesAsTargetLabels(grammar18, intArray32);
        java.lang.String[] strArray36 = python3Target1.getTokenTypesAsTargetLabels(grammar12, intArray32);
        java.lang.String str38 = python3Target1.getAltLabelContextStructName("\"Python3\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator39 = python3Target1.gen;
        org.antlr.v4.codegen.target.Python3Target python3Target40 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean41 = python3Target40.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup42 = python3Target40.templates;
        java.lang.String[] strArray45 = new java.lang.String[] { "hi!", "hi!" };
        python3Target40.targetCharValueEscape = strArray45;
        org.antlr.v4.codegen.CodeGenerator codeGenerator47 = null;
        java.lang.String str50 = python3Target40.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator47, "", false);
        java.util.Set<java.lang.String> strSet51 = python3Target40.badWords;
        java.util.Set<java.lang.String> strSet52 = python3Target40.badWords;
        python3Target1.badWords = strSet52;
        org.antlr.v4.codegen.target.Python3Target python3Target54 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray55 = python3Target54.targetCharValueEscape;
        java.util.Set<java.lang.String> strSet56 = python3Target54.badWords;
        python3Target1.badWords = strSet56;
        org.stringtemplate.v4.STGroup sTGroup58 = python3Target1.getTemplates();
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Hi!Context" + "'", str6, "Hi!Context");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\"\\\"hi!\\\"\"" + "'", str9, "\"\\\"hi!\\\"\"");
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertNull(sTGroup15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 64 + "'", int16 == 64);
        org.junit.Assert.assertNull(codeGenerator17);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "\"\"\"\"\"\"" + "'", str21, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "4.5.2.1" + "'", str25, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "\"\"" + "'", str29, "\"\"");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "4.5.2.1" + "'", str30, "4.5.2.1");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[]");
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "\"Python3\"Context" + "'", str38, "\"Python3\"Context");
        org.junit.Assert.assertNull(codeGenerator39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNull(sTGroup42);
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "" + "'", str50, "");
        org.junit.Assert.assertNotNull(strSet51);
        org.junit.Assert.assertNotNull(strSet52);
        org.junit.Assert.assertNotNull(strArray55);
        org.junit.Assert.assertNotNull(strSet56);
        org.junit.Assert.assertNotNull(sTGroup58);
    }

    @Test
    public void test1556() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1556");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        org.antlr.v4.tool.Grammar grammar3 = null;
        org.stringtemplate.v4.ST sT4 = null;
        python3Target0.genRecognizerHeaderFile(grammar3, sT4, "");
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = python3Target0.getCodeGenerator();
        java.util.Set<java.lang.String> strSet8 = python3Target0.badWords;
        boolean boolean9 = python3Target0.templatesExist();
        java.lang.String str12 = python3Target0.getTargetStringLiteralFromString("\"\\12\"", false);
        int int13 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str16 = python3Target0.getTargetStringLiteralFromString("", true);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertNull(codeGenerator7);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "\"\\12\"" + "'", str12, "\"\\12\"");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 64 + "'", int13 == 64);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "\"\"" + "'", str16, "\"\"");
    }

    @Test
    public void test1557() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1557");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.lang.String str3 = python3Target1.getTargetStringLiteralFromString("");
        int int4 = python3Target1.getSerializedATNSegmentLimit();
        java.lang.String str5 = python3Target1.getLanguage();
        org.antlr.v4.tool.Grammar grammar6 = null;
        org.stringtemplate.v4.ST sT7 = null;
        python3Target1.genRecognizerHeaderFile(grammar6, sT7, "\\\"_tsetPython3\\\"Context");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "\"\"" + "'", str3, "\"\"");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 29 + "'", int4 == 29);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Python3" + "'", str5, "Python3");
    }

    @Test
    public void test1558() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1558");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray1 = python3Target0.targetCharValueEscape;
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        int int3 = python3Target0.getInlineTestSetWordSize();
        org.antlr.v4.codegen.CodeGenerator codeGenerator4 = python3Target0.gen;
        org.antlr.v4.tool.Grammar grammar5 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target6 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str8 = python3Target6.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.tool.Grammar grammar9 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target10 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean11 = python3Target10.supportsOverloadedMethods();
        java.lang.String str12 = python3Target10.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator13 = null;
        java.lang.String str16 = python3Target10.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator13, "", true);
        java.lang.String str17 = python3Target10.getVersion();
        org.antlr.v4.tool.Grammar grammar18 = null;
        int[] intArray19 = new int[] {};
        java.lang.String[] strArray20 = python3Target10.getTokenTypesAsTargetLabels(grammar18, intArray19);
        java.lang.String[] strArray21 = python3Target6.getTokenTypesAsTargetLabels(grammar9, intArray19);
        java.lang.String[] strArray22 = python3Target0.getTokenTypesAsTargetLabels(grammar5, intArray19);
        java.lang.String[] strArray23 = python3Target0.targetCharValueEscape;
        int int24 = python3Target0.getInlineTestSetWordSize();
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 64 + "'", int3 == 64);
        org.junit.Assert.assertNull(codeGenerator4);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\"\"\"\"\"\"" + "'", str8, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "4.5.2.1" + "'", str12, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "\"\"" + "'", str16, "\"\"");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "4.5.2.1" + "'", str17, "4.5.2.1");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[]");
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 64 + "'", int24 == 64);
    }

    @Test
    public void test1559() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1559");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        org.antlr.v4.tool.Grammar grammar3 = null;
        org.stringtemplate.v4.ST sT4 = null;
        python3Target0.genRecognizerHeaderFile(grammar3, sT4, "");
        python3Target0.language = "Python3";
        java.util.Set<java.lang.String> strSet9 = null;
        python3Target0.badWords = strSet9;
        org.antlr.v4.codegen.CodeGenerator codeGenerator11 = null;
        java.lang.String str14 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator11, "\"Hi!Context\"", false);
        java.lang.String str16 = python3Target0.getListLabel("Python3");
        org.antlr.v4.codegen.CodeGenerator codeGenerator17 = python3Target0.getCodeGenerator();
        java.lang.String str18 = python3Target0.getLanguage();
        org.antlr.v4.tool.ast.GrammarAST grammarAST19 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str20 = python3Target0.getLoopLabel(grammarAST19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Hi!Context" + "'", str14, "Hi!Context");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Python3" + "'", str16, "Python3");
        org.junit.Assert.assertNull(codeGenerator17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Python3" + "'", str18, "Python3");
    }

    @Test
    public void test1560() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1560");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!", "hi!" };
        python3Target0.targetCharValueEscape = strArray5;
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = null;
        java.lang.String str10 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator7, "", false);
        int int11 = python3Target0.getSerializedATNSegmentLimit();
        java.lang.String str12 = python3Target0.getVersion();
        boolean boolean13 = python3Target0.supportsOverloadedMethods();
        python3Target0.addBadWords();
        boolean boolean15 = python3Target0.wantsBaseVisitor();
        int int16 = python3Target0.getInlineTestSetWordSize();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str18 = python3Target0.getListLabel("\"\"\\\"\\\"\\\"\\\"\\\"\\\"Context\"\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 29 + "'", int11 == 29);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "4.5.2.1" + "'", str12, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 64 + "'", int16 == 64);
    }

    @Test
    public void test1561() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1561");
        java.lang.String str1 = org.stringtemplate.v4.StringRenderer.escapeHTML("_tset\\\"\\\"");
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "_tset\\\"\\\"" + "'", str1, "_tset\\\"\\\"");
    }

    @Test
    public void test1562() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1562");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        org.antlr.v4.tool.Grammar grammar3 = null;
        org.stringtemplate.v4.ST sT4 = null;
        python3Target0.genRecognizerHeaderFile(grammar3, sT4, "");
        python3Target0.language = "Python3";
        java.lang.String str9 = python3Target0.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = null;
        python3Target0.gen = codeGenerator10;
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "4.5.2.1" + "'", str9, "4.5.2.1");
    }

    @Test
    public void test1563() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1563");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray1 = python3Target0.targetCharValueEscape;
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = null;
        java.lang.String str6 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator3, "\"\\12\"", false);
        java.lang.String str7 = python3Target0.getLanguage();
        java.lang.String str9 = python3Target0.getTargetStringLiteralFromString("Hi!Context");
        java.lang.String str12 = python3Target0.getTargetStringLiteralFromString("\"\"\\0\"\"", true);
        org.stringtemplate.v4.STGroup sTGroup13 = python3Target0.templates;
        org.antlr.v4.codegen.CodeGenerator codeGenerator14 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target15 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator14);
        java.util.Set<java.lang.String> strSet16 = python3Target15.getBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator17 = null;
        python3Target15.gen = codeGenerator17;
        java.lang.String str20 = python3Target15.getAltLabelContextStructName("hi!");
        java.lang.String str23 = python3Target15.getTargetStringLiteralFromString("\"hi!\"", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator24 = null;
        python3Target15.gen = codeGenerator24;
        org.antlr.v4.tool.Grammar grammar26 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target27 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray28 = python3Target27.targetCharValueEscape;
        org.stringtemplate.v4.STGroup sTGroup29 = python3Target27.templates;
        int int30 = python3Target27.getInlineTestSetWordSize();
        org.antlr.v4.codegen.CodeGenerator codeGenerator31 = python3Target27.gen;
        org.antlr.v4.tool.Grammar grammar32 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target33 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str35 = python3Target33.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.tool.Grammar grammar36 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target37 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean38 = python3Target37.supportsOverloadedMethods();
        java.lang.String str39 = python3Target37.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator40 = null;
        java.lang.String str43 = python3Target37.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator40, "", true);
        java.lang.String str44 = python3Target37.getVersion();
        org.antlr.v4.tool.Grammar grammar45 = null;
        int[] intArray46 = new int[] {};
        java.lang.String[] strArray47 = python3Target37.getTokenTypesAsTargetLabels(grammar45, intArray46);
        java.lang.String[] strArray48 = python3Target33.getTokenTypesAsTargetLabels(grammar36, intArray46);
        java.lang.String[] strArray49 = python3Target27.getTokenTypesAsTargetLabels(grammar32, intArray46);
        java.lang.String[] strArray50 = python3Target15.getTokenTypesAsTargetLabels(grammar26, intArray46);
        java.lang.String[] strArray51 = python3Target15.targetCharValueEscape;
        java.lang.String str53 = python3Target15.getImplicitRuleLabel("#");
        java.lang.String str55 = python3Target15.getAltLabelContextStructName("\"\\\"\\\"\\\\1\\\"\\\"\"");
        java.util.Set<java.lang.String> strSet56 = python3Target15.badWords;
        python3Target0.badWords = strSet56;
        org.antlr.v4.codegen.target.Python3Target python3Target58 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray59 = python3Target58.targetCharValueEscape;
        java.lang.String str60 = python3Target58.language;
        int int61 = python3Target58.getSerializedATNSegmentLimit();
        org.antlr.v4.codegen.CodeGenerator codeGenerator62 = python3Target58.getCodeGenerator();
        org.antlr.v4.codegen.CodeGenerator codeGenerator63 = null;
        java.lang.String str66 = python3Target58.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator63, "_tset\"\\\"\\\"hi!\\\"\\\"\"", true);
        java.lang.String str67 = python3Target58.language;
        java.lang.String str68 = python3Target58.getLanguage();
        int int69 = python3Target58.getSerializedATNSegmentLimit();
        org.antlr.v4.codegen.target.Python3Target python3Target70 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean71 = python3Target70.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup72 = python3Target70.templates;
        java.lang.String[] strArray75 = new java.lang.String[] { "hi!", "hi!" };
        python3Target70.targetCharValueEscape = strArray75;
        java.lang.String[] strArray78 = new java.lang.String[] { "hi!" };
        org.antlr.v4.codegen.target.Python3Target.python3Keywords = strArray78;
        python3Target70.targetCharValueEscape = strArray78;
        java.lang.String str82 = python3Target70.getTargetStringLiteralFromString("\"\"\"\"\"\"");
        org.antlr.v4.tool.Grammar grammar83 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target84 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean85 = python3Target84.supportsOverloadedMethods();
        java.lang.String str86 = python3Target84.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator87 = null;
        java.lang.String str90 = python3Target84.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator87, "", true);
        java.lang.String str91 = python3Target84.getVersion();
        org.antlr.v4.tool.Grammar grammar92 = null;
        int[] intArray93 = new int[] {};
        java.lang.String[] strArray94 = python3Target84.getTokenTypesAsTargetLabels(grammar92, intArray93);
        java.lang.String[] strArray95 = python3Target70.getTokenTypesAsTargetLabels(grammar83, intArray93);
        python3Target58.targetCharValueEscape = strArray95;
        python3Target0.targetCharValueEscape = strArray95;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str99 = python3Target0.getAltLabelContextStructName("_tsettset\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"ContextContextConte");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "12" + "'", str6, "12");
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\"Hi!Context\"" + "'", str9, "\"Hi!Context\"");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "\"\"\"\\0\"\"\"" + "'", str12, "\"\"\"\\0\"\"\"");
        org.junit.Assert.assertNull(sTGroup13);
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "Hi!Context" + "'", str20, "Hi!Context");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "\"\\\"hi!\\\"\"" + "'", str23, "\"\\\"hi!\\\"\"");
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertNull(sTGroup29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 64 + "'", int30 == 64);
        org.junit.Assert.assertNull(codeGenerator31);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "\"\"\"\"\"\"" + "'", str35, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "4.5.2.1" + "'", str39, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "\"\"" + "'", str43, "\"\"");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "4.5.2.1" + "'", str44, "4.5.2.1");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[]");
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertNotNull(strArray49);
        org.junit.Assert.assertNotNull(strArray50);
        org.junit.Assert.assertNotNull(strArray51);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "_#" + "'", str53, "_#");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "\"\\\"\\\"\\\\1\\\"\\\"\"Context" + "'", str55, "\"\\\"\\\"\\\\1\\\"\\\"\"Context");
        org.junit.Assert.assertNotNull(strSet56);
        org.junit.Assert.assertNotNull(strArray59);
        org.junit.Assert.assertNull(str60);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 29 + "'", int61 == 29);
        org.junit.Assert.assertNull(codeGenerator62);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "\"tset\\\"\\\"\\\"hi!\\\"\\\"\"" + "'", str66, "\"tset\\\"\\\"\\\"hi!\\\"\\\"\"");
        org.junit.Assert.assertNull(str67);
        org.junit.Assert.assertNull(str68);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 29 + "'", int69 == 29);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNull(sTGroup72);
        org.junit.Assert.assertNotNull(strArray75);
        org.junit.Assert.assertNotNull(strArray78);
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "\"\"\"\"\"\"\"\"" + "'", str82, "\"\"\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "4.5.2.1" + "'", str86, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "\"\"" + "'", str90, "\"\"");
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "4.5.2.1" + "'", str91, "4.5.2.1");
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray93), "[]");
        org.junit.Assert.assertNotNull(strArray94);
        org.junit.Assert.assertNotNull(strArray95);
    }

    @Test
    public void test1564() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1564");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.lang.String str2 = python3Target1.getVersion();
        int int3 = python3Target1.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet4 = python3Target1.badWords;
        org.antlr.v4.codegen.target.Python3Target python3Target5 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean6 = python3Target5.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup7 = python3Target5.templates;
        java.lang.String[] strArray10 = new java.lang.String[] { "hi!", "hi!" };
        python3Target5.targetCharValueEscape = strArray10;
        java.lang.String str13 = python3Target5.getTargetStringLiteralFromString("\"\"");
        java.lang.String str14 = python3Target5.getLanguage();
        java.util.Set<java.lang.String> strSet15 = python3Target5.badWords;
        python3Target1.badWords = strSet15;
        python3Target1.language = "\"_tset12\"";
        boolean boolean19 = python3Target1.wantsBaseListener();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "4.5.2.1" + "'", str2, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 64 + "'", int3 == 64);
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(sTGroup7);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "\"\"\"\"" + "'", str13, "\"\"\"\"");
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(strSet15);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    }

    @Test
    public void test1565() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1565");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        org.antlr.v4.tool.Grammar grammar3 = null;
        org.stringtemplate.v4.ST sT4 = null;
        python3Target0.genRecognizerHeaderFile(grammar3, sT4, "");
        python3Target0.language = "Python3";
        int int9 = python3Target0.getSerializedATNSegmentLimit();
        org.stringtemplate.v4.STGroup sTGroup10 = python3Target0.loadTemplates();
        python3Target0.addBadWords();
        org.antlr.v4.tool.ast.GrammarAST grammarAST12 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str13 = python3Target0.getLoopCounter(grammarAST12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 29 + "'", int9 == 29);
        org.junit.Assert.assertNotNull(sTGroup10);
    }

    @Test
    public void test1566() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1566");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray1 = python3Target0.targetCharValueEscape;
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        int int3 = python3Target0.getInlineTestSetWordSize();
        org.antlr.v4.codegen.CodeGenerator codeGenerator4 = python3Target0.gen;
        org.antlr.v4.tool.Grammar grammar5 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target6 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str8 = python3Target6.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.tool.Grammar grammar9 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target10 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean11 = python3Target10.supportsOverloadedMethods();
        java.lang.String str12 = python3Target10.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator13 = null;
        java.lang.String str16 = python3Target10.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator13, "", true);
        java.lang.String str17 = python3Target10.getVersion();
        org.antlr.v4.tool.Grammar grammar18 = null;
        int[] intArray19 = new int[] {};
        java.lang.String[] strArray20 = python3Target10.getTokenTypesAsTargetLabels(grammar18, intArray19);
        java.lang.String[] strArray21 = python3Target6.getTokenTypesAsTargetLabels(grammar9, intArray19);
        java.lang.String[] strArray22 = python3Target0.getTokenTypesAsTargetLabels(grammar5, intArray19);
        java.lang.String[] strArray45 = new java.lang.String[] { "\"\\\"\\\"\"", "DContext", "", "hi!", "d", "\"\"\"\"\"\"", "\"\"\"\"\"\"", "_tsetPython3", "\"hi!\"", "\"hi!\"", "Hi!Context", "\"\"\"\"\"\"", "\"hi!\"", "12", "\"4.5.2.1\"", "DContext", "Hi!Context", "Python3", "\"hi!\"", "", "\"\"", "\\\"4.5.2.1\\\"" };
        java.util.LinkedHashSet<java.lang.String> strSet46 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet46, strArray45);
        python3Target0.badWords = strSet46;
        python3Target0.addBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator50 = null;
        java.lang.String str53 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator50, "\"\"\"\"\"\"\"\"ContextContextContext", false);
        org.antlr.v4.tool.ast.GrammarAST grammarAST54 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str55 = python3Target0.getLoopCounter(grammarAST54);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 64 + "'", int3 == 64);
        org.junit.Assert.assertNull(codeGenerator4);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\"\"\"\"\"\"" + "'", str8, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "4.5.2.1" + "'", str12, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "\"\"" + "'", str16, "\"\"");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "4.5.2.1" + "'", str17, "4.5.2.1");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[]");
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "\\\"\\\"\\\"\\\"\\\"\\\"\\\"ContextContextContex" + "'", str53, "\\\"\\\"\\\"\\\"\\\"\\\"\\\"ContextContextContex");
    }

    @Test
    public void test1567() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1567");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str2 = python3Target0.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.tool.Grammar grammar3 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target4 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean5 = python3Target4.supportsOverloadedMethods();
        java.lang.String str6 = python3Target4.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = null;
        java.lang.String str10 = python3Target4.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator7, "", true);
        java.lang.String str11 = python3Target4.getVersion();
        org.antlr.v4.tool.Grammar grammar12 = null;
        int[] intArray13 = new int[] {};
        java.lang.String[] strArray14 = python3Target4.getTokenTypesAsTargetLabels(grammar12, intArray13);
        java.lang.String[] strArray15 = python3Target0.getTokenTypesAsTargetLabels(grammar3, intArray13);
        java.lang.String[] strArray16 = python3Target0.targetCharValueEscape;
        org.antlr.v4.codegen.target.Python3Target python3Target17 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray18 = python3Target17.targetCharValueEscape;
        org.stringtemplate.v4.STGroup sTGroup19 = python3Target17.templates;
        org.antlr.v4.codegen.CodeGenerator codeGenerator20 = null;
        java.lang.String str23 = python3Target17.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator20, "\"\\12\"", false);
        int int24 = python3Target17.getInlineTestSetWordSize();
        org.antlr.v4.codegen.CodeGenerator codeGenerator25 = python3Target17.getCodeGenerator();
        org.antlr.v4.tool.Grammar grammar26 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator27 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target28 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator27);
        java.lang.String str29 = python3Target28.getVersion();
        int int30 = python3Target28.getSerializedATNSegmentLimit();
        java.lang.String str31 = python3Target28.getVersion();
        boolean boolean32 = python3Target28.wantsBaseListener();
        python3Target28.addBadWords();
        org.antlr.v4.tool.Grammar grammar34 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator35 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target36 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator35);
        java.util.Set<java.lang.String> strSet37 = python3Target36.getBadWords();
        org.antlr.v4.codegen.target.Python3Target python3Target38 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str40 = python3Target38.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.codegen.target.Python3Target python3Target41 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean42 = python3Target41.supportsOverloadedMethods();
        java.util.Set<java.lang.String> strSet43 = python3Target41.badWords;
        python3Target38.badWords = strSet43;
        python3Target36.badWords = strSet43;
        java.util.Set<java.lang.String> strSet46 = python3Target36.badWords;
        org.antlr.v4.codegen.CodeGenerator codeGenerator47 = python3Target36.getCodeGenerator();
        org.antlr.v4.tool.Grammar grammar48 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target49 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean50 = python3Target49.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup51 = python3Target49.templates;
        org.antlr.v4.tool.Grammar grammar52 = null;
        org.stringtemplate.v4.ST sT53 = null;
        python3Target49.genRecognizerHeaderFile(grammar52, sT53, "");
        python3Target49.language = "Python3";
        java.util.Set<java.lang.String> strSet58 = null;
        python3Target49.badWords = strSet58;
        org.antlr.v4.codegen.CodeGenerator codeGenerator60 = null;
        java.lang.String str63 = python3Target49.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator60, "\"Hi!Context\"", false);
        java.lang.String str65 = python3Target49.getListLabel("Python3");
        java.lang.String str67 = python3Target49.getTargetStringLiteralFromString("\\0");
        org.antlr.v4.tool.Grammar grammar68 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target69 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str71 = python3Target69.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.tool.Grammar grammar72 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target73 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean74 = python3Target73.supportsOverloadedMethods();
        java.lang.String str75 = python3Target73.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator76 = null;
        java.lang.String str79 = python3Target73.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator76, "", true);
        java.lang.String str80 = python3Target73.getVersion();
        org.antlr.v4.tool.Grammar grammar81 = null;
        int[] intArray82 = new int[] {};
        java.lang.String[] strArray83 = python3Target73.getTokenTypesAsTargetLabels(grammar81, intArray82);
        java.lang.String[] strArray84 = python3Target69.getTokenTypesAsTargetLabels(grammar72, intArray82);
        java.lang.String[] strArray85 = python3Target49.getTokenTypesAsTargetLabels(grammar68, intArray82);
        java.lang.String[] strArray86 = python3Target36.getTokenTypesAsTargetLabels(grammar48, intArray82);
        java.lang.String[] strArray87 = python3Target28.getTokenTypesAsTargetLabels(grammar34, intArray82);
        java.lang.String[] strArray88 = python3Target17.getTokenTypesAsTargetLabels(grammar26, intArray82);
        python3Target0.targetCharValueEscape = strArray88;
        org.antlr.v4.codegen.target.Python3Target.python3Keywords = strArray88;
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "\"\"\"\"\"\"" + "'", str2, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "4.5.2.1" + "'", str6, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\"\"" + "'", str10, "\"\"");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "4.5.2.1" + "'", str11, "4.5.2.1");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[]");
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertNull(sTGroup19);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "12" + "'", str23, "12");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 64 + "'", int24 == 64);
        org.junit.Assert.assertNull(codeGenerator25);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "4.5.2.1" + "'", str29, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 29 + "'", int30 == 29);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "4.5.2.1" + "'", str31, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(strSet37);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "\"\"\"\"\"\"" + "'", str40, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(strSet43);
        org.junit.Assert.assertNotNull(strSet46);
        org.junit.Assert.assertNull(codeGenerator47);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNull(sTGroup51);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "Hi!Context" + "'", str63, "Hi!Context");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "Python3" + "'", str65, "Python3");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "\"\\0\"" + "'", str67, "\"\\0\"");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "\"\"\"\"\"\"" + "'", str71, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "4.5.2.1" + "'", str75, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "\"\"" + "'", str79, "\"\"");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "4.5.2.1" + "'", str80, "4.5.2.1");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[]");
        org.junit.Assert.assertNotNull(strArray83);
        org.junit.Assert.assertNotNull(strArray84);
        org.junit.Assert.assertNotNull(strArray85);
        org.junit.Assert.assertNotNull(strArray86);
        org.junit.Assert.assertNotNull(strArray87);
        org.junit.Assert.assertNotNull(strArray88);
    }

    @Test
    public void test1568() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1568");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        python3Target0.language = "";
        org.antlr.v4.codegen.target.Python3Target python3Target3 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean4 = python3Target3.supportsOverloadedMethods();
        java.lang.String str5 = python3Target3.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = null;
        java.lang.String str9 = python3Target3.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator6, "", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = null;
        python3Target3.gen = codeGenerator10;
        java.lang.String[] strArray19 = new java.lang.String[] { "\"\"\"\"", "\\12", "\"\"", "4.5.2.1", "", "\"\"\"\"", "\"\"" };
        java.util.LinkedHashSet<java.lang.String> strSet20 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet20, strArray19);
        python3Target3.badWords = strSet20;
        python3Target0.badWords = strSet20;
        java.lang.String str25 = python3Target0.encodeIntAsCharEscape((int) (byte) 100);
        java.lang.String str26 = python3Target0.getLanguage();
        boolean boolean27 = python3Target0.supportsOverloadedMethods();
        org.antlr.v4.tool.Grammar grammar28 = null;
        org.stringtemplate.v4.ST sT29 = null;
        python3Target0.genRecognizerHeaderFile(grammar28, sT29, "\"\"\"\\\"\\\"hi!\\\"\\\"\"\"\"");
        org.antlr.v4.codegen.target.Python3Target python3Target32 = new org.antlr.v4.codegen.target.Python3Target();
        python3Target32.language = "";
        java.lang.String str36 = python3Target32.encodeIntAsCharEscape(10);
        org.antlr.v4.codegen.CodeGenerator codeGenerator37 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target38 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator37);
        java.util.Set<java.lang.String> strSet39 = python3Target38.getBadWords();
        java.lang.String str41 = python3Target38.getAltLabelContextStructName("d");
        org.stringtemplate.v4.STGroup sTGroup42 = python3Target38.templates;
        python3Target32.templates = sTGroup42;
        org.antlr.v4.codegen.target.Python3Target python3Target44 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray45 = python3Target44.targetCharValueEscape;
        org.stringtemplate.v4.STGroup sTGroup46 = python3Target44.templates;
        int int47 = python3Target44.getInlineTestSetWordSize();
        int int48 = python3Target44.getSerializedATNSegmentLimit();
        java.util.Set<java.lang.String> strSet49 = python3Target44.badWords;
        python3Target32.badWords = strSet49;
        python3Target0.badWords = strSet49;
        org.antlr.v4.codegen.CodeGenerator codeGenerator52 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target53 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator52);
        java.util.Set<java.lang.String> strSet54 = python3Target53.getBadWords();
        org.antlr.v4.codegen.target.Python3Target python3Target55 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str57 = python3Target55.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.codegen.target.Python3Target python3Target58 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean59 = python3Target58.supportsOverloadedMethods();
        java.util.Set<java.lang.String> strSet60 = python3Target58.badWords;
        python3Target55.badWords = strSet60;
        python3Target53.badWords = strSet60;
        java.util.Set<java.lang.String> strSet63 = python3Target53.badWords;
        java.lang.String str64 = python3Target53.language;
        java.util.Set<java.lang.String> strSet65 = python3Target53.badWords;
        java.lang.String str67 = python3Target53.getListLabel("\"\\\"\\\\\\\"Python3\\\\\\\"\\\"\"");
        org.antlr.v4.codegen.target.Python3Target python3Target68 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean69 = python3Target68.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup70 = python3Target68.templates;
        java.lang.String[] strArray73 = new java.lang.String[] { "hi!", "hi!" };
        python3Target68.targetCharValueEscape = strArray73;
        org.antlr.v4.codegen.CodeGenerator codeGenerator75 = null;
        java.lang.String str78 = python3Target68.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator75, "", false);
        boolean boolean79 = python3Target68.wantsBaseListener();
        org.antlr.v4.codegen.CodeGenerator codeGenerator80 = python3Target68.gen;
        org.antlr.v4.codegen.target.Python3Target python3Target81 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray82 = python3Target81.targetCharValueEscape;
        java.lang.String str83 = python3Target81.language;
        int int84 = python3Target81.getSerializedATNSegmentLimit();
        org.antlr.v4.codegen.CodeGenerator codeGenerator85 = null;
        python3Target81.gen = codeGenerator85;
        org.antlr.v4.codegen.CodeGenerator codeGenerator87 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target88 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator87);
        java.util.Set<java.lang.String> strSet89 = python3Target88.getBadWords();
        java.lang.String str91 = python3Target88.getAltLabelContextStructName("d");
        org.stringtemplate.v4.STGroup sTGroup92 = python3Target88.getTemplates();
        python3Target81.templates = sTGroup92;
        python3Target68.templates = sTGroup92;
        python3Target53.templates = sTGroup92;
        python3Target0.templates = sTGroup92;
        boolean boolean97 = python3Target0.wantsBaseListener();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "4.5.2.1" + "'", str5, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\"\"" + "'", str9, "\"\"");
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "d" + "'", str25, "d");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "\\12" + "'", str36, "\\12");
        org.junit.Assert.assertNotNull(strSet39);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "DContext" + "'", str41, "DContext");
        org.junit.Assert.assertNotNull(sTGroup42);
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertNull(sTGroup46);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 64 + "'", int47 == 64);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 29 + "'", int48 == 29);
        org.junit.Assert.assertNotNull(strSet49);
        org.junit.Assert.assertNotNull(strSet54);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "\"\"\"\"\"\"" + "'", str57, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(strSet60);
        org.junit.Assert.assertNotNull(strSet63);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "Python3" + "'", str64, "Python3");
        org.junit.Assert.assertNotNull(strSet65);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "\"\\\"\\\\\\\"Python3\\\\\\\"\\\"\"" + "'", str67, "\"\\\"\\\\\\\"Python3\\\\\\\"\\\"\"");
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNull(sTGroup70);
        org.junit.Assert.assertNotNull(strArray73);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "" + "'", str78, "");
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNull(codeGenerator80);
        org.junit.Assert.assertNotNull(strArray82);
        org.junit.Assert.assertNull(str83);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 29 + "'", int84 == 29);
        org.junit.Assert.assertNotNull(strSet89);
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "DContext" + "'", str91, "DContext");
        org.junit.Assert.assertNotNull(sTGroup92);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + false + "'", boolean97 == false);
    }

    @Test
    public void test1569() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1569");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python3Target1.getBadWords();
        org.antlr.v4.codegen.target.Python3Target python3Target3 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str5 = python3Target3.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.codegen.target.Python3Target python3Target6 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean7 = python3Target6.supportsOverloadedMethods();
        java.util.Set<java.lang.String> strSet8 = python3Target6.badWords;
        python3Target3.badWords = strSet8;
        python3Target1.badWords = strSet8;
        java.util.Set<java.lang.String> strSet11 = python3Target1.badWords;
        org.antlr.v4.codegen.CodeGenerator codeGenerator12 = python3Target1.getCodeGenerator();
        java.lang.String str14 = python3Target1.getTargetStringLiteralFromString("@");
        org.antlr.v4.codegen.CodeGenerator codeGenerator15 = python3Target1.gen;
        org.antlr.v4.codegen.CodeGenerator codeGenerator16 = python3Target1.gen;
        org.antlr.v4.tool.Rule rule17 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str18 = python3Target1.getRuleFunctionContextStructName(rule17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "\"\"\"\"\"\"" + "'", str5, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertNotNull(strSet11);
        org.junit.Assert.assertNull(codeGenerator12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "\"@\"" + "'", str14, "\"@\"");
        org.junit.Assert.assertNull(codeGenerator15);
        org.junit.Assert.assertNull(codeGenerator16);
    }

    @Test
    public void test1570() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1570");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!", "hi!" };
        python3Target0.targetCharValueEscape = strArray5;
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = null;
        python3Target0.gen = codeGenerator7;
        org.antlr.v4.tool.Rule rule9 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str10 = python3Target0.getRuleFunctionContextStructName(rule9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertNotNull(strArray5);
    }

    @Test
    public void test1571() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1571");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        java.lang.String str2 = python3Target0.getVersion();
        boolean boolean3 = python3Target0.supportsOverloadedMethods();
        org.antlr.v4.tool.Grammar grammar4 = null;
        org.stringtemplate.v4.ST sT5 = null;
        // The following exception was thrown during execution in test generation
        try {
            python3Target0.genFile(grammar4, sT5, "\\35");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "4.5.2.1" + "'", str2, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    }

    @Test
    public void test1572() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1572");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        python3Target0.language = "4.5.2.1";
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = python3Target0.getCodeGenerator();
        org.antlr.v4.codegen.CodeGenerator codeGenerator4 = python3Target0.gen;
        java.util.Set<java.lang.String> strSet5 = python3Target0.badWords;
        java.lang.String str6 = python3Target0.getVersion();
        int int7 = python3Target0.getSerializedATNSegmentLimit();
        org.junit.Assert.assertNull(codeGenerator3);
        org.junit.Assert.assertNull(codeGenerator4);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "4.5.2.1" + "'", str6, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 29 + "'", int7 == 29);
    }

    @Test
    public void test1573() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1573");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!", "hi!" };
        python3Target0.targetCharValueEscape = strArray5;
        java.lang.String str8 = python3Target0.getTargetStringLiteralFromString("\"\"");
        java.lang.String str10 = python3Target0.getTargetStringLiteralFromString("\"\"");
        java.lang.String str11 = python3Target0.getLanguage();
        int int12 = python3Target0.getInlineTestSetWordSize();
        boolean boolean13 = python3Target0.supportsOverloadedMethods();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\"\"\"\"" + "'", str8, "\"\"\"\"");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\"\"\"\"" + "'", str10, "\"\"\"\"");
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 64 + "'", int12 == 64);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test1574() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1574");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python3Target1.getBadWords();
        java.lang.String str4 = python3Target1.getAltLabelContextStructName("d");
        org.stringtemplate.v4.STGroup sTGroup5 = python3Target1.getTemplates();
        boolean boolean6 = python3Target1.supportsOverloadedMethods();
        java.util.Set<java.lang.String> strSet7 = python3Target1.getBadWords();
        org.antlr.v4.codegen.target.Python3Target python3Target8 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean9 = python3Target8.supportsOverloadedMethods();
        python3Target8.language = "\"\"\"\"";
        org.antlr.v4.codegen.target.Python3Target python3Target12 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray13 = python3Target12.targetCharValueEscape;
        org.stringtemplate.v4.STGroup sTGroup14 = python3Target12.templates;
        int int15 = python3Target12.getInlineTestSetWordSize();
        org.antlr.v4.codegen.CodeGenerator codeGenerator16 = python3Target12.gen;
        org.antlr.v4.tool.Grammar grammar17 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target18 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str20 = python3Target18.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.tool.Grammar grammar21 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target22 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean23 = python3Target22.supportsOverloadedMethods();
        java.lang.String str24 = python3Target22.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator25 = null;
        java.lang.String str28 = python3Target22.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator25, "", true);
        java.lang.String str29 = python3Target22.getVersion();
        org.antlr.v4.tool.Grammar grammar30 = null;
        int[] intArray31 = new int[] {};
        java.lang.String[] strArray32 = python3Target22.getTokenTypesAsTargetLabels(grammar30, intArray31);
        java.lang.String[] strArray33 = python3Target18.getTokenTypesAsTargetLabels(grammar21, intArray31);
        java.lang.String[] strArray34 = python3Target12.getTokenTypesAsTargetLabels(grammar17, intArray31);
        java.lang.String[] strArray57 = new java.lang.String[] { "\"\\\"\\\"\"", "DContext", "", "hi!", "d", "\"\"\"\"\"\"", "\"\"\"\"\"\"", "_tsetPython3", "\"hi!\"", "\"hi!\"", "Hi!Context", "\"\"\"\"\"\"", "\"hi!\"", "12", "\"4.5.2.1\"", "DContext", "Hi!Context", "Python3", "\"hi!\"", "", "\"\"", "\\\"4.5.2.1\\\"" };
        java.util.LinkedHashSet<java.lang.String> strSet58 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet58, strArray57);
        python3Target12.badWords = strSet58;
        org.antlr.v4.codegen.target.Python3Target python3Target61 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean62 = python3Target61.supportsOverloadedMethods();
        java.lang.String str63 = python3Target61.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator64 = null;
        java.lang.String str67 = python3Target61.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator64, "", true);
        java.lang.String str68 = python3Target61.getVersion();
        org.antlr.v4.codegen.target.Python3Target python3Target69 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str71 = python3Target69.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.tool.Grammar grammar72 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target73 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean74 = python3Target73.supportsOverloadedMethods();
        java.lang.String str75 = python3Target73.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator76 = null;
        java.lang.String str79 = python3Target73.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator76, "", true);
        java.lang.String str80 = python3Target73.getVersion();
        org.antlr.v4.tool.Grammar grammar81 = null;
        int[] intArray82 = new int[] {};
        java.lang.String[] strArray83 = python3Target73.getTokenTypesAsTargetLabels(grammar81, intArray82);
        java.lang.String[] strArray84 = python3Target69.getTokenTypesAsTargetLabels(grammar72, intArray82);
        java.lang.String[] strArray85 = python3Target69.targetCharValueEscape;
        python3Target61.targetCharValueEscape = strArray85;
        python3Target12.targetCharValueEscape = strArray85;
        python3Target8.targetCharValueEscape = strArray85;
        python3Target1.targetCharValueEscape = strArray85;
        boolean boolean90 = python3Target1.wantsBaseListener();
        org.antlr.v4.tool.Grammar grammar91 = null;
        org.stringtemplate.v4.ST sT92 = null;
        // The following exception was thrown during execution in test generation
        try {
            python3Target1.genFile(grammar91, sT92, "\"d\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "DContext" + "'", str4, "DContext");
        org.junit.Assert.assertNotNull(sTGroup5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(strSet7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertNull(sTGroup14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 64 + "'", int15 == 64);
        org.junit.Assert.assertNull(codeGenerator16);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "\"\"\"\"\"\"" + "'", str20, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "4.5.2.1" + "'", str24, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "\"\"" + "'", str28, "\"\"");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "4.5.2.1" + "'", str29, "4.5.2.1");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[]");
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertNotNull(strArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "4.5.2.1" + "'", str63, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "\"\"" + "'", str67, "\"\"");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "4.5.2.1" + "'", str68, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "\"\"\"\"\"\"" + "'", str71, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "4.5.2.1" + "'", str75, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "\"\"" + "'", str79, "\"\"");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "4.5.2.1" + "'", str80, "4.5.2.1");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[]");
        org.junit.Assert.assertNotNull(strArray83);
        org.junit.Assert.assertNotNull(strArray84);
        org.junit.Assert.assertNotNull(strArray85);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
    }

    @Test
    public void test1575() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1575");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.lang.String str3 = python3Target1.getTargetStringLiteralFromString("");
        int int4 = python3Target1.getSerializedATNSegmentLimit();
        boolean boolean5 = python3Target1.wantsBaseVisitor();
        org.stringtemplate.v4.STGroup sTGroup6 = python3Target1.loadTemplates();
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = python3Target1.gen;
        boolean boolean8 = python3Target1.wantsBaseListener();
        python3Target1.language = "\\35";
        java.lang.String str12 = python3Target1.encodeIntAsCharEscape(29);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str14 = python3Target1.getListLabel("\"\"DContext\"\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "\"\"" + "'", str3, "\"\"");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 29 + "'", int4 == 29);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(sTGroup6);
        org.junit.Assert.assertNull(codeGenerator7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "\\35" + "'", str12, "\\35");
    }

    @Test
    public void test1576() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1576");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python3Target1.getBadWords();
        org.antlr.v4.codegen.target.Python3Target python3Target3 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str5 = python3Target3.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.codegen.target.Python3Target python3Target6 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean7 = python3Target6.supportsOverloadedMethods();
        java.util.Set<java.lang.String> strSet8 = python3Target6.badWords;
        python3Target3.badWords = strSet8;
        python3Target1.badWords = strSet8;
        java.util.Set<java.lang.String> strSet11 = python3Target1.badWords;
        org.antlr.v4.codegen.CodeGenerator codeGenerator12 = python3Target1.getCodeGenerator();
        org.antlr.v4.tool.Grammar grammar13 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target14 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean15 = python3Target14.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup16 = python3Target14.templates;
        org.antlr.v4.tool.Grammar grammar17 = null;
        org.stringtemplate.v4.ST sT18 = null;
        python3Target14.genRecognizerHeaderFile(grammar17, sT18, "");
        python3Target14.language = "Python3";
        java.util.Set<java.lang.String> strSet23 = null;
        python3Target14.badWords = strSet23;
        org.antlr.v4.codegen.CodeGenerator codeGenerator25 = null;
        java.lang.String str28 = python3Target14.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator25, "\"Hi!Context\"", false);
        java.lang.String str30 = python3Target14.getListLabel("Python3");
        java.lang.String str32 = python3Target14.getTargetStringLiteralFromString("\\0");
        org.antlr.v4.tool.Grammar grammar33 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target34 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str36 = python3Target34.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.tool.Grammar grammar37 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target38 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean39 = python3Target38.supportsOverloadedMethods();
        java.lang.String str40 = python3Target38.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator41 = null;
        java.lang.String str44 = python3Target38.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator41, "", true);
        java.lang.String str45 = python3Target38.getVersion();
        org.antlr.v4.tool.Grammar grammar46 = null;
        int[] intArray47 = new int[] {};
        java.lang.String[] strArray48 = python3Target38.getTokenTypesAsTargetLabels(grammar46, intArray47);
        java.lang.String[] strArray49 = python3Target34.getTokenTypesAsTargetLabels(grammar37, intArray47);
        java.lang.String[] strArray50 = python3Target14.getTokenTypesAsTargetLabels(grammar33, intArray47);
        java.lang.String[] strArray51 = python3Target1.getTokenTypesAsTargetLabels(grammar13, intArray47);
        boolean boolean52 = python3Target1.templatesExist();
        org.antlr.v4.codegen.CodeGenerator codeGenerator53 = null;
        java.lang.String str56 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator53, "\\n", false);
        org.antlr.v4.tool.ast.GrammarAST grammarAST57 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str58 = python3Target1.getLoopLabel(grammarAST57);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "\"\"\"\"\"\"" + "'", str5, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertNotNull(strSet11);
        org.junit.Assert.assertNull(codeGenerator12);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(sTGroup16);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "Hi!Context" + "'", str28, "Hi!Context");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "Python3" + "'", str30, "Python3");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "\"\\0\"" + "'", str32, "\"\\0\"");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "\"\"\"\"\"\"" + "'", str36, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "4.5.2.1" + "'", str40, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "\"\"" + "'", str44, "\"\"");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "4.5.2.1" + "'", str45, "4.5.2.1");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[]");
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertNotNull(strArray49);
        org.junit.Assert.assertNotNull(strArray50);
        org.junit.Assert.assertNotNull(strArray51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "" + "'", str56, "");
    }

    @Test
    public void test1577() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1577");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        java.lang.String str2 = python3Target0.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = python3Target0.getCodeGenerator();
        org.stringtemplate.v4.STGroup sTGroup4 = null;
        python3Target0.templates = sTGroup4;
        org.stringtemplate.v4.STGroup sTGroup6 = python3Target0.templates;
        java.lang.String[] strArray7 = python3Target0.targetCharValueEscape;
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target9 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator8);
        java.util.Set<java.lang.String> strSet10 = python3Target9.getBadWords();
        java.lang.String str12 = python3Target9.getAltLabelContextStructName("d");
        org.stringtemplate.v4.STGroup sTGroup13 = python3Target9.templates;
        python3Target0.templates = sTGroup13;
        // The following exception was thrown during execution in test generation
        try {
            org.stringtemplate.v4.STGroup sTGroup15 = python3Target0.loadTemplates();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "4.5.2.1" + "'", str2, "4.5.2.1");
        org.junit.Assert.assertNull(codeGenerator3);
        org.junit.Assert.assertNull(sTGroup6);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strSet10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "DContext" + "'", str12, "DContext");
        org.junit.Assert.assertNotNull(sTGroup13);
    }

    @Test
    public void test1578() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1578");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python3Target1.getBadWords();
        java.lang.String str4 = python3Target1.getAltLabelContextStructName("d");
        org.stringtemplate.v4.STGroup sTGroup5 = python3Target1.getTemplates();
        boolean boolean6 = python3Target1.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup7 = python3Target1.getTemplates();
        python3Target1.language = "\"\"";
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = null;
        java.lang.String str13 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator10, "\\\"4.5.2.1\\\"", false);
        org.antlr.v4.codegen.CodeGenerator codeGenerator14 = python3Target1.getCodeGenerator();
        org.antlr.v4.codegen.CodeGenerator codeGenerator15 = python3Target1.getCodeGenerator();
        java.lang.String str17 = python3Target1.encodeIntAsCharEscape(10);
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "DContext" + "'", str4, "DContext");
        org.junit.Assert.assertNotNull(sTGroup5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(sTGroup7);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "\\\"4.5.2.1\\\"" + "'", str13, "\\\"4.5.2.1\\\"");
        org.junit.Assert.assertNull(codeGenerator14);
        org.junit.Assert.assertNull(codeGenerator15);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "\\n" + "'", str17, "\\n");
    }

    @Test
    public void test1579() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1579");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        java.util.Set<java.lang.String> strSet2 = python3Target0.badWords;
        boolean boolean3 = python3Target0.templatesExist();
        python3Target0.addBadWords();
        org.antlr.v4.tool.Grammar grammar5 = null;
        org.stringtemplate.v4.ST sT6 = null;
        python3Target0.genRecognizerHeaderFile(grammar5, sT6, "\"\\0\"");
        org.antlr.v4.tool.Rule rule9 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str10 = python3Target0.getRuleFunctionContextStructName(rule9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    }

    @Test
    public void test1580() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1580");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray1 = python3Target0.targetCharValueEscape;
        java.lang.String str2 = python3Target0.language;
        int int3 = python3Target0.getSerializedATNSegmentLimit();
        org.antlr.v4.codegen.CodeGenerator codeGenerator4 = null;
        python3Target0.gen = codeGenerator4;
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target7 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator6);
        java.util.Set<java.lang.String> strSet8 = python3Target7.getBadWords();
        java.lang.String str10 = python3Target7.getAltLabelContextStructName("d");
        org.stringtemplate.v4.STGroup sTGroup11 = python3Target7.getTemplates();
        python3Target0.templates = sTGroup11;
        org.antlr.v4.codegen.CodeGenerator codeGenerator13 = python3Target0.gen;
        // The following exception was thrown during execution in test generation
        try {
            org.stringtemplate.v4.STGroup sTGroup14 = python3Target0.loadTemplates();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 29 + "'", int3 == 29);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "DContext" + "'", str10, "DContext");
        org.junit.Assert.assertNotNull(sTGroup11);
        org.junit.Assert.assertNull(codeGenerator13);
    }

    @Test
    public void test1581() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1581");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python3Target1.getBadWords();
        org.antlr.v4.codegen.target.Python3Target python3Target3 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str5 = python3Target3.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.codegen.target.Python3Target python3Target6 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean7 = python3Target6.supportsOverloadedMethods();
        java.util.Set<java.lang.String> strSet8 = python3Target6.badWords;
        python3Target3.badWords = strSet8;
        python3Target1.badWords = strSet8;
        java.util.Set<java.lang.String> strSet11 = python3Target1.badWords;
        org.antlr.v4.codegen.CodeGenerator codeGenerator12 = python3Target1.getCodeGenerator();
        java.lang.String str14 = python3Target1.getTargetStringLiteralFromString("@");
        boolean boolean15 = python3Target1.wantsBaseListener();
        org.antlr.v4.tool.Rule rule16 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str17 = python3Target1.getRuleFunctionContextStructName(rule16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "\"\"\"\"\"\"" + "'", str5, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertNotNull(strSet11);
        org.junit.Assert.assertNull(codeGenerator12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "\"@\"" + "'", str14, "\"@\"");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test1582() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1582");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!", "hi!" };
        python3Target0.targetCharValueEscape = strArray5;
        java.lang.String[] strArray8 = new java.lang.String[] { "hi!" };
        org.antlr.v4.codegen.target.Python3Target.python3Keywords = strArray8;
        python3Target0.targetCharValueEscape = strArray8;
        boolean boolean11 = python3Target0.wantsBaseVisitor();
        java.lang.String str13 = python3Target0.encodeIntAsCharEscape(0);
        java.util.Set<java.lang.String> strSet14 = python3Target0.getBadWords();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertNotNull(strSet14);
    }

    @Test
    public void test1583() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1583");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str2 = python3Target0.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = null;
        python3Target0.gen = codeGenerator3;
        org.antlr.v4.codegen.CodeGenerator codeGenerator5 = python3Target0.getCodeGenerator();
        org.stringtemplate.v4.STGroup sTGroup6 = python3Target0.templates;
        int int7 = python3Target0.getInlineTestSetWordSize();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "\"\"\"\"\"\"" + "'", str2, "\"\"\"\"\"\"");
        org.junit.Assert.assertNull(codeGenerator5);
        org.junit.Assert.assertNull(sTGroup6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 64 + "'", int7 == 64);
    }

    @Test
    public void test1584() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1584");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.lang.String str3 = python3Target1.getTargetStringLiteralFromString("");
        int int4 = python3Target1.getSerializedATNSegmentLimit();
        boolean boolean5 = python3Target1.wantsBaseVisitor();
        org.stringtemplate.v4.STGroup sTGroup6 = python3Target1.loadTemplates();
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = python3Target1.gen;
        org.antlr.v4.codegen.target.Python3Target python3Target8 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean9 = python3Target8.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup10 = python3Target8.templates;
        org.antlr.v4.tool.Grammar grammar11 = null;
        org.stringtemplate.v4.ST sT12 = null;
        python3Target8.genRecognizerHeaderFile(grammar11, sT12, "");
        python3Target8.language = "Python3";
        int int17 = python3Target8.getSerializedATNSegmentLimit();
        org.stringtemplate.v4.STGroup sTGroup18 = python3Target8.loadTemplates();
        python3Target1.templates = sTGroup18;
        java.lang.String str20 = python3Target1.getVersion();
        java.util.Set<java.lang.String> strSet21 = python3Target1.getBadWords();
        org.antlr.v4.tool.Grammar grammar22 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str24 = python3Target1.getTokenTypeAsTargetLabel(grammar22, (int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "\"\"" + "'", str3, "\"\"");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 29 + "'", int4 == 29);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(sTGroup6);
        org.junit.Assert.assertNull(codeGenerator7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(sTGroup10);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 29 + "'", int17 == 29);
        org.junit.Assert.assertNotNull(sTGroup18);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "4.5.2.1" + "'", str20, "4.5.2.1");
        org.junit.Assert.assertNotNull(strSet21);
    }

    @Test
    public void test1585() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1585");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        java.lang.String str2 = python3Target0.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = null;
        java.lang.String str6 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator3, "", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = null;
        python3Target0.gen = codeGenerator7;
        java.lang.String[] strArray16 = new java.lang.String[] { "\"\"\"\"", "\\12", "\"\"", "4.5.2.1", "", "\"\"\"\"", "\"\"" };
        java.util.LinkedHashSet<java.lang.String> strSet17 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet17, strArray16);
        python3Target0.badWords = strSet17;
        org.antlr.v4.tool.Grammar grammar20 = null;
        org.stringtemplate.v4.ST sT21 = null;
        python3Target0.genRecognizerHeaderFile(grammar20, sT21, "\"\"");
        java.lang.String str25 = python3Target0.encodeIntAsCharEscape((int) (byte) 10);
        java.lang.String str26 = python3Target0.language;
        java.util.Set<java.lang.String> strSet27 = python3Target0.getBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator28 = null;
        java.lang.String str31 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator28, "", false);
        java.util.Set<java.lang.String> strSet32 = python3Target0.badWords;
        boolean boolean33 = python3Target0.supportsOverloadedMethods();
        org.antlr.v4.codegen.target.Python3Target python3Target34 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean35 = python3Target34.supportsOverloadedMethods();
        org.antlr.v4.codegen.CodeGenerator codeGenerator36 = null;
        python3Target34.gen = codeGenerator36;
        java.lang.String[] strArray38 = org.antlr.v4.codegen.target.Python3Target.python3Keywords;
        org.antlr.v4.codegen.target.Python3Target.python3Keywords = strArray38;
        python3Target34.targetCharValueEscape = strArray38;
        java.lang.String[] strArray41 = python3Target34.targetCharValueEscape;
        python3Target0.targetCharValueEscape = strArray41;
        org.antlr.v4.codegen.target.Python3Target.python3Keywords = strArray41;
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "4.5.2.1" + "'", str2, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\"\"" + "'", str6, "\"\"");
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "\\12" + "'", str25, "\\12");
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(strSet27);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "" + "'", str31, "");
        org.junit.Assert.assertNotNull(strSet32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertNotNull(strArray41);
    }

    @Test
    public void test1586() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1586");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        org.antlr.v4.tool.Grammar grammar3 = null;
        org.stringtemplate.v4.ST sT4 = null;
        python3Target0.genRecognizerHeaderFile(grammar3, sT4, "");
        org.antlr.v4.codegen.target.Python3Target python3Target7 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray8 = python3Target7.targetCharValueEscape;
        python3Target0.targetCharValueEscape = strArray8;
        boolean boolean10 = python3Target0.supportsOverloadedMethods();
        boolean boolean11 = python3Target0.wantsBaseListener();
        java.lang.String str13 = python3Target0.getTargetStringLiteralFromString("_tset12");
        java.util.Set<java.lang.String> strSet14 = python3Target0.getBadWords();
        java.lang.Class<?> wildcardClass15 = python3Target0.getClass();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "\"_tset12\"" + "'", str13, "\"_tset12\"");
        org.junit.Assert.assertNotNull(strSet14);
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test1587() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1587");
        java.lang.String str1 = org.stringtemplate.v4.StringRenderer.escapeHTML("\\nContext");
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "\\nContext" + "'", str1, "\\nContext");
    }

    @Test
    public void test1588() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1588");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        java.lang.String str2 = python3Target0.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = null;
        java.lang.String str6 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator3, "", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = null;
        python3Target0.gen = codeGenerator7;
        int int9 = python3Target0.getSerializedATNSegmentLimit();
        org.antlr.v4.tool.Grammar grammar10 = null;
        org.stringtemplate.v4.ST sT11 = null;
        python3Target0.genRecognizerHeaderFile(grammar10, sT11, "_tset12");
        org.stringtemplate.v4.STGroup sTGroup14 = python3Target0.templates;
        org.stringtemplate.v4.STGroup sTGroup15 = python3Target0.templates;
        python3Target0.language = "\\nContext";
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str19 = python3Target0.getElementListName("DContext");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "4.5.2.1" + "'", str2, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\"\"" + "'", str6, "\"\"");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 29 + "'", int9 == 29);
        org.junit.Assert.assertNull(sTGroup14);
        org.junit.Assert.assertNull(sTGroup15);
    }

    @Test
    public void test1589() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1589");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python3Target1.getBadWords();
        java.lang.String str4 = python3Target1.getAltLabelContextStructName("d");
        org.stringtemplate.v4.STGroup sTGroup5 = python3Target1.getTemplates();
        boolean boolean6 = python3Target1.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup7 = python3Target1.getTemplates();
        python3Target1.language = "\"\"";
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = null;
        java.lang.String str13 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator10, "\\\"4.5.2.1\\\"", false);
        org.antlr.v4.tool.Grammar grammar14 = null;
        org.stringtemplate.v4.ST sT15 = null;
        python3Target1.genRecognizerHeaderFile(grammar14, sT15, "\\\"hi!\\\"");
        boolean boolean18 = python3Target1.supportsOverloadedMethods();
        java.lang.String str20 = python3Target1.getImplicitRuleLabel("\"\"DContext\"\"Context");
        boolean boolean21 = python3Target1.supportsOverloadedMethods();
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "DContext" + "'", str4, "DContext");
        org.junit.Assert.assertNotNull(sTGroup5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(sTGroup7);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "\\\"4.5.2.1\\\"" + "'", str13, "\\\"4.5.2.1\\\"");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "_\"\"DContext\"\"Context" + "'", str20, "_\"\"DContext\"\"Context");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
    }

    @Test
    public void test1590() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1590");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        org.antlr.v4.tool.Grammar grammar3 = null;
        org.stringtemplate.v4.ST sT4 = null;
        python3Target0.genRecognizerHeaderFile(grammar3, sT4, "");
        python3Target0.language = "Python3";
        java.util.Set<java.lang.String> strSet9 = null;
        python3Target0.badWords = strSet9;
        org.antlr.v4.codegen.CodeGenerator codeGenerator11 = null;
        java.lang.String str14 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator11, "\"Hi!Context\"", false);
        org.stringtemplate.v4.STGroup sTGroup15 = python3Target0.loadTemplates();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Hi!Context" + "'", str14, "Hi!Context");
        org.junit.Assert.assertNotNull(sTGroup15);
    }

    @Test
    public void test1591() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1591");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.antlr.v4.codegen.CodeGenerator codeGenerator2 = null;
        python3Target0.gen = codeGenerator2;
        java.lang.String[] strArray4 = org.antlr.v4.codegen.target.Python3Target.python3Keywords;
        org.antlr.v4.codegen.target.Python3Target.python3Keywords = strArray4;
        python3Target0.targetCharValueEscape = strArray4;
        java.lang.String[] strArray7 = python3Target0.targetCharValueEscape;
        org.antlr.v4.tool.ast.GrammarAST grammarAST8 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean9 = python3Target0.grammarSymbolCausesIssueInGeneratedCode(grammarAST8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertNotNull(strArray7);
    }

    @Test
    public void test1592() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1592");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!", "hi!" };
        python3Target0.targetCharValueEscape = strArray5;
        java.lang.String str8 = python3Target0.getTargetStringLiteralFromString("\"\"");
        java.lang.String str10 = python3Target0.getTargetStringLiteralFromString("\"\"");
        java.lang.String str11 = python3Target0.getLanguage();
        int int12 = python3Target0.getInlineTestSetWordSize();
        boolean boolean13 = python3Target0.wantsBaseVisitor();
        java.lang.String str14 = python3Target0.getLanguage();
        org.antlr.v4.codegen.target.Python3Target python3Target15 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean16 = python3Target15.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup17 = python3Target15.templates;
        java.lang.String[] strArray20 = new java.lang.String[] { "hi!", "hi!" };
        python3Target15.targetCharValueEscape = strArray20;
        org.antlr.v4.codegen.CodeGenerator codeGenerator22 = null;
        java.lang.String str25 = python3Target15.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator22, "", false);
        int int26 = python3Target15.getSerializedATNSegmentLimit();
        java.lang.String str27 = python3Target15.getVersion();
        boolean boolean28 = python3Target15.supportsOverloadedMethods();
        org.antlr.v4.codegen.target.Python3Target python3Target29 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean30 = python3Target29.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup31 = python3Target29.templates;
        java.lang.String[] strArray34 = new java.lang.String[] { "hi!", "hi!" };
        python3Target29.targetCharValueEscape = strArray34;
        java.lang.String[] strArray37 = new java.lang.String[] { "hi!" };
        org.antlr.v4.codegen.target.Python3Target.python3Keywords = strArray37;
        python3Target29.targetCharValueEscape = strArray37;
        org.antlr.v4.codegen.target.Python3Target.python3Keywords = strArray37;
        python3Target15.targetCharValueEscape = strArray37;
        python3Target0.targetCharValueEscape = strArray37;
        org.antlr.v4.codegen.CodeGenerator codeGenerator43 = null;
        python3Target0.gen = codeGenerator43;
        int int45 = python3Target0.getInlineTestSetWordSize();
        org.antlr.v4.tool.Grammar grammar46 = null;
        org.stringtemplate.v4.ST sT47 = null;
        python3Target0.genRecognizerHeaderFile(grammar46, sT47, "\"\"\\0\"\"");
        java.lang.String str50 = python3Target0.getVersion();
        java.lang.String str52 = python3Target0.encodeIntAsCharEscape((int) ' ');
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\"\"\"\"" + "'", str8, "\"\"\"\"");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\"\"\"\"" + "'", str10, "\"\"\"\"");
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 64 + "'", int12 == 64);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(sTGroup17);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 29 + "'", int26 == 29);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "4.5.2.1" + "'", str27, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNull(sTGroup31);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 64 + "'", int45 == 64);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "4.5.2.1" + "'", str50, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + " " + "'", str52, " ");
    }

    @Test
    public void test1593() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1593");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray1 = python3Target0.targetCharValueEscape;
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = null;
        java.lang.String str6 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator3, "\"\\12\"", false);
        java.lang.String str7 = python3Target0.getLanguage();
        boolean boolean8 = python3Target0.supportsOverloadedMethods();
        org.antlr.v4.tool.ast.GrammarAST grammarAST9 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str10 = python3Target0.getLoopCounter(grammarAST9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "12" + "'", str6, "12");
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test1594() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1594");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str2 = python3Target0.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.tool.Grammar grammar3 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target4 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean5 = python3Target4.supportsOverloadedMethods();
        java.lang.String str6 = python3Target4.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = null;
        java.lang.String str10 = python3Target4.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator7, "", true);
        java.lang.String str11 = python3Target4.getVersion();
        org.antlr.v4.tool.Grammar grammar12 = null;
        int[] intArray13 = new int[] {};
        java.lang.String[] strArray14 = python3Target4.getTokenTypesAsTargetLabels(grammar12, intArray13);
        java.lang.String[] strArray15 = python3Target0.getTokenTypesAsTargetLabels(grammar3, intArray13);
        java.lang.String[] strArray16 = python3Target0.targetCharValueEscape;
        java.lang.String str18 = python3Target0.getTargetStringLiteralFromString("\"\"\"\"\"\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator19 = python3Target0.getCodeGenerator();
        java.lang.String str21 = python3Target0.getTargetStringLiteralFromString("");
        java.lang.String str23 = python3Target0.encodeIntAsCharEscape((int) (byte) 1);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str25 = python3Target0.getImplicitSetLabel("\"_#\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "\"\"\"\"\"\"" + "'", str2, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "4.5.2.1" + "'", str6, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\"\"" + "'", str10, "\"\"");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "4.5.2.1" + "'", str11, "4.5.2.1");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[]");
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "\"\"\"\"\"\"\"\"" + "'", str18, "\"\"\"\"\"\"\"\"");
        org.junit.Assert.assertNull(codeGenerator19);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "\"\"" + "'", str21, "\"\"");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "\\1" + "'", str23, "\\1");
    }

    @Test
    public void test1595() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1595");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.lang.String str3 = python3Target1.getTargetStringLiteralFromString("");
        int int4 = python3Target1.getSerializedATNSegmentLimit();
        boolean boolean5 = python3Target1.wantsBaseVisitor();
        org.stringtemplate.v4.STGroup sTGroup6 = python3Target1.loadTemplates();
        org.antlr.v4.tool.Grammar grammar7 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str9 = python3Target1.getTokenTypeAsTargetLabel(grammar7, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "\"\"" + "'", str3, "\"\"");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 29 + "'", int4 == 29);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(sTGroup6);
    }

    @Test
    public void test1596() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1596");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python3Target1.getBadWords();
        java.lang.String str4 = python3Target1.getAltLabelContextStructName("d");
        org.stringtemplate.v4.STGroup sTGroup5 = python3Target1.getTemplates();
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = null;
        java.lang.String str9 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator6, "", true);
        java.lang.String str11 = python3Target1.getImplicitSetLabel("\"\\0\"");
        java.lang.String str13 = python3Target1.getListLabel("\"Python3\"");
        java.lang.String str14 = python3Target1.getLanguage();
        java.lang.String str16 = python3Target1.getImplicitRuleLabel("\"_tset\"\\\"Python3\\\"\"\"");
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "DContext" + "'", str4, "DContext");
        org.junit.Assert.assertNotNull(sTGroup5);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\"\"" + "'", str9, "\"\"");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "_tset\"\\0\"" + "'", str11, "_tset\"\\0\"");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "\"Python3\"" + "'", str13, "\"Python3\"");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Python3" + "'", str14, "Python3");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "_\"_tset\"\\\"Python3\\\"\"\"" + "'", str16, "_\"_tset\"\\\"Python3\\\"\"\"");
    }

    @Test
    public void test1597() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1597");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        org.antlr.v4.tool.Grammar grammar3 = null;
        org.stringtemplate.v4.ST sT4 = null;
        python3Target0.genRecognizerHeaderFile(grammar3, sT4, "");
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = python3Target0.getCodeGenerator();
        java.util.Set<java.lang.String> strSet8 = python3Target0.badWords;
        boolean boolean9 = python3Target0.templatesExist();
        java.lang.String str10 = python3Target0.getVersion();
        java.lang.String[] strArray11 = python3Target0.targetCharValueEscape;
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertNull(codeGenerator7);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "4.5.2.1" + "'", str10, "4.5.2.1");
        org.junit.Assert.assertNotNull(strArray11);
    }

    @Test
    public void test1598() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1598");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        java.lang.String str2 = python3Target0.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = null;
        java.lang.String str6 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator3, "", true);
        java.lang.String str7 = python3Target0.getVersion();
        org.antlr.v4.tool.Grammar grammar8 = null;
        int[] intArray9 = new int[] {};
        java.lang.String[] strArray10 = python3Target0.getTokenTypesAsTargetLabels(grammar8, intArray9);
        java.lang.String[] strArray11 = python3Target0.targetCharValueEscape;
        java.util.Set<java.lang.String> strSet12 = python3Target0.badWords;
        python3Target0.addBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator14 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target15 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator14);
        java.util.Set<java.lang.String> strSet16 = python3Target15.getBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator17 = null;
        python3Target15.gen = codeGenerator17;
        org.antlr.v4.tool.Grammar grammar19 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target20 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean21 = python3Target20.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup22 = python3Target20.templates;
        org.antlr.v4.tool.Grammar grammar23 = null;
        org.stringtemplate.v4.ST sT24 = null;
        python3Target20.genRecognizerHeaderFile(grammar23, sT24, "");
        boolean boolean27 = python3Target20.supportsOverloadedMethods();
        python3Target20.language = "\"\\12\"";
        org.antlr.v4.tool.Grammar grammar30 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator31 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target32 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator31);
        java.util.Set<java.lang.String> strSet33 = python3Target32.getBadWords();
        java.lang.String str35 = python3Target32.getAltLabelContextStructName("d");
        java.lang.String str37 = python3Target32.getTargetStringLiteralFromString("\"\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator38 = python3Target32.getCodeGenerator();
        org.antlr.v4.tool.Grammar grammar39 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator40 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target41 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator40);
        java.util.Set<java.lang.String> strSet42 = python3Target41.getBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator43 = null;
        python3Target41.gen = codeGenerator43;
        java.lang.String str46 = python3Target41.getAltLabelContextStructName("hi!");
        java.lang.String str49 = python3Target41.getTargetStringLiteralFromString("\"hi!\"", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator50 = null;
        python3Target41.gen = codeGenerator50;
        org.antlr.v4.tool.Grammar grammar52 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target53 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray54 = python3Target53.targetCharValueEscape;
        org.stringtemplate.v4.STGroup sTGroup55 = python3Target53.templates;
        int int56 = python3Target53.getInlineTestSetWordSize();
        org.antlr.v4.codegen.CodeGenerator codeGenerator57 = python3Target53.gen;
        org.antlr.v4.tool.Grammar grammar58 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target59 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str61 = python3Target59.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.tool.Grammar grammar62 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target63 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean64 = python3Target63.supportsOverloadedMethods();
        java.lang.String str65 = python3Target63.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator66 = null;
        java.lang.String str69 = python3Target63.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator66, "", true);
        java.lang.String str70 = python3Target63.getVersion();
        org.antlr.v4.tool.Grammar grammar71 = null;
        int[] intArray72 = new int[] {};
        java.lang.String[] strArray73 = python3Target63.getTokenTypesAsTargetLabels(grammar71, intArray72);
        java.lang.String[] strArray74 = python3Target59.getTokenTypesAsTargetLabels(grammar62, intArray72);
        java.lang.String[] strArray75 = python3Target53.getTokenTypesAsTargetLabels(grammar58, intArray72);
        java.lang.String[] strArray76 = python3Target41.getTokenTypesAsTargetLabels(grammar52, intArray72);
        java.lang.String[] strArray77 = python3Target32.getTokenTypesAsTargetLabels(grammar39, intArray72);
        java.lang.String[] strArray78 = python3Target20.getTokenTypesAsTargetLabels(grammar30, intArray72);
        java.lang.String[] strArray79 = python3Target15.getTokenTypesAsTargetLabels(grammar19, intArray72);
        python3Target0.targetCharValueEscape = strArray79;
        org.antlr.v4.codegen.CodeGenerator codeGenerator81 = null;
        java.lang.String str84 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator81, "\\nContext", false);
        boolean boolean85 = python3Target0.supportsOverloadedMethods();
        java.lang.String[] strArray86 = python3Target0.targetCharValueEscape;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str88 = python3Target0.getListLabel("_\"\"hi!\"\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "4.5.2.1" + "'", str2, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\"\"" + "'", str6, "\"\"");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "4.5.2.1" + "'", str7, "4.5.2.1");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[]");
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(sTGroup22);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(strSet33);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "DContext" + "'", str35, "DContext");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "\"\\\"\\\"\"" + "'", str37, "\"\\\"\\\"\"");
        org.junit.Assert.assertNull(codeGenerator38);
        org.junit.Assert.assertNotNull(strSet42);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "Hi!Context" + "'", str46, "Hi!Context");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "\"\\\"hi!\\\"\"" + "'", str49, "\"\\\"hi!\\\"\"");
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertNull(sTGroup55);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 64 + "'", int56 == 64);
        org.junit.Assert.assertNull(codeGenerator57);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "\"\"\"\"\"\"" + "'", str61, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "4.5.2.1" + "'", str65, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "\"\"" + "'", str69, "\"\"");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "4.5.2.1" + "'", str70, "4.5.2.1");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[]");
        org.junit.Assert.assertNotNull(strArray73);
        org.junit.Assert.assertNotNull(strArray74);
        org.junit.Assert.assertNotNull(strArray75);
        org.junit.Assert.assertNotNull(strArray76);
        org.junit.Assert.assertNotNull(strArray77);
        org.junit.Assert.assertNotNull(strArray78);
        org.junit.Assert.assertNotNull(strArray79);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "nContex" + "'", str84, "nContex");
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertNotNull(strArray86);
    }

    @Test
    public void test1599() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1599");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!", "hi!" };
        python3Target0.targetCharValueEscape = strArray5;
        java.lang.String str8 = python3Target0.getTargetStringLiteralFromString("\"\"");
        java.lang.String str9 = python3Target0.getLanguage();
        java.util.Set<java.lang.String> strSet10 = python3Target0.getBadWords();
        org.antlr.v4.codegen.target.Python3Target python3Target11 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean12 = python3Target11.supportsOverloadedMethods();
        java.lang.String str13 = python3Target11.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator14 = null;
        java.lang.String str17 = python3Target11.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator14, "", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator18 = null;
        python3Target11.gen = codeGenerator18;
        java.lang.String[] strArray27 = new java.lang.String[] { "\"\"\"\"", "\\12", "\"\"", "4.5.2.1", "", "\"\"\"\"", "\"\"" };
        java.util.LinkedHashSet<java.lang.String> strSet28 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet28, strArray27);
        python3Target11.badWords = strSet28;
        boolean boolean31 = python3Target11.templatesExist();
        org.antlr.v4.codegen.CodeGenerator codeGenerator32 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target33 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator32);
        java.lang.String str35 = python3Target33.getTargetStringLiteralFromString("");
        int int36 = python3Target33.getSerializedATNSegmentLimit();
        boolean boolean37 = python3Target33.wantsBaseVisitor();
        org.stringtemplate.v4.STGroup sTGroup38 = python3Target33.loadTemplates();
        python3Target11.templates = sTGroup38;
        python3Target0.templates = sTGroup38;
        java.lang.String str42 = python3Target0.getImplicitRuleLabel("_tset12");
        java.lang.String str44 = python3Target0.getImplicitSetLabel("\\64");
        java.lang.String str45 = python3Target0.language;
        org.antlr.v4.tool.Grammar grammar46 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str48 = python3Target0.getTokenTypeAsTargetLabel(grammar46, (int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\"\"\"\"" + "'", str8, "\"\"\"\"");
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(strSet10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "4.5.2.1" + "'", str13, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "\"\"" + "'", str17, "\"\"");
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "\"\"" + "'", str35, "\"\"");
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 29 + "'", int36 == 29);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(sTGroup38);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "__tset12" + "'", str42, "__tset12");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "_tset\\64" + "'", str44, "_tset\\64");
        org.junit.Assert.assertNull(str45);
    }

    @Test
    public void test1600() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1600");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        org.antlr.v4.tool.Grammar grammar3 = null;
        org.stringtemplate.v4.ST sT4 = null;
        python3Target0.genRecognizerHeaderFile(grammar3, sT4, "");
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = python3Target0.getCodeGenerator();
        java.util.Set<java.lang.String> strSet8 = python3Target0.badWords;
        boolean boolean9 = python3Target0.templatesExist();
        org.antlr.v4.tool.Grammar grammar10 = null;
        org.stringtemplate.v4.ST sT11 = null;
        python3Target0.genRecognizerHeaderFile(grammar10, sT11, "\"\"hi!\"\"");
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertNull(codeGenerator7);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test1601() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1601");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        java.lang.String str2 = python3Target0.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = python3Target0.getCodeGenerator();
        org.stringtemplate.v4.STGroup sTGroup4 = null;
        python3Target0.templates = sTGroup4;
        org.stringtemplate.v4.STGroup sTGroup6 = python3Target0.templates;
        java.lang.String[] strArray7 = python3Target0.targetCharValueEscape;
        java.util.Set<java.lang.String> strSet8 = python3Target0.badWords;
        java.util.Set<java.lang.String> strSet9 = python3Target0.getBadWords();
        boolean boolean10 = python3Target0.wantsBaseVisitor();
        int int11 = python3Target0.getInlineTestSetWordSize();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "4.5.2.1" + "'", str2, "4.5.2.1");
        org.junit.Assert.assertNull(codeGenerator3);
        org.junit.Assert.assertNull(sTGroup6);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertNotNull(strSet9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 64 + "'", int11 == 64);
    }

    @Test
    public void test1602() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1602");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python3Target1.getBadWords();
        java.lang.String str4 = python3Target1.getAltLabelContextStructName("d");
        org.stringtemplate.v4.STGroup sTGroup5 = python3Target1.getTemplates();
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = null;
        java.lang.String str9 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator6, "", true);
        java.lang.String str11 = python3Target1.getImplicitSetLabel("\"\\0\"");
        org.antlr.v4.tool.ast.GrammarAST grammarAST12 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean13 = python3Target1.grammarSymbolCausesIssueInGeneratedCode(grammarAST12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "DContext" + "'", str4, "DContext");
        org.junit.Assert.assertNotNull(sTGroup5);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\"\"" + "'", str9, "\"\"");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "_tset\"\\0\"" + "'", str11, "_tset\"\\0\"");
    }

    @Test
    public void test1603() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1603");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray1 = python3Target0.targetCharValueEscape;
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        int int3 = python3Target0.getInlineTestSetWordSize();
        org.antlr.v4.codegen.CodeGenerator codeGenerator4 = python3Target0.gen;
        org.antlr.v4.codegen.CodeGenerator codeGenerator5 = python3Target0.getCodeGenerator();
        java.lang.Class<?> wildcardClass6 = python3Target0.getClass();
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 64 + "'", int3 == 64);
        org.junit.Assert.assertNull(codeGenerator4);
        org.junit.Assert.assertNull(codeGenerator5);
        org.junit.Assert.assertNotNull(wildcardClass6);
    }

    @Test
    public void test1604() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1604");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!", "hi!" };
        python3Target0.targetCharValueEscape = strArray5;
        java.lang.String str8 = python3Target0.getTargetStringLiteralFromString("\"\"");
        java.lang.String str9 = python3Target0.getLanguage();
        org.antlr.v4.codegen.target.Python3Target python3Target10 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean11 = python3Target10.supportsOverloadedMethods();
        java.lang.String str12 = python3Target10.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator13 = null;
        java.lang.String str16 = python3Target10.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator13, "", true);
        java.lang.String str17 = python3Target10.getVersion();
        org.antlr.v4.codegen.target.Python3Target python3Target18 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean19 = python3Target18.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup20 = python3Target18.templates;
        java.lang.String[] strArray23 = new java.lang.String[] { "hi!", "hi!" };
        python3Target18.targetCharValueEscape = strArray23;
        java.lang.String[] strArray26 = new java.lang.String[] { "hi!" };
        org.antlr.v4.codegen.target.Python3Target.python3Keywords = strArray26;
        python3Target18.targetCharValueEscape = strArray26;
        org.antlr.v4.codegen.target.Python3Target.python3Keywords = strArray26;
        python3Target10.targetCharValueEscape = strArray26;
        python3Target0.targetCharValueEscape = strArray26;
        org.antlr.v4.tool.Grammar grammar32 = null;
        org.stringtemplate.v4.ST sT33 = null;
        python3Target0.genRecognizerHeaderFile(grammar32, sT33, "\"_tsetHi!Context\"");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str37 = python3Target0.getListLabel("\"\"DContext\"\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\"\"\"\"" + "'", str8, "\"\"\"\"");
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "4.5.2.1" + "'", str12, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "\"\"" + "'", str16, "\"\"");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "4.5.2.1" + "'", str17, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(sTGroup20);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertNotNull(strArray26);
    }

    @Test
    public void test1605() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1605");
        org.antlr.v4.codegen.target.Python3Target.PythonStringRenderer pythonStringRenderer0 = new org.antlr.v4.codegen.target.Python3Target.PythonStringRenderer();
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean2 = python3Target1.supportsOverloadedMethods();
        java.lang.String str3 = python3Target1.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator4 = python3Target1.getCodeGenerator();
        org.stringtemplate.v4.STGroup sTGroup5 = null;
        python3Target1.templates = sTGroup5;
        org.stringtemplate.v4.STGroup sTGroup7 = python3Target1.templates;
        java.util.Locale locale9 = null;
        java.lang.String str10 = pythonStringRenderer0.toString((java.lang.Object) sTGroup7, "Hi!Context", locale9);
        java.util.Locale locale13 = null;
        java.lang.String str14 = pythonStringRenderer0.toString((java.lang.Object) "_\"\"\\\"\\\"hi!\\\"\\\"\"\"Context", "\"\"\"\"hi!\"\"\"\"", locale13);
        org.antlr.v4.codegen.target.Python3Target python3Target15 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean16 = python3Target15.supportsOverloadedMethods();
        java.lang.String str17 = python3Target15.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator18 = python3Target15.getCodeGenerator();
        org.stringtemplate.v4.STGroup sTGroup19 = null;
        python3Target15.templates = sTGroup19;
        org.stringtemplate.v4.STGroup sTGroup21 = python3Target15.templates;
        org.antlr.v4.tool.Grammar grammar22 = null;
        org.stringtemplate.v4.ST sT23 = null;
        python3Target15.genRecognizerHeaderFile(grammar22, sT23, "");
        java.util.Locale locale27 = null;
        java.lang.String str28 = pythonStringRenderer0.toString((java.lang.Object) grammar22, "\"_\"\"\"DContext\"\"Context\"\"", locale27);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "4.5.2.1" + "'", str3, "4.5.2.1");
        org.junit.Assert.assertNull(codeGenerator4);
        org.junit.Assert.assertNull(sTGroup7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Hi!Context" + "'", str10, "Hi!Context");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "\"\"\"\"hi!\"\"\"\"" + "'", str14, "\"\"\"\"hi!\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "4.5.2.1" + "'", str17, "4.5.2.1");
        org.junit.Assert.assertNull(codeGenerator18);
        org.junit.Assert.assertNull(sTGroup21);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "\"_\"\"\"DContext\"\"Context\"\"" + "'", str28, "\"_\"\"\"DContext\"\"Context\"\"");
    }

    @Test
    public void test1606() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1606");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray1 = python3Target0.targetCharValueEscape;
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        int int3 = python3Target0.getInlineTestSetWordSize();
        boolean boolean4 = python3Target0.supportsOverloadedMethods();
        java.lang.String str6 = python3Target0.encodeIntAsCharEscape(64);
        java.lang.String str9 = python3Target0.getTargetStringLiteralFromString("\"Python3\"", false);
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = python3Target0.gen;
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 64 + "'", int3 == 64);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "@" + "'", str6, "@");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\"Python3\"" + "'", str9, "\"Python3\"");
        org.junit.Assert.assertNull(codeGenerator10);
    }

    @Test
    public void test1607() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1607");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        python3Target0.language = "";
        org.antlr.v4.codegen.target.Python3Target python3Target3 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean4 = python3Target3.supportsOverloadedMethods();
        java.lang.String str5 = python3Target3.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = null;
        java.lang.String str9 = python3Target3.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator6, "", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = null;
        python3Target3.gen = codeGenerator10;
        java.lang.String[] strArray19 = new java.lang.String[] { "\"\"\"\"", "\\12", "\"\"", "4.5.2.1", "", "\"\"\"\"", "\"\"" };
        java.util.LinkedHashSet<java.lang.String> strSet20 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet20, strArray19);
        python3Target3.badWords = strSet20;
        python3Target0.badWords = strSet20;
        python3Target0.addBadWords();
        java.lang.String[] strArray25 = python3Target0.targetCharValueEscape;
        java.util.Set<java.lang.String> strSet26 = python3Target0.getBadWords();
        org.stringtemplate.v4.STGroup sTGroup27 = python3Target0.templates;
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "4.5.2.1" + "'", str5, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\"\"" + "'", str9, "\"\"");
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertNotNull(strSet26);
        org.junit.Assert.assertNull(sTGroup27);
    }

    @Test
    public void test1608() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1608");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        python3Target0.language = "4.5.2.1";
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = python3Target0.getCodeGenerator();
        java.lang.String str4 = python3Target0.language;
        python3Target0.language = "\"\"\"\"\"\"\"\"ContextContextContext";
        org.junit.Assert.assertNull(codeGenerator3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "4.5.2.1" + "'", str4, "4.5.2.1");
    }

    @Test
    public void test1609() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1609");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!", "hi!" };
        python3Target0.targetCharValueEscape = strArray5;
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = null;
        java.lang.String str10 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator7, "", false);
        java.util.Set<java.lang.String> strSet11 = python3Target0.badWords;
        java.lang.String str13 = python3Target0.getTargetStringLiteralFromString("12");
        int int14 = python3Target0.getSerializedATNSegmentLimit();
        boolean boolean15 = python3Target0.supportsOverloadedMethods();
        org.antlr.v4.tool.Grammar grammar16 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target17 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean18 = python3Target17.supportsOverloadedMethods();
        java.util.Set<java.lang.String> strSet19 = python3Target17.badWords;
        boolean boolean20 = python3Target17.templatesExist();
        java.lang.String str21 = python3Target17.getLanguage();
        org.antlr.v4.tool.Grammar grammar22 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target23 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str25 = python3Target23.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator26 = null;
        python3Target23.gen = codeGenerator26;
        org.antlr.v4.tool.Grammar grammar28 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target29 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str31 = python3Target29.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.tool.Grammar grammar32 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target33 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean34 = python3Target33.supportsOverloadedMethods();
        java.lang.String str35 = python3Target33.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator36 = null;
        java.lang.String str39 = python3Target33.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator36, "", true);
        java.lang.String str40 = python3Target33.getVersion();
        org.antlr.v4.tool.Grammar grammar41 = null;
        int[] intArray42 = new int[] {};
        java.lang.String[] strArray43 = python3Target33.getTokenTypesAsTargetLabels(grammar41, intArray42);
        java.lang.String[] strArray44 = python3Target29.getTokenTypesAsTargetLabels(grammar32, intArray42);
        java.lang.String[] strArray45 = python3Target23.getTokenTypesAsTargetLabels(grammar28, intArray42);
        java.lang.String[] strArray46 = python3Target17.getTokenTypesAsTargetLabels(grammar22, intArray42);
        java.lang.String[] strArray47 = python3Target0.getTokenTypesAsTargetLabels(grammar16, intArray42);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str49 = python3Target0.getAltLabelContextStructName("Conte");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNotNull(strSet11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "\"12\"" + "'", str13, "\"12\"");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 29 + "'", int14 == 29);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(strSet19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "\"\"\"\"\"\"" + "'", str25, "\"\"\"\"\"\"");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "\"\"\"\"\"\"" + "'", str31, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "4.5.2.1" + "'", str35, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "\"\"" + "'", str39, "\"\"");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "4.5.2.1" + "'", str40, "4.5.2.1");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[]");
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertNotNull(strArray47);
    }

    @Test
    public void test1610() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1610");
        java.lang.String str1 = org.stringtemplate.v4.StringRenderer.escapeHTML("\"\"\"DContext\"\"Context\"");
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "\"\"\"DContext\"\"Context\"" + "'", str1, "\"\"\"DContext\"\"Context\"");
    }

    @Test
    public void test1611() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1611");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python3Target1.getBadWords();
        java.lang.String str4 = python3Target1.getAltLabelContextStructName("d");
        org.stringtemplate.v4.STGroup sTGroup5 = python3Target1.getTemplates();
        java.lang.String str6 = python3Target1.language;
        org.stringtemplate.v4.STGroup sTGroup7 = python3Target1.getTemplates();
        org.stringtemplate.v4.STGroup sTGroup8 = python3Target1.templates;
        java.util.Set<java.lang.String> strSet9 = python3Target1.getBadWords();
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "DContext" + "'", str4, "DContext");
        org.junit.Assert.assertNotNull(sTGroup5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Python3" + "'", str6, "Python3");
        org.junit.Assert.assertNotNull(sTGroup7);
        org.junit.Assert.assertNotNull(sTGroup8);
        org.junit.Assert.assertNotNull(strSet9);
    }

    @Test
    public void test1612() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1612");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray1 = python3Target0.targetCharValueEscape;
        java.lang.String str2 = python3Target0.language;
        int int3 = python3Target0.getSerializedATNSegmentLimit();
        java.lang.String str6 = python3Target0.getTargetStringLiteralFromString("\"\"\"\"\"\"", false);
        boolean boolean7 = python3Target0.supportsOverloadedMethods();
        org.antlr.v4.codegen.target.Python3Target python3Target8 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str10 = python3Target8.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.codegen.target.Python3Target python3Target11 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean12 = python3Target11.supportsOverloadedMethods();
        java.util.Set<java.lang.String> strSet13 = python3Target11.badWords;
        python3Target8.badWords = strSet13;
        python3Target0.badWords = strSet13;
        java.lang.String[] strArray17 = new java.lang.String[] { "hi!" };
        org.antlr.v4.codegen.target.Python3Target.python3Keywords = strArray17;
        org.antlr.v4.codegen.target.Python3Target.python3Keywords = strArray17;
        python3Target0.targetCharValueEscape = strArray17;
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 29 + "'", int3 == 29);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\"\"\"\"\"\"" + "'", str6, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\"\"\"\"\"\"" + "'", str10, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(strSet13);
        org.junit.Assert.assertNotNull(strArray17);
    }

    @Test
    public void test1613() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1613");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!", "hi!" };
        python3Target0.targetCharValueEscape = strArray5;
        java.lang.String str8 = python3Target0.getTargetStringLiteralFromString("\"\"");
        java.lang.String str10 = python3Target0.getTargetStringLiteralFromString("\"\"");
        java.lang.String str11 = python3Target0.getLanguage();
        int int12 = python3Target0.getInlineTestSetWordSize();
        boolean boolean13 = python3Target0.wantsBaseVisitor();
        java.lang.String str14 = python3Target0.getLanguage();
        org.antlr.v4.codegen.target.Python3Target python3Target15 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean16 = python3Target15.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup17 = python3Target15.templates;
        java.lang.String[] strArray20 = new java.lang.String[] { "hi!", "hi!" };
        python3Target15.targetCharValueEscape = strArray20;
        org.antlr.v4.codegen.CodeGenerator codeGenerator22 = null;
        java.lang.String str25 = python3Target15.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator22, "", false);
        int int26 = python3Target15.getSerializedATNSegmentLimit();
        java.lang.String str27 = python3Target15.getVersion();
        boolean boolean28 = python3Target15.supportsOverloadedMethods();
        org.antlr.v4.codegen.target.Python3Target python3Target29 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean30 = python3Target29.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup31 = python3Target29.templates;
        java.lang.String[] strArray34 = new java.lang.String[] { "hi!", "hi!" };
        python3Target29.targetCharValueEscape = strArray34;
        java.lang.String[] strArray37 = new java.lang.String[] { "hi!" };
        org.antlr.v4.codegen.target.Python3Target.python3Keywords = strArray37;
        python3Target29.targetCharValueEscape = strArray37;
        org.antlr.v4.codegen.target.Python3Target.python3Keywords = strArray37;
        python3Target15.targetCharValueEscape = strArray37;
        python3Target0.targetCharValueEscape = strArray37;
        org.antlr.v4.codegen.CodeGenerator codeGenerator43 = null;
        python3Target0.gen = codeGenerator43;
        java.lang.String str45 = python3Target0.language;
        org.stringtemplate.v4.STGroup sTGroup46 = python3Target0.templates;
        org.stringtemplate.v4.STGroup sTGroup47 = python3Target0.templates;
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\"\"\"\"" + "'", str8, "\"\"\"\"");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\"\"\"\"" + "'", str10, "\"\"\"\"");
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 64 + "'", int12 == 64);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(sTGroup17);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 29 + "'", int26 == 29);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "4.5.2.1" + "'", str27, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNull(sTGroup31);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertNull(sTGroup46);
        org.junit.Assert.assertNull(sTGroup47);
    }

    @Test
    public void test1614() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1614");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        org.antlr.v4.tool.Grammar grammar3 = null;
        org.stringtemplate.v4.ST sT4 = null;
        python3Target0.genRecognizerHeaderFile(grammar3, sT4, "");
        python3Target0.language = "Python3";
        java.util.Set<java.lang.String> strSet9 = null;
        python3Target0.badWords = strSet9;
        boolean boolean11 = python3Target0.wantsBaseVisitor();
        java.lang.String str13 = python3Target0.getImplicitSetLabel("Python3");
        int int14 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str15 = python3Target0.language;
        java.lang.String str16 = python3Target0.getLanguage();
        int int17 = python3Target0.getInlineTestSetWordSize();
        org.stringtemplate.v4.STGroup sTGroup18 = python3Target0.getTemplates();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "_tsetPython3" + "'", str13, "_tsetPython3");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 64 + "'", int14 == 64);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Python3" + "'", str15, "Python3");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Python3" + "'", str16, "Python3");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 64 + "'", int17 == 64);
        org.junit.Assert.assertNotNull(sTGroup18);
    }

    @Test
    public void test1615() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1615");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!", "hi!" };
        python3Target0.targetCharValueEscape = strArray5;
        java.lang.String str8 = python3Target0.getTargetStringLiteralFromString("\"\"");
        java.lang.String str10 = python3Target0.getTargetStringLiteralFromString("\"\"");
        java.lang.String str11 = python3Target0.getLanguage();
        int int12 = python3Target0.getInlineTestSetWordSize();
        boolean boolean13 = python3Target0.wantsBaseVisitor();
        java.lang.String str14 = python3Target0.getLanguage();
        org.antlr.v4.codegen.target.Python3Target python3Target15 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean16 = python3Target15.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup17 = python3Target15.templates;
        java.lang.String[] strArray20 = new java.lang.String[] { "hi!", "hi!" };
        python3Target15.targetCharValueEscape = strArray20;
        org.antlr.v4.codegen.CodeGenerator codeGenerator22 = null;
        java.lang.String str25 = python3Target15.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator22, "", false);
        int int26 = python3Target15.getSerializedATNSegmentLimit();
        java.lang.String str27 = python3Target15.getVersion();
        boolean boolean28 = python3Target15.supportsOverloadedMethods();
        org.antlr.v4.codegen.target.Python3Target python3Target29 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean30 = python3Target29.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup31 = python3Target29.templates;
        java.lang.String[] strArray34 = new java.lang.String[] { "hi!", "hi!" };
        python3Target29.targetCharValueEscape = strArray34;
        java.lang.String[] strArray37 = new java.lang.String[] { "hi!" };
        org.antlr.v4.codegen.target.Python3Target.python3Keywords = strArray37;
        python3Target29.targetCharValueEscape = strArray37;
        org.antlr.v4.codegen.target.Python3Target.python3Keywords = strArray37;
        python3Target15.targetCharValueEscape = strArray37;
        python3Target0.targetCharValueEscape = strArray37;
        org.antlr.v4.codegen.CodeGenerator codeGenerator43 = null;
        python3Target0.gen = codeGenerator43;
        java.lang.String str45 = python3Target0.language;
        python3Target0.language = "\"\\\"Python3\\\"\"";
        org.antlr.v4.codegen.CodeGenerator codeGenerator48 = null;
        python3Target0.gen = codeGenerator48;
        java.lang.String str50 = python3Target0.language;
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\"\"\"\"" + "'", str8, "\"\"\"\"");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\"\"\"\"" + "'", str10, "\"\"\"\"");
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 64 + "'", int12 == 64);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(sTGroup17);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 29 + "'", int26 == 29);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "4.5.2.1" + "'", str27, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNull(sTGroup31);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "\"\\\"Python3\\\"\"" + "'", str50, "\"\\\"Python3\\\"\"");
    }

    @Test
    public void test1616() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1616");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python3Target1.getBadWords();
        org.antlr.v4.codegen.target.Python3Target python3Target3 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str5 = python3Target3.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.codegen.target.Python3Target python3Target6 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean7 = python3Target6.supportsOverloadedMethods();
        java.util.Set<java.lang.String> strSet8 = python3Target6.badWords;
        python3Target3.badWords = strSet8;
        python3Target1.badWords = strSet8;
        java.util.Set<java.lang.String> strSet11 = python3Target1.badWords;
        java.lang.String str12 = python3Target1.language;
        boolean boolean13 = python3Target1.templatesExist();
        org.antlr.v4.codegen.target.Python3Target python3Target14 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray15 = python3Target14.targetCharValueEscape;
        org.stringtemplate.v4.STGroup sTGroup16 = python3Target14.templates;
        org.antlr.v4.codegen.CodeGenerator codeGenerator17 = null;
        java.lang.String str20 = python3Target14.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator17, "\"\\12\"", false);
        int int21 = python3Target14.getInlineTestSetWordSize();
        org.antlr.v4.codegen.CodeGenerator codeGenerator22 = python3Target14.getCodeGenerator();
        org.antlr.v4.codegen.CodeGenerator codeGenerator23 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target24 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator23);
        java.lang.String str26 = python3Target24.getTargetStringLiteralFromString("");
        int int27 = python3Target24.getSerializedATNSegmentLimit();
        java.lang.String str28 = python3Target24.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup29 = python3Target24.loadTemplates();
        python3Target14.templates = sTGroup29;
        org.antlr.v4.codegen.CodeGenerator codeGenerator31 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target32 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator31);
        java.lang.String str34 = python3Target32.getTargetStringLiteralFromString("");
        int int35 = python3Target32.getSerializedATNSegmentLimit();
        boolean boolean36 = python3Target32.wantsBaseVisitor();
        org.stringtemplate.v4.STGroup sTGroup37 = python3Target32.loadTemplates();
        org.antlr.v4.codegen.CodeGenerator codeGenerator38 = python3Target32.gen;
        org.antlr.v4.codegen.target.Python3Target python3Target39 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean40 = python3Target39.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup41 = python3Target39.templates;
        org.antlr.v4.tool.Grammar grammar42 = null;
        org.stringtemplate.v4.ST sT43 = null;
        python3Target39.genRecognizerHeaderFile(grammar42, sT43, "");
        python3Target39.language = "Python3";
        int int48 = python3Target39.getSerializedATNSegmentLimit();
        org.stringtemplate.v4.STGroup sTGroup49 = python3Target39.loadTemplates();
        python3Target32.templates = sTGroup49;
        java.lang.String str51 = python3Target32.getVersion();
        java.util.Set<java.lang.String> strSet52 = python3Target32.getBadWords();
        python3Target14.badWords = strSet52;
        python3Target1.badWords = strSet52;
        org.antlr.v4.codegen.CodeGenerator codeGenerator55 = python3Target1.gen;
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "\"\"\"\"\"\"" + "'", str5, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertNotNull(strSet11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Python3" + "'", str12, "Python3");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNull(sTGroup16);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "12" + "'", str20, "12");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 64 + "'", int21 == 64);
        org.junit.Assert.assertNull(codeGenerator22);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "\"\"" + "'", str26, "\"\"");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 29 + "'", int27 == 29);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "Python3" + "'", str28, "Python3");
        org.junit.Assert.assertNotNull(sTGroup29);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "\"\"" + "'", str34, "\"\"");
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 29 + "'", int35 == 29);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(sTGroup37);
        org.junit.Assert.assertNull(codeGenerator38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNull(sTGroup41);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 29 + "'", int48 == 29);
        org.junit.Assert.assertNotNull(sTGroup49);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "4.5.2.1" + "'", str51, "4.5.2.1");
        org.junit.Assert.assertNotNull(strSet52);
        org.junit.Assert.assertNull(codeGenerator55);
    }

    @Test
    public void test1617() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1617");
        java.lang.String str1 = org.stringtemplate.v4.StringRenderer.escapeHTML("_tset_tset\"\\\"Python3\\\"\"Context");
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "_tset_tset\"\\\"Python3\\\"\"Context" + "'", str1, "_tset_tset\"\\\"Python3\\\"\"Context");
    }

    @Test
    public void test1618() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1618");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.lang.String str3 = python3Target1.getTargetStringLiteralFromString("");
        int int4 = python3Target1.getSerializedATNSegmentLimit();
        boolean boolean5 = python3Target1.wantsBaseVisitor();
        java.lang.String str6 = python3Target1.getVersion();
        java.lang.String str8 = python3Target1.encodeIntAsCharEscape(29);
        org.antlr.v4.codegen.CodeGenerator codeGenerator9 = python3Target1.getCodeGenerator();
        int int10 = python3Target1.getSerializedATNSegmentLimit();
        java.lang.String str12 = python3Target1.getListLabel("\"\\\"0\\\"\"");
        int int13 = python3Target1.getSerializedATNSegmentLimit();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "\"\"" + "'", str3, "\"\"");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 29 + "'", int4 == 29);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "4.5.2.1" + "'", str6, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\\35" + "'", str8, "\\35");
        org.junit.Assert.assertNull(codeGenerator9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 29 + "'", int10 == 29);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "\"\\\"0\\\"\"" + "'", str12, "\"\\\"0\\\"\"");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 29 + "'", int13 == 29);
    }

    @Test
    public void test1619() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1619");
        java.lang.String str1 = org.stringtemplate.v4.StringRenderer.escapeHTML("\"\"\\\"\\\"\\\"\\\"\\\"\\\"Context\"\"");
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "\"\"\\\"\\\"\\\"\\\"\\\"\\\"Context\"\"" + "'", str1, "\"\"\\\"\\\"\\\"\\\"\\\"\\\"Context\"\"");
    }

    @Test
    public void test1620() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1620");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!", "hi!" };
        python3Target0.targetCharValueEscape = strArray5;
        java.lang.String[] strArray8 = new java.lang.String[] { "hi!" };
        org.antlr.v4.codegen.target.Python3Target.python3Keywords = strArray8;
        python3Target0.targetCharValueEscape = strArray8;
        java.util.Set<java.lang.String> strSet11 = python3Target0.getBadWords();
        int int12 = python3Target0.getInlineTestSetWordSize();
        org.antlr.v4.codegen.CodeGenerator codeGenerator13 = python3Target0.getCodeGenerator();
        org.antlr.v4.codegen.CodeGenerator codeGenerator14 = null;
        python3Target0.gen = codeGenerator14;
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(strSet11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 64 + "'", int12 == 64);
        org.junit.Assert.assertNull(codeGenerator13);
    }

    @Test
    public void test1621() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1621");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray1 = python3Target0.targetCharValueEscape;
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = null;
        java.lang.String str6 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator3, "\"\\12\"", false);
        java.lang.String str7 = python3Target0.getLanguage();
        java.lang.String str9 = python3Target0.getTargetStringLiteralFromString("Hi!Context");
        java.lang.String[] strArray10 = python3Target0.targetCharValueEscape;
        org.antlr.v4.tool.Grammar grammar11 = null;
        org.stringtemplate.v4.ST sT12 = null;
        python3Target0.genRecognizerHeaderFile(grammar11, sT12, "\"\"\"\"\"\"\"Context\"");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str16 = python3Target0.getImplicitTokenLabel("\"\"\"\"\"\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "12" + "'", str6, "12");
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\"Hi!Context\"" + "'", str9, "\"Hi!Context\"");
        org.junit.Assert.assertNotNull(strArray10);
    }

    @Test
    public void test1622() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1622");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python3Target1.getBadWords();
        java.lang.String str4 = python3Target1.getAltLabelContextStructName("d");
        org.stringtemplate.v4.STGroup sTGroup5 = python3Target1.getTemplates();
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = null;
        java.lang.String str9 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator6, "", true);
        java.lang.String str11 = python3Target1.getImplicitSetLabel("\"\\0\"");
        java.lang.String str13 = python3Target1.getListLabel("\"Python3\"");
        java.lang.String str14 = python3Target1.getLanguage();
        java.util.Set<java.lang.String> strSet15 = python3Target1.badWords;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str17 = python3Target1.getElementName("_\"_tset\"\\\"Python3\\\"\"\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "DContext" + "'", str4, "DContext");
        org.junit.Assert.assertNotNull(sTGroup5);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\"\"" + "'", str9, "\"\"");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "_tset\"\\0\"" + "'", str11, "_tset\"\\0\"");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "\"Python3\"" + "'", str13, "\"Python3\"");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Python3" + "'", str14, "Python3");
        org.junit.Assert.assertNotNull(strSet15);
    }

    @Test
    public void test1623() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1623");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        java.lang.String str2 = python3Target0.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = null;
        java.lang.String str6 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator3, "", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = null;
        python3Target0.gen = codeGenerator7;
        java.lang.String[] strArray16 = new java.lang.String[] { "\"\"\"\"", "\\12", "\"\"", "4.5.2.1", "", "\"\"\"\"", "\"\"" };
        java.util.LinkedHashSet<java.lang.String> strSet17 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet17, strArray16);
        python3Target0.badWords = strSet17;
        org.antlr.v4.codegen.CodeGenerator codeGenerator20 = python3Target0.gen;
        java.lang.String str23 = python3Target0.getTargetStringLiteralFromString("\\12", true);
        java.lang.String str25 = python3Target0.getTargetStringLiteralFromString("hi!");
        org.antlr.v4.codegen.CodeGenerator codeGenerator26 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target27 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator26);
        java.util.Set<java.lang.String> strSet28 = python3Target27.getBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator29 = null;
        python3Target27.gen = codeGenerator29;
        java.lang.String str32 = python3Target27.getAltLabelContextStructName("hi!");
        java.lang.String str35 = python3Target27.getTargetStringLiteralFromString("\"hi!\"", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator36 = null;
        python3Target27.gen = codeGenerator36;
        org.antlr.v4.tool.Grammar grammar38 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target39 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray40 = python3Target39.targetCharValueEscape;
        org.stringtemplate.v4.STGroup sTGroup41 = python3Target39.templates;
        int int42 = python3Target39.getInlineTestSetWordSize();
        org.antlr.v4.codegen.CodeGenerator codeGenerator43 = python3Target39.gen;
        org.antlr.v4.tool.Grammar grammar44 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target45 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str47 = python3Target45.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.tool.Grammar grammar48 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target49 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean50 = python3Target49.supportsOverloadedMethods();
        java.lang.String str51 = python3Target49.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator52 = null;
        java.lang.String str55 = python3Target49.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator52, "", true);
        java.lang.String str56 = python3Target49.getVersion();
        org.antlr.v4.tool.Grammar grammar57 = null;
        int[] intArray58 = new int[] {};
        java.lang.String[] strArray59 = python3Target49.getTokenTypesAsTargetLabels(grammar57, intArray58);
        java.lang.String[] strArray60 = python3Target45.getTokenTypesAsTargetLabels(grammar48, intArray58);
        java.lang.String[] strArray61 = python3Target39.getTokenTypesAsTargetLabels(grammar44, intArray58);
        java.lang.String[] strArray62 = python3Target27.getTokenTypesAsTargetLabels(grammar38, intArray58);
        java.lang.String[] strArray63 = python3Target27.targetCharValueEscape;
        java.lang.String str65 = python3Target27.getImplicitRuleLabel("#");
        java.lang.String str67 = python3Target27.getAltLabelContextStructName("\"\\\"\\\"\\\\1\\\"\\\"\"");
        org.stringtemplate.v4.STGroup sTGroup68 = python3Target27.templates;
        python3Target0.templates = sTGroup68;
        boolean boolean70 = python3Target0.supportsOverloadedMethods();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "4.5.2.1" + "'", str2, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\"\"" + "'", str6, "\"\"");
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNull(codeGenerator20);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "\"\\12\"" + "'", str23, "\"\\12\"");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "\"hi!\"" + "'", str25, "\"hi!\"");
        org.junit.Assert.assertNotNull(strSet28);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "Hi!Context" + "'", str32, "Hi!Context");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "\"\\\"hi!\\\"\"" + "'", str35, "\"\\\"hi!\\\"\"");
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertNull(sTGroup41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 64 + "'", int42 == 64);
        org.junit.Assert.assertNull(codeGenerator43);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "\"\"\"\"\"\"" + "'", str47, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "4.5.2.1" + "'", str51, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "\"\"" + "'", str55, "\"\"");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "4.5.2.1" + "'", str56, "4.5.2.1");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[]");
        org.junit.Assert.assertNotNull(strArray59);
        org.junit.Assert.assertNotNull(strArray60);
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertNotNull(strArray62);
        org.junit.Assert.assertNotNull(strArray63);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "_#" + "'", str65, "_#");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "\"\\\"\\\"\\\\1\\\"\\\"\"Context" + "'", str67, "\"\\\"\\\"\\\\1\\\"\\\"\"Context");
        org.junit.Assert.assertNotNull(sTGroup68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
    }

    @Test
    public void test1624() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1624");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        java.lang.String str2 = python3Target0.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = null;
        java.lang.String str6 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator3, "", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = null;
        python3Target0.gen = codeGenerator7;
        int int9 = python3Target0.getSerializedATNSegmentLimit();
        org.antlr.v4.tool.Grammar grammar10 = null;
        org.stringtemplate.v4.ST sT11 = null;
        python3Target0.genRecognizerHeaderFile(grammar10, sT11, "_tset12");
        java.lang.String str15 = python3Target0.encodeIntAsCharEscape(0);
        java.util.Set<java.lang.String> strSet16 = python3Target0.badWords;
        org.antlr.v4.codegen.CodeGenerator codeGenerator17 = python3Target0.getCodeGenerator();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "4.5.2.1" + "'", str2, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\"\"" + "'", str6, "\"\"");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 29 + "'", int9 == 29);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "\\0" + "'", str15, "\\0");
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertNull(codeGenerator17);
    }

    @Test
    public void test1625() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1625");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        java.lang.String str2 = python3Target0.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = null;
        java.lang.String str6 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator3, "", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = null;
        python3Target0.gen = codeGenerator7;
        java.lang.String[] strArray16 = new java.lang.String[] { "\"\"\"\"", "\\12", "\"\"", "4.5.2.1", "", "\"\"\"\"", "\"\"" };
        java.util.LinkedHashSet<java.lang.String> strSet17 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet17, strArray16);
        python3Target0.badWords = strSet17;
        org.antlr.v4.tool.Grammar grammar20 = null;
        org.stringtemplate.v4.ST sT21 = null;
        python3Target0.genRecognizerHeaderFile(grammar20, sT21, "\"\"");
        java.lang.String str25 = python3Target0.encodeIntAsCharEscape((int) (byte) 10);
        java.lang.String str26 = python3Target0.language;
        java.util.Set<java.lang.String> strSet27 = python3Target0.getBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator28 = null;
        java.lang.String str31 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator28, "", false);
        java.util.Set<java.lang.String> strSet32 = python3Target0.badWords;
        boolean boolean33 = python3Target0.supportsOverloadedMethods();
        boolean boolean34 = python3Target0.supportsOverloadedMethods();
        org.antlr.v4.codegen.CodeGenerator codeGenerator35 = python3Target0.gen;
        java.lang.String str36 = python3Target0.getLanguage();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str38 = python3Target0.encodeIntAsCharEscape((int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot encode the specified value: -1");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "4.5.2.1" + "'", str2, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\"\"" + "'", str6, "\"\"");
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "\\12" + "'", str25, "\\12");
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(strSet27);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "" + "'", str31, "");
        org.junit.Assert.assertNotNull(strSet32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNull(codeGenerator35);
        org.junit.Assert.assertNull(str36);
    }

    @Test
    public void test1626() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1626");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray1 = python3Target0.targetCharValueEscape;
        java.lang.String str2 = python3Target0.language;
        int int3 = python3Target0.getSerializedATNSegmentLimit();
        org.antlr.v4.codegen.CodeGenerator codeGenerator4 = python3Target0.getCodeGenerator();
        org.antlr.v4.codegen.CodeGenerator codeGenerator5 = null;
        java.lang.String str8 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator5, "_tset\"\\\"\\\"hi!\\\"\\\"\"", true);
        java.lang.String str9 = python3Target0.language;
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target11 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator10);
        java.util.Set<java.lang.String> strSet12 = python3Target11.getBadWords();
        org.antlr.v4.codegen.target.Python3Target python3Target13 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str15 = python3Target13.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.codegen.target.Python3Target python3Target16 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean17 = python3Target16.supportsOverloadedMethods();
        java.util.Set<java.lang.String> strSet18 = python3Target16.badWords;
        python3Target13.badWords = strSet18;
        python3Target11.badWords = strSet18;
        python3Target0.badWords = strSet18;
        org.antlr.v4.tool.ast.GrammarAST grammarAST22 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean23 = python3Target0.grammarSymbolCausesIssueInGeneratedCode(grammarAST22);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 29 + "'", int3 == 29);
        org.junit.Assert.assertNull(codeGenerator4);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\"tset\\\"\\\"\\\"hi!\\\"\\\"\"" + "'", str8, "\"tset\\\"\\\"\\\"hi!\\\"\\\"\"");
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "\"\"\"\"\"\"" + "'", str15, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(strSet18);
    }

    @Test
    public void test1627() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1627");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python3Target1.getBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = null;
        python3Target1.gen = codeGenerator3;
        java.lang.String str6 = python3Target1.getAltLabelContextStructName("hi!");
        java.lang.String str9 = python3Target1.getTargetStringLiteralFromString("\"hi!\"", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = null;
        python3Target1.gen = codeGenerator10;
        org.antlr.v4.tool.Grammar grammar12 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target13 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray14 = python3Target13.targetCharValueEscape;
        org.stringtemplate.v4.STGroup sTGroup15 = python3Target13.templates;
        int int16 = python3Target13.getInlineTestSetWordSize();
        org.antlr.v4.codegen.CodeGenerator codeGenerator17 = python3Target13.gen;
        org.antlr.v4.tool.Grammar grammar18 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target19 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str21 = python3Target19.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.tool.Grammar grammar22 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target23 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean24 = python3Target23.supportsOverloadedMethods();
        java.lang.String str25 = python3Target23.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator26 = null;
        java.lang.String str29 = python3Target23.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator26, "", true);
        java.lang.String str30 = python3Target23.getVersion();
        org.antlr.v4.tool.Grammar grammar31 = null;
        int[] intArray32 = new int[] {};
        java.lang.String[] strArray33 = python3Target23.getTokenTypesAsTargetLabels(grammar31, intArray32);
        java.lang.String[] strArray34 = python3Target19.getTokenTypesAsTargetLabels(grammar22, intArray32);
        java.lang.String[] strArray35 = python3Target13.getTokenTypesAsTargetLabels(grammar18, intArray32);
        java.lang.String[] strArray36 = python3Target1.getTokenTypesAsTargetLabels(grammar12, intArray32);
        java.lang.String[] strArray37 = python3Target1.targetCharValueEscape;
        java.lang.String str39 = python3Target1.getImplicitRuleLabel("#");
        java.lang.String str41 = python3Target1.getListLabel("\"\"tset\\\"\\\"\\\"hi!\\\"\\\"\"\"");
        org.antlr.v4.codegen.model.RuleFunction ruleFunction42 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str43 = python3Target1.getRuleFunctionContextStructName(ruleFunction42);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Hi!Context" + "'", str6, "Hi!Context");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\"\\\"hi!\\\"\"" + "'", str9, "\"\\\"hi!\\\"\"");
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertNull(sTGroup15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 64 + "'", int16 == 64);
        org.junit.Assert.assertNull(codeGenerator17);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "\"\"\"\"\"\"" + "'", str21, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "4.5.2.1" + "'", str25, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "\"\"" + "'", str29, "\"\"");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "4.5.2.1" + "'", str30, "4.5.2.1");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[]");
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "_#" + "'", str39, "_#");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "\"\"tset\\\"\\\"\\\"hi!\\\"\\\"\"\"" + "'", str41, "\"\"tset\\\"\\\"\\\"hi!\\\"\\\"\"\"");
    }

    @Test
    public void test1628() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1628");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.wantsBaseVisitor();
        org.antlr.v4.codegen.model.RuleFunction ruleFunction2 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str3 = python3Target0.getRuleFunctionContextStructName(ruleFunction2);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
    }

    @Test
    public void test1629() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1629");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        org.antlr.v4.tool.Grammar grammar3 = null;
        org.stringtemplate.v4.ST sT4 = null;
        python3Target0.genRecognizerHeaderFile(grammar3, sT4, "");
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = python3Target0.getCodeGenerator();
        java.util.Set<java.lang.String> strSet8 = python3Target0.badWords;
        java.lang.String[] strArray9 = python3Target0.targetCharValueEscape;
        java.lang.String str11 = python3Target0.getTargetStringLiteralFromString("\\12");
        org.antlr.v4.codegen.CodeGenerator codeGenerator12 = python3Target0.getCodeGenerator();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str14 = python3Target0.getAltLabelContextStructName("tset\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"ContextContextConte");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertNull(codeGenerator7);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "\"\\12\"" + "'", str11, "\"\\12\"");
        org.junit.Assert.assertNull(codeGenerator12);
    }

    @Test
    public void test1630() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1630");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str2 = python3Target0.getTargetStringLiteralFromString("\"\"\"\"");
        java.lang.String str4 = python3Target0.getTargetStringLiteralFromString("");
        int int5 = python3Target0.getSerializedATNSegmentLimit();
        boolean boolean6 = python3Target0.templatesExist();
        java.lang.String str7 = python3Target0.getLanguage();
        java.lang.String str9 = python3Target0.getTargetStringLiteralFromString("\"\\\"4.5.2.1\\\"\"");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "\"\"\"\"\"\"" + "'", str2, "\"\"\"\"\"\"");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "\"\"" + "'", str4, "\"\"");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 29 + "'", int5 == 29);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\"\"\\\"4.5.2.1\\\"\"\"" + "'", str9, "\"\"\\\"4.5.2.1\\\"\"\"");
    }

    @Test
    public void test1631() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1631");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        java.lang.String str2 = python3Target0.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = null;
        java.lang.String str6 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator3, "", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = null;
        python3Target0.gen = codeGenerator7;
        java.lang.String[] strArray16 = new java.lang.String[] { "\"\"\"\"", "\\12", "\"\"", "4.5.2.1", "", "\"\"\"\"", "\"\"" };
        java.util.LinkedHashSet<java.lang.String> strSet17 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet17, strArray16);
        python3Target0.badWords = strSet17;
        org.antlr.v4.tool.Grammar grammar20 = null;
        org.stringtemplate.v4.ST sT21 = null;
        python3Target0.genRecognizerHeaderFile(grammar20, sT21, "\"\"");
        java.lang.String str25 = python3Target0.encodeIntAsCharEscape((int) (byte) 10);
        java.lang.String str26 = python3Target0.language;
        java.util.Set<java.lang.String> strSet27 = python3Target0.getBadWords();
        org.antlr.v4.tool.Rule rule28 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str29 = python3Target0.getRuleFunctionContextStructName(rule28);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "4.5.2.1" + "'", str2, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\"\"" + "'", str6, "\"\"");
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "\\12" + "'", str25, "\\12");
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(strSet27);
    }

    @Test
    public void test1632() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1632");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        org.antlr.v4.tool.Grammar grammar3 = null;
        org.stringtemplate.v4.ST sT4 = null;
        python3Target0.genRecognizerHeaderFile(grammar3, sT4, "");
        python3Target0.language = "Python3";
        int int9 = python3Target0.getSerializedATNSegmentLimit();
        java.lang.String str11 = python3Target0.getListLabel("_tsetPython3");
        boolean boolean12 = python3Target0.wantsBaseVisitor();
        java.util.Set<java.lang.String> strSet13 = python3Target0.getBadWords();
        org.antlr.v4.tool.Grammar grammar14 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str16 = python3Target0.getTokenTypeAsTargetLabel(grammar14, (int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 29 + "'", int9 == 29);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "_tsetPython3" + "'", str11, "_tsetPython3");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(strSet13);
    }

    @Test
    public void test1633() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1633");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        python3Target0.language = "4.5.2.1";
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = python3Target0.getCodeGenerator();
        org.antlr.v4.codegen.CodeGenerator codeGenerator4 = python3Target0.gen;
        org.antlr.v4.codegen.CodeGenerator codeGenerator5 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target6 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator5);
        java.lang.String str8 = python3Target6.getTargetStringLiteralFromString("");
        int int9 = python3Target6.getSerializedATNSegmentLimit();
        boolean boolean10 = python3Target6.wantsBaseVisitor();
        org.stringtemplate.v4.STGroup sTGroup11 = python3Target6.loadTemplates();
        python3Target0.templates = sTGroup11;
        java.lang.String str14 = python3Target0.encodeIntAsCharEscape((int) (byte) 10);
        org.antlr.v4.codegen.CodeGenerator codeGenerator15 = null;
        python3Target0.gen = codeGenerator15;
        boolean boolean17 = python3Target0.wantsBaseListener();
        java.lang.String str19 = python3Target0.getImplicitSetLabel("_12");
        org.antlr.v4.tool.Grammar grammar20 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator21 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target22 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator21);
        java.lang.String str23 = python3Target22.getVersion();
        int int24 = python3Target22.getSerializedATNSegmentLimit();
        java.lang.String str25 = python3Target22.getVersion();
        boolean boolean26 = python3Target22.wantsBaseListener();
        python3Target22.addBadWords();
        org.antlr.v4.tool.Grammar grammar28 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator29 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target30 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator29);
        java.util.Set<java.lang.String> strSet31 = python3Target30.getBadWords();
        org.antlr.v4.codegen.target.Python3Target python3Target32 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str34 = python3Target32.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.codegen.target.Python3Target python3Target35 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean36 = python3Target35.supportsOverloadedMethods();
        java.util.Set<java.lang.String> strSet37 = python3Target35.badWords;
        python3Target32.badWords = strSet37;
        python3Target30.badWords = strSet37;
        java.util.Set<java.lang.String> strSet40 = python3Target30.badWords;
        org.antlr.v4.codegen.CodeGenerator codeGenerator41 = python3Target30.getCodeGenerator();
        org.antlr.v4.tool.Grammar grammar42 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target43 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean44 = python3Target43.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup45 = python3Target43.templates;
        org.antlr.v4.tool.Grammar grammar46 = null;
        org.stringtemplate.v4.ST sT47 = null;
        python3Target43.genRecognizerHeaderFile(grammar46, sT47, "");
        python3Target43.language = "Python3";
        java.util.Set<java.lang.String> strSet52 = null;
        python3Target43.badWords = strSet52;
        org.antlr.v4.codegen.CodeGenerator codeGenerator54 = null;
        java.lang.String str57 = python3Target43.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator54, "\"Hi!Context\"", false);
        java.lang.String str59 = python3Target43.getListLabel("Python3");
        java.lang.String str61 = python3Target43.getTargetStringLiteralFromString("\\0");
        org.antlr.v4.tool.Grammar grammar62 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target63 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str65 = python3Target63.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.tool.Grammar grammar66 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target67 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean68 = python3Target67.supportsOverloadedMethods();
        java.lang.String str69 = python3Target67.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator70 = null;
        java.lang.String str73 = python3Target67.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator70, "", true);
        java.lang.String str74 = python3Target67.getVersion();
        org.antlr.v4.tool.Grammar grammar75 = null;
        int[] intArray76 = new int[] {};
        java.lang.String[] strArray77 = python3Target67.getTokenTypesAsTargetLabels(grammar75, intArray76);
        java.lang.String[] strArray78 = python3Target63.getTokenTypesAsTargetLabels(grammar66, intArray76);
        java.lang.String[] strArray79 = python3Target43.getTokenTypesAsTargetLabels(grammar62, intArray76);
        java.lang.String[] strArray80 = python3Target30.getTokenTypesAsTargetLabels(grammar42, intArray76);
        java.lang.String[] strArray81 = python3Target22.getTokenTypesAsTargetLabels(grammar28, intArray76);
        java.lang.String[] strArray82 = python3Target0.getTokenTypesAsTargetLabels(grammar20, intArray76);
        org.antlr.v4.codegen.CodeGenerator codeGenerator83 = null;
        python3Target0.gen = codeGenerator83;
        int int85 = python3Target0.getSerializedATNSegmentLimit();
        java.lang.String str87 = python3Target0.getTargetStringLiteralFromString("_\"\\\"\\\"4.5.2.1\\\"\\\"\"Context");
        // The following exception was thrown during execution in test generation
        try {
            org.stringtemplate.v4.STGroup sTGroup88 = python3Target0.loadTemplates();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(codeGenerator3);
        org.junit.Assert.assertNull(codeGenerator4);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\"\"" + "'", str8, "\"\"");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 29 + "'", int9 == 29);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(sTGroup11);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "\\12" + "'", str14, "\\12");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "_tset_12" + "'", str19, "_tset_12");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "4.5.2.1" + "'", str23, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 29 + "'", int24 == 29);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "4.5.2.1" + "'", str25, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(strSet31);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "\"\"\"\"\"\"" + "'", str34, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(strSet37);
        org.junit.Assert.assertNotNull(strSet40);
        org.junit.Assert.assertNull(codeGenerator41);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNull(sTGroup45);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "Hi!Context" + "'", str57, "Hi!Context");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "Python3" + "'", str59, "Python3");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "\"\\0\"" + "'", str61, "\"\\0\"");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "\"\"\"\"\"\"" + "'", str65, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "4.5.2.1" + "'", str69, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "\"\"" + "'", str73, "\"\"");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "4.5.2.1" + "'", str74, "4.5.2.1");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[]");
        org.junit.Assert.assertNotNull(strArray77);
        org.junit.Assert.assertNotNull(strArray78);
        org.junit.Assert.assertNotNull(strArray79);
        org.junit.Assert.assertNotNull(strArray80);
        org.junit.Assert.assertNotNull(strArray81);
        org.junit.Assert.assertNotNull(strArray82);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 29 + "'", int85 == 29);
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "\"_\"\\\"\\\"4.5.2.1\\\"\\\"\"Context\"" + "'", str87, "\"_\"\\\"\\\"4.5.2.1\\\"\\\"\"Context\"");
    }

    @Test
    public void test1634() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1634");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!", "hi!" };
        python3Target0.targetCharValueEscape = strArray5;
        java.lang.String str8 = python3Target0.getTargetStringLiteralFromString("\"\"");
        java.lang.String str10 = python3Target0.getTargetStringLiteralFromString("\"\"");
        java.lang.String str11 = python3Target0.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup12 = python3Target0.templates;
        org.antlr.v4.codegen.CodeGenerator codeGenerator13 = python3Target0.gen;
        java.lang.String str14 = python3Target0.getVersion();
        org.antlr.v4.codegen.target.Python3Target python3Target15 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean16 = python3Target15.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup17 = python3Target15.templates;
        org.antlr.v4.tool.Grammar grammar18 = null;
        org.stringtemplate.v4.ST sT19 = null;
        python3Target15.genRecognizerHeaderFile(grammar18, sT19, "");
        python3Target15.language = "Python3";
        java.util.Set<java.lang.String> strSet24 = null;
        python3Target15.badWords = strSet24;
        boolean boolean26 = python3Target15.wantsBaseVisitor();
        java.lang.String str28 = python3Target15.getImplicitSetLabel("Python3");
        org.antlr.v4.codegen.target.Python3Target python3Target29 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean30 = python3Target29.supportsOverloadedMethods();
        java.lang.String str31 = python3Target29.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator32 = python3Target29.getCodeGenerator();
        org.stringtemplate.v4.STGroup sTGroup33 = null;
        python3Target29.templates = sTGroup33;
        org.stringtemplate.v4.STGroup sTGroup35 = python3Target29.templates;
        java.lang.String[] strArray36 = python3Target29.targetCharValueEscape;
        java.lang.String str39 = python3Target29.getTargetStringLiteralFromString("\"12\"", false);
        org.antlr.v4.codegen.target.Python3Target python3Target40 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean41 = python3Target40.supportsOverloadedMethods();
        java.lang.String str42 = python3Target40.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator43 = python3Target40.getCodeGenerator();
        org.stringtemplate.v4.STGroup sTGroup44 = null;
        python3Target40.templates = sTGroup44;
        org.stringtemplate.v4.STGroup sTGroup46 = python3Target40.templates;
        java.lang.String[] strArray47 = python3Target40.targetCharValueEscape;
        java.util.Set<java.lang.String> strSet48 = python3Target40.badWords;
        java.util.Set<java.lang.String> strSet49 = python3Target40.getBadWords();
        python3Target29.badWords = strSet49;
        python3Target15.badWords = strSet49;
        python3Target0.badWords = strSet49;
        python3Target0.language = "\"\\1\"";
        int int55 = python3Target0.getSerializedATNSegmentLimit();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\"\"\"\"" + "'", str8, "\"\"\"\"");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\"\"\"\"" + "'", str10, "\"\"\"\"");
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(sTGroup12);
        org.junit.Assert.assertNull(codeGenerator13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "4.5.2.1" + "'", str14, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(sTGroup17);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "_tsetPython3" + "'", str28, "_tsetPython3");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "4.5.2.1" + "'", str31, "4.5.2.1");
        org.junit.Assert.assertNull(codeGenerator32);
        org.junit.Assert.assertNull(sTGroup35);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "\"12\"" + "'", str39, "\"12\"");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "4.5.2.1" + "'", str42, "4.5.2.1");
        org.junit.Assert.assertNull(codeGenerator43);
        org.junit.Assert.assertNull(sTGroup46);
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertNotNull(strSet48);
        org.junit.Assert.assertNotNull(strSet49);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 29 + "'", int55 == 29);
    }

    @Test
    public void test1635() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1635");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python3Target1.getBadWords();
        org.antlr.v4.codegen.target.Python3Target python3Target3 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str5 = python3Target3.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.codegen.target.Python3Target python3Target6 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean7 = python3Target6.supportsOverloadedMethods();
        java.util.Set<java.lang.String> strSet8 = python3Target6.badWords;
        python3Target3.badWords = strSet8;
        python3Target1.badWords = strSet8;
        java.util.Set<java.lang.String> strSet11 = python3Target1.badWords;
        java.lang.String str12 = python3Target1.language;
        org.antlr.v4.tool.ast.GrammarAST grammarAST13 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean14 = python3Target1.visibleGrammarSymbolCausesIssueInGeneratedCode(grammarAST13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "\"\"\"\"\"\"" + "'", str5, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertNotNull(strSet11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Python3" + "'", str12, "Python3");
    }

    @Test
    public void test1636() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1636");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python3Target1.getBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = null;
        python3Target1.gen = codeGenerator3;
        java.lang.String str6 = python3Target1.getAltLabelContextStructName("hi!");
        java.lang.String str9 = python3Target1.getTargetStringLiteralFromString("\"hi!\"", true);
        boolean boolean10 = python3Target1.templatesExist();
        org.antlr.v4.tool.Rule rule11 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str12 = python3Target1.getRuleFunctionContextStructName(rule11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Hi!Context" + "'", str6, "Hi!Context");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\"\\\"hi!\\\"\"" + "'", str9, "\"\\\"hi!\\\"\"");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
    }

    @Test
    public void test1637() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1637");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        java.lang.String str2 = python3Target0.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = null;
        java.lang.String str6 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator3, "", true);
        java.lang.String str7 = python3Target0.getVersion();
        boolean boolean8 = python3Target0.templatesExist();
        java.lang.Class<?> wildcardClass9 = python3Target0.getClass();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "4.5.2.1" + "'", str2, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\"\"" + "'", str6, "\"\"");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "4.5.2.1" + "'", str7, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test1638() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1638");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        org.antlr.v4.tool.Grammar grammar3 = null;
        org.stringtemplate.v4.ST sT4 = null;
        python3Target0.genRecognizerHeaderFile(grammar3, sT4, "");
        python3Target0.language = "Python3";
        int int9 = python3Target0.getSerializedATNSegmentLimit();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str11 = python3Target0.getElementName("\"\\\"\\\"\\\\0\\\"\\\"\"Context");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 29 + "'", int9 == 29);
    }

    @Test
    public void test1639() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1639");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray1 = python3Target0.targetCharValueEscape;
        java.lang.String str2 = python3Target0.language;
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = null;
        python3Target0.gen = codeGenerator3;
        java.lang.String[] strArray5 = python3Target0.targetCharValueEscape;
        java.lang.String str8 = python3Target0.getTargetStringLiteralFromString("\"\"\"\"\"\"\"\"\"\"", true);
        // The following exception was thrown during execution in test generation
        try {
            org.stringtemplate.v4.STGroup sTGroup9 = python3Target0.getTemplates();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\"\"\"\"\"\"\"\"\"\"\"\"" + "'", str8, "\"\"\"\"\"\"\"\"\"\"\"\"");
    }

    @Test
    public void test1640() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1640");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!", "hi!" };
        python3Target0.targetCharValueEscape = strArray5;
        java.lang.String str8 = python3Target0.getTargetStringLiteralFromString("\"\"");
        java.lang.String str10 = python3Target0.getTargetStringLiteralFromString("\"\"");
        java.lang.String[] strArray11 = python3Target0.targetCharValueEscape;
        java.lang.String str12 = python3Target0.language;
        org.antlr.v4.tool.Grammar grammar13 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str15 = python3Target0.getTokenTypeAsTargetLabel(grammar13, (int) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\"\"\"\"" + "'", str8, "\"\"\"\"");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\"\"\"\"" + "'", str10, "\"\"\"\"");
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNull(str12);
    }

    @Test
    public void test1641() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1641");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!", "hi!" };
        python3Target0.targetCharValueEscape = strArray5;
        java.lang.String str8 = python3Target0.getTargetStringLiteralFromString("\"\"");
        java.lang.String str9 = python3Target0.getLanguage();
        org.antlr.v4.codegen.target.Python3Target python3Target10 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray11 = python3Target10.targetCharValueEscape;
        org.stringtemplate.v4.STGroup sTGroup12 = python3Target10.templates;
        int int13 = python3Target10.getInlineTestSetWordSize();
        org.antlr.v4.codegen.CodeGenerator codeGenerator14 = python3Target10.gen;
        org.antlr.v4.tool.Grammar grammar15 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target16 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str18 = python3Target16.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.tool.Grammar grammar19 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target20 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean21 = python3Target20.supportsOverloadedMethods();
        java.lang.String str22 = python3Target20.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator23 = null;
        java.lang.String str26 = python3Target20.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator23, "", true);
        java.lang.String str27 = python3Target20.getVersion();
        org.antlr.v4.tool.Grammar grammar28 = null;
        int[] intArray29 = new int[] {};
        java.lang.String[] strArray30 = python3Target20.getTokenTypesAsTargetLabels(grammar28, intArray29);
        java.lang.String[] strArray31 = python3Target16.getTokenTypesAsTargetLabels(grammar19, intArray29);
        java.lang.String[] strArray32 = python3Target10.getTokenTypesAsTargetLabels(grammar15, intArray29);
        python3Target0.targetCharValueEscape = strArray32;
        int int34 = python3Target0.getInlineTestSetWordSize();
        org.antlr.v4.codegen.target.Python3Target python3Target35 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean36 = python3Target35.supportsOverloadedMethods();
        java.lang.String str37 = python3Target35.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator38 = python3Target35.getCodeGenerator();
        org.antlr.v4.tool.Grammar grammar39 = null;
        org.stringtemplate.v4.ST sT40 = null;
        python3Target35.genRecognizerHeaderFile(grammar39, sT40, "_tsetPython3");
        boolean boolean43 = python3Target35.wantsBaseListener();
        org.antlr.v4.codegen.target.Python3Target python3Target44 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean45 = python3Target44.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup46 = python3Target44.templates;
        java.lang.String[] strArray49 = new java.lang.String[] { "hi!", "hi!" };
        python3Target44.targetCharValueEscape = strArray49;
        org.antlr.v4.codegen.CodeGenerator codeGenerator51 = null;
        java.lang.String str54 = python3Target44.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator51, "", false);
        java.util.Set<java.lang.String> strSet55 = python3Target44.badWords;
        java.util.Set<java.lang.String> strSet56 = python3Target44.badWords;
        java.util.Set<java.lang.String> strSet57 = python3Target44.badWords;
        python3Target35.badWords = strSet57;
        org.antlr.v4.codegen.target.Python3Target python3Target59 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean60 = python3Target59.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup61 = python3Target59.templates;
        org.antlr.v4.tool.Grammar grammar62 = null;
        org.stringtemplate.v4.ST sT63 = null;
        python3Target59.genRecognizerHeaderFile(grammar62, sT63, "");
        python3Target59.language = "Python3";
        int int68 = python3Target59.getSerializedATNSegmentLimit();
        org.stringtemplate.v4.STGroup sTGroup69 = python3Target59.loadTemplates();
        python3Target35.templates = sTGroup69;
        python3Target0.templates = sTGroup69;
        org.antlr.v4.tool.Grammar grammar72 = null;
        org.stringtemplate.v4.ST sT73 = null;
        python3Target0.genRecognizerHeaderFile(grammar72, sT73, "\"\"Python3\"\"");
        int int76 = python3Target0.getSerializedATNSegmentLimit();
        org.antlr.v4.tool.Grammar grammar77 = null;
        org.stringtemplate.v4.ST sT78 = null;
        // The following exception was thrown during execution in test generation
        try {
            python3Target0.genFile(grammar77, sT78, "_\"_tset12\"Context");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\"\"\"\"" + "'", str8, "\"\"\"\"");
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNull(sTGroup12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 64 + "'", int13 == 64);
        org.junit.Assert.assertNull(codeGenerator14);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "\"\"\"\"\"\"" + "'", str18, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "4.5.2.1" + "'", str22, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "\"\"" + "'", str26, "\"\"");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "4.5.2.1" + "'", str27, "4.5.2.1");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[]");
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 64 + "'", int34 == 64);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "4.5.2.1" + "'", str37, "4.5.2.1");
        org.junit.Assert.assertNull(codeGenerator38);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNull(sTGroup46);
        org.junit.Assert.assertNotNull(strArray49);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "" + "'", str54, "");
        org.junit.Assert.assertNotNull(strSet55);
        org.junit.Assert.assertNotNull(strSet56);
        org.junit.Assert.assertNotNull(strSet57);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNull(sTGroup61);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 29 + "'", int68 == 29);
        org.junit.Assert.assertNotNull(sTGroup69);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 29 + "'", int76 == 29);
    }

    @Test
    public void test1642() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1642");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.lang.String str3 = python3Target1.getTargetStringLiteralFromString("");
        int int4 = python3Target1.getSerializedATNSegmentLimit();
        boolean boolean5 = python3Target1.wantsBaseVisitor();
        org.stringtemplate.v4.STGroup sTGroup6 = python3Target1.loadTemplates();
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = python3Target1.gen;
        org.antlr.v4.codegen.target.Python3Target python3Target8 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean9 = python3Target8.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup10 = python3Target8.templates;
        org.antlr.v4.tool.Grammar grammar11 = null;
        org.stringtemplate.v4.ST sT12 = null;
        python3Target8.genRecognizerHeaderFile(grammar11, sT12, "");
        python3Target8.language = "Python3";
        int int17 = python3Target8.getSerializedATNSegmentLimit();
        org.stringtemplate.v4.STGroup sTGroup18 = python3Target8.loadTemplates();
        python3Target1.templates = sTGroup18;
        org.antlr.v4.tool.Grammar grammar20 = null;
        org.stringtemplate.v4.ST sT21 = null;
        python3Target1.genRecognizerHeaderFile(grammar20, sT21, "\"_tset12\"");
        org.stringtemplate.v4.STGroup sTGroup24 = python3Target1.getTemplates();
        org.antlr.v4.tool.ast.GrammarAST grammarAST25 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean26 = python3Target1.grammarSymbolCausesIssueInGeneratedCode(grammarAST25);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "\"\"" + "'", str3, "\"\"");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 29 + "'", int4 == 29);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(sTGroup6);
        org.junit.Assert.assertNull(codeGenerator7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(sTGroup10);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 29 + "'", int17 == 29);
        org.junit.Assert.assertNotNull(sTGroup18);
        org.junit.Assert.assertNotNull(sTGroup24);
    }

    @Test
    public void test1643() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1643");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray1 = python3Target0.targetCharValueEscape;
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        int int3 = python3Target0.getInlineTestSetWordSize();
        org.antlr.v4.codegen.CodeGenerator codeGenerator4 = python3Target0.gen;
        org.antlr.v4.tool.Grammar grammar5 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target6 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str8 = python3Target6.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.tool.Grammar grammar9 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target10 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean11 = python3Target10.supportsOverloadedMethods();
        java.lang.String str12 = python3Target10.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator13 = null;
        java.lang.String str16 = python3Target10.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator13, "", true);
        java.lang.String str17 = python3Target10.getVersion();
        org.antlr.v4.tool.Grammar grammar18 = null;
        int[] intArray19 = new int[] {};
        java.lang.String[] strArray20 = python3Target10.getTokenTypesAsTargetLabels(grammar18, intArray19);
        java.lang.String[] strArray21 = python3Target6.getTokenTypesAsTargetLabels(grammar9, intArray19);
        java.lang.String[] strArray22 = python3Target0.getTokenTypesAsTargetLabels(grammar5, intArray19);
        java.lang.String[] strArray23 = python3Target0.targetCharValueEscape;
        org.antlr.v4.codegen.CodeGenerator codeGenerator24 = python3Target0.getCodeGenerator();
        java.lang.String str27 = python3Target0.getTargetStringLiteralFromString("\"\"\\\"\\\"hi!\\\"\\\"\"\"", true);
        int int28 = python3Target0.getInlineTestSetWordSize();
        org.antlr.v4.codegen.CodeGenerator codeGenerator29 = python3Target0.getCodeGenerator();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str31 = python3Target0.getElementName("");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 64 + "'", int3 == 64);
        org.junit.Assert.assertNull(codeGenerator4);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\"\"\"\"\"\"" + "'", str8, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "4.5.2.1" + "'", str12, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "\"\"" + "'", str16, "\"\"");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "4.5.2.1" + "'", str17, "4.5.2.1");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[]");
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertNull(codeGenerator24);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "\"\"\"\\\"\\\"hi!\\\"\\\"\"\"\"" + "'", str27, "\"\"\"\\\"\\\"hi!\\\"\\\"\"\"\"");
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 64 + "'", int28 == 64);
        org.junit.Assert.assertNull(codeGenerator29);
    }

    @Test
    public void test1644() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1644");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!", "hi!" };
        python3Target0.targetCharValueEscape = strArray5;
        java.lang.String str8 = python3Target0.getTargetStringLiteralFromString("\"\"");
        org.stringtemplate.v4.STGroup sTGroup9 = null;
        python3Target0.templates = sTGroup9;
        java.lang.String[] strArray11 = python3Target0.targetCharValueEscape;
        int int12 = python3Target0.getInlineTestSetWordSize();
        java.lang.String[] strArray13 = new java.lang.String[] {};
        python3Target0.targetCharValueEscape = strArray13;
        java.util.Set<java.lang.String> strSet15 = python3Target0.badWords;
        org.antlr.v4.codegen.model.RuleFunction ruleFunction16 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str17 = python3Target0.getRuleFunctionContextStructName(ruleFunction16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\"\"\"\"" + "'", str8, "\"\"\"\"");
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 64 + "'", int12 == 64);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertNotNull(strSet15);
    }

    @Test
    public void test1645() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1645");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        org.antlr.v4.tool.Grammar grammar3 = null;
        org.stringtemplate.v4.ST sT4 = null;
        python3Target0.genRecognizerHeaderFile(grammar3, sT4, "");
        boolean boolean7 = python3Target0.supportsOverloadedMethods();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str9 = python3Target0.getElementName("\"\"\"\\0\"\"\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    public void test1646() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1646");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray1 = python3Target0.targetCharValueEscape;
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = null;
        java.lang.String str6 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator3, "\"\\12\"", false);
        java.lang.String str7 = python3Target0.getLanguage();
        java.lang.String str9 = python3Target0.getTargetStringLiteralFromString("Hi!Context");
        java.lang.String[] strArray10 = python3Target0.targetCharValueEscape;
        int int11 = python3Target0.getSerializedATNSegmentLimit();
        org.stringtemplate.v4.STGroup sTGroup12 = python3Target0.templates;
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "12" + "'", str6, "12");
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\"Hi!Context\"" + "'", str9, "\"Hi!Context\"");
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 29 + "'", int11 == 29);
        org.junit.Assert.assertNull(sTGroup12);
    }

    @Test
    public void test1647() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1647");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray1 = python3Target0.targetCharValueEscape;
        java.lang.String str2 = python3Target0.getVersion();
        int int3 = python3Target0.getInlineTestSetWordSize();
        boolean boolean4 = python3Target0.wantsBaseListener();
        org.antlr.v4.codegen.CodeGenerator codeGenerator5 = python3Target0.getCodeGenerator();
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "4.5.2.1" + "'", str2, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 64 + "'", int3 == 64);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(codeGenerator5);
    }

    @Test
    public void test1648() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1648");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python3Target1.getBadWords();
        org.antlr.v4.tool.Grammar grammar3 = null;
        org.stringtemplate.v4.ST sT4 = null;
        // The following exception was thrown during execution in test generation
        try {
            python3Target1.genListenerFile(grammar3, sT4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet2);
    }

    @Test
    public void test1649() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1649");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        java.util.Set<java.lang.String> strSet2 = python3Target0.badWords;
        int int3 = python3Target0.getSerializedATNSegmentLimit();
        org.antlr.v4.tool.Grammar grammar4 = null;
        org.stringtemplate.v4.ST sT5 = null;
        python3Target0.genRecognizerHeaderFile(grammar4, sT5, "\"Python3\"Context");
        boolean boolean8 = python3Target0.supportsOverloadedMethods();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str10 = python3Target0.getAltLabelContextStructName("\\12");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 29 + "'", int3 == 29);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test1650() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1650");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python3Target1.getBadWords();
        java.lang.String str4 = python3Target1.getAltLabelContextStructName("d");
        org.stringtemplate.v4.STGroup sTGroup5 = python3Target1.getTemplates();
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = null;
        java.lang.String str9 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator6, "", true);
        java.lang.String str11 = python3Target1.getImplicitSetLabel("\"\\0\"");
        java.lang.String str13 = python3Target1.getListLabel("\"Python3\"");
        org.stringtemplate.v4.STGroup sTGroup14 = null;
        python3Target1.templates = sTGroup14;
        java.lang.String str17 = python3Target1.getAltLabelContextStructName("\"\"\\1\"\"");
        org.antlr.v4.codegen.target.Python3Target python3Target18 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean19 = python3Target18.supportsOverloadedMethods();
        java.lang.String str20 = python3Target18.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator21 = python3Target18.getCodeGenerator();
        org.stringtemplate.v4.STGroup sTGroup22 = null;
        python3Target18.templates = sTGroup22;
        org.stringtemplate.v4.STGroup sTGroup24 = python3Target18.templates;
        org.antlr.v4.codegen.target.Python3Target python3Target25 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray26 = python3Target25.targetCharValueEscape;
        python3Target25.addBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator28 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target29 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator28);
        java.lang.String str31 = python3Target29.getTargetStringLiteralFromString("");
        int int32 = python3Target29.getSerializedATNSegmentLimit();
        boolean boolean33 = python3Target29.wantsBaseVisitor();
        org.stringtemplate.v4.STGroup sTGroup34 = python3Target29.loadTemplates();
        python3Target25.templates = sTGroup34;
        python3Target18.templates = sTGroup34;
        java.lang.String str38 = python3Target18.getListLabel("\"\"");
        java.lang.String str39 = python3Target18.language;
        java.lang.String[] strArray40 = python3Target18.targetCharValueEscape;
        python3Target1.targetCharValueEscape = strArray40;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str43 = python3Target1.getElementListName("\"\"\\\\0\"\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "DContext" + "'", str4, "DContext");
        org.junit.Assert.assertNotNull(sTGroup5);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\"\"" + "'", str9, "\"\"");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "_tset\"\\0\"" + "'", str11, "_tset\"\\0\"");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "\"Python3\"" + "'", str13, "\"Python3\"");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "\"\"\\1\"\"Context" + "'", str17, "\"\"\\1\"\"Context");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "4.5.2.1" + "'", str20, "4.5.2.1");
        org.junit.Assert.assertNull(codeGenerator21);
        org.junit.Assert.assertNull(sTGroup24);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "\"\"" + "'", str31, "\"\"");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 29 + "'", int32 == 29);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(sTGroup34);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "\"\"" + "'", str38, "\"\"");
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNotNull(strArray40);
    }

    @Test
    public void test1651() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1651");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        java.lang.String str2 = python3Target0.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = null;
        java.lang.String str6 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator3, "", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = null;
        python3Target0.gen = codeGenerator7;
        int int9 = python3Target0.getSerializedATNSegmentLimit();
        org.antlr.v4.tool.Grammar grammar10 = null;
        org.stringtemplate.v4.ST sT11 = null;
        python3Target0.genRecognizerHeaderFile(grammar10, sT11, "_tset12");
        org.stringtemplate.v4.STGroup sTGroup14 = python3Target0.templates;
        org.stringtemplate.v4.STGroup sTGroup15 = python3Target0.templates;
        python3Target0.language = "\\nContext";
        java.lang.String[] strArray18 = python3Target0.targetCharValueEscape;
        java.lang.String str20 = python3Target0.getTargetStringLiteralFromString("\"\"DContext\"\"Context");
        int int21 = python3Target0.getSerializedATNSegmentLimit();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str23 = python3Target0.getListLabel("_\"\"DContext\"\"Context");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "4.5.2.1" + "'", str2, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\"\"" + "'", str6, "\"\"");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 29 + "'", int9 == 29);
        org.junit.Assert.assertNull(sTGroup14);
        org.junit.Assert.assertNull(sTGroup15);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "\"\"\"DContext\"\"Context\"" + "'", str20, "\"\"\"DContext\"\"Context\"");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 29 + "'", int21 == 29);
    }

    @Test
    public void test1652() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1652");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        python3Target0.language = "4.5.2.1";
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = python3Target0.getCodeGenerator();
        org.antlr.v4.codegen.CodeGenerator codeGenerator4 = python3Target0.gen;
        java.lang.String str5 = python3Target0.getLanguage();
        java.lang.String str6 = python3Target0.getVersion();
        org.antlr.v4.tool.ast.GrammarAST grammarAST7 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str8 = python3Target0.getLoopCounter(grammarAST7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(codeGenerator3);
        org.junit.Assert.assertNull(codeGenerator4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "4.5.2.1" + "'", str5, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "4.5.2.1" + "'", str6, "4.5.2.1");
    }

    @Test
    public void test1653() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1653");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        java.lang.String str2 = python3Target0.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = null;
        java.lang.String str6 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator3, "", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = null;
        python3Target0.gen = codeGenerator7;
        java.lang.String[] strArray16 = new java.lang.String[] { "\"\"\"\"", "\\12", "\"\"", "4.5.2.1", "", "\"\"\"\"", "\"\"" };
        java.util.LinkedHashSet<java.lang.String> strSet17 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet17, strArray16);
        python3Target0.badWords = strSet17;
        boolean boolean20 = python3Target0.templatesExist();
        int int21 = python3Target0.getSerializedATNSegmentLimit();
        java.lang.String str22 = python3Target0.getVersion();
        python3Target0.language = "\"\"\"_tset12\"\"\"";
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "4.5.2.1" + "'", str2, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\"\"" + "'", str6, "\"\"");
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 29 + "'", int21 == 29);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "4.5.2.1" + "'", str22, "4.5.2.1");
    }

    @Test
    public void test1654() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1654");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray1 = python3Target0.targetCharValueEscape;
        java.lang.String str2 = python3Target0.language;
        int int3 = python3Target0.getSerializedATNSegmentLimit();
        java.lang.String str5 = python3Target0.encodeIntAsCharEscape(1);
        java.lang.String str8 = python3Target0.getTargetStringLiteralFromString("", false);
        python3Target0.language = "\"\"\\\"\\\"hi!\\\"\\\"\"\"";
        org.antlr.v4.codegen.CodeGenerator codeGenerator11 = null;
        python3Target0.gen = codeGenerator11;
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 29 + "'", int3 == 29);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "\\1" + "'", str5, "\\1");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
    }

    @Test
    public void test1655() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1655");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        java.lang.String str2 = python3Target0.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = null;
        java.lang.String str6 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator3, "", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = null;
        python3Target0.gen = codeGenerator7;
        int int9 = python3Target0.getSerializedATNSegmentLimit();
        org.antlr.v4.tool.Grammar grammar10 = null;
        org.stringtemplate.v4.ST sT11 = null;
        python3Target0.genRecognizerHeaderFile(grammar10, sT11, "_tset12");
        org.stringtemplate.v4.STGroup sTGroup14 = python3Target0.templates;
        java.lang.String str16 = python3Target0.encodeIntAsCharEscape(64);
        org.antlr.v4.codegen.CodeGenerator codeGenerator17 = null;
        java.lang.String str20 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator17, "\\\"hi!\\\"", false);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "4.5.2.1" + "'", str2, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\"\"" + "'", str6, "\"\"");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 29 + "'", int9 == 29);
        org.junit.Assert.assertNull(sTGroup14);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "@" + "'", str16, "@");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "\\\"hi!\\\"" + "'", str20, "\\\"hi!\\\"");
    }

    @Test
    public void test1656() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1656");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        org.antlr.v4.tool.Grammar grammar3 = null;
        org.stringtemplate.v4.ST sT4 = null;
        python3Target0.genRecognizerHeaderFile(grammar3, sT4, "");
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = python3Target0.getCodeGenerator();
        java.util.Set<java.lang.String> strSet8 = python3Target0.badWords;
        boolean boolean9 = python3Target0.templatesExist();
        java.lang.String str12 = python3Target0.getTargetStringLiteralFromString("\"\\12\"", false);
        // The following exception was thrown during execution in test generation
        try {
            org.stringtemplate.v4.STGroup sTGroup13 = python3Target0.loadTemplates();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertNull(codeGenerator7);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "\"\\12\"" + "'", str12, "\"\\12\"");
    }

    @Test
    public void test1657() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1657");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        org.antlr.v4.tool.Grammar grammar3 = null;
        org.stringtemplate.v4.ST sT4 = null;
        python3Target0.genRecognizerHeaderFile(grammar3, sT4, "");
        python3Target0.language = "Python3";
        java.util.Set<java.lang.String> strSet9 = null;
        python3Target0.badWords = strSet9;
        boolean boolean11 = python3Target0.wantsBaseVisitor();
        java.lang.String str13 = python3Target0.getImplicitSetLabel("Python3");
        int int14 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str15 = python3Target0.language;
        java.lang.String str16 = python3Target0.getLanguage();
        int int17 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str19 = python3Target0.getImplicitRuleLabel("\"\\\"\\\"4.5.2.1\\\"\\\"\"");
        java.lang.String str21 = python3Target0.getImplicitSetLabel("_tset_12");
        java.lang.String str23 = python3Target0.getImplicitRuleLabel("\"\\\"\\\\\\\"Python3\\\\\\\"\\\"\"");
        org.antlr.v4.tool.Grammar grammar24 = null;
        org.stringtemplate.v4.ST sT25 = null;
        python3Target0.genRecognizerHeaderFile(grammar24, sT25, "___tset\"\"\"\"\"\"\"\"ContextContextContextContext");
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "_tsetPython3" + "'", str13, "_tsetPython3");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 64 + "'", int14 == 64);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Python3" + "'", str15, "Python3");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Python3" + "'", str16, "Python3");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 64 + "'", int17 == 64);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "_\"\\\"\\\"4.5.2.1\\\"\\\"\"" + "'", str19, "_\"\\\"\\\"4.5.2.1\\\"\\\"\"");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "_tset_tset_12" + "'", str21, "_tset_tset_12");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "_\"\\\"\\\\\\\"Python3\\\\\\\"\\\"\"" + "'", str23, "_\"\\\"\\\\\\\"Python3\\\\\\\"\\\"\"");
    }

    @Test
    public void test1658() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1658");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.lang.String str3 = python3Target1.getTargetStringLiteralFromString("");
        int int4 = python3Target1.getSerializedATNSegmentLimit();
        boolean boolean5 = python3Target1.wantsBaseVisitor();
        java.lang.String str6 = python3Target1.getVersion();
        org.stringtemplate.v4.STGroup sTGroup7 = python3Target1.getTemplates();
        python3Target1.addBadWords();
        java.util.Set<java.lang.String> strSet9 = python3Target1.getBadWords();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "\"\"" + "'", str3, "\"\"");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 29 + "'", int4 == 29);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "4.5.2.1" + "'", str6, "4.5.2.1");
        org.junit.Assert.assertNotNull(sTGroup7);
        org.junit.Assert.assertNotNull(strSet9);
    }

    @Test
    public void test1659() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1659");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str2 = python3Target0.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.tool.Grammar grammar3 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target4 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean5 = python3Target4.supportsOverloadedMethods();
        java.lang.String str6 = python3Target4.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = null;
        java.lang.String str10 = python3Target4.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator7, "", true);
        java.lang.String str11 = python3Target4.getVersion();
        org.antlr.v4.tool.Grammar grammar12 = null;
        int[] intArray13 = new int[] {};
        java.lang.String[] strArray14 = python3Target4.getTokenTypesAsTargetLabels(grammar12, intArray13);
        java.lang.String[] strArray15 = python3Target0.getTokenTypesAsTargetLabels(grammar3, intArray13);
        org.stringtemplate.v4.STGroup sTGroup16 = python3Target0.templates;
        java.lang.String str18 = python3Target0.encodeIntAsCharEscape((int) ' ');
        org.antlr.v4.tool.ast.GrammarAST grammarAST19 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean20 = python3Target0.grammarSymbolCausesIssueInGeneratedCode(grammarAST19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "\"\"\"\"\"\"" + "'", str2, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "4.5.2.1" + "'", str6, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\"\"" + "'", str10, "\"\"");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "4.5.2.1" + "'", str11, "4.5.2.1");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[]");
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNull(sTGroup16);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + " " + "'", str18, " ");
    }

    @Test
    public void test1660() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1660");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        python3Target0.language = "";
        int int3 = python3Target0.getSerializedATNSegmentLimit();
        org.antlr.v4.codegen.target.Python3Target python3Target4 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean5 = python3Target4.supportsOverloadedMethods();
        java.lang.String str6 = python3Target4.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = null;
        java.lang.String str10 = python3Target4.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator7, "", true);
        java.lang.String str11 = python3Target4.getVersion();
        org.antlr.v4.tool.Grammar grammar12 = null;
        int[] intArray13 = new int[] {};
        java.lang.String[] strArray14 = python3Target4.getTokenTypesAsTargetLabels(grammar12, intArray13);
        java.lang.String[] strArray15 = python3Target4.targetCharValueEscape;
        java.util.Set<java.lang.String> strSet16 = python3Target4.badWords;
        python3Target4.addBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator18 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target19 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator18);
        java.util.Set<java.lang.String> strSet20 = python3Target19.getBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator21 = null;
        python3Target19.gen = codeGenerator21;
        org.antlr.v4.tool.Grammar grammar23 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target24 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean25 = python3Target24.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup26 = python3Target24.templates;
        org.antlr.v4.tool.Grammar grammar27 = null;
        org.stringtemplate.v4.ST sT28 = null;
        python3Target24.genRecognizerHeaderFile(grammar27, sT28, "");
        boolean boolean31 = python3Target24.supportsOverloadedMethods();
        python3Target24.language = "\"\\12\"";
        org.antlr.v4.tool.Grammar grammar34 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator35 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target36 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator35);
        java.util.Set<java.lang.String> strSet37 = python3Target36.getBadWords();
        java.lang.String str39 = python3Target36.getAltLabelContextStructName("d");
        java.lang.String str41 = python3Target36.getTargetStringLiteralFromString("\"\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator42 = python3Target36.getCodeGenerator();
        org.antlr.v4.tool.Grammar grammar43 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator44 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target45 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator44);
        java.util.Set<java.lang.String> strSet46 = python3Target45.getBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator47 = null;
        python3Target45.gen = codeGenerator47;
        java.lang.String str50 = python3Target45.getAltLabelContextStructName("hi!");
        java.lang.String str53 = python3Target45.getTargetStringLiteralFromString("\"hi!\"", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator54 = null;
        python3Target45.gen = codeGenerator54;
        org.antlr.v4.tool.Grammar grammar56 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target57 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray58 = python3Target57.targetCharValueEscape;
        org.stringtemplate.v4.STGroup sTGroup59 = python3Target57.templates;
        int int60 = python3Target57.getInlineTestSetWordSize();
        org.antlr.v4.codegen.CodeGenerator codeGenerator61 = python3Target57.gen;
        org.antlr.v4.tool.Grammar grammar62 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target63 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str65 = python3Target63.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.tool.Grammar grammar66 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target67 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean68 = python3Target67.supportsOverloadedMethods();
        java.lang.String str69 = python3Target67.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator70 = null;
        java.lang.String str73 = python3Target67.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator70, "", true);
        java.lang.String str74 = python3Target67.getVersion();
        org.antlr.v4.tool.Grammar grammar75 = null;
        int[] intArray76 = new int[] {};
        java.lang.String[] strArray77 = python3Target67.getTokenTypesAsTargetLabels(grammar75, intArray76);
        java.lang.String[] strArray78 = python3Target63.getTokenTypesAsTargetLabels(grammar66, intArray76);
        java.lang.String[] strArray79 = python3Target57.getTokenTypesAsTargetLabels(grammar62, intArray76);
        java.lang.String[] strArray80 = python3Target45.getTokenTypesAsTargetLabels(grammar56, intArray76);
        java.lang.String[] strArray81 = python3Target36.getTokenTypesAsTargetLabels(grammar43, intArray76);
        java.lang.String[] strArray82 = python3Target24.getTokenTypesAsTargetLabels(grammar34, intArray76);
        java.lang.String[] strArray83 = python3Target19.getTokenTypesAsTargetLabels(grammar23, intArray76);
        python3Target4.targetCharValueEscape = strArray83;
        org.antlr.v4.codegen.target.Python3Target python3Target85 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean86 = python3Target85.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup87 = python3Target85.templates;
        org.antlr.v4.tool.Grammar grammar88 = null;
        org.stringtemplate.v4.ST sT89 = null;
        python3Target85.genRecognizerHeaderFile(grammar88, sT89, "");
        python3Target85.language = "Python3";
        int int94 = python3Target85.getSerializedATNSegmentLimit();
        org.antlr.v4.codegen.CodeGenerator codeGenerator95 = python3Target85.gen;
        org.stringtemplate.v4.STGroup sTGroup96 = python3Target85.loadTemplates();
        python3Target4.templates = sTGroup96;
        python3Target0.templates = sTGroup96;
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 29 + "'", int3 == 29);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "4.5.2.1" + "'", str6, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\"\"" + "'", str10, "\"\"");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "4.5.2.1" + "'", str11, "4.5.2.1");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[]");
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertNotNull(strSet20);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNull(sTGroup26);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(strSet37);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "DContext" + "'", str39, "DContext");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "\"\\\"\\\"\"" + "'", str41, "\"\\\"\\\"\"");
        org.junit.Assert.assertNull(codeGenerator42);
        org.junit.Assert.assertNotNull(strSet46);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "Hi!Context" + "'", str50, "Hi!Context");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "\"\\\"hi!\\\"\"" + "'", str53, "\"\\\"hi!\\\"\"");
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertNull(sTGroup59);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 64 + "'", int60 == 64);
        org.junit.Assert.assertNull(codeGenerator61);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "\"\"\"\"\"\"" + "'", str65, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "4.5.2.1" + "'", str69, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "\"\"" + "'", str73, "\"\"");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "4.5.2.1" + "'", str74, "4.5.2.1");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[]");
        org.junit.Assert.assertNotNull(strArray77);
        org.junit.Assert.assertNotNull(strArray78);
        org.junit.Assert.assertNotNull(strArray79);
        org.junit.Assert.assertNotNull(strArray80);
        org.junit.Assert.assertNotNull(strArray81);
        org.junit.Assert.assertNotNull(strArray82);
        org.junit.Assert.assertNotNull(strArray83);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertNull(sTGroup87);
        org.junit.Assert.assertTrue("'" + int94 + "' != '" + 29 + "'", int94 == 29);
        org.junit.Assert.assertNull(codeGenerator95);
        org.junit.Assert.assertNotNull(sTGroup96);
    }

    @Test
    public void test1661() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1661");
        java.lang.String str1 = org.stringtemplate.v4.StringRenderer.escapeHTML("\"Hi!Context\"");
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "\"Hi!Context\"" + "'", str1, "\"Hi!Context\"");
    }

    @Test
    public void test1662() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1662");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        java.lang.String str2 = python3Target0.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = python3Target0.getCodeGenerator();
        org.stringtemplate.v4.STGroup sTGroup4 = null;
        python3Target0.templates = sTGroup4;
        org.stringtemplate.v4.STGroup sTGroup6 = python3Target0.templates;
        java.lang.String[] strArray7 = python3Target0.targetCharValueEscape;
        java.lang.String str10 = python3Target0.getTargetStringLiteralFromString("\"12\"", false);
        org.antlr.v4.codegen.target.Python3Target python3Target11 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean12 = python3Target11.supportsOverloadedMethods();
        java.lang.String str13 = python3Target11.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator14 = python3Target11.getCodeGenerator();
        org.stringtemplate.v4.STGroup sTGroup15 = null;
        python3Target11.templates = sTGroup15;
        org.stringtemplate.v4.STGroup sTGroup17 = python3Target11.templates;
        java.lang.String[] strArray18 = python3Target11.targetCharValueEscape;
        java.util.Set<java.lang.String> strSet19 = python3Target11.badWords;
        java.util.Set<java.lang.String> strSet20 = python3Target11.getBadWords();
        python3Target0.badWords = strSet20;
        org.antlr.v4.codegen.CodeGenerator codeGenerator22 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target23 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator22);
        java.util.Set<java.lang.String> strSet24 = python3Target23.getBadWords();
        org.antlr.v4.codegen.target.Python3Target python3Target25 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str27 = python3Target25.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.codegen.target.Python3Target python3Target28 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean29 = python3Target28.supportsOverloadedMethods();
        java.util.Set<java.lang.String> strSet30 = python3Target28.badWords;
        python3Target25.badWords = strSet30;
        python3Target23.badWords = strSet30;
        java.util.Set<java.lang.String> strSet33 = python3Target23.badWords;
        java.lang.String str34 = python3Target23.language;
        org.stringtemplate.v4.STGroup sTGroup35 = python3Target23.getTemplates();
        python3Target0.templates = sTGroup35;
        java.lang.String str38 = python3Target0.getImplicitSetLabel("_\"\"\\\"DContext\\\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "4.5.2.1" + "'", str2, "4.5.2.1");
        org.junit.Assert.assertNull(codeGenerator3);
        org.junit.Assert.assertNull(sTGroup6);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\"12\"" + "'", str10, "\"12\"");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "4.5.2.1" + "'", str13, "4.5.2.1");
        org.junit.Assert.assertNull(codeGenerator14);
        org.junit.Assert.assertNull(sTGroup17);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertNotNull(strSet19);
        org.junit.Assert.assertNotNull(strSet20);
        org.junit.Assert.assertNotNull(strSet24);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "\"\"\"\"\"\"" + "'", str27, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(strSet30);
        org.junit.Assert.assertNotNull(strSet33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "Python3" + "'", str34, "Python3");
        org.junit.Assert.assertNotNull(sTGroup35);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "_tset_\"\"\\\"DContext\\\"\"\"" + "'", str38, "_tset_\"\"\\\"DContext\\\"\"\"");
    }

    @Test
    public void test1663() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1663");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.lang.String str3 = python3Target1.getTargetStringLiteralFromString("");
        int int4 = python3Target1.getSerializedATNSegmentLimit();
        int int5 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str6 = python3Target1.getVersion();
        org.antlr.v4.tool.Grammar grammar7 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str9 = python3Target1.getTokenTypeAsTargetLabel(grammar7, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "\"\"" + "'", str3, "\"\"");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 29 + "'", int4 == 29);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 64 + "'", int5 == 64);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "4.5.2.1" + "'", str6, "4.5.2.1");
    }

    @Test
    public void test1664() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1664");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.lang.String str3 = python3Target1.getTargetStringLiteralFromString("");
        python3Target1.language = "";
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = null;
        python3Target1.gen = codeGenerator6;
        python3Target1.language = "\"\"\"hi!\"\"\"";
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "\"\"" + "'", str3, "\"\"");
    }

    @Test
    public void test1665() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1665");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.lang.String str3 = python3Target1.getTargetStringLiteralFromString("");
        int int4 = python3Target1.getSerializedATNSegmentLimit();
        boolean boolean5 = python3Target1.wantsBaseVisitor();
        org.stringtemplate.v4.STGroup sTGroup6 = python3Target1.loadTemplates();
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = python3Target1.gen;
        boolean boolean8 = python3Target1.wantsBaseListener();
        python3Target1.language = "\\35";
        java.lang.String str12 = python3Target1.encodeIntAsCharEscape(29);
        int int13 = python3Target1.getSerializedATNSegmentLimit();
        org.antlr.v4.codegen.CodeGenerator codeGenerator14 = null;
        java.lang.String str17 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator14, "\"\"\"\"\"\"Context", true);
        boolean boolean18 = python3Target1.templatesExist();
        boolean boolean19 = python3Target1.supportsOverloadedMethods();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str21 = python3Target1.getElementName("\\\"hi!\\\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "\"\"" + "'", str3, "\"\"");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 29 + "'", int4 == 29);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(sTGroup6);
        org.junit.Assert.assertNull(codeGenerator7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "\\35" + "'", str12, "\\35");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 29 + "'", int13 == 29);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "\"\\\"\\\"\\\"\\\"\\\"Contex\"" + "'", str17, "\"\\\"\\\"\\\"\\\"\\\"Contex\"");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    }

    @Test
    public void test1666() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1666");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python3Target1.getBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = null;
        python3Target1.gen = codeGenerator3;
        java.lang.String str6 = python3Target1.getAltLabelContextStructName("hi!");
        java.lang.String str9 = python3Target1.getTargetStringLiteralFromString("\"hi!\"", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = null;
        python3Target1.gen = codeGenerator10;
        org.antlr.v4.tool.Grammar grammar12 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target13 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray14 = python3Target13.targetCharValueEscape;
        org.stringtemplate.v4.STGroup sTGroup15 = python3Target13.templates;
        int int16 = python3Target13.getInlineTestSetWordSize();
        org.antlr.v4.codegen.CodeGenerator codeGenerator17 = python3Target13.gen;
        org.antlr.v4.tool.Grammar grammar18 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target19 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str21 = python3Target19.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.tool.Grammar grammar22 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target23 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean24 = python3Target23.supportsOverloadedMethods();
        java.lang.String str25 = python3Target23.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator26 = null;
        java.lang.String str29 = python3Target23.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator26, "", true);
        java.lang.String str30 = python3Target23.getVersion();
        org.antlr.v4.tool.Grammar grammar31 = null;
        int[] intArray32 = new int[] {};
        java.lang.String[] strArray33 = python3Target23.getTokenTypesAsTargetLabels(grammar31, intArray32);
        java.lang.String[] strArray34 = python3Target19.getTokenTypesAsTargetLabels(grammar22, intArray32);
        java.lang.String[] strArray35 = python3Target13.getTokenTypesAsTargetLabels(grammar18, intArray32);
        java.lang.String[] strArray36 = python3Target1.getTokenTypesAsTargetLabels(grammar12, intArray32);
        java.lang.String[] strArray37 = python3Target1.targetCharValueEscape;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str39 = python3Target1.getElementListName("\"\"\"\"\"\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Hi!Context" + "'", str6, "Hi!Context");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\"\\\"hi!\\\"\"" + "'", str9, "\"\\\"hi!\\\"\"");
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertNull(sTGroup15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 64 + "'", int16 == 64);
        org.junit.Assert.assertNull(codeGenerator17);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "\"\"\"\"\"\"" + "'", str21, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "4.5.2.1" + "'", str25, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "\"\"" + "'", str29, "\"\"");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "4.5.2.1" + "'", str30, "4.5.2.1");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[]");
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertNotNull(strArray37);
    }

    @Test
    public void test1667() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1667");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.lang.String str3 = python3Target1.getTargetStringLiteralFromString("");
        int int4 = python3Target1.getSerializedATNSegmentLimit();
        int int5 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str6 = python3Target1.getVersion();
        boolean boolean7 = python3Target1.templatesExist();
        python3Target1.language = "___tset\"\"\"\"\"\"\"\"ContextContextContextContext";
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "\"\"" + "'", str3, "\"\"");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 29 + "'", int4 == 29);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 64 + "'", int5 == 64);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "4.5.2.1" + "'", str6, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
    }

    @Test
    public void test1668() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1668");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        python3Target0.language = "4.5.2.1";
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = python3Target0.getCodeGenerator();
        org.antlr.v4.codegen.CodeGenerator codeGenerator4 = python3Target0.gen;
        java.lang.String str5 = python3Target0.getLanguage();
        python3Target0.addBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = null;
        java.lang.String str10 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator7, "\"\"hi!\"\"", false);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str12 = python3Target0.getImplicitRuleLabel("\"\\\"\\\"\\\"\\\"\\\"\\\"Context\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(codeGenerator3);
        org.junit.Assert.assertNull(codeGenerator4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "4.5.2.1" + "'", str5, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\\\"hi!\\\"" + "'", str10, "\\\"hi!\\\"");
    }

    @Test
    public void test1669() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1669");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        python3Target0.language = "";
        org.antlr.v4.codegen.target.Python3Target python3Target3 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean4 = python3Target3.supportsOverloadedMethods();
        java.lang.String str5 = python3Target3.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = null;
        java.lang.String str9 = python3Target3.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator6, "", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = null;
        python3Target3.gen = codeGenerator10;
        java.lang.String[] strArray19 = new java.lang.String[] { "\"\"\"\"", "\\12", "\"\"", "4.5.2.1", "", "\"\"\"\"", "\"\"" };
        java.util.LinkedHashSet<java.lang.String> strSet20 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet20, strArray19);
        python3Target3.badWords = strSet20;
        python3Target0.badWords = strSet20;
        java.lang.String str25 = python3Target0.encodeIntAsCharEscape((int) (byte) 100);
        boolean boolean26 = python3Target0.templatesExist();
        java.util.Set<java.lang.String> strSet27 = python3Target0.getBadWords();
        python3Target0.addBadWords();
        int int29 = python3Target0.getSerializedATNSegmentLimit();
        java.lang.String str31 = python3Target0.encodeIntAsCharEscape(10);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "4.5.2.1" + "'", str5, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\"\"" + "'", str9, "\"\"");
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "d" + "'", str25, "d");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(strSet27);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 29 + "'", int29 == 29);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "\\12" + "'", str31, "\\12");
    }

    @Test
    public void test1670() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1670");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python3Target1.getBadWords();
        java.lang.String str4 = python3Target1.getAltLabelContextStructName("d");
        org.stringtemplate.v4.STGroup sTGroup5 = python3Target1.getTemplates();
        boolean boolean6 = python3Target1.supportsOverloadedMethods();
        java.util.Set<java.lang.String> strSet7 = python3Target1.badWords;
        java.lang.String str9 = python3Target1.getTargetStringLiteralFromString("_tset12");
        org.stringtemplate.v4.STGroup sTGroup10 = python3Target1.loadTemplates();
        int int11 = python3Target1.getSerializedATNSegmentLimit();
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "DContext" + "'", str4, "DContext");
        org.junit.Assert.assertNotNull(sTGroup5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(strSet7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\"_tset12\"" + "'", str9, "\"_tset12\"");
        org.junit.Assert.assertNotNull(sTGroup10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 29 + "'", int11 == 29);
    }

    @Test
    public void test1671() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1671");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.lang.String str3 = python3Target1.getTargetStringLiteralFromString("");
        int int4 = python3Target1.getSerializedATNSegmentLimit();
        boolean boolean5 = python3Target1.wantsBaseVisitor();
        org.stringtemplate.v4.STGroup sTGroup6 = python3Target1.loadTemplates();
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = python3Target1.gen;
        boolean boolean8 = python3Target1.wantsBaseListener();
        python3Target1.language = "\\35";
        python3Target1.addBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator12 = null;
        java.lang.String str15 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator12, "\"\"\"\"\"\"\"Context\"", false);
        java.lang.Class<?> wildcardClass16 = python3Target1.getClass();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "\"\"" + "'", str3, "\"\"");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 29 + "'", int4 == 29);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(sTGroup6);
        org.junit.Assert.assertNull(codeGenerator7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "\\\"\\\"\\\"\\\"\\\"\\\"Context" + "'", str15, "\\\"\\\"\\\"\\\"\\\"\\\"Context");
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test1672() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1672");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray1 = python3Target0.targetCharValueEscape;
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = null;
        java.lang.String str6 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator3, "\"\\12\"", false);
        java.lang.String str7 = python3Target0.getLanguage();
        java.lang.String str9 = python3Target0.getTargetStringLiteralFromString("Hi!Context");
        java.lang.String str12 = python3Target0.getTargetStringLiteralFromString("\"\"\\0\"\"", true);
        org.stringtemplate.v4.STGroup sTGroup13 = python3Target0.templates;
        org.antlr.v4.tool.Grammar grammar14 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator15 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target16 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator15);
        java.util.Set<java.lang.String> strSet17 = python3Target16.getBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator18 = null;
        python3Target16.gen = codeGenerator18;
        java.lang.String str21 = python3Target16.getAltLabelContextStructName("hi!");
        java.lang.String str24 = python3Target16.getTargetStringLiteralFromString("\"hi!\"", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator25 = null;
        python3Target16.gen = codeGenerator25;
        org.antlr.v4.tool.Grammar grammar27 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target28 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray29 = python3Target28.targetCharValueEscape;
        org.stringtemplate.v4.STGroup sTGroup30 = python3Target28.templates;
        int int31 = python3Target28.getInlineTestSetWordSize();
        org.antlr.v4.codegen.CodeGenerator codeGenerator32 = python3Target28.gen;
        org.antlr.v4.tool.Grammar grammar33 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target34 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str36 = python3Target34.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.tool.Grammar grammar37 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target38 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean39 = python3Target38.supportsOverloadedMethods();
        java.lang.String str40 = python3Target38.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator41 = null;
        java.lang.String str44 = python3Target38.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator41, "", true);
        java.lang.String str45 = python3Target38.getVersion();
        org.antlr.v4.tool.Grammar grammar46 = null;
        int[] intArray47 = new int[] {};
        java.lang.String[] strArray48 = python3Target38.getTokenTypesAsTargetLabels(grammar46, intArray47);
        java.lang.String[] strArray49 = python3Target34.getTokenTypesAsTargetLabels(grammar37, intArray47);
        java.lang.String[] strArray50 = python3Target28.getTokenTypesAsTargetLabels(grammar33, intArray47);
        java.lang.String[] strArray51 = python3Target16.getTokenTypesAsTargetLabels(grammar27, intArray47);
        java.lang.String[] strArray52 = python3Target0.getTokenTypesAsTargetLabels(grammar14, intArray47);
        org.antlr.v4.tool.ast.GrammarAST grammarAST53 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str54 = python3Target0.getLoopCounter(grammarAST53);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "12" + "'", str6, "12");
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\"Hi!Context\"" + "'", str9, "\"Hi!Context\"");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "\"\"\"\\0\"\"\"" + "'", str12, "\"\"\"\\0\"\"\"");
        org.junit.Assert.assertNull(sTGroup13);
        org.junit.Assert.assertNotNull(strSet17);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Hi!Context" + "'", str21, "Hi!Context");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "\"\\\"hi!\\\"\"" + "'", str24, "\"\\\"hi!\\\"\"");
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertNull(sTGroup30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 64 + "'", int31 == 64);
        org.junit.Assert.assertNull(codeGenerator32);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "\"\"\"\"\"\"" + "'", str36, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "4.5.2.1" + "'", str40, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "\"\"" + "'", str44, "\"\"");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "4.5.2.1" + "'", str45, "4.5.2.1");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[]");
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertNotNull(strArray49);
        org.junit.Assert.assertNotNull(strArray50);
        org.junit.Assert.assertNotNull(strArray51);
        org.junit.Assert.assertNotNull(strArray52);
    }

    @Test
    public void test1673() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1673");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!", "hi!" };
        python3Target0.targetCharValueEscape = strArray5;
        java.lang.String[] strArray8 = new java.lang.String[] { "hi!" };
        org.antlr.v4.codegen.target.Python3Target.python3Keywords = strArray8;
        python3Target0.targetCharValueEscape = strArray8;
        org.antlr.v4.tool.Grammar grammar11 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target12 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str14 = python3Target12.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator15 = null;
        python3Target12.gen = codeGenerator15;
        org.antlr.v4.tool.Grammar grammar17 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target18 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str20 = python3Target18.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.tool.Grammar grammar21 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target22 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean23 = python3Target22.supportsOverloadedMethods();
        java.lang.String str24 = python3Target22.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator25 = null;
        java.lang.String str28 = python3Target22.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator25, "", true);
        java.lang.String str29 = python3Target22.getVersion();
        org.antlr.v4.tool.Grammar grammar30 = null;
        int[] intArray31 = new int[] {};
        java.lang.String[] strArray32 = python3Target22.getTokenTypesAsTargetLabels(grammar30, intArray31);
        java.lang.String[] strArray33 = python3Target18.getTokenTypesAsTargetLabels(grammar21, intArray31);
        java.lang.String[] strArray34 = python3Target12.getTokenTypesAsTargetLabels(grammar17, intArray31);
        java.lang.String[] strArray35 = python3Target0.getTokenTypesAsTargetLabels(grammar11, intArray31);
        org.antlr.v4.codegen.CodeGenerator codeGenerator36 = null;
        java.lang.String str39 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator36, "\"_tset12\"", false);
        org.antlr.v4.tool.Grammar grammar40 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str42 = python3Target0.getTokenTypeAsTargetLabel(grammar40, 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "\"\"\"\"\"\"" + "'", str14, "\"\"\"\"\"\"");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "\"\"\"\"\"\"" + "'", str20, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "4.5.2.1" + "'", str24, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "\"\"" + "'", str28, "\"\"");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "4.5.2.1" + "'", str29, "4.5.2.1");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[]");
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "_tset12" + "'", str39, "_tset12");
    }

    @Test
    public void test1674() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1674");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        python3Target0.language = "4.5.2.1";
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = python3Target0.getCodeGenerator();
        org.antlr.v4.codegen.CodeGenerator codeGenerator4 = python3Target0.gen;
        java.lang.String str5 = python3Target0.getLanguage();
        python3Target0.addBadWords();
        java.lang.String str8 = python3Target0.encodeIntAsCharEscape(10);
        java.lang.String str9 = python3Target0.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target11 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator10);
        java.lang.String str13 = python3Target11.getTargetStringLiteralFromString("");
        int int14 = python3Target11.getSerializedATNSegmentLimit();
        boolean boolean15 = python3Target11.wantsBaseVisitor();
        org.stringtemplate.v4.STGroup sTGroup16 = python3Target11.loadTemplates();
        org.antlr.v4.codegen.CodeGenerator codeGenerator17 = python3Target11.gen;
        boolean boolean18 = python3Target11.wantsBaseListener();
        int int19 = python3Target11.getSerializedATNSegmentLimit();
        org.antlr.v4.codegen.target.Python3Target python3Target20 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean21 = python3Target20.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup22 = python3Target20.templates;
        org.antlr.v4.tool.Grammar grammar23 = null;
        org.stringtemplate.v4.ST sT24 = null;
        python3Target20.genRecognizerHeaderFile(grammar23, sT24, "");
        python3Target20.language = "Python3";
        java.util.Set<java.lang.String> strSet29 = null;
        python3Target20.badWords = strSet29;
        org.antlr.v4.codegen.CodeGenerator codeGenerator31 = null;
        java.lang.String str34 = python3Target20.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator31, "\"Hi!Context\"", false);
        java.lang.String str36 = python3Target20.getListLabel("Python3");
        org.antlr.v4.codegen.CodeGenerator codeGenerator37 = python3Target20.getCodeGenerator();
        org.antlr.v4.codegen.target.Python3Target python3Target38 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean39 = python3Target38.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup40 = python3Target38.templates;
        org.antlr.v4.tool.Grammar grammar41 = null;
        org.stringtemplate.v4.ST sT42 = null;
        python3Target38.genRecognizerHeaderFile(grammar41, sT42, "");
        python3Target38.language = "Python3";
        java.util.Set<java.lang.String> strSet47 = null;
        python3Target38.badWords = strSet47;
        org.antlr.v4.codegen.CodeGenerator codeGenerator49 = null;
        java.lang.String str52 = python3Target38.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator49, "\"Hi!Context\"", false);
        java.lang.String str54 = python3Target38.getListLabel("Python3");
        java.lang.String str56 = python3Target38.getTargetStringLiteralFromString("\\0");
        org.antlr.v4.tool.Grammar grammar57 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target58 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str60 = python3Target58.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.tool.Grammar grammar61 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target62 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean63 = python3Target62.supportsOverloadedMethods();
        java.lang.String str64 = python3Target62.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator65 = null;
        java.lang.String str68 = python3Target62.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator65, "", true);
        java.lang.String str69 = python3Target62.getVersion();
        org.antlr.v4.tool.Grammar grammar70 = null;
        int[] intArray71 = new int[] {};
        java.lang.String[] strArray72 = python3Target62.getTokenTypesAsTargetLabels(grammar70, intArray71);
        java.lang.String[] strArray73 = python3Target58.getTokenTypesAsTargetLabels(grammar61, intArray71);
        java.lang.String[] strArray74 = python3Target38.getTokenTypesAsTargetLabels(grammar57, intArray71);
        org.stringtemplate.v4.STGroup sTGroup75 = python3Target38.getTemplates();
        python3Target38.language = "\"\"4.5.2.1\"\"";
        org.stringtemplate.v4.STGroup sTGroup78 = python3Target38.getTemplates();
        python3Target20.templates = sTGroup78;
        python3Target11.templates = sTGroup78;
        python3Target0.templates = sTGroup78;
        java.lang.String str84 = python3Target0.getTargetStringLiteralFromString("_\"\"\"_tset12\"\"\"", false);
        org.junit.Assert.assertNull(codeGenerator3);
        org.junit.Assert.assertNull(codeGenerator4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "4.5.2.1" + "'", str5, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\\12" + "'", str8, "\\12");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "4.5.2.1" + "'", str9, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "\"\"" + "'", str13, "\"\"");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 29 + "'", int14 == 29);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(sTGroup16);
        org.junit.Assert.assertNull(codeGenerator17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 29 + "'", int19 == 29);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(sTGroup22);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "Hi!Context" + "'", str34, "Hi!Context");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "Python3" + "'", str36, "Python3");
        org.junit.Assert.assertNull(codeGenerator37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNull(sTGroup40);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "Hi!Context" + "'", str52, "Hi!Context");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "Python3" + "'", str54, "Python3");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "\"\\0\"" + "'", str56, "\"\\0\"");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "\"\"\"\"\"\"" + "'", str60, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "4.5.2.1" + "'", str64, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "\"\"" + "'", str68, "\"\"");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "4.5.2.1" + "'", str69, "4.5.2.1");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[]");
        org.junit.Assert.assertNotNull(strArray72);
        org.junit.Assert.assertNotNull(strArray73);
        org.junit.Assert.assertNotNull(strArray74);
        org.junit.Assert.assertNotNull(sTGroup75);
        org.junit.Assert.assertNotNull(sTGroup78);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "_\"\"\"_tset12\"\"\"" + "'", str84, "_\"\"\"_tset12\"\"\"");
    }

    @Test
    public void test1675() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1675");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        org.antlr.v4.tool.Grammar grammar3 = null;
        org.stringtemplate.v4.ST sT4 = null;
        python3Target0.genRecognizerHeaderFile(grammar3, sT4, "");
        org.antlr.v4.codegen.target.Python3Target python3Target7 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray8 = python3Target7.targetCharValueEscape;
        python3Target0.targetCharValueEscape = strArray8;
        boolean boolean10 = python3Target0.supportsOverloadedMethods();
        java.lang.String str12 = python3Target0.encodeIntAsCharEscape((int) (short) 1);
        org.antlr.v4.codegen.model.RuleFunction ruleFunction13 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str14 = python3Target0.getRuleFunctionContextStructName(ruleFunction13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "\\1" + "'", str12, "\\1");
    }

    @Test
    public void test1676() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1676");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray1 = python3Target0.targetCharValueEscape;
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        int int3 = python3Target0.getInlineTestSetWordSize();
        int int4 = python3Target0.getSerializedATNSegmentLimit();
        python3Target0.language = "__tset12";
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 64 + "'", int3 == 64);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 29 + "'", int4 == 29);
    }

    @Test
    public void test1677() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1677");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray1 = python3Target0.targetCharValueEscape;
        java.lang.String str2 = python3Target0.language;
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = null;
        python3Target0.gen = codeGenerator3;
        python3Target0.language = "\"\\12\"";
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = null;
        python3Target0.gen = codeGenerator7;
        org.stringtemplate.v4.STGroup sTGroup9 = python3Target0.templates;
        org.antlr.v4.tool.Grammar grammar10 = null;
        org.stringtemplate.v4.ST sT11 = null;
        // The following exception was thrown during execution in test generation
        try {
            python3Target0.genListenerFile(grammar10, sT11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(sTGroup9);
    }

    @Test
    public void test1678() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1678");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        org.antlr.v4.tool.Grammar grammar3 = null;
        org.stringtemplate.v4.ST sT4 = null;
        python3Target0.genRecognizerHeaderFile(grammar3, sT4, "");
        org.antlr.v4.codegen.target.Python3Target python3Target7 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray8 = python3Target7.targetCharValueEscape;
        python3Target0.targetCharValueEscape = strArray8;
        python3Target0.addBadWords();
        boolean boolean11 = python3Target0.supportsOverloadedMethods();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str13 = python3Target0.getElementListName("\"@\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test1679() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1679");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        org.antlr.v4.tool.Grammar grammar3 = null;
        org.stringtemplate.v4.ST sT4 = null;
        python3Target0.genRecognizerHeaderFile(grammar3, sT4, "");
        python3Target0.language = "Python3";
        java.util.Set<java.lang.String> strSet9 = null;
        python3Target0.badWords = strSet9;
        org.antlr.v4.codegen.CodeGenerator codeGenerator11 = null;
        java.lang.String str14 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator11, "\"Hi!Context\"", false);
        java.lang.String str16 = python3Target0.getListLabel("Python3");
        org.antlr.v4.codegen.CodeGenerator codeGenerator17 = python3Target0.getCodeGenerator();
        java.lang.String str18 = python3Target0.getLanguage();
        org.antlr.v4.tool.Grammar grammar19 = null;
        org.stringtemplate.v4.ST sT20 = null;
        // The following exception was thrown during execution in test generation
        try {
            python3Target0.genFile(grammar19, sT20, "\"\"\\\"\\\"hi!\\\"\\\"\"\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Hi!Context" + "'", str14, "Hi!Context");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Python3" + "'", str16, "Python3");
        org.junit.Assert.assertNull(codeGenerator17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Python3" + "'", str18, "Python3");
    }

    @Test
    public void test1680() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1680");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python3Target1.getBadWords();
        java.lang.String str4 = python3Target1.getAltLabelContextStructName("d");
        org.stringtemplate.v4.STGroup sTGroup5 = python3Target1.getTemplates();
        boolean boolean6 = python3Target1.supportsOverloadedMethods();
        boolean boolean7 = python3Target1.supportsOverloadedMethods();
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target9 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator8);
        java.lang.String str11 = python3Target9.getTargetStringLiteralFromString("");
        int int12 = python3Target9.getSerializedATNSegmentLimit();
        int int13 = python3Target9.getInlineTestSetWordSize();
        org.antlr.v4.tool.Grammar grammar14 = null;
        org.stringtemplate.v4.ST sT15 = null;
        python3Target9.genRecognizerHeaderFile(grammar14, sT15, "@");
        boolean boolean18 = python3Target9.templatesExist();
        org.stringtemplate.v4.STGroup sTGroup19 = python3Target9.loadTemplates();
        python3Target1.templates = sTGroup19;
        java.lang.String str22 = python3Target1.getImplicitSetLabel("\"\"_tset12\"\"Context");
        org.antlr.v4.tool.Grammar grammar23 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target24 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray25 = python3Target24.targetCharValueEscape;
        org.stringtemplate.v4.STGroup sTGroup26 = python3Target24.templates;
        org.antlr.v4.codegen.CodeGenerator codeGenerator27 = null;
        java.lang.String str30 = python3Target24.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator27, "\"\\12\"", false);
        int int31 = python3Target24.getSerializedATNSegmentLimit();
        boolean boolean32 = python3Target24.templatesExist();
        boolean boolean33 = python3Target24.supportsOverloadedMethods();
        org.antlr.v4.tool.Grammar grammar34 = null;
        org.stringtemplate.v4.ST sT35 = null;
        python3Target24.genRecognizerHeaderFile(grammar34, sT35, "_tsetPython3");
        java.util.Set<java.lang.String> strSet38 = python3Target24.badWords;
        org.antlr.v4.codegen.CodeGenerator codeGenerator39 = null;
        python3Target24.gen = codeGenerator39;
        org.antlr.v4.codegen.CodeGenerator codeGenerator41 = null;
        python3Target24.gen = codeGenerator41;
        boolean boolean43 = python3Target24.supportsOverloadedMethods();
        org.antlr.v4.tool.Grammar grammar44 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target45 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean46 = python3Target45.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup47 = python3Target45.templates;
        java.lang.String[] strArray50 = new java.lang.String[] { "hi!", "hi!" };
        python3Target45.targetCharValueEscape = strArray50;
        java.lang.String[] strArray53 = new java.lang.String[] { "hi!" };
        org.antlr.v4.codegen.target.Python3Target.python3Keywords = strArray53;
        python3Target45.targetCharValueEscape = strArray53;
        java.util.Set<java.lang.String> strSet56 = python3Target45.getBadWords();
        int int57 = python3Target45.getInlineTestSetWordSize();
        boolean boolean58 = python3Target45.wantsBaseListener();
        org.antlr.v4.tool.Grammar grammar59 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target60 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray61 = python3Target60.targetCharValueEscape;
        org.stringtemplate.v4.STGroup sTGroup62 = python3Target60.templates;
        int int63 = python3Target60.getInlineTestSetWordSize();
        org.antlr.v4.codegen.CodeGenerator codeGenerator64 = python3Target60.gen;
        org.antlr.v4.tool.Grammar grammar65 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target66 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str68 = python3Target66.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.tool.Grammar grammar69 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target70 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean71 = python3Target70.supportsOverloadedMethods();
        java.lang.String str72 = python3Target70.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator73 = null;
        java.lang.String str76 = python3Target70.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator73, "", true);
        java.lang.String str77 = python3Target70.getVersion();
        org.antlr.v4.tool.Grammar grammar78 = null;
        int[] intArray79 = new int[] {};
        java.lang.String[] strArray80 = python3Target70.getTokenTypesAsTargetLabels(grammar78, intArray79);
        java.lang.String[] strArray81 = python3Target66.getTokenTypesAsTargetLabels(grammar69, intArray79);
        java.lang.String[] strArray82 = python3Target60.getTokenTypesAsTargetLabels(grammar65, intArray79);
        java.lang.String[] strArray83 = python3Target45.getTokenTypesAsTargetLabels(grammar59, intArray79);
        java.lang.String[] strArray84 = python3Target24.getTokenTypesAsTargetLabels(grammar44, intArray79);
        java.lang.String[] strArray85 = python3Target1.getTokenTypesAsTargetLabels(grammar23, intArray79);
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "DContext" + "'", str4, "DContext");
        org.junit.Assert.assertNotNull(sTGroup5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "\"\"" + "'", str11, "\"\"");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 29 + "'", int12 == 29);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 64 + "'", int13 == 64);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(sTGroup19);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "_tset\"\"_tset12\"\"Context" + "'", str22, "_tset\"\"_tset12\"\"Context");
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertNull(sTGroup26);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "12" + "'", str30, "12");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 29 + "'", int31 == 29);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(strSet38);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNull(sTGroup47);
        org.junit.Assert.assertNotNull(strArray50);
        org.junit.Assert.assertNotNull(strArray53);
        org.junit.Assert.assertNotNull(strSet56);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 64 + "'", int57 == 64);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertNull(sTGroup62);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 64 + "'", int63 == 64);
        org.junit.Assert.assertNull(codeGenerator64);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "\"\"\"\"\"\"" + "'", str68, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "4.5.2.1" + "'", str72, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "\"\"" + "'", str76, "\"\"");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "4.5.2.1" + "'", str77, "4.5.2.1");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[]");
        org.junit.Assert.assertNotNull(strArray80);
        org.junit.Assert.assertNotNull(strArray81);
        org.junit.Assert.assertNotNull(strArray82);
        org.junit.Assert.assertNotNull(strArray83);
        org.junit.Assert.assertNotNull(strArray84);
        org.junit.Assert.assertNotNull(strArray85);
    }

    @Test
    public void test1681() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1681");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        python3Target0.language = "";
        java.lang.String str4 = python3Target0.encodeIntAsCharEscape(10);
        java.lang.String[] strArray5 = python3Target0.targetCharValueEscape;
        org.antlr.v4.tool.ast.GrammarAST grammarAST6 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str7 = python3Target0.getLoopCounter(grammarAST6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "\\12" + "'", str4, "\\12");
        org.junit.Assert.assertNotNull(strArray5);
    }

    @Test
    public void test1682() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1682");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.lang.String str3 = python3Target1.getTargetStringLiteralFromString("");
        int int4 = python3Target1.getSerializedATNSegmentLimit();
        boolean boolean5 = python3Target1.wantsBaseListener();
        org.antlr.v4.tool.Grammar grammar6 = null;
        org.stringtemplate.v4.ST sT7 = null;
        python3Target1.genRecognizerHeaderFile(grammar6, sT7, "\"\"\\\"DContext\\\"\"\"");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "\"\"" + "'", str3, "\"\"");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 29 + "'", int4 == 29);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
    }

    @Test
    public void test1683() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1683");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray1 = python3Target0.targetCharValueEscape;
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = null;
        java.lang.String str6 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator3, "\"\\12\"", false);
        int int7 = python3Target0.getSerializedATNSegmentLimit();
        boolean boolean8 = python3Target0.templatesExist();
        boolean boolean9 = python3Target0.supportsOverloadedMethods();
        org.antlr.v4.tool.Grammar grammar10 = null;
        org.stringtemplate.v4.ST sT11 = null;
        python3Target0.genRecognizerHeaderFile(grammar10, sT11, "_tsetPython3");
        java.util.Set<java.lang.String> strSet14 = python3Target0.badWords;
        org.antlr.v4.codegen.CodeGenerator codeGenerator15 = null;
        python3Target0.gen = codeGenerator15;
        org.antlr.v4.codegen.CodeGenerator codeGenerator17 = null;
        python3Target0.gen = codeGenerator17;
        org.stringtemplate.v4.STGroup sTGroup19 = python3Target0.templates;
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "12" + "'", str6, "12");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 29 + "'", int7 == 29);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(strSet14);
        org.junit.Assert.assertNull(sTGroup19);
    }

    @Test
    public void test1684() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1684");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        java.lang.String str2 = python3Target0.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = python3Target0.getCodeGenerator();
        org.stringtemplate.v4.STGroup sTGroup4 = null;
        python3Target0.templates = sTGroup4;
        org.stringtemplate.v4.STGroup sTGroup6 = python3Target0.templates;
        java.lang.String[] strArray7 = python3Target0.targetCharValueEscape;
        java.util.Set<java.lang.String> strSet8 = python3Target0.badWords;
        java.util.Set<java.lang.String> strSet9 = python3Target0.getBadWords();
        boolean boolean10 = python3Target0.wantsBaseVisitor();
        java.lang.String[] strArray11 = python3Target0.targetCharValueEscape;
        java.lang.String[] strArray12 = python3Target0.targetCharValueEscape;
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "4.5.2.1" + "'", str2, "4.5.2.1");
        org.junit.Assert.assertNull(codeGenerator3);
        org.junit.Assert.assertNull(sTGroup6);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertNotNull(strSet9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(strArray12);
    }

    @Test
    public void test1685() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1685");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        org.antlr.v4.tool.Grammar grammar3 = null;
        org.stringtemplate.v4.ST sT4 = null;
        python3Target0.genRecognizerHeaderFile(grammar3, sT4, "");
        python3Target0.language = "Python3";
        java.util.Set<java.lang.String> strSet9 = null;
        python3Target0.badWords = strSet9;
        org.antlr.v4.codegen.CodeGenerator codeGenerator11 = null;
        java.lang.String str14 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator11, "\"Hi!Context\"", false);
        java.lang.String str16 = python3Target0.getListLabel("Python3");
        java.lang.String str18 = python3Target0.getTargetStringLiteralFromString("\\0");
        org.antlr.v4.tool.Grammar grammar19 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target20 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str22 = python3Target20.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.tool.Grammar grammar23 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target24 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean25 = python3Target24.supportsOverloadedMethods();
        java.lang.String str26 = python3Target24.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator27 = null;
        java.lang.String str30 = python3Target24.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator27, "", true);
        java.lang.String str31 = python3Target24.getVersion();
        org.antlr.v4.tool.Grammar grammar32 = null;
        int[] intArray33 = new int[] {};
        java.lang.String[] strArray34 = python3Target24.getTokenTypesAsTargetLabels(grammar32, intArray33);
        java.lang.String[] strArray35 = python3Target20.getTokenTypesAsTargetLabels(grammar23, intArray33);
        java.lang.String[] strArray36 = python3Target0.getTokenTypesAsTargetLabels(grammar19, intArray33);
        java.lang.String str38 = python3Target0.getListLabel("\"\"\"\"\"\"Context");
        java.lang.String[] strArray39 = python3Target0.targetCharValueEscape;
        java.lang.String str42 = python3Target0.getTargetStringLiteralFromString("_tset\"\"\\0\"\"Context", false);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Hi!Context" + "'", str14, "Hi!Context");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Python3" + "'", str16, "Python3");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "\"\\0\"" + "'", str18, "\"\\0\"");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "\"\"\"\"\"\"" + "'", str22, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "4.5.2.1" + "'", str26, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "\"\"" + "'", str30, "\"\"");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "4.5.2.1" + "'", str31, "4.5.2.1");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[]");
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "\"\"\"\"\"\"Context" + "'", str38, "\"\"\"\"\"\"Context");
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "_tset\"\"\\0\"\"Context" + "'", str42, "_tset\"\"\\0\"\"Context");
    }

    @Test
    public void test1686() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1686");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray1 = python3Target0.targetCharValueEscape;
        java.lang.String str2 = python3Target0.language;
        int int3 = python3Target0.getSerializedATNSegmentLimit();
        java.lang.String str6 = python3Target0.getTargetStringLiteralFromString("\"\"\"\"\"\"", false);
        python3Target0.language = "";
        org.antlr.v4.codegen.model.RuleFunction ruleFunction9 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str10 = python3Target0.getRuleFunctionContextStructName(ruleFunction9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 29 + "'", int3 == 29);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\"\"\"\"\"\"" + "'", str6, "\"\"\"\"\"\"");
    }

    @Test
    public void test1687() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1687");
        java.lang.String str1 = org.stringtemplate.v4.StringRenderer.escapeHTML("_tset\"\"_tset12\"\"Context");
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "_tset\"\"_tset12\"\"Context" + "'", str1, "_tset\"\"_tset12\"\"Context");
    }

    @Test
    public void test1688() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1688");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        org.antlr.v4.tool.Grammar grammar3 = null;
        org.stringtemplate.v4.ST sT4 = null;
        python3Target0.genRecognizerHeaderFile(grammar3, sT4, "");
        python3Target0.language = "Python3";
        java.util.Set<java.lang.String> strSet9 = null;
        python3Target0.badWords = strSet9;
        org.antlr.v4.codegen.CodeGenerator codeGenerator11 = null;
        java.lang.String str14 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator11, "\"Hi!Context\"", false);
        org.antlr.v4.tool.Grammar grammar15 = null;
        org.stringtemplate.v4.ST sT16 = null;
        python3Target0.genRecognizerHeaderFile(grammar15, sT16, "\"\"");
        org.stringtemplate.v4.STGroup sTGroup19 = null;
        python3Target0.templates = sTGroup19;
        boolean boolean21 = python3Target0.templatesExist();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Hi!Context" + "'", str14, "Hi!Context");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
    }

    @Test
    public void test1689() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1689");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray1 = python3Target0.targetCharValueEscape;
        java.lang.String str2 = python3Target0.language;
        int int3 = python3Target0.getSerializedATNSegmentLimit();
        java.util.Set<java.lang.String> strSet4 = python3Target0.badWords;
        org.antlr.v4.codegen.CodeGenerator codeGenerator5 = null;
        java.lang.String str8 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator5, "", true);
        java.lang.Class<?> wildcardClass9 = python3Target0.getClass();
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 29 + "'", int3 == 29);
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\"\"" + "'", str8, "\"\"");
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test1690() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1690");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.lang.String str3 = python3Target1.getTargetStringLiteralFromString("");
        int int4 = python3Target1.getSerializedATNSegmentLimit();
        int int5 = python3Target1.getInlineTestSetWordSize();
        org.antlr.v4.tool.Grammar grammar6 = null;
        org.stringtemplate.v4.ST sT7 = null;
        python3Target1.genRecognizerHeaderFile(grammar6, sT7, "@");
        boolean boolean10 = python3Target1.templatesExist();
        boolean boolean11 = python3Target1.templatesExist();
        python3Target1.addBadWords();
        java.lang.String str14 = python3Target1.getImplicitSetLabel("\"\\0\"");
        java.lang.String str17 = python3Target1.getTargetStringLiteralFromString("_\\\"_\\\"\\\"\\\"DContext\\\"\\\"Context\\\"\\\"", true);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "\"\"" + "'", str3, "\"\"");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 29 + "'", int4 == 29);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 64 + "'", int5 == 64);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "_tset\"\\0\"" + "'", str14, "_tset\"\\0\"");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "\"_\\\\\\\"_\\\\\\\"\\\\\\\"\\\\\\\"DContext\\\\\\\"\\\\\\\"Context\\\\\\\"\\\\\\\"\"" + "'", str17, "\"_\\\\\\\"_\\\\\\\"\\\\\\\"\\\\\\\"DContext\\\\\\\"\\\\\\\"Context\\\\\\\"\\\\\\\"\"");
    }

    @Test
    public void test1691() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1691");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        python3Target0.language = "4.5.2.1";
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = python3Target0.getCodeGenerator();
        org.antlr.v4.codegen.target.Python3Target python3Target4 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str6 = python3Target4.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.tool.Grammar grammar7 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target8 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean9 = python3Target8.supportsOverloadedMethods();
        java.lang.String str10 = python3Target8.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator11 = null;
        java.lang.String str14 = python3Target8.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator11, "", true);
        java.lang.String str15 = python3Target8.getVersion();
        org.antlr.v4.tool.Grammar grammar16 = null;
        int[] intArray17 = new int[] {};
        java.lang.String[] strArray18 = python3Target8.getTokenTypesAsTargetLabels(grammar16, intArray17);
        java.lang.String[] strArray19 = python3Target4.getTokenTypesAsTargetLabels(grammar7, intArray17);
        java.lang.String[] strArray20 = python3Target4.targetCharValueEscape;
        python3Target0.targetCharValueEscape = strArray20;
        boolean boolean22 = python3Target0.templatesExist();
        org.junit.Assert.assertNull(codeGenerator3);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\"\"\"\"\"\"" + "'", str6, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "4.5.2.1" + "'", str10, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "\"\"" + "'", str14, "\"\"");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "4.5.2.1" + "'", str15, "4.5.2.1");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[]");
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
    }

    @Test
    public void test1692() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1692");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        org.antlr.v4.tool.Grammar grammar3 = null;
        org.stringtemplate.v4.ST sT4 = null;
        python3Target0.genRecognizerHeaderFile(grammar3, sT4, "");
        python3Target0.language = "Python3";
        java.util.Set<java.lang.String> strSet9 = null;
        python3Target0.badWords = strSet9;
        boolean boolean11 = python3Target0.wantsBaseVisitor();
        java.lang.String str13 = python3Target0.getImplicitSetLabel("Python3");
        java.lang.String str16 = python3Target0.getTargetStringLiteralFromString("\"\"hi!\"\"", true);
        org.antlr.v4.tool.Grammar grammar17 = null;
        org.stringtemplate.v4.ST sT18 = null;
        python3Target0.genRecognizerHeaderFile(grammar17, sT18, " ");
        org.antlr.v4.tool.ast.GrammarAST grammarAST21 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean22 = python3Target0.visibleGrammarSymbolCausesIssueInGeneratedCode(grammarAST21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "_tsetPython3" + "'", str13, "_tsetPython3");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "\"\"\"hi!\"\"\"" + "'", str16, "\"\"\"hi!\"\"\"");
    }

    @Test
    public void test1693() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1693");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray1 = python3Target0.targetCharValueEscape;
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        int int3 = python3Target0.getInlineTestSetWordSize();
        org.antlr.v4.codegen.CodeGenerator codeGenerator4 = python3Target0.gen;
        org.antlr.v4.tool.Grammar grammar5 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target6 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str8 = python3Target6.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.tool.Grammar grammar9 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target10 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean11 = python3Target10.supportsOverloadedMethods();
        java.lang.String str12 = python3Target10.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator13 = null;
        java.lang.String str16 = python3Target10.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator13, "", true);
        java.lang.String str17 = python3Target10.getVersion();
        org.antlr.v4.tool.Grammar grammar18 = null;
        int[] intArray19 = new int[] {};
        java.lang.String[] strArray20 = python3Target10.getTokenTypesAsTargetLabels(grammar18, intArray19);
        java.lang.String[] strArray21 = python3Target6.getTokenTypesAsTargetLabels(grammar9, intArray19);
        java.lang.String[] strArray22 = python3Target0.getTokenTypesAsTargetLabels(grammar5, intArray19);
        java.lang.String[] strArray45 = new java.lang.String[] { "\"\\\"\\\"\"", "DContext", "", "hi!", "d", "\"\"\"\"\"\"", "\"\"\"\"\"\"", "_tsetPython3", "\"hi!\"", "\"hi!\"", "Hi!Context", "\"\"\"\"\"\"", "\"hi!\"", "12", "\"4.5.2.1\"", "DContext", "Hi!Context", "Python3", "\"hi!\"", "", "\"\"", "\\\"4.5.2.1\\\"" };
        java.util.LinkedHashSet<java.lang.String> strSet46 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet46, strArray45);
        python3Target0.badWords = strSet46;
        python3Target0.addBadWords();
        org.antlr.v4.tool.Rule rule50 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str51 = python3Target0.getRuleFunctionContextStructName(rule50);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 64 + "'", int3 == 64);
        org.junit.Assert.assertNull(codeGenerator4);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\"\"\"\"\"\"" + "'", str8, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "4.5.2.1" + "'", str12, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "\"\"" + "'", str16, "\"\"");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "4.5.2.1" + "'", str17, "4.5.2.1");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[]");
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
    }

    @Test
    public void test1694() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1694");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        python3Target0.language = "4.5.2.1";
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = python3Target0.getCodeGenerator();
        org.antlr.v4.codegen.CodeGenerator codeGenerator4 = python3Target0.gen;
        org.antlr.v4.codegen.CodeGenerator codeGenerator5 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target6 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator5);
        java.lang.String str8 = python3Target6.getTargetStringLiteralFromString("");
        int int9 = python3Target6.getSerializedATNSegmentLimit();
        boolean boolean10 = python3Target6.wantsBaseVisitor();
        org.stringtemplate.v4.STGroup sTGroup11 = python3Target6.loadTemplates();
        python3Target0.templates = sTGroup11;
        java.lang.String str13 = python3Target0.language;
        java.lang.String str15 = python3Target0.getTargetStringLiteralFromString("\"\\0\"");
        org.antlr.v4.tool.Grammar grammar16 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str18 = python3Target0.getTokenTypeAsTargetLabel(grammar16, 29);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(codeGenerator3);
        org.junit.Assert.assertNull(codeGenerator4);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\"\"" + "'", str8, "\"\"");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 29 + "'", int9 == 29);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(sTGroup11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "4.5.2.1" + "'", str13, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "\"\"\\0\"\"" + "'", str15, "\"\"\\0\"\"");
    }

    @Test
    public void test1695() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1695");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray1 = python3Target0.targetCharValueEscape;
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = null;
        java.lang.String str6 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator3, "\"\\12\"", false);
        org.antlr.v4.tool.Grammar grammar7 = null;
        org.stringtemplate.v4.ST sT8 = null;
        python3Target0.genRecognizerHeaderFile(grammar7, sT8, "_\"\"hi!\"\"");
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "12" + "'", str6, "12");
    }

    @Test
    public void test1696() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1696");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        java.lang.String str2 = python3Target0.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = null;
        java.lang.String str6 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator3, "", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = null;
        python3Target0.gen = codeGenerator7;
        int int9 = python3Target0.getSerializedATNSegmentLimit();
        org.antlr.v4.tool.Grammar grammar10 = null;
        org.stringtemplate.v4.ST sT11 = null;
        python3Target0.genRecognizerHeaderFile(grammar10, sT11, "_tset12");
        java.util.Set<java.lang.String> strSet14 = python3Target0.getBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator15 = null;
        java.lang.String str18 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator15, "\"\"\\0\"\"", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator19 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target20 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator19);
        java.util.Set<java.lang.String> strSet21 = python3Target20.getBadWords();
        java.lang.String str23 = python3Target20.getAltLabelContextStructName("d");
        java.lang.String str25 = python3Target20.getTargetStringLiteralFromString("\"\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator26 = python3Target20.getCodeGenerator();
        org.antlr.v4.tool.Grammar grammar27 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator28 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target29 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator28);
        java.util.Set<java.lang.String> strSet30 = python3Target29.getBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator31 = null;
        python3Target29.gen = codeGenerator31;
        java.lang.String str34 = python3Target29.getAltLabelContextStructName("hi!");
        java.lang.String str37 = python3Target29.getTargetStringLiteralFromString("\"hi!\"", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator38 = null;
        python3Target29.gen = codeGenerator38;
        org.antlr.v4.tool.Grammar grammar40 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target41 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray42 = python3Target41.targetCharValueEscape;
        org.stringtemplate.v4.STGroup sTGroup43 = python3Target41.templates;
        int int44 = python3Target41.getInlineTestSetWordSize();
        org.antlr.v4.codegen.CodeGenerator codeGenerator45 = python3Target41.gen;
        org.antlr.v4.tool.Grammar grammar46 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target47 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str49 = python3Target47.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.tool.Grammar grammar50 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target51 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean52 = python3Target51.supportsOverloadedMethods();
        java.lang.String str53 = python3Target51.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator54 = null;
        java.lang.String str57 = python3Target51.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator54, "", true);
        java.lang.String str58 = python3Target51.getVersion();
        org.antlr.v4.tool.Grammar grammar59 = null;
        int[] intArray60 = new int[] {};
        java.lang.String[] strArray61 = python3Target51.getTokenTypesAsTargetLabels(grammar59, intArray60);
        java.lang.String[] strArray62 = python3Target47.getTokenTypesAsTargetLabels(grammar50, intArray60);
        java.lang.String[] strArray63 = python3Target41.getTokenTypesAsTargetLabels(grammar46, intArray60);
        java.lang.String[] strArray64 = python3Target29.getTokenTypesAsTargetLabels(grammar40, intArray60);
        java.lang.String[] strArray65 = python3Target20.getTokenTypesAsTargetLabels(grammar27, intArray60);
        org.antlr.v4.codegen.target.Python3Target.python3Keywords = strArray65;
        python3Target0.targetCharValueEscape = strArray65;
        org.antlr.v4.codegen.target.Python3Target python3Target68 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray69 = python3Target68.targetCharValueEscape;
        org.stringtemplate.v4.STGroup sTGroup70 = python3Target68.templates;
        org.antlr.v4.codegen.CodeGenerator codeGenerator71 = null;
        java.lang.String str74 = python3Target68.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator71, "\"\\12\"", false);
        int int75 = python3Target68.getSerializedATNSegmentLimit();
        boolean boolean76 = python3Target68.templatesExist();
        boolean boolean77 = python3Target68.supportsOverloadedMethods();
        java.lang.String str78 = python3Target68.language;
        java.util.Set<java.lang.String> strSet79 = python3Target68.getBadWords();
        python3Target0.badWords = strSet79;
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "4.5.2.1" + "'", str2, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\"\"" + "'", str6, "\"\"");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 29 + "'", int9 == 29);
        org.junit.Assert.assertNotNull(strSet14);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "\"\\\"0\\\"\"" + "'", str18, "\"\\\"0\\\"\"");
        org.junit.Assert.assertNotNull(strSet21);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "DContext" + "'", str23, "DContext");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "\"\\\"\\\"\"" + "'", str25, "\"\\\"\\\"\"");
        org.junit.Assert.assertNull(codeGenerator26);
        org.junit.Assert.assertNotNull(strSet30);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "Hi!Context" + "'", str34, "Hi!Context");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "\"\\\"hi!\\\"\"" + "'", str37, "\"\\\"hi!\\\"\"");
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertNull(sTGroup43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 64 + "'", int44 == 64);
        org.junit.Assert.assertNull(codeGenerator45);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "\"\"\"\"\"\"" + "'", str49, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "4.5.2.1" + "'", str53, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "\"\"" + "'", str57, "\"\"");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "4.5.2.1" + "'", str58, "4.5.2.1");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[]");
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertNotNull(strArray62);
        org.junit.Assert.assertNotNull(strArray63);
        org.junit.Assert.assertNotNull(strArray64);
        org.junit.Assert.assertNotNull(strArray65);
        org.junit.Assert.assertNotNull(strArray69);
        org.junit.Assert.assertNull(sTGroup70);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "12" + "'", str74, "12");
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 29 + "'", int75 == 29);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNull(str78);
        org.junit.Assert.assertNotNull(strSet79);
    }

    @Test
    public void test1697() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1697");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python3Target1.getBadWords();
        java.lang.String str4 = python3Target1.getAltLabelContextStructName("d");
        org.stringtemplate.v4.STGroup sTGroup5 = python3Target1.getTemplates();
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = null;
        java.lang.String str9 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator6, "", true);
        org.antlr.v4.tool.Grammar grammar10 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target11 = new org.antlr.v4.codegen.target.Python3Target();
        python3Target11.language = "";
        org.antlr.v4.codegen.target.Python3Target python3Target14 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean15 = python3Target14.supportsOverloadedMethods();
        java.lang.String str16 = python3Target14.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator17 = null;
        java.lang.String str20 = python3Target14.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator17, "", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator21 = null;
        python3Target14.gen = codeGenerator21;
        java.lang.String[] strArray30 = new java.lang.String[] { "\"\"\"\"", "\\12", "\"\"", "4.5.2.1", "", "\"\"\"\"", "\"\"" };
        java.util.LinkedHashSet<java.lang.String> strSet31 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet31, strArray30);
        python3Target14.badWords = strSet31;
        python3Target11.badWords = strSet31;
        java.lang.String str36 = python3Target11.encodeIntAsCharEscape((int) (byte) 100);
        java.lang.String str37 = python3Target11.getLanguage();
        java.lang.String[] strArray38 = new java.lang.String[] {};
        python3Target11.targetCharValueEscape = strArray38;
        org.antlr.v4.tool.Grammar grammar40 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target41 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean42 = python3Target41.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup43 = python3Target41.templates;
        java.lang.String[] strArray46 = new java.lang.String[] { "hi!", "hi!" };
        python3Target41.targetCharValueEscape = strArray46;
        org.antlr.v4.codegen.CodeGenerator codeGenerator48 = null;
        java.lang.String str51 = python3Target41.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator48, "", false);
        java.util.Set<java.lang.String> strSet52 = python3Target41.badWords;
        java.lang.String str54 = python3Target41.getTargetStringLiteralFromString("12");
        int int55 = python3Target41.getSerializedATNSegmentLimit();
        boolean boolean56 = python3Target41.supportsOverloadedMethods();
        org.antlr.v4.tool.Grammar grammar57 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target58 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean59 = python3Target58.supportsOverloadedMethods();
        java.util.Set<java.lang.String> strSet60 = python3Target58.badWords;
        boolean boolean61 = python3Target58.templatesExist();
        java.lang.String str62 = python3Target58.getLanguage();
        org.antlr.v4.tool.Grammar grammar63 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target64 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str66 = python3Target64.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator67 = null;
        python3Target64.gen = codeGenerator67;
        org.antlr.v4.tool.Grammar grammar69 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target70 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str72 = python3Target70.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.tool.Grammar grammar73 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target74 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean75 = python3Target74.supportsOverloadedMethods();
        java.lang.String str76 = python3Target74.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator77 = null;
        java.lang.String str80 = python3Target74.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator77, "", true);
        java.lang.String str81 = python3Target74.getVersion();
        org.antlr.v4.tool.Grammar grammar82 = null;
        int[] intArray83 = new int[] {};
        java.lang.String[] strArray84 = python3Target74.getTokenTypesAsTargetLabels(grammar82, intArray83);
        java.lang.String[] strArray85 = python3Target70.getTokenTypesAsTargetLabels(grammar73, intArray83);
        java.lang.String[] strArray86 = python3Target64.getTokenTypesAsTargetLabels(grammar69, intArray83);
        java.lang.String[] strArray87 = python3Target58.getTokenTypesAsTargetLabels(grammar63, intArray83);
        java.lang.String[] strArray88 = python3Target41.getTokenTypesAsTargetLabels(grammar57, intArray83);
        java.lang.String[] strArray89 = python3Target11.getTokenTypesAsTargetLabels(grammar40, intArray83);
        java.lang.String[] strArray90 = python3Target1.getTokenTypesAsTargetLabels(grammar10, intArray83);
        org.antlr.v4.codegen.CodeGenerator codeGenerator91 = null;
        python3Target1.gen = codeGenerator91;
        org.antlr.v4.tool.ast.GrammarAST grammarAST93 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean94 = python3Target1.visibleGrammarSymbolCausesIssueInGeneratedCode(grammarAST93);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "DContext" + "'", str4, "DContext");
        org.junit.Assert.assertNotNull(sTGroup5);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\"\"" + "'", str9, "\"\"");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "4.5.2.1" + "'", str16, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "\"\"" + "'", str20, "\"\"");
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "d" + "'", str36, "d");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "" + "'", str37, "");
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNull(sTGroup43);
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "" + "'", str51, "");
        org.junit.Assert.assertNotNull(strSet52);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "\"12\"" + "'", str54, "\"12\"");
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 29 + "'", int55 == 29);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(strSet60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNull(str62);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "\"\"\"\"\"\"" + "'", str66, "\"\"\"\"\"\"");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "\"\"\"\"\"\"" + "'", str72, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "4.5.2.1" + "'", str76, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "\"\"" + "'", str80, "\"\"");
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "4.5.2.1" + "'", str81, "4.5.2.1");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[]");
        org.junit.Assert.assertNotNull(strArray84);
        org.junit.Assert.assertNotNull(strArray85);
        org.junit.Assert.assertNotNull(strArray86);
        org.junit.Assert.assertNotNull(strArray87);
        org.junit.Assert.assertNotNull(strArray88);
        org.junit.Assert.assertNotNull(strArray89);
        org.junit.Assert.assertNotNull(strArray90);
    }

    @Test
    public void test1698() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1698");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray1 = python3Target0.targetCharValueEscape;
        python3Target0.addBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target4 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator3);
        java.lang.String str6 = python3Target4.getTargetStringLiteralFromString("");
        int int7 = python3Target4.getSerializedATNSegmentLimit();
        boolean boolean8 = python3Target4.wantsBaseVisitor();
        org.stringtemplate.v4.STGroup sTGroup9 = python3Target4.loadTemplates();
        python3Target0.templates = sTGroup9;
        boolean boolean11 = python3Target0.wantsBaseListener();
        java.lang.String[] strArray12 = python3Target0.targetCharValueEscape;
        java.lang.String str13 = python3Target0.language;
        java.lang.Class<?> wildcardClass14 = python3Target0.getClass();
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\"\"" + "'", str6, "\"\"");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 29 + "'", int7 == 29);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(sTGroup9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test1699() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1699");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        java.lang.String str2 = python3Target0.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = python3Target0.getCodeGenerator();
        org.stringtemplate.v4.STGroup sTGroup4 = null;
        python3Target0.templates = sTGroup4;
        org.stringtemplate.v4.STGroup sTGroup6 = python3Target0.templates;
        java.lang.String[] strArray7 = python3Target0.targetCharValueEscape;
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target9 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator8);
        java.util.Set<java.lang.String> strSet10 = python3Target9.getBadWords();
        java.lang.String str12 = python3Target9.getAltLabelContextStructName("d");
        org.stringtemplate.v4.STGroup sTGroup13 = python3Target9.templates;
        python3Target0.templates = sTGroup13;
        org.antlr.v4.codegen.CodeGenerator codeGenerator15 = python3Target0.gen;
        org.antlr.v4.codegen.CodeGenerator codeGenerator16 = python3Target0.getCodeGenerator();
        org.antlr.v4.tool.Grammar grammar17 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target18 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean19 = python3Target18.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup20 = python3Target18.templates;
        java.lang.String[] strArray23 = new java.lang.String[] { "hi!", "hi!" };
        python3Target18.targetCharValueEscape = strArray23;
        org.antlr.v4.codegen.CodeGenerator codeGenerator25 = null;
        java.lang.String str28 = python3Target18.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator25, "", false);
        java.util.Set<java.lang.String> strSet29 = python3Target18.badWords;
        org.antlr.v4.codegen.CodeGenerator codeGenerator30 = null;
        java.lang.String str33 = python3Target18.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator30, "@", false);
        org.antlr.v4.codegen.target.Python3Target python3Target34 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean35 = python3Target34.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup36 = python3Target34.templates;
        java.lang.String[] strArray39 = new java.lang.String[] { "hi!", "hi!" };
        python3Target34.targetCharValueEscape = strArray39;
        java.lang.String str42 = python3Target34.getTargetStringLiteralFromString("\"\"");
        org.stringtemplate.v4.STGroup sTGroup43 = null;
        python3Target34.templates = sTGroup43;
        java.lang.String[] strArray45 = python3Target34.targetCharValueEscape;
        python3Target18.targetCharValueEscape = strArray45;
        org.antlr.v4.tool.Grammar grammar47 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target48 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean49 = python3Target48.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup50 = python3Target48.templates;
        java.lang.String[] strArray53 = new java.lang.String[] { "hi!", "hi!" };
        python3Target48.targetCharValueEscape = strArray53;
        org.antlr.v4.codegen.CodeGenerator codeGenerator55 = null;
        java.lang.String str58 = python3Target48.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator55, "", false);
        org.antlr.v4.tool.Grammar grammar59 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target60 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str62 = python3Target60.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.tool.Grammar grammar63 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target64 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean65 = python3Target64.supportsOverloadedMethods();
        java.lang.String str66 = python3Target64.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator67 = null;
        java.lang.String str70 = python3Target64.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator67, "", true);
        java.lang.String str71 = python3Target64.getVersion();
        org.antlr.v4.tool.Grammar grammar72 = null;
        int[] intArray73 = new int[] {};
        java.lang.String[] strArray74 = python3Target64.getTokenTypesAsTargetLabels(grammar72, intArray73);
        java.lang.String[] strArray75 = python3Target60.getTokenTypesAsTargetLabels(grammar63, intArray73);
        java.lang.String[] strArray76 = python3Target48.getTokenTypesAsTargetLabels(grammar59, intArray73);
        java.lang.String[] strArray77 = python3Target18.getTokenTypesAsTargetLabels(grammar47, intArray73);
        java.lang.String[] strArray78 = python3Target0.getTokenTypesAsTargetLabels(grammar17, intArray73);
        org.antlr.v4.codegen.target.Python3Target.python3Keywords = strArray78;
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "4.5.2.1" + "'", str2, "4.5.2.1");
        org.junit.Assert.assertNull(codeGenerator3);
        org.junit.Assert.assertNull(sTGroup6);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strSet10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "DContext" + "'", str12, "DContext");
        org.junit.Assert.assertNotNull(sTGroup13);
        org.junit.Assert.assertNull(codeGenerator15);
        org.junit.Assert.assertNull(codeGenerator16);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(sTGroup20);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
        org.junit.Assert.assertNotNull(strSet29);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "" + "'", str33, "");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNull(sTGroup36);
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "\"\"\"\"" + "'", str42, "\"\"\"\"");
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNull(sTGroup50);
        org.junit.Assert.assertNotNull(strArray53);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "" + "'", str58, "");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "\"\"\"\"\"\"" + "'", str62, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "4.5.2.1" + "'", str66, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "\"\"" + "'", str70, "\"\"");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "4.5.2.1" + "'", str71, "4.5.2.1");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[]");
        org.junit.Assert.assertNotNull(strArray74);
        org.junit.Assert.assertNotNull(strArray75);
        org.junit.Assert.assertNotNull(strArray76);
        org.junit.Assert.assertNotNull(strArray77);
        org.junit.Assert.assertNotNull(strArray78);
    }

    @Test
    public void test1700() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1700");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray1 = python3Target0.targetCharValueEscape;
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = null;
        java.lang.String str6 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator3, "\"\\12\"", false);
        int int7 = python3Target0.getSerializedATNSegmentLimit();
        boolean boolean8 = python3Target0.templatesExist();
        boolean boolean9 = python3Target0.supportsOverloadedMethods();
        org.antlr.v4.tool.Grammar grammar10 = null;
        org.stringtemplate.v4.ST sT11 = null;
        python3Target0.genRecognizerHeaderFile(grammar10, sT11, "_tsetPython3");
        java.util.Set<java.lang.String> strSet14 = python3Target0.badWords;
        org.antlr.v4.codegen.CodeGenerator codeGenerator15 = null;
        python3Target0.gen = codeGenerator15;
        org.antlr.v4.codegen.CodeGenerator codeGenerator17 = null;
        python3Target0.gen = codeGenerator17;
        boolean boolean19 = python3Target0.supportsOverloadedMethods();
        org.antlr.v4.tool.Grammar grammar20 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target21 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean22 = python3Target21.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup23 = python3Target21.templates;
        java.lang.String[] strArray26 = new java.lang.String[] { "hi!", "hi!" };
        python3Target21.targetCharValueEscape = strArray26;
        java.lang.String[] strArray29 = new java.lang.String[] { "hi!" };
        org.antlr.v4.codegen.target.Python3Target.python3Keywords = strArray29;
        python3Target21.targetCharValueEscape = strArray29;
        java.util.Set<java.lang.String> strSet32 = python3Target21.getBadWords();
        int int33 = python3Target21.getInlineTestSetWordSize();
        boolean boolean34 = python3Target21.wantsBaseListener();
        org.antlr.v4.tool.Grammar grammar35 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target36 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray37 = python3Target36.targetCharValueEscape;
        org.stringtemplate.v4.STGroup sTGroup38 = python3Target36.templates;
        int int39 = python3Target36.getInlineTestSetWordSize();
        org.antlr.v4.codegen.CodeGenerator codeGenerator40 = python3Target36.gen;
        org.antlr.v4.tool.Grammar grammar41 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target42 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str44 = python3Target42.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.tool.Grammar grammar45 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target46 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean47 = python3Target46.supportsOverloadedMethods();
        java.lang.String str48 = python3Target46.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator49 = null;
        java.lang.String str52 = python3Target46.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator49, "", true);
        java.lang.String str53 = python3Target46.getVersion();
        org.antlr.v4.tool.Grammar grammar54 = null;
        int[] intArray55 = new int[] {};
        java.lang.String[] strArray56 = python3Target46.getTokenTypesAsTargetLabels(grammar54, intArray55);
        java.lang.String[] strArray57 = python3Target42.getTokenTypesAsTargetLabels(grammar45, intArray55);
        java.lang.String[] strArray58 = python3Target36.getTokenTypesAsTargetLabels(grammar41, intArray55);
        java.lang.String[] strArray59 = python3Target21.getTokenTypesAsTargetLabels(grammar35, intArray55);
        java.lang.String[] strArray60 = python3Target0.getTokenTypesAsTargetLabels(grammar20, intArray55);
        org.stringtemplate.v4.STGroup sTGroup61 = python3Target0.templates;
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "12" + "'", str6, "12");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 29 + "'", int7 == 29);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(strSet14);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(sTGroup23);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertNotNull(strSet32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 64 + "'", int33 == 64);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertNull(sTGroup38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 64 + "'", int39 == 64);
        org.junit.Assert.assertNull(codeGenerator40);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "\"\"\"\"\"\"" + "'", str44, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "4.5.2.1" + "'", str48, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "\"\"" + "'", str52, "\"\"");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "4.5.2.1" + "'", str53, "4.5.2.1");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[]");
        org.junit.Assert.assertNotNull(strArray56);
        org.junit.Assert.assertNotNull(strArray57);
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertNotNull(strArray59);
        org.junit.Assert.assertNotNull(strArray60);
        org.junit.Assert.assertNull(sTGroup61);
    }

    @Test
    public void test1701() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1701");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        org.antlr.v4.tool.Grammar grammar3 = null;
        org.stringtemplate.v4.ST sT4 = null;
        python3Target0.genRecognizerHeaderFile(grammar3, sT4, "");
        boolean boolean7 = python3Target0.supportsOverloadedMethods();
        python3Target0.language = "\"\\12\"";
        org.antlr.v4.tool.Grammar grammar10 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator11 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target12 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator11);
        java.util.Set<java.lang.String> strSet13 = python3Target12.getBadWords();
        java.lang.String str15 = python3Target12.getAltLabelContextStructName("d");
        java.lang.String str17 = python3Target12.getTargetStringLiteralFromString("\"\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator18 = python3Target12.getCodeGenerator();
        org.antlr.v4.tool.Grammar grammar19 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator20 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target21 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator20);
        java.util.Set<java.lang.String> strSet22 = python3Target21.getBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator23 = null;
        python3Target21.gen = codeGenerator23;
        java.lang.String str26 = python3Target21.getAltLabelContextStructName("hi!");
        java.lang.String str29 = python3Target21.getTargetStringLiteralFromString("\"hi!\"", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator30 = null;
        python3Target21.gen = codeGenerator30;
        org.antlr.v4.tool.Grammar grammar32 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target33 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray34 = python3Target33.targetCharValueEscape;
        org.stringtemplate.v4.STGroup sTGroup35 = python3Target33.templates;
        int int36 = python3Target33.getInlineTestSetWordSize();
        org.antlr.v4.codegen.CodeGenerator codeGenerator37 = python3Target33.gen;
        org.antlr.v4.tool.Grammar grammar38 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target39 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str41 = python3Target39.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.tool.Grammar grammar42 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target43 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean44 = python3Target43.supportsOverloadedMethods();
        java.lang.String str45 = python3Target43.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator46 = null;
        java.lang.String str49 = python3Target43.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator46, "", true);
        java.lang.String str50 = python3Target43.getVersion();
        org.antlr.v4.tool.Grammar grammar51 = null;
        int[] intArray52 = new int[] {};
        java.lang.String[] strArray53 = python3Target43.getTokenTypesAsTargetLabels(grammar51, intArray52);
        java.lang.String[] strArray54 = python3Target39.getTokenTypesAsTargetLabels(grammar42, intArray52);
        java.lang.String[] strArray55 = python3Target33.getTokenTypesAsTargetLabels(grammar38, intArray52);
        java.lang.String[] strArray56 = python3Target21.getTokenTypesAsTargetLabels(grammar32, intArray52);
        java.lang.String[] strArray57 = python3Target12.getTokenTypesAsTargetLabels(grammar19, intArray52);
        java.lang.String[] strArray58 = python3Target0.getTokenTypesAsTargetLabels(grammar10, intArray52);
        org.antlr.v4.codegen.target.Python3Target.python3Keywords = strArray58;
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(strSet13);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "DContext" + "'", str15, "DContext");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "\"\\\"\\\"\"" + "'", str17, "\"\\\"\\\"\"");
        org.junit.Assert.assertNull(codeGenerator18);
        org.junit.Assert.assertNotNull(strSet22);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "Hi!Context" + "'", str26, "Hi!Context");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "\"\\\"hi!\\\"\"" + "'", str29, "\"\\\"hi!\\\"\"");
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertNull(sTGroup35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 64 + "'", int36 == 64);
        org.junit.Assert.assertNull(codeGenerator37);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "\"\"\"\"\"\"" + "'", str41, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "4.5.2.1" + "'", str45, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "\"\"" + "'", str49, "\"\"");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "4.5.2.1" + "'", str50, "4.5.2.1");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[]");
        org.junit.Assert.assertNotNull(strArray53);
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertNotNull(strArray55);
        org.junit.Assert.assertNotNull(strArray56);
        org.junit.Assert.assertNotNull(strArray57);
        org.junit.Assert.assertNotNull(strArray58);
    }

    @Test
    public void test1702() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1702");
        java.lang.String str1 = org.stringtemplate.v4.StringRenderer.escapeHTML("_\"\"DContext\"\"Context");
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "_\"\"DContext\"\"Context" + "'", str1, "_\"\"DContext\"\"Context");
    }

    @Test
    public void test1703() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1703");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python3Target1.getBadWords();
        java.lang.String str4 = python3Target1.getAltLabelContextStructName("d");
        org.stringtemplate.v4.STGroup sTGroup5 = python3Target1.templates;
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = null;
        python3Target1.gen = codeGenerator6;
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "DContext" + "'", str4, "DContext");
        org.junit.Assert.assertNotNull(sTGroup5);
    }

    @Test
    public void test1704() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1704");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.lang.String str2 = python3Target1.getLanguage();
        java.lang.String str4 = python3Target1.getImplicitSetLabel("Python3");
        org.antlr.v4.codegen.CodeGenerator codeGenerator5 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target6 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator5);
        java.util.Set<java.lang.String> strSet7 = python3Target6.getBadWords();
        python3Target1.badWords = strSet7;
        boolean boolean9 = python3Target1.wantsBaseVisitor();
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = null;
        python3Target1.gen = codeGenerator10;
        java.lang.String str12 = python3Target1.getVersion();
        python3Target1.language = "\"\\\"\\\\0\\\"\"";
        java.lang.String str16 = python3Target1.encodeIntAsCharEscape((int) (byte) 100);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "Python3" + "'", str2, "Python3");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "_tsetPython3" + "'", str4, "_tsetPython3");
        org.junit.Assert.assertNotNull(strSet7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "4.5.2.1" + "'", str12, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "d" + "'", str16, "d");
    }

    @Test
    public void test1705() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1705");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray1 = python3Target0.targetCharValueEscape;
        java.lang.String str2 = python3Target0.language;
        int int3 = python3Target0.getSerializedATNSegmentLimit();
        org.antlr.v4.codegen.CodeGenerator codeGenerator4 = python3Target0.getCodeGenerator();
        org.antlr.v4.codegen.CodeGenerator codeGenerator5 = null;
        java.lang.String str8 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator5, "_tset\"\\\"\\\"hi!\\\"\\\"\"", true);
        org.antlr.v4.tool.Grammar grammar9 = null;
        org.stringtemplate.v4.ST sT10 = null;
        // The following exception was thrown during execution in test generation
        try {
            python3Target0.genListenerFile(grammar9, sT10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 29 + "'", int3 == 29);
        org.junit.Assert.assertNull(codeGenerator4);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\"tset\\\"\\\"\\\"hi!\\\"\\\"\"" + "'", str8, "\"tset\\\"\\\"\\\"hi!\\\"\\\"\"");
    }

    @Test
    public void test1706() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1706");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!", "hi!" };
        python3Target0.targetCharValueEscape = strArray5;
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = null;
        java.lang.String str10 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator7, "", false);
        int int11 = python3Target0.getSerializedATNSegmentLimit();
        java.lang.String str12 = python3Target0.getVersion();
        boolean boolean13 = python3Target0.supportsOverloadedMethods();
        org.antlr.v4.codegen.CodeGenerator codeGenerator14 = python3Target0.getCodeGenerator();
        java.lang.String str15 = python3Target0.language;
        org.antlr.v4.codegen.CodeGenerator codeGenerator16 = python3Target0.gen;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str18 = python3Target0.getImplicitTokenLabel("\\nContext");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 29 + "'", int11 == 29);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "4.5.2.1" + "'", str12, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(codeGenerator14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNull(codeGenerator16);
    }

    @Test
    public void test1707() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1707");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.lang.String str2 = python3Target1.getVersion();
        int int3 = python3Target1.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet4 = python3Target1.badWords;
        org.antlr.v4.codegen.target.Python3Target python3Target5 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean6 = python3Target5.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup7 = python3Target5.templates;
        java.lang.String[] strArray10 = new java.lang.String[] { "hi!", "hi!" };
        python3Target5.targetCharValueEscape = strArray10;
        java.lang.String str13 = python3Target5.getTargetStringLiteralFromString("\"\"");
        java.lang.String str14 = python3Target5.getLanguage();
        java.util.Set<java.lang.String> strSet15 = python3Target5.badWords;
        python3Target1.badWords = strSet15;
        python3Target1.language = "\"_tset12\"";
        boolean boolean19 = python3Target1.templatesExist();
        org.antlr.v4.tool.Grammar grammar20 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target21 = new org.antlr.v4.codegen.target.Python3Target();
        python3Target21.language = "";
        org.antlr.v4.codegen.target.Python3Target python3Target24 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean25 = python3Target24.supportsOverloadedMethods();
        java.lang.String str26 = python3Target24.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator27 = null;
        java.lang.String str30 = python3Target24.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator27, "", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator31 = null;
        python3Target24.gen = codeGenerator31;
        java.lang.String[] strArray40 = new java.lang.String[] { "\"\"\"\"", "\\12", "\"\"", "4.5.2.1", "", "\"\"\"\"", "\"\"" };
        java.util.LinkedHashSet<java.lang.String> strSet41 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet41, strArray40);
        python3Target24.badWords = strSet41;
        python3Target21.badWords = strSet41;
        java.lang.String str46 = python3Target21.encodeIntAsCharEscape((int) (byte) 100);
        java.lang.String str47 = python3Target21.getLanguage();
        java.lang.String str49 = python3Target21.getTargetStringLiteralFromString("\"\\0\"");
        org.antlr.v4.codegen.target.Python3Target python3Target50 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean51 = python3Target50.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup52 = python3Target50.templates;
        org.antlr.v4.tool.Grammar grammar53 = null;
        org.stringtemplate.v4.ST sT54 = null;
        python3Target50.genRecognizerHeaderFile(grammar53, sT54, "");
        python3Target50.language = "Python3";
        java.util.Set<java.lang.String> strSet59 = null;
        python3Target50.badWords = strSet59;
        boolean boolean61 = python3Target50.wantsBaseVisitor();
        java.lang.String str63 = python3Target50.getImplicitSetLabel("Python3");
        int int64 = python3Target50.getInlineTestSetWordSize();
        java.lang.String str65 = python3Target50.language;
        java.lang.String str66 = python3Target50.getLanguage();
        int int67 = python3Target50.getInlineTestSetWordSize();
        java.lang.String str69 = python3Target50.getImplicitRuleLabel("\"\\\"\\\"4.5.2.1\\\"\\\"\"");
        java.lang.String str71 = python3Target50.getImplicitSetLabel("_tset_12");
        org.stringtemplate.v4.STGroup sTGroup72 = python3Target50.templates;
        python3Target21.templates = sTGroup72;
        org.antlr.v4.tool.Grammar grammar74 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target75 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean76 = python3Target75.supportsOverloadedMethods();
        java.lang.String str77 = python3Target75.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator78 = null;
        java.lang.String str81 = python3Target75.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator78, "", true);
        java.lang.String str82 = python3Target75.getVersion();
        org.antlr.v4.tool.Grammar grammar83 = null;
        int[] intArray84 = new int[] {};
        java.lang.String[] strArray85 = python3Target75.getTokenTypesAsTargetLabels(grammar83, intArray84);
        java.lang.String[] strArray86 = python3Target21.getTokenTypesAsTargetLabels(grammar74, intArray84);
        java.lang.String[] strArray87 = python3Target1.getTokenTypesAsTargetLabels(grammar20, intArray84);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "4.5.2.1" + "'", str2, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 64 + "'", int3 == 64);
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(sTGroup7);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "\"\"\"\"" + "'", str13, "\"\"\"\"");
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(strSet15);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "4.5.2.1" + "'", str26, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "\"\"" + "'", str30, "\"\"");
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "d" + "'", str46, "d");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "" + "'", str47, "");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "\"\"\\0\"\"" + "'", str49, "\"\"\\0\"\"");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNull(sTGroup52);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "_tsetPython3" + "'", str63, "_tsetPython3");
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 64 + "'", int64 == 64);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "Python3" + "'", str65, "Python3");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "Python3" + "'", str66, "Python3");
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 64 + "'", int67 == 64);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "_\"\\\"\\\"4.5.2.1\\\"\\\"\"" + "'", str69, "_\"\\\"\\\"4.5.2.1\\\"\\\"\"");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "_tset_tset_12" + "'", str71, "_tset_tset_12");
        org.junit.Assert.assertNotNull(sTGroup72);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "4.5.2.1" + "'", str77, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "\"\"" + "'", str81, "\"\"");
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "4.5.2.1" + "'", str82, "4.5.2.1");
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[]");
        org.junit.Assert.assertNotNull(strArray85);
        org.junit.Assert.assertNotNull(strArray86);
        org.junit.Assert.assertNotNull(strArray87);
    }

    @Test
    public void test1708() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1708");
        org.antlr.v4.codegen.target.Python3Target.PythonStringRenderer pythonStringRenderer0 = new org.antlr.v4.codegen.target.Python3Target.PythonStringRenderer();
        java.lang.Object obj1 = null;
        java.util.Locale locale3 = null;
        java.lang.String str4 = pythonStringRenderer0.toString(obj1, "\"\"\"\"\"\"", locale3);
        org.antlr.v4.codegen.target.Python3Target python3Target5 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray6 = python3Target5.targetCharValueEscape;
        org.stringtemplate.v4.STGroup sTGroup7 = python3Target5.templates;
        java.util.Locale locale9 = null;
        java.lang.String str10 = pythonStringRenderer0.toString((java.lang.Object) sTGroup7, "\"Hi!Context\"", locale9);
        java.util.Locale locale13 = null;
        java.lang.String str14 = pythonStringRenderer0.toString((java.lang.Object) "\"DContext\"", "", locale13);
        java.lang.Object obj15 = null;
        java.util.Locale locale17 = null;
        java.lang.String str18 = pythonStringRenderer0.toString(obj15, "\"\\\"hi!\\\"\"", locale17);
        java.lang.Object obj19 = null;
        java.util.Locale locale21 = null;
        java.lang.String str22 = pythonStringRenderer0.toString(obj19, "\"_tsetHi!Context\"", locale21);
        org.antlr.v4.codegen.target.Python3Target python3Target23 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean24 = python3Target23.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup25 = python3Target23.templates;
        java.lang.String[] strArray28 = new java.lang.String[] { "hi!", "hi!" };
        python3Target23.targetCharValueEscape = strArray28;
        org.antlr.v4.codegen.CodeGenerator codeGenerator30 = null;
        python3Target23.gen = codeGenerator30;
        org.antlr.v4.tool.Grammar grammar32 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator33 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target34 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator33);
        java.lang.String str36 = python3Target34.getTargetStringLiteralFromString("");
        int int37 = python3Target34.getSerializedATNSegmentLimit();
        int int38 = python3Target34.getInlineTestSetWordSize();
        org.antlr.v4.tool.Grammar grammar39 = null;
        org.stringtemplate.v4.ST sT40 = null;
        python3Target34.genRecognizerHeaderFile(grammar39, sT40, "@");
        boolean boolean43 = python3Target34.templatesExist();
        boolean boolean44 = python3Target34.templatesExist();
        java.lang.String str45 = python3Target34.language;
        org.antlr.v4.tool.Grammar grammar46 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator47 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target48 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator47);
        java.util.Set<java.lang.String> strSet49 = python3Target48.getBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator50 = null;
        python3Target48.gen = codeGenerator50;
        java.lang.String str53 = python3Target48.getAltLabelContextStructName("hi!");
        java.lang.String str56 = python3Target48.getTargetStringLiteralFromString("\"hi!\"", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator57 = null;
        python3Target48.gen = codeGenerator57;
        org.antlr.v4.tool.Grammar grammar59 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target60 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray61 = python3Target60.targetCharValueEscape;
        org.stringtemplate.v4.STGroup sTGroup62 = python3Target60.templates;
        int int63 = python3Target60.getInlineTestSetWordSize();
        org.antlr.v4.codegen.CodeGenerator codeGenerator64 = python3Target60.gen;
        org.antlr.v4.tool.Grammar grammar65 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target66 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str68 = python3Target66.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.tool.Grammar grammar69 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target70 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean71 = python3Target70.supportsOverloadedMethods();
        java.lang.String str72 = python3Target70.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator73 = null;
        java.lang.String str76 = python3Target70.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator73, "", true);
        java.lang.String str77 = python3Target70.getVersion();
        org.antlr.v4.tool.Grammar grammar78 = null;
        int[] intArray79 = new int[] {};
        java.lang.String[] strArray80 = python3Target70.getTokenTypesAsTargetLabels(grammar78, intArray79);
        java.lang.String[] strArray81 = python3Target66.getTokenTypesAsTargetLabels(grammar69, intArray79);
        java.lang.String[] strArray82 = python3Target60.getTokenTypesAsTargetLabels(grammar65, intArray79);
        java.lang.String[] strArray83 = python3Target48.getTokenTypesAsTargetLabels(grammar59, intArray79);
        java.lang.String[] strArray84 = python3Target34.getTokenTypesAsTargetLabels(grammar46, intArray79);
        java.lang.String[] strArray85 = python3Target23.getTokenTypesAsTargetLabels(grammar32, intArray79);
        java.util.Locale locale87 = null;
        java.lang.String str88 = pythonStringRenderer0.toString((java.lang.Object) grammar32, "\"\\64\"", locale87);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "\"\"\"\"\"\"" + "'", str4, "\"\"\"\"\"\"");
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertNull(sTGroup7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\"Hi!Context\"" + "'", str10, "\"Hi!Context\"");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "\"\\\"hi!\\\"\"" + "'", str18, "\"\\\"hi!\\\"\"");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "\"_tsetHi!Context\"" + "'", str22, "\"_tsetHi!Context\"");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNull(sTGroup25);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "\"\"" + "'", str36, "\"\"");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 29 + "'", int37 == 29);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 64 + "'", int38 == 64);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "Python3" + "'", str45, "Python3");
        org.junit.Assert.assertNotNull(strSet49);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "Hi!Context" + "'", str53, "Hi!Context");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "\"\\\"hi!\\\"\"" + "'", str56, "\"\\\"hi!\\\"\"");
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertNull(sTGroup62);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 64 + "'", int63 == 64);
        org.junit.Assert.assertNull(codeGenerator64);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "\"\"\"\"\"\"" + "'", str68, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "4.5.2.1" + "'", str72, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "\"\"" + "'", str76, "\"\"");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "4.5.2.1" + "'", str77, "4.5.2.1");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[]");
        org.junit.Assert.assertNotNull(strArray80);
        org.junit.Assert.assertNotNull(strArray81);
        org.junit.Assert.assertNotNull(strArray82);
        org.junit.Assert.assertNotNull(strArray83);
        org.junit.Assert.assertNotNull(strArray84);
        org.junit.Assert.assertNotNull(strArray85);
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "\"\\64\"" + "'", str88, "\"\\64\"");
    }

    @Test
    public void test1709() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1709");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.lang.String str3 = python3Target1.getTargetStringLiteralFromString("");
        int int4 = python3Target1.getSerializedATNSegmentLimit();
        java.lang.String str5 = python3Target1.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup6 = python3Target1.loadTemplates();
        org.stringtemplate.v4.STGroup sTGroup7 = python3Target1.getTemplates();
        java.lang.String str9 = python3Target1.getAltLabelContextStructName("\"\"DContext\"\"");
        java.lang.String str11 = python3Target1.getListLabel("\"\\\"\\\"\\\\0\\\"\\\"\"Context");
        org.antlr.v4.codegen.CodeGenerator codeGenerator12 = python3Target1.gen;
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "\"\"" + "'", str3, "\"\"");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 29 + "'", int4 == 29);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Python3" + "'", str5, "Python3");
        org.junit.Assert.assertNotNull(sTGroup6);
        org.junit.Assert.assertNotNull(sTGroup7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\"\"DContext\"\"Context" + "'", str9, "\"\"DContext\"\"Context");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "\"\\\"\\\"\\\\0\\\"\\\"\"Context" + "'", str11, "\"\\\"\\\"\\\\0\\\"\\\"\"Context");
        org.junit.Assert.assertNull(codeGenerator12);
    }

    @Test
    public void test1710() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1710");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.lang.String str3 = python3Target1.getTargetStringLiteralFromString("");
        int int4 = python3Target1.getSerializedATNSegmentLimit();
        boolean boolean5 = python3Target1.wantsBaseVisitor();
        org.stringtemplate.v4.STGroup sTGroup6 = python3Target1.loadTemplates();
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = python3Target1.gen;
        org.antlr.v4.codegen.target.Python3Target python3Target8 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean9 = python3Target8.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup10 = python3Target8.templates;
        org.antlr.v4.tool.Grammar grammar11 = null;
        org.stringtemplate.v4.ST sT12 = null;
        python3Target8.genRecognizerHeaderFile(grammar11, sT12, "");
        python3Target8.language = "Python3";
        int int17 = python3Target8.getSerializedATNSegmentLimit();
        org.stringtemplate.v4.STGroup sTGroup18 = python3Target8.loadTemplates();
        python3Target1.templates = sTGroup18;
        java.lang.String str20 = python3Target1.getVersion();
        java.lang.String str22 = python3Target1.getAltLabelContextStructName("\"\\\"\\\"\\\\0\\\"\\\"\"");
        java.lang.String[] strArray23 = python3Target1.targetCharValueEscape;
        java.lang.Class<?> wildcardClass24 = strArray23.getClass();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "\"\"" + "'", str3, "\"\"");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 29 + "'", int4 == 29);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(sTGroup6);
        org.junit.Assert.assertNull(codeGenerator7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(sTGroup10);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 29 + "'", int17 == 29);
        org.junit.Assert.assertNotNull(sTGroup18);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "4.5.2.1" + "'", str20, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "\"\\\"\\\"\\\\0\\\"\\\"\"Context" + "'", str22, "\"\\\"\\\"\\\\0\\\"\\\"\"Context");
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertNotNull(wildcardClass24);
    }

    @Test
    public void test1711() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1711");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python3Target1.getBadWords();
        java.lang.String str4 = python3Target1.getAltLabelContextStructName("d");
        org.stringtemplate.v4.STGroup sTGroup5 = python3Target1.getTemplates();
        boolean boolean6 = python3Target1.supportsOverloadedMethods();
        java.util.Set<java.lang.String> strSet7 = python3Target1.badWords;
        java.lang.String str9 = python3Target1.getTargetStringLiteralFromString("_tset12");
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = null;
        python3Target1.gen = codeGenerator10;
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "DContext" + "'", str4, "DContext");
        org.junit.Assert.assertNotNull(sTGroup5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(strSet7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\"_tset12\"" + "'", str9, "\"_tset12\"");
    }

    @Test
    public void test1712() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1712");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python3Target1.getBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = null;
        python3Target1.gen = codeGenerator3;
        java.lang.String str6 = python3Target1.getAltLabelContextStructName("hi!");
        java.lang.String str9 = python3Target1.getTargetStringLiteralFromString("\"hi!\"", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = null;
        python3Target1.gen = codeGenerator10;
        org.antlr.v4.tool.Grammar grammar12 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target13 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray14 = python3Target13.targetCharValueEscape;
        org.stringtemplate.v4.STGroup sTGroup15 = python3Target13.templates;
        int int16 = python3Target13.getInlineTestSetWordSize();
        org.antlr.v4.codegen.CodeGenerator codeGenerator17 = python3Target13.gen;
        org.antlr.v4.tool.Grammar grammar18 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target19 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str21 = python3Target19.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.tool.Grammar grammar22 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target23 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean24 = python3Target23.supportsOverloadedMethods();
        java.lang.String str25 = python3Target23.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator26 = null;
        java.lang.String str29 = python3Target23.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator26, "", true);
        java.lang.String str30 = python3Target23.getVersion();
        org.antlr.v4.tool.Grammar grammar31 = null;
        int[] intArray32 = new int[] {};
        java.lang.String[] strArray33 = python3Target23.getTokenTypesAsTargetLabels(grammar31, intArray32);
        java.lang.String[] strArray34 = python3Target19.getTokenTypesAsTargetLabels(grammar22, intArray32);
        java.lang.String[] strArray35 = python3Target13.getTokenTypesAsTargetLabels(grammar18, intArray32);
        java.lang.String[] strArray36 = python3Target1.getTokenTypesAsTargetLabels(grammar12, intArray32);
        java.lang.String[] strArray37 = python3Target1.targetCharValueEscape;
        java.lang.String str39 = python3Target1.getImplicitRuleLabel("#");
        java.lang.String str41 = python3Target1.getListLabel("\"\"tset\\\"\\\"\\\"hi!\\\"\\\"\"\"");
        int int42 = python3Target1.getInlineTestSetWordSize();
        org.antlr.v4.codegen.CodeGenerator codeGenerator43 = python3Target1.gen;
        org.antlr.v4.tool.ast.GrammarAST grammarAST44 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str45 = python3Target1.getLoopLabel(grammarAST44);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Hi!Context" + "'", str6, "Hi!Context");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\"\\\"hi!\\\"\"" + "'", str9, "\"\\\"hi!\\\"\"");
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertNull(sTGroup15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 64 + "'", int16 == 64);
        org.junit.Assert.assertNull(codeGenerator17);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "\"\"\"\"\"\"" + "'", str21, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "4.5.2.1" + "'", str25, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "\"\"" + "'", str29, "\"\"");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "4.5.2.1" + "'", str30, "4.5.2.1");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[]");
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "_#" + "'", str39, "_#");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "\"\"tset\\\"\\\"\\\"hi!\\\"\\\"\"\"" + "'", str41, "\"\"tset\\\"\\\"\\\"hi!\\\"\\\"\"\"");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 64 + "'", int42 == 64);
        org.junit.Assert.assertNull(codeGenerator43);
    }

    @Test
    public void test1713() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1713");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        java.util.Set<java.lang.String> strSet2 = python3Target0.badWords;
        org.antlr.v4.tool.ast.GrammarAST grammarAST3 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str4 = python3Target0.getLoopCounter(grammarAST3);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNotNull(strSet2);
    }

    @Test
    public void test1714() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1714");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray1 = python3Target0.targetCharValueEscape;
        java.lang.String str2 = python3Target0.language;
        java.lang.String[] strArray3 = python3Target0.targetCharValueEscape;
        java.lang.String str5 = python3Target0.encodeIntAsCharEscape(10);
        org.antlr.v4.tool.ast.GrammarAST grammarAST6 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str7 = python3Target0.getLoopCounter(grammarAST6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "\\12" + "'", str5, "\\12");
    }

    @Test
    public void test1715() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1715");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        java.lang.String str3 = python3Target0.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator4 = null;
        java.lang.String str7 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator4, "\"\\\"hi!\\\"\"", true);
        org.stringtemplate.v4.STGroup sTGroup8 = python3Target0.templates;
        org.antlr.v4.codegen.CodeGenerator codeGenerator9 = python3Target0.getCodeGenerator();
        boolean boolean10 = python3Target0.wantsBaseVisitor();
        org.antlr.v4.tool.Rule rule11 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str12 = python3Target0.getRuleFunctionContextStructName(rule11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "4.5.2.1" + "'", str3, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "\"\\\"hi!\\\"\"" + "'", str7, "\"\\\"hi!\\\"\"");
        org.junit.Assert.assertNull(sTGroup8);
        org.junit.Assert.assertNull(codeGenerator9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test1716() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1716");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.lang.String str3 = python3Target1.getTargetStringLiteralFromString("");
        int int4 = python3Target1.getSerializedATNSegmentLimit();
        boolean boolean5 = python3Target1.wantsBaseVisitor();
        org.stringtemplate.v4.STGroup sTGroup6 = python3Target1.loadTemplates();
        java.lang.String str7 = python3Target1.getLanguage();
        java.lang.String str9 = python3Target1.getTargetStringLiteralFromString("\"\"\\0\"\"");
        org.stringtemplate.v4.STGroup sTGroup10 = python3Target1.loadTemplates();
        boolean boolean11 = python3Target1.wantsBaseVisitor();
        org.antlr.v4.codegen.CodeGenerator codeGenerator12 = null;
        java.lang.String str15 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator12, "\"\"DContext\"\"Context", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator16 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target17 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator16);
        java.lang.String str19 = python3Target17.getTargetStringLiteralFromString("");
        int int20 = python3Target17.getSerializedATNSegmentLimit();
        boolean boolean21 = python3Target17.wantsBaseVisitor();
        org.stringtemplate.v4.STGroup sTGroup22 = python3Target17.loadTemplates();
        org.antlr.v4.codegen.target.Python3Target python3Target23 = new org.antlr.v4.codegen.target.Python3Target();
        python3Target23.language = "4.5.2.1";
        org.antlr.v4.codegen.CodeGenerator codeGenerator26 = python3Target23.getCodeGenerator();
        org.antlr.v4.codegen.CodeGenerator codeGenerator27 = python3Target23.gen;
        java.util.Set<java.lang.String> strSet28 = python3Target23.badWords;
        python3Target17.badWords = strSet28;
        python3Target1.badWords = strSet28;
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "\"\"" + "'", str3, "\"\"");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 29 + "'", int4 == 29);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(sTGroup6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Python3" + "'", str7, "Python3");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\"\\\"\\\"\\\\0\\\"\\\"\"" + "'", str9, "\"\\\"\\\"\\\\0\\\"\\\"\"");
        org.junit.Assert.assertNotNull(sTGroup10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "\"\\\"DContext\\\"\\\"Contex\"" + "'", str15, "\"\\\"DContext\\\"\\\"Contex\"");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "\"\"" + "'", str19, "\"\"");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 29 + "'", int20 == 29);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(sTGroup22);
        org.junit.Assert.assertNull(codeGenerator26);
        org.junit.Assert.assertNull(codeGenerator27);
        org.junit.Assert.assertNotNull(strSet28);
    }

    @Test
    public void test1717() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1717");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        org.antlr.v4.tool.Grammar grammar3 = null;
        org.stringtemplate.v4.ST sT4 = null;
        python3Target0.genRecognizerHeaderFile(grammar3, sT4, "");
        python3Target0.language = "Python3";
        java.util.Set<java.lang.String> strSet9 = null;
        python3Target0.badWords = strSet9;
        boolean boolean11 = python3Target0.wantsBaseVisitor();
        java.lang.String[] strArray13 = new java.lang.String[] { "12Context" };
        java.util.LinkedHashSet<java.lang.String> strSet14 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet14, strArray13);
        python3Target0.badWords = strSet14;
        java.lang.String str18 = python3Target0.encodeIntAsCharEscape((int) ' ');
        int int19 = python3Target0.getInlineTestSetWordSize();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str21 = python3Target0.getElementListName("hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + " " + "'", str18, " ");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 64 + "'", int19 == 64);
    }

    @Test
    public void test1718() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1718");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        org.antlr.v4.tool.Grammar grammar3 = null;
        org.stringtemplate.v4.ST sT4 = null;
        python3Target0.genRecognizerHeaderFile(grammar3, sT4, "");
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = python3Target0.getCodeGenerator();
        org.antlr.v4.codegen.target.Python3Target python3Target8 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray9 = python3Target8.targetCharValueEscape;
        org.stringtemplate.v4.STGroup sTGroup10 = python3Target8.templates;
        int int11 = python3Target8.getInlineTestSetWordSize();
        org.antlr.v4.codegen.CodeGenerator codeGenerator12 = python3Target8.gen;
        org.antlr.v4.tool.Grammar grammar13 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target14 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str16 = python3Target14.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.tool.Grammar grammar17 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target18 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean19 = python3Target18.supportsOverloadedMethods();
        java.lang.String str20 = python3Target18.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator21 = null;
        java.lang.String str24 = python3Target18.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator21, "", true);
        java.lang.String str25 = python3Target18.getVersion();
        org.antlr.v4.tool.Grammar grammar26 = null;
        int[] intArray27 = new int[] {};
        java.lang.String[] strArray28 = python3Target18.getTokenTypesAsTargetLabels(grammar26, intArray27);
        java.lang.String[] strArray29 = python3Target14.getTokenTypesAsTargetLabels(grammar17, intArray27);
        java.lang.String[] strArray30 = python3Target8.getTokenTypesAsTargetLabels(grammar13, intArray27);
        org.antlr.v4.codegen.target.Python3Target.python3Keywords = strArray30;
        python3Target0.targetCharValueEscape = strArray30;
        org.antlr.v4.codegen.CodeGenerator codeGenerator33 = null;
        python3Target0.gen = codeGenerator33;
        java.lang.String str35 = python3Target0.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator36 = python3Target0.gen;
        org.antlr.v4.tool.Grammar grammar37 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str39 = python3Target0.getTokenTypeAsTargetLabel(grammar37, (int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertNull(codeGenerator7);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertNull(sTGroup10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 64 + "'", int11 == 64);
        org.junit.Assert.assertNull(codeGenerator12);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "\"\"\"\"\"\"" + "'", str16, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "4.5.2.1" + "'", str20, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "\"\"" + "'", str24, "\"\"");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "4.5.2.1" + "'", str25, "4.5.2.1");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[]");
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNull(codeGenerator36);
    }

    @Test
    public void test1719() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1719");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        java.lang.String str2 = python3Target0.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = null;
        java.lang.String str6 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator3, "", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = null;
        python3Target0.gen = codeGenerator7;
        java.lang.String[] strArray16 = new java.lang.String[] { "\"\"\"\"", "\\12", "\"\"", "4.5.2.1", "", "\"\"\"\"", "\"\"" };
        java.util.LinkedHashSet<java.lang.String> strSet17 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet17, strArray16);
        python3Target0.badWords = strSet17;
        boolean boolean20 = python3Target0.templatesExist();
        int int21 = python3Target0.getSerializedATNSegmentLimit();
        org.antlr.v4.codegen.CodeGenerator codeGenerator22 = python3Target0.getCodeGenerator();
        java.lang.String str23 = python3Target0.language;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str25 = python3Target0.getImplicitSetLabel("_tset\\12");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "4.5.2.1" + "'", str2, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\"\"" + "'", str6, "\"\"");
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 29 + "'", int21 == 29);
        org.junit.Assert.assertNull(codeGenerator22);
        org.junit.Assert.assertNull(str23);
    }

    @Test
    public void test1720() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1720");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!", "hi!" };
        python3Target0.targetCharValueEscape = strArray5;
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = null;
        java.lang.String str10 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator7, "", false);
        int int11 = python3Target0.getSerializedATNSegmentLimit();
        java.lang.String str12 = python3Target0.getVersion();
        boolean boolean13 = python3Target0.supportsOverloadedMethods();
        boolean boolean14 = python3Target0.wantsBaseVisitor();
        org.antlr.v4.tool.Grammar grammar15 = null;
        org.stringtemplate.v4.ST sT16 = null;
        // The following exception was thrown during execution in test generation
        try {
            python3Target0.genListenerFile(grammar15, sT16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 29 + "'", int11 == 29);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "4.5.2.1" + "'", str12, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test1721() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1721");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        java.lang.String str2 = python3Target0.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = python3Target0.getCodeGenerator();
        org.stringtemplate.v4.STGroup sTGroup4 = null;
        python3Target0.templates = sTGroup4;
        org.stringtemplate.v4.STGroup sTGroup6 = python3Target0.templates;
        java.lang.String[] strArray7 = python3Target0.targetCharValueEscape;
        java.lang.String str10 = python3Target0.getTargetStringLiteralFromString("\"12\"", false);
        org.antlr.v4.codegen.target.Python3Target python3Target11 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean12 = python3Target11.supportsOverloadedMethods();
        java.lang.String str13 = python3Target11.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator14 = python3Target11.getCodeGenerator();
        org.stringtemplate.v4.STGroup sTGroup15 = null;
        python3Target11.templates = sTGroup15;
        org.stringtemplate.v4.STGroup sTGroup17 = python3Target11.templates;
        java.lang.String[] strArray18 = python3Target11.targetCharValueEscape;
        java.util.Set<java.lang.String> strSet19 = python3Target11.badWords;
        java.util.Set<java.lang.String> strSet20 = python3Target11.getBadWords();
        python3Target0.badWords = strSet20;
        int int22 = python3Target0.getSerializedATNSegmentLimit();
        python3Target0.language = "\"_tset12\"";
        java.lang.String[] strArray25 = python3Target0.targetCharValueEscape;
        java.lang.String str26 = python3Target0.language;
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "4.5.2.1" + "'", str2, "4.5.2.1");
        org.junit.Assert.assertNull(codeGenerator3);
        org.junit.Assert.assertNull(sTGroup6);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\"12\"" + "'", str10, "\"12\"");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "4.5.2.1" + "'", str13, "4.5.2.1");
        org.junit.Assert.assertNull(codeGenerator14);
        org.junit.Assert.assertNull(sTGroup17);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertNotNull(strSet19);
        org.junit.Assert.assertNotNull(strSet20);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 29 + "'", int22 == 29);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "\"_tset12\"" + "'", str26, "\"_tset12\"");
    }

    @Test
    public void test1722() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1722");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python3Target1.getBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = null;
        python3Target1.gen = codeGenerator3;
        java.lang.String str6 = python3Target1.getAltLabelContextStructName("hi!");
        java.lang.String str9 = python3Target1.getTargetStringLiteralFromString("\"hi!\"", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = null;
        python3Target1.gen = codeGenerator10;
        org.antlr.v4.tool.Grammar grammar12 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target13 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray14 = python3Target13.targetCharValueEscape;
        org.stringtemplate.v4.STGroup sTGroup15 = python3Target13.templates;
        int int16 = python3Target13.getInlineTestSetWordSize();
        org.antlr.v4.codegen.CodeGenerator codeGenerator17 = python3Target13.gen;
        org.antlr.v4.tool.Grammar grammar18 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target19 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str21 = python3Target19.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.tool.Grammar grammar22 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target23 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean24 = python3Target23.supportsOverloadedMethods();
        java.lang.String str25 = python3Target23.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator26 = null;
        java.lang.String str29 = python3Target23.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator26, "", true);
        java.lang.String str30 = python3Target23.getVersion();
        org.antlr.v4.tool.Grammar grammar31 = null;
        int[] intArray32 = new int[] {};
        java.lang.String[] strArray33 = python3Target23.getTokenTypesAsTargetLabels(grammar31, intArray32);
        java.lang.String[] strArray34 = python3Target19.getTokenTypesAsTargetLabels(grammar22, intArray32);
        java.lang.String[] strArray35 = python3Target13.getTokenTypesAsTargetLabels(grammar18, intArray32);
        java.lang.String[] strArray36 = python3Target1.getTokenTypesAsTargetLabels(grammar12, intArray32);
        java.lang.String str38 = python3Target1.getAltLabelContextStructName("\"Python3\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator39 = python3Target1.gen;
        org.antlr.v4.codegen.target.Python3Target python3Target40 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean41 = python3Target40.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup42 = python3Target40.templates;
        java.lang.String[] strArray45 = new java.lang.String[] { "hi!", "hi!" };
        python3Target40.targetCharValueEscape = strArray45;
        org.antlr.v4.codegen.CodeGenerator codeGenerator47 = null;
        java.lang.String str50 = python3Target40.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator47, "", false);
        java.util.Set<java.lang.String> strSet51 = python3Target40.badWords;
        java.util.Set<java.lang.String> strSet52 = python3Target40.badWords;
        python3Target1.badWords = strSet52;
        boolean boolean54 = python3Target1.wantsBaseVisitor();
        org.antlr.v4.codegen.model.RuleFunction ruleFunction55 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str56 = python3Target1.getRuleFunctionContextStructName(ruleFunction55);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Hi!Context" + "'", str6, "Hi!Context");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\"\\\"hi!\\\"\"" + "'", str9, "\"\\\"hi!\\\"\"");
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertNull(sTGroup15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 64 + "'", int16 == 64);
        org.junit.Assert.assertNull(codeGenerator17);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "\"\"\"\"\"\"" + "'", str21, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "4.5.2.1" + "'", str25, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "\"\"" + "'", str29, "\"\"");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "4.5.2.1" + "'", str30, "4.5.2.1");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[]");
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "\"Python3\"Context" + "'", str38, "\"Python3\"Context");
        org.junit.Assert.assertNull(codeGenerator39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNull(sTGroup42);
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "" + "'", str50, "");
        org.junit.Assert.assertNotNull(strSet51);
        org.junit.Assert.assertNotNull(strSet52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
    }

    @Test
    public void test1723() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1723");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        java.lang.String str2 = python3Target0.getVersion();
        boolean boolean3 = python3Target0.supportsOverloadedMethods();
        org.antlr.v4.codegen.CodeGenerator codeGenerator4 = null;
        java.lang.String str7 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator4, "", false);
        org.antlr.v4.tool.Grammar grammar8 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target9 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean10 = python3Target9.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup11 = python3Target9.templates;
        java.lang.String[] strArray14 = new java.lang.String[] { "hi!", "hi!" };
        python3Target9.targetCharValueEscape = strArray14;
        org.antlr.v4.codegen.CodeGenerator codeGenerator16 = null;
        java.lang.String str19 = python3Target9.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator16, "", false);
        java.util.Set<java.lang.String> strSet20 = python3Target9.badWords;
        java.lang.String str22 = python3Target9.getTargetStringLiteralFromString("12");
        int int23 = python3Target9.getSerializedATNSegmentLimit();
        boolean boolean24 = python3Target9.supportsOverloadedMethods();
        org.antlr.v4.tool.Grammar grammar25 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target26 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean27 = python3Target26.supportsOverloadedMethods();
        java.util.Set<java.lang.String> strSet28 = python3Target26.badWords;
        boolean boolean29 = python3Target26.templatesExist();
        java.lang.String str30 = python3Target26.getLanguage();
        org.antlr.v4.tool.Grammar grammar31 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target32 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str34 = python3Target32.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator35 = null;
        python3Target32.gen = codeGenerator35;
        org.antlr.v4.tool.Grammar grammar37 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target38 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str40 = python3Target38.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.tool.Grammar grammar41 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target42 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean43 = python3Target42.supportsOverloadedMethods();
        java.lang.String str44 = python3Target42.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator45 = null;
        java.lang.String str48 = python3Target42.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator45, "", true);
        java.lang.String str49 = python3Target42.getVersion();
        org.antlr.v4.tool.Grammar grammar50 = null;
        int[] intArray51 = new int[] {};
        java.lang.String[] strArray52 = python3Target42.getTokenTypesAsTargetLabels(grammar50, intArray51);
        java.lang.String[] strArray53 = python3Target38.getTokenTypesAsTargetLabels(grammar41, intArray51);
        java.lang.String[] strArray54 = python3Target32.getTokenTypesAsTargetLabels(grammar37, intArray51);
        java.lang.String[] strArray55 = python3Target26.getTokenTypesAsTargetLabels(grammar31, intArray51);
        java.lang.String[] strArray56 = python3Target9.getTokenTypesAsTargetLabels(grammar25, intArray51);
        java.lang.String[] strArray57 = python3Target0.getTokenTypesAsTargetLabels(grammar8, intArray51);
        org.antlr.v4.tool.Grammar grammar58 = null;
        org.stringtemplate.v4.ST sT59 = null;
        python3Target0.genRecognizerHeaderFile(grammar58, sT59, "hi!");
        java.lang.String[] strArray62 = python3Target0.targetCharValueEscape;
        org.antlr.v4.codegen.CodeGenerator codeGenerator63 = python3Target0.gen;
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "4.5.2.1" + "'", str2, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(sTGroup11);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertNotNull(strSet20);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "\"12\"" + "'", str22, "\"12\"");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 29 + "'", int23 == 29);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(strSet28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "\"\"\"\"\"\"" + "'", str34, "\"\"\"\"\"\"");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "\"\"\"\"\"\"" + "'", str40, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "4.5.2.1" + "'", str44, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "\"\"" + "'", str48, "\"\"");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "4.5.2.1" + "'", str49, "4.5.2.1");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[]");
        org.junit.Assert.assertNotNull(strArray52);
        org.junit.Assert.assertNotNull(strArray53);
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertNotNull(strArray55);
        org.junit.Assert.assertNotNull(strArray56);
        org.junit.Assert.assertNotNull(strArray57);
        org.junit.Assert.assertNotNull(strArray62);
        org.junit.Assert.assertNull(codeGenerator63);
    }

    @Test
    public void test1724() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1724");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python3Target1.getBadWords();
        java.lang.String str4 = python3Target1.getAltLabelContextStructName("d");
        org.stringtemplate.v4.STGroup sTGroup5 = python3Target1.getTemplates();
        boolean boolean6 = python3Target1.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup7 = python3Target1.getTemplates();
        python3Target1.language = "\"\"";
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = null;
        java.lang.String str13 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator10, "\\\"4.5.2.1\\\"", false);
        org.antlr.v4.codegen.CodeGenerator codeGenerator14 = python3Target1.gen;
        java.lang.String str16 = python3Target1.getListLabel("_tset12");
        org.antlr.v4.codegen.target.Python3Target python3Target17 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray18 = python3Target17.targetCharValueEscape;
        org.stringtemplate.v4.STGroup sTGroup19 = python3Target17.templates;
        int int20 = python3Target17.getInlineTestSetWordSize();
        org.antlr.v4.codegen.CodeGenerator codeGenerator21 = python3Target17.gen;
        org.antlr.v4.tool.Grammar grammar22 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target23 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str25 = python3Target23.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.tool.Grammar grammar26 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target27 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean28 = python3Target27.supportsOverloadedMethods();
        java.lang.String str29 = python3Target27.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator30 = null;
        java.lang.String str33 = python3Target27.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator30, "", true);
        java.lang.String str34 = python3Target27.getVersion();
        org.antlr.v4.tool.Grammar grammar35 = null;
        int[] intArray36 = new int[] {};
        java.lang.String[] strArray37 = python3Target27.getTokenTypesAsTargetLabels(grammar35, intArray36);
        java.lang.String[] strArray38 = python3Target23.getTokenTypesAsTargetLabels(grammar26, intArray36);
        java.lang.String[] strArray39 = python3Target17.getTokenTypesAsTargetLabels(grammar22, intArray36);
        java.lang.String[] strArray40 = python3Target17.targetCharValueEscape;
        org.antlr.v4.codegen.target.Python3Target.python3Keywords = strArray40;
        python3Target1.targetCharValueEscape = strArray40;
        org.antlr.v4.codegen.target.Python3Target.python3Keywords = strArray40;
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "DContext" + "'", str4, "DContext");
        org.junit.Assert.assertNotNull(sTGroup5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(sTGroup7);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "\\\"4.5.2.1\\\"" + "'", str13, "\\\"4.5.2.1\\\"");
        org.junit.Assert.assertNull(codeGenerator14);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "_tset12" + "'", str16, "_tset12");
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertNull(sTGroup19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 64 + "'", int20 == 64);
        org.junit.Assert.assertNull(codeGenerator21);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "\"\"\"\"\"\"" + "'", str25, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "4.5.2.1" + "'", str29, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "\"\"" + "'", str33, "\"\"");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "4.5.2.1" + "'", str34, "4.5.2.1");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[]");
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertNotNull(strArray40);
    }

    @Test
    public void test1725() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1725");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray1 = python3Target0.targetCharValueEscape;
        java.lang.String str2 = python3Target0.language;
        int int3 = python3Target0.getSerializedATNSegmentLimit();
        org.antlr.v4.codegen.CodeGenerator codeGenerator4 = null;
        java.lang.String str7 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator4, "d", true);
        org.antlr.v4.codegen.target.Python3Target python3Target8 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str10 = python3Target8.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.tool.Grammar grammar11 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target12 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean13 = python3Target12.supportsOverloadedMethods();
        java.lang.String str14 = python3Target12.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator15 = null;
        java.lang.String str18 = python3Target12.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator15, "", true);
        java.lang.String str19 = python3Target12.getVersion();
        org.antlr.v4.tool.Grammar grammar20 = null;
        int[] intArray21 = new int[] {};
        java.lang.String[] strArray22 = python3Target12.getTokenTypesAsTargetLabels(grammar20, intArray21);
        java.lang.String[] strArray23 = python3Target8.getTokenTypesAsTargetLabels(grammar11, intArray21);
        python3Target0.targetCharValueEscape = strArray23;
        org.antlr.v4.codegen.target.Python3Target python3Target25 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean26 = python3Target25.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup27 = python3Target25.templates;
        java.lang.String[] strArray30 = new java.lang.String[] { "hi!", "hi!" };
        python3Target25.targetCharValueEscape = strArray30;
        java.lang.String[] strArray33 = new java.lang.String[] { "hi!" };
        org.antlr.v4.codegen.target.Python3Target.python3Keywords = strArray33;
        python3Target25.targetCharValueEscape = strArray33;
        java.util.Set<java.lang.String> strSet36 = python3Target25.getBadWords();
        int int37 = python3Target25.getInlineTestSetWordSize();
        boolean boolean38 = python3Target25.wantsBaseListener();
        org.antlr.v4.tool.Grammar grammar39 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target40 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray41 = python3Target40.targetCharValueEscape;
        org.stringtemplate.v4.STGroup sTGroup42 = python3Target40.templates;
        int int43 = python3Target40.getInlineTestSetWordSize();
        org.antlr.v4.codegen.CodeGenerator codeGenerator44 = python3Target40.gen;
        org.antlr.v4.tool.Grammar grammar45 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target46 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str48 = python3Target46.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.tool.Grammar grammar49 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target50 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean51 = python3Target50.supportsOverloadedMethods();
        java.lang.String str52 = python3Target50.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator53 = null;
        java.lang.String str56 = python3Target50.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator53, "", true);
        java.lang.String str57 = python3Target50.getVersion();
        org.antlr.v4.tool.Grammar grammar58 = null;
        int[] intArray59 = new int[] {};
        java.lang.String[] strArray60 = python3Target50.getTokenTypesAsTargetLabels(grammar58, intArray59);
        java.lang.String[] strArray61 = python3Target46.getTokenTypesAsTargetLabels(grammar49, intArray59);
        java.lang.String[] strArray62 = python3Target40.getTokenTypesAsTargetLabels(grammar45, intArray59);
        java.lang.String[] strArray63 = python3Target25.getTokenTypesAsTargetLabels(grammar39, intArray59);
        python3Target0.targetCharValueEscape = strArray63;
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 29 + "'", int3 == 29);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "\"\"" + "'", str7, "\"\"");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\"\"\"\"\"\"" + "'", str10, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "4.5.2.1" + "'", str14, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "\"\"" + "'", str18, "\"\"");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "4.5.2.1" + "'", str19, "4.5.2.1");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[]");
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNull(sTGroup27);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertNotNull(strSet36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 64 + "'", int37 == 64);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertNull(sTGroup42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 64 + "'", int43 == 64);
        org.junit.Assert.assertNull(codeGenerator44);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "\"\"\"\"\"\"" + "'", str48, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "4.5.2.1" + "'", str52, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "\"\"" + "'", str56, "\"\"");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "4.5.2.1" + "'", str57, "4.5.2.1");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[]");
        org.junit.Assert.assertNotNull(strArray60);
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertNotNull(strArray62);
        org.junit.Assert.assertNotNull(strArray63);
    }

    @Test
    public void test1726() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1726");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str2 = python3Target0.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = null;
        python3Target0.gen = codeGenerator3;
        java.lang.String str5 = python3Target0.getVersion();
        org.antlr.v4.codegen.target.Python3Target python3Target6 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean7 = python3Target6.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup8 = python3Target6.templates;
        org.antlr.v4.tool.Grammar grammar9 = null;
        org.stringtemplate.v4.ST sT10 = null;
        python3Target6.genRecognizerHeaderFile(grammar9, sT10, "");
        python3Target6.language = "Python3";
        int int15 = python3Target6.getSerializedATNSegmentLimit();
        org.stringtemplate.v4.STGroup sTGroup16 = python3Target6.loadTemplates();
        python3Target0.templates = sTGroup16;
        python3Target0.addBadWords();
        java.lang.String str21 = python3Target0.getTargetStringLiteralFromString("\"\"\"_tset12\"\"\"", false);
        java.lang.String str23 = python3Target0.getImplicitRuleLabel("_tset\"\"\"\"\"\"\"\"ContextContextContext");
        org.antlr.v4.codegen.CodeGenerator codeGenerator24 = python3Target0.gen;
        boolean boolean25 = python3Target0.supportsOverloadedMethods();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "\"\"\"\"\"\"" + "'", str2, "\"\"\"\"\"\"");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "4.5.2.1" + "'", str5, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(sTGroup8);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 29 + "'", int15 == 29);
        org.junit.Assert.assertNotNull(sTGroup16);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "\"\"\"_tset12\"\"\"" + "'", str21, "\"\"\"_tset12\"\"\"");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "__tset\"\"\"\"\"\"\"\"ContextContextContext" + "'", str23, "__tset\"\"\"\"\"\"\"\"ContextContextContext");
        org.junit.Assert.assertNull(codeGenerator24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
    }

    @Test
    public void test1727() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1727");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        java.lang.String str2 = python3Target0.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = null;
        java.lang.String str6 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator3, "", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = null;
        python3Target0.gen = codeGenerator7;
        java.lang.String[] strArray16 = new java.lang.String[] { "\"\"\"\"", "\\12", "\"\"", "4.5.2.1", "", "\"\"\"\"", "\"\"" };
        java.util.LinkedHashSet<java.lang.String> strSet17 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet17, strArray16);
        python3Target0.badWords = strSet17;
        org.antlr.v4.codegen.CodeGenerator codeGenerator20 = python3Target0.gen;
        java.lang.String str21 = python3Target0.getVersion();
        java.lang.String str22 = python3Target0.language;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str24 = python3Target0.getImplicitTokenLabel("\"1\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "4.5.2.1" + "'", str2, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\"\"" + "'", str6, "\"\"");
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNull(codeGenerator20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "4.5.2.1" + "'", str21, "4.5.2.1");
        org.junit.Assert.assertNull(str22);
    }

    @Test
    public void test1728() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1728");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        org.antlr.v4.tool.Grammar grammar3 = null;
        org.stringtemplate.v4.ST sT4 = null;
        python3Target0.genRecognizerHeaderFile(grammar3, sT4, "");
        python3Target0.language = "Python3";
        org.antlr.v4.tool.Grammar grammar9 = null;
        org.stringtemplate.v4.ST sT10 = null;
        python3Target0.genRecognizerHeaderFile(grammar9, sT10, "\"hi!\"");
        java.lang.String str14 = python3Target0.getImplicitRuleLabel("\"\\1\"");
        java.lang.String str16 = python3Target0.getImplicitSetLabel("\\\"\\\\\\\"\\\\\\\"hi!\\\\\\\"\\\\\\\"\\\"");
        python3Target0.addBadWords();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str19 = python3Target0.getElementName("_tset\"\"\\0\"\"Context");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "_\"\\1\"" + "'", str14, "_\"\\1\"");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "_tset\\\"\\\\\\\"\\\\\\\"hi!\\\\\\\"\\\\\\\"\\\"" + "'", str16, "_tset\\\"\\\\\\\"\\\\\\\"hi!\\\\\\\"\\\\\\\"\\\"");
    }

    @Test
    public void test1729() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1729");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.lang.String str3 = python3Target1.getTargetStringLiteralFromString("");
        int int4 = python3Target1.getSerializedATNSegmentLimit();
        boolean boolean5 = python3Target1.wantsBaseVisitor();
        org.stringtemplate.v4.STGroup sTGroup6 = python3Target1.loadTemplates();
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = python3Target1.gen;
        org.antlr.v4.codegen.target.Python3Target python3Target8 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean9 = python3Target8.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup10 = python3Target8.templates;
        org.antlr.v4.tool.Grammar grammar11 = null;
        org.stringtemplate.v4.ST sT12 = null;
        python3Target8.genRecognizerHeaderFile(grammar11, sT12, "");
        python3Target8.language = "Python3";
        int int17 = python3Target8.getSerializedATNSegmentLimit();
        org.stringtemplate.v4.STGroup sTGroup18 = python3Target8.loadTemplates();
        python3Target1.templates = sTGroup18;
        java.lang.String str20 = python3Target1.getVersion();
        java.lang.String str21 = python3Target1.language;
        org.stringtemplate.v4.STGroup sTGroup22 = python3Target1.templates;
        boolean boolean23 = python3Target1.wantsBaseVisitor();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "\"\"" + "'", str3, "\"\"");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 29 + "'", int4 == 29);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(sTGroup6);
        org.junit.Assert.assertNull(codeGenerator7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(sTGroup10);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 29 + "'", int17 == 29);
        org.junit.Assert.assertNotNull(sTGroup18);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "4.5.2.1" + "'", str20, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Python3" + "'", str21, "Python3");
        org.junit.Assert.assertNotNull(sTGroup22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
    }

    @Test
    public void test1730() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1730");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.lang.String str3 = python3Target1.getTargetStringLiteralFromString("");
        int int4 = python3Target1.getSerializedATNSegmentLimit();
        boolean boolean5 = python3Target1.wantsBaseVisitor();
        java.lang.String str7 = python3Target1.getImplicitRuleLabel("\"\"\\\"\\\"hi!\\\"\\\"\"\"");
        python3Target1.language = "\"_\"\\1\"\"";
        boolean boolean10 = python3Target1.wantsBaseListener();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "\"\"" + "'", str3, "\"\"");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 29 + "'", int4 == 29);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "_\"\"\\\"\\\"hi!\\\"\\\"\"\"" + "'", str7, "_\"\"\\\"\\\"hi!\\\"\\\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test1731() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1731");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        java.lang.String str2 = python3Target0.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = null;
        java.lang.String str6 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator3, "", true);
        java.lang.String str7 = python3Target0.getVersion();
        org.antlr.v4.tool.Grammar grammar8 = null;
        int[] intArray9 = new int[] {};
        java.lang.String[] strArray10 = python3Target0.getTokenTypesAsTargetLabels(grammar8, intArray9);
        java.lang.String[] strArray11 = python3Target0.targetCharValueEscape;
        java.util.Set<java.lang.String> strSet12 = python3Target0.badWords;
        python3Target0.addBadWords();
        org.antlr.v4.codegen.target.Python3Target python3Target14 = new org.antlr.v4.codegen.target.Python3Target();
        python3Target14.language = "4.5.2.1";
        org.antlr.v4.codegen.CodeGenerator codeGenerator17 = python3Target14.getCodeGenerator();
        org.antlr.v4.codegen.CodeGenerator codeGenerator18 = python3Target14.gen;
        java.util.Set<java.lang.String> strSet19 = python3Target14.badWords;
        org.antlr.v4.tool.Grammar grammar20 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target21 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean22 = python3Target21.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup23 = python3Target21.templates;
        java.lang.String[] strArray26 = new java.lang.String[] { "hi!", "hi!" };
        python3Target21.targetCharValueEscape = strArray26;
        java.lang.String[] strArray29 = new java.lang.String[] { "hi!" };
        org.antlr.v4.codegen.target.Python3Target.python3Keywords = strArray29;
        python3Target21.targetCharValueEscape = strArray29;
        org.antlr.v4.tool.Grammar grammar32 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target33 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str35 = python3Target33.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator36 = null;
        python3Target33.gen = codeGenerator36;
        org.antlr.v4.tool.Grammar grammar38 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target39 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str41 = python3Target39.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.tool.Grammar grammar42 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target43 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean44 = python3Target43.supportsOverloadedMethods();
        java.lang.String str45 = python3Target43.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator46 = null;
        java.lang.String str49 = python3Target43.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator46, "", true);
        java.lang.String str50 = python3Target43.getVersion();
        org.antlr.v4.tool.Grammar grammar51 = null;
        int[] intArray52 = new int[] {};
        java.lang.String[] strArray53 = python3Target43.getTokenTypesAsTargetLabels(grammar51, intArray52);
        java.lang.String[] strArray54 = python3Target39.getTokenTypesAsTargetLabels(grammar42, intArray52);
        java.lang.String[] strArray55 = python3Target33.getTokenTypesAsTargetLabels(grammar38, intArray52);
        java.lang.String[] strArray56 = python3Target21.getTokenTypesAsTargetLabels(grammar32, intArray52);
        java.lang.String[] strArray57 = python3Target14.getTokenTypesAsTargetLabels(grammar20, intArray52);
        python3Target0.targetCharValueEscape = strArray57;
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "4.5.2.1" + "'", str2, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\"\"" + "'", str6, "\"\"");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "4.5.2.1" + "'", str7, "4.5.2.1");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[]");
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertNull(codeGenerator17);
        org.junit.Assert.assertNull(codeGenerator18);
        org.junit.Assert.assertNotNull(strSet19);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(sTGroup23);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "\"\"\"\"\"\"" + "'", str35, "\"\"\"\"\"\"");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "\"\"\"\"\"\"" + "'", str41, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "4.5.2.1" + "'", str45, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "\"\"" + "'", str49, "\"\"");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "4.5.2.1" + "'", str50, "4.5.2.1");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[]");
        org.junit.Assert.assertNotNull(strArray53);
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertNotNull(strArray55);
        org.junit.Assert.assertNotNull(strArray56);
        org.junit.Assert.assertNotNull(strArray57);
    }

    @Test
    public void test1732() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1732");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python3Target1.getBadWords();
        java.lang.String str4 = python3Target1.getAltLabelContextStructName("d");
        java.lang.String str6 = python3Target1.getTargetStringLiteralFromString("\"\"");
        org.antlr.v4.tool.Grammar grammar7 = null;
        org.stringtemplate.v4.ST sT8 = null;
        // The following exception was thrown during execution in test generation
        try {
            python3Target1.genListenerFile(grammar7, sT8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "DContext" + "'", str4, "DContext");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\"\\\"\\\"\"" + "'", str6, "\"\\\"\\\"\"");
    }

    @Test
    public void test1733() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1733");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!", "hi!" };
        python3Target0.targetCharValueEscape = strArray5;
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = null;
        python3Target0.gen = codeGenerator7;
        org.antlr.v4.tool.Grammar grammar9 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target11 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator10);
        java.lang.String str13 = python3Target11.getTargetStringLiteralFromString("");
        int int14 = python3Target11.getSerializedATNSegmentLimit();
        int int15 = python3Target11.getInlineTestSetWordSize();
        org.antlr.v4.tool.Grammar grammar16 = null;
        org.stringtemplate.v4.ST sT17 = null;
        python3Target11.genRecognizerHeaderFile(grammar16, sT17, "@");
        boolean boolean20 = python3Target11.templatesExist();
        boolean boolean21 = python3Target11.templatesExist();
        java.lang.String str22 = python3Target11.language;
        org.antlr.v4.tool.Grammar grammar23 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator24 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target25 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator24);
        java.util.Set<java.lang.String> strSet26 = python3Target25.getBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator27 = null;
        python3Target25.gen = codeGenerator27;
        java.lang.String str30 = python3Target25.getAltLabelContextStructName("hi!");
        java.lang.String str33 = python3Target25.getTargetStringLiteralFromString("\"hi!\"", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator34 = null;
        python3Target25.gen = codeGenerator34;
        org.antlr.v4.tool.Grammar grammar36 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target37 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray38 = python3Target37.targetCharValueEscape;
        org.stringtemplate.v4.STGroup sTGroup39 = python3Target37.templates;
        int int40 = python3Target37.getInlineTestSetWordSize();
        org.antlr.v4.codegen.CodeGenerator codeGenerator41 = python3Target37.gen;
        org.antlr.v4.tool.Grammar grammar42 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target43 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str45 = python3Target43.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.tool.Grammar grammar46 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target47 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean48 = python3Target47.supportsOverloadedMethods();
        java.lang.String str49 = python3Target47.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator50 = null;
        java.lang.String str53 = python3Target47.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator50, "", true);
        java.lang.String str54 = python3Target47.getVersion();
        org.antlr.v4.tool.Grammar grammar55 = null;
        int[] intArray56 = new int[] {};
        java.lang.String[] strArray57 = python3Target47.getTokenTypesAsTargetLabels(grammar55, intArray56);
        java.lang.String[] strArray58 = python3Target43.getTokenTypesAsTargetLabels(grammar46, intArray56);
        java.lang.String[] strArray59 = python3Target37.getTokenTypesAsTargetLabels(grammar42, intArray56);
        java.lang.String[] strArray60 = python3Target25.getTokenTypesAsTargetLabels(grammar36, intArray56);
        java.lang.String[] strArray61 = python3Target11.getTokenTypesAsTargetLabels(grammar23, intArray56);
        java.lang.String[] strArray62 = python3Target0.getTokenTypesAsTargetLabels(grammar9, intArray56);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str64 = python3Target0.getAltLabelContextStructName("3");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "\"\"" + "'", str13, "\"\"");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 29 + "'", int14 == 29);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 64 + "'", int15 == 64);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "Python3" + "'", str22, "Python3");
        org.junit.Assert.assertNotNull(strSet26);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "Hi!Context" + "'", str30, "Hi!Context");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "\"\\\"hi!\\\"\"" + "'", str33, "\"\\\"hi!\\\"\"");
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertNull(sTGroup39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 64 + "'", int40 == 64);
        org.junit.Assert.assertNull(codeGenerator41);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "\"\"\"\"\"\"" + "'", str45, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "4.5.2.1" + "'", str49, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "\"\"" + "'", str53, "\"\"");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "4.5.2.1" + "'", str54, "4.5.2.1");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[]");
        org.junit.Assert.assertNotNull(strArray57);
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertNotNull(strArray59);
        org.junit.Assert.assertNotNull(strArray60);
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertNotNull(strArray62);
    }

    @Test
    public void test1734() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1734");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        org.antlr.v4.tool.Grammar grammar3 = null;
        org.stringtemplate.v4.ST sT4 = null;
        python3Target0.genRecognizerHeaderFile(grammar3, sT4, "");
        python3Target0.language = "Python3";
        int int9 = python3Target0.getSerializedATNSegmentLimit();
        java.lang.String str11 = python3Target0.getListLabel("_tsetPython3");
        java.lang.String str13 = python3Target0.getAltLabelContextStructName("\"\\\"DContext\\\"\"");
        java.util.Set<java.lang.String> strSet14 = python3Target0.badWords;
        org.antlr.v4.tool.ast.GrammarAST grammarAST15 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str16 = python3Target0.getLoopLabel(grammarAST15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 29 + "'", int9 == 29);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "_tsetPython3" + "'", str11, "_tsetPython3");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "\"\\\"DContext\\\"\"Context" + "'", str13, "\"\\\"DContext\\\"\"Context");
        org.junit.Assert.assertNotNull(strSet14);
    }

    @Test
    public void test1735() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1735");
        java.lang.String str1 = org.stringtemplate.v4.StringRenderer.escapeHTML("\"\"\"\"\"\"\"\"\"Context\"");
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "\"\"\"\"\"\"\"\"\"Context\"" + "'", str1, "\"\"\"\"\"\"\"\"\"Context\"");
    }

    @Test
    public void test1736() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1736");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        org.antlr.v4.codegen.CodeGenerator codeGenerator1 = python3Target0.getCodeGenerator();
        boolean boolean2 = python3Target0.templatesExist();
        boolean boolean3 = python3Target0.templatesExist();
        org.stringtemplate.v4.STGroup sTGroup4 = python3Target0.templates;
        boolean boolean5 = python3Target0.wantsBaseVisitor();
        java.lang.String str7 = python3Target0.encodeIntAsCharEscape((int) (byte) 10);
        org.junit.Assert.assertNull(codeGenerator1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(sTGroup4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "\\12" + "'", str7, "\\12");
    }

    @Test
    public void test1737() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1737");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        java.lang.String str2 = python3Target0.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = null;
        java.lang.String str6 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator3, "", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = null;
        python3Target0.gen = codeGenerator7;
        int int9 = python3Target0.getSerializedATNSegmentLimit();
        org.antlr.v4.tool.Grammar grammar10 = null;
        org.stringtemplate.v4.ST sT11 = null;
        python3Target0.genRecognizerHeaderFile(grammar10, sT11, "_tset12");
        org.stringtemplate.v4.STGroup sTGroup14 = python3Target0.templates;
        org.antlr.v4.codegen.CodeGenerator codeGenerator15 = python3Target0.getCodeGenerator();
        org.stringtemplate.v4.STGroup sTGroup16 = python3Target0.templates;
        java.lang.String str19 = python3Target0.getTargetStringLiteralFromString("\"_tset\"\\\"Python3\\\"\"\"", false);
        // The following exception was thrown during execution in test generation
        try {
            org.stringtemplate.v4.STGroup sTGroup20 = python3Target0.getTemplates();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "4.5.2.1" + "'", str2, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\"\"" + "'", str6, "\"\"");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 29 + "'", int9 == 29);
        org.junit.Assert.assertNull(sTGroup14);
        org.junit.Assert.assertNull(codeGenerator15);
        org.junit.Assert.assertNull(sTGroup16);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "\"_tset\"\\\"Python3\\\"\"\"" + "'", str19, "\"_tset\"\\\"Python3\\\"\"\"");
    }

    @Test
    public void test1738() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1738");
        java.lang.String str1 = org.stringtemplate.v4.StringRenderer.escapeHTML("\"#\"");
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "\"#\"" + "'", str1, "\"#\"");
    }

    @Test
    public void test1739() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1739");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str2 = python3Target0.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = null;
        python3Target0.gen = codeGenerator3;
        org.antlr.v4.codegen.CodeGenerator codeGenerator5 = python3Target0.getCodeGenerator();
        org.stringtemplate.v4.STGroup sTGroup6 = python3Target0.templates;
        org.antlr.v4.tool.ast.GrammarAST grammarAST7 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean8 = python3Target0.grammarSymbolCausesIssueInGeneratedCode(grammarAST7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "\"\"\"\"\"\"" + "'", str2, "\"\"\"\"\"\"");
        org.junit.Assert.assertNull(codeGenerator5);
        org.junit.Assert.assertNull(sTGroup6);
    }

    @Test
    public void test1740() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1740");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.lang.String str2 = python3Target1.getVersion();
        int int3 = python3Target1.getSerializedATNSegmentLimit();
        java.lang.String str4 = python3Target1.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator5 = python3Target1.gen;
        org.antlr.v4.tool.ast.GrammarAST grammarAST6 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean7 = python3Target1.grammarSymbolCausesIssueInGeneratedCode(grammarAST6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "4.5.2.1" + "'", str2, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 29 + "'", int3 == 29);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "4.5.2.1" + "'", str4, "4.5.2.1");
        org.junit.Assert.assertNull(codeGenerator5);
    }

    @Test
    public void test1741() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1741");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray1 = python3Target0.targetCharValueEscape;
        java.lang.String str2 = python3Target0.language;
        int int3 = python3Target0.getSerializedATNSegmentLimit();
        org.antlr.v4.codegen.CodeGenerator codeGenerator4 = null;
        java.lang.String str7 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator4, "d", true);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str9 = python3Target0.getImplicitTokenLabel("1");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 29 + "'", int3 == 29);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "\"\"" + "'", str7, "\"\"");
    }

    @Test
    public void test1742() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1742");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray1 = python3Target0.targetCharValueEscape;
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        int int3 = python3Target0.getInlineTestSetWordSize();
        org.antlr.v4.codegen.CodeGenerator codeGenerator4 = python3Target0.gen;
        org.antlr.v4.tool.Grammar grammar5 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target6 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str8 = python3Target6.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.tool.Grammar grammar9 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target10 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean11 = python3Target10.supportsOverloadedMethods();
        java.lang.String str12 = python3Target10.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator13 = null;
        java.lang.String str16 = python3Target10.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator13, "", true);
        java.lang.String str17 = python3Target10.getVersion();
        org.antlr.v4.tool.Grammar grammar18 = null;
        int[] intArray19 = new int[] {};
        java.lang.String[] strArray20 = python3Target10.getTokenTypesAsTargetLabels(grammar18, intArray19);
        java.lang.String[] strArray21 = python3Target6.getTokenTypesAsTargetLabels(grammar9, intArray19);
        java.lang.String[] strArray22 = python3Target0.getTokenTypesAsTargetLabels(grammar5, intArray19);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str24 = python3Target0.getElementListName("_\"_\"\"\"DContext\"\"Context\"\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 64 + "'", int3 == 64);
        org.junit.Assert.assertNull(codeGenerator4);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\"\"\"\"\"\"" + "'", str8, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "4.5.2.1" + "'", str12, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "\"\"" + "'", str16, "\"\"");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "4.5.2.1" + "'", str17, "4.5.2.1");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[]");
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(strArray22);
    }

    @Test
    public void test1743() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1743");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        org.antlr.v4.codegen.CodeGenerator codeGenerator1 = python3Target0.getCodeGenerator();
        boolean boolean2 = python3Target0.templatesExist();
        boolean boolean3 = python3Target0.templatesExist();
        python3Target0.addBadWords();
        org.junit.Assert.assertNull(codeGenerator1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    }

    @Test
    public void test1744() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1744");
        org.antlr.v4.codegen.target.Python3Target.PythonStringRenderer pythonStringRenderer0 = new org.antlr.v4.codegen.target.Python3Target.PythonStringRenderer();
        java.lang.Object obj1 = null;
        java.util.Locale locale3 = null;
        java.lang.String str4 = pythonStringRenderer0.toString(obj1, "\"\"\"\"\"\"", locale3);
        org.antlr.v4.codegen.CodeGenerator codeGenerator5 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target6 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator5);
        java.lang.String str8 = python3Target6.getTargetStringLiteralFromString("");
        python3Target6.language = "";
        java.util.Locale locale12 = null;
        java.lang.String str13 = pythonStringRenderer0.toString((java.lang.Object) "", "\"\\\"hi!\\\"\"", locale12);
        org.antlr.v4.codegen.CodeGenerator codeGenerator14 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target15 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator14);
        java.util.Set<java.lang.String> strSet16 = python3Target15.getBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator17 = null;
        python3Target15.gen = codeGenerator17;
        java.lang.String str20 = python3Target15.getAltLabelContextStructName("hi!");
        java.lang.String str23 = python3Target15.getTargetStringLiteralFromString("\"hi!\"", true);
        int int24 = python3Target15.getSerializedATNSegmentLimit();
        org.stringtemplate.v4.STGroup sTGroup25 = python3Target15.getTemplates();
        org.antlr.v4.codegen.target.Python3Target python3Target26 = new org.antlr.v4.codegen.target.Python3Target();
        python3Target26.language = "";
        org.antlr.v4.codegen.target.Python3Target python3Target29 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean30 = python3Target29.supportsOverloadedMethods();
        java.lang.String str31 = python3Target29.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator32 = null;
        java.lang.String str35 = python3Target29.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator32, "", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator36 = null;
        python3Target29.gen = codeGenerator36;
        java.lang.String[] strArray45 = new java.lang.String[] { "\"\"\"\"", "\\12", "\"\"", "4.5.2.1", "", "\"\"\"\"", "\"\"" };
        java.util.LinkedHashSet<java.lang.String> strSet46 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet46, strArray45);
        python3Target29.badWords = strSet46;
        python3Target26.badWords = strSet46;
        java.lang.String str51 = python3Target26.encodeIntAsCharEscape((int) (byte) 100);
        java.lang.String str52 = python3Target26.getLanguage();
        java.lang.String str54 = python3Target26.getTargetStringLiteralFromString("\"\\0\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator55 = null;
        python3Target26.gen = codeGenerator55;
        org.antlr.v4.codegen.CodeGenerator codeGenerator57 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target58 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator57);
        java.lang.String str59 = python3Target58.getLanguage();
        java.lang.String str61 = python3Target58.getImplicitSetLabel("Python3");
        org.antlr.v4.codegen.CodeGenerator codeGenerator62 = null;
        java.lang.String str65 = python3Target58.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator62, "\"\"\"\"", true);
        org.stringtemplate.v4.STGroup sTGroup66 = python3Target58.loadTemplates();
        python3Target26.templates = sTGroup66;
        python3Target15.templates = sTGroup66;
        java.lang.String[] strArray69 = python3Target15.targetCharValueEscape;
        java.util.Locale locale71 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str72 = pythonStringRenderer0.toString((java.lang.Object) strArray69, "12Context", locale71);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: [Ljava.lang.String; cannot be cast to java.lang.String");
        } catch (java.lang.ClassCastException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "\"\"\"\"\"\"" + "'", str4, "\"\"\"\"\"\"");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\"\"" + "'", str8, "\"\"");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "\"\\\"hi!\\\"\"" + "'", str13, "\"\\\"hi!\\\"\"");
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "Hi!Context" + "'", str20, "Hi!Context");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "\"\\\"hi!\\\"\"" + "'", str23, "\"\\\"hi!\\\"\"");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 29 + "'", int24 == 29);
        org.junit.Assert.assertNotNull(sTGroup25);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "4.5.2.1" + "'", str31, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "\"\"" + "'", str35, "\"\"");
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "d" + "'", str51, "d");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "" + "'", str52, "");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "\"\"\\0\"\"" + "'", str54, "\"\"\\0\"\"");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "Python3" + "'", str59, "Python3");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "_tsetPython3" + "'", str61, "_tsetPython3");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "\"\\\"\\\"\"" + "'", str65, "\"\\\"\\\"\"");
        org.junit.Assert.assertNotNull(sTGroup66);
        org.junit.Assert.assertNotNull(strArray69);
    }

    @Test
    public void test1745() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1745");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python3Target1.getBadWords();
        java.lang.String str4 = python3Target1.getAltLabelContextStructName("d");
        org.stringtemplate.v4.STGroup sTGroup5 = python3Target1.getTemplates();
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = null;
        java.lang.String str9 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator6, "", true);
        java.lang.String str11 = python3Target1.getImplicitSetLabel("\"\\0\"");
        java.lang.String str13 = python3Target1.getAltLabelContextStructName("\"12\"");
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "DContext" + "'", str4, "DContext");
        org.junit.Assert.assertNotNull(sTGroup5);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\"\"" + "'", str9, "\"\"");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "_tset\"\\0\"" + "'", str11, "_tset\"\\0\"");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "\"12\"Context" + "'", str13, "\"12\"Context");
    }

    @Test
    public void test1746() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1746");
        java.lang.String str1 = org.stringtemplate.v4.StringRenderer.escapeHTML("\\\"\\\"\\\"\\\"\\\"\\\"\\\"ContextContextContex");
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "\\\"\\\"\\\"\\\"\\\"\\\"\\\"ContextContextContex" + "'", str1, "\\\"\\\"\\\"\\\"\\\"\\\"\\\"ContextContextContex");
    }

    @Test
    public void test1747() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1747");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python3Target1.getBadWords();
        java.lang.String str4 = python3Target1.getAltLabelContextStructName("d");
        org.stringtemplate.v4.STGroup sTGroup5 = python3Target1.getTemplates();
        boolean boolean6 = python3Target1.templatesExist();
        org.antlr.v4.tool.Grammar grammar7 = null;
        org.stringtemplate.v4.ST sT8 = null;
        python3Target1.genRecognizerHeaderFile(grammar7, sT8, "\"\"DContext\"\"Context");
        org.antlr.v4.tool.ast.GrammarAST grammarAST11 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean12 = python3Target1.visibleGrammarSymbolCausesIssueInGeneratedCode(grammarAST11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "DContext" + "'", str4, "DContext");
        org.junit.Assert.assertNotNull(sTGroup5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
    }

    @Test
    public void test1748() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1748");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.lang.String str3 = python3Target1.getTargetStringLiteralFromString("");
        int int4 = python3Target1.getSerializedATNSegmentLimit();
        boolean boolean5 = python3Target1.wantsBaseVisitor();
        org.stringtemplate.v4.STGroup sTGroup6 = python3Target1.loadTemplates();
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = python3Target1.gen;
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = python3Target1.getCodeGenerator();
        python3Target1.addBadWords();
        java.lang.String str11 = python3Target1.encodeIntAsCharEscape((int) (byte) 10);
        org.antlr.v4.codegen.model.RuleFunction ruleFunction12 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str13 = python3Target1.getRuleFunctionContextStructName(ruleFunction12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "\"\"" + "'", str3, "\"\"");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 29 + "'", int4 == 29);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(sTGroup6);
        org.junit.Assert.assertNull(codeGenerator7);
        org.junit.Assert.assertNull(codeGenerator8);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "\\n" + "'", str11, "\\n");
    }

    @Test
    public void test1749() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1749");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str2 = python3Target0.getTargetStringLiteralFromString("\"\"\"\"");
        java.lang.String str4 = python3Target0.getTargetStringLiteralFromString("");
        int int5 = python3Target0.getSerializedATNSegmentLimit();
        boolean boolean6 = python3Target0.templatesExist();
        java.lang.String str7 = python3Target0.getLanguage();
        java.lang.String str8 = python3Target0.language;
        boolean boolean9 = python3Target0.supportsOverloadedMethods();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "\"\"\"\"\"\"" + "'", str2, "\"\"\"\"\"\"");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "\"\"" + "'", str4, "\"\"");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 29 + "'", int5 == 29);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test1750() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1750");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        python3Target0.language = "4.5.2.1";
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = python3Target0.getCodeGenerator();
        org.antlr.v4.codegen.CodeGenerator codeGenerator4 = python3Target0.gen;
        java.util.Set<java.lang.String> strSet5 = python3Target0.badWords;
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = python3Target0.gen;
        java.lang.String str7 = python3Target0.language;
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = null;
        java.lang.String str11 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator8, "d", false);
        java.util.Set<java.lang.String> strSet12 = python3Target0.badWords;
        java.lang.String[] strArray13 = python3Target0.targetCharValueEscape;
        org.junit.Assert.assertNull(codeGenerator3);
        org.junit.Assert.assertNull(codeGenerator4);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNull(codeGenerator6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "4.5.2.1" + "'", str7, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertNotNull(strArray13);
    }

    @Test
    public void test1751() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1751");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        java.lang.String str2 = python3Target0.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = null;
        java.lang.String str6 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator3, "", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = null;
        python3Target0.gen = codeGenerator7;
        int int9 = python3Target0.getSerializedATNSegmentLimit();
        org.antlr.v4.tool.Grammar grammar10 = null;
        org.stringtemplate.v4.ST sT11 = null;
        python3Target0.genRecognizerHeaderFile(grammar10, sT11, "_tset12");
        java.util.Set<java.lang.String> strSet14 = python3Target0.getBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator15 = null;
        java.lang.String str18 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator15, "\"\"\\0\"\"", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator19 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target20 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator19);
        java.util.Set<java.lang.String> strSet21 = python3Target20.getBadWords();
        java.lang.String str23 = python3Target20.getAltLabelContextStructName("d");
        java.lang.String str25 = python3Target20.getTargetStringLiteralFromString("\"\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator26 = python3Target20.getCodeGenerator();
        org.antlr.v4.tool.Grammar grammar27 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator28 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target29 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator28);
        java.util.Set<java.lang.String> strSet30 = python3Target29.getBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator31 = null;
        python3Target29.gen = codeGenerator31;
        java.lang.String str34 = python3Target29.getAltLabelContextStructName("hi!");
        java.lang.String str37 = python3Target29.getTargetStringLiteralFromString("\"hi!\"", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator38 = null;
        python3Target29.gen = codeGenerator38;
        org.antlr.v4.tool.Grammar grammar40 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target41 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray42 = python3Target41.targetCharValueEscape;
        org.stringtemplate.v4.STGroup sTGroup43 = python3Target41.templates;
        int int44 = python3Target41.getInlineTestSetWordSize();
        org.antlr.v4.codegen.CodeGenerator codeGenerator45 = python3Target41.gen;
        org.antlr.v4.tool.Grammar grammar46 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target47 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str49 = python3Target47.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.tool.Grammar grammar50 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target51 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean52 = python3Target51.supportsOverloadedMethods();
        java.lang.String str53 = python3Target51.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator54 = null;
        java.lang.String str57 = python3Target51.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator54, "", true);
        java.lang.String str58 = python3Target51.getVersion();
        org.antlr.v4.tool.Grammar grammar59 = null;
        int[] intArray60 = new int[] {};
        java.lang.String[] strArray61 = python3Target51.getTokenTypesAsTargetLabels(grammar59, intArray60);
        java.lang.String[] strArray62 = python3Target47.getTokenTypesAsTargetLabels(grammar50, intArray60);
        java.lang.String[] strArray63 = python3Target41.getTokenTypesAsTargetLabels(grammar46, intArray60);
        java.lang.String[] strArray64 = python3Target29.getTokenTypesAsTargetLabels(grammar40, intArray60);
        java.lang.String[] strArray65 = python3Target20.getTokenTypesAsTargetLabels(grammar27, intArray60);
        org.antlr.v4.codegen.target.Python3Target.python3Keywords = strArray65;
        python3Target0.targetCharValueEscape = strArray65;
        // The following exception was thrown during execution in test generation
        try {
            org.stringtemplate.v4.STGroup sTGroup68 = python3Target0.getTemplates();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "4.5.2.1" + "'", str2, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\"\"" + "'", str6, "\"\"");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 29 + "'", int9 == 29);
        org.junit.Assert.assertNotNull(strSet14);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "\"\\\"0\\\"\"" + "'", str18, "\"\\\"0\\\"\"");
        org.junit.Assert.assertNotNull(strSet21);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "DContext" + "'", str23, "DContext");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "\"\\\"\\\"\"" + "'", str25, "\"\\\"\\\"\"");
        org.junit.Assert.assertNull(codeGenerator26);
        org.junit.Assert.assertNotNull(strSet30);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "Hi!Context" + "'", str34, "Hi!Context");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "\"\\\"hi!\\\"\"" + "'", str37, "\"\\\"hi!\\\"\"");
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertNull(sTGroup43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 64 + "'", int44 == 64);
        org.junit.Assert.assertNull(codeGenerator45);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "\"\"\"\"\"\"" + "'", str49, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "4.5.2.1" + "'", str53, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "\"\"" + "'", str57, "\"\"");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "4.5.2.1" + "'", str58, "4.5.2.1");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[]");
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertNotNull(strArray62);
        org.junit.Assert.assertNotNull(strArray63);
        org.junit.Assert.assertNotNull(strArray64);
        org.junit.Assert.assertNotNull(strArray65);
    }

    @Test
    public void test1752() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1752");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        org.antlr.v4.tool.Grammar grammar3 = null;
        org.stringtemplate.v4.ST sT4 = null;
        python3Target0.genRecognizerHeaderFile(grammar3, sT4, "");
        python3Target0.language = "Python3";
        java.util.Set<java.lang.String> strSet9 = null;
        python3Target0.badWords = strSet9;
        org.antlr.v4.codegen.CodeGenerator codeGenerator11 = null;
        java.lang.String str14 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator11, "\"Hi!Context\"", false);
        java.lang.String str16 = python3Target0.getListLabel("Python3");
        org.antlr.v4.codegen.CodeGenerator codeGenerator17 = python3Target0.getCodeGenerator();
        java.lang.String str18 = python3Target0.getLanguage();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str20 = python3Target0.getImplicitTokenLabel("_tset\\n");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Hi!Context" + "'", str14, "Hi!Context");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Python3" + "'", str16, "Python3");
        org.junit.Assert.assertNull(codeGenerator17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Python3" + "'", str18, "Python3");
    }

    @Test
    public void test1753() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1753");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        org.antlr.v4.codegen.CodeGenerator codeGenerator1 = python3Target0.getCodeGenerator();
        org.antlr.v4.codegen.CodeGenerator codeGenerator2 = python3Target0.gen;
        org.antlr.v4.tool.Grammar grammar3 = null;
        org.stringtemplate.v4.ST sT4 = null;
        python3Target0.genRecognizerHeaderFile(grammar3, sT4, "\"\"\\\"\\\"\\\"\\\\\\\"\\\\\\\"hi!\\\\\\\"\\\\\\\"\\\"\\\"\\\"\"\"");
        org.antlr.v4.tool.ast.GrammarAST grammarAST7 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean8 = python3Target0.visibleGrammarSymbolCausesIssueInGeneratedCode(grammarAST7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(codeGenerator1);
        org.junit.Assert.assertNull(codeGenerator2);
    }

    @Test
    public void test1754() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1754");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        org.antlr.v4.tool.Grammar grammar3 = null;
        org.stringtemplate.v4.ST sT4 = null;
        python3Target0.genRecognizerHeaderFile(grammar3, sT4, "");
        python3Target0.language = "Python3";
        int int9 = python3Target0.getSerializedATNSegmentLimit();
        org.stringtemplate.v4.STGroup sTGroup10 = python3Target0.loadTemplates();
        python3Target0.addBadWords();
        java.lang.String str13 = python3Target0.getTargetStringLiteralFromString("\\35");
        java.util.Set<java.lang.String> strSet14 = python3Target0.badWords;
        org.stringtemplate.v4.STGroup sTGroup15 = python3Target0.getTemplates();
        java.lang.String str17 = python3Target0.getListLabel("_tset\"\\\"\\\"\\\"\\\\\\\"\\\\\\\"hi!\\\\\\\"\\\\\\\"\\\"\\\"\\\"\"");
        org.antlr.v4.tool.Grammar grammar18 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator19 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target20 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator19);
        java.util.Set<java.lang.String> strSet21 = python3Target20.getBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator22 = null;
        python3Target20.gen = codeGenerator22;
        java.lang.String str25 = python3Target20.getAltLabelContextStructName("hi!");
        java.lang.String str28 = python3Target20.getTargetStringLiteralFromString("\"hi!\"", true);
        org.antlr.v4.tool.Grammar grammar29 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target30 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean31 = python3Target30.supportsOverloadedMethods();
        java.lang.String str32 = python3Target30.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator33 = null;
        java.lang.String str36 = python3Target30.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator33, "", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator37 = null;
        python3Target30.gen = codeGenerator37;
        java.lang.String[] strArray46 = new java.lang.String[] { "\"\"\"\"", "\\12", "\"\"", "4.5.2.1", "", "\"\"\"\"", "\"\"" };
        java.util.LinkedHashSet<java.lang.String> strSet47 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet47, strArray46);
        python3Target30.badWords = strSet47;
        org.antlr.v4.codegen.CodeGenerator codeGenerator50 = python3Target30.gen;
        java.lang.String str53 = python3Target30.getTargetStringLiteralFromString("\\12", true);
        boolean boolean54 = python3Target30.supportsOverloadedMethods();
        org.antlr.v4.tool.Grammar grammar55 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target56 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean57 = python3Target56.supportsOverloadedMethods();
        org.antlr.v4.tool.Grammar grammar58 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator59 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target60 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator59);
        java.util.Set<java.lang.String> strSet61 = python3Target60.getBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator62 = null;
        python3Target60.gen = codeGenerator62;
        java.lang.String str65 = python3Target60.getAltLabelContextStructName("hi!");
        java.lang.String str68 = python3Target60.getTargetStringLiteralFromString("\"hi!\"", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator69 = null;
        python3Target60.gen = codeGenerator69;
        org.antlr.v4.tool.Grammar grammar71 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target72 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray73 = python3Target72.targetCharValueEscape;
        org.stringtemplate.v4.STGroup sTGroup74 = python3Target72.templates;
        int int75 = python3Target72.getInlineTestSetWordSize();
        org.antlr.v4.codegen.CodeGenerator codeGenerator76 = python3Target72.gen;
        org.antlr.v4.tool.Grammar grammar77 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target78 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str80 = python3Target78.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.tool.Grammar grammar81 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target82 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean83 = python3Target82.supportsOverloadedMethods();
        java.lang.String str84 = python3Target82.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator85 = null;
        java.lang.String str88 = python3Target82.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator85, "", true);
        java.lang.String str89 = python3Target82.getVersion();
        org.antlr.v4.tool.Grammar grammar90 = null;
        int[] intArray91 = new int[] {};
        java.lang.String[] strArray92 = python3Target82.getTokenTypesAsTargetLabels(grammar90, intArray91);
        java.lang.String[] strArray93 = python3Target78.getTokenTypesAsTargetLabels(grammar81, intArray91);
        java.lang.String[] strArray94 = python3Target72.getTokenTypesAsTargetLabels(grammar77, intArray91);
        java.lang.String[] strArray95 = python3Target60.getTokenTypesAsTargetLabels(grammar71, intArray91);
        java.lang.String[] strArray96 = python3Target56.getTokenTypesAsTargetLabels(grammar58, intArray91);
        java.lang.String[] strArray97 = python3Target30.getTokenTypesAsTargetLabels(grammar55, intArray91);
        java.lang.String[] strArray98 = python3Target20.getTokenTypesAsTargetLabels(grammar29, intArray91);
        java.lang.String[] strArray99 = python3Target0.getTokenTypesAsTargetLabels(grammar18, intArray91);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 29 + "'", int9 == 29);
        org.junit.Assert.assertNotNull(sTGroup10);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "\"\\35\"" + "'", str13, "\"\\35\"");
        org.junit.Assert.assertNotNull(strSet14);
        org.junit.Assert.assertNotNull(sTGroup15);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "_tset\"\\\"\\\"\\\"\\\\\\\"\\\\\\\"hi!\\\\\\\"\\\\\\\"\\\"\\\"\\\"\"" + "'", str17, "_tset\"\\\"\\\"\\\"\\\\\\\"\\\\\\\"hi!\\\\\\\"\\\\\\\"\\\"\\\"\\\"\"");
        org.junit.Assert.assertNotNull(strSet21);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Hi!Context" + "'", str25, "Hi!Context");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "\"\\\"hi!\\\"\"" + "'", str28, "\"\\\"hi!\\\"\"");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "4.5.2.1" + "'", str32, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "\"\"" + "'", str36, "\"\"");
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNull(codeGenerator50);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "\"\\12\"" + "'", str53, "\"\\12\"");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(strSet61);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "Hi!Context" + "'", str65, "Hi!Context");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "\"\\\"hi!\\\"\"" + "'", str68, "\"\\\"hi!\\\"\"");
        org.junit.Assert.assertNotNull(strArray73);
        org.junit.Assert.assertNull(sTGroup74);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 64 + "'", int75 == 64);
        org.junit.Assert.assertNull(codeGenerator76);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "\"\"\"\"\"\"" + "'", str80, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "4.5.2.1" + "'", str84, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "\"\"" + "'", str88, "\"\"");
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "4.5.2.1" + "'", str89, "4.5.2.1");
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[]");
        org.junit.Assert.assertNotNull(strArray92);
        org.junit.Assert.assertNotNull(strArray93);
        org.junit.Assert.assertNotNull(strArray94);
        org.junit.Assert.assertNotNull(strArray95);
        org.junit.Assert.assertNotNull(strArray96);
        org.junit.Assert.assertNotNull(strArray97);
        org.junit.Assert.assertNotNull(strArray98);
        org.junit.Assert.assertNotNull(strArray99);
    }

    @Test
    public void test1755() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1755");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        python3Target0.language = "4.5.2.1";
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = python3Target0.getCodeGenerator();
        org.antlr.v4.codegen.CodeGenerator codeGenerator4 = python3Target0.gen;
        java.util.Set<java.lang.String> strSet5 = python3Target0.badWords;
        java.lang.String str6 = python3Target0.getVersion();
        org.stringtemplate.v4.STGroup sTGroup7 = python3Target0.templates;
        org.antlr.v4.tool.Grammar grammar8 = null;
        org.stringtemplate.v4.ST sT9 = null;
        python3Target0.genRecognizerHeaderFile(grammar8, sT9, "\"_\"\\1\"\"");
        org.junit.Assert.assertNull(codeGenerator3);
        org.junit.Assert.assertNull(codeGenerator4);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "4.5.2.1" + "'", str6, "4.5.2.1");
        org.junit.Assert.assertNull(sTGroup7);
    }

    @Test
    public void test1756() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1756");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str2 = python3Target0.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = null;
        python3Target0.gen = codeGenerator3;
        java.lang.String str5 = python3Target0.getVersion();
        org.antlr.v4.codegen.target.Python3Target python3Target6 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean7 = python3Target6.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup8 = python3Target6.templates;
        org.antlr.v4.tool.Grammar grammar9 = null;
        org.stringtemplate.v4.ST sT10 = null;
        python3Target6.genRecognizerHeaderFile(grammar9, sT10, "");
        python3Target6.language = "Python3";
        int int15 = python3Target6.getSerializedATNSegmentLimit();
        org.stringtemplate.v4.STGroup sTGroup16 = python3Target6.loadTemplates();
        python3Target0.templates = sTGroup16;
        java.util.Set<java.lang.String> strSet18 = python3Target0.getBadWords();
        org.antlr.v4.tool.Grammar grammar19 = null;
        org.stringtemplate.v4.ST sT20 = null;
        python3Target0.genRecognizerHeaderFile(grammar19, sT20, "DContext");
        org.antlr.v4.tool.Grammar grammar23 = null;
        org.stringtemplate.v4.ST sT24 = null;
        // The following exception was thrown during execution in test generation
        try {
            python3Target0.genListenerFile(grammar23, sT24);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "\"\"\"\"\"\"" + "'", str2, "\"\"\"\"\"\"");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "4.5.2.1" + "'", str5, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(sTGroup8);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 29 + "'", int15 == 29);
        org.junit.Assert.assertNotNull(sTGroup16);
        org.junit.Assert.assertNotNull(strSet18);
    }

    @Test
    public void test1757() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1757");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!", "hi!" };
        python3Target0.targetCharValueEscape = strArray5;
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = null;
        java.lang.String str10 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator7, "", false);
        int int11 = python3Target0.getSerializedATNSegmentLimit();
        java.lang.String str12 = python3Target0.getVersion();
        boolean boolean13 = python3Target0.supportsOverloadedMethods();
        python3Target0.addBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator15 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target16 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator15);
        java.util.Set<java.lang.String> strSet17 = python3Target16.getBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator18 = null;
        python3Target16.gen = codeGenerator18;
        java.lang.String str21 = python3Target16.getAltLabelContextStructName("hi!");
        java.lang.String str24 = python3Target16.getTargetStringLiteralFromString("\"hi!\"", true);
        java.lang.String str26 = python3Target16.getAltLabelContextStructName("\"\"\"\"\"\"\"\"");
        java.lang.String str28 = python3Target16.getListLabel("_tset12");
        java.util.Set<java.lang.String> strSet29 = python3Target16.badWords;
        python3Target0.badWords = strSet29;
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 29 + "'", int11 == 29);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "4.5.2.1" + "'", str12, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strSet17);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Hi!Context" + "'", str21, "Hi!Context");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "\"\\\"hi!\\\"\"" + "'", str24, "\"\\\"hi!\\\"\"");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "\"\"\"\"\"\"\"\"Context" + "'", str26, "\"\"\"\"\"\"\"\"Context");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "_tset12" + "'", str28, "_tset12");
        org.junit.Assert.assertNotNull(strSet29);
    }

    @Test
    public void test1758() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1758");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        python3Target0.language = "4.5.2.1";
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = python3Target0.getCodeGenerator();
        org.antlr.v4.codegen.CodeGenerator codeGenerator4 = python3Target0.gen;
        org.antlr.v4.codegen.CodeGenerator codeGenerator5 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target6 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator5);
        java.lang.String str8 = python3Target6.getTargetStringLiteralFromString("");
        int int9 = python3Target6.getSerializedATNSegmentLimit();
        boolean boolean10 = python3Target6.wantsBaseVisitor();
        org.stringtemplate.v4.STGroup sTGroup11 = python3Target6.loadTemplates();
        python3Target0.templates = sTGroup11;
        java.lang.String str13 = python3Target0.language;
        org.antlr.v4.codegen.target.Python3Target python3Target14 = new org.antlr.v4.codegen.target.Python3Target();
        python3Target14.language = "";
        org.antlr.v4.codegen.target.Python3Target python3Target17 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean18 = python3Target17.supportsOverloadedMethods();
        java.lang.String str19 = python3Target17.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator20 = null;
        java.lang.String str23 = python3Target17.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator20, "", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator24 = null;
        python3Target17.gen = codeGenerator24;
        java.lang.String[] strArray33 = new java.lang.String[] { "\"\"\"\"", "\\12", "\"\"", "4.5.2.1", "", "\"\"\"\"", "\"\"" };
        java.util.LinkedHashSet<java.lang.String> strSet34 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet34, strArray33);
        python3Target17.badWords = strSet34;
        python3Target14.badWords = strSet34;
        python3Target14.addBadWords();
        java.util.Set<java.lang.String> strSet39 = python3Target14.badWords;
        python3Target0.badWords = strSet39;
        java.util.Set<java.lang.String> strSet41 = python3Target0.getBadWords();
        boolean boolean42 = python3Target0.templatesExist();
        org.junit.Assert.assertNull(codeGenerator3);
        org.junit.Assert.assertNull(codeGenerator4);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\"\"" + "'", str8, "\"\"");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 29 + "'", int9 == 29);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(sTGroup11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "4.5.2.1" + "'", str13, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "4.5.2.1" + "'", str19, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "\"\"" + "'", str23, "\"\"");
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(strSet39);
        org.junit.Assert.assertNotNull(strSet41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
    }

    @Test
    public void test1759() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1759");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!", "hi!" };
        python3Target0.targetCharValueEscape = strArray5;
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = null;
        java.lang.String str10 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator7, "", false);
        java.util.Set<java.lang.String> strSet11 = python3Target0.badWords;
        java.lang.String str13 = python3Target0.getTargetStringLiteralFromString("12");
        boolean boolean14 = python3Target0.wantsBaseVisitor();
        org.antlr.v4.tool.Grammar grammar15 = null;
        org.stringtemplate.v4.ST sT16 = null;
        python3Target0.genRecognizerHeaderFile(grammar15, sT16, "\"\\0\"");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str20 = python3Target0.getAltLabelContextStructName("nContex");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNotNull(strSet11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "\"12\"" + "'", str13, "\"12\"");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test1760() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1760");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python3Target1.getBadWords();
        java.lang.String str4 = python3Target1.getAltLabelContextStructName("d");
        org.stringtemplate.v4.STGroup sTGroup5 = python3Target1.getTemplates();
        boolean boolean6 = python3Target1.supportsOverloadedMethods();
        java.lang.String str8 = python3Target1.getImplicitRuleLabel("12");
        java.lang.String str9 = python3Target1.getVersion();
        java.util.Set<java.lang.String> strSet10 = python3Target1.badWords;
        org.antlr.v4.tool.ast.GrammarAST grammarAST11 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str12 = python3Target1.getLoopLabel(grammarAST11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "DContext" + "'", str4, "DContext");
        org.junit.Assert.assertNotNull(sTGroup5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "_12" + "'", str8, "_12");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "4.5.2.1" + "'", str9, "4.5.2.1");
        org.junit.Assert.assertNotNull(strSet10);
    }

    @Test
    public void test1761() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1761");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        java.util.Set<java.lang.String> strSet2 = python3Target0.badWords;
        int int3 = python3Target0.getSerializedATNSegmentLimit();
        java.lang.String str4 = python3Target0.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator5 = null;
        java.lang.String str8 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator5, "\\35", false);
        org.stringtemplate.v4.STGroup sTGroup9 = python3Target0.templates;
        boolean boolean10 = python3Target0.wantsBaseListener();
        java.lang.String str11 = python3Target0.getVersion();
        java.util.Set<java.lang.String> strSet12 = python3Target0.getBadWords();
        java.util.Set<java.lang.String> strSet13 = python3Target0.badWords;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str15 = python3Target0.getImplicitRuleLabel("_\"\\\"\\\"4.5.2.1\\\"\\\"\"Context");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 29 + "'", int3 == 29);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "3" + "'", str8, "3");
        org.junit.Assert.assertNull(sTGroup9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "4.5.2.1" + "'", str11, "4.5.2.1");
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertNotNull(strSet13);
    }

    @Test
    public void test1762() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1762");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        java.lang.String str2 = python3Target0.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = null;
        java.lang.String str6 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator3, "", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = null;
        python3Target0.gen = codeGenerator7;
        int int9 = python3Target0.getSerializedATNSegmentLimit();
        org.antlr.v4.tool.Grammar grammar10 = null;
        org.stringtemplate.v4.ST sT11 = null;
        python3Target0.genRecognizerHeaderFile(grammar10, sT11, "_tset12");
        java.lang.String str15 = python3Target0.encodeIntAsCharEscape(0);
        java.util.Set<java.lang.String> strSet16 = python3Target0.badWords;
        boolean boolean17 = python3Target0.wantsBaseListener();
        java.util.Set<java.lang.String> strSet18 = null;
        python3Target0.badWords = strSet18;
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "4.5.2.1" + "'", str2, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\"\"" + "'", str6, "\"\"");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 29 + "'", int9 == 29);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "\\0" + "'", str15, "\\0");
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    }

    @Test
    public void test1763() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1763");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray1 = python3Target0.targetCharValueEscape;
        java.lang.String str2 = python3Target0.language;
        int int3 = python3Target0.getSerializedATNSegmentLimit();
        org.antlr.v4.codegen.CodeGenerator codeGenerator4 = null;
        python3Target0.gen = codeGenerator4;
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target7 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator6);
        java.util.Set<java.lang.String> strSet8 = python3Target7.getBadWords();
        java.lang.String str10 = python3Target7.getAltLabelContextStructName("d");
        org.stringtemplate.v4.STGroup sTGroup11 = python3Target7.getTemplates();
        python3Target0.templates = sTGroup11;
        org.antlr.v4.codegen.target.Python3Target python3Target13 = new org.antlr.v4.codegen.target.Python3Target();
        python3Target13.language = "4.5.2.1";
        org.antlr.v4.codegen.CodeGenerator codeGenerator16 = python3Target13.getCodeGenerator();
        org.antlr.v4.codegen.CodeGenerator codeGenerator17 = python3Target13.gen;
        org.antlr.v4.codegen.CodeGenerator codeGenerator18 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target19 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator18);
        java.lang.String str21 = python3Target19.getTargetStringLiteralFromString("");
        int int22 = python3Target19.getSerializedATNSegmentLimit();
        boolean boolean23 = python3Target19.wantsBaseVisitor();
        org.stringtemplate.v4.STGroup sTGroup24 = python3Target19.loadTemplates();
        python3Target13.templates = sTGroup24;
        java.lang.String str27 = python3Target13.encodeIntAsCharEscape((int) (byte) 10);
        org.antlr.v4.codegen.CodeGenerator codeGenerator28 = null;
        python3Target13.gen = codeGenerator28;
        boolean boolean30 = python3Target13.wantsBaseListener();
        java.lang.String str32 = python3Target13.getImplicitSetLabel("_12");
        org.antlr.v4.tool.Grammar grammar33 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator34 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target35 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator34);
        java.lang.String str36 = python3Target35.getVersion();
        int int37 = python3Target35.getSerializedATNSegmentLimit();
        java.lang.String str38 = python3Target35.getVersion();
        boolean boolean39 = python3Target35.wantsBaseListener();
        python3Target35.addBadWords();
        org.antlr.v4.tool.Grammar grammar41 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator42 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target43 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator42);
        java.util.Set<java.lang.String> strSet44 = python3Target43.getBadWords();
        org.antlr.v4.codegen.target.Python3Target python3Target45 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str47 = python3Target45.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.codegen.target.Python3Target python3Target48 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean49 = python3Target48.supportsOverloadedMethods();
        java.util.Set<java.lang.String> strSet50 = python3Target48.badWords;
        python3Target45.badWords = strSet50;
        python3Target43.badWords = strSet50;
        java.util.Set<java.lang.String> strSet53 = python3Target43.badWords;
        org.antlr.v4.codegen.CodeGenerator codeGenerator54 = python3Target43.getCodeGenerator();
        org.antlr.v4.tool.Grammar grammar55 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target56 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean57 = python3Target56.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup58 = python3Target56.templates;
        org.antlr.v4.tool.Grammar grammar59 = null;
        org.stringtemplate.v4.ST sT60 = null;
        python3Target56.genRecognizerHeaderFile(grammar59, sT60, "");
        python3Target56.language = "Python3";
        java.util.Set<java.lang.String> strSet65 = null;
        python3Target56.badWords = strSet65;
        org.antlr.v4.codegen.CodeGenerator codeGenerator67 = null;
        java.lang.String str70 = python3Target56.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator67, "\"Hi!Context\"", false);
        java.lang.String str72 = python3Target56.getListLabel("Python3");
        java.lang.String str74 = python3Target56.getTargetStringLiteralFromString("\\0");
        org.antlr.v4.tool.Grammar grammar75 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target76 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str78 = python3Target76.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.tool.Grammar grammar79 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target80 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean81 = python3Target80.supportsOverloadedMethods();
        java.lang.String str82 = python3Target80.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator83 = null;
        java.lang.String str86 = python3Target80.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator83, "", true);
        java.lang.String str87 = python3Target80.getVersion();
        org.antlr.v4.tool.Grammar grammar88 = null;
        int[] intArray89 = new int[] {};
        java.lang.String[] strArray90 = python3Target80.getTokenTypesAsTargetLabels(grammar88, intArray89);
        java.lang.String[] strArray91 = python3Target76.getTokenTypesAsTargetLabels(grammar79, intArray89);
        java.lang.String[] strArray92 = python3Target56.getTokenTypesAsTargetLabels(grammar75, intArray89);
        java.lang.String[] strArray93 = python3Target43.getTokenTypesAsTargetLabels(grammar55, intArray89);
        java.lang.String[] strArray94 = python3Target35.getTokenTypesAsTargetLabels(grammar41, intArray89);
        java.lang.String[] strArray95 = python3Target13.getTokenTypesAsTargetLabels(grammar33, intArray89);
        python3Target0.targetCharValueEscape = strArray95;
        java.lang.String str98 = python3Target0.getAltLabelContextStructName("\"Hi!Context\"");
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 29 + "'", int3 == 29);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "DContext" + "'", str10, "DContext");
        org.junit.Assert.assertNotNull(sTGroup11);
        org.junit.Assert.assertNull(codeGenerator16);
        org.junit.Assert.assertNull(codeGenerator17);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "\"\"" + "'", str21, "\"\"");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 29 + "'", int22 == 29);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(sTGroup24);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "\\12" + "'", str27, "\\12");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "_tset_12" + "'", str32, "_tset_12");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "4.5.2.1" + "'", str36, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 29 + "'", int37 == 29);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "4.5.2.1" + "'", str38, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(strSet44);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "\"\"\"\"\"\"" + "'", str47, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(strSet50);
        org.junit.Assert.assertNotNull(strSet53);
        org.junit.Assert.assertNull(codeGenerator54);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNull(sTGroup58);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "Hi!Context" + "'", str70, "Hi!Context");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "Python3" + "'", str72, "Python3");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "\"\\0\"" + "'", str74, "\"\\0\"");
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "\"\"\"\"\"\"" + "'", str78, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "4.5.2.1" + "'", str82, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "\"\"" + "'", str86, "\"\"");
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "4.5.2.1" + "'", str87, "4.5.2.1");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[]");
        org.junit.Assert.assertNotNull(strArray90);
        org.junit.Assert.assertNotNull(strArray91);
        org.junit.Assert.assertNotNull(strArray92);
        org.junit.Assert.assertNotNull(strArray93);
        org.junit.Assert.assertNotNull(strArray94);
        org.junit.Assert.assertNotNull(strArray95);
        org.junit.Assert.assertEquals("'" + str98 + "' != '" + "\"Hi!Context\"Context" + "'", str98, "\"Hi!Context\"Context");
    }

    @Test
    public void test1764() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1764");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.lang.String str3 = python3Target1.getTargetStringLiteralFromString("");
        int int4 = python3Target1.getSerializedATNSegmentLimit();
        boolean boolean5 = python3Target1.wantsBaseVisitor();
        org.stringtemplate.v4.STGroup sTGroup6 = python3Target1.loadTemplates();
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = python3Target1.gen;
        boolean boolean8 = python3Target1.wantsBaseListener();
        int int9 = python3Target1.getSerializedATNSegmentLimit();
        org.antlr.v4.codegen.target.Python3Target python3Target10 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean11 = python3Target10.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup12 = python3Target10.templates;
        org.antlr.v4.tool.Grammar grammar13 = null;
        org.stringtemplate.v4.ST sT14 = null;
        python3Target10.genRecognizerHeaderFile(grammar13, sT14, "");
        python3Target10.language = "Python3";
        java.util.Set<java.lang.String> strSet19 = null;
        python3Target10.badWords = strSet19;
        org.antlr.v4.codegen.CodeGenerator codeGenerator21 = null;
        java.lang.String str24 = python3Target10.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator21, "\"Hi!Context\"", false);
        java.lang.String str26 = python3Target10.getListLabel("Python3");
        org.antlr.v4.codegen.CodeGenerator codeGenerator27 = python3Target10.getCodeGenerator();
        org.antlr.v4.codegen.target.Python3Target python3Target28 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean29 = python3Target28.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup30 = python3Target28.templates;
        org.antlr.v4.tool.Grammar grammar31 = null;
        org.stringtemplate.v4.ST sT32 = null;
        python3Target28.genRecognizerHeaderFile(grammar31, sT32, "");
        python3Target28.language = "Python3";
        java.util.Set<java.lang.String> strSet37 = null;
        python3Target28.badWords = strSet37;
        org.antlr.v4.codegen.CodeGenerator codeGenerator39 = null;
        java.lang.String str42 = python3Target28.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator39, "\"Hi!Context\"", false);
        java.lang.String str44 = python3Target28.getListLabel("Python3");
        java.lang.String str46 = python3Target28.getTargetStringLiteralFromString("\\0");
        org.antlr.v4.tool.Grammar grammar47 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target48 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str50 = python3Target48.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.tool.Grammar grammar51 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target52 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean53 = python3Target52.supportsOverloadedMethods();
        java.lang.String str54 = python3Target52.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator55 = null;
        java.lang.String str58 = python3Target52.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator55, "", true);
        java.lang.String str59 = python3Target52.getVersion();
        org.antlr.v4.tool.Grammar grammar60 = null;
        int[] intArray61 = new int[] {};
        java.lang.String[] strArray62 = python3Target52.getTokenTypesAsTargetLabels(grammar60, intArray61);
        java.lang.String[] strArray63 = python3Target48.getTokenTypesAsTargetLabels(grammar51, intArray61);
        java.lang.String[] strArray64 = python3Target28.getTokenTypesAsTargetLabels(grammar47, intArray61);
        org.stringtemplate.v4.STGroup sTGroup65 = python3Target28.getTemplates();
        python3Target28.language = "\"\"4.5.2.1\"\"";
        org.stringtemplate.v4.STGroup sTGroup68 = python3Target28.getTemplates();
        python3Target10.templates = sTGroup68;
        python3Target1.templates = sTGroup68;
        org.antlr.v4.codegen.target.Python3Target python3Target71 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean72 = python3Target71.supportsOverloadedMethods();
        java.lang.String str73 = python3Target71.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator74 = null;
        java.lang.String str77 = python3Target71.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator74, "", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator78 = null;
        python3Target71.gen = codeGenerator78;
        int int80 = python3Target71.getSerializedATNSegmentLimit();
        org.antlr.v4.tool.Grammar grammar81 = null;
        org.stringtemplate.v4.ST sT82 = null;
        python3Target71.genRecognizerHeaderFile(grammar81, sT82, "_tset12");
        java.lang.String str86 = python3Target71.encodeIntAsCharEscape(0);
        java.util.Set<java.lang.String> strSet87 = python3Target71.badWords;
        python3Target1.badWords = strSet87;
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "\"\"" + "'", str3, "\"\"");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 29 + "'", int4 == 29);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(sTGroup6);
        org.junit.Assert.assertNull(codeGenerator7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 29 + "'", int9 == 29);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(sTGroup12);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "Hi!Context" + "'", str24, "Hi!Context");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "Python3" + "'", str26, "Python3");
        org.junit.Assert.assertNull(codeGenerator27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNull(sTGroup30);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "Hi!Context" + "'", str42, "Hi!Context");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "Python3" + "'", str44, "Python3");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "\"\\0\"" + "'", str46, "\"\\0\"");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "\"\"\"\"\"\"" + "'", str50, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "4.5.2.1" + "'", str54, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "\"\"" + "'", str58, "\"\"");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "4.5.2.1" + "'", str59, "4.5.2.1");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[]");
        org.junit.Assert.assertNotNull(strArray62);
        org.junit.Assert.assertNotNull(strArray63);
        org.junit.Assert.assertNotNull(strArray64);
        org.junit.Assert.assertNotNull(sTGroup65);
        org.junit.Assert.assertNotNull(sTGroup68);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "4.5.2.1" + "'", str73, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "\"\"" + "'", str77, "\"\"");
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 29 + "'", int80 == 29);
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "\\0" + "'", str86, "\\0");
        org.junit.Assert.assertNotNull(strSet87);
    }

    @Test
    public void test1765() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1765");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        java.lang.String str2 = python3Target0.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = python3Target0.getCodeGenerator();
        org.stringtemplate.v4.STGroup sTGroup4 = null;
        python3Target0.templates = sTGroup4;
        org.stringtemplate.v4.STGroup sTGroup6 = python3Target0.templates;
        org.antlr.v4.codegen.target.Python3Target python3Target7 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray8 = python3Target7.targetCharValueEscape;
        python3Target7.addBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target11 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator10);
        java.lang.String str13 = python3Target11.getTargetStringLiteralFromString("");
        int int14 = python3Target11.getSerializedATNSegmentLimit();
        boolean boolean15 = python3Target11.wantsBaseVisitor();
        org.stringtemplate.v4.STGroup sTGroup16 = python3Target11.loadTemplates();
        python3Target7.templates = sTGroup16;
        python3Target0.templates = sTGroup16;
        org.antlr.v4.codegen.CodeGenerator codeGenerator19 = null;
        python3Target0.gen = codeGenerator19;
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "4.5.2.1" + "'", str2, "4.5.2.1");
        org.junit.Assert.assertNull(codeGenerator3);
        org.junit.Assert.assertNull(sTGroup6);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "\"\"" + "'", str13, "\"\"");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 29 + "'", int14 == 29);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(sTGroup16);
    }

    @Test
    public void test1766() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1766");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!", "hi!" };
        python3Target0.targetCharValueEscape = strArray5;
        java.lang.String[] strArray8 = new java.lang.String[] { "hi!" };
        org.antlr.v4.codegen.target.Python3Target.python3Keywords = strArray8;
        python3Target0.targetCharValueEscape = strArray8;
        org.antlr.v4.tool.Grammar grammar11 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target12 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str14 = python3Target12.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator15 = null;
        python3Target12.gen = codeGenerator15;
        org.antlr.v4.tool.Grammar grammar17 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target18 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str20 = python3Target18.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.tool.Grammar grammar21 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target22 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean23 = python3Target22.supportsOverloadedMethods();
        java.lang.String str24 = python3Target22.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator25 = null;
        java.lang.String str28 = python3Target22.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator25, "", true);
        java.lang.String str29 = python3Target22.getVersion();
        org.antlr.v4.tool.Grammar grammar30 = null;
        int[] intArray31 = new int[] {};
        java.lang.String[] strArray32 = python3Target22.getTokenTypesAsTargetLabels(grammar30, intArray31);
        java.lang.String[] strArray33 = python3Target18.getTokenTypesAsTargetLabels(grammar21, intArray31);
        java.lang.String[] strArray34 = python3Target12.getTokenTypesAsTargetLabels(grammar17, intArray31);
        java.lang.String[] strArray35 = python3Target0.getTokenTypesAsTargetLabels(grammar11, intArray31);
        org.antlr.v4.tool.Grammar grammar36 = null;
        org.stringtemplate.v4.ST sT37 = null;
        python3Target0.genRecognizerHeaderFile(grammar36, sT37, "");
        int int40 = python3Target0.getInlineTestSetWordSize();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "\"\"\"\"\"\"" + "'", str14, "\"\"\"\"\"\"");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "\"\"\"\"\"\"" + "'", str20, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "4.5.2.1" + "'", str24, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "\"\"" + "'", str28, "\"\"");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "4.5.2.1" + "'", str29, "4.5.2.1");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[]");
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 64 + "'", int40 == 64);
    }

    @Test
    public void test1767() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1767");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python3Target1.getBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = null;
        python3Target1.gen = codeGenerator3;
        java.lang.String str6 = python3Target1.getAltLabelContextStructName("hi!");
        java.lang.String str9 = python3Target1.getTargetStringLiteralFromString("\"hi!\"", true);
        java.lang.String str11 = python3Target1.getAltLabelContextStructName("\"\"\"\"\"\"\"\"");
        java.lang.String str13 = python3Target1.getListLabel("_tset12");
        java.lang.String str16 = python3Target1.getTargetStringLiteralFromString("\"\\\"\\\"hi!\\\"\\\"\"", false);
        java.lang.String str18 = python3Target1.getImplicitSetLabel("\\n");
        org.stringtemplate.v4.STGroup sTGroup19 = python3Target1.getTemplates();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str21 = python3Target1.getElementName("\"\\\"\\\\\\\"\\\\\\\"hi!\\\\\\\"\\\\\\\"\\\"\"Context");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Hi!Context" + "'", str6, "Hi!Context");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\"\\\"hi!\\\"\"" + "'", str9, "\"\\\"hi!\\\"\"");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "\"\"\"\"\"\"\"\"Context" + "'", str11, "\"\"\"\"\"\"\"\"Context");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "_tset12" + "'", str13, "_tset12");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "\\\"\\\\\\\"\\\\\\\"hi!\\\\\\\"\\\\\\\"\\\"" + "'", str16, "\\\"\\\\\\\"\\\\\\\"hi!\\\\\\\"\\\\\\\"\\\"");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "_tset\\n" + "'", str18, "_tset\\n");
        org.junit.Assert.assertNotNull(sTGroup19);
    }

    @Test
    public void test1768() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1768");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        org.antlr.v4.tool.Grammar grammar3 = null;
        org.stringtemplate.v4.ST sT4 = null;
        python3Target0.genRecognizerHeaderFile(grammar3, sT4, "");
        python3Target0.language = "Python3";
        org.antlr.v4.tool.Grammar grammar9 = null;
        org.stringtemplate.v4.ST sT10 = null;
        python3Target0.genRecognizerHeaderFile(grammar9, sT10, "\"hi!\"");
        java.lang.String str14 = python3Target0.getImplicitRuleLabel("\"\\1\"");
        java.lang.String str16 = python3Target0.getImplicitSetLabel("\\\"\\\\\\\"\\\\\\\"hi!\\\\\\\"\\\\\\\"\\\"");
        org.antlr.v4.tool.Grammar grammar17 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator18 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target19 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator18);
        java.lang.String str20 = python3Target19.getVersion();
        int int21 = python3Target19.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet22 = python3Target19.badWords;
        org.antlr.v4.tool.Grammar grammar23 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target24 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean25 = python3Target24.supportsOverloadedMethods();
        java.lang.String str26 = python3Target24.getVersion();
        boolean boolean27 = python3Target24.supportsOverloadedMethods();
        org.antlr.v4.codegen.CodeGenerator codeGenerator28 = null;
        java.lang.String str31 = python3Target24.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator28, "", false);
        org.antlr.v4.tool.Grammar grammar32 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target33 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean34 = python3Target33.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup35 = python3Target33.templates;
        java.lang.String[] strArray38 = new java.lang.String[] { "hi!", "hi!" };
        python3Target33.targetCharValueEscape = strArray38;
        org.antlr.v4.codegen.CodeGenerator codeGenerator40 = null;
        java.lang.String str43 = python3Target33.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator40, "", false);
        java.util.Set<java.lang.String> strSet44 = python3Target33.badWords;
        java.lang.String str46 = python3Target33.getTargetStringLiteralFromString("12");
        int int47 = python3Target33.getSerializedATNSegmentLimit();
        boolean boolean48 = python3Target33.supportsOverloadedMethods();
        org.antlr.v4.tool.Grammar grammar49 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target50 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean51 = python3Target50.supportsOverloadedMethods();
        java.util.Set<java.lang.String> strSet52 = python3Target50.badWords;
        boolean boolean53 = python3Target50.templatesExist();
        java.lang.String str54 = python3Target50.getLanguage();
        org.antlr.v4.tool.Grammar grammar55 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target56 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str58 = python3Target56.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator59 = null;
        python3Target56.gen = codeGenerator59;
        org.antlr.v4.tool.Grammar grammar61 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target62 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str64 = python3Target62.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.tool.Grammar grammar65 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target66 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean67 = python3Target66.supportsOverloadedMethods();
        java.lang.String str68 = python3Target66.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator69 = null;
        java.lang.String str72 = python3Target66.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator69, "", true);
        java.lang.String str73 = python3Target66.getVersion();
        org.antlr.v4.tool.Grammar grammar74 = null;
        int[] intArray75 = new int[] {};
        java.lang.String[] strArray76 = python3Target66.getTokenTypesAsTargetLabels(grammar74, intArray75);
        java.lang.String[] strArray77 = python3Target62.getTokenTypesAsTargetLabels(grammar65, intArray75);
        java.lang.String[] strArray78 = python3Target56.getTokenTypesAsTargetLabels(grammar61, intArray75);
        java.lang.String[] strArray79 = python3Target50.getTokenTypesAsTargetLabels(grammar55, intArray75);
        java.lang.String[] strArray80 = python3Target33.getTokenTypesAsTargetLabels(grammar49, intArray75);
        java.lang.String[] strArray81 = python3Target24.getTokenTypesAsTargetLabels(grammar32, intArray75);
        java.lang.String[] strArray82 = python3Target19.getTokenTypesAsTargetLabels(grammar23, intArray75);
        java.lang.String[] strArray83 = python3Target0.getTokenTypesAsTargetLabels(grammar17, intArray75);
        org.antlr.v4.tool.ast.GrammarAST grammarAST84 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean85 = python3Target0.visibleGrammarSymbolCausesIssueInGeneratedCode(grammarAST84);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "_\"\\1\"" + "'", str14, "_\"\\1\"");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "_tset\\\"\\\\\\\"\\\\\\\"hi!\\\\\\\"\\\\\\\"\\\"" + "'", str16, "_tset\\\"\\\\\\\"\\\\\\\"hi!\\\\\\\"\\\\\\\"\\\"");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "4.5.2.1" + "'", str20, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 64 + "'", int21 == 64);
        org.junit.Assert.assertNotNull(strSet22);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "4.5.2.1" + "'", str26, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "" + "'", str31, "");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNull(sTGroup35);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "" + "'", str43, "");
        org.junit.Assert.assertNotNull(strSet44);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "\"12\"" + "'", str46, "\"12\"");
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 29 + "'", int47 == 29);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(strSet52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "\"\"\"\"\"\"" + "'", str58, "\"\"\"\"\"\"");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "\"\"\"\"\"\"" + "'", str64, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "4.5.2.1" + "'", str68, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "\"\"" + "'", str72, "\"\"");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "4.5.2.1" + "'", str73, "4.5.2.1");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[]");
        org.junit.Assert.assertNotNull(strArray76);
        org.junit.Assert.assertNotNull(strArray77);
        org.junit.Assert.assertNotNull(strArray78);
        org.junit.Assert.assertNotNull(strArray79);
        org.junit.Assert.assertNotNull(strArray80);
        org.junit.Assert.assertNotNull(strArray81);
        org.junit.Assert.assertNotNull(strArray82);
        org.junit.Assert.assertNotNull(strArray83);
    }

    @Test
    public void test1769() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1769");
        org.antlr.v4.codegen.target.Python3Target.PythonStringRenderer pythonStringRenderer0 = new org.antlr.v4.codegen.target.Python3Target.PythonStringRenderer();
        java.lang.Object obj1 = null;
        java.util.Locale locale3 = null;
        java.lang.String str4 = pythonStringRenderer0.toString(obj1, "\"\"\"\"\"\"", locale3);
        org.antlr.v4.codegen.target.Python3Target python3Target5 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray6 = python3Target5.targetCharValueEscape;
        org.stringtemplate.v4.STGroup sTGroup7 = python3Target5.templates;
        java.util.Locale locale9 = null;
        java.lang.String str10 = pythonStringRenderer0.toString((java.lang.Object) sTGroup7, "\"Hi!Context\"", locale9);
        java.util.Locale locale13 = null;
        java.lang.String str14 = pythonStringRenderer0.toString((java.lang.Object) "\"DContext\"", "", locale13);
        java.lang.Object obj15 = null;
        java.util.Locale locale17 = null;
        java.lang.String str18 = pythonStringRenderer0.toString(obj15, "\"\\\"hi!\\\"\"", locale17);
        java.lang.Object obj19 = null;
        java.util.Locale locale21 = null;
        java.lang.String str22 = pythonStringRenderer0.toString(obj19, "\"_tsetHi!Context\"", locale21);
        org.antlr.v4.codegen.target.Python3Target python3Target23 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean24 = python3Target23.supportsOverloadedMethods();
        java.lang.String str25 = python3Target23.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator26 = python3Target23.getCodeGenerator();
        org.stringtemplate.v4.STGroup sTGroup27 = null;
        python3Target23.templates = sTGroup27;
        org.stringtemplate.v4.STGroup sTGroup29 = python3Target23.templates;
        java.lang.String[] strArray30 = python3Target23.targetCharValueEscape;
        java.util.Set<java.lang.String> strSet31 = python3Target23.badWords;
        python3Target23.language = "@";
        java.lang.String str34 = python3Target23.getLanguage();
        java.lang.String str35 = python3Target23.language;
        java.util.Locale locale37 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str38 = pythonStringRenderer0.toString((java.lang.Object) python3Target23, "_tset\"\\\\0\"", locale37);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: org.antlr.v4.codegen.target.Python3Target cannot be cast to java.lang.String");
        } catch (java.lang.ClassCastException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "\"\"\"\"\"\"" + "'", str4, "\"\"\"\"\"\"");
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertNull(sTGroup7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\"Hi!Context\"" + "'", str10, "\"Hi!Context\"");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "\"\\\"hi!\\\"\"" + "'", str18, "\"\\\"hi!\\\"\"");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "\"_tsetHi!Context\"" + "'", str22, "\"_tsetHi!Context\"");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "4.5.2.1" + "'", str25, "4.5.2.1");
        org.junit.Assert.assertNull(codeGenerator26);
        org.junit.Assert.assertNull(sTGroup29);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertNotNull(strSet31);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "@" + "'", str34, "@");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "@" + "'", str35, "@");
    }

    @Test
    public void test1770() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1770");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray1 = python3Target0.targetCharValueEscape;
        java.lang.String str2 = python3Target0.language;
        int int3 = python3Target0.getSerializedATNSegmentLimit();
        java.util.Set<java.lang.String> strSet4 = python3Target0.badWords;
        org.antlr.v4.tool.Grammar grammar5 = null;
        org.stringtemplate.v4.ST sT6 = null;
        // The following exception was thrown during execution in test generation
        try {
            python3Target0.genFile(grammar5, sT6, "_tset\"\\0\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 29 + "'", int3 == 29);
        org.junit.Assert.assertNotNull(strSet4);
    }

    @Test
    public void test1771() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1771");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!", "hi!" };
        python3Target0.targetCharValueEscape = strArray5;
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = null;
        java.lang.String str10 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator7, "", false);
        int int11 = python3Target0.getSerializedATNSegmentLimit();
        java.lang.String str12 = python3Target0.getVersion();
        boolean boolean13 = python3Target0.supportsOverloadedMethods();
        python3Target0.addBadWords();
        boolean boolean15 = python3Target0.wantsBaseVisitor();
        python3Target0.language = "\"_tsetPython3\"";
        boolean boolean18 = python3Target0.templatesExist();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 29 + "'", int11 == 29);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "4.5.2.1" + "'", str12, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    }

    @Test
    public void test1772() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1772");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!", "hi!" };
        python3Target0.targetCharValueEscape = strArray5;
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = null;
        python3Target0.gen = codeGenerator7;
        org.antlr.v4.tool.Grammar grammar9 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target11 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator10);
        java.lang.String str13 = python3Target11.getTargetStringLiteralFromString("");
        int int14 = python3Target11.getSerializedATNSegmentLimit();
        int int15 = python3Target11.getInlineTestSetWordSize();
        org.antlr.v4.tool.Grammar grammar16 = null;
        org.stringtemplate.v4.ST sT17 = null;
        python3Target11.genRecognizerHeaderFile(grammar16, sT17, "@");
        boolean boolean20 = python3Target11.templatesExist();
        boolean boolean21 = python3Target11.templatesExist();
        java.lang.String str22 = python3Target11.language;
        org.antlr.v4.tool.Grammar grammar23 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator24 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target25 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator24);
        java.util.Set<java.lang.String> strSet26 = python3Target25.getBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator27 = null;
        python3Target25.gen = codeGenerator27;
        java.lang.String str30 = python3Target25.getAltLabelContextStructName("hi!");
        java.lang.String str33 = python3Target25.getTargetStringLiteralFromString("\"hi!\"", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator34 = null;
        python3Target25.gen = codeGenerator34;
        org.antlr.v4.tool.Grammar grammar36 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target37 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray38 = python3Target37.targetCharValueEscape;
        org.stringtemplate.v4.STGroup sTGroup39 = python3Target37.templates;
        int int40 = python3Target37.getInlineTestSetWordSize();
        org.antlr.v4.codegen.CodeGenerator codeGenerator41 = python3Target37.gen;
        org.antlr.v4.tool.Grammar grammar42 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target43 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str45 = python3Target43.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.tool.Grammar grammar46 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target47 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean48 = python3Target47.supportsOverloadedMethods();
        java.lang.String str49 = python3Target47.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator50 = null;
        java.lang.String str53 = python3Target47.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator50, "", true);
        java.lang.String str54 = python3Target47.getVersion();
        org.antlr.v4.tool.Grammar grammar55 = null;
        int[] intArray56 = new int[] {};
        java.lang.String[] strArray57 = python3Target47.getTokenTypesAsTargetLabels(grammar55, intArray56);
        java.lang.String[] strArray58 = python3Target43.getTokenTypesAsTargetLabels(grammar46, intArray56);
        java.lang.String[] strArray59 = python3Target37.getTokenTypesAsTargetLabels(grammar42, intArray56);
        java.lang.String[] strArray60 = python3Target25.getTokenTypesAsTargetLabels(grammar36, intArray56);
        java.lang.String[] strArray61 = python3Target11.getTokenTypesAsTargetLabels(grammar23, intArray56);
        java.lang.String[] strArray62 = python3Target0.getTokenTypesAsTargetLabels(grammar9, intArray56);
        org.antlr.v4.codegen.target.Python3Target python3Target63 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str65 = python3Target63.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator66 = null;
        python3Target63.gen = codeGenerator66;
        org.antlr.v4.tool.Grammar grammar68 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target69 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str71 = python3Target69.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.tool.Grammar grammar72 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target73 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean74 = python3Target73.supportsOverloadedMethods();
        java.lang.String str75 = python3Target73.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator76 = null;
        java.lang.String str79 = python3Target73.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator76, "", true);
        java.lang.String str80 = python3Target73.getVersion();
        org.antlr.v4.tool.Grammar grammar81 = null;
        int[] intArray82 = new int[] {};
        java.lang.String[] strArray83 = python3Target73.getTokenTypesAsTargetLabels(grammar81, intArray82);
        java.lang.String[] strArray84 = python3Target69.getTokenTypesAsTargetLabels(grammar72, intArray82);
        java.lang.String[] strArray85 = python3Target63.getTokenTypesAsTargetLabels(grammar68, intArray82);
        python3Target0.targetCharValueEscape = strArray85;
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "\"\"" + "'", str13, "\"\"");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 29 + "'", int14 == 29);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 64 + "'", int15 == 64);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "Python3" + "'", str22, "Python3");
        org.junit.Assert.assertNotNull(strSet26);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "Hi!Context" + "'", str30, "Hi!Context");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "\"\\\"hi!\\\"\"" + "'", str33, "\"\\\"hi!\\\"\"");
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertNull(sTGroup39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 64 + "'", int40 == 64);
        org.junit.Assert.assertNull(codeGenerator41);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "\"\"\"\"\"\"" + "'", str45, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "4.5.2.1" + "'", str49, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "\"\"" + "'", str53, "\"\"");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "4.5.2.1" + "'", str54, "4.5.2.1");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[]");
        org.junit.Assert.assertNotNull(strArray57);
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertNotNull(strArray59);
        org.junit.Assert.assertNotNull(strArray60);
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertNotNull(strArray62);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "\"\"\"\"\"\"" + "'", str65, "\"\"\"\"\"\"");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "\"\"\"\"\"\"" + "'", str71, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "4.5.2.1" + "'", str75, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "\"\"" + "'", str79, "\"\"");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "4.5.2.1" + "'", str80, "4.5.2.1");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[]");
        org.junit.Assert.assertNotNull(strArray83);
        org.junit.Assert.assertNotNull(strArray84);
        org.junit.Assert.assertNotNull(strArray85);
    }

    @Test
    public void test1773() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1773");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        org.antlr.v4.tool.Grammar grammar3 = null;
        org.stringtemplate.v4.ST sT4 = null;
        python3Target0.genRecognizerHeaderFile(grammar3, sT4, "");
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = python3Target0.getCodeGenerator();
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = null;
        java.lang.String str11 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator8, "12", true);
        org.antlr.v4.tool.ast.GrammarAST grammarAST12 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str13 = python3Target0.getLoopLabel(grammarAST12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertNull(codeGenerator7);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "\"\"" + "'", str11, "\"\"");
    }

    @Test
    public void test1774() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1774");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        org.antlr.v4.tool.Grammar grammar3 = null;
        org.stringtemplate.v4.ST sT4 = null;
        python3Target0.genRecognizerHeaderFile(grammar3, sT4, "");
        boolean boolean7 = python3Target0.supportsOverloadedMethods();
        python3Target0.language = "\"\\12\"";
        org.stringtemplate.v4.STGroup sTGroup10 = python3Target0.templates;
        boolean boolean11 = python3Target0.templatesExist();
        org.antlr.v4.codegen.CodeGenerator codeGenerator12 = python3Target0.gen;
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(sTGroup10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(codeGenerator12);
    }

    @Test
    public void test1775() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1775");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str2 = python3Target0.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = null;
        python3Target0.gen = codeGenerator3;
        org.antlr.v4.tool.Grammar grammar5 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target6 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str8 = python3Target6.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.tool.Grammar grammar9 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target10 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean11 = python3Target10.supportsOverloadedMethods();
        java.lang.String str12 = python3Target10.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator13 = null;
        java.lang.String str16 = python3Target10.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator13, "", true);
        java.lang.String str17 = python3Target10.getVersion();
        org.antlr.v4.tool.Grammar grammar18 = null;
        int[] intArray19 = new int[] {};
        java.lang.String[] strArray20 = python3Target10.getTokenTypesAsTargetLabels(grammar18, intArray19);
        java.lang.String[] strArray21 = python3Target6.getTokenTypesAsTargetLabels(grammar9, intArray19);
        java.lang.String[] strArray22 = python3Target0.getTokenTypesAsTargetLabels(grammar5, intArray19);
        java.lang.String str24 = python3Target0.encodeIntAsCharEscape((int) '#');
        // The following exception was thrown during execution in test generation
        try {
            org.stringtemplate.v4.STGroup sTGroup25 = python3Target0.getTemplates();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "\"\"\"\"\"\"" + "'", str2, "\"\"\"\"\"\"");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\"\"\"\"\"\"" + "'", str8, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "4.5.2.1" + "'", str12, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "\"\"" + "'", str16, "\"\"");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "4.5.2.1" + "'", str17, "4.5.2.1");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[]");
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "#" + "'", str24, "#");
    }

    @Test
    public void test1776() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1776");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.lang.String str2 = python3Target1.getVersion();
        int int3 = python3Target1.getSerializedATNSegmentLimit();
        java.lang.String str4 = python3Target1.getVersion();
        boolean boolean5 = python3Target1.wantsBaseListener();
        java.lang.String str7 = python3Target1.getTargetStringLiteralFromString("_12");
        org.antlr.v4.tool.Rule rule8 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str9 = python3Target1.getRuleFunctionContextStructName(rule8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "4.5.2.1" + "'", str2, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 29 + "'", int3 == 29);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "4.5.2.1" + "'", str4, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "\"_12\"" + "'", str7, "\"_12\"");
    }

    @Test
    public void test1777() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1777");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python3Target1.getBadWords();
        org.antlr.v4.codegen.target.Python3Target python3Target3 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str5 = python3Target3.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.codegen.target.Python3Target python3Target6 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean7 = python3Target6.supportsOverloadedMethods();
        java.util.Set<java.lang.String> strSet8 = python3Target6.badWords;
        python3Target3.badWords = strSet8;
        python3Target1.badWords = strSet8;
        java.util.Set<java.lang.String> strSet11 = python3Target1.badWords;
        java.lang.String str13 = python3Target1.getAltLabelContextStructName("d");
        org.antlr.v4.tool.ast.GrammarAST grammarAST14 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean15 = python3Target1.visibleGrammarSymbolCausesIssueInGeneratedCode(grammarAST14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "\"\"\"\"\"\"" + "'", str5, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertNotNull(strSet11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "DContext" + "'", str13, "DContext");
    }

    @Test
    public void test1778() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1778");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        python3Target0.language = "4.5.2.1";
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = python3Target0.getCodeGenerator();
        org.antlr.v4.codegen.CodeGenerator codeGenerator4 = python3Target0.gen;
        org.antlr.v4.codegen.CodeGenerator codeGenerator5 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target6 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator5);
        java.lang.String str8 = python3Target6.getTargetStringLiteralFromString("");
        int int9 = python3Target6.getSerializedATNSegmentLimit();
        boolean boolean10 = python3Target6.wantsBaseVisitor();
        org.stringtemplate.v4.STGroup sTGroup11 = python3Target6.loadTemplates();
        python3Target0.templates = sTGroup11;
        java.lang.String str14 = python3Target0.encodeIntAsCharEscape((int) (byte) 10);
        org.antlr.v4.codegen.CodeGenerator codeGenerator15 = null;
        python3Target0.gen = codeGenerator15;
        boolean boolean17 = python3Target0.wantsBaseListener();
        java.lang.String str19 = python3Target0.getImplicitSetLabel("_12");
        org.antlr.v4.tool.Grammar grammar20 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator21 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target22 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator21);
        java.lang.String str23 = python3Target22.getVersion();
        int int24 = python3Target22.getSerializedATNSegmentLimit();
        java.lang.String str25 = python3Target22.getVersion();
        boolean boolean26 = python3Target22.wantsBaseListener();
        python3Target22.addBadWords();
        org.antlr.v4.tool.Grammar grammar28 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator29 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target30 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator29);
        java.util.Set<java.lang.String> strSet31 = python3Target30.getBadWords();
        org.antlr.v4.codegen.target.Python3Target python3Target32 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str34 = python3Target32.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.codegen.target.Python3Target python3Target35 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean36 = python3Target35.supportsOverloadedMethods();
        java.util.Set<java.lang.String> strSet37 = python3Target35.badWords;
        python3Target32.badWords = strSet37;
        python3Target30.badWords = strSet37;
        java.util.Set<java.lang.String> strSet40 = python3Target30.badWords;
        org.antlr.v4.codegen.CodeGenerator codeGenerator41 = python3Target30.getCodeGenerator();
        org.antlr.v4.tool.Grammar grammar42 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target43 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean44 = python3Target43.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup45 = python3Target43.templates;
        org.antlr.v4.tool.Grammar grammar46 = null;
        org.stringtemplate.v4.ST sT47 = null;
        python3Target43.genRecognizerHeaderFile(grammar46, sT47, "");
        python3Target43.language = "Python3";
        java.util.Set<java.lang.String> strSet52 = null;
        python3Target43.badWords = strSet52;
        org.antlr.v4.codegen.CodeGenerator codeGenerator54 = null;
        java.lang.String str57 = python3Target43.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator54, "\"Hi!Context\"", false);
        java.lang.String str59 = python3Target43.getListLabel("Python3");
        java.lang.String str61 = python3Target43.getTargetStringLiteralFromString("\\0");
        org.antlr.v4.tool.Grammar grammar62 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target63 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str65 = python3Target63.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.tool.Grammar grammar66 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target67 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean68 = python3Target67.supportsOverloadedMethods();
        java.lang.String str69 = python3Target67.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator70 = null;
        java.lang.String str73 = python3Target67.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator70, "", true);
        java.lang.String str74 = python3Target67.getVersion();
        org.antlr.v4.tool.Grammar grammar75 = null;
        int[] intArray76 = new int[] {};
        java.lang.String[] strArray77 = python3Target67.getTokenTypesAsTargetLabels(grammar75, intArray76);
        java.lang.String[] strArray78 = python3Target63.getTokenTypesAsTargetLabels(grammar66, intArray76);
        java.lang.String[] strArray79 = python3Target43.getTokenTypesAsTargetLabels(grammar62, intArray76);
        java.lang.String[] strArray80 = python3Target30.getTokenTypesAsTargetLabels(grammar42, intArray76);
        java.lang.String[] strArray81 = python3Target22.getTokenTypesAsTargetLabels(grammar28, intArray76);
        java.lang.String[] strArray82 = python3Target0.getTokenTypesAsTargetLabels(grammar20, intArray76);
        org.antlr.v4.codegen.CodeGenerator codeGenerator83 = null;
        python3Target0.gen = codeGenerator83;
        boolean boolean85 = python3Target0.templatesExist();
        org.junit.Assert.assertNull(codeGenerator3);
        org.junit.Assert.assertNull(codeGenerator4);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\"\"" + "'", str8, "\"\"");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 29 + "'", int9 == 29);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(sTGroup11);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "\\12" + "'", str14, "\\12");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "_tset_12" + "'", str19, "_tset_12");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "4.5.2.1" + "'", str23, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 29 + "'", int24 == 29);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "4.5.2.1" + "'", str25, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(strSet31);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "\"\"\"\"\"\"" + "'", str34, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(strSet37);
        org.junit.Assert.assertNotNull(strSet40);
        org.junit.Assert.assertNull(codeGenerator41);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNull(sTGroup45);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "Hi!Context" + "'", str57, "Hi!Context");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "Python3" + "'", str59, "Python3");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "\"\\0\"" + "'", str61, "\"\\0\"");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "\"\"\"\"\"\"" + "'", str65, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "4.5.2.1" + "'", str69, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "\"\"" + "'", str73, "\"\"");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "4.5.2.1" + "'", str74, "4.5.2.1");
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[]");
        org.junit.Assert.assertNotNull(strArray77);
        org.junit.Assert.assertNotNull(strArray78);
        org.junit.Assert.assertNotNull(strArray79);
        org.junit.Assert.assertNotNull(strArray80);
        org.junit.Assert.assertNotNull(strArray81);
        org.junit.Assert.assertNotNull(strArray82);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
    }

    @Test
    public void test1779() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1779");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        java.lang.String str2 = python3Target0.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = python3Target0.getCodeGenerator();
        org.antlr.v4.tool.Grammar grammar4 = null;
        org.stringtemplate.v4.ST sT5 = null;
        python3Target0.genRecognizerHeaderFile(grammar4, sT5, "_tsetPython3");
        java.util.Set<java.lang.String> strSet8 = python3Target0.badWords;
        org.antlr.v4.codegen.model.RuleFunction ruleFunction9 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str10 = python3Target0.getRuleFunctionContextStructName(ruleFunction9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "4.5.2.1" + "'", str2, "4.5.2.1");
        org.junit.Assert.assertNull(codeGenerator3);
        org.junit.Assert.assertNotNull(strSet8);
    }

    @Test
    public void test1780() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1780");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python3Target1.getBadWords();
        java.lang.String str4 = python3Target1.getAltLabelContextStructName("d");
        org.stringtemplate.v4.STGroup sTGroup5 = python3Target1.getTemplates();
        boolean boolean6 = python3Target1.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup7 = python3Target1.getTemplates();
        python3Target1.language = "\"\"";
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = null;
        java.lang.String str13 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator10, "\\\"4.5.2.1\\\"", false);
        org.antlr.v4.codegen.CodeGenerator codeGenerator14 = python3Target1.gen;
        java.lang.String str16 = python3Target1.getListLabel("_tset12");
        boolean boolean17 = python3Target1.wantsBaseListener();
        // The following exception was thrown during execution in test generation
        try {
            org.stringtemplate.v4.STGroup sTGroup18 = python3Target1.loadTemplates();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "DContext" + "'", str4, "DContext");
        org.junit.Assert.assertNotNull(sTGroup5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(sTGroup7);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "\\\"4.5.2.1\\\"" + "'", str13, "\\\"4.5.2.1\\\"");
        org.junit.Assert.assertNull(codeGenerator14);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "_tset12" + "'", str16, "_tset12");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    }

    @Test
    public void test1781() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1781");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        java.lang.String str2 = python3Target0.getVersion();
        boolean boolean3 = python3Target0.supportsOverloadedMethods();
        org.antlr.v4.codegen.CodeGenerator codeGenerator4 = null;
        java.lang.String str7 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator4, "", false);
        org.antlr.v4.tool.Grammar grammar8 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target9 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean10 = python3Target9.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup11 = python3Target9.templates;
        java.lang.String[] strArray14 = new java.lang.String[] { "hi!", "hi!" };
        python3Target9.targetCharValueEscape = strArray14;
        org.antlr.v4.codegen.CodeGenerator codeGenerator16 = null;
        java.lang.String str19 = python3Target9.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator16, "", false);
        java.util.Set<java.lang.String> strSet20 = python3Target9.badWords;
        java.lang.String str22 = python3Target9.getTargetStringLiteralFromString("12");
        int int23 = python3Target9.getSerializedATNSegmentLimit();
        boolean boolean24 = python3Target9.supportsOverloadedMethods();
        org.antlr.v4.tool.Grammar grammar25 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target26 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean27 = python3Target26.supportsOverloadedMethods();
        java.util.Set<java.lang.String> strSet28 = python3Target26.badWords;
        boolean boolean29 = python3Target26.templatesExist();
        java.lang.String str30 = python3Target26.getLanguage();
        org.antlr.v4.tool.Grammar grammar31 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target32 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str34 = python3Target32.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator35 = null;
        python3Target32.gen = codeGenerator35;
        org.antlr.v4.tool.Grammar grammar37 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target38 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str40 = python3Target38.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.tool.Grammar grammar41 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target42 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean43 = python3Target42.supportsOverloadedMethods();
        java.lang.String str44 = python3Target42.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator45 = null;
        java.lang.String str48 = python3Target42.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator45, "", true);
        java.lang.String str49 = python3Target42.getVersion();
        org.antlr.v4.tool.Grammar grammar50 = null;
        int[] intArray51 = new int[] {};
        java.lang.String[] strArray52 = python3Target42.getTokenTypesAsTargetLabels(grammar50, intArray51);
        java.lang.String[] strArray53 = python3Target38.getTokenTypesAsTargetLabels(grammar41, intArray51);
        java.lang.String[] strArray54 = python3Target32.getTokenTypesAsTargetLabels(grammar37, intArray51);
        java.lang.String[] strArray55 = python3Target26.getTokenTypesAsTargetLabels(grammar31, intArray51);
        java.lang.String[] strArray56 = python3Target9.getTokenTypesAsTargetLabels(grammar25, intArray51);
        java.lang.String[] strArray57 = python3Target0.getTokenTypesAsTargetLabels(grammar8, intArray51);
        org.antlr.v4.tool.Grammar grammar58 = null;
        org.stringtemplate.v4.ST sT59 = null;
        python3Target0.genRecognizerHeaderFile(grammar58, sT59, "hi!");
        java.lang.String[] strArray62 = python3Target0.targetCharValueEscape;
        org.antlr.v4.codegen.target.Python3Target.python3Keywords = strArray62;
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "4.5.2.1" + "'", str2, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(sTGroup11);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertNotNull(strSet20);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "\"12\"" + "'", str22, "\"12\"");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 29 + "'", int23 == 29);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(strSet28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "\"\"\"\"\"\"" + "'", str34, "\"\"\"\"\"\"");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "\"\"\"\"\"\"" + "'", str40, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "4.5.2.1" + "'", str44, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "\"\"" + "'", str48, "\"\"");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "4.5.2.1" + "'", str49, "4.5.2.1");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[]");
        org.junit.Assert.assertNotNull(strArray52);
        org.junit.Assert.assertNotNull(strArray53);
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertNotNull(strArray55);
        org.junit.Assert.assertNotNull(strArray56);
        org.junit.Assert.assertNotNull(strArray57);
        org.junit.Assert.assertNotNull(strArray62);
    }

    @Test
    public void test1782() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1782");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        python3Target0.language = "";
        org.antlr.v4.codegen.target.Python3Target python3Target3 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean4 = python3Target3.supportsOverloadedMethods();
        java.lang.String str5 = python3Target3.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = null;
        java.lang.String str9 = python3Target3.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator6, "", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = null;
        python3Target3.gen = codeGenerator10;
        java.lang.String[] strArray19 = new java.lang.String[] { "\"\"\"\"", "\\12", "\"\"", "4.5.2.1", "", "\"\"\"\"", "\"\"" };
        java.util.LinkedHashSet<java.lang.String> strSet20 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet20, strArray19);
        python3Target3.badWords = strSet20;
        python3Target0.badWords = strSet20;
        java.lang.String str25 = python3Target0.encodeIntAsCharEscape((int) (byte) 100);
        java.lang.String str26 = python3Target0.getLanguage();
        boolean boolean27 = python3Target0.supportsOverloadedMethods();
        org.antlr.v4.tool.Grammar grammar28 = null;
        org.stringtemplate.v4.ST sT29 = null;
        python3Target0.genRecognizerHeaderFile(grammar28, sT29, "\"\"\"\\\"\\\"hi!\\\"\\\"\"\"\"");
        python3Target0.language = "\"\\\"\\\"4.5.2.1\\\"\\\"\"";
        org.antlr.v4.codegen.CodeGenerator codeGenerator34 = null;
        python3Target0.gen = codeGenerator34;
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "4.5.2.1" + "'", str5, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\"\"" + "'", str9, "\"\"");
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "d" + "'", str25, "d");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
    }

    @Test
    public void test1783() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1783");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python3Target1.getBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = null;
        python3Target1.gen = codeGenerator3;
        java.lang.String str6 = python3Target1.getAltLabelContextStructName("hi!");
        java.lang.String str9 = python3Target1.getTargetStringLiteralFromString("\"hi!\"", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = null;
        python3Target1.gen = codeGenerator10;
        org.antlr.v4.tool.Grammar grammar12 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target13 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray14 = python3Target13.targetCharValueEscape;
        org.stringtemplate.v4.STGroup sTGroup15 = python3Target13.templates;
        int int16 = python3Target13.getInlineTestSetWordSize();
        org.antlr.v4.codegen.CodeGenerator codeGenerator17 = python3Target13.gen;
        org.antlr.v4.tool.Grammar grammar18 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target19 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str21 = python3Target19.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.tool.Grammar grammar22 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target23 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean24 = python3Target23.supportsOverloadedMethods();
        java.lang.String str25 = python3Target23.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator26 = null;
        java.lang.String str29 = python3Target23.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator26, "", true);
        java.lang.String str30 = python3Target23.getVersion();
        org.antlr.v4.tool.Grammar grammar31 = null;
        int[] intArray32 = new int[] {};
        java.lang.String[] strArray33 = python3Target23.getTokenTypesAsTargetLabels(grammar31, intArray32);
        java.lang.String[] strArray34 = python3Target19.getTokenTypesAsTargetLabels(grammar22, intArray32);
        java.lang.String[] strArray35 = python3Target13.getTokenTypesAsTargetLabels(grammar18, intArray32);
        java.lang.String[] strArray36 = python3Target1.getTokenTypesAsTargetLabels(grammar12, intArray32);
        java.lang.String[] strArray37 = python3Target1.targetCharValueEscape;
        java.lang.String str39 = python3Target1.getImplicitRuleLabel("#");
        java.lang.String str41 = python3Target1.getAltLabelContextStructName("\"\\\"\\\"\\\\1\\\"\\\"\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator42 = python3Target1.gen;
        org.stringtemplate.v4.STGroup sTGroup43 = python3Target1.templates;
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Hi!Context" + "'", str6, "Hi!Context");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\"\\\"hi!\\\"\"" + "'", str9, "\"\\\"hi!\\\"\"");
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertNull(sTGroup15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 64 + "'", int16 == 64);
        org.junit.Assert.assertNull(codeGenerator17);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "\"\"\"\"\"\"" + "'", str21, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "4.5.2.1" + "'", str25, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "\"\"" + "'", str29, "\"\"");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "4.5.2.1" + "'", str30, "4.5.2.1");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[]");
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "_#" + "'", str39, "_#");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "\"\\\"\\\"\\\\1\\\"\\\"\"Context" + "'", str41, "\"\\\"\\\"\\\\1\\\"\\\"\"Context");
        org.junit.Assert.assertNull(codeGenerator42);
        org.junit.Assert.assertNotNull(sTGroup43);
    }

    @Test
    public void test1784() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1784");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str2 = python3Target0.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = null;
        python3Target0.gen = codeGenerator3;
        java.lang.String str5 = python3Target0.getVersion();
        org.antlr.v4.codegen.target.Python3Target python3Target6 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean7 = python3Target6.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup8 = python3Target6.templates;
        org.antlr.v4.tool.Grammar grammar9 = null;
        org.stringtemplate.v4.ST sT10 = null;
        python3Target6.genRecognizerHeaderFile(grammar9, sT10, "");
        python3Target6.language = "Python3";
        int int15 = python3Target6.getSerializedATNSegmentLimit();
        org.stringtemplate.v4.STGroup sTGroup16 = python3Target6.loadTemplates();
        python3Target0.templates = sTGroup16;
        java.util.Set<java.lang.String> strSet18 = python3Target0.getBadWords();
        org.antlr.v4.tool.ast.GrammarAST grammarAST19 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean20 = python3Target0.visibleGrammarSymbolCausesIssueInGeneratedCode(grammarAST19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "\"\"\"\"\"\"" + "'", str2, "\"\"\"\"\"\"");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "4.5.2.1" + "'", str5, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(sTGroup8);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 29 + "'", int15 == 29);
        org.junit.Assert.assertNotNull(sTGroup16);
        org.junit.Assert.assertNotNull(strSet18);
    }

    @Test
    public void test1785() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1785");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        python3Target0.language = "";
        org.antlr.v4.codegen.target.Python3Target python3Target3 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean4 = python3Target3.supportsOverloadedMethods();
        java.lang.String str5 = python3Target3.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = null;
        java.lang.String str9 = python3Target3.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator6, "", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = null;
        python3Target3.gen = codeGenerator10;
        java.lang.String[] strArray19 = new java.lang.String[] { "\"\"\"\"", "\\12", "\"\"", "4.5.2.1", "", "\"\"\"\"", "\"\"" };
        java.util.LinkedHashSet<java.lang.String> strSet20 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet20, strArray19);
        python3Target3.badWords = strSet20;
        python3Target0.badWords = strSet20;
        python3Target0.addBadWords();
        java.util.Set<java.lang.String> strSet25 = python3Target0.badWords;
        java.lang.String str28 = python3Target0.getTargetStringLiteralFromString("_tset\"\\\"0\\\"\"", true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "4.5.2.1" + "'", str5, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\"\"" + "'", str9, "\"\"");
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(strSet25);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "\"_tset\"\\\"0\\\"\"\"" + "'", str28, "\"_tset\"\\\"0\\\"\"\"");
    }

    @Test
    public void test1786() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1786");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray1 = python3Target0.targetCharValueEscape;
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = null;
        java.lang.String str6 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator3, "\"\\12\"", false);
        int int7 = python3Target0.getSerializedATNSegmentLimit();
        boolean boolean8 = python3Target0.templatesExist();
        java.lang.String str9 = python3Target0.getLanguage();
        org.antlr.v4.tool.Grammar grammar10 = null;
        org.stringtemplate.v4.ST sT11 = null;
        // The following exception was thrown during execution in test generation
        try {
            python3Target0.genListenerFile(grammar10, sT11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "12" + "'", str6, "12");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 29 + "'", int7 == 29);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(str9);
    }

    @Test
    public void test1787() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1787");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        org.antlr.v4.tool.Grammar grammar3 = null;
        org.stringtemplate.v4.ST sT4 = null;
        python3Target0.genRecognizerHeaderFile(grammar3, sT4, "");
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = python3Target0.getCodeGenerator();
        boolean boolean8 = python3Target0.supportsOverloadedMethods();
        org.antlr.v4.codegen.CodeGenerator codeGenerator9 = python3Target0.gen;
        boolean boolean10 = python3Target0.supportsOverloadedMethods();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertNull(codeGenerator7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(codeGenerator9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test1788() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1788");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.lang.String str3 = python3Target1.getTargetStringLiteralFromString("");
        int int4 = python3Target1.getSerializedATNSegmentLimit();
        boolean boolean5 = python3Target1.wantsBaseVisitor();
        org.stringtemplate.v4.STGroup sTGroup6 = python3Target1.loadTemplates();
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = python3Target1.gen;
        org.antlr.v4.codegen.target.Python3Target python3Target8 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean9 = python3Target8.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup10 = python3Target8.templates;
        org.antlr.v4.tool.Grammar grammar11 = null;
        org.stringtemplate.v4.ST sT12 = null;
        python3Target8.genRecognizerHeaderFile(grammar11, sT12, "");
        python3Target8.language = "Python3";
        int int17 = python3Target8.getSerializedATNSegmentLimit();
        org.stringtemplate.v4.STGroup sTGroup18 = python3Target8.loadTemplates();
        python3Target1.templates = sTGroup18;
        java.lang.String str20 = python3Target1.getVersion();
        java.lang.String str22 = python3Target1.getAltLabelContextStructName("\"\\\"\\\"\\\\0\\\"\\\"\"");
        java.lang.String[] strArray23 = python3Target1.targetCharValueEscape;
        org.antlr.v4.codegen.target.Python3Target python3Target24 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str26 = python3Target24.getTargetStringLiteralFromString("\"\"\"\"");
        java.lang.String str28 = python3Target24.getTargetStringLiteralFromString("");
        int int29 = python3Target24.getSerializedATNSegmentLimit();
        org.antlr.v4.codegen.target.Python3Target python3Target30 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray31 = python3Target30.targetCharValueEscape;
        org.stringtemplate.v4.STGroup sTGroup32 = python3Target30.templates;
        int int33 = python3Target30.getInlineTestSetWordSize();
        org.antlr.v4.codegen.CodeGenerator codeGenerator34 = python3Target30.gen;
        org.antlr.v4.tool.Grammar grammar35 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target36 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str38 = python3Target36.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.tool.Grammar grammar39 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target40 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean41 = python3Target40.supportsOverloadedMethods();
        java.lang.String str42 = python3Target40.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator43 = null;
        java.lang.String str46 = python3Target40.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator43, "", true);
        java.lang.String str47 = python3Target40.getVersion();
        org.antlr.v4.tool.Grammar grammar48 = null;
        int[] intArray49 = new int[] {};
        java.lang.String[] strArray50 = python3Target40.getTokenTypesAsTargetLabels(grammar48, intArray49);
        java.lang.String[] strArray51 = python3Target36.getTokenTypesAsTargetLabels(grammar39, intArray49);
        java.lang.String[] strArray52 = python3Target30.getTokenTypesAsTargetLabels(grammar35, intArray49);
        python3Target24.targetCharValueEscape = strArray52;
        java.util.Set<java.lang.String> strSet54 = python3Target24.badWords;
        python3Target1.badWords = strSet54;
        int int56 = python3Target1.getSerializedATNSegmentLimit();
        java.lang.String str58 = python3Target1.getImplicitSetLabel("_tset\"\"");
        java.lang.String str60 = python3Target1.getAltLabelContextStructName("\"\\\"\\\"4.5.2.1\\\"\\\"\"");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "\"\"" + "'", str3, "\"\"");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 29 + "'", int4 == 29);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(sTGroup6);
        org.junit.Assert.assertNull(codeGenerator7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(sTGroup10);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 29 + "'", int17 == 29);
        org.junit.Assert.assertNotNull(sTGroup18);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "4.5.2.1" + "'", str20, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "\"\\\"\\\"\\\\0\\\"\\\"\"Context" + "'", str22, "\"\\\"\\\"\\\\0\\\"\\\"\"Context");
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "\"\"\"\"\"\"" + "'", str26, "\"\"\"\"\"\"");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "\"\"" + "'", str28, "\"\"");
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 29 + "'", int29 == 29);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertNull(sTGroup32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 64 + "'", int33 == 64);
        org.junit.Assert.assertNull(codeGenerator34);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "\"\"\"\"\"\"" + "'", str38, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "4.5.2.1" + "'", str42, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "\"\"" + "'", str46, "\"\"");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "4.5.2.1" + "'", str47, "4.5.2.1");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[]");
        org.junit.Assert.assertNotNull(strArray50);
        org.junit.Assert.assertNotNull(strArray51);
        org.junit.Assert.assertNotNull(strArray52);
        org.junit.Assert.assertNotNull(strSet54);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 29 + "'", int56 == 29);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "_tset_tset\"\"" + "'", str58, "_tset_tset\"\"");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "\"\\\"\\\"4.5.2.1\\\"\\\"\"Context" + "'", str60, "\"\\\"\\\"4.5.2.1\\\"\\\"\"Context");
    }

    @Test
    public void test1789() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1789");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        org.antlr.v4.tool.Grammar grammar3 = null;
        org.stringtemplate.v4.ST sT4 = null;
        python3Target0.genRecognizerHeaderFile(grammar3, sT4, "");
        python3Target0.language = "Python3";
        java.lang.String str9 = python3Target0.getVersion();
        org.antlr.v4.codegen.target.Python3Target python3Target10 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean11 = python3Target10.supportsOverloadedMethods();
        java.lang.String str12 = python3Target10.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator13 = null;
        java.lang.String str16 = python3Target10.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator13, "", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator17 = null;
        python3Target10.gen = codeGenerator17;
        java.lang.String[] strArray26 = new java.lang.String[] { "\"\"\"\"", "\\12", "\"\"", "4.5.2.1", "", "\"\"\"\"", "\"\"" };
        java.util.LinkedHashSet<java.lang.String> strSet27 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet27, strArray26);
        python3Target10.badWords = strSet27;
        boolean boolean30 = python3Target10.templatesExist();
        org.antlr.v4.codegen.CodeGenerator codeGenerator31 = null;
        python3Target10.gen = codeGenerator31;
        java.util.Set<java.lang.String> strSet33 = python3Target10.getBadWords();
        python3Target0.badWords = strSet33;
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "4.5.2.1" + "'", str9, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "4.5.2.1" + "'", str12, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "\"\"" + "'", str16, "\"\"");
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(strSet33);
    }

    @Test
    public void test1790() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1790");
        org.antlr.v4.codegen.target.Python3Target.PythonStringRenderer pythonStringRenderer0 = new org.antlr.v4.codegen.target.Python3Target.PythonStringRenderer();
        java.lang.Object obj1 = null;
        java.util.Locale locale3 = null;
        java.lang.String str4 = pythonStringRenderer0.toString(obj1, "\"\"\"\"\"\"", locale3);
        org.antlr.v4.codegen.target.Python3Target python3Target5 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray6 = python3Target5.targetCharValueEscape;
        org.stringtemplate.v4.STGroup sTGroup7 = python3Target5.templates;
        java.util.Locale locale9 = null;
        java.lang.String str10 = pythonStringRenderer0.toString((java.lang.Object) sTGroup7, "\"Hi!Context\"", locale9);
        java.util.Locale locale13 = null;
        java.lang.String str14 = pythonStringRenderer0.toString((java.lang.Object) "\"DContext\"", "", locale13);
        java.lang.Object obj15 = null;
        java.util.Locale locale17 = null;
        java.lang.String str18 = pythonStringRenderer0.toString(obj15, "\"\\\"hi!\\\"\"", locale17);
        org.antlr.v4.codegen.CodeGenerator codeGenerator19 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target20 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator19);
        java.lang.String str22 = python3Target20.getTargetStringLiteralFromString("");
        int int23 = python3Target20.getSerializedATNSegmentLimit();
        int int24 = python3Target20.getInlineTestSetWordSize();
        org.antlr.v4.tool.Grammar grammar25 = null;
        org.stringtemplate.v4.ST sT26 = null;
        python3Target20.genRecognizerHeaderFile(grammar25, sT26, "@");
        boolean boolean29 = python3Target20.templatesExist();
        boolean boolean30 = python3Target20.templatesExist();
        python3Target20.addBadWords();
        java.lang.String str33 = python3Target20.getImplicitSetLabel("\"\\0\"");
        java.util.Locale locale35 = null;
        java.lang.String str36 = pythonStringRenderer0.toString((java.lang.Object) str33, "", locale35);
        org.antlr.v4.codegen.target.Python3Target python3Target37 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean38 = python3Target37.supportsOverloadedMethods();
        java.lang.String str39 = python3Target37.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator40 = null;
        java.lang.String str43 = python3Target37.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator40, "", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator44 = null;
        python3Target37.gen = codeGenerator44;
        java.lang.String[] strArray53 = new java.lang.String[] { "\"\"\"\"", "\\12", "\"\"", "4.5.2.1", "", "\"\"\"\"", "\"\"" };
        java.util.LinkedHashSet<java.lang.String> strSet54 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet54, strArray53);
        python3Target37.badWords = strSet54;
        org.antlr.v4.codegen.CodeGenerator codeGenerator57 = python3Target37.gen;
        java.lang.String str60 = python3Target37.getTargetStringLiteralFromString("\\12", true);
        boolean boolean61 = python3Target37.supportsOverloadedMethods();
        java.util.Locale locale63 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str64 = pythonStringRenderer0.toString((java.lang.Object) python3Target37, "\"#\"", locale63);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: org.antlr.v4.codegen.target.Python3Target cannot be cast to java.lang.String");
        } catch (java.lang.ClassCastException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "\"\"\"\"\"\"" + "'", str4, "\"\"\"\"\"\"");
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertNull(sTGroup7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\"Hi!Context\"" + "'", str10, "\"Hi!Context\"");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "\"\\\"hi!\\\"\"" + "'", str18, "\"\\\"hi!\\\"\"");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "\"\"" + "'", str22, "\"\"");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 29 + "'", int23 == 29);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 64 + "'", int24 == 64);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "_tset\"\\0\"" + "'", str33, "_tset\"\\0\"");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "4.5.2.1" + "'", str39, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "\"\"" + "'", str43, "\"\"");
        org.junit.Assert.assertNotNull(strArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNull(codeGenerator57);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "\"\\12\"" + "'", str60, "\"\\12\"");
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
    }

    @Test
    public void test1791() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1791");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray1 = python3Target0.targetCharValueEscape;
        java.lang.String str2 = python3Target0.language;
        int int3 = python3Target0.getSerializedATNSegmentLimit();
        java.lang.String str6 = python3Target0.getTargetStringLiteralFromString("\"\"\"\"\"\"", false);
        java.lang.String str9 = python3Target0.getTargetStringLiteralFromString("\"Hi!Context\"", false);
        org.antlr.v4.codegen.target.Python3Target python3Target10 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean11 = python3Target10.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup12 = python3Target10.templates;
        java.lang.String[] strArray15 = new java.lang.String[] { "hi!", "hi!" };
        python3Target10.targetCharValueEscape = strArray15;
        org.antlr.v4.codegen.CodeGenerator codeGenerator17 = null;
        python3Target10.gen = codeGenerator17;
        java.lang.String str20 = python3Target10.getTargetStringLiteralFromString("Python3");
        java.lang.String[] strArray21 = python3Target10.targetCharValueEscape;
        python3Target0.targetCharValueEscape = strArray21;
        org.antlr.v4.codegen.model.RuleFunction ruleFunction23 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str24 = python3Target0.getRuleFunctionContextStructName(ruleFunction23);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 29 + "'", int3 == 29);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\"\"\"\"\"\"" + "'", str6, "\"\"\"\"\"\"");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\"Hi!Context\"" + "'", str9, "\"Hi!Context\"");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(sTGroup12);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "\"Python3\"" + "'", str20, "\"Python3\"");
        org.junit.Assert.assertNotNull(strArray21);
    }

    @Test
    public void test1792() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1792");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        python3Target0.language = "4.5.2.1";
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = python3Target0.getCodeGenerator();
        org.antlr.v4.codegen.CodeGenerator codeGenerator4 = python3Target0.gen;
        java.util.Set<java.lang.String> strSet5 = python3Target0.badWords;
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = python3Target0.gen;
        java.lang.String str7 = python3Target0.language;
        python3Target0.language = "\"\"\"\"\"\"\"\"Context";
        int int10 = python3Target0.getSerializedATNSegmentLimit();
        org.antlr.v4.tool.Grammar grammar11 = null;
        org.stringtemplate.v4.ST sT12 = null;
        // The following exception was thrown during execution in test generation
        try {
            python3Target0.genListenerFile(grammar11, sT12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(codeGenerator3);
        org.junit.Assert.assertNull(codeGenerator4);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNull(codeGenerator6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "4.5.2.1" + "'", str7, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 29 + "'", int10 == 29);
    }

    @Test
    public void test1793() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1793");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!", "hi!" };
        python3Target0.targetCharValueEscape = strArray5;
        java.lang.String str8 = python3Target0.getTargetStringLiteralFromString("\"\"");
        java.lang.String str10 = python3Target0.getTargetStringLiteralFromString("\"hi!\"");
        org.antlr.v4.codegen.target.Python3Target python3Target11 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean12 = python3Target11.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup13 = python3Target11.templates;
        java.lang.String[] strArray16 = new java.lang.String[] { "hi!", "hi!" };
        python3Target11.targetCharValueEscape = strArray16;
        org.antlr.v4.codegen.CodeGenerator codeGenerator18 = null;
        java.lang.String str21 = python3Target11.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator18, "", false);
        int int22 = python3Target11.getSerializedATNSegmentLimit();
        java.lang.String str23 = python3Target11.getVersion();
        java.lang.String str25 = python3Target11.getTargetStringLiteralFromString("4.5.2.1");
        org.antlr.v4.codegen.CodeGenerator codeGenerator26 = python3Target11.gen;
        java.lang.String str27 = python3Target11.getLanguage();
        org.antlr.v4.codegen.target.Python3Target python3Target28 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray29 = python3Target28.targetCharValueEscape;
        java.lang.String str30 = python3Target28.language;
        int int31 = python3Target28.getSerializedATNSegmentLimit();
        java.util.Set<java.lang.String> strSet32 = python3Target28.badWords;
        python3Target11.badWords = strSet32;
        python3Target0.badWords = strSet32;
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\"\"\"\"" + "'", str8, "\"\"\"\"");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\"\"hi!\"\"" + "'", str10, "\"\"hi!\"\"");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(sTGroup13);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 29 + "'", int22 == 29);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "4.5.2.1" + "'", str23, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "\"4.5.2.1\"" + "'", str25, "\"4.5.2.1\"");
        org.junit.Assert.assertNull(codeGenerator26);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 29 + "'", int31 == 29);
        org.junit.Assert.assertNotNull(strSet32);
    }

    @Test
    public void test1794() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1794");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str2 = python3Target0.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.tool.Grammar grammar3 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target4 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean5 = python3Target4.supportsOverloadedMethods();
        java.lang.String str6 = python3Target4.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = null;
        java.lang.String str10 = python3Target4.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator7, "", true);
        java.lang.String str11 = python3Target4.getVersion();
        org.antlr.v4.tool.Grammar grammar12 = null;
        int[] intArray13 = new int[] {};
        java.lang.String[] strArray14 = python3Target4.getTokenTypesAsTargetLabels(grammar12, intArray13);
        java.lang.String[] strArray15 = python3Target0.getTokenTypesAsTargetLabels(grammar3, intArray13);
        java.lang.String[] strArray16 = python3Target0.targetCharValueEscape;
        java.lang.String str18 = python3Target0.getTargetStringLiteralFromString("\"\"\"\"\"\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator19 = python3Target0.getCodeGenerator();
        java.lang.String str21 = python3Target0.getTargetStringLiteralFromString("");
        java.lang.String str23 = python3Target0.encodeIntAsCharEscape((int) (byte) 1);
        org.antlr.v4.codegen.model.RuleFunction ruleFunction24 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str25 = python3Target0.getRuleFunctionContextStructName(ruleFunction24);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "\"\"\"\"\"\"" + "'", str2, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "4.5.2.1" + "'", str6, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\"\"" + "'", str10, "\"\"");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "4.5.2.1" + "'", str11, "4.5.2.1");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[]");
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "\"\"\"\"\"\"\"\"" + "'", str18, "\"\"\"\"\"\"\"\"");
        org.junit.Assert.assertNull(codeGenerator19);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "\"\"" + "'", str21, "\"\"");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "\\1" + "'", str23, "\\1");
    }

    @Test
    public void test1795() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1795");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        java.lang.String str2 = python3Target0.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = python3Target0.getCodeGenerator();
        org.antlr.v4.tool.Grammar grammar4 = null;
        org.stringtemplate.v4.ST sT5 = null;
        python3Target0.genRecognizerHeaderFile(grammar4, sT5, "_tsetPython3");
        boolean boolean8 = python3Target0.wantsBaseListener();
        java.lang.String str9 = python3Target0.getVersion();
        java.lang.String str10 = python3Target0.getLanguage();
        java.lang.String str12 = python3Target0.encodeIntAsCharEscape((int) 'a');
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "4.5.2.1" + "'", str2, "4.5.2.1");
        org.junit.Assert.assertNull(codeGenerator3);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "4.5.2.1" + "'", str9, "4.5.2.1");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "a" + "'", str12, "a");
    }

    @Test
    public void test1796() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1796");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        java.lang.String str2 = python3Target0.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = null;
        java.lang.String str6 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator3, "", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = null;
        python3Target0.gen = codeGenerator7;
        int int9 = python3Target0.getSerializedATNSegmentLimit();
        java.lang.String str11 = python3Target0.getTargetStringLiteralFromString("\\1");
        java.lang.String str12 = python3Target0.language;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str14 = python3Target0.getElementListName("\"_tset\"\\\"0\\\"\"\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "4.5.2.1" + "'", str2, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\"\"" + "'", str6, "\"\"");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 29 + "'", int9 == 29);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "\"\\1\"" + "'", str11, "\"\\1\"");
        org.junit.Assert.assertNull(str12);
    }

    @Test
    public void test1797() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1797");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python3Target1.getBadWords();
        java.lang.String str4 = python3Target1.getAltLabelContextStructName("d");
        org.stringtemplate.v4.STGroup sTGroup5 = python3Target1.getTemplates();
        boolean boolean6 = python3Target1.supportsOverloadedMethods();
        java.util.Set<java.lang.String> strSet7 = python3Target1.badWords;
        java.lang.String str9 = python3Target1.getTargetStringLiteralFromString("_tset12");
        org.stringtemplate.v4.STGroup sTGroup10 = python3Target1.loadTemplates();
        boolean boolean11 = python3Target1.wantsBaseVisitor();
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "DContext" + "'", str4, "DContext");
        org.junit.Assert.assertNotNull(sTGroup5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(strSet7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\"_tset12\"" + "'", str9, "\"_tset12\"");
        org.junit.Assert.assertNotNull(sTGroup10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test1798() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1798");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        java.lang.String str2 = python3Target0.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = python3Target0.getCodeGenerator();
        org.antlr.v4.tool.Grammar grammar4 = null;
        org.stringtemplate.v4.ST sT5 = null;
        python3Target0.genRecognizerHeaderFile(grammar4, sT5, "_tsetPython3");
        java.lang.String str9 = python3Target0.getTargetStringLiteralFromString("\"@\"");
        org.antlr.v4.tool.Rule rule10 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str11 = python3Target0.getRuleFunctionContextStructName(rule10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "4.5.2.1" + "'", str2, "4.5.2.1");
        org.junit.Assert.assertNull(codeGenerator3);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\"\"@\"\"" + "'", str9, "\"\"@\"\"");
    }

    @Test
    public void test1799() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1799");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        org.antlr.v4.tool.Grammar grammar3 = null;
        org.stringtemplate.v4.ST sT4 = null;
        python3Target0.genRecognizerHeaderFile(grammar3, sT4, "");
        python3Target0.language = "Python3";
        java.util.Set<java.lang.String> strSet9 = null;
        python3Target0.badWords = strSet9;
        boolean boolean11 = python3Target0.wantsBaseVisitor();
        org.antlr.v4.codegen.CodeGenerator codeGenerator12 = null;
        python3Target0.gen = codeGenerator12;
        java.lang.String str15 = python3Target0.getListLabel("\"\\\"\\\"hi!\\\"\\\"\"");
        java.lang.String str16 = python3Target0.language;
        org.antlr.v4.codegen.CodeGenerator codeGenerator17 = python3Target0.gen;
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "\"\\\"\\\"hi!\\\"\\\"\"" + "'", str15, "\"\\\"\\\"hi!\\\"\\\"\"");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Python3" + "'", str16, "Python3");
        org.junit.Assert.assertNull(codeGenerator17);
    }

    @Test
    public void test1800() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1800");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.lang.String str3 = python3Target1.getTargetStringLiteralFromString("");
        int int4 = python3Target1.getSerializedATNSegmentLimit();
        boolean boolean5 = python3Target1.wantsBaseVisitor();
        java.lang.String str7 = python3Target1.getImplicitRuleLabel("\"\"\\\"\\\"hi!\\\"\\\"\"\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = python3Target1.gen;
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "\"\"" + "'", str3, "\"\"");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 29 + "'", int4 == 29);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "_\"\"\\\"\\\"hi!\\\"\\\"\"\"" + "'", str7, "_\"\"\\\"\\\"hi!\\\"\\\"\"\"");
        org.junit.Assert.assertNull(codeGenerator8);
    }

    @Test
    public void test1801() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1801");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        java.util.Set<java.lang.String> strSet2 = python3Target0.badWords;
        boolean boolean3 = python3Target0.supportsOverloadedMethods();
        boolean boolean4 = python3Target0.supportsOverloadedMethods();
        java.lang.String str6 = python3Target0.getTargetStringLiteralFromString("\"\"hi!\"\"");
        int int7 = python3Target0.getSerializedATNSegmentLimit();
        java.lang.String str8 = python3Target0.language;
        java.util.Set<java.lang.String> strSet9 = python3Target0.badWords;
        boolean boolean10 = python3Target0.templatesExist();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\"\"\"hi!\"\"\"" + "'", str6, "\"\"\"hi!\"\"\"");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 29 + "'", int7 == 29);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(strSet9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test1802() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1802");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python3Target1.getBadWords();
        java.lang.String str4 = python3Target1.getAltLabelContextStructName("d");
        org.stringtemplate.v4.STGroup sTGroup5 = python3Target1.getTemplates();
        java.lang.String str6 = python3Target1.language;
        org.antlr.v4.tool.Grammar grammar7 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target9 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator8);
        java.util.Set<java.lang.String> strSet10 = python3Target9.getBadWords();
        org.antlr.v4.codegen.target.Python3Target python3Target11 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str13 = python3Target11.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.codegen.target.Python3Target python3Target14 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean15 = python3Target14.supportsOverloadedMethods();
        java.util.Set<java.lang.String> strSet16 = python3Target14.badWords;
        python3Target11.badWords = strSet16;
        python3Target9.badWords = strSet16;
        java.util.Set<java.lang.String> strSet19 = python3Target9.badWords;
        java.lang.String str21 = python3Target9.getAltLabelContextStructName("d");
        org.antlr.v4.tool.Grammar grammar22 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target23 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean24 = python3Target23.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup25 = python3Target23.templates;
        org.antlr.v4.tool.Grammar grammar26 = null;
        org.stringtemplate.v4.ST sT27 = null;
        python3Target23.genRecognizerHeaderFile(grammar26, sT27, "");
        boolean boolean30 = python3Target23.supportsOverloadedMethods();
        python3Target23.language = "\"\\12\"";
        org.antlr.v4.tool.Grammar grammar33 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator34 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target35 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator34);
        java.util.Set<java.lang.String> strSet36 = python3Target35.getBadWords();
        java.lang.String str38 = python3Target35.getAltLabelContextStructName("d");
        java.lang.String str40 = python3Target35.getTargetStringLiteralFromString("\"\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator41 = python3Target35.getCodeGenerator();
        org.antlr.v4.tool.Grammar grammar42 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator43 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target44 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator43);
        java.util.Set<java.lang.String> strSet45 = python3Target44.getBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator46 = null;
        python3Target44.gen = codeGenerator46;
        java.lang.String str49 = python3Target44.getAltLabelContextStructName("hi!");
        java.lang.String str52 = python3Target44.getTargetStringLiteralFromString("\"hi!\"", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator53 = null;
        python3Target44.gen = codeGenerator53;
        org.antlr.v4.tool.Grammar grammar55 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target56 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray57 = python3Target56.targetCharValueEscape;
        org.stringtemplate.v4.STGroup sTGroup58 = python3Target56.templates;
        int int59 = python3Target56.getInlineTestSetWordSize();
        org.antlr.v4.codegen.CodeGenerator codeGenerator60 = python3Target56.gen;
        org.antlr.v4.tool.Grammar grammar61 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target62 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str64 = python3Target62.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.tool.Grammar grammar65 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target66 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean67 = python3Target66.supportsOverloadedMethods();
        java.lang.String str68 = python3Target66.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator69 = null;
        java.lang.String str72 = python3Target66.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator69, "", true);
        java.lang.String str73 = python3Target66.getVersion();
        org.antlr.v4.tool.Grammar grammar74 = null;
        int[] intArray75 = new int[] {};
        java.lang.String[] strArray76 = python3Target66.getTokenTypesAsTargetLabels(grammar74, intArray75);
        java.lang.String[] strArray77 = python3Target62.getTokenTypesAsTargetLabels(grammar65, intArray75);
        java.lang.String[] strArray78 = python3Target56.getTokenTypesAsTargetLabels(grammar61, intArray75);
        java.lang.String[] strArray79 = python3Target44.getTokenTypesAsTargetLabels(grammar55, intArray75);
        java.lang.String[] strArray80 = python3Target35.getTokenTypesAsTargetLabels(grammar42, intArray75);
        java.lang.String[] strArray81 = python3Target23.getTokenTypesAsTargetLabels(grammar33, intArray75);
        java.lang.String[] strArray82 = python3Target9.getTokenTypesAsTargetLabels(grammar22, intArray75);
        java.lang.String[] strArray83 = python3Target1.getTokenTypesAsTargetLabels(grammar7, intArray75);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str85 = python3Target1.getElementName("\"_tset_tset_12\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "DContext" + "'", str4, "DContext");
        org.junit.Assert.assertNotNull(sTGroup5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Python3" + "'", str6, "Python3");
        org.junit.Assert.assertNotNull(strSet10);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "\"\"\"\"\"\"" + "'", str13, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertNotNull(strSet19);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "DContext" + "'", str21, "DContext");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNull(sTGroup25);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(strSet36);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "DContext" + "'", str38, "DContext");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "\"\\\"\\\"\"" + "'", str40, "\"\\\"\\\"\"");
        org.junit.Assert.assertNull(codeGenerator41);
        org.junit.Assert.assertNotNull(strSet45);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "Hi!Context" + "'", str49, "Hi!Context");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "\"\\\"hi!\\\"\"" + "'", str52, "\"\\\"hi!\\\"\"");
        org.junit.Assert.assertNotNull(strArray57);
        org.junit.Assert.assertNull(sTGroup58);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 64 + "'", int59 == 64);
        org.junit.Assert.assertNull(codeGenerator60);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "\"\"\"\"\"\"" + "'", str64, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "4.5.2.1" + "'", str68, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "\"\"" + "'", str72, "\"\"");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "4.5.2.1" + "'", str73, "4.5.2.1");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[]");
        org.junit.Assert.assertNotNull(strArray76);
        org.junit.Assert.assertNotNull(strArray77);
        org.junit.Assert.assertNotNull(strArray78);
        org.junit.Assert.assertNotNull(strArray79);
        org.junit.Assert.assertNotNull(strArray80);
        org.junit.Assert.assertNotNull(strArray81);
        org.junit.Assert.assertNotNull(strArray82);
        org.junit.Assert.assertNotNull(strArray83);
    }

    @Test
    public void test1803() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1803");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        java.lang.String str2 = python3Target0.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = python3Target0.getCodeGenerator();
        org.stringtemplate.v4.STGroup sTGroup4 = null;
        python3Target0.templates = sTGroup4;
        org.stringtemplate.v4.STGroup sTGroup6 = python3Target0.templates;
        java.lang.String[] strArray7 = python3Target0.targetCharValueEscape;
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target9 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator8);
        java.util.Set<java.lang.String> strSet10 = python3Target9.getBadWords();
        java.lang.String str12 = python3Target9.getAltLabelContextStructName("d");
        org.stringtemplate.v4.STGroup sTGroup13 = python3Target9.templates;
        python3Target0.templates = sTGroup13;
        org.antlr.v4.codegen.CodeGenerator codeGenerator15 = python3Target0.gen;
        org.antlr.v4.codegen.CodeGenerator codeGenerator16 = python3Target0.getCodeGenerator();
        org.antlr.v4.tool.Grammar grammar17 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target18 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean19 = python3Target18.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup20 = python3Target18.templates;
        java.lang.String[] strArray23 = new java.lang.String[] { "hi!", "hi!" };
        python3Target18.targetCharValueEscape = strArray23;
        org.antlr.v4.codegen.CodeGenerator codeGenerator25 = null;
        java.lang.String str28 = python3Target18.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator25, "", false);
        java.util.Set<java.lang.String> strSet29 = python3Target18.badWords;
        org.antlr.v4.codegen.CodeGenerator codeGenerator30 = null;
        java.lang.String str33 = python3Target18.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator30, "@", false);
        org.antlr.v4.codegen.target.Python3Target python3Target34 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean35 = python3Target34.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup36 = python3Target34.templates;
        java.lang.String[] strArray39 = new java.lang.String[] { "hi!", "hi!" };
        python3Target34.targetCharValueEscape = strArray39;
        java.lang.String str42 = python3Target34.getTargetStringLiteralFromString("\"\"");
        org.stringtemplate.v4.STGroup sTGroup43 = null;
        python3Target34.templates = sTGroup43;
        java.lang.String[] strArray45 = python3Target34.targetCharValueEscape;
        python3Target18.targetCharValueEscape = strArray45;
        org.antlr.v4.tool.Grammar grammar47 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target48 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean49 = python3Target48.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup50 = python3Target48.templates;
        java.lang.String[] strArray53 = new java.lang.String[] { "hi!", "hi!" };
        python3Target48.targetCharValueEscape = strArray53;
        org.antlr.v4.codegen.CodeGenerator codeGenerator55 = null;
        java.lang.String str58 = python3Target48.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator55, "", false);
        org.antlr.v4.tool.Grammar grammar59 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target60 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str62 = python3Target60.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.tool.Grammar grammar63 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target64 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean65 = python3Target64.supportsOverloadedMethods();
        java.lang.String str66 = python3Target64.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator67 = null;
        java.lang.String str70 = python3Target64.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator67, "", true);
        java.lang.String str71 = python3Target64.getVersion();
        org.antlr.v4.tool.Grammar grammar72 = null;
        int[] intArray73 = new int[] {};
        java.lang.String[] strArray74 = python3Target64.getTokenTypesAsTargetLabels(grammar72, intArray73);
        java.lang.String[] strArray75 = python3Target60.getTokenTypesAsTargetLabels(grammar63, intArray73);
        java.lang.String[] strArray76 = python3Target48.getTokenTypesAsTargetLabels(grammar59, intArray73);
        java.lang.String[] strArray77 = python3Target18.getTokenTypesAsTargetLabels(grammar47, intArray73);
        java.lang.String[] strArray78 = python3Target0.getTokenTypesAsTargetLabels(grammar17, intArray73);
        boolean boolean79 = python3Target0.supportsOverloadedMethods();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "4.5.2.1" + "'", str2, "4.5.2.1");
        org.junit.Assert.assertNull(codeGenerator3);
        org.junit.Assert.assertNull(sTGroup6);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strSet10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "DContext" + "'", str12, "DContext");
        org.junit.Assert.assertNotNull(sTGroup13);
        org.junit.Assert.assertNull(codeGenerator15);
        org.junit.Assert.assertNull(codeGenerator16);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(sTGroup20);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
        org.junit.Assert.assertNotNull(strSet29);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "" + "'", str33, "");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNull(sTGroup36);
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "\"\"\"\"" + "'", str42, "\"\"\"\"");
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNull(sTGroup50);
        org.junit.Assert.assertNotNull(strArray53);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "" + "'", str58, "");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "\"\"\"\"\"\"" + "'", str62, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "4.5.2.1" + "'", str66, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "\"\"" + "'", str70, "\"\"");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "4.5.2.1" + "'", str71, "4.5.2.1");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[]");
        org.junit.Assert.assertNotNull(strArray74);
        org.junit.Assert.assertNotNull(strArray75);
        org.junit.Assert.assertNotNull(strArray76);
        org.junit.Assert.assertNotNull(strArray77);
        org.junit.Assert.assertNotNull(strArray78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
    }

    @Test
    public void test1804() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1804");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.lang.String str3 = python3Target1.getTargetStringLiteralFromString("");
        int int4 = python3Target1.getSerializedATNSegmentLimit();
        boolean boolean5 = python3Target1.wantsBaseVisitor();
        java.lang.String str6 = python3Target1.getVersion();
        python3Target1.language = "\"\"\"\"\"\"\"\"";
        org.antlr.v4.codegen.CodeGenerator codeGenerator9 = null;
        java.lang.String str12 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator9, "__tset\"\"\"\"\"\"\"\"ContextContextContext", false);
        org.antlr.v4.codegen.CodeGenerator codeGenerator13 = python3Target1.getCodeGenerator();
        java.lang.String str15 = python3Target1.encodeIntAsCharEscape(100);
        boolean boolean16 = python3Target1.templatesExist();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str18 = python3Target1.getImplicitRuleLabel("\"Hi!Context\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "\"\"" + "'", str3, "\"\"");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 29 + "'", int4 == 29);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "4.5.2.1" + "'", str6, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "_tset\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"ContextContextContex" + "'", str12, "_tset\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"ContextContextContex");
        org.junit.Assert.assertNull(codeGenerator13);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "d" + "'", str15, "d");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    }

    @Test
    public void test1805() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1805");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        java.lang.String str2 = python3Target0.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = null;
        java.lang.String str6 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator3, "", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = null;
        python3Target0.gen = codeGenerator7;
        int int9 = python3Target0.getSerializedATNSegmentLimit();
        org.antlr.v4.tool.Grammar grammar10 = null;
        org.stringtemplate.v4.ST sT11 = null;
        python3Target0.genRecognizerHeaderFile(grammar10, sT11, "_tset12");
        org.stringtemplate.v4.STGroup sTGroup14 = python3Target0.templates;
        org.stringtemplate.v4.STGroup sTGroup15 = python3Target0.templates;
        python3Target0.language = "\\nContext";
        org.antlr.v4.codegen.CodeGenerator codeGenerator18 = python3Target0.gen;
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "4.5.2.1" + "'", str2, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\"\"" + "'", str6, "\"\"");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 29 + "'", int9 == 29);
        org.junit.Assert.assertNull(sTGroup14);
        org.junit.Assert.assertNull(sTGroup15);
        org.junit.Assert.assertNull(codeGenerator18);
    }

    @Test
    public void test1806() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1806");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!", "hi!" };
        python3Target0.targetCharValueEscape = strArray5;
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = null;
        java.lang.String str10 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator7, "", false);
        int int11 = python3Target0.getSerializedATNSegmentLimit();
        java.lang.String str12 = python3Target0.getVersion();
        boolean boolean13 = python3Target0.supportsOverloadedMethods();
        boolean boolean14 = python3Target0.wantsBaseVisitor();
        org.antlr.v4.tool.Grammar grammar15 = null;
        int[] intArray16 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String[] strArray17 = python3Target0.getTokenTypesAsTargetLabels(grammar15, intArray16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 29 + "'", int11 == 29);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "4.5.2.1" + "'", str12, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test1807() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1807");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!", "hi!" };
        python3Target0.targetCharValueEscape = strArray5;
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = null;
        java.lang.String str10 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator7, "", false);
        int int11 = python3Target0.getSerializedATNSegmentLimit();
        java.lang.String str12 = python3Target0.getVersion();
        java.lang.String str14 = python3Target0.getTargetStringLiteralFromString("4.5.2.1");
        org.antlr.v4.codegen.CodeGenerator codeGenerator15 = python3Target0.gen;
        java.lang.String str16 = python3Target0.getLanguage();
        org.antlr.v4.codegen.target.Python3Target python3Target17 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray18 = python3Target17.targetCharValueEscape;
        java.lang.String str19 = python3Target17.language;
        int int20 = python3Target17.getSerializedATNSegmentLimit();
        java.util.Set<java.lang.String> strSet21 = python3Target17.badWords;
        python3Target0.badWords = strSet21;
        // The following exception was thrown during execution in test generation
        try {
            org.stringtemplate.v4.STGroup sTGroup23 = python3Target0.getTemplates();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 29 + "'", int11 == 29);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "4.5.2.1" + "'", str12, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "\"4.5.2.1\"" + "'", str14, "\"4.5.2.1\"");
        org.junit.Assert.assertNull(codeGenerator15);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 29 + "'", int20 == 29);
        org.junit.Assert.assertNotNull(strSet21);
    }

    @Test
    public void test1808() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1808");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.lang.String str3 = python3Target1.getTargetStringLiteralFromString("");
        int int4 = python3Target1.getSerializedATNSegmentLimit();
        java.lang.String str5 = python3Target1.getLanguage();
        java.lang.String str7 = python3Target1.encodeIntAsCharEscape((int) (short) 0);
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = null;
        python3Target1.gen = codeGenerator8;
        java.util.Set<java.lang.String> strSet10 = python3Target1.badWords;
        org.antlr.v4.tool.ast.GrammarAST grammarAST11 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str12 = python3Target1.getLoopLabel(grammarAST11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "\"\"" + "'", str3, "\"\"");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 29 + "'", int4 == 29);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Python3" + "'", str5, "Python3");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "\\0" + "'", str7, "\\0");
        org.junit.Assert.assertNotNull(strSet10);
    }

    @Test
    public void test1809() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1809");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python3Target1.getBadWords();
        java.lang.String str4 = python3Target1.getAltLabelContextStructName("d");
        org.stringtemplate.v4.STGroup sTGroup5 = python3Target1.getTemplates();
        boolean boolean6 = python3Target1.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup7 = python3Target1.getTemplates();
        python3Target1.language = "\"\"";
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = null;
        java.lang.String str13 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator10, "\\\"4.5.2.1\\\"", false);
        org.antlr.v4.codegen.CodeGenerator codeGenerator14 = python3Target1.gen;
        python3Target1.language = "\"\"\"\"\"\"\"\"ContextContextContext";
        java.lang.String str17 = python3Target1.language;
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "DContext" + "'", str4, "DContext");
        org.junit.Assert.assertNotNull(sTGroup5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(sTGroup7);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "\\\"4.5.2.1\\\"" + "'", str13, "\\\"4.5.2.1\\\"");
        org.junit.Assert.assertNull(codeGenerator14);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "\"\"\"\"\"\"\"\"ContextContextContext" + "'", str17, "\"\"\"\"\"\"\"\"ContextContextContext");
    }

    @Test
    public void test1810() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1810");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.lang.String str3 = python3Target1.getTargetStringLiteralFromString("");
        int int4 = python3Target1.getSerializedATNSegmentLimit();
        boolean boolean5 = python3Target1.wantsBaseVisitor();
        org.stringtemplate.v4.STGroup sTGroup6 = python3Target1.loadTemplates();
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = python3Target1.gen;
        boolean boolean8 = python3Target1.wantsBaseListener();
        int int9 = python3Target1.getSerializedATNSegmentLimit();
        org.antlr.v4.codegen.target.Python3Target python3Target10 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean11 = python3Target10.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup12 = python3Target10.templates;
        org.antlr.v4.tool.Grammar grammar13 = null;
        org.stringtemplate.v4.ST sT14 = null;
        python3Target10.genRecognizerHeaderFile(grammar13, sT14, "");
        python3Target10.language = "Python3";
        java.util.Set<java.lang.String> strSet19 = null;
        python3Target10.badWords = strSet19;
        org.antlr.v4.codegen.CodeGenerator codeGenerator21 = null;
        java.lang.String str24 = python3Target10.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator21, "\"Hi!Context\"", false);
        java.lang.String str26 = python3Target10.getListLabel("Python3");
        org.antlr.v4.codegen.CodeGenerator codeGenerator27 = python3Target10.getCodeGenerator();
        org.antlr.v4.codegen.target.Python3Target python3Target28 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean29 = python3Target28.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup30 = python3Target28.templates;
        org.antlr.v4.tool.Grammar grammar31 = null;
        org.stringtemplate.v4.ST sT32 = null;
        python3Target28.genRecognizerHeaderFile(grammar31, sT32, "");
        python3Target28.language = "Python3";
        java.util.Set<java.lang.String> strSet37 = null;
        python3Target28.badWords = strSet37;
        org.antlr.v4.codegen.CodeGenerator codeGenerator39 = null;
        java.lang.String str42 = python3Target28.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator39, "\"Hi!Context\"", false);
        java.lang.String str44 = python3Target28.getListLabel("Python3");
        java.lang.String str46 = python3Target28.getTargetStringLiteralFromString("\\0");
        org.antlr.v4.tool.Grammar grammar47 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target48 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str50 = python3Target48.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.tool.Grammar grammar51 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target52 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean53 = python3Target52.supportsOverloadedMethods();
        java.lang.String str54 = python3Target52.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator55 = null;
        java.lang.String str58 = python3Target52.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator55, "", true);
        java.lang.String str59 = python3Target52.getVersion();
        org.antlr.v4.tool.Grammar grammar60 = null;
        int[] intArray61 = new int[] {};
        java.lang.String[] strArray62 = python3Target52.getTokenTypesAsTargetLabels(grammar60, intArray61);
        java.lang.String[] strArray63 = python3Target48.getTokenTypesAsTargetLabels(grammar51, intArray61);
        java.lang.String[] strArray64 = python3Target28.getTokenTypesAsTargetLabels(grammar47, intArray61);
        org.stringtemplate.v4.STGroup sTGroup65 = python3Target28.getTemplates();
        python3Target28.language = "\"\"4.5.2.1\"\"";
        org.stringtemplate.v4.STGroup sTGroup68 = python3Target28.getTemplates();
        python3Target10.templates = sTGroup68;
        python3Target1.templates = sTGroup68;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str72 = python3Target1.getImplicitTokenLabel("_tset\"\"\\1\"\"Context");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "\"\"" + "'", str3, "\"\"");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 29 + "'", int4 == 29);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(sTGroup6);
        org.junit.Assert.assertNull(codeGenerator7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 29 + "'", int9 == 29);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(sTGroup12);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "Hi!Context" + "'", str24, "Hi!Context");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "Python3" + "'", str26, "Python3");
        org.junit.Assert.assertNull(codeGenerator27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNull(sTGroup30);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "Hi!Context" + "'", str42, "Hi!Context");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "Python3" + "'", str44, "Python3");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "\"\\0\"" + "'", str46, "\"\\0\"");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "\"\"\"\"\"\"" + "'", str50, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "4.5.2.1" + "'", str54, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "\"\"" + "'", str58, "\"\"");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "4.5.2.1" + "'", str59, "4.5.2.1");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[]");
        org.junit.Assert.assertNotNull(strArray62);
        org.junit.Assert.assertNotNull(strArray63);
        org.junit.Assert.assertNotNull(strArray64);
        org.junit.Assert.assertNotNull(sTGroup65);
        org.junit.Assert.assertNotNull(sTGroup68);
    }

    @Test
    public void test1811() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1811");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        java.lang.String str2 = python3Target0.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = null;
        java.lang.String str6 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator3, "", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = null;
        python3Target0.gen = codeGenerator7;
        java.lang.String[] strArray16 = new java.lang.String[] { "\"\"\"\"", "\\12", "\"\"", "4.5.2.1", "", "\"\"\"\"", "\"\"" };
        java.util.LinkedHashSet<java.lang.String> strSet17 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet17, strArray16);
        python3Target0.badWords = strSet17;
        org.antlr.v4.tool.Grammar grammar20 = null;
        org.stringtemplate.v4.ST sT21 = null;
        python3Target0.genRecognizerHeaderFile(grammar20, sT21, "\"\"");
        java.lang.String str25 = python3Target0.encodeIntAsCharEscape((int) (byte) 10);
        java.lang.String str26 = python3Target0.language;
        java.util.Set<java.lang.String> strSet27 = python3Target0.getBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator28 = null;
        java.lang.String str31 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator28, "", false);
        java.util.Set<java.lang.String> strSet32 = python3Target0.badWords;
        boolean boolean33 = python3Target0.supportsOverloadedMethods();
        boolean boolean34 = python3Target0.supportsOverloadedMethods();
        java.lang.String str37 = python3Target0.getTargetStringLiteralFromString("_\"4.5.2.1\"", false);
        org.antlr.v4.codegen.CodeGenerator codeGenerator38 = python3Target0.getCodeGenerator();
        org.antlr.v4.codegen.CodeGenerator codeGenerator39 = null;
        python3Target0.gen = codeGenerator39;
        // The following exception was thrown during execution in test generation
        try {
            org.stringtemplate.v4.STGroup sTGroup41 = python3Target0.getTemplates();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "4.5.2.1" + "'", str2, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\"\"" + "'", str6, "\"\"");
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "\\12" + "'", str25, "\\12");
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(strSet27);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "" + "'", str31, "");
        org.junit.Assert.assertNotNull(strSet32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "_\"4.5.2.1\"" + "'", str37, "_\"4.5.2.1\"");
        org.junit.Assert.assertNull(codeGenerator38);
    }

    @Test
    public void test1812() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1812");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.lang.String str3 = python3Target1.getTargetStringLiteralFromString("");
        int int4 = python3Target1.getSerializedATNSegmentLimit();
        boolean boolean5 = python3Target1.wantsBaseVisitor();
        org.stringtemplate.v4.STGroup sTGroup6 = python3Target1.loadTemplates();
        java.lang.String str7 = python3Target1.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup8 = python3Target1.loadTemplates();
        java.util.Set<java.lang.String> strSet9 = python3Target1.badWords;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str11 = python3Target1.getElementListName("\"\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "\"\"" + "'", str3, "\"\"");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 29 + "'", int4 == 29);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(sTGroup6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Python3" + "'", str7, "Python3");
        org.junit.Assert.assertNotNull(sTGroup8);
        org.junit.Assert.assertNotNull(strSet9);
    }

    @Test
    public void test1813() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1813");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.lang.String str3 = python3Target1.getTargetStringLiteralFromString("");
        int int4 = python3Target1.getSerializedATNSegmentLimit();
        boolean boolean5 = python3Target1.wantsBaseVisitor();
        org.stringtemplate.v4.STGroup sTGroup6 = python3Target1.loadTemplates();
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = python3Target1.gen;
        org.antlr.v4.codegen.target.Python3Target python3Target8 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean9 = python3Target8.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup10 = python3Target8.templates;
        org.antlr.v4.tool.Grammar grammar11 = null;
        org.stringtemplate.v4.ST sT12 = null;
        python3Target8.genRecognizerHeaderFile(grammar11, sT12, "");
        python3Target8.language = "Python3";
        int int17 = python3Target8.getSerializedATNSegmentLimit();
        org.stringtemplate.v4.STGroup sTGroup18 = python3Target8.loadTemplates();
        python3Target1.templates = sTGroup18;
        org.antlr.v4.codegen.CodeGenerator codeGenerator20 = null;
        python3Target1.gen = codeGenerator20;
        java.lang.String str23 = python3Target1.getListLabel("\"\\\"\\\"\\\\1\\\"\\\"\"");
        org.antlr.v4.tool.Grammar grammar24 = null;
        org.stringtemplate.v4.ST sT25 = null;
        // The following exception was thrown during execution in test generation
        try {
            python3Target1.genFile(grammar24, sT25, "\"DContext\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "\"\"" + "'", str3, "\"\"");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 29 + "'", int4 == 29);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(sTGroup6);
        org.junit.Assert.assertNull(codeGenerator7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(sTGroup10);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 29 + "'", int17 == 29);
        org.junit.Assert.assertNotNull(sTGroup18);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "\"\\\"\\\"\\\\1\\\"\\\"\"" + "'", str23, "\"\\\"\\\"\\\\1\\\"\\\"\"");
    }

    @Test
    public void test1814() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1814");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        python3Target0.language = "";
        org.antlr.v4.codegen.target.Python3Target python3Target3 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean4 = python3Target3.supportsOverloadedMethods();
        java.lang.String str5 = python3Target3.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = null;
        java.lang.String str9 = python3Target3.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator6, "", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = null;
        python3Target3.gen = codeGenerator10;
        java.lang.String[] strArray19 = new java.lang.String[] { "\"\"\"\"", "\\12", "\"\"", "4.5.2.1", "", "\"\"\"\"", "\"\"" };
        java.util.LinkedHashSet<java.lang.String> strSet20 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet20, strArray19);
        python3Target3.badWords = strSet20;
        python3Target0.badWords = strSet20;
        python3Target0.addBadWords();
        java.util.Set<java.lang.String> strSet25 = python3Target0.badWords;
        org.antlr.v4.codegen.CodeGenerator codeGenerator26 = python3Target0.gen;
        // The following exception was thrown during execution in test generation
        try {
            org.stringtemplate.v4.STGroup sTGroup27 = python3Target0.getTemplates();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "4.5.2.1" + "'", str5, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\"\"" + "'", str9, "\"\"");
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(strSet25);
        org.junit.Assert.assertNull(codeGenerator26);
    }

    @Test
    public void test1815() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1815");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        python3Target0.language = "";
        org.antlr.v4.codegen.target.Python3Target python3Target3 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean4 = python3Target3.supportsOverloadedMethods();
        java.lang.String str5 = python3Target3.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = null;
        java.lang.String str9 = python3Target3.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator6, "", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = null;
        python3Target3.gen = codeGenerator10;
        java.lang.String[] strArray19 = new java.lang.String[] { "\"\"\"\"", "\\12", "\"\"", "4.5.2.1", "", "\"\"\"\"", "\"\"" };
        java.util.LinkedHashSet<java.lang.String> strSet20 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet20, strArray19);
        python3Target3.badWords = strSet20;
        python3Target0.badWords = strSet20;
        java.lang.String str25 = python3Target0.encodeIntAsCharEscape((int) (byte) 100);
        java.lang.String str26 = python3Target0.getLanguage();
        boolean boolean27 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup28 = python3Target0.templates;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str30 = python3Target0.getListLabel("\"_\"\\1\"\"Context");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "4.5.2.1" + "'", str5, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\"\"" + "'", str9, "\"\"");
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "d" + "'", str25, "d");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNull(sTGroup28);
    }

    @Test
    public void test1816() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1816");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray1 = python3Target0.targetCharValueEscape;
        python3Target0.addBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target4 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator3);
        java.lang.String str6 = python3Target4.getTargetStringLiteralFromString("");
        int int7 = python3Target4.getSerializedATNSegmentLimit();
        boolean boolean8 = python3Target4.wantsBaseVisitor();
        org.stringtemplate.v4.STGroup sTGroup9 = python3Target4.loadTemplates();
        python3Target0.templates = sTGroup9;
        boolean boolean11 = python3Target0.wantsBaseListener();
        java.lang.String[] strArray12 = python3Target0.targetCharValueEscape;
        org.antlr.v4.tool.ast.GrammarAST grammarAST13 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean14 = python3Target0.grammarSymbolCausesIssueInGeneratedCode(grammarAST13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\"\"" + "'", str6, "\"\"");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 29 + "'", int7 == 29);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(sTGroup9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(strArray12);
    }

    @Test
    public void test1817() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1817");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.lang.String str2 = python3Target1.getLanguage();
        java.lang.String str4 = python3Target1.getImplicitSetLabel("Python3");
        org.antlr.v4.codegen.CodeGenerator codeGenerator5 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target6 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator5);
        java.util.Set<java.lang.String> strSet7 = python3Target6.getBadWords();
        python3Target1.badWords = strSet7;
        java.lang.String str10 = python3Target1.getListLabel("\"hi!\"");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str12 = python3Target1.getElementName("\"_\\\\\\\"_\\\\\\\"\\\\\\\"\\\\\\\"DContext\\\\\\\"\\\\\\\"Context\\\\\\\"\\\\\\\"\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "Python3" + "'", str2, "Python3");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "_tsetPython3" + "'", str4, "_tsetPython3");
        org.junit.Assert.assertNotNull(strSet7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\"hi!\"" + "'", str10, "\"hi!\"");
    }

    @Test
    public void test1818() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1818");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!", "hi!" };
        python3Target0.targetCharValueEscape = strArray5;
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = null;
        java.lang.String str10 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator7, "", false);
        int int11 = python3Target0.getSerializedATNSegmentLimit();
        java.lang.String str12 = python3Target0.getVersion();
        boolean boolean13 = python3Target0.supportsOverloadedMethods();
        org.antlr.v4.codegen.CodeGenerator codeGenerator14 = python3Target0.getCodeGenerator();
        java.lang.String str15 = python3Target0.language;
        org.antlr.v4.codegen.CodeGenerator codeGenerator16 = python3Target0.gen;
        org.antlr.v4.tool.ast.GrammarAST grammarAST17 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean18 = python3Target0.visibleGrammarSymbolCausesIssueInGeneratedCode(grammarAST17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 29 + "'", int11 == 29);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "4.5.2.1" + "'", str12, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(codeGenerator14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNull(codeGenerator16);
    }

    @Test
    public void test1819() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1819");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.lang.String str2 = python3Target1.getLanguage();
        java.lang.String str4 = python3Target1.getImplicitSetLabel("Python3");
        org.antlr.v4.codegen.CodeGenerator codeGenerator5 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target6 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator5);
        java.util.Set<java.lang.String> strSet7 = python3Target6.getBadWords();
        python3Target1.badWords = strSet7;
        boolean boolean9 = python3Target1.wantsBaseVisitor();
        int int10 = python3Target1.getSerializedATNSegmentLimit();
        org.antlr.v4.codegen.model.RuleFunction ruleFunction11 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str12 = python3Target1.getRuleFunctionContextStructName(ruleFunction11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "Python3" + "'", str2, "Python3");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "_tsetPython3" + "'", str4, "_tsetPython3");
        org.junit.Assert.assertNotNull(strSet7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 29 + "'", int10 == 29);
    }

    @Test
    public void test1820() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1820");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        java.util.Set<java.lang.String> strSet2 = python3Target0.badWords;
        int int3 = python3Target0.getSerializedATNSegmentLimit();
        java.lang.String str4 = python3Target0.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator5 = null;
        java.lang.String str8 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator5, "\\35", false);
        org.antlr.v4.tool.Grammar grammar9 = null;
        org.stringtemplate.v4.ST sT10 = null;
        // The following exception was thrown during execution in test generation
        try {
            python3Target0.genFile(grammar9, sT10, "12Context");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 29 + "'", int3 == 29);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "3" + "'", str8, "3");
    }

    @Test
    public void test1821() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1821");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!", "hi!" };
        python3Target0.targetCharValueEscape = strArray5;
        java.lang.String str8 = python3Target0.getTargetStringLiteralFromString("\"\"");
        org.stringtemplate.v4.STGroup sTGroup9 = null;
        python3Target0.templates = sTGroup9;
        org.antlr.v4.codegen.CodeGenerator codeGenerator11 = python3Target0.getCodeGenerator();
        int int12 = python3Target0.getInlineTestSetWordSize();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str14 = python3Target0.getAltLabelContextStructName("\".5.2.\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\"\"\"\"" + "'", str8, "\"\"\"\"");
        org.junit.Assert.assertNull(codeGenerator11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 64 + "'", int12 == 64);
    }

    @Test
    public void test1822() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1822");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python3Target1.getBadWords();
        org.antlr.v4.codegen.target.Python3Target python3Target3 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str5 = python3Target3.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.codegen.target.Python3Target python3Target6 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean7 = python3Target6.supportsOverloadedMethods();
        java.util.Set<java.lang.String> strSet8 = python3Target6.badWords;
        python3Target3.badWords = strSet8;
        python3Target1.badWords = strSet8;
        java.util.Set<java.lang.String> strSet11 = python3Target1.badWords;
        org.antlr.v4.codegen.CodeGenerator codeGenerator12 = python3Target1.getCodeGenerator();
        org.antlr.v4.tool.Grammar grammar13 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target14 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean15 = python3Target14.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup16 = python3Target14.templates;
        org.antlr.v4.tool.Grammar grammar17 = null;
        org.stringtemplate.v4.ST sT18 = null;
        python3Target14.genRecognizerHeaderFile(grammar17, sT18, "");
        python3Target14.language = "Python3";
        java.util.Set<java.lang.String> strSet23 = null;
        python3Target14.badWords = strSet23;
        org.antlr.v4.codegen.CodeGenerator codeGenerator25 = null;
        java.lang.String str28 = python3Target14.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator25, "\"Hi!Context\"", false);
        java.lang.String str30 = python3Target14.getListLabel("Python3");
        java.lang.String str32 = python3Target14.getTargetStringLiteralFromString("\\0");
        org.antlr.v4.tool.Grammar grammar33 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target34 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str36 = python3Target34.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.tool.Grammar grammar37 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target38 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean39 = python3Target38.supportsOverloadedMethods();
        java.lang.String str40 = python3Target38.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator41 = null;
        java.lang.String str44 = python3Target38.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator41, "", true);
        java.lang.String str45 = python3Target38.getVersion();
        org.antlr.v4.tool.Grammar grammar46 = null;
        int[] intArray47 = new int[] {};
        java.lang.String[] strArray48 = python3Target38.getTokenTypesAsTargetLabels(grammar46, intArray47);
        java.lang.String[] strArray49 = python3Target34.getTokenTypesAsTargetLabels(grammar37, intArray47);
        java.lang.String[] strArray50 = python3Target14.getTokenTypesAsTargetLabels(grammar33, intArray47);
        java.lang.String[] strArray51 = python3Target1.getTokenTypesAsTargetLabels(grammar13, intArray47);
        java.lang.String str54 = python3Target1.getTargetStringLiteralFromString("\"DContext\"", true);
        python3Target1.language = "12Context";
        org.stringtemplate.v4.STGroup sTGroup57 = python3Target1.templates;
        org.stringtemplate.v4.STGroup sTGroup58 = python3Target1.templates;
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "\"\"\"\"\"\"" + "'", str5, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertNotNull(strSet11);
        org.junit.Assert.assertNull(codeGenerator12);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(sTGroup16);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "Hi!Context" + "'", str28, "Hi!Context");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "Python3" + "'", str30, "Python3");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "\"\\0\"" + "'", str32, "\"\\0\"");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "\"\"\"\"\"\"" + "'", str36, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "4.5.2.1" + "'", str40, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "\"\"" + "'", str44, "\"\"");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "4.5.2.1" + "'", str45, "4.5.2.1");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[]");
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertNotNull(strArray49);
        org.junit.Assert.assertNotNull(strArray50);
        org.junit.Assert.assertNotNull(strArray51);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "\"\\\"DContext\\\"\"" + "'", str54, "\"\\\"DContext\\\"\"");
        org.junit.Assert.assertNull(sTGroup57);
        org.junit.Assert.assertNull(sTGroup58);
    }

    @Test
    public void test1823() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1823");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str2 = python3Target0.getTargetStringLiteralFromString("\"\"\"\"");
        java.lang.String str4 = python3Target0.getTargetStringLiteralFromString("");
        org.antlr.v4.codegen.target.Python3Target python3Target5 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean6 = python3Target5.supportsOverloadedMethods();
        java.lang.String str7 = python3Target5.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = null;
        java.lang.String str11 = python3Target5.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator8, "", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator12 = null;
        python3Target5.gen = codeGenerator12;
        java.lang.String[] strArray21 = new java.lang.String[] { "\"\"\"\"", "\\12", "\"\"", "4.5.2.1", "", "\"\"\"\"", "\"\"" };
        java.util.LinkedHashSet<java.lang.String> strSet22 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet22, strArray21);
        python3Target5.badWords = strSet22;
        org.antlr.v4.tool.Grammar grammar25 = null;
        org.stringtemplate.v4.ST sT26 = null;
        python3Target5.genRecognizerHeaderFile(grammar25, sT26, "\"\"");
        python3Target5.addBadWords();
        java.util.Set<java.lang.String> strSet30 = python3Target5.badWords;
        python3Target0.badWords = strSet30;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str33 = python3Target0.getListLabel("_tset\"\\\\0\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "\"\"\"\"\"\"" + "'", str2, "\"\"\"\"\"\"");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "\"\"" + "'", str4, "\"\"");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "4.5.2.1" + "'", str7, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "\"\"" + "'", str11, "\"\"");
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(strSet30);
    }

    @Test
    public void test1824() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1824");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        java.lang.String str2 = python3Target0.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = null;
        java.lang.String str6 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator3, "", true);
        java.lang.String str7 = python3Target0.getVersion();
        org.antlr.v4.tool.Grammar grammar8 = null;
        int[] intArray9 = new int[] {};
        java.lang.String[] strArray10 = python3Target0.getTokenTypesAsTargetLabels(grammar8, intArray9);
        java.lang.String[] strArray11 = python3Target0.targetCharValueEscape;
        java.util.Set<java.lang.String> strSet12 = python3Target0.badWords;
        org.antlr.v4.tool.Grammar grammar13 = null;
        org.stringtemplate.v4.ST sT14 = null;
        python3Target0.genRecognizerHeaderFile(grammar13, sT14, "\"_tset_\\\"\\\"\\\\\\\"DContext\\\\\\\"\\\"\\\"\"");
        boolean boolean17 = python3Target0.wantsBaseListener();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "4.5.2.1" + "'", str2, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\"\"" + "'", str6, "\"\"");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "4.5.2.1" + "'", str7, "4.5.2.1");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[]");
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    }

    @Test
    public void test1825() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1825");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        python3Target0.language = "4.5.2.1";
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = python3Target0.getCodeGenerator();
        org.antlr.v4.codegen.CodeGenerator codeGenerator4 = python3Target0.gen;
        org.antlr.v4.codegen.CodeGenerator codeGenerator5 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target6 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator5);
        java.lang.String str8 = python3Target6.getTargetStringLiteralFromString("");
        int int9 = python3Target6.getSerializedATNSegmentLimit();
        boolean boolean10 = python3Target6.wantsBaseVisitor();
        org.stringtemplate.v4.STGroup sTGroup11 = python3Target6.loadTemplates();
        python3Target0.templates = sTGroup11;
        java.lang.String str13 = python3Target0.language;
        java.lang.String str15 = python3Target0.getTargetStringLiteralFromString("\"\\0\"");
        org.antlr.v4.tool.Rule rule16 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str17 = python3Target0.getRuleFunctionContextStructName(rule16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(codeGenerator3);
        org.junit.Assert.assertNull(codeGenerator4);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\"\"" + "'", str8, "\"\"");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 29 + "'", int9 == 29);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(sTGroup11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "4.5.2.1" + "'", str13, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "\"\"\\0\"\"" + "'", str15, "\"\"\\0\"\"");
    }

    @Test
    public void test1826() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1826");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.lang.String str2 = python3Target1.getLanguage();
        java.lang.String str4 = python3Target1.getImplicitSetLabel("Python3");
        org.antlr.v4.codegen.CodeGenerator codeGenerator5 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target6 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator5);
        java.util.Set<java.lang.String> strSet7 = python3Target6.getBadWords();
        python3Target1.badWords = strSet7;
        boolean boolean9 = python3Target1.wantsBaseVisitor();
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = null;
        python3Target1.gen = codeGenerator10;
        org.antlr.v4.tool.Rule rule12 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str13 = python3Target1.getRuleFunctionContextStructName(rule12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "Python3" + "'", str2, "Python3");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "_tsetPython3" + "'", str4, "_tsetPython3");
        org.junit.Assert.assertNotNull(strSet7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test1827() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1827");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        org.antlr.v4.tool.Grammar grammar3 = null;
        org.stringtemplate.v4.ST sT4 = null;
        python3Target0.genRecognizerHeaderFile(grammar3, sT4, "");
        org.antlr.v4.codegen.target.Python3Target python3Target7 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray8 = python3Target7.targetCharValueEscape;
        python3Target0.targetCharValueEscape = strArray8;
        boolean boolean10 = python3Target0.supportsOverloadedMethods();
        boolean boolean11 = python3Target0.wantsBaseListener();
        java.lang.String str13 = python3Target0.getTargetStringLiteralFromString("_tset12");
        org.antlr.v4.codegen.target.Python3Target python3Target14 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray15 = python3Target14.targetCharValueEscape;
        java.lang.String str16 = python3Target14.language;
        int int17 = python3Target14.getSerializedATNSegmentLimit();
        org.antlr.v4.codegen.CodeGenerator codeGenerator18 = null;
        python3Target14.gen = codeGenerator18;
        org.antlr.v4.codegen.CodeGenerator codeGenerator20 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target21 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator20);
        java.util.Set<java.lang.String> strSet22 = python3Target21.getBadWords();
        java.lang.String str24 = python3Target21.getAltLabelContextStructName("d");
        org.stringtemplate.v4.STGroup sTGroup25 = python3Target21.getTemplates();
        python3Target14.templates = sTGroup25;
        python3Target0.templates = sTGroup25;
        org.stringtemplate.v4.STGroup sTGroup28 = python3Target0.getTemplates();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "\"_tset12\"" + "'", str13, "\"_tset12\"");
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 29 + "'", int17 == 29);
        org.junit.Assert.assertNotNull(strSet22);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "DContext" + "'", str24, "DContext");
        org.junit.Assert.assertNotNull(sTGroup25);
        org.junit.Assert.assertNotNull(sTGroup28);
    }

    @Test
    public void test1828() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1828");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python3Target1.getBadWords();
        org.antlr.v4.codegen.target.Python3Target python3Target3 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str5 = python3Target3.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.codegen.target.Python3Target python3Target6 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean7 = python3Target6.supportsOverloadedMethods();
        java.util.Set<java.lang.String> strSet8 = python3Target6.badWords;
        python3Target3.badWords = strSet8;
        python3Target1.badWords = strSet8;
        java.util.Set<java.lang.String> strSet11 = python3Target1.badWords;
        org.antlr.v4.codegen.CodeGenerator codeGenerator12 = python3Target1.getCodeGenerator();
        java.lang.String str14 = python3Target1.getImplicitRuleLabel("\\\"\\\\\\\"\\\\\\\"hi!\\\\\\\"\\\\\\\"\\\"");
        org.antlr.v4.tool.ast.GrammarAST grammarAST15 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean16 = python3Target1.grammarSymbolCausesIssueInGeneratedCode(grammarAST15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "\"\"\"\"\"\"" + "'", str5, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertNotNull(strSet11);
        org.junit.Assert.assertNull(codeGenerator12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "_\\\"\\\\\\\"\\\\\\\"hi!\\\\\\\"\\\\\\\"\\\"" + "'", str14, "_\\\"\\\\\\\"\\\\\\\"hi!\\\\\\\"\\\\\\\"\\\"");
    }

    @Test
    public void test1829() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1829");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray1 = python3Target0.targetCharValueEscape;
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = null;
        java.lang.String str6 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator3, "\"\\12\"", false);
        int int7 = python3Target0.getInlineTestSetWordSize();
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = python3Target0.getCodeGenerator();
        org.antlr.v4.codegen.CodeGenerator codeGenerator9 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target10 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator9);
        java.lang.String str12 = python3Target10.getTargetStringLiteralFromString("");
        int int13 = python3Target10.getSerializedATNSegmentLimit();
        java.lang.String str14 = python3Target10.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup15 = python3Target10.loadTemplates();
        python3Target0.templates = sTGroup15;
        int int17 = python3Target0.getInlineTestSetWordSize();
        boolean boolean18 = python3Target0.wantsBaseVisitor();
        java.lang.String str19 = python3Target0.language;
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "12" + "'", str6, "12");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 64 + "'", int7 == 64);
        org.junit.Assert.assertNull(codeGenerator8);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "\"\"" + "'", str12, "\"\"");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 29 + "'", int13 == 29);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Python3" + "'", str14, "Python3");
        org.junit.Assert.assertNotNull(sTGroup15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 64 + "'", int17 == 64);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(str19);
    }

    @Test
    public void test1830() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1830");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray1 = python3Target0.targetCharValueEscape;
        java.lang.String str2 = python3Target0.language;
        int int3 = python3Target0.getSerializedATNSegmentLimit();
        org.antlr.v4.codegen.CodeGenerator codeGenerator4 = python3Target0.getCodeGenerator();
        org.antlr.v4.codegen.CodeGenerator codeGenerator5 = null;
        java.lang.String str8 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator5, "_tset\"\\\"\\\"hi!\\\"\\\"\"", true);
        org.antlr.v4.tool.ast.GrammarAST grammarAST9 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean10 = python3Target0.grammarSymbolCausesIssueInGeneratedCode(grammarAST9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 29 + "'", int3 == 29);
        org.junit.Assert.assertNull(codeGenerator4);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\"tset\\\"\\\"\\\"hi!\\\"\\\"\"" + "'", str8, "\"tset\\\"\\\"\\\"hi!\\\"\\\"\"");
    }

    @Test
    public void test1831() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1831");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!", "hi!" };
        python3Target0.targetCharValueEscape = strArray5;
        java.lang.String str8 = python3Target0.getTargetStringLiteralFromString("\"\"");
        java.lang.String str10 = python3Target0.getTargetStringLiteralFromString("\"\"");
        java.lang.String str11 = python3Target0.getLanguage();
        int int12 = python3Target0.getInlineTestSetWordSize();
        boolean boolean13 = python3Target0.wantsBaseVisitor();
        java.lang.String str14 = python3Target0.getLanguage();
        org.antlr.v4.codegen.target.Python3Target python3Target15 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean16 = python3Target15.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup17 = python3Target15.templates;
        java.lang.String[] strArray20 = new java.lang.String[] { "hi!", "hi!" };
        python3Target15.targetCharValueEscape = strArray20;
        org.antlr.v4.codegen.CodeGenerator codeGenerator22 = null;
        java.lang.String str25 = python3Target15.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator22, "", false);
        int int26 = python3Target15.getSerializedATNSegmentLimit();
        java.lang.String str27 = python3Target15.getVersion();
        boolean boolean28 = python3Target15.supportsOverloadedMethods();
        org.antlr.v4.codegen.target.Python3Target python3Target29 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean30 = python3Target29.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup31 = python3Target29.templates;
        java.lang.String[] strArray34 = new java.lang.String[] { "hi!", "hi!" };
        python3Target29.targetCharValueEscape = strArray34;
        java.lang.String[] strArray37 = new java.lang.String[] { "hi!" };
        org.antlr.v4.codegen.target.Python3Target.python3Keywords = strArray37;
        python3Target29.targetCharValueEscape = strArray37;
        org.antlr.v4.codegen.target.Python3Target.python3Keywords = strArray37;
        python3Target15.targetCharValueEscape = strArray37;
        python3Target0.targetCharValueEscape = strArray37;
        org.antlr.v4.codegen.CodeGenerator codeGenerator43 = null;
        python3Target0.gen = codeGenerator43;
        java.lang.String str45 = python3Target0.language;
        org.antlr.v4.tool.Grammar grammar46 = null;
        org.stringtemplate.v4.ST sT47 = null;
        python3Target0.genRecognizerHeaderFile(grammar46, sT47, "\"_tset\"\\\\0\"\"");
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\"\"\"\"" + "'", str8, "\"\"\"\"");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\"\"\"\"" + "'", str10, "\"\"\"\"");
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 64 + "'", int12 == 64);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(sTGroup17);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 29 + "'", int26 == 29);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "4.5.2.1" + "'", str27, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNull(sTGroup31);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertNull(str45);
    }

    @Test
    public void test1832() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1832");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.lang.String str3 = python3Target1.getTargetStringLiteralFromString("");
        python3Target1.language = "";
        java.lang.String str8 = python3Target1.getTargetStringLiteralFromString("\"4.5.2.1\"", false);
        java.lang.String[] strArray10 = new java.lang.String[] { "hi!" };
        org.antlr.v4.codegen.target.Python3Target.python3Keywords = strArray10;
        python3Target1.targetCharValueEscape = strArray10;
        boolean boolean13 = python3Target1.supportsOverloadedMethods();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "\"\"" + "'", str3, "\"\"");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\\\"4.5.2.1\\\"" + "'", str8, "\\\"4.5.2.1\\\"");
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test1833() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1833");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        org.antlr.v4.tool.Grammar grammar3 = null;
        org.stringtemplate.v4.ST sT4 = null;
        python3Target0.genRecognizerHeaderFile(grammar3, sT4, "");
        python3Target0.language = "Python3";
        java.util.Set<java.lang.String> strSet9 = null;
        python3Target0.badWords = strSet9;
        org.antlr.v4.codegen.CodeGenerator codeGenerator11 = null;
        java.lang.String str14 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator11, "\"Hi!Context\"", false);
        java.lang.String str16 = python3Target0.getListLabel("Python3");
        java.util.Set<java.lang.String> strSet17 = python3Target0.badWords;
        java.lang.String str18 = python3Target0.language;
        // The following exception was thrown during execution in test generation
        try {
            python3Target0.addBadWords();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Hi!Context" + "'", str14, "Hi!Context");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Python3" + "'", str16, "Python3");
        org.junit.Assert.assertNull(strSet17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Python3" + "'", str18, "Python3");
    }

    @Test
    public void test1834() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1834");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        java.lang.String str2 = python3Target0.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = null;
        java.lang.String str6 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator3, "", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = null;
        python3Target0.gen = codeGenerator7;
        java.lang.String[] strArray16 = new java.lang.String[] { "\"\"\"\"", "\\12", "\"\"", "4.5.2.1", "", "\"\"\"\"", "\"\"" };
        java.util.LinkedHashSet<java.lang.String> strSet17 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet17, strArray16);
        python3Target0.badWords = strSet17;
        org.antlr.v4.tool.Grammar grammar20 = null;
        org.stringtemplate.v4.ST sT21 = null;
        python3Target0.genRecognizerHeaderFile(grammar20, sT21, "\"\"");
        java.lang.String str25 = python3Target0.encodeIntAsCharEscape((int) (byte) 10);
        java.lang.String str26 = python3Target0.language;
        java.util.Set<java.lang.String> strSet27 = python3Target0.getBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator28 = null;
        java.lang.String str31 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator28, "", false);
        java.util.Set<java.lang.String> strSet32 = python3Target0.badWords;
        boolean boolean33 = python3Target0.supportsOverloadedMethods();
        boolean boolean34 = python3Target0.supportsOverloadedMethods();
        org.antlr.v4.codegen.CodeGenerator codeGenerator35 = python3Target0.gen;
        org.antlr.v4.codegen.CodeGenerator codeGenerator36 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target37 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator36);
        java.util.Set<java.lang.String> strSet38 = python3Target37.getBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator39 = null;
        python3Target37.gen = codeGenerator39;
        java.lang.String str42 = python3Target37.getAltLabelContextStructName("hi!");
        java.lang.String str45 = python3Target37.getTargetStringLiteralFromString("\"hi!\"", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator46 = null;
        python3Target37.gen = codeGenerator46;
        org.antlr.v4.tool.Grammar grammar48 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target49 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray50 = python3Target49.targetCharValueEscape;
        org.stringtemplate.v4.STGroup sTGroup51 = python3Target49.templates;
        int int52 = python3Target49.getInlineTestSetWordSize();
        org.antlr.v4.codegen.CodeGenerator codeGenerator53 = python3Target49.gen;
        org.antlr.v4.tool.Grammar grammar54 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target55 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str57 = python3Target55.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.tool.Grammar grammar58 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target59 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean60 = python3Target59.supportsOverloadedMethods();
        java.lang.String str61 = python3Target59.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator62 = null;
        java.lang.String str65 = python3Target59.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator62, "", true);
        java.lang.String str66 = python3Target59.getVersion();
        org.antlr.v4.tool.Grammar grammar67 = null;
        int[] intArray68 = new int[] {};
        java.lang.String[] strArray69 = python3Target59.getTokenTypesAsTargetLabels(grammar67, intArray68);
        java.lang.String[] strArray70 = python3Target55.getTokenTypesAsTargetLabels(grammar58, intArray68);
        java.lang.String[] strArray71 = python3Target49.getTokenTypesAsTargetLabels(grammar54, intArray68);
        java.lang.String[] strArray72 = python3Target37.getTokenTypesAsTargetLabels(grammar48, intArray68);
        java.lang.String str74 = python3Target37.getAltLabelContextStructName("\"Python3\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator75 = python3Target37.gen;
        int int76 = python3Target37.getSerializedATNSegmentLimit();
        org.stringtemplate.v4.STGroup sTGroup77 = python3Target37.loadTemplates();
        org.stringtemplate.v4.STGroup sTGroup78 = python3Target37.templates;
        python3Target0.templates = sTGroup78;
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "4.5.2.1" + "'", str2, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\"\"" + "'", str6, "\"\"");
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "\\12" + "'", str25, "\\12");
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(strSet27);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "" + "'", str31, "");
        org.junit.Assert.assertNotNull(strSet32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNull(codeGenerator35);
        org.junit.Assert.assertNotNull(strSet38);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "Hi!Context" + "'", str42, "Hi!Context");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "\"\\\"hi!\\\"\"" + "'", str45, "\"\\\"hi!\\\"\"");
        org.junit.Assert.assertNotNull(strArray50);
        org.junit.Assert.assertNull(sTGroup51);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 64 + "'", int52 == 64);
        org.junit.Assert.assertNull(codeGenerator53);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "\"\"\"\"\"\"" + "'", str57, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "4.5.2.1" + "'", str61, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "\"\"" + "'", str65, "\"\"");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "4.5.2.1" + "'", str66, "4.5.2.1");
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[]");
        org.junit.Assert.assertNotNull(strArray69);
        org.junit.Assert.assertNotNull(strArray70);
        org.junit.Assert.assertNotNull(strArray71);
        org.junit.Assert.assertNotNull(strArray72);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "\"Python3\"Context" + "'", str74, "\"Python3\"Context");
        org.junit.Assert.assertNull(codeGenerator75);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 29 + "'", int76 == 29);
        org.junit.Assert.assertNotNull(sTGroup77);
        org.junit.Assert.assertNotNull(sTGroup78);
    }

    @Test
    public void test1835() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1835");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        python3Target0.language = "";
        org.antlr.v4.codegen.target.Python3Target python3Target3 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean4 = python3Target3.supportsOverloadedMethods();
        java.lang.String str5 = python3Target3.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = null;
        java.lang.String str9 = python3Target3.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator6, "", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = null;
        python3Target3.gen = codeGenerator10;
        java.lang.String[] strArray19 = new java.lang.String[] { "\"\"\"\"", "\\12", "\"\"", "4.5.2.1", "", "\"\"\"\"", "\"\"" };
        java.util.LinkedHashSet<java.lang.String> strSet20 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet20, strArray19);
        python3Target3.badWords = strSet20;
        python3Target0.badWords = strSet20;
        python3Target0.addBadWords();
        org.antlr.v4.tool.ast.GrammarAST grammarAST25 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str26 = python3Target0.getLoopLabel(grammarAST25);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "4.5.2.1" + "'", str5, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\"\"" + "'", str9, "\"\"");
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
    }

    @Test
    public void test1836() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1836");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python3Target1.getBadWords();
        org.antlr.v4.codegen.target.Python3Target python3Target3 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str5 = python3Target3.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.codegen.target.Python3Target python3Target6 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean7 = python3Target6.supportsOverloadedMethods();
        java.util.Set<java.lang.String> strSet8 = python3Target6.badWords;
        python3Target3.badWords = strSet8;
        python3Target1.badWords = strSet8;
        java.util.Set<java.lang.String> strSet11 = python3Target1.badWords;
        java.lang.String str12 = python3Target1.language;
        org.stringtemplate.v4.STGroup sTGroup13 = python3Target1.getTemplates();
        boolean boolean14 = python3Target1.wantsBaseVisitor();
        org.antlr.v4.codegen.CodeGenerator codeGenerator15 = python3Target1.gen;
        java.lang.String str17 = python3Target1.getTargetStringLiteralFromString("_tsetPython3");
        python3Target1.language = "\"\"\"\"\"\"\"\"Context";
        java.lang.String str20 = python3Target1.getLanguage();
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "\"\"\"\"\"\"" + "'", str5, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertNotNull(strSet11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Python3" + "'", str12, "Python3");
        org.junit.Assert.assertNotNull(sTGroup13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(codeGenerator15);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "\"_tsetPython3\"" + "'", str17, "\"_tsetPython3\"");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "\"\"\"\"\"\"\"\"Context" + "'", str20, "\"\"\"\"\"\"\"\"Context");
    }

    @Test
    public void test1837() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1837");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!", "hi!" };
        python3Target0.targetCharValueEscape = strArray5;
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = null;
        java.lang.String str10 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator7, "", false);
        int int11 = python3Target0.getSerializedATNSegmentLimit();
        java.lang.String str12 = python3Target0.getVersion();
        boolean boolean13 = python3Target0.supportsOverloadedMethods();
        python3Target0.addBadWords();
        boolean boolean15 = python3Target0.wantsBaseVisitor();
        int int16 = python3Target0.getInlineTestSetWordSize();
        org.antlr.v4.tool.ast.GrammarAST grammarAST17 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str18 = python3Target0.getLoopCounter(grammarAST17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 29 + "'", int11 == 29);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "4.5.2.1" + "'", str12, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 64 + "'", int16 == 64);
    }

    @Test
    public void test1838() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1838");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        python3Target0.language = "";
        org.antlr.v4.codegen.target.Python3Target python3Target3 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean4 = python3Target3.supportsOverloadedMethods();
        java.lang.String str5 = python3Target3.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = null;
        java.lang.String str9 = python3Target3.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator6, "", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = null;
        python3Target3.gen = codeGenerator10;
        java.lang.String[] strArray19 = new java.lang.String[] { "\"\"\"\"", "\\12", "\"\"", "4.5.2.1", "", "\"\"\"\"", "\"\"" };
        java.util.LinkedHashSet<java.lang.String> strSet20 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet20, strArray19);
        python3Target3.badWords = strSet20;
        python3Target0.badWords = strSet20;
        java.lang.String str24 = python3Target0.language;
        boolean boolean25 = python3Target0.supportsOverloadedMethods();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "4.5.2.1" + "'", str5, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\"\"" + "'", str9, "\"\"");
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
    }

    @Test
    public void test1839() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1839");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        org.antlr.v4.tool.Grammar grammar3 = null;
        org.stringtemplate.v4.ST sT4 = null;
        python3Target0.genRecognizerHeaderFile(grammar3, sT4, "");
        python3Target0.language = "Python3";
        java.util.Set<java.lang.String> strSet9 = null;
        python3Target0.badWords = strSet9;
        org.antlr.v4.codegen.CodeGenerator codeGenerator11 = null;
        java.lang.String str14 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator11, "\"Hi!Context\"", false);
        java.lang.String str16 = python3Target0.getListLabel("Python3");
        java.lang.String str18 = python3Target0.getTargetStringLiteralFromString("\\0");
        org.antlr.v4.tool.Grammar grammar19 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target20 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str22 = python3Target20.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.tool.Grammar grammar23 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target24 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean25 = python3Target24.supportsOverloadedMethods();
        java.lang.String str26 = python3Target24.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator27 = null;
        java.lang.String str30 = python3Target24.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator27, "", true);
        java.lang.String str31 = python3Target24.getVersion();
        org.antlr.v4.tool.Grammar grammar32 = null;
        int[] intArray33 = new int[] {};
        java.lang.String[] strArray34 = python3Target24.getTokenTypesAsTargetLabels(grammar32, intArray33);
        java.lang.String[] strArray35 = python3Target20.getTokenTypesAsTargetLabels(grammar23, intArray33);
        java.lang.String[] strArray36 = python3Target0.getTokenTypesAsTargetLabels(grammar19, intArray33);
        org.stringtemplate.v4.STGroup sTGroup37 = python3Target0.getTemplates();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str39 = python3Target0.getElementListName("_tset\"\\\"\\\"\\\"\\\\\\\"\\\\\\\"hi!\\\\\\\"\\\\\\\"\\\"\\\"\\\"\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Hi!Context" + "'", str14, "Hi!Context");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Python3" + "'", str16, "Python3");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "\"\\0\"" + "'", str18, "\"\\0\"");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "\"\"\"\"\"\"" + "'", str22, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "4.5.2.1" + "'", str26, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "\"\"" + "'", str30, "\"\"");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "4.5.2.1" + "'", str31, "4.5.2.1");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[]");
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertNotNull(sTGroup37);
    }

    @Test
    public void test1840() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1840");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        java.lang.String str2 = python3Target0.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = null;
        java.lang.String str6 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator3, "", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = null;
        python3Target0.gen = codeGenerator7;
        java.lang.String[] strArray16 = new java.lang.String[] { "\"\"\"\"", "\\12", "\"\"", "4.5.2.1", "", "\"\"\"\"", "\"\"" };
        java.util.LinkedHashSet<java.lang.String> strSet17 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet17, strArray16);
        python3Target0.badWords = strSet17;
        org.antlr.v4.tool.Grammar grammar20 = null;
        org.stringtemplate.v4.ST sT21 = null;
        python3Target0.genRecognizerHeaderFile(grammar20, sT21, "\"\"");
        python3Target0.addBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator25 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target26 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator25);
        java.lang.String str27 = python3Target26.getVersion();
        int int28 = python3Target26.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet29 = python3Target26.badWords;
        java.util.Set<java.lang.String> strSet30 = python3Target26.getBadWords();
        python3Target0.badWords = strSet30;
        org.antlr.v4.codegen.model.RuleFunction ruleFunction32 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str33 = python3Target0.getRuleFunctionContextStructName(ruleFunction32);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "4.5.2.1" + "'", str2, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\"\"" + "'", str6, "\"\"");
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "4.5.2.1" + "'", str27, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 64 + "'", int28 == 64);
        org.junit.Assert.assertNotNull(strSet29);
        org.junit.Assert.assertNotNull(strSet30);
    }

    @Test
    public void test1841() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1841");
        java.lang.String str1 = org.stringtemplate.v4.StringRenderer.escapeHTML("\\64");
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "\\64" + "'", str1, "\\64");
    }

    @Test
    public void test1842() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1842");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        java.lang.String str2 = python3Target0.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = null;
        java.lang.String str6 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator3, "", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = null;
        python3Target0.gen = codeGenerator7;
        java.lang.String[] strArray16 = new java.lang.String[] { "\"\"\"\"", "\\12", "\"\"", "4.5.2.1", "", "\"\"\"\"", "\"\"" };
        java.util.LinkedHashSet<java.lang.String> strSet17 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet17, strArray16);
        python3Target0.badWords = strSet17;
        org.antlr.v4.tool.Grammar grammar20 = null;
        org.stringtemplate.v4.ST sT21 = null;
        python3Target0.genRecognizerHeaderFile(grammar20, sT21, "\"\"");
        python3Target0.addBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator25 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target26 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator25);
        java.lang.String str27 = python3Target26.getVersion();
        int int28 = python3Target26.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet29 = python3Target26.badWords;
        java.util.Set<java.lang.String> strSet30 = python3Target26.getBadWords();
        python3Target0.badWords = strSet30;
        boolean boolean32 = python3Target0.wantsBaseVisitor();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "4.5.2.1" + "'", str2, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\"\"" + "'", str6, "\"\"");
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "4.5.2.1" + "'", str27, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 64 + "'", int28 == 64);
        org.junit.Assert.assertNotNull(strSet29);
        org.junit.Assert.assertNotNull(strSet30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
    }

    @Test
    public void test1843() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1843");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        java.lang.String str3 = python3Target0.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator4 = null;
        java.lang.String str7 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator4, "\"\\\"hi!\\\"\"", true);
        org.stringtemplate.v4.STGroup sTGroup8 = python3Target0.templates;
        org.antlr.v4.codegen.target.Python3Target python3Target9 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean10 = python3Target9.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup11 = python3Target9.templates;
        java.lang.String[] strArray14 = new java.lang.String[] { "hi!", "hi!" };
        python3Target9.targetCharValueEscape = strArray14;
        java.lang.String str17 = python3Target9.getTargetStringLiteralFromString("\"\"");
        java.lang.String str18 = python3Target9.getLanguage();
        java.util.Set<java.lang.String> strSet19 = python3Target9.getBadWords();
        python3Target0.badWords = strSet19;
        org.antlr.v4.tool.Grammar grammar21 = null;
        org.stringtemplate.v4.ST sT22 = null;
        // The following exception was thrown during execution in test generation
        try {
            python3Target0.genListenerFile(grammar21, sT22);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "4.5.2.1" + "'", str3, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "\"\\\"hi!\\\"\"" + "'", str7, "\"\\\"hi!\\\"\"");
        org.junit.Assert.assertNull(sTGroup8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(sTGroup11);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "\"\"\"\"" + "'", str17, "\"\"\"\"");
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(strSet19);
    }

    @Test
    public void test1844() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1844");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        java.util.Set<java.lang.String> strSet2 = python3Target0.badWords;
        boolean boolean3 = python3Target0.templatesExist();
        java.lang.String str4 = python3Target0.getLanguage();
        java.lang.String str5 = python3Target0.getLanguage();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(str5);
    }

    @Test
    public void test1845() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1845");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.antlr.v4.tool.Grammar grammar2 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target4 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator3);
        java.util.Set<java.lang.String> strSet5 = python3Target4.getBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = null;
        python3Target4.gen = codeGenerator6;
        java.lang.String str9 = python3Target4.getAltLabelContextStructName("hi!");
        java.lang.String str12 = python3Target4.getTargetStringLiteralFromString("\"hi!\"", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator13 = null;
        python3Target4.gen = codeGenerator13;
        org.antlr.v4.tool.Grammar grammar15 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target16 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray17 = python3Target16.targetCharValueEscape;
        org.stringtemplate.v4.STGroup sTGroup18 = python3Target16.templates;
        int int19 = python3Target16.getInlineTestSetWordSize();
        org.antlr.v4.codegen.CodeGenerator codeGenerator20 = python3Target16.gen;
        org.antlr.v4.tool.Grammar grammar21 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target22 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str24 = python3Target22.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.tool.Grammar grammar25 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target26 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean27 = python3Target26.supportsOverloadedMethods();
        java.lang.String str28 = python3Target26.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator29 = null;
        java.lang.String str32 = python3Target26.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator29, "", true);
        java.lang.String str33 = python3Target26.getVersion();
        org.antlr.v4.tool.Grammar grammar34 = null;
        int[] intArray35 = new int[] {};
        java.lang.String[] strArray36 = python3Target26.getTokenTypesAsTargetLabels(grammar34, intArray35);
        java.lang.String[] strArray37 = python3Target22.getTokenTypesAsTargetLabels(grammar25, intArray35);
        java.lang.String[] strArray38 = python3Target16.getTokenTypesAsTargetLabels(grammar21, intArray35);
        java.lang.String[] strArray39 = python3Target4.getTokenTypesAsTargetLabels(grammar15, intArray35);
        java.lang.String[] strArray40 = python3Target0.getTokenTypesAsTargetLabels(grammar2, intArray35);
        java.lang.String str42 = python3Target0.getTargetStringLiteralFromString("\"\"4.5.2.1\"\"");
        int int43 = python3Target0.getSerializedATNSegmentLimit();
        org.antlr.v4.tool.Rule rule44 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str45 = python3Target0.getRuleFunctionContextStructName(rule44);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Hi!Context" + "'", str9, "Hi!Context");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "\"\\\"hi!\\\"\"" + "'", str12, "\"\\\"hi!\\\"\"");
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertNull(sTGroup18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 64 + "'", int19 == 64);
        org.junit.Assert.assertNull(codeGenerator20);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "\"\"\"\"\"\"" + "'", str24, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "4.5.2.1" + "'", str28, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "\"\"" + "'", str32, "\"\"");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "4.5.2.1" + "'", str33, "4.5.2.1");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[]");
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "\"\"\"4.5.2.1\"\"\"" + "'", str42, "\"\"\"4.5.2.1\"\"\"");
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 29 + "'", int43 == 29);
    }

    @Test
    public void test1846() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1846");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        org.antlr.v4.tool.Grammar grammar3 = null;
        org.stringtemplate.v4.ST sT4 = null;
        python3Target0.genRecognizerHeaderFile(grammar3, sT4, "");
        python3Target0.language = "Python3";
        java.lang.String str9 = python3Target0.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = null;
        java.lang.String str13 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator10, "", true);
        java.lang.String[] strArray14 = null;
        python3Target0.targetCharValueEscape = strArray14;
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "4.5.2.1" + "'", str9, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "\"\"" + "'", str13, "\"\"");
    }

    @Test
    public void test1847() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1847");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        java.lang.String str2 = python3Target0.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = null;
        java.lang.String str6 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator3, "", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = null;
        python3Target0.gen = codeGenerator7;
        int int9 = python3Target0.getSerializedATNSegmentLimit();
        org.antlr.v4.tool.Grammar grammar10 = null;
        org.stringtemplate.v4.ST sT11 = null;
        python3Target0.genRecognizerHeaderFile(grammar10, sT11, "_tset12");
        org.stringtemplate.v4.STGroup sTGroup14 = python3Target0.templates;
        org.stringtemplate.v4.STGroup sTGroup15 = python3Target0.templates;
        python3Target0.language = "\\nContext";
        org.stringtemplate.v4.STGroup sTGroup18 = python3Target0.templates;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str20 = python3Target0.getElementName("\"\\\"DContext\\\"\\\"Contex\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "4.5.2.1" + "'", str2, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\"\"" + "'", str6, "\"\"");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 29 + "'", int9 == 29);
        org.junit.Assert.assertNull(sTGroup14);
        org.junit.Assert.assertNull(sTGroup15);
        org.junit.Assert.assertNull(sTGroup18);
    }

    @Test
    public void test1848() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1848");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        org.antlr.v4.tool.Grammar grammar3 = null;
        org.stringtemplate.v4.ST sT4 = null;
        python3Target0.genRecognizerHeaderFile(grammar3, sT4, "");
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = python3Target0.getCodeGenerator();
        java.util.Set<java.lang.String> strSet8 = python3Target0.badWords;
        boolean boolean9 = python3Target0.templatesExist();
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target11 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator10);
        java.util.Set<java.lang.String> strSet12 = python3Target11.getBadWords();
        java.lang.String str14 = python3Target11.getAltLabelContextStructName("d");
        org.stringtemplate.v4.STGroup sTGroup15 = python3Target11.getTemplates();
        python3Target0.templates = sTGroup15;
        boolean boolean17 = python3Target0.templatesExist();
        java.lang.String str18 = python3Target0.language;
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertNull(codeGenerator7);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "DContext" + "'", str14, "DContext");
        org.junit.Assert.assertNotNull(sTGroup15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNull(str18);
    }

    @Test
    public void test1849() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1849");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python3Target1.getBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = null;
        python3Target1.gen = codeGenerator3;
        java.lang.String str6 = python3Target1.getAltLabelContextStructName("hi!");
        java.lang.String str9 = python3Target1.getTargetStringLiteralFromString("\"hi!\"", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = null;
        python3Target1.gen = codeGenerator10;
        org.antlr.v4.tool.Grammar grammar12 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target13 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray14 = python3Target13.targetCharValueEscape;
        org.stringtemplate.v4.STGroup sTGroup15 = python3Target13.templates;
        int int16 = python3Target13.getInlineTestSetWordSize();
        org.antlr.v4.codegen.CodeGenerator codeGenerator17 = python3Target13.gen;
        org.antlr.v4.tool.Grammar grammar18 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target19 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str21 = python3Target19.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.tool.Grammar grammar22 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target23 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean24 = python3Target23.supportsOverloadedMethods();
        java.lang.String str25 = python3Target23.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator26 = null;
        java.lang.String str29 = python3Target23.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator26, "", true);
        java.lang.String str30 = python3Target23.getVersion();
        org.antlr.v4.tool.Grammar grammar31 = null;
        int[] intArray32 = new int[] {};
        java.lang.String[] strArray33 = python3Target23.getTokenTypesAsTargetLabels(grammar31, intArray32);
        java.lang.String[] strArray34 = python3Target19.getTokenTypesAsTargetLabels(grammar22, intArray32);
        java.lang.String[] strArray35 = python3Target13.getTokenTypesAsTargetLabels(grammar18, intArray32);
        java.lang.String[] strArray36 = python3Target1.getTokenTypesAsTargetLabels(grammar12, intArray32);
        java.lang.Class<?> wildcardClass37 = python3Target1.getClass();
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Hi!Context" + "'", str6, "Hi!Context");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\"\\\"hi!\\\"\"" + "'", str9, "\"\\\"hi!\\\"\"");
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertNull(sTGroup15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 64 + "'", int16 == 64);
        org.junit.Assert.assertNull(codeGenerator17);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "\"\"\"\"\"\"" + "'", str21, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "4.5.2.1" + "'", str25, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "\"\"" + "'", str29, "\"\"");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "4.5.2.1" + "'", str30, "4.5.2.1");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[]");
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertNotNull(wildcardClass37);
    }

    @Test
    public void test1850() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1850");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        org.antlr.v4.tool.Grammar grammar3 = null;
        org.stringtemplate.v4.ST sT4 = null;
        python3Target0.genRecognizerHeaderFile(grammar3, sT4, "");
        org.antlr.v4.codegen.target.Python3Target python3Target7 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray8 = python3Target7.targetCharValueEscape;
        python3Target0.targetCharValueEscape = strArray8;
        boolean boolean10 = python3Target0.supportsOverloadedMethods();
        boolean boolean11 = python3Target0.wantsBaseListener();
        java.lang.String str13 = python3Target0.getTargetStringLiteralFromString("_tset12");
        python3Target0.addBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator15 = null;
        python3Target0.gen = codeGenerator15;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str18 = python3Target0.getImplicitSetLabel("_tset\"\"\\0\"\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "\"_tset12\"" + "'", str13, "\"_tset12\"");
    }

    @Test
    public void test1851() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1851");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        java.lang.String str2 = python3Target0.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = python3Target0.getCodeGenerator();
        org.antlr.v4.tool.Grammar grammar4 = null;
        org.stringtemplate.v4.ST sT5 = null;
        python3Target0.genRecognizerHeaderFile(grammar4, sT5, "_tsetPython3");
        boolean boolean8 = python3Target0.wantsBaseListener();
        org.antlr.v4.codegen.target.Python3Target python3Target9 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean10 = python3Target9.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup11 = python3Target9.templates;
        java.lang.String[] strArray14 = new java.lang.String[] { "hi!", "hi!" };
        python3Target9.targetCharValueEscape = strArray14;
        org.antlr.v4.codegen.CodeGenerator codeGenerator16 = null;
        java.lang.String str19 = python3Target9.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator16, "", false);
        java.util.Set<java.lang.String> strSet20 = python3Target9.badWords;
        java.util.Set<java.lang.String> strSet21 = python3Target9.badWords;
        java.util.Set<java.lang.String> strSet22 = python3Target9.badWords;
        python3Target0.badWords = strSet22;
        org.antlr.v4.codegen.target.Python3Target python3Target24 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean25 = python3Target24.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup26 = python3Target24.templates;
        org.antlr.v4.tool.Grammar grammar27 = null;
        org.stringtemplate.v4.ST sT28 = null;
        python3Target24.genRecognizerHeaderFile(grammar27, sT28, "");
        python3Target24.language = "Python3";
        int int33 = python3Target24.getSerializedATNSegmentLimit();
        org.stringtemplate.v4.STGroup sTGroup34 = python3Target24.loadTemplates();
        python3Target0.templates = sTGroup34;
        java.lang.String str37 = python3Target0.getTargetStringLiteralFromString("#");
        org.antlr.v4.tool.ast.GrammarAST grammarAST38 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean39 = python3Target0.visibleGrammarSymbolCausesIssueInGeneratedCode(grammarAST38);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "4.5.2.1" + "'", str2, "4.5.2.1");
        org.junit.Assert.assertNull(codeGenerator3);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(sTGroup11);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertNotNull(strSet20);
        org.junit.Assert.assertNotNull(strSet21);
        org.junit.Assert.assertNotNull(strSet22);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNull(sTGroup26);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 29 + "'", int33 == 29);
        org.junit.Assert.assertNotNull(sTGroup34);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "\"#\"" + "'", str37, "\"#\"");
    }

    @Test
    public void test1852() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1852");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!", "hi!" };
        python3Target0.targetCharValueEscape = strArray5;
        java.lang.String str8 = python3Target0.getTargetStringLiteralFromString("\"\"");
        java.lang.String str10 = python3Target0.getTargetStringLiteralFromString("\"\"");
        java.lang.String str11 = python3Target0.getLanguage();
        int int12 = python3Target0.getInlineTestSetWordSize();
        boolean boolean13 = python3Target0.templatesExist();
        java.util.Set<java.lang.String> strSet14 = python3Target0.badWords;
        org.antlr.v4.tool.ast.GrammarAST grammarAST15 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str16 = python3Target0.getLoopCounter(grammarAST15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\"\"\"\"" + "'", str8, "\"\"\"\"");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\"\"\"\"" + "'", str10, "\"\"\"\"");
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 64 + "'", int12 == 64);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strSet14);
    }

    @Test
    public void test1853() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1853");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.lang.String str2 = python3Target1.getVersion();
        int int3 = python3Target1.getSerializedATNSegmentLimit();
        boolean boolean4 = python3Target1.templatesExist();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str6 = python3Target1.getElementName("\"_tsetPython3\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "4.5.2.1" + "'", str2, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 29 + "'", int3 == 29);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
    }

    @Test
    public void test1854() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1854");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray1 = python3Target0.targetCharValueEscape;
        java.lang.String str2 = python3Target0.language;
        int int3 = python3Target0.getSerializedATNSegmentLimit();
        org.antlr.v4.codegen.CodeGenerator codeGenerator4 = python3Target0.getCodeGenerator();
        org.antlr.v4.codegen.CodeGenerator codeGenerator5 = null;
        java.lang.String str8 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator5, "_tset\"\\\"\\\"hi!\\\"\\\"\"", true);
        java.lang.String str9 = python3Target0.language;
        java.util.Set<java.lang.String> strSet10 = python3Target0.getBadWords();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str12 = python3Target0.getImplicitTokenLabel("\\1");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 29 + "'", int3 == 29);
        org.junit.Assert.assertNull(codeGenerator4);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\"tset\\\"\\\"\\\"hi!\\\"\\\"\"" + "'", str8, "\"tset\\\"\\\"\\\"hi!\\\"\\\"\"");
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(strSet10);
    }

    @Test
    public void test1855() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1855");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        java.util.Set<java.lang.String> strSet2 = python3Target0.badWords;
        int int3 = python3Target0.getSerializedATNSegmentLimit();
        java.lang.String str4 = python3Target0.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator5 = null;
        java.lang.String str8 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator5, "\\35", false);
        org.stringtemplate.v4.STGroup sTGroup9 = python3Target0.templates;
        boolean boolean10 = python3Target0.wantsBaseListener();
        org.antlr.v4.tool.Grammar grammar11 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str13 = python3Target0.getTokenTypeAsTargetLabel(grammar11, (int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 29 + "'", int3 == 29);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "3" + "'", str8, "3");
        org.junit.Assert.assertNull(sTGroup9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test1856() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1856");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python3Target1.getBadWords();
        java.lang.String str4 = python3Target1.getAltLabelContextStructName("d");
        org.stringtemplate.v4.STGroup sTGroup5 = python3Target1.getTemplates();
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = null;
        java.lang.String str9 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator6, "", true);
        java.lang.String str11 = python3Target1.getImplicitSetLabel("\"\\0\"");
        java.lang.String str13 = python3Target1.getListLabel("\"Python3\"");
        java.lang.String str15 = python3Target1.getListLabel("\"\\\"hi!\\\"\"");
        org.antlr.v4.tool.ast.GrammarAST grammarAST16 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean17 = python3Target1.visibleGrammarSymbolCausesIssueInGeneratedCode(grammarAST16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "DContext" + "'", str4, "DContext");
        org.junit.Assert.assertNotNull(sTGroup5);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\"\"" + "'", str9, "\"\"");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "_tset\"\\0\"" + "'", str11, "_tset\"\\0\"");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "\"Python3\"" + "'", str13, "\"Python3\"");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "\"\\\"hi!\\\"\"" + "'", str15, "\"\\\"hi!\\\"\"");
    }

    @Test
    public void test1857() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1857");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        java.lang.String str2 = python3Target0.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = python3Target0.getCodeGenerator();
        org.stringtemplate.v4.STGroup sTGroup4 = null;
        python3Target0.templates = sTGroup4;
        org.stringtemplate.v4.STGroup sTGroup6 = python3Target0.templates;
        org.antlr.v4.codegen.target.Python3Target python3Target7 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray8 = python3Target7.targetCharValueEscape;
        python3Target7.addBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target11 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator10);
        java.lang.String str13 = python3Target11.getTargetStringLiteralFromString("");
        int int14 = python3Target11.getSerializedATNSegmentLimit();
        boolean boolean15 = python3Target11.wantsBaseVisitor();
        org.stringtemplate.v4.STGroup sTGroup16 = python3Target11.loadTemplates();
        python3Target7.templates = sTGroup16;
        python3Target0.templates = sTGroup16;
        org.antlr.v4.codegen.CodeGenerator codeGenerator19 = python3Target0.getCodeGenerator();
        org.antlr.v4.codegen.CodeGenerator codeGenerator20 = null;
        python3Target0.gen = codeGenerator20;
        java.lang.String str23 = python3Target0.getListLabel("_\"\"\\\"DContext\\\"\"\"");
        python3Target0.language = "\"tset\\\"\\\"\\\"hi!\\\"\\\"\"Context";
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "4.5.2.1" + "'", str2, "4.5.2.1");
        org.junit.Assert.assertNull(codeGenerator3);
        org.junit.Assert.assertNull(sTGroup6);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "\"\"" + "'", str13, "\"\"");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 29 + "'", int14 == 29);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(sTGroup16);
        org.junit.Assert.assertNull(codeGenerator19);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "_\"\"\\\"DContext\\\"\"\"" + "'", str23, "_\"\"\\\"DContext\\\"\"\"");
    }

    @Test
    public void test1858() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1858");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        org.antlr.v4.tool.Grammar grammar3 = null;
        org.stringtemplate.v4.ST sT4 = null;
        python3Target0.genRecognizerHeaderFile(grammar3, sT4, "");
        python3Target0.language = "Python3";
        java.util.Set<java.lang.String> strSet9 = null;
        python3Target0.badWords = strSet9;
        boolean boolean11 = python3Target0.wantsBaseVisitor();
        java.lang.String[] strArray13 = new java.lang.String[] { "12Context" };
        java.util.LinkedHashSet<java.lang.String> strSet14 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet14, strArray13);
        python3Target0.badWords = strSet14;
        java.lang.String str18 = python3Target0.encodeIntAsCharEscape((int) ' ');
        int int19 = python3Target0.getInlineTestSetWordSize();
        boolean boolean20 = python3Target0.wantsBaseVisitor();
        python3Target0.language = "\\12";
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + " " + "'", str18, " ");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 64 + "'", int19 == 64);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    }

    @Test
    public void test1859() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1859");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray1 = python3Target0.targetCharValueEscape;
        java.lang.String str2 = python3Target0.language;
        int int3 = python3Target0.getSerializedATNSegmentLimit();
        java.lang.String str5 = python3Target0.encodeIntAsCharEscape(1);
        org.antlr.v4.tool.Grammar grammar6 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str8 = python3Target0.getTokenTypeAsTargetLabel(grammar6, (int) (short) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 29 + "'", int3 == 29);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "\\1" + "'", str5, "\\1");
    }

    @Test
    public void test1860() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1860");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python3Target1.getBadWords();
        org.antlr.v4.codegen.target.Python3Target python3Target3 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str5 = python3Target3.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.codegen.target.Python3Target python3Target6 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean7 = python3Target6.supportsOverloadedMethods();
        java.util.Set<java.lang.String> strSet8 = python3Target6.badWords;
        python3Target3.badWords = strSet8;
        python3Target1.badWords = strSet8;
        java.util.Set<java.lang.String> strSet11 = python3Target1.badWords;
        org.antlr.v4.codegen.CodeGenerator codeGenerator12 = python3Target1.getCodeGenerator();
        java.lang.String str14 = python3Target1.getTargetStringLiteralFromString("@");
        java.lang.String str16 = python3Target1.getAltLabelContextStructName("\"\"_tset12\"\"");
        boolean boolean17 = python3Target1.supportsOverloadedMethods();
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "\"\"\"\"\"\"" + "'", str5, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertNotNull(strSet11);
        org.junit.Assert.assertNull(codeGenerator12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "\"@\"" + "'", str14, "\"@\"");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "\"\"_tset12\"\"Context" + "'", str16, "\"\"_tset12\"\"Context");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    }

    @Test
    public void test1861() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1861");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        java.lang.String str3 = python3Target0.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator4 = null;
        java.lang.String str7 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator4, "\"\\\"hi!\\\"\"", true);
        org.stringtemplate.v4.STGroup sTGroup8 = python3Target0.templates;
        org.antlr.v4.codegen.target.Python3Target python3Target9 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean10 = python3Target9.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup11 = python3Target9.templates;
        java.lang.String[] strArray14 = new java.lang.String[] { "hi!", "hi!" };
        python3Target9.targetCharValueEscape = strArray14;
        java.lang.String str17 = python3Target9.getTargetStringLiteralFromString("\"\"");
        java.lang.String str18 = python3Target9.getLanguage();
        java.util.Set<java.lang.String> strSet19 = python3Target9.getBadWords();
        python3Target0.badWords = strSet19;
        org.antlr.v4.codegen.model.RuleFunction ruleFunction21 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str22 = python3Target0.getRuleFunctionContextStructName(ruleFunction21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "4.5.2.1" + "'", str3, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "\"\\\"hi!\\\"\"" + "'", str7, "\"\\\"hi!\\\"\"");
        org.junit.Assert.assertNull(sTGroup8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(sTGroup11);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "\"\"\"\"" + "'", str17, "\"\"\"\"");
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(strSet19);
    }

    @Test
    public void test1862() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1862");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str2 = python3Target0.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = null;
        python3Target0.gen = codeGenerator3;
        java.lang.String str5 = python3Target0.getVersion();
        org.antlr.v4.codegen.target.Python3Target python3Target6 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean7 = python3Target6.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup8 = python3Target6.templates;
        org.antlr.v4.tool.Grammar grammar9 = null;
        org.stringtemplate.v4.ST sT10 = null;
        python3Target6.genRecognizerHeaderFile(grammar9, sT10, "");
        python3Target6.language = "Python3";
        int int15 = python3Target6.getSerializedATNSegmentLimit();
        org.stringtemplate.v4.STGroup sTGroup16 = python3Target6.loadTemplates();
        python3Target0.templates = sTGroup16;
        python3Target0.addBadWords();
        java.lang.String str21 = python3Target0.getTargetStringLiteralFromString("\"\"\"_tset12\"\"\"", false);
        java.lang.String str23 = python3Target0.getImplicitRuleLabel("_tset\"\"\"\"\"\"\"\"ContextContextContext");
        // The following exception was thrown during execution in test generation
        try {
            org.stringtemplate.v4.STGroup sTGroup24 = python3Target0.loadTemplates();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "\"\"\"\"\"\"" + "'", str2, "\"\"\"\"\"\"");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "4.5.2.1" + "'", str5, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(sTGroup8);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 29 + "'", int15 == 29);
        org.junit.Assert.assertNotNull(sTGroup16);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "\"\"\"_tset12\"\"\"" + "'", str21, "\"\"\"_tset12\"\"\"");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "__tset\"\"\"\"\"\"\"\"ContextContextContext" + "'", str23, "__tset\"\"\"\"\"\"\"\"ContextContextContext");
    }

    @Test
    public void test1863() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1863");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str2 = python3Target0.getTargetStringLiteralFromString("\"\"\"\"");
        java.lang.String str4 = python3Target0.getTargetStringLiteralFromString("");
        java.lang.String str6 = python3Target0.getTargetStringLiteralFromString("\"\\\"Python3\\\"\"");
        int int7 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str8 = python3Target0.getLanguage();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "\"\"\"\"\"\"" + "'", str2, "\"\"\"\"\"\"");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "\"\"" + "'", str4, "\"\"");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\"\"\\\"Python3\\\"\"\"" + "'", str6, "\"\"\\\"Python3\\\"\"\"");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 64 + "'", int7 == 64);
        org.junit.Assert.assertNull(str8);
    }

    @Test
    public void test1864() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1864");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!", "hi!" };
        python3Target0.targetCharValueEscape = strArray5;
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = null;
        java.lang.String str10 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator7, "", false);
        java.util.Set<java.lang.String> strSet11 = python3Target0.badWords;
        java.util.Set<java.lang.String> strSet12 = python3Target0.badWords;
        boolean boolean13 = python3Target0.templatesExist();
        java.lang.String str14 = python3Target0.getLanguage();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str16 = python3Target0.getAltLabelContextStructName("\"\\nContext\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNotNull(strSet11);
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(str14);
    }

    @Test
    public void test1865() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1865");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray1 = python3Target0.targetCharValueEscape;
        java.lang.String str2 = python3Target0.language;
        int int3 = python3Target0.getSerializedATNSegmentLimit();
        java.lang.String str6 = python3Target0.getTargetStringLiteralFromString("\"\"\"\"\"\"", false);
        java.lang.String str9 = python3Target0.getTargetStringLiteralFromString("\"Hi!Context\"", false);
        java.lang.String str12 = python3Target0.getTargetStringLiteralFromString("_tset_tset_12", true);
        boolean boolean13 = python3Target0.templatesExist();
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 29 + "'", int3 == 29);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\"\"\"\"\"\"" + "'", str6, "\"\"\"\"\"\"");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\"Hi!Context\"" + "'", str9, "\"Hi!Context\"");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "\"_tset_tset_12\"" + "'", str12, "\"_tset_tset_12\"");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test1866() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1866");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str2 = python3Target0.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.tool.Grammar grammar3 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target4 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean5 = python3Target4.supportsOverloadedMethods();
        java.lang.String str6 = python3Target4.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = null;
        java.lang.String str10 = python3Target4.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator7, "", true);
        java.lang.String str11 = python3Target4.getVersion();
        org.antlr.v4.tool.Grammar grammar12 = null;
        int[] intArray13 = new int[] {};
        java.lang.String[] strArray14 = python3Target4.getTokenTypesAsTargetLabels(grammar12, intArray13);
        java.lang.String[] strArray15 = python3Target0.getTokenTypesAsTargetLabels(grammar3, intArray13);
        org.antlr.v4.codegen.target.Python3Target.python3Keywords = strArray15;
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "\"\"\"\"\"\"" + "'", str2, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "4.5.2.1" + "'", str6, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\"\"" + "'", str10, "\"\"");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "4.5.2.1" + "'", str11, "4.5.2.1");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[]");
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertNotNull(strArray15);
    }

    @Test
    public void test1867() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1867");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python3Target1.getBadWords();
        java.lang.String str4 = python3Target1.getAltLabelContextStructName("d");
        org.stringtemplate.v4.STGroup sTGroup5 = python3Target1.getTemplates();
        boolean boolean6 = python3Target1.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup7 = python3Target1.getTemplates();
        python3Target1.language = "\"\"";
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = null;
        java.lang.String str13 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator10, "\\\"4.5.2.1\\\"", false);
        org.antlr.v4.codegen.CodeGenerator codeGenerator14 = python3Target1.gen;
        java.util.Set<java.lang.String> strSet15 = python3Target1.getBadWords();
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "DContext" + "'", str4, "DContext");
        org.junit.Assert.assertNotNull(sTGroup5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(sTGroup7);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "\\\"4.5.2.1\\\"" + "'", str13, "\\\"4.5.2.1\\\"");
        org.junit.Assert.assertNull(codeGenerator14);
        org.junit.Assert.assertNotNull(strSet15);
    }

    @Test
    public void test1868() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1868");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray1 = python3Target0.targetCharValueEscape;
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = null;
        java.lang.String str6 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator3, "\"\\12\"", false);
        int int7 = python3Target0.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet8 = python3Target0.badWords;
        java.lang.String str10 = python3Target0.getTargetStringLiteralFromString("\"\\\"\\\"\\\"\\\\\\\"\\\\\\\"hi!\\\\\\\"\\\\\\\"\\\"\\\"\\\"\"");
        org.antlr.v4.tool.Grammar grammar11 = null;
        org.stringtemplate.v4.ST sT12 = null;
        // The following exception was thrown during execution in test generation
        try {
            python3Target0.genFile(grammar11, sT12, "\"\"\"_tset12\"\"\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "12" + "'", str6, "12");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 64 + "'", int7 == 64);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\"\"\\\"\\\"\\\"\\\\\\\"\\\\\\\"hi!\\\\\\\"\\\\\\\"\\\"\\\"\\\"\"\"" + "'", str10, "\"\"\\\"\\\"\\\"\\\\\\\"\\\\\\\"hi!\\\\\\\"\\\\\\\"\\\"\\\"\\\"\"\"");
    }

    @Test
    public void test1869() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1869");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        java.lang.String str2 = python3Target0.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = null;
        java.lang.String str6 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator3, "", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = null;
        python3Target0.gen = codeGenerator7;
        int int9 = python3Target0.getSerializedATNSegmentLimit();
        org.antlr.v4.tool.Grammar grammar10 = null;
        org.stringtemplate.v4.ST sT11 = null;
        python3Target0.genRecognizerHeaderFile(grammar10, sT11, "_tset12");
        org.stringtemplate.v4.STGroup sTGroup14 = python3Target0.templates;
        org.stringtemplate.v4.STGroup sTGroup15 = python3Target0.templates;
        org.antlr.v4.codegen.CodeGenerator codeGenerator16 = python3Target0.getCodeGenerator();
        int int17 = python3Target0.getInlineTestSetWordSize();
        org.antlr.v4.codegen.CodeGenerator codeGenerator18 = python3Target0.getCodeGenerator();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "4.5.2.1" + "'", str2, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\"\"" + "'", str6, "\"\"");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 29 + "'", int9 == 29);
        org.junit.Assert.assertNull(sTGroup14);
        org.junit.Assert.assertNull(sTGroup15);
        org.junit.Assert.assertNull(codeGenerator16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 64 + "'", int17 == 64);
        org.junit.Assert.assertNull(codeGenerator18);
    }

    @Test
    public void test1870() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1870");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!", "hi!" };
        python3Target0.targetCharValueEscape = strArray5;
        java.lang.String str8 = python3Target0.getTargetStringLiteralFromString("\"\"");
        java.lang.String str10 = python3Target0.getTargetStringLiteralFromString("\"\"");
        java.lang.String str11 = python3Target0.getLanguage();
        int int12 = python3Target0.getInlineTestSetWordSize();
        boolean boolean13 = python3Target0.wantsBaseVisitor();
        java.lang.String str14 = python3Target0.getLanguage();
        org.antlr.v4.tool.Grammar grammar15 = null;
        org.stringtemplate.v4.ST sT16 = null;
        python3Target0.genRecognizerHeaderFile(grammar15, sT16, "\"Hi!Context\"");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str20 = python3Target0.getImplicitSetLabel("\"_tset\\\"\\\\0\\\"\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\"\"\"\"" + "'", str8, "\"\"\"\"");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\"\"\"\"" + "'", str10, "\"\"\"\"");
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 64 + "'", int12 == 64);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(str14);
    }

    @Test
    public void test1871() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1871");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray1 = python3Target0.targetCharValueEscape;
        java.lang.String str2 = python3Target0.language;
        int int3 = python3Target0.getSerializedATNSegmentLimit();
        org.antlr.v4.codegen.CodeGenerator codeGenerator4 = null;
        python3Target0.gen = codeGenerator4;
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target7 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator6);
        java.util.Set<java.lang.String> strSet8 = python3Target7.getBadWords();
        java.lang.String str10 = python3Target7.getAltLabelContextStructName("d");
        org.stringtemplate.v4.STGroup sTGroup11 = python3Target7.getTemplates();
        python3Target0.templates = sTGroup11;
        org.antlr.v4.codegen.CodeGenerator codeGenerator13 = python3Target0.gen;
        int int14 = python3Target0.getInlineTestSetWordSize();
        boolean boolean15 = python3Target0.templatesExist();
        java.lang.String str17 = python3Target0.getTargetStringLiteralFromString("\\64");
        org.antlr.v4.codegen.target.Python3Target python3Target18 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray19 = python3Target18.targetCharValueEscape;
        org.stringtemplate.v4.STGroup sTGroup20 = python3Target18.templates;
        org.antlr.v4.codegen.CodeGenerator codeGenerator21 = null;
        java.lang.String str24 = python3Target18.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator21, "\"\\12\"", false);
        int int25 = python3Target18.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet26 = python3Target18.getBadWords();
        python3Target0.badWords = strSet26;
        org.antlr.v4.codegen.target.Python3Target python3Target28 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray29 = python3Target28.targetCharValueEscape;
        org.stringtemplate.v4.STGroup sTGroup30 = python3Target28.templates;
        org.antlr.v4.codegen.CodeGenerator codeGenerator31 = null;
        java.lang.String str34 = python3Target28.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator31, "\"\\12\"", false);
        int int35 = python3Target28.getInlineTestSetWordSize();
        org.antlr.v4.codegen.CodeGenerator codeGenerator36 = python3Target28.getCodeGenerator();
        java.util.Set<java.lang.String> strSet37 = python3Target28.getBadWords();
        python3Target0.badWords = strSet37;
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 29 + "'", int3 == 29);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "DContext" + "'", str10, "DContext");
        org.junit.Assert.assertNotNull(sTGroup11);
        org.junit.Assert.assertNull(codeGenerator13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 64 + "'", int14 == 64);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "\"\\64\"" + "'", str17, "\"\\64\"");
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertNull(sTGroup20);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "12" + "'", str24, "12");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 64 + "'", int25 == 64);
        org.junit.Assert.assertNotNull(strSet26);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertNull(sTGroup30);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "12" + "'", str34, "12");
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 64 + "'", int35 == 64);
        org.junit.Assert.assertNull(codeGenerator36);
        org.junit.Assert.assertNotNull(strSet37);
    }

    @Test
    public void test1872() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1872");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray1 = python3Target0.targetCharValueEscape;
        org.antlr.v4.tool.ast.GrammarAST grammarAST2 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean3 = python3Target0.visibleGrammarSymbolCausesIssueInGeneratedCode(grammarAST2);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray1);
    }

    @Test
    public void test1873() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1873");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        python3Target0.language = "4.5.2.1";
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = python3Target0.getCodeGenerator();
        org.antlr.v4.codegen.CodeGenerator codeGenerator4 = python3Target0.gen;
        java.lang.String str5 = python3Target0.getLanguage();
        python3Target0.addBadWords();
        org.antlr.v4.codegen.target.Python3Target python3Target7 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str9 = python3Target7.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = null;
        python3Target7.gen = codeGenerator10;
        java.lang.String str12 = python3Target7.getVersion();
        org.antlr.v4.codegen.target.Python3Target python3Target13 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean14 = python3Target13.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup15 = python3Target13.templates;
        org.antlr.v4.tool.Grammar grammar16 = null;
        org.stringtemplate.v4.ST sT17 = null;
        python3Target13.genRecognizerHeaderFile(grammar16, sT17, "");
        python3Target13.language = "Python3";
        int int22 = python3Target13.getSerializedATNSegmentLimit();
        org.stringtemplate.v4.STGroup sTGroup23 = python3Target13.loadTemplates();
        python3Target7.templates = sTGroup23;
        python3Target0.templates = sTGroup23;
        python3Target0.language = "\\35";
        org.stringtemplate.v4.STGroup sTGroup28 = python3Target0.getTemplates();
        org.antlr.v4.codegen.target.Python3Target python3Target29 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean30 = python3Target29.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup31 = python3Target29.templates;
        java.lang.String[] strArray34 = new java.lang.String[] { "hi!", "hi!" };
        python3Target29.targetCharValueEscape = strArray34;
        org.antlr.v4.codegen.CodeGenerator codeGenerator36 = null;
        java.lang.String str39 = python3Target29.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator36, "", false);
        int int40 = python3Target29.getSerializedATNSegmentLimit();
        java.lang.String str41 = python3Target29.getVersion();
        boolean boolean42 = python3Target29.supportsOverloadedMethods();
        boolean boolean43 = python3Target29.wantsBaseVisitor();
        java.lang.String[] strArray44 = python3Target29.targetCharValueEscape;
        python3Target0.targetCharValueEscape = strArray44;
        org.junit.Assert.assertNull(codeGenerator3);
        org.junit.Assert.assertNull(codeGenerator4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "4.5.2.1" + "'", str5, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\"\"\"\"\"\"" + "'", str9, "\"\"\"\"\"\"");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "4.5.2.1" + "'", str12, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(sTGroup15);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 29 + "'", int22 == 29);
        org.junit.Assert.assertNotNull(sTGroup23);
        org.junit.Assert.assertNotNull(sTGroup28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNull(sTGroup31);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "" + "'", str39, "");
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 29 + "'", int40 == 29);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "4.5.2.1" + "'", str41, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(strArray44);
    }

    @Test
    public void test1874() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1874");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        java.util.Set<java.lang.String> strSet2 = python3Target0.badWords;
        int int3 = python3Target0.getSerializedATNSegmentLimit();
        java.lang.String str4 = python3Target0.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator5 = null;
        java.lang.String str8 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator5, "\\35", false);
        java.lang.String str11 = python3Target0.getTargetStringLiteralFromString("\"\\\"4.5.2.1\"", false);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 29 + "'", int3 == 29);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "3" + "'", str8, "3");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "\"\\\"4.5.2.1\"" + "'", str11, "\"\\\"4.5.2.1\"");
    }

    @Test
    public void test1875() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1875");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        java.lang.String str2 = python3Target0.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = null;
        java.lang.String str6 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator3, "", true);
        java.lang.String str7 = python3Target0.getVersion();
        org.antlr.v4.tool.Grammar grammar8 = null;
        int[] intArray9 = new int[] {};
        java.lang.String[] strArray10 = python3Target0.getTokenTypesAsTargetLabels(grammar8, intArray9);
        java.lang.String[] strArray11 = python3Target0.targetCharValueEscape;
        java.util.Set<java.lang.String> strSet12 = python3Target0.badWords;
        python3Target0.addBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator14 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target15 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator14);
        java.util.Set<java.lang.String> strSet16 = python3Target15.getBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator17 = null;
        python3Target15.gen = codeGenerator17;
        org.antlr.v4.tool.Grammar grammar19 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target20 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean21 = python3Target20.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup22 = python3Target20.templates;
        org.antlr.v4.tool.Grammar grammar23 = null;
        org.stringtemplate.v4.ST sT24 = null;
        python3Target20.genRecognizerHeaderFile(grammar23, sT24, "");
        boolean boolean27 = python3Target20.supportsOverloadedMethods();
        python3Target20.language = "\"\\12\"";
        org.antlr.v4.tool.Grammar grammar30 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator31 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target32 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator31);
        java.util.Set<java.lang.String> strSet33 = python3Target32.getBadWords();
        java.lang.String str35 = python3Target32.getAltLabelContextStructName("d");
        java.lang.String str37 = python3Target32.getTargetStringLiteralFromString("\"\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator38 = python3Target32.getCodeGenerator();
        org.antlr.v4.tool.Grammar grammar39 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator40 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target41 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator40);
        java.util.Set<java.lang.String> strSet42 = python3Target41.getBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator43 = null;
        python3Target41.gen = codeGenerator43;
        java.lang.String str46 = python3Target41.getAltLabelContextStructName("hi!");
        java.lang.String str49 = python3Target41.getTargetStringLiteralFromString("\"hi!\"", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator50 = null;
        python3Target41.gen = codeGenerator50;
        org.antlr.v4.tool.Grammar grammar52 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target53 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray54 = python3Target53.targetCharValueEscape;
        org.stringtemplate.v4.STGroup sTGroup55 = python3Target53.templates;
        int int56 = python3Target53.getInlineTestSetWordSize();
        org.antlr.v4.codegen.CodeGenerator codeGenerator57 = python3Target53.gen;
        org.antlr.v4.tool.Grammar grammar58 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target59 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str61 = python3Target59.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.tool.Grammar grammar62 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target63 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean64 = python3Target63.supportsOverloadedMethods();
        java.lang.String str65 = python3Target63.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator66 = null;
        java.lang.String str69 = python3Target63.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator66, "", true);
        java.lang.String str70 = python3Target63.getVersion();
        org.antlr.v4.tool.Grammar grammar71 = null;
        int[] intArray72 = new int[] {};
        java.lang.String[] strArray73 = python3Target63.getTokenTypesAsTargetLabels(grammar71, intArray72);
        java.lang.String[] strArray74 = python3Target59.getTokenTypesAsTargetLabels(grammar62, intArray72);
        java.lang.String[] strArray75 = python3Target53.getTokenTypesAsTargetLabels(grammar58, intArray72);
        java.lang.String[] strArray76 = python3Target41.getTokenTypesAsTargetLabels(grammar52, intArray72);
        java.lang.String[] strArray77 = python3Target32.getTokenTypesAsTargetLabels(grammar39, intArray72);
        java.lang.String[] strArray78 = python3Target20.getTokenTypesAsTargetLabels(grammar30, intArray72);
        java.lang.String[] strArray79 = python3Target15.getTokenTypesAsTargetLabels(grammar19, intArray72);
        python3Target0.targetCharValueEscape = strArray79;
        org.antlr.v4.codegen.CodeGenerator codeGenerator81 = null;
        java.lang.String str84 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator81, "\\nContext", false);
        boolean boolean85 = python3Target0.supportsOverloadedMethods();
        java.lang.String[] strArray86 = python3Target0.targetCharValueEscape;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str88 = python3Target0.getImplicitTokenLabel("\"\"\\\"\\\"hi!\\\"\\\"\"\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "4.5.2.1" + "'", str2, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\"\"" + "'", str6, "\"\"");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "4.5.2.1" + "'", str7, "4.5.2.1");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[]");
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(sTGroup22);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(strSet33);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "DContext" + "'", str35, "DContext");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "\"\\\"\\\"\"" + "'", str37, "\"\\\"\\\"\"");
        org.junit.Assert.assertNull(codeGenerator38);
        org.junit.Assert.assertNotNull(strSet42);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "Hi!Context" + "'", str46, "Hi!Context");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "\"\\\"hi!\\\"\"" + "'", str49, "\"\\\"hi!\\\"\"");
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertNull(sTGroup55);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 64 + "'", int56 == 64);
        org.junit.Assert.assertNull(codeGenerator57);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "\"\"\"\"\"\"" + "'", str61, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "4.5.2.1" + "'", str65, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "\"\"" + "'", str69, "\"\"");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "4.5.2.1" + "'", str70, "4.5.2.1");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[]");
        org.junit.Assert.assertNotNull(strArray73);
        org.junit.Assert.assertNotNull(strArray74);
        org.junit.Assert.assertNotNull(strArray75);
        org.junit.Assert.assertNotNull(strArray76);
        org.junit.Assert.assertNotNull(strArray77);
        org.junit.Assert.assertNotNull(strArray78);
        org.junit.Assert.assertNotNull(strArray79);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "nContex" + "'", str84, "nContex");
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertNotNull(strArray86);
    }

    @Test
    public void test1876() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1876");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        python3Target0.language = "";
        org.antlr.v4.codegen.target.Python3Target python3Target3 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean4 = python3Target3.supportsOverloadedMethods();
        java.lang.String str5 = python3Target3.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = null;
        java.lang.String str9 = python3Target3.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator6, "", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = null;
        python3Target3.gen = codeGenerator10;
        java.lang.String[] strArray19 = new java.lang.String[] { "\"\"\"\"", "\\12", "\"\"", "4.5.2.1", "", "\"\"\"\"", "\"\"" };
        java.util.LinkedHashSet<java.lang.String> strSet20 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet20, strArray19);
        python3Target3.badWords = strSet20;
        python3Target0.badWords = strSet20;
        python3Target0.language = "_tsetPython3";
        int int26 = python3Target0.getSerializedATNSegmentLimit();
        int int27 = python3Target0.getSerializedATNSegmentLimit();
        java.lang.String str28 = python3Target0.getLanguage();
        java.lang.String str31 = python3Target0.getTargetStringLiteralFromString("\"\\\"\\\"\"", true);
        org.antlr.v4.tool.ast.GrammarAST grammarAST32 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str33 = python3Target0.getLoopCounter(grammarAST32);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "4.5.2.1" + "'", str5, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\"\"" + "'", str9, "\"\"");
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 29 + "'", int26 == 29);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 29 + "'", int27 == 29);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "_tsetPython3" + "'", str28, "_tsetPython3");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "\"\"\\\"\\\"\"\"" + "'", str31, "\"\"\\\"\\\"\"\"");
    }

    @Test
    public void test1877() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1877");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        org.antlr.v4.tool.Grammar grammar3 = null;
        org.stringtemplate.v4.ST sT4 = null;
        python3Target0.genRecognizerHeaderFile(grammar3, sT4, "");
        python3Target0.language = "Python3";
        int int9 = python3Target0.getSerializedATNSegmentLimit();
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = python3Target0.gen;
        org.antlr.v4.codegen.target.Python3Target python3Target11 = new org.antlr.v4.codegen.target.Python3Target();
        python3Target11.language = "";
        org.antlr.v4.codegen.target.Python3Target python3Target14 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean15 = python3Target14.supportsOverloadedMethods();
        java.lang.String str16 = python3Target14.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator17 = null;
        java.lang.String str20 = python3Target14.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator17, "", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator21 = null;
        python3Target14.gen = codeGenerator21;
        java.lang.String[] strArray30 = new java.lang.String[] { "\"\"\"\"", "\\12", "\"\"", "4.5.2.1", "", "\"\"\"\"", "\"\"" };
        java.util.LinkedHashSet<java.lang.String> strSet31 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet31, strArray30);
        python3Target14.badWords = strSet31;
        python3Target11.badWords = strSet31;
        java.lang.String str36 = python3Target11.encodeIntAsCharEscape((int) (byte) 100);
        java.lang.String str37 = python3Target11.getLanguage();
        java.lang.String[] strArray38 = new java.lang.String[] {};
        python3Target11.targetCharValueEscape = strArray38;
        java.lang.String str42 = python3Target11.getTargetStringLiteralFromString("", true);
        org.antlr.v4.codegen.target.Python3Target python3Target43 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean44 = python3Target43.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup45 = python3Target43.templates;
        java.lang.String[] strArray48 = new java.lang.String[] { "hi!", "hi!" };
        python3Target43.targetCharValueEscape = strArray48;
        java.lang.String[] strArray51 = new java.lang.String[] { "hi!" };
        org.antlr.v4.codegen.target.Python3Target.python3Keywords = strArray51;
        python3Target43.targetCharValueEscape = strArray51;
        org.antlr.v4.codegen.target.Python3Target.python3Keywords = strArray51;
        org.antlr.v4.codegen.target.Python3Target.python3Keywords = strArray51;
        python3Target11.targetCharValueEscape = strArray51;
        org.antlr.v4.codegen.CodeGenerator codeGenerator57 = python3Target11.getCodeGenerator();
        java.util.Set<java.lang.String> strSet58 = python3Target11.getBadWords();
        org.antlr.v4.codegen.target.Python3Target python3Target59 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean60 = python3Target59.supportsOverloadedMethods();
        java.lang.String str61 = python3Target59.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator62 = null;
        java.lang.String str65 = python3Target59.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator62, "", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator66 = null;
        python3Target59.gen = codeGenerator66;
        java.lang.String[] strArray75 = new java.lang.String[] { "\"\"\"\"", "\\12", "\"\"", "4.5.2.1", "", "\"\"\"\"", "\"\"" };
        java.util.LinkedHashSet<java.lang.String> strSet76 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean77 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet76, strArray75);
        python3Target59.badWords = strSet76;
        org.antlr.v4.tool.Grammar grammar79 = null;
        org.stringtemplate.v4.ST sT80 = null;
        python3Target59.genRecognizerHeaderFile(grammar79, sT80, "\"\"");
        org.antlr.v4.codegen.target.Python3Target python3Target83 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray84 = python3Target83.targetCharValueEscape;
        java.util.Set<java.lang.String> strSet85 = python3Target83.badWords;
        python3Target59.badWords = strSet85;
        python3Target11.badWords = strSet85;
        java.util.Set<java.lang.String> strSet88 = python3Target11.badWords;
        python3Target0.badWords = strSet88;
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 29 + "'", int9 == 29);
        org.junit.Assert.assertNull(codeGenerator10);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "4.5.2.1" + "'", str16, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "\"\"" + "'", str20, "\"\"");
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "d" + "'", str36, "d");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "" + "'", str37, "");
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "\"\"" + "'", str42, "\"\"");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNull(sTGroup45);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertNotNull(strArray51);
        org.junit.Assert.assertNull(codeGenerator57);
        org.junit.Assert.assertNotNull(strSet58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "4.5.2.1" + "'", str61, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "\"\"" + "'", str65, "\"\"");
        org.junit.Assert.assertNotNull(strArray75);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(strArray84);
        org.junit.Assert.assertNotNull(strSet85);
        org.junit.Assert.assertNotNull(strSet88);
    }

    @Test
    public void test1878() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1878");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.lang.String str3 = python3Target1.getTargetStringLiteralFromString("");
        int int4 = python3Target1.getSerializedATNSegmentLimit();
        boolean boolean5 = python3Target1.wantsBaseVisitor();
        boolean boolean6 = python3Target1.wantsBaseVisitor();
        java.lang.String str7 = python3Target1.getLanguage();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "\"\"" + "'", str3, "\"\"");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 29 + "'", int4 == 29);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Python3" + "'", str7, "Python3");
    }

    @Test
    public void test1879() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1879");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray1 = python3Target0.targetCharValueEscape;
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = null;
        java.lang.String str6 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator3, "\"\\12\"", false);
        int int7 = python3Target0.getSerializedATNSegmentLimit();
        boolean boolean8 = python3Target0.templatesExist();
        boolean boolean9 = python3Target0.supportsOverloadedMethods();
        boolean boolean10 = python3Target0.wantsBaseVisitor();
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "12" + "'", str6, "12");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 29 + "'", int7 == 29);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test1880() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1880");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!", "hi!" };
        python3Target0.targetCharValueEscape = strArray5;
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = null;
        java.lang.String str10 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator7, "", false);
        java.util.Set<java.lang.String> strSet11 = python3Target0.badWords;
        java.lang.String str13 = python3Target0.getTargetStringLiteralFromString("12");
        int int14 = python3Target0.getSerializedATNSegmentLimit();
        org.antlr.v4.codegen.CodeGenerator codeGenerator15 = null;
        java.lang.String str18 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator15, "d", false);
        boolean boolean19 = python3Target0.templatesExist();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNotNull(strSet11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "\"12\"" + "'", str13, "\"12\"");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 29 + "'", int14 == 29);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    }

    @Test
    public void test1881() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1881");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        python3Target0.language = "";
        org.antlr.v4.codegen.target.Python3Target python3Target3 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean4 = python3Target3.supportsOverloadedMethods();
        java.lang.String str5 = python3Target3.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = null;
        java.lang.String str9 = python3Target3.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator6, "", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = null;
        python3Target3.gen = codeGenerator10;
        java.lang.String[] strArray19 = new java.lang.String[] { "\"\"\"\"", "\\12", "\"\"", "4.5.2.1", "", "\"\"\"\"", "\"\"" };
        java.util.LinkedHashSet<java.lang.String> strSet20 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet20, strArray19);
        python3Target3.badWords = strSet20;
        python3Target0.badWords = strSet20;
        java.lang.String str25 = python3Target0.encodeIntAsCharEscape((int) (byte) 100);
        int int26 = python3Target0.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet27 = python3Target0.badWords;
        org.antlr.v4.tool.ast.GrammarAST grammarAST28 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean29 = python3Target0.grammarSymbolCausesIssueInGeneratedCode(grammarAST28);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "4.5.2.1" + "'", str5, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\"\"" + "'", str9, "\"\"");
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "d" + "'", str25, "d");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 64 + "'", int26 == 64);
        org.junit.Assert.assertNotNull(strSet27);
    }

    @Test
    public void test1882() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1882");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        java.lang.String str2 = python3Target0.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = null;
        java.lang.String str6 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator3, "", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = null;
        python3Target0.gen = codeGenerator7;
        int int9 = python3Target0.getSerializedATNSegmentLimit();
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = null;
        java.lang.String str13 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator10, "_tset\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"ContextContextContex", false);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str15 = python3Target0.getElementName("_\"\\\"\\\\\\\"Python3\\\\\\\"\\\"\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "4.5.2.1" + "'", str2, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\"\"" + "'", str6, "\"\"");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 29 + "'", int9 == 29);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "tset\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"ContextContextConte" + "'", str13, "tset\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"ContextContextConte");
    }

    @Test
    public void test1883() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1883");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!", "hi!" };
        python3Target0.targetCharValueEscape = strArray5;
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = null;
        python3Target0.gen = codeGenerator7;
        org.antlr.v4.tool.Grammar grammar9 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target11 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator10);
        java.lang.String str13 = python3Target11.getTargetStringLiteralFromString("");
        int int14 = python3Target11.getSerializedATNSegmentLimit();
        int int15 = python3Target11.getInlineTestSetWordSize();
        org.antlr.v4.tool.Grammar grammar16 = null;
        org.stringtemplate.v4.ST sT17 = null;
        python3Target11.genRecognizerHeaderFile(grammar16, sT17, "@");
        boolean boolean20 = python3Target11.templatesExist();
        boolean boolean21 = python3Target11.templatesExist();
        java.lang.String str22 = python3Target11.language;
        org.antlr.v4.tool.Grammar grammar23 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator24 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target25 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator24);
        java.util.Set<java.lang.String> strSet26 = python3Target25.getBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator27 = null;
        python3Target25.gen = codeGenerator27;
        java.lang.String str30 = python3Target25.getAltLabelContextStructName("hi!");
        java.lang.String str33 = python3Target25.getTargetStringLiteralFromString("\"hi!\"", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator34 = null;
        python3Target25.gen = codeGenerator34;
        org.antlr.v4.tool.Grammar grammar36 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target37 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray38 = python3Target37.targetCharValueEscape;
        org.stringtemplate.v4.STGroup sTGroup39 = python3Target37.templates;
        int int40 = python3Target37.getInlineTestSetWordSize();
        org.antlr.v4.codegen.CodeGenerator codeGenerator41 = python3Target37.gen;
        org.antlr.v4.tool.Grammar grammar42 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target43 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str45 = python3Target43.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.tool.Grammar grammar46 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target47 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean48 = python3Target47.supportsOverloadedMethods();
        java.lang.String str49 = python3Target47.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator50 = null;
        java.lang.String str53 = python3Target47.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator50, "", true);
        java.lang.String str54 = python3Target47.getVersion();
        org.antlr.v4.tool.Grammar grammar55 = null;
        int[] intArray56 = new int[] {};
        java.lang.String[] strArray57 = python3Target47.getTokenTypesAsTargetLabels(grammar55, intArray56);
        java.lang.String[] strArray58 = python3Target43.getTokenTypesAsTargetLabels(grammar46, intArray56);
        java.lang.String[] strArray59 = python3Target37.getTokenTypesAsTargetLabels(grammar42, intArray56);
        java.lang.String[] strArray60 = python3Target25.getTokenTypesAsTargetLabels(grammar36, intArray56);
        java.lang.String[] strArray61 = python3Target11.getTokenTypesAsTargetLabels(grammar23, intArray56);
        java.lang.String[] strArray62 = python3Target0.getTokenTypesAsTargetLabels(grammar9, intArray56);
        org.antlr.v4.codegen.target.Python3Target.python3Keywords = strArray62;
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "\"\"" + "'", str13, "\"\"");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 29 + "'", int14 == 29);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 64 + "'", int15 == 64);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "Python3" + "'", str22, "Python3");
        org.junit.Assert.assertNotNull(strSet26);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "Hi!Context" + "'", str30, "Hi!Context");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "\"\\\"hi!\\\"\"" + "'", str33, "\"\\\"hi!\\\"\"");
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertNull(sTGroup39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 64 + "'", int40 == 64);
        org.junit.Assert.assertNull(codeGenerator41);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "\"\"\"\"\"\"" + "'", str45, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "4.5.2.1" + "'", str49, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "\"\"" + "'", str53, "\"\"");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "4.5.2.1" + "'", str54, "4.5.2.1");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[]");
        org.junit.Assert.assertNotNull(strArray57);
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertNotNull(strArray59);
        org.junit.Assert.assertNotNull(strArray60);
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertNotNull(strArray62);
    }

    @Test
    public void test1884() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1884");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        org.antlr.v4.tool.Grammar grammar3 = null;
        org.stringtemplate.v4.ST sT4 = null;
        python3Target0.genRecognizerHeaderFile(grammar3, sT4, "");
        python3Target0.language = "Python3";
        int int9 = python3Target0.getSerializedATNSegmentLimit();
        java.lang.String str11 = python3Target0.getListLabel("_tsetPython3");
        boolean boolean12 = python3Target0.wantsBaseVisitor();
        python3Target0.addBadWords();
        java.lang.String str15 = python3Target0.getImplicitSetLabel("hi!");
        java.util.Set<java.lang.String> strSet16 = python3Target0.getBadWords();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 29 + "'", int9 == 29);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "_tsetPython3" + "'", str11, "_tsetPython3");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "_tsethi!" + "'", str15, "_tsethi!");
        org.junit.Assert.assertNotNull(strSet16);
    }

    @Test
    public void test1885() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1885");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        org.antlr.v4.tool.Grammar grammar3 = null;
        org.stringtemplate.v4.ST sT4 = null;
        python3Target0.genRecognizerHeaderFile(grammar3, sT4, "");
        python3Target0.language = "Python3";
        int int9 = python3Target0.getSerializedATNSegmentLimit();
        java.lang.String str11 = python3Target0.getListLabel("_tsetPython3");
        org.antlr.v4.codegen.CodeGenerator codeGenerator12 = null;
        java.lang.String str15 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator12, "\"\"\"hi!\"\"\"", true);
        java.lang.String str17 = python3Target0.getAltLabelContextStructName("\"\"\"\"\"\"\"\"Context");
        java.util.Set<java.lang.String> strSet18 = python3Target0.badWords;
        python3Target0.addBadWords();
        org.antlr.v4.tool.Grammar grammar20 = null;
        org.stringtemplate.v4.ST sT21 = null;
        // The following exception was thrown during execution in test generation
        try {
            python3Target0.genFile(grammar20, sT21, "\"_\"\\1\"\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 29 + "'", int9 == 29);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "_tsetPython3" + "'", str11, "_tsetPython3");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "\"\\\"\\\"hi!\\\"\\\"\"" + "'", str15, "\"\\\"\\\"hi!\\\"\\\"\"");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "\"\"\"\"\"\"\"\"ContextContext" + "'", str17, "\"\"\"\"\"\"\"\"ContextContext");
        org.junit.Assert.assertNotNull(strSet18);
    }

    @Test
    public void test1886() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1886");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.lang.String str3 = python3Target1.getTargetStringLiteralFromString("");
        int int4 = python3Target1.getSerializedATNSegmentLimit();
        boolean boolean5 = python3Target1.wantsBaseVisitor();
        boolean boolean6 = python3Target1.wantsBaseVisitor();
        java.lang.String str9 = python3Target1.getTargetStringLiteralFromString("\"\\35\"", false);
        boolean boolean10 = python3Target1.wantsBaseListener();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "\"\"" + "'", str3, "\"\"");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 29 + "'", int4 == 29);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\\\"\\\\35\\\"" + "'", str9, "\\\"\\\\35\\\"");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test1887() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1887");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        python3Target0.language = "";
        org.antlr.v4.codegen.target.Python3Target python3Target3 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean4 = python3Target3.supportsOverloadedMethods();
        java.lang.String str5 = python3Target3.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = null;
        java.lang.String str9 = python3Target3.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator6, "", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = null;
        python3Target3.gen = codeGenerator10;
        java.lang.String[] strArray19 = new java.lang.String[] { "\"\"\"\"", "\\12", "\"\"", "4.5.2.1", "", "\"\"\"\"", "\"\"" };
        java.util.LinkedHashSet<java.lang.String> strSet20 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet20, strArray19);
        python3Target3.badWords = strSet20;
        python3Target0.badWords = strSet20;
        java.lang.String str25 = python3Target0.encodeIntAsCharEscape((int) (byte) 100);
        java.lang.String str26 = python3Target0.getLanguage();
        boolean boolean27 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup28 = python3Target0.templates;
        java.lang.String str30 = python3Target0.getTargetStringLiteralFromString("\"\"DContext\"\"Context");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str32 = python3Target0.getElementListName("_\\\"1\\\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "4.5.2.1" + "'", str5, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\"\"" + "'", str9, "\"\"");
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "d" + "'", str25, "d");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNull(sTGroup28);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "\"\"\"DContext\"\"Context\"" + "'", str30, "\"\"\"DContext\"\"Context\"");
    }

    @Test
    public void test1888() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1888");
        java.lang.String str1 = org.stringtemplate.v4.StringRenderer.escapeHTML("\"hi!\"");
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "\"hi!\"" + "'", str1, "\"hi!\"");
    }

    @Test
    public void test1889() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1889");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        java.lang.String str2 = python3Target0.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = null;
        java.lang.String str6 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator3, "", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = null;
        python3Target0.gen = codeGenerator7;
        java.lang.String[] strArray16 = new java.lang.String[] { "\"\"\"\"", "\\12", "\"\"", "4.5.2.1", "", "\"\"\"\"", "\"\"" };
        java.util.LinkedHashSet<java.lang.String> strSet17 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet17, strArray16);
        python3Target0.badWords = strSet17;
        org.antlr.v4.tool.Grammar grammar20 = null;
        org.stringtemplate.v4.ST sT21 = null;
        python3Target0.genRecognizerHeaderFile(grammar20, sT21, "\"\"");
        java.lang.String str25 = python3Target0.encodeIntAsCharEscape((int) (byte) 10);
        java.lang.String str26 = python3Target0.language;
        java.util.Set<java.lang.String> strSet27 = python3Target0.getBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator28 = null;
        java.lang.String str31 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator28, "", false);
        java.util.Set<java.lang.String> strSet32 = python3Target0.badWords;
        boolean boolean33 = python3Target0.supportsOverloadedMethods();
        boolean boolean34 = python3Target0.supportsOverloadedMethods();
        org.antlr.v4.codegen.CodeGenerator codeGenerator35 = python3Target0.gen;
        java.lang.String str36 = python3Target0.getLanguage();
        java.util.Set<java.lang.String> strSet37 = python3Target0.getBadWords();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "4.5.2.1" + "'", str2, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\"\"" + "'", str6, "\"\"");
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "\\12" + "'", str25, "\\12");
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(strSet27);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "" + "'", str31, "");
        org.junit.Assert.assertNotNull(strSet32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNull(codeGenerator35);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNotNull(strSet37);
    }

    @Test
    public void test1890() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1890");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        java.lang.String str2 = python3Target0.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = null;
        java.lang.String str6 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator3, "", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = null;
        python3Target0.gen = codeGenerator7;
        java.lang.String[] strArray16 = new java.lang.String[] { "\"\"\"\"", "\\12", "\"\"", "4.5.2.1", "", "\"\"\"\"", "\"\"" };
        java.util.LinkedHashSet<java.lang.String> strSet17 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet17, strArray16);
        python3Target0.badWords = strSet17;
        boolean boolean20 = python3Target0.templatesExist();
        int int21 = python3Target0.getSerializedATNSegmentLimit();
        java.lang.String str23 = python3Target0.getTargetStringLiteralFromString("d");
        java.lang.String str24 = python3Target0.getLanguage();
        java.lang.String str25 = python3Target0.getVersion();
        java.util.Set<java.lang.String> strSet26 = null;
        python3Target0.badWords = strSet26;
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "4.5.2.1" + "'", str2, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\"\"" + "'", str6, "\"\"");
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 29 + "'", int21 == 29);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "\"d\"" + "'", str23, "\"d\"");
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "4.5.2.1" + "'", str25, "4.5.2.1");
    }

    @Test
    public void test1891() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1891");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        org.antlr.v4.tool.Grammar grammar3 = null;
        org.stringtemplate.v4.ST sT4 = null;
        python3Target0.genRecognizerHeaderFile(grammar3, sT4, "");
        org.antlr.v4.codegen.target.Python3Target python3Target7 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray8 = python3Target7.targetCharValueEscape;
        python3Target0.targetCharValueEscape = strArray8;
        python3Target0.addBadWords();
        java.lang.String[] strArray11 = python3Target0.targetCharValueEscape;
        python3Target0.language = "";
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str15 = python3Target0.getElementName("\"\"\"\"\"\"\"Context\"ContextContext");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(strArray11);
    }

    @Test
    public void test1892() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1892");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.lang.String str3 = python3Target1.getTargetStringLiteralFromString("");
        int int4 = python3Target1.getSerializedATNSegmentLimit();
        boolean boolean5 = python3Target1.wantsBaseVisitor();
        org.stringtemplate.v4.STGroup sTGroup6 = python3Target1.loadTemplates();
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = python3Target1.gen;
        org.antlr.v4.codegen.target.Python3Target python3Target8 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean9 = python3Target8.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup10 = python3Target8.templates;
        org.antlr.v4.tool.Grammar grammar11 = null;
        org.stringtemplate.v4.ST sT12 = null;
        python3Target8.genRecognizerHeaderFile(grammar11, sT12, "");
        python3Target8.language = "Python3";
        int int17 = python3Target8.getSerializedATNSegmentLimit();
        org.stringtemplate.v4.STGroup sTGroup18 = python3Target8.loadTemplates();
        python3Target1.templates = sTGroup18;
        java.lang.String str20 = python3Target1.getVersion();
        java.lang.String str22 = python3Target1.getTargetStringLiteralFromString("\"\"\"\"");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "\"\"" + "'", str3, "\"\"");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 29 + "'", int4 == 29);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(sTGroup6);
        org.junit.Assert.assertNull(codeGenerator7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(sTGroup10);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 29 + "'", int17 == 29);
        org.junit.Assert.assertNotNull(sTGroup18);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "4.5.2.1" + "'", str20, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "\"\\\"\\\"\\\"\\\"\"" + "'", str22, "\"\\\"\\\"\\\"\\\"\"");
    }

    @Test
    public void test1893() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1893");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.lang.String str3 = python3Target1.getTargetStringLiteralFromString("");
        int int4 = python3Target1.getSerializedATNSegmentLimit();
        boolean boolean5 = python3Target1.wantsBaseVisitor();
        org.stringtemplate.v4.STGroup sTGroup6 = python3Target1.loadTemplates();
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = python3Target1.gen;
        org.antlr.v4.codegen.target.Python3Target python3Target8 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean9 = python3Target8.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup10 = python3Target8.templates;
        org.antlr.v4.tool.Grammar grammar11 = null;
        org.stringtemplate.v4.ST sT12 = null;
        python3Target8.genRecognizerHeaderFile(grammar11, sT12, "");
        python3Target8.language = "Python3";
        int int17 = python3Target8.getSerializedATNSegmentLimit();
        org.stringtemplate.v4.STGroup sTGroup18 = python3Target8.loadTemplates();
        python3Target1.templates = sTGroup18;
        java.lang.String str20 = python3Target1.getVersion();
        java.lang.String str21 = python3Target1.language;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str23 = python3Target1.getImplicitTokenLabel("\"4.5.2.1\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "\"\"" + "'", str3, "\"\"");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 29 + "'", int4 == 29);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(sTGroup6);
        org.junit.Assert.assertNull(codeGenerator7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(sTGroup10);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 29 + "'", int17 == 29);
        org.junit.Assert.assertNotNull(sTGroup18);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "4.5.2.1" + "'", str20, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Python3" + "'", str21, "Python3");
    }

    @Test
    public void test1894() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1894");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        python3Target0.language = "";
        java.lang.String str4 = python3Target0.encodeIntAsCharEscape(10);
        java.lang.String[] strArray5 = python3Target0.targetCharValueEscape;
        org.stringtemplate.v4.STGroup sTGroup6 = python3Target0.templates;
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "\\12" + "'", str4, "\\12");
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNull(sTGroup6);
    }

    @Test
    public void test1895() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1895");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        java.lang.String str3 = python3Target0.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator4 = null;
        java.lang.String str7 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator4, "\"\\\"hi!\\\"\"", true);
        org.stringtemplate.v4.STGroup sTGroup8 = python3Target0.templates;
        org.antlr.v4.codegen.CodeGenerator codeGenerator9 = python3Target0.getCodeGenerator();
        boolean boolean10 = python3Target0.wantsBaseVisitor();
        python3Target0.addBadWords();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "4.5.2.1" + "'", str3, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "\"\\\"hi!\\\"\"" + "'", str7, "\"\\\"hi!\\\"\"");
        org.junit.Assert.assertNull(sTGroup8);
        org.junit.Assert.assertNull(codeGenerator9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test1896() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1896");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str2 = python3Target0.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = null;
        python3Target0.gen = codeGenerator3;
        org.stringtemplate.v4.STGroup sTGroup5 = python3Target0.templates;
        boolean boolean6 = python3Target0.supportsOverloadedMethods();
        python3Target0.addBadWords();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "\"\"\"\"\"\"" + "'", str2, "\"\"\"\"\"\"");
        org.junit.Assert.assertNull(sTGroup5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    }

    @Test
    public void test1897() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1897");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python3Target1.getBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = null;
        python3Target1.gen = codeGenerator3;
        java.lang.String str6 = python3Target1.getAltLabelContextStructName("hi!");
        java.lang.String str9 = python3Target1.getTargetStringLiteralFromString("\"hi!\"", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = null;
        python3Target1.gen = codeGenerator10;
        org.antlr.v4.tool.Grammar grammar12 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target13 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray14 = python3Target13.targetCharValueEscape;
        org.stringtemplate.v4.STGroup sTGroup15 = python3Target13.templates;
        int int16 = python3Target13.getInlineTestSetWordSize();
        org.antlr.v4.codegen.CodeGenerator codeGenerator17 = python3Target13.gen;
        org.antlr.v4.tool.Grammar grammar18 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target19 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str21 = python3Target19.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.tool.Grammar grammar22 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target23 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean24 = python3Target23.supportsOverloadedMethods();
        java.lang.String str25 = python3Target23.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator26 = null;
        java.lang.String str29 = python3Target23.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator26, "", true);
        java.lang.String str30 = python3Target23.getVersion();
        org.antlr.v4.tool.Grammar grammar31 = null;
        int[] intArray32 = new int[] {};
        java.lang.String[] strArray33 = python3Target23.getTokenTypesAsTargetLabels(grammar31, intArray32);
        java.lang.String[] strArray34 = python3Target19.getTokenTypesAsTargetLabels(grammar22, intArray32);
        java.lang.String[] strArray35 = python3Target13.getTokenTypesAsTargetLabels(grammar18, intArray32);
        java.lang.String[] strArray36 = python3Target1.getTokenTypesAsTargetLabels(grammar12, intArray32);
        java.lang.String[] strArray37 = python3Target1.targetCharValueEscape;
        java.lang.String str39 = python3Target1.getImplicitRuleLabel("#");
        java.lang.String str41 = python3Target1.getListLabel("\"\"tset\\\"\\\"\\\"hi!\\\"\\\"\"\"");
        int int42 = python3Target1.getInlineTestSetWordSize();
        boolean boolean43 = python3Target1.wantsBaseListener();
        boolean boolean44 = python3Target1.supportsOverloadedMethods();
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Hi!Context" + "'", str6, "Hi!Context");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\"\\\"hi!\\\"\"" + "'", str9, "\"\\\"hi!\\\"\"");
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertNull(sTGroup15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 64 + "'", int16 == 64);
        org.junit.Assert.assertNull(codeGenerator17);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "\"\"\"\"\"\"" + "'", str21, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "4.5.2.1" + "'", str25, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "\"\"" + "'", str29, "\"\"");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "4.5.2.1" + "'", str30, "4.5.2.1");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[]");
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "_#" + "'", str39, "_#");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "\"\"tset\\\"\\\"\\\"hi!\\\"\\\"\"\"" + "'", str41, "\"\"tset\\\"\\\"\\\"hi!\\\"\\\"\"\"");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 64 + "'", int42 == 64);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
    }

    @Test
    public void test1898() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1898");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.lang.String str2 = python3Target1.getLanguage();
        org.antlr.v4.codegen.target.Python3Target python3Target3 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean4 = python3Target3.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup5 = python3Target3.templates;
        java.lang.String[] strArray8 = new java.lang.String[] { "hi!", "hi!" };
        python3Target3.targetCharValueEscape = strArray8;
        java.lang.String str11 = python3Target3.getTargetStringLiteralFromString("\"\"");
        org.stringtemplate.v4.STGroup sTGroup12 = null;
        python3Target3.templates = sTGroup12;
        java.lang.String[] strArray14 = python3Target3.targetCharValueEscape;
        int int15 = python3Target3.getInlineTestSetWordSize();
        org.antlr.v4.codegen.CodeGenerator codeGenerator16 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target17 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator16);
        java.lang.String str19 = python3Target17.getTargetStringLiteralFromString("");
        int int20 = python3Target17.getSerializedATNSegmentLimit();
        boolean boolean21 = python3Target17.wantsBaseVisitor();
        org.stringtemplate.v4.STGroup sTGroup22 = python3Target17.loadTemplates();
        org.antlr.v4.codegen.CodeGenerator codeGenerator23 = python3Target17.gen;
        org.antlr.v4.codegen.target.Python3Target python3Target24 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean25 = python3Target24.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup26 = python3Target24.templates;
        org.antlr.v4.tool.Grammar grammar27 = null;
        org.stringtemplate.v4.ST sT28 = null;
        python3Target24.genRecognizerHeaderFile(grammar27, sT28, "");
        python3Target24.language = "Python3";
        int int33 = python3Target24.getSerializedATNSegmentLimit();
        org.stringtemplate.v4.STGroup sTGroup34 = python3Target24.loadTemplates();
        python3Target17.templates = sTGroup34;
        java.lang.String str36 = python3Target17.getVersion();
        java.util.Set<java.lang.String> strSet37 = python3Target17.getBadWords();
        python3Target3.badWords = strSet37;
        java.lang.String[] strArray39 = org.antlr.v4.codegen.target.Python3Target.python3Keywords;
        org.antlr.v4.codegen.target.Python3Target.python3Keywords = strArray39;
        python3Target3.targetCharValueEscape = strArray39;
        org.antlr.v4.codegen.target.Python3Target.python3Keywords = strArray39;
        python3Target1.targetCharValueEscape = strArray39;
        boolean boolean44 = python3Target1.supportsOverloadedMethods();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "Python3" + "'", str2, "Python3");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(sTGroup5);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "\"\"\"\"" + "'", str11, "\"\"\"\"");
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 64 + "'", int15 == 64);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "\"\"" + "'", str19, "\"\"");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 29 + "'", int20 == 29);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(sTGroup22);
        org.junit.Assert.assertNull(codeGenerator23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNull(sTGroup26);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 29 + "'", int33 == 29);
        org.junit.Assert.assertNotNull(sTGroup34);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "4.5.2.1" + "'", str36, "4.5.2.1");
        org.junit.Assert.assertNotNull(strSet37);
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
    }

    @Test
    public void test1899() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1899");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str2 = python3Target0.getTargetStringLiteralFromString("\"\"\"\"");
        java.lang.String str4 = python3Target0.getTargetStringLiteralFromString("");
        int int5 = python3Target0.getSerializedATNSegmentLimit();
        org.antlr.v4.codegen.target.Python3Target python3Target6 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray7 = python3Target6.targetCharValueEscape;
        org.stringtemplate.v4.STGroup sTGroup8 = python3Target6.templates;
        int int9 = python3Target6.getInlineTestSetWordSize();
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = python3Target6.gen;
        org.antlr.v4.tool.Grammar grammar11 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target12 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str14 = python3Target12.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.tool.Grammar grammar15 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target16 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean17 = python3Target16.supportsOverloadedMethods();
        java.lang.String str18 = python3Target16.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator19 = null;
        java.lang.String str22 = python3Target16.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator19, "", true);
        java.lang.String str23 = python3Target16.getVersion();
        org.antlr.v4.tool.Grammar grammar24 = null;
        int[] intArray25 = new int[] {};
        java.lang.String[] strArray26 = python3Target16.getTokenTypesAsTargetLabels(grammar24, intArray25);
        java.lang.String[] strArray27 = python3Target12.getTokenTypesAsTargetLabels(grammar15, intArray25);
        java.lang.String[] strArray28 = python3Target6.getTokenTypesAsTargetLabels(grammar11, intArray25);
        python3Target0.targetCharValueEscape = strArray28;
        boolean boolean30 = python3Target0.wantsBaseListener();
        org.antlr.v4.codegen.CodeGenerator codeGenerator31 = python3Target0.getCodeGenerator();
        org.antlr.v4.tool.ast.GrammarAST grammarAST32 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str33 = python3Target0.getLoopCounter(grammarAST32);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "\"\"\"\"\"\"" + "'", str2, "\"\"\"\"\"\"");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "\"\"" + "'", str4, "\"\"");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 29 + "'", int5 == 29);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNull(sTGroup8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 64 + "'", int9 == 64);
        org.junit.Assert.assertNull(codeGenerator10);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "\"\"\"\"\"\"" + "'", str14, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "4.5.2.1" + "'", str18, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "\"\"" + "'", str22, "\"\"");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "4.5.2.1" + "'", str23, "4.5.2.1");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[]");
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNull(codeGenerator31);
    }

    @Test
    public void test1900() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1900");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.lang.String str3 = python3Target1.getTargetStringLiteralFromString("");
        org.antlr.v4.codegen.CodeGenerator codeGenerator4 = python3Target1.gen;
        java.lang.String str6 = python3Target1.getAltLabelContextStructName("\"\"\"\"\"\"\"Context\"");
        java.lang.String str8 = python3Target1.getAltLabelContextStructName("\"\"\"\"\"\"");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "\"\"" + "'", str3, "\"\"");
        org.junit.Assert.assertNull(codeGenerator4);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\"\"\"\"\"\"\"Context\"Context" + "'", str6, "\"\"\"\"\"\"\"Context\"Context");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\"\"\"\"\"\"Context" + "'", str8, "\"\"\"\"\"\"Context");
    }

    @Test
    public void test1901() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1901");
        org.antlr.v4.codegen.target.Python3Target.PythonStringRenderer pythonStringRenderer0 = new org.antlr.v4.codegen.target.Python3Target.PythonStringRenderer();
        java.lang.Object obj1 = null;
        java.util.Locale locale3 = null;
        java.lang.String str4 = pythonStringRenderer0.toString(obj1, "\"12\"", locale3);
        org.antlr.v4.codegen.target.Python3Target python3Target5 = new org.antlr.v4.codegen.target.Python3Target();
        python3Target5.language = "";
        org.antlr.v4.codegen.target.Python3Target python3Target8 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean9 = python3Target8.supportsOverloadedMethods();
        java.lang.String str10 = python3Target8.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator11 = null;
        java.lang.String str14 = python3Target8.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator11, "", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator15 = null;
        python3Target8.gen = codeGenerator15;
        java.lang.String[] strArray24 = new java.lang.String[] { "\"\"\"\"", "\\12", "\"\"", "4.5.2.1", "", "\"\"\"\"", "\"\"" };
        java.util.LinkedHashSet<java.lang.String> strSet25 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet25, strArray24);
        python3Target8.badWords = strSet25;
        python3Target5.badWords = strSet25;
        java.lang.String str30 = python3Target5.encodeIntAsCharEscape((int) (byte) 100);
        java.lang.String str31 = python3Target5.getLanguage();
        boolean boolean32 = python3Target5.supportsOverloadedMethods();
        java.util.Locale locale34 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str35 = pythonStringRenderer0.toString((java.lang.Object) boolean32, "\"\"Python3\"\"", locale34);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.lang.Boolean cannot be cast to java.lang.String");
        } catch (java.lang.ClassCastException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "\"12\"" + "'", str4, "\"12\"");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "4.5.2.1" + "'", str10, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "\"\"" + "'", str14, "\"\"");
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "d" + "'", str30, "d");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "" + "'", str31, "");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
    }

    @Test
    public void test1902() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1902");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray1 = python3Target0.targetCharValueEscape;
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        int int3 = python3Target0.getInlineTestSetWordSize();
        boolean boolean4 = python3Target0.supportsOverloadedMethods();
        java.lang.String str6 = python3Target0.encodeIntAsCharEscape(64);
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = python3Target0.getCodeGenerator();
        boolean boolean8 = python3Target0.templatesExist();
        java.lang.String str9 = python3Target0.getVersion();
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 64 + "'", int3 == 64);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "@" + "'", str6, "@");
        org.junit.Assert.assertNull(codeGenerator7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "4.5.2.1" + "'", str9, "4.5.2.1");
    }

    @Test
    public void test1903() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1903");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python3Target1.getBadWords();
        java.lang.String str4 = python3Target1.getAltLabelContextStructName("d");
        java.lang.String str6 = python3Target1.getTargetStringLiteralFromString("\"\"");
        java.lang.String str8 = python3Target1.encodeIntAsCharEscape(100);
        java.lang.String str10 = python3Target1.getTargetStringLiteralFromString("\"\\\"\\\"4.5.2.1\\\"\\\"\"Context");
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "DContext" + "'", str4, "DContext");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\"\\\"\\\"\"" + "'", str6, "\"\\\"\\\"\"");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "d" + "'", str8, "d");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\"\\\"\\\\\\\"\\\\\\\"4.5.2.1\\\\\\\"\\\\\\\"\\\"Context\"" + "'", str10, "\"\\\"\\\\\\\"\\\\\\\"4.5.2.1\\\\\\\"\\\\\\\"\\\"Context\"");
    }

    @Test
    public void test1904() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1904");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        org.antlr.v4.tool.Grammar grammar3 = null;
        org.stringtemplate.v4.ST sT4 = null;
        python3Target0.genRecognizerHeaderFile(grammar3, sT4, "");
        org.antlr.v4.codegen.target.Python3Target python3Target7 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray8 = python3Target7.targetCharValueEscape;
        python3Target0.targetCharValueEscape = strArray8;
        boolean boolean10 = python3Target0.supportsOverloadedMethods();
        boolean boolean11 = python3Target0.wantsBaseListener();
        java.lang.String str13 = python3Target0.getTargetStringLiteralFromString("_tset12");
        org.antlr.v4.codegen.target.Python3Target python3Target14 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray15 = python3Target14.targetCharValueEscape;
        org.stringtemplate.v4.STGroup sTGroup16 = python3Target14.templates;
        int int17 = python3Target14.getInlineTestSetWordSize();
        org.antlr.v4.codegen.CodeGenerator codeGenerator18 = python3Target14.gen;
        org.antlr.v4.tool.Grammar grammar19 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target20 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str22 = python3Target20.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.tool.Grammar grammar23 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target24 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean25 = python3Target24.supportsOverloadedMethods();
        java.lang.String str26 = python3Target24.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator27 = null;
        java.lang.String str30 = python3Target24.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator27, "", true);
        java.lang.String str31 = python3Target24.getVersion();
        org.antlr.v4.tool.Grammar grammar32 = null;
        int[] intArray33 = new int[] {};
        java.lang.String[] strArray34 = python3Target24.getTokenTypesAsTargetLabels(grammar32, intArray33);
        java.lang.String[] strArray35 = python3Target20.getTokenTypesAsTargetLabels(grammar23, intArray33);
        java.lang.String[] strArray36 = python3Target14.getTokenTypesAsTargetLabels(grammar19, intArray33);
        java.lang.String[] strArray37 = python3Target14.targetCharValueEscape;
        org.antlr.v4.codegen.CodeGenerator codeGenerator38 = python3Target14.getCodeGenerator();
        java.lang.String[] strArray39 = python3Target14.targetCharValueEscape;
        python3Target0.targetCharValueEscape = strArray39;
        org.antlr.v4.codegen.target.Python3Target.python3Keywords = strArray39;
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "\"_tset12\"" + "'", str13, "\"_tset12\"");
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNull(sTGroup16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 64 + "'", int17 == 64);
        org.junit.Assert.assertNull(codeGenerator18);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "\"\"\"\"\"\"" + "'", str22, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "4.5.2.1" + "'", str26, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "\"\"" + "'", str30, "\"\"");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "4.5.2.1" + "'", str31, "4.5.2.1");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[]");
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertNull(codeGenerator38);
        org.junit.Assert.assertNotNull(strArray39);
    }

    @Test
    public void test1905() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1905");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        java.util.Set<java.lang.String> strSet2 = python3Target0.badWords;
        boolean boolean3 = python3Target0.templatesExist();
        java.lang.String str4 = python3Target0.getLanguage();
        org.antlr.v4.tool.Grammar grammar5 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target6 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str8 = python3Target6.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator9 = null;
        python3Target6.gen = codeGenerator9;
        org.antlr.v4.tool.Grammar grammar11 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target12 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str14 = python3Target12.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.tool.Grammar grammar15 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target16 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean17 = python3Target16.supportsOverloadedMethods();
        java.lang.String str18 = python3Target16.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator19 = null;
        java.lang.String str22 = python3Target16.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator19, "", true);
        java.lang.String str23 = python3Target16.getVersion();
        org.antlr.v4.tool.Grammar grammar24 = null;
        int[] intArray25 = new int[] {};
        java.lang.String[] strArray26 = python3Target16.getTokenTypesAsTargetLabels(grammar24, intArray25);
        java.lang.String[] strArray27 = python3Target12.getTokenTypesAsTargetLabels(grammar15, intArray25);
        java.lang.String[] strArray28 = python3Target6.getTokenTypesAsTargetLabels(grammar11, intArray25);
        java.lang.String[] strArray29 = python3Target0.getTokenTypesAsTargetLabels(grammar5, intArray25);
        java.util.Set<java.lang.String> strSet30 = python3Target0.badWords;
        org.antlr.v4.codegen.target.Python3Target python3Target31 = new org.antlr.v4.codegen.target.Python3Target();
        python3Target31.language = "4.5.2.1";
        org.antlr.v4.codegen.CodeGenerator codeGenerator34 = python3Target31.getCodeGenerator();
        org.antlr.v4.codegen.CodeGenerator codeGenerator35 = python3Target31.gen;
        java.lang.String str36 = python3Target31.getLanguage();
        python3Target31.addBadWords();
        org.antlr.v4.codegen.target.Python3Target python3Target38 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str40 = python3Target38.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator41 = null;
        python3Target38.gen = codeGenerator41;
        java.lang.String str43 = python3Target38.getVersion();
        org.antlr.v4.codegen.target.Python3Target python3Target44 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean45 = python3Target44.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup46 = python3Target44.templates;
        org.antlr.v4.tool.Grammar grammar47 = null;
        org.stringtemplate.v4.ST sT48 = null;
        python3Target44.genRecognizerHeaderFile(grammar47, sT48, "");
        python3Target44.language = "Python3";
        int int53 = python3Target44.getSerializedATNSegmentLimit();
        org.stringtemplate.v4.STGroup sTGroup54 = python3Target44.loadTemplates();
        python3Target38.templates = sTGroup54;
        python3Target31.templates = sTGroup54;
        python3Target0.templates = sTGroup54;
        java.util.Set<java.lang.String> strSet58 = python3Target0.getBadWords();
        java.lang.String str59 = python3Target0.language;
        boolean boolean60 = python3Target0.wantsBaseListener();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\"\"\"\"\"\"" + "'", str8, "\"\"\"\"\"\"");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "\"\"\"\"\"\"" + "'", str14, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "4.5.2.1" + "'", str18, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "\"\"" + "'", str22, "\"\"");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "4.5.2.1" + "'", str23, "4.5.2.1");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[]");
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertNotNull(strSet30);
        org.junit.Assert.assertNull(codeGenerator34);
        org.junit.Assert.assertNull(codeGenerator35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "4.5.2.1" + "'", str36, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "\"\"\"\"\"\"" + "'", str40, "\"\"\"\"\"\"");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "4.5.2.1" + "'", str43, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNull(sTGroup46);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 29 + "'", int53 == 29);
        org.junit.Assert.assertNotNull(sTGroup54);
        org.junit.Assert.assertNotNull(strSet58);
        org.junit.Assert.assertNull(str59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
    }

    @Test
    public void test1906() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1906");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.lang.String str3 = python3Target1.getTargetStringLiteralFromString("");
        int int4 = python3Target1.getSerializedATNSegmentLimit();
        boolean boolean5 = python3Target1.wantsBaseVisitor();
        java.lang.String str6 = python3Target1.getVersion();
        python3Target1.language = "\"\"\"\"\"\"\"\"";
        java.lang.String str9 = python3Target1.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup10 = python3Target1.templates;
        python3Target1.language = "\\\"\\\\35\\\"";
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str14 = python3Target1.getListLabel("_\"\\1\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "\"\"" + "'", str3, "\"\"");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 29 + "'", int4 == 29);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "4.5.2.1" + "'", str6, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\"\"\"\"\"\"\"\"" + "'", str9, "\"\"\"\"\"\"\"\"");
        org.junit.Assert.assertNull(sTGroup10);
    }

    @Test
    public void test1907() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1907");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        org.antlr.v4.tool.Grammar grammar3 = null;
        org.stringtemplate.v4.ST sT4 = null;
        python3Target0.genRecognizerHeaderFile(grammar3, sT4, "");
        python3Target0.language = "Python3";
        java.util.Set<java.lang.String> strSet9 = null;
        python3Target0.badWords = strSet9;
        org.antlr.v4.codegen.CodeGenerator codeGenerator11 = null;
        java.lang.String str14 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator11, "\"Hi!Context\"", false);
        java.lang.String str16 = python3Target0.getListLabel("Python3");
        java.lang.String str18 = python3Target0.getTargetStringLiteralFromString("\\0");
        org.antlr.v4.tool.Grammar grammar19 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target20 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str22 = python3Target20.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.tool.Grammar grammar23 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target24 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean25 = python3Target24.supportsOverloadedMethods();
        java.lang.String str26 = python3Target24.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator27 = null;
        java.lang.String str30 = python3Target24.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator27, "", true);
        java.lang.String str31 = python3Target24.getVersion();
        org.antlr.v4.tool.Grammar grammar32 = null;
        int[] intArray33 = new int[] {};
        java.lang.String[] strArray34 = python3Target24.getTokenTypesAsTargetLabels(grammar32, intArray33);
        java.lang.String[] strArray35 = python3Target20.getTokenTypesAsTargetLabels(grammar23, intArray33);
        java.lang.String[] strArray36 = python3Target0.getTokenTypesAsTargetLabels(grammar19, intArray33);
        java.lang.String str38 = python3Target0.getImplicitSetLabel("\"\\\"Python3\\\"\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator39 = python3Target0.gen;
        org.antlr.v4.codegen.CodeGenerator codeGenerator40 = null;
        java.lang.String str43 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator40, "\\\"\\\"\\\"\\\"\\\"\\\"Context", false);
        java.lang.String str45 = python3Target0.getListLabel("\"d\"");
        java.lang.String str47 = python3Target0.getImplicitSetLabel("\"_tset\\\"\\\"Python3\\\"\\\"\"");
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Hi!Context" + "'", str14, "Hi!Context");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Python3" + "'", str16, "Python3");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "\"\\0\"" + "'", str18, "\"\\0\"");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "\"\"\"\"\"\"" + "'", str22, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "4.5.2.1" + "'", str26, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "\"\"" + "'", str30, "\"\"");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "4.5.2.1" + "'", str31, "4.5.2.1");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[]");
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "_tset\"\\\"Python3\\\"\"" + "'", str38, "_tset\"\\\"Python3\\\"\"");
        org.junit.Assert.assertNull(codeGenerator39);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "\\\"\\\"\\\"\\\"\\\"\\\"Contex" + "'", str43, "\\\"\\\"\\\"\\\"\\\"\\\"Contex");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "\"d\"" + "'", str45, "\"d\"");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "_tset\"_tset\\\"\\\"Python3\\\"\\\"\"" + "'", str47, "_tset\"_tset\\\"\\\"Python3\\\"\\\"\"");
    }

    @Test
    public void test1908() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1908");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str2 = python3Target0.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = null;
        python3Target0.gen = codeGenerator3;
        org.antlr.v4.codegen.target.Python3Target python3Target5 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray6 = python3Target5.targetCharValueEscape;
        java.lang.String str7 = python3Target5.language;
        java.lang.String[] strArray8 = python3Target5.targetCharValueEscape;
        python3Target0.targetCharValueEscape = strArray8;
        org.antlr.v4.codegen.target.Python3Target python3Target10 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str12 = python3Target10.getTargetStringLiteralFromString("\"\"\"\"");
        java.lang.String str14 = python3Target10.getTargetStringLiteralFromString("");
        int int15 = python3Target10.getSerializedATNSegmentLimit();
        org.antlr.v4.codegen.target.Python3Target python3Target16 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray17 = python3Target16.targetCharValueEscape;
        org.stringtemplate.v4.STGroup sTGroup18 = python3Target16.templates;
        int int19 = python3Target16.getInlineTestSetWordSize();
        org.antlr.v4.codegen.CodeGenerator codeGenerator20 = python3Target16.gen;
        org.antlr.v4.tool.Grammar grammar21 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target22 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str24 = python3Target22.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.tool.Grammar grammar25 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target26 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean27 = python3Target26.supportsOverloadedMethods();
        java.lang.String str28 = python3Target26.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator29 = null;
        java.lang.String str32 = python3Target26.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator29, "", true);
        java.lang.String str33 = python3Target26.getVersion();
        org.antlr.v4.tool.Grammar grammar34 = null;
        int[] intArray35 = new int[] {};
        java.lang.String[] strArray36 = python3Target26.getTokenTypesAsTargetLabels(grammar34, intArray35);
        java.lang.String[] strArray37 = python3Target22.getTokenTypesAsTargetLabels(grammar25, intArray35);
        java.lang.String[] strArray38 = python3Target16.getTokenTypesAsTargetLabels(grammar21, intArray35);
        python3Target10.targetCharValueEscape = strArray38;
        org.antlr.v4.codegen.target.Python3Target.python3Keywords = strArray38;
        python3Target0.targetCharValueEscape = strArray38;
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "\"\"\"\"\"\"" + "'", str2, "\"\"\"\"\"\"");
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "\"\"\"\"\"\"" + "'", str12, "\"\"\"\"\"\"");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "\"\"" + "'", str14, "\"\"");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 29 + "'", int15 == 29);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertNull(sTGroup18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 64 + "'", int19 == 64);
        org.junit.Assert.assertNull(codeGenerator20);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "\"\"\"\"\"\"" + "'", str24, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "4.5.2.1" + "'", str28, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "\"\"" + "'", str32, "\"\"");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "4.5.2.1" + "'", str33, "4.5.2.1");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[]");
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertNotNull(strArray38);
    }

    @Test
    public void test1909() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1909");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        org.antlr.v4.tool.Grammar grammar3 = null;
        org.stringtemplate.v4.ST sT4 = null;
        python3Target0.genRecognizerHeaderFile(grammar3, sT4, "");
        python3Target0.language = "Python3";
        java.util.Set<java.lang.String> strSet9 = null;
        python3Target0.badWords = strSet9;
        boolean boolean11 = python3Target0.wantsBaseVisitor();
        java.lang.String str13 = python3Target0.getImplicitSetLabel("Python3");
        int int14 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str15 = python3Target0.language;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str17 = python3Target0.getElementListName("\\\"\\\"\\\"\\\"\\\"\\\"Contex");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "_tsetPython3" + "'", str13, "_tsetPython3");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 64 + "'", int14 == 64);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Python3" + "'", str15, "Python3");
    }

    @Test
    public void test1910() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1910");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python3Target1.getBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = null;
        python3Target1.gen = codeGenerator3;
        java.lang.String str6 = python3Target1.getAltLabelContextStructName("hi!");
        org.antlr.v4.tool.Grammar grammar7 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target8 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean9 = python3Target8.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup10 = python3Target8.templates;
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "hi!" };
        python3Target8.targetCharValueEscape = strArray13;
        java.lang.String[] strArray16 = new java.lang.String[] { "hi!" };
        org.antlr.v4.codegen.target.Python3Target.python3Keywords = strArray16;
        python3Target8.targetCharValueEscape = strArray16;
        org.antlr.v4.tool.Grammar grammar19 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target20 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str22 = python3Target20.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator23 = null;
        python3Target20.gen = codeGenerator23;
        org.antlr.v4.tool.Grammar grammar25 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target26 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str28 = python3Target26.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.tool.Grammar grammar29 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target30 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean31 = python3Target30.supportsOverloadedMethods();
        java.lang.String str32 = python3Target30.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator33 = null;
        java.lang.String str36 = python3Target30.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator33, "", true);
        java.lang.String str37 = python3Target30.getVersion();
        org.antlr.v4.tool.Grammar grammar38 = null;
        int[] intArray39 = new int[] {};
        java.lang.String[] strArray40 = python3Target30.getTokenTypesAsTargetLabels(grammar38, intArray39);
        java.lang.String[] strArray41 = python3Target26.getTokenTypesAsTargetLabels(grammar29, intArray39);
        java.lang.String[] strArray42 = python3Target20.getTokenTypesAsTargetLabels(grammar25, intArray39);
        java.lang.String[] strArray43 = python3Target8.getTokenTypesAsTargetLabels(grammar19, intArray39);
        java.lang.String[] strArray44 = python3Target1.getTokenTypesAsTargetLabels(grammar7, intArray39);
        java.util.Set<java.lang.String> strSet45 = python3Target1.getBadWords();
        org.antlr.v4.tool.ast.GrammarAST grammarAST46 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str47 = python3Target1.getLoopLabel(grammarAST46);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Hi!Context" + "'", str6, "Hi!Context");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(sTGroup10);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "\"\"\"\"\"\"" + "'", str22, "\"\"\"\"\"\"");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "\"\"\"\"\"\"" + "'", str28, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "4.5.2.1" + "'", str32, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "\"\"" + "'", str36, "\"\"");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "4.5.2.1" + "'", str37, "4.5.2.1");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[]");
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertNotNull(strSet45);
    }

    @Test
    public void test1911() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1911");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray1 = python3Target0.targetCharValueEscape;
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = null;
        java.lang.String str6 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator3, "\"\\12\"", false);
        int int7 = python3Target0.getSerializedATNSegmentLimit();
        boolean boolean8 = python3Target0.templatesExist();
        boolean boolean9 = python3Target0.supportsOverloadedMethods();
        boolean boolean10 = python3Target0.wantsBaseListener();
        org.antlr.v4.tool.ast.GrammarAST grammarAST11 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str12 = python3Target0.getLoopCounter(grammarAST11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "12" + "'", str6, "12");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 29 + "'", int7 == 29);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test1912() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1912");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        org.antlr.v4.tool.Grammar grammar3 = null;
        org.stringtemplate.v4.ST sT4 = null;
        python3Target0.genRecognizerHeaderFile(grammar3, sT4, "");
        python3Target0.language = "Python3";
        java.util.Set<java.lang.String> strSet9 = null;
        python3Target0.badWords = strSet9;
        org.antlr.v4.codegen.CodeGenerator codeGenerator11 = null;
        java.lang.String str14 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator11, "\"Hi!Context\"", false);
        java.lang.String str16 = python3Target0.getListLabel("Python3");
        java.lang.String str18 = python3Target0.getTargetStringLiteralFromString("\\0");
        org.antlr.v4.tool.Grammar grammar19 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target20 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str22 = python3Target20.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.tool.Grammar grammar23 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target24 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean25 = python3Target24.supportsOverloadedMethods();
        java.lang.String str26 = python3Target24.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator27 = null;
        java.lang.String str30 = python3Target24.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator27, "", true);
        java.lang.String str31 = python3Target24.getVersion();
        org.antlr.v4.tool.Grammar grammar32 = null;
        int[] intArray33 = new int[] {};
        java.lang.String[] strArray34 = python3Target24.getTokenTypesAsTargetLabels(grammar32, intArray33);
        java.lang.String[] strArray35 = python3Target20.getTokenTypesAsTargetLabels(grammar23, intArray33);
        java.lang.String[] strArray36 = python3Target0.getTokenTypesAsTargetLabels(grammar19, intArray33);
        org.stringtemplate.v4.STGroup sTGroup37 = python3Target0.getTemplates();
        python3Target0.language = "\"\"4.5.2.1\"\"";
        org.stringtemplate.v4.STGroup sTGroup40 = python3Target0.getTemplates();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str42 = python3Target0.getImplicitTokenLabel("");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Hi!Context" + "'", str14, "Hi!Context");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Python3" + "'", str16, "Python3");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "\"\\0\"" + "'", str18, "\"\\0\"");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "\"\"\"\"\"\"" + "'", str22, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "4.5.2.1" + "'", str26, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "\"\"" + "'", str30, "\"\"");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "4.5.2.1" + "'", str31, "4.5.2.1");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[]");
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertNotNull(sTGroup37);
        org.junit.Assert.assertNotNull(sTGroup40);
    }

    @Test
    public void test1913() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1913");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        java.util.Set<java.lang.String> strSet2 = python3Target0.badWords;
        org.antlr.v4.codegen.model.RuleFunction ruleFunction3 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str4 = python3Target0.getRuleFunctionContextStructName(ruleFunction3);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNotNull(strSet2);
    }

    @Test
    public void test1914() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1914");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.lang.String str3 = python3Target1.getTargetStringLiteralFromString("");
        int int4 = python3Target1.getSerializedATNSegmentLimit();
        boolean boolean5 = python3Target1.wantsBaseListener();
        java.lang.String str7 = python3Target1.getAltLabelContextStructName("\"\\\"\\\\\\\"\\\\\\\"hi!\\\\\\\"\\\\\\\"\\\"\"");
        org.antlr.v4.codegen.target.Python3Target python3Target8 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean9 = python3Target8.supportsOverloadedMethods();
        java.lang.String str10 = python3Target8.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator11 = python3Target8.getCodeGenerator();
        org.antlr.v4.tool.Grammar grammar12 = null;
        org.stringtemplate.v4.ST sT13 = null;
        python3Target8.genRecognizerHeaderFile(grammar12, sT13, "_tsetPython3");
        java.util.Set<java.lang.String> strSet16 = python3Target8.badWords;
        python3Target1.badWords = strSet16;
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "\"\"" + "'", str3, "\"\"");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 29 + "'", int4 == 29);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "\"\\\"\\\\\\\"\\\\\\\"hi!\\\\\\\"\\\\\\\"\\\"\"Context" + "'", str7, "\"\\\"\\\\\\\"\\\\\\\"hi!\\\\\\\"\\\\\\\"\\\"\"Context");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "4.5.2.1" + "'", str10, "4.5.2.1");
        org.junit.Assert.assertNull(codeGenerator11);
        org.junit.Assert.assertNotNull(strSet16);
    }

    @Test
    public void test1915() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1915");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        java.lang.String str2 = python3Target0.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = python3Target0.getCodeGenerator();
        org.antlr.v4.tool.Grammar grammar4 = null;
        org.stringtemplate.v4.ST sT5 = null;
        python3Target0.genRecognizerHeaderFile(grammar4, sT5, "_tsetPython3");
        boolean boolean8 = python3Target0.wantsBaseListener();
        org.antlr.v4.codegen.target.Python3Target python3Target9 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean10 = python3Target9.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup11 = python3Target9.templates;
        java.lang.String[] strArray14 = new java.lang.String[] { "hi!", "hi!" };
        python3Target9.targetCharValueEscape = strArray14;
        org.antlr.v4.codegen.CodeGenerator codeGenerator16 = null;
        java.lang.String str19 = python3Target9.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator16, "", false);
        java.util.Set<java.lang.String> strSet20 = python3Target9.badWords;
        java.util.Set<java.lang.String> strSet21 = python3Target9.badWords;
        java.util.Set<java.lang.String> strSet22 = python3Target9.badWords;
        python3Target0.badWords = strSet22;
        java.lang.String str25 = python3Target0.encodeIntAsCharEscape((int) (short) 100);
        java.lang.String str27 = python3Target0.encodeIntAsCharEscape(0);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "4.5.2.1" + "'", str2, "4.5.2.1");
        org.junit.Assert.assertNull(codeGenerator3);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(sTGroup11);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertNotNull(strSet20);
        org.junit.Assert.assertNotNull(strSet21);
        org.junit.Assert.assertNotNull(strSet22);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "d" + "'", str25, "d");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "\\0" + "'", str27, "\\0");
    }

    @Test
    public void test1916() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1916");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        org.antlr.v4.tool.Grammar grammar3 = null;
        org.stringtemplate.v4.ST sT4 = null;
        python3Target0.genRecognizerHeaderFile(grammar3, sT4, "");
        python3Target0.language = "Python3";
        java.util.Set<java.lang.String> strSet9 = null;
        python3Target0.badWords = strSet9;
        boolean boolean11 = python3Target0.wantsBaseVisitor();
        org.antlr.v4.codegen.CodeGenerator codeGenerator12 = null;
        python3Target0.gen = codeGenerator12;
        java.lang.String str15 = python3Target0.getListLabel("\"\\\"\\\"hi!\\\"\\\"\"");
        java.lang.String str16 = python3Target0.language;
        // The following exception was thrown during execution in test generation
        try {
            python3Target0.addBadWords();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "\"\\\"\\\"hi!\\\"\\\"\"" + "'", str15, "\"\\\"\\\"hi!\\\"\\\"\"");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Python3" + "'", str16, "Python3");
    }

    @Test
    public void test1917() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1917");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        org.antlr.v4.tool.Grammar grammar3 = null;
        org.stringtemplate.v4.ST sT4 = null;
        python3Target0.genRecognizerHeaderFile(grammar3, sT4, "");
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = python3Target0.getCodeGenerator();
        java.util.Set<java.lang.String> strSet8 = python3Target0.badWords;
        java.lang.String[] strArray9 = python3Target0.targetCharValueEscape;
        java.lang.String str11 = python3Target0.getTargetStringLiteralFromString("\\12");
        java.lang.String str13 = python3Target0.getTargetStringLiteralFromString("\"\\\"\\\\\\\"\\\\\\\"4.5.2.1\\\\\\\"\\\\\\\"\\\"Context\"");
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertNull(codeGenerator7);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "\"\\12\"" + "'", str11, "\"\\12\"");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "\"\"\\\"\\\\\\\"\\\\\\\"4.5.2.1\\\\\\\"\\\\\\\"\\\"Context\"\"" + "'", str13, "\"\"\\\"\\\\\\\"\\\\\\\"4.5.2.1\\\\\\\"\\\\\\\"\\\"Context\"\"");
    }

    @Test
    public void test1918() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1918");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        java.lang.String str2 = python3Target0.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = python3Target0.getCodeGenerator();
        org.stringtemplate.v4.STGroup sTGroup4 = null;
        python3Target0.templates = sTGroup4;
        org.stringtemplate.v4.STGroup sTGroup6 = python3Target0.templates;
        java.lang.String[] strArray7 = python3Target0.targetCharValueEscape;
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = null;
        java.lang.String str11 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator8, "\\\"4.5.2.1\\\"", true);
        java.lang.String str13 = python3Target0.getTargetStringLiteralFromString("___tset\"\"\"\"\"\"\"\"ContextContextContextContext");
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "4.5.2.1" + "'", str2, "4.5.2.1");
        org.junit.Assert.assertNull(codeGenerator3);
        org.junit.Assert.assertNull(sTGroup6);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "\"\\\"4.5.2.1\\\"\"" + "'", str11, "\"\\\"4.5.2.1\\\"\"");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "\"___tset\"\"\"\"\"\"\"\"ContextContextContextContext\"" + "'", str13, "\"___tset\"\"\"\"\"\"\"\"ContextContextContextContext\"");
    }

    @Test
    public void test1919() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1919");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python3Target1.getBadWords();
        org.antlr.v4.codegen.target.Python3Target python3Target3 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str5 = python3Target3.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.codegen.target.Python3Target python3Target6 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean7 = python3Target6.supportsOverloadedMethods();
        java.util.Set<java.lang.String> strSet8 = python3Target6.badWords;
        python3Target3.badWords = strSet8;
        python3Target1.badWords = strSet8;
        java.util.Set<java.lang.String> strSet11 = python3Target1.badWords;
        java.lang.String str12 = python3Target1.language;
        org.stringtemplate.v4.STGroup sTGroup13 = python3Target1.getTemplates();
        boolean boolean14 = python3Target1.wantsBaseVisitor();
        boolean boolean15 = python3Target1.wantsBaseVisitor();
        java.lang.String str17 = python3Target1.getImplicitRuleLabel("_tset\\\\12");
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "\"\"\"\"\"\"" + "'", str5, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertNotNull(strSet11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Python3" + "'", str12, "Python3");
        org.junit.Assert.assertNotNull(sTGroup13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "__tset\\\\12" + "'", str17, "__tset\\\\12");
    }

    @Test
    public void test1920() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1920");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.lang.String str3 = python3Target1.getTargetStringLiteralFromString("");
        int int4 = python3Target1.getSerializedATNSegmentLimit();
        boolean boolean5 = python3Target1.wantsBaseVisitor();
        org.stringtemplate.v4.STGroup sTGroup6 = python3Target1.loadTemplates();
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = python3Target1.gen;
        org.antlr.v4.codegen.target.Python3Target python3Target8 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean9 = python3Target8.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup10 = python3Target8.templates;
        org.antlr.v4.tool.Grammar grammar11 = null;
        org.stringtemplate.v4.ST sT12 = null;
        python3Target8.genRecognizerHeaderFile(grammar11, sT12, "");
        python3Target8.language = "Python3";
        int int17 = python3Target8.getSerializedATNSegmentLimit();
        org.stringtemplate.v4.STGroup sTGroup18 = python3Target8.loadTemplates();
        python3Target1.templates = sTGroup18;
        java.lang.String str20 = python3Target1.getVersion();
        java.lang.String str22 = python3Target1.getAltLabelContextStructName("\"\\\"\\\"\\\\0\\\"\\\"\"");
        java.lang.String[] strArray23 = python3Target1.targetCharValueEscape;
        python3Target1.language = "_tset\"\"";
        org.stringtemplate.v4.STGroup sTGroup26 = python3Target1.getTemplates();
        org.stringtemplate.v4.STGroup sTGroup27 = python3Target1.templates;
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "\"\"" + "'", str3, "\"\"");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 29 + "'", int4 == 29);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(sTGroup6);
        org.junit.Assert.assertNull(codeGenerator7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(sTGroup10);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 29 + "'", int17 == 29);
        org.junit.Assert.assertNotNull(sTGroup18);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "4.5.2.1" + "'", str20, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "\"\\\"\\\"\\\\0\\\"\\\"\"Context" + "'", str22, "\"\\\"\\\"\\\\0\\\"\\\"\"Context");
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertNotNull(sTGroup26);
        org.junit.Assert.assertNotNull(sTGroup27);
    }

    @Test
    public void test1921() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1921");
        org.antlr.v4.codegen.target.Python3Target.PythonStringRenderer pythonStringRenderer0 = new org.antlr.v4.codegen.target.Python3Target.PythonStringRenderer();
        java.lang.Object obj1 = null;
        java.util.Locale locale3 = null;
        java.lang.String str4 = pythonStringRenderer0.toString(obj1, "\"\"\"\"\"\"", locale3);
        org.antlr.v4.codegen.target.Python3Target python3Target5 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray6 = python3Target5.targetCharValueEscape;
        org.stringtemplate.v4.STGroup sTGroup7 = python3Target5.templates;
        java.util.Locale locale9 = null;
        java.lang.String str10 = pythonStringRenderer0.toString((java.lang.Object) sTGroup7, "\"Hi!Context\"", locale9);
        java.util.Locale locale13 = null;
        java.lang.String str14 = pythonStringRenderer0.toString((java.lang.Object) "\"DContext\"", "", locale13);
        java.lang.Object obj15 = null;
        java.util.Locale locale17 = null;
        java.lang.String str18 = pythonStringRenderer0.toString(obj15, "\"\\\"hi!\\\"\"", locale17);
        java.util.Locale locale21 = null;
        java.lang.String str22 = pythonStringRenderer0.toString((java.lang.Object) "\"\"\"\"\"\"\"\"Context", "\"1\"", locale21);
        org.antlr.v4.codegen.target.Python3Target python3Target23 = new org.antlr.v4.codegen.target.Python3Target();
        python3Target23.language = "";
        org.antlr.v4.codegen.target.Python3Target python3Target26 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean27 = python3Target26.supportsOverloadedMethods();
        java.lang.String str28 = python3Target26.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator29 = null;
        java.lang.String str32 = python3Target26.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator29, "", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator33 = null;
        python3Target26.gen = codeGenerator33;
        java.lang.String[] strArray42 = new java.lang.String[] { "\"\"\"\"", "\\12", "\"\"", "4.5.2.1", "", "\"\"\"\"", "\"\"" };
        java.util.LinkedHashSet<java.lang.String> strSet43 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet43, strArray42);
        python3Target26.badWords = strSet43;
        python3Target23.badWords = strSet43;
        java.lang.String str48 = python3Target23.encodeIntAsCharEscape((int) (byte) 100);
        java.lang.String str49 = python3Target23.getLanguage();
        java.lang.String[] strArray50 = new java.lang.String[] {};
        python3Target23.targetCharValueEscape = strArray50;
        java.lang.String str54 = python3Target23.getTargetStringLiteralFromString("", true);
        java.util.Locale locale56 = null;
        java.lang.String str57 = pythonStringRenderer0.toString((java.lang.Object) str54, "\"\\\"\\\"\\\"\\\\\\\"\\\\\\\"hi!\\\\\\\"\\\\\\\"\\\"\\\"\\\"\"", locale56);
        org.antlr.v4.codegen.target.Python3Target python3Target58 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean59 = python3Target58.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup60 = python3Target58.templates;
        org.antlr.v4.tool.Grammar grammar61 = null;
        org.stringtemplate.v4.ST sT62 = null;
        python3Target58.genRecognizerHeaderFile(grammar61, sT62, "");
        python3Target58.language = "Python3";
        int int67 = python3Target58.getSerializedATNSegmentLimit();
        java.lang.String str69 = python3Target58.getListLabel("_tsetPython3");
        org.stringtemplate.v4.STGroup sTGroup70 = python3Target58.loadTemplates();
        int int71 = python3Target58.getInlineTestSetWordSize();
        java.lang.String str74 = python3Target58.getTargetStringLiteralFromString("\"\"_tset12\"\"", true);
        org.stringtemplate.v4.STGroup sTGroup75 = python3Target58.loadTemplates();
        org.stringtemplate.v4.STGroup sTGroup76 = python3Target58.templates;
        java.util.Locale locale78 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str79 = pythonStringRenderer0.toString((java.lang.Object) python3Target58, "Conte", locale78);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: org.antlr.v4.codegen.target.Python3Target cannot be cast to java.lang.String");
        } catch (java.lang.ClassCastException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "\"\"\"\"\"\"" + "'", str4, "\"\"\"\"\"\"");
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertNull(sTGroup7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\"Hi!Context\"" + "'", str10, "\"Hi!Context\"");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "\"\\\"hi!\\\"\"" + "'", str18, "\"\\\"hi!\\\"\"");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "\"1\"" + "'", str22, "\"1\"");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "4.5.2.1" + "'", str28, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "\"\"" + "'", str32, "\"\"");
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "d" + "'", str48, "d");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "" + "'", str49, "");
        org.junit.Assert.assertNotNull(strArray50);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "\"\"" + "'", str54, "\"\"");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "\"\\\"\\\"\\\"\\\\\\\"\\\\\\\"hi!\\\\\\\"\\\\\\\"\\\"\\\"\\\"\"" + "'", str57, "\"\\\"\\\"\\\"\\\\\\\"\\\\\\\"hi!\\\\\\\"\\\\\\\"\\\"\\\"\\\"\"");
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNull(sTGroup60);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 29 + "'", int67 == 29);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "_tsetPython3" + "'", str69, "_tsetPython3");
        org.junit.Assert.assertNotNull(sTGroup70);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 64 + "'", int71 == 64);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "\"\"\"_tset12\"\"\"" + "'", str74, "\"\"\"_tset12\"\"\"");
        org.junit.Assert.assertNotNull(sTGroup75);
        org.junit.Assert.assertNotNull(sTGroup76);
    }

    @Test
    public void test1922() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1922");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        int int2 = python3Target0.getInlineTestSetWordSize();
        java.lang.String[] strArray3 = python3Target0.targetCharValueEscape;
        org.antlr.v4.codegen.target.Python3Target python3Target4 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean5 = python3Target4.supportsOverloadedMethods();
        java.lang.String str6 = python3Target4.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = null;
        java.lang.String str10 = python3Target4.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator7, "", true);
        java.lang.String str11 = python3Target4.getVersion();
        org.antlr.v4.codegen.target.Python3Target python3Target12 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean13 = python3Target12.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup14 = python3Target12.templates;
        java.lang.String[] strArray17 = new java.lang.String[] { "hi!", "hi!" };
        python3Target12.targetCharValueEscape = strArray17;
        java.lang.String[] strArray20 = new java.lang.String[] { "hi!" };
        org.antlr.v4.codegen.target.Python3Target.python3Keywords = strArray20;
        python3Target12.targetCharValueEscape = strArray20;
        org.antlr.v4.codegen.target.Python3Target.python3Keywords = strArray20;
        python3Target4.targetCharValueEscape = strArray20;
        python3Target0.targetCharValueEscape = strArray20;
        org.antlr.v4.tool.ast.GrammarAST grammarAST26 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str27 = python3Target0.getLoopCounter(grammarAST26);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "4.5.2.1" + "'", str6, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\"\"" + "'", str10, "\"\"");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "4.5.2.1" + "'", str11, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(sTGroup14);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertNotNull(strArray20);
    }

    @Test
    public void test1923() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1923");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        python3Target0.language = "4.5.2.1";
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = python3Target0.getCodeGenerator();
        org.antlr.v4.codegen.target.Python3Target python3Target4 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str6 = python3Target4.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.tool.Grammar grammar7 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target8 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean9 = python3Target8.supportsOverloadedMethods();
        java.lang.String str10 = python3Target8.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator11 = null;
        java.lang.String str14 = python3Target8.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator11, "", true);
        java.lang.String str15 = python3Target8.getVersion();
        org.antlr.v4.tool.Grammar grammar16 = null;
        int[] intArray17 = new int[] {};
        java.lang.String[] strArray18 = python3Target8.getTokenTypesAsTargetLabels(grammar16, intArray17);
        java.lang.String[] strArray19 = python3Target4.getTokenTypesAsTargetLabels(grammar7, intArray17);
        java.lang.String[] strArray20 = python3Target4.targetCharValueEscape;
        python3Target0.targetCharValueEscape = strArray20;
        boolean boolean22 = python3Target0.supportsOverloadedMethods();
        org.antlr.v4.tool.Grammar grammar23 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator24 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target25 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator24);
        java.util.Set<java.lang.String> strSet26 = python3Target25.getBadWords();
        org.antlr.v4.codegen.target.Python3Target python3Target27 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str29 = python3Target27.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.codegen.target.Python3Target python3Target30 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean31 = python3Target30.supportsOverloadedMethods();
        java.util.Set<java.lang.String> strSet32 = python3Target30.badWords;
        python3Target27.badWords = strSet32;
        python3Target25.badWords = strSet32;
        java.util.Set<java.lang.String> strSet35 = python3Target25.badWords;
        org.antlr.v4.codegen.CodeGenerator codeGenerator36 = python3Target25.getCodeGenerator();
        org.antlr.v4.tool.Grammar grammar37 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target38 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean39 = python3Target38.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup40 = python3Target38.templates;
        org.antlr.v4.tool.Grammar grammar41 = null;
        org.stringtemplate.v4.ST sT42 = null;
        python3Target38.genRecognizerHeaderFile(grammar41, sT42, "");
        python3Target38.language = "Python3";
        java.util.Set<java.lang.String> strSet47 = null;
        python3Target38.badWords = strSet47;
        org.antlr.v4.codegen.CodeGenerator codeGenerator49 = null;
        java.lang.String str52 = python3Target38.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator49, "\"Hi!Context\"", false);
        java.lang.String str54 = python3Target38.getListLabel("Python3");
        java.lang.String str56 = python3Target38.getTargetStringLiteralFromString("\\0");
        org.antlr.v4.tool.Grammar grammar57 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target58 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str60 = python3Target58.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.tool.Grammar grammar61 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target62 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean63 = python3Target62.supportsOverloadedMethods();
        java.lang.String str64 = python3Target62.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator65 = null;
        java.lang.String str68 = python3Target62.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator65, "", true);
        java.lang.String str69 = python3Target62.getVersion();
        org.antlr.v4.tool.Grammar grammar70 = null;
        int[] intArray71 = new int[] {};
        java.lang.String[] strArray72 = python3Target62.getTokenTypesAsTargetLabels(grammar70, intArray71);
        java.lang.String[] strArray73 = python3Target58.getTokenTypesAsTargetLabels(grammar61, intArray71);
        java.lang.String[] strArray74 = python3Target38.getTokenTypesAsTargetLabels(grammar57, intArray71);
        java.lang.String[] strArray75 = python3Target25.getTokenTypesAsTargetLabels(grammar37, intArray71);
        java.lang.String[] strArray76 = python3Target0.getTokenTypesAsTargetLabels(grammar23, intArray71);
        org.junit.Assert.assertNull(codeGenerator3);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\"\"\"\"\"\"" + "'", str6, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "4.5.2.1" + "'", str10, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "\"\"" + "'", str14, "\"\"");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "4.5.2.1" + "'", str15, "4.5.2.1");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[]");
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(strSet26);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "\"\"\"\"\"\"" + "'", str29, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(strSet32);
        org.junit.Assert.assertNotNull(strSet35);
        org.junit.Assert.assertNull(codeGenerator36);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNull(sTGroup40);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "Hi!Context" + "'", str52, "Hi!Context");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "Python3" + "'", str54, "Python3");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "\"\\0\"" + "'", str56, "\"\\0\"");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "\"\"\"\"\"\"" + "'", str60, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "4.5.2.1" + "'", str64, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "\"\"" + "'", str68, "\"\"");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "4.5.2.1" + "'", str69, "4.5.2.1");
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[]");
        org.junit.Assert.assertNotNull(strArray72);
        org.junit.Assert.assertNotNull(strArray73);
        org.junit.Assert.assertNotNull(strArray74);
        org.junit.Assert.assertNotNull(strArray75);
        org.junit.Assert.assertNotNull(strArray76);
    }

    @Test
    public void test1924() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1924");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray1 = python3Target0.targetCharValueEscape;
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = null;
        java.lang.String str6 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator3, "\"\\12\"", false);
        int int7 = python3Target0.getSerializedATNSegmentLimit();
        boolean boolean8 = python3Target0.templatesExist();
        boolean boolean9 = python3Target0.supportsOverloadedMethods();
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = python3Target0.gen;
        org.antlr.v4.codegen.CodeGenerator codeGenerator11 = python3Target0.gen;
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "12" + "'", str6, "12");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 29 + "'", int7 == 29);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(codeGenerator10);
        org.junit.Assert.assertNull(codeGenerator11);
    }

    @Test
    public void test1925() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1925");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        java.util.Set<java.lang.String> strSet2 = python3Target0.badWords;
        int int3 = python3Target0.getSerializedATNSegmentLimit();
        java.lang.String str4 = python3Target0.getLanguage();
        java.lang.Class<?> wildcardClass5 = python3Target0.getClass();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 29 + "'", int3 == 29);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(wildcardClass5);
    }

    @Test
    public void test1926() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1926");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python3Target1.getBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = null;
        python3Target1.gen = codeGenerator3;
        java.lang.String str6 = python3Target1.getAltLabelContextStructName("hi!");
        java.lang.String str9 = python3Target1.getTargetStringLiteralFromString("\"hi!\"", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = null;
        python3Target1.gen = codeGenerator10;
        org.antlr.v4.tool.Grammar grammar12 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target13 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray14 = python3Target13.targetCharValueEscape;
        org.stringtemplate.v4.STGroup sTGroup15 = python3Target13.templates;
        int int16 = python3Target13.getInlineTestSetWordSize();
        org.antlr.v4.codegen.CodeGenerator codeGenerator17 = python3Target13.gen;
        org.antlr.v4.tool.Grammar grammar18 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target19 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str21 = python3Target19.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.tool.Grammar grammar22 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target23 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean24 = python3Target23.supportsOverloadedMethods();
        java.lang.String str25 = python3Target23.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator26 = null;
        java.lang.String str29 = python3Target23.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator26, "", true);
        java.lang.String str30 = python3Target23.getVersion();
        org.antlr.v4.tool.Grammar grammar31 = null;
        int[] intArray32 = new int[] {};
        java.lang.String[] strArray33 = python3Target23.getTokenTypesAsTargetLabels(grammar31, intArray32);
        java.lang.String[] strArray34 = python3Target19.getTokenTypesAsTargetLabels(grammar22, intArray32);
        java.lang.String[] strArray35 = python3Target13.getTokenTypesAsTargetLabels(grammar18, intArray32);
        java.lang.String[] strArray36 = python3Target1.getTokenTypesAsTargetLabels(grammar12, intArray32);
        java.lang.String str38 = python3Target1.getAltLabelContextStructName("\"Python3\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator39 = python3Target1.gen;
        org.antlr.v4.codegen.CodeGenerator codeGenerator40 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target41 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator40);
        java.lang.String str43 = python3Target41.getTargetStringLiteralFromString("");
        int int44 = python3Target41.getSerializedATNSegmentLimit();
        boolean boolean45 = python3Target41.wantsBaseVisitor();
        org.stringtemplate.v4.STGroup sTGroup46 = python3Target41.loadTemplates();
        org.antlr.v4.codegen.CodeGenerator codeGenerator47 = python3Target41.gen;
        org.antlr.v4.codegen.target.Python3Target python3Target48 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean49 = python3Target48.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup50 = python3Target48.templates;
        org.antlr.v4.tool.Grammar grammar51 = null;
        org.stringtemplate.v4.ST sT52 = null;
        python3Target48.genRecognizerHeaderFile(grammar51, sT52, "");
        python3Target48.language = "Python3";
        int int57 = python3Target48.getSerializedATNSegmentLimit();
        org.stringtemplate.v4.STGroup sTGroup58 = python3Target48.loadTemplates();
        python3Target41.templates = sTGroup58;
        java.lang.String str60 = python3Target41.getVersion();
        java.util.Set<java.lang.String> strSet61 = python3Target41.getBadWords();
        python3Target1.badWords = strSet61;
        java.lang.String str65 = python3Target1.getTargetStringLiteralFromString("\"\\0\"", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator66 = null;
        java.lang.String str69 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator66, "\\\"\\\"\\\"\\\"\\\"\\\"Context", true);
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Hi!Context" + "'", str6, "Hi!Context");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\"\\\"hi!\\\"\"" + "'", str9, "\"\\\"hi!\\\"\"");
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertNull(sTGroup15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 64 + "'", int16 == 64);
        org.junit.Assert.assertNull(codeGenerator17);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "\"\"\"\"\"\"" + "'", str21, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "4.5.2.1" + "'", str25, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "\"\"" + "'", str29, "\"\"");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "4.5.2.1" + "'", str30, "4.5.2.1");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[]");
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "\"Python3\"Context" + "'", str38, "\"Python3\"Context");
        org.junit.Assert.assertNull(codeGenerator39);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "\"\"" + "'", str43, "\"\"");
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 29 + "'", int44 == 29);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(sTGroup46);
        org.junit.Assert.assertNull(codeGenerator47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNull(sTGroup50);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 29 + "'", int57 == 29);
        org.junit.Assert.assertNotNull(sTGroup58);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "4.5.2.1" + "'", str60, "4.5.2.1");
        org.junit.Assert.assertNotNull(strSet61);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "\"\\\"\\\\0\\\"\"" + "'", str65, "\"\\\"\\\\0\\\"\"");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "\"\\\"\\\"\\\"\\\"\\\"\\\"Contex\"" + "'", str69, "\"\\\"\\\"\\\"\\\"\\\"\\\"Contex\"");
    }

    @Test
    public void test1927() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1927");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        python3Target0.language = "";
        org.antlr.v4.codegen.target.Python3Target python3Target3 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean4 = python3Target3.supportsOverloadedMethods();
        java.lang.String str5 = python3Target3.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = null;
        java.lang.String str9 = python3Target3.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator6, "", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = null;
        python3Target3.gen = codeGenerator10;
        java.lang.String[] strArray19 = new java.lang.String[] { "\"\"\"\"", "\\12", "\"\"", "4.5.2.1", "", "\"\"\"\"", "\"\"" };
        java.util.LinkedHashSet<java.lang.String> strSet20 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet20, strArray19);
        python3Target3.badWords = strSet20;
        python3Target0.badWords = strSet20;
        python3Target0.addBadWords();
        java.lang.String[] strArray25 = python3Target0.targetCharValueEscape;
        int int26 = python3Target0.getInlineTestSetWordSize();
        org.antlr.v4.tool.Rule rule27 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str28 = python3Target0.getRuleFunctionContextStructName(rule27);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "4.5.2.1" + "'", str5, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\"\"" + "'", str9, "\"\"");
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 64 + "'", int26 == 64);
    }

    @Test
    public void test1928() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1928");
        org.antlr.v4.codegen.target.Python3Target.PythonStringRenderer pythonStringRenderer0 = new org.antlr.v4.codegen.target.Python3Target.PythonStringRenderer();
        java.lang.Object obj1 = null;
        java.util.Locale locale3 = null;
        java.lang.String str4 = pythonStringRenderer0.toString(obj1, "\"\"\"\"\"\"", locale3);
        org.antlr.v4.codegen.target.Python3Target python3Target5 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray6 = python3Target5.targetCharValueEscape;
        org.stringtemplate.v4.STGroup sTGroup7 = python3Target5.templates;
        java.util.Locale locale9 = null;
        java.lang.String str10 = pythonStringRenderer0.toString((java.lang.Object) sTGroup7, "\"Hi!Context\"", locale9);
        java.util.Locale locale13 = null;
        java.lang.String str14 = pythonStringRenderer0.toString((java.lang.Object) "\"\"\"\"\"\"\"\"", "4.5.2.1", locale13);
        org.antlr.v4.codegen.target.Python3Target python3Target15 = new org.antlr.v4.codegen.target.Python3Target();
        python3Target15.language = "";
        org.antlr.v4.codegen.target.Python3Target python3Target18 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean19 = python3Target18.supportsOverloadedMethods();
        java.lang.String str20 = python3Target18.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator21 = null;
        java.lang.String str24 = python3Target18.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator21, "", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator25 = null;
        python3Target18.gen = codeGenerator25;
        java.lang.String[] strArray34 = new java.lang.String[] { "\"\"\"\"", "\\12", "\"\"", "4.5.2.1", "", "\"\"\"\"", "\"\"" };
        java.util.LinkedHashSet<java.lang.String> strSet35 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet35, strArray34);
        python3Target18.badWords = strSet35;
        python3Target15.badWords = strSet35;
        java.lang.String str40 = python3Target15.encodeIntAsCharEscape((int) (byte) 100);
        boolean boolean41 = python3Target15.templatesExist();
        java.util.Set<java.lang.String> strSet42 = python3Target15.getBadWords();
        python3Target15.addBadWords();
        int int44 = python3Target15.getSerializedATNSegmentLimit();
        java.util.Locale locale46 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str47 = pythonStringRenderer0.toString((java.lang.Object) int44, "\"\"\\\"\\\"4.5.2.1\\\"\\\"\"\"", locale46);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.lang.Integer cannot be cast to java.lang.String");
        } catch (java.lang.ClassCastException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "\"\"\"\"\"\"" + "'", str4, "\"\"\"\"\"\"");
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertNull(sTGroup7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\"Hi!Context\"" + "'", str10, "\"Hi!Context\"");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "4.5.2.1" + "'", str14, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "4.5.2.1" + "'", str20, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "\"\"" + "'", str24, "\"\"");
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "d" + "'", str40, "d");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(strSet42);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 29 + "'", int44 == 29);
    }

    @Test
    public void test1929() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1929");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        java.lang.String str2 = python3Target0.getVersion();
        boolean boolean3 = python3Target0.supportsOverloadedMethods();
        java.lang.String str5 = python3Target0.encodeIntAsCharEscape((int) 'a');
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "4.5.2.1" + "'", str2, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "a" + "'", str5, "a");
    }

    @Test
    public void test1930() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1930");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.lang.String str3 = python3Target1.getTargetStringLiteralFromString("");
        int int4 = python3Target1.getSerializedATNSegmentLimit();
        boolean boolean5 = python3Target1.wantsBaseVisitor();
        org.stringtemplate.v4.STGroup sTGroup6 = python3Target1.loadTemplates();
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = python3Target1.gen;
        java.lang.String str9 = python3Target1.getAltLabelContextStructName("_tset_tset_12");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "\"\"" + "'", str3, "\"\"");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 29 + "'", int4 == 29);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(sTGroup6);
        org.junit.Assert.assertNull(codeGenerator7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "_tset_tset_12Context" + "'", str9, "_tset_tset_12Context");
    }

    @Test
    public void test1931() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1931");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        python3Target0.language = "4.5.2.1";
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = python3Target0.getCodeGenerator();
        org.antlr.v4.codegen.CodeGenerator codeGenerator4 = python3Target0.gen;
        java.lang.String str5 = python3Target0.getLanguage();
        python3Target0.addBadWords();
        java.lang.String str8 = python3Target0.encodeIntAsCharEscape(10);
        org.antlr.v4.codegen.CodeGenerator codeGenerator9 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target10 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator9);
        java.util.Set<java.lang.String> strSet11 = python3Target10.getBadWords();
        java.lang.String str13 = python3Target10.getAltLabelContextStructName("d");
        org.stringtemplate.v4.STGroup sTGroup14 = python3Target10.getTemplates();
        python3Target0.templates = sTGroup14;
        java.lang.String str17 = python3Target0.encodeIntAsCharEscape((int) (short) 1);
        org.antlr.v4.codegen.CodeGenerator codeGenerator18 = null;
        java.lang.String str21 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator18, "_12", false);
        boolean boolean22 = python3Target0.templatesExist();
        int int23 = python3Target0.getInlineTestSetWordSize();
        org.antlr.v4.tool.ast.GrammarAST grammarAST24 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str25 = python3Target0.getLoopLabel(grammarAST24);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(codeGenerator3);
        org.junit.Assert.assertNull(codeGenerator4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "4.5.2.1" + "'", str5, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\\12" + "'", str8, "\\12");
        org.junit.Assert.assertNotNull(strSet11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "DContext" + "'", str13, "DContext");
        org.junit.Assert.assertNotNull(sTGroup14);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "\\1" + "'", str17, "\\1");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "1" + "'", str21, "1");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 64 + "'", int23 == 64);
    }

    @Test
    public void test1932() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1932");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        java.lang.String str2 = python3Target0.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = null;
        java.lang.String str6 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator3, "", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = null;
        python3Target0.gen = codeGenerator7;
        int int9 = python3Target0.getSerializedATNSegmentLimit();
        org.antlr.v4.tool.Grammar grammar10 = null;
        org.stringtemplate.v4.ST sT11 = null;
        python3Target0.genRecognizerHeaderFile(grammar10, sT11, "_tset12");
        org.stringtemplate.v4.STGroup sTGroup14 = python3Target0.templates;
        org.stringtemplate.v4.STGroup sTGroup15 = python3Target0.templates;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str17 = python3Target0.getListLabel("_tset\\\"\\\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "4.5.2.1" + "'", str2, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\"\"" + "'", str6, "\"\"");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 29 + "'", int9 == 29);
        org.junit.Assert.assertNull(sTGroup14);
        org.junit.Assert.assertNull(sTGroup15);
    }

    @Test
    public void test1933() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1933");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        python3Target0.language = "4.5.2.1";
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = python3Target0.getCodeGenerator();
        org.antlr.v4.codegen.CodeGenerator codeGenerator4 = python3Target0.gen;
        org.antlr.v4.codegen.CodeGenerator codeGenerator5 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target6 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator5);
        java.lang.String str8 = python3Target6.getTargetStringLiteralFromString("");
        int int9 = python3Target6.getSerializedATNSegmentLimit();
        boolean boolean10 = python3Target6.wantsBaseVisitor();
        org.stringtemplate.v4.STGroup sTGroup11 = python3Target6.loadTemplates();
        python3Target0.templates = sTGroup11;
        java.lang.String str13 = python3Target0.language;
        org.antlr.v4.codegen.target.Python3Target python3Target14 = new org.antlr.v4.codegen.target.Python3Target();
        python3Target14.language = "";
        org.antlr.v4.codegen.target.Python3Target python3Target17 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean18 = python3Target17.supportsOverloadedMethods();
        java.lang.String str19 = python3Target17.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator20 = null;
        java.lang.String str23 = python3Target17.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator20, "", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator24 = null;
        python3Target17.gen = codeGenerator24;
        java.lang.String[] strArray33 = new java.lang.String[] { "\"\"\"\"", "\\12", "\"\"", "4.5.2.1", "", "\"\"\"\"", "\"\"" };
        java.util.LinkedHashSet<java.lang.String> strSet34 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet34, strArray33);
        python3Target17.badWords = strSet34;
        python3Target14.badWords = strSet34;
        python3Target14.addBadWords();
        java.util.Set<java.lang.String> strSet39 = python3Target14.badWords;
        python3Target0.badWords = strSet39;
        int int41 = python3Target0.getSerializedATNSegmentLimit();
        java.lang.String str42 = python3Target0.language;
        org.antlr.v4.codegen.target.Python3Target python3Target43 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray44 = python3Target43.targetCharValueEscape;
        java.lang.String str45 = python3Target43.language;
        int int46 = python3Target43.getSerializedATNSegmentLimit();
        java.lang.String str49 = python3Target43.getTargetStringLiteralFromString("\"\"\"\"\"\"", false);
        boolean boolean50 = python3Target43.supportsOverloadedMethods();
        org.antlr.v4.codegen.target.Python3Target python3Target51 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str53 = python3Target51.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.codegen.target.Python3Target python3Target54 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean55 = python3Target54.supportsOverloadedMethods();
        java.util.Set<java.lang.String> strSet56 = python3Target54.badWords;
        python3Target51.badWords = strSet56;
        python3Target43.badWords = strSet56;
        python3Target0.badWords = strSet56;
        java.lang.String str60 = python3Target0.getVersion();
        // The following exception was thrown during execution in test generation
        try {
            org.stringtemplate.v4.STGroup sTGroup61 = python3Target0.loadTemplates();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(codeGenerator3);
        org.junit.Assert.assertNull(codeGenerator4);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\"\"" + "'", str8, "\"\"");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 29 + "'", int9 == 29);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(sTGroup11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "4.5.2.1" + "'", str13, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "4.5.2.1" + "'", str19, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "\"\"" + "'", str23, "\"\"");
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(strSet39);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 29 + "'", int41 == 29);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "4.5.2.1" + "'", str42, "4.5.2.1");
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 29 + "'", int46 == 29);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "\"\"\"\"\"\"" + "'", str49, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "\"\"\"\"\"\"" + "'", str53, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(strSet56);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "4.5.2.1" + "'", str60, "4.5.2.1");
    }

    @Test
    public void test1934() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1934");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!", "hi!" };
        python3Target0.targetCharValueEscape = strArray5;
        java.lang.String str8 = python3Target0.getTargetStringLiteralFromString("\"\"");
        java.lang.String str10 = python3Target0.getTargetStringLiteralFromString("\"\"");
        org.antlr.v4.tool.Grammar grammar11 = null;
        org.stringtemplate.v4.ST sT12 = null;
        // The following exception was thrown during execution in test generation
        try {
            python3Target0.genFile(grammar11, sT12, "_\\\"\\\"\\\\\\\"\\\\\\\"hi!\\\\\\\"\\\\\\\"\\\"\\\"Context");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\"\"\"\"" + "'", str8, "\"\"\"\"");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\"\"\"\"" + "'", str10, "\"\"\"\"");
    }

    @Test
    public void test1935() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1935");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        java.util.Set<java.lang.String> strSet2 = python3Target0.badWords;
        int int3 = python3Target0.getSerializedATNSegmentLimit();
        java.lang.String str4 = python3Target0.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator5 = null;
        java.lang.String str8 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator5, "\\35", false);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str10 = python3Target0.getImplicitRuleLabel("\\\"\\\"\\\"\\\"\\\"Contex");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 29 + "'", int3 == 29);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "3" + "'", str8, "3");
    }

    @Test
    public void test1936() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1936");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!", "hi!" };
        python3Target0.targetCharValueEscape = strArray5;
        java.lang.String str8 = python3Target0.getTargetStringLiteralFromString("\"\"");
        java.lang.String str9 = python3Target0.getLanguage();
        java.util.Set<java.lang.String> strSet10 = python3Target0.getBadWords();
        org.antlr.v4.codegen.target.Python3Target python3Target11 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean12 = python3Target11.supportsOverloadedMethods();
        java.lang.String str13 = python3Target11.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator14 = null;
        java.lang.String str17 = python3Target11.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator14, "", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator18 = null;
        python3Target11.gen = codeGenerator18;
        java.lang.String[] strArray27 = new java.lang.String[] { "\"\"\"\"", "\\12", "\"\"", "4.5.2.1", "", "\"\"\"\"", "\"\"" };
        java.util.LinkedHashSet<java.lang.String> strSet28 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet28, strArray27);
        python3Target11.badWords = strSet28;
        boolean boolean31 = python3Target11.templatesExist();
        org.antlr.v4.codegen.CodeGenerator codeGenerator32 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target33 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator32);
        java.lang.String str35 = python3Target33.getTargetStringLiteralFromString("");
        int int36 = python3Target33.getSerializedATNSegmentLimit();
        boolean boolean37 = python3Target33.wantsBaseVisitor();
        org.stringtemplate.v4.STGroup sTGroup38 = python3Target33.loadTemplates();
        python3Target11.templates = sTGroup38;
        python3Target0.templates = sTGroup38;
        java.lang.String str42 = python3Target0.getImplicitRuleLabel("_tset12");
        java.lang.String str43 = python3Target0.getVersion();
        org.antlr.v4.tool.Grammar grammar44 = null;
        org.stringtemplate.v4.ST sT45 = null;
        // The following exception was thrown during execution in test generation
        try {
            python3Target0.genListenerFile(grammar44, sT45);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\"\"\"\"" + "'", str8, "\"\"\"\"");
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(strSet10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "4.5.2.1" + "'", str13, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "\"\"" + "'", str17, "\"\"");
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "\"\"" + "'", str35, "\"\"");
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 29 + "'", int36 == 29);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(sTGroup38);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "__tset12" + "'", str42, "__tset12");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "4.5.2.1" + "'", str43, "4.5.2.1");
    }

    @Test
    public void test1937() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1937");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray1 = python3Target0.targetCharValueEscape;
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = null;
        java.lang.String str6 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator3, "\"\\12\"", false);
        int int7 = python3Target0.getSerializedATNSegmentLimit();
        boolean boolean8 = python3Target0.templatesExist();
        boolean boolean9 = python3Target0.supportsOverloadedMethods();
        org.antlr.v4.tool.Grammar grammar10 = null;
        org.stringtemplate.v4.ST sT11 = null;
        python3Target0.genRecognizerHeaderFile(grammar10, sT11, "_tsetPython3");
        boolean boolean14 = python3Target0.templatesExist();
        // The following exception was thrown during execution in test generation
        try {
            org.stringtemplate.v4.STGroup sTGroup15 = python3Target0.getTemplates();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "12" + "'", str6, "12");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 29 + "'", int7 == 29);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test1938() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1938");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        python3Target0.language = "";
        org.antlr.v4.codegen.target.Python3Target python3Target3 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean4 = python3Target3.supportsOverloadedMethods();
        java.lang.String str5 = python3Target3.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = null;
        java.lang.String str9 = python3Target3.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator6, "", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = null;
        python3Target3.gen = codeGenerator10;
        java.lang.String[] strArray19 = new java.lang.String[] { "\"\"\"\"", "\\12", "\"\"", "4.5.2.1", "", "\"\"\"\"", "\"\"" };
        java.util.LinkedHashSet<java.lang.String> strSet20 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet20, strArray19);
        python3Target3.badWords = strSet20;
        python3Target0.badWords = strSet20;
        java.lang.String str25 = python3Target0.encodeIntAsCharEscape((int) (byte) 100);
        org.antlr.v4.tool.Grammar grammar26 = null;
        org.stringtemplate.v4.ST sT27 = null;
        python3Target0.genRecognizerHeaderFile(grammar26, sT27, "");
        org.antlr.v4.tool.Grammar grammar30 = null;
        org.stringtemplate.v4.ST sT31 = null;
        python3Target0.genRecognizerHeaderFile(grammar30, sT31, "\"\"\"\"\"\"\"Context\"");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "4.5.2.1" + "'", str5, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\"\"" + "'", str9, "\"\"");
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "d" + "'", str25, "d");
    }

    @Test
    public void test1939() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1939");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.lang.String str3 = python3Target1.getTargetStringLiteralFromString("");
        int int4 = python3Target1.getSerializedATNSegmentLimit();
        boolean boolean5 = python3Target1.wantsBaseVisitor();
        org.stringtemplate.v4.STGroup sTGroup6 = python3Target1.loadTemplates();
        java.lang.String str7 = python3Target1.getLanguage();
        boolean boolean8 = python3Target1.wantsBaseListener();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "\"\"" + "'", str3, "\"\"");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 29 + "'", int4 == 29);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(sTGroup6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Python3" + "'", str7, "Python3");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test1940() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1940");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        org.antlr.v4.tool.Grammar grammar3 = null;
        org.stringtemplate.v4.ST sT4 = null;
        python3Target0.genRecognizerHeaderFile(grammar3, sT4, "");
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = python3Target0.getCodeGenerator();
        org.antlr.v4.codegen.target.Python3Target python3Target8 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray9 = python3Target8.targetCharValueEscape;
        org.stringtemplate.v4.STGroup sTGroup10 = python3Target8.templates;
        int int11 = python3Target8.getInlineTestSetWordSize();
        org.antlr.v4.codegen.CodeGenerator codeGenerator12 = python3Target8.gen;
        org.antlr.v4.tool.Grammar grammar13 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target14 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str16 = python3Target14.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.tool.Grammar grammar17 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target18 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean19 = python3Target18.supportsOverloadedMethods();
        java.lang.String str20 = python3Target18.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator21 = null;
        java.lang.String str24 = python3Target18.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator21, "", true);
        java.lang.String str25 = python3Target18.getVersion();
        org.antlr.v4.tool.Grammar grammar26 = null;
        int[] intArray27 = new int[] {};
        java.lang.String[] strArray28 = python3Target18.getTokenTypesAsTargetLabels(grammar26, intArray27);
        java.lang.String[] strArray29 = python3Target14.getTokenTypesAsTargetLabels(grammar17, intArray27);
        java.lang.String[] strArray30 = python3Target8.getTokenTypesAsTargetLabels(grammar13, intArray27);
        org.antlr.v4.codegen.target.Python3Target.python3Keywords = strArray30;
        python3Target0.targetCharValueEscape = strArray30;
        org.antlr.v4.codegen.target.Python3Target python3Target33 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean34 = python3Target33.supportsOverloadedMethods();
        java.lang.String str35 = python3Target33.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator36 = python3Target33.getCodeGenerator();
        org.stringtemplate.v4.STGroup sTGroup37 = null;
        python3Target33.templates = sTGroup37;
        org.stringtemplate.v4.STGroup sTGroup39 = python3Target33.templates;
        java.lang.String[] strArray40 = python3Target33.targetCharValueEscape;
        org.antlr.v4.codegen.CodeGenerator codeGenerator41 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target42 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator41);
        java.util.Set<java.lang.String> strSet43 = python3Target42.getBadWords();
        java.lang.String str45 = python3Target42.getAltLabelContextStructName("d");
        org.stringtemplate.v4.STGroup sTGroup46 = python3Target42.templates;
        python3Target33.templates = sTGroup46;
        python3Target0.templates = sTGroup46;
        boolean boolean49 = python3Target0.wantsBaseListener();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertNull(codeGenerator7);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertNull(sTGroup10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 64 + "'", int11 == 64);
        org.junit.Assert.assertNull(codeGenerator12);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "\"\"\"\"\"\"" + "'", str16, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "4.5.2.1" + "'", str20, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "\"\"" + "'", str24, "\"\"");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "4.5.2.1" + "'", str25, "4.5.2.1");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[]");
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "4.5.2.1" + "'", str35, "4.5.2.1");
        org.junit.Assert.assertNull(codeGenerator36);
        org.junit.Assert.assertNull(sTGroup39);
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertNotNull(strSet43);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "DContext" + "'", str45, "DContext");
        org.junit.Assert.assertNotNull(sTGroup46);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
    }

    @Test
    public void test1941() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1941");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.lang.String str3 = python3Target1.getTargetStringLiteralFromString("");
        int int4 = python3Target1.getSerializedATNSegmentLimit();
        int int5 = python3Target1.getInlineTestSetWordSize();
        org.antlr.v4.tool.Grammar grammar6 = null;
        org.stringtemplate.v4.ST sT7 = null;
        python3Target1.genRecognizerHeaderFile(grammar6, sT7, "@");
        boolean boolean10 = python3Target1.templatesExist();
        boolean boolean11 = python3Target1.templatesExist();
        org.antlr.v4.tool.ast.GrammarAST grammarAST12 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str13 = python3Target1.getLoopLabel(grammarAST12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "\"\"" + "'", str3, "\"\"");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 29 + "'", int4 == 29);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 64 + "'", int5 == 64);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
    }

    @Test
    public void test1942() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1942");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        int int2 = python3Target0.getInlineTestSetWordSize();
        java.lang.String[] strArray3 = python3Target0.targetCharValueEscape;
        org.antlr.v4.tool.ast.GrammarAST grammarAST4 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str5 = python3Target0.getLoopLabel(grammarAST4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 64 + "'", int2 == 64);
        org.junit.Assert.assertNotNull(strArray3);
    }

    @Test
    public void test1943() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1943");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        python3Target0.language = "";
        org.antlr.v4.codegen.target.Python3Target python3Target3 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean4 = python3Target3.supportsOverloadedMethods();
        java.lang.String str5 = python3Target3.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = null;
        java.lang.String str9 = python3Target3.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator6, "", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = null;
        python3Target3.gen = codeGenerator10;
        java.lang.String[] strArray19 = new java.lang.String[] { "\"\"\"\"", "\\12", "\"\"", "4.5.2.1", "", "\"\"\"\"", "\"\"" };
        java.util.LinkedHashSet<java.lang.String> strSet20 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet20, strArray19);
        python3Target3.badWords = strSet20;
        python3Target0.badWords = strSet20;
        java.lang.String str25 = python3Target0.encodeIntAsCharEscape((int) (byte) 100);
        java.lang.String str26 = python3Target0.getLanguage();
        java.lang.String[] strArray27 = new java.lang.String[] {};
        python3Target0.targetCharValueEscape = strArray27;
        org.antlr.v4.tool.Grammar grammar29 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target30 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean31 = python3Target30.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup32 = python3Target30.templates;
        java.lang.String[] strArray35 = new java.lang.String[] { "hi!", "hi!" };
        python3Target30.targetCharValueEscape = strArray35;
        org.antlr.v4.codegen.CodeGenerator codeGenerator37 = null;
        java.lang.String str40 = python3Target30.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator37, "", false);
        java.util.Set<java.lang.String> strSet41 = python3Target30.badWords;
        java.lang.String str43 = python3Target30.getTargetStringLiteralFromString("12");
        int int44 = python3Target30.getSerializedATNSegmentLimit();
        boolean boolean45 = python3Target30.supportsOverloadedMethods();
        org.antlr.v4.tool.Grammar grammar46 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target47 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean48 = python3Target47.supportsOverloadedMethods();
        java.util.Set<java.lang.String> strSet49 = python3Target47.badWords;
        boolean boolean50 = python3Target47.templatesExist();
        java.lang.String str51 = python3Target47.getLanguage();
        org.antlr.v4.tool.Grammar grammar52 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target53 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str55 = python3Target53.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator56 = null;
        python3Target53.gen = codeGenerator56;
        org.antlr.v4.tool.Grammar grammar58 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target59 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str61 = python3Target59.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.tool.Grammar grammar62 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target63 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean64 = python3Target63.supportsOverloadedMethods();
        java.lang.String str65 = python3Target63.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator66 = null;
        java.lang.String str69 = python3Target63.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator66, "", true);
        java.lang.String str70 = python3Target63.getVersion();
        org.antlr.v4.tool.Grammar grammar71 = null;
        int[] intArray72 = new int[] {};
        java.lang.String[] strArray73 = python3Target63.getTokenTypesAsTargetLabels(grammar71, intArray72);
        java.lang.String[] strArray74 = python3Target59.getTokenTypesAsTargetLabels(grammar62, intArray72);
        java.lang.String[] strArray75 = python3Target53.getTokenTypesAsTargetLabels(grammar58, intArray72);
        java.lang.String[] strArray76 = python3Target47.getTokenTypesAsTargetLabels(grammar52, intArray72);
        java.lang.String[] strArray77 = python3Target30.getTokenTypesAsTargetLabels(grammar46, intArray72);
        java.lang.String[] strArray78 = python3Target0.getTokenTypesAsTargetLabels(grammar29, intArray72);
        java.lang.String str80 = python3Target0.getTargetStringLiteralFromString("_tset\\12");
        // The following exception was thrown during execution in test generation
        try {
            org.stringtemplate.v4.STGroup sTGroup81 = python3Target0.loadTemplates();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "4.5.2.1" + "'", str5, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\"\"" + "'", str9, "\"\"");
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "d" + "'", str25, "d");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNull(sTGroup32);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "" + "'", str40, "");
        org.junit.Assert.assertNotNull(strSet41);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "\"12\"" + "'", str43, "\"12\"");
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 29 + "'", int44 == 29);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(strSet49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "\"\"\"\"\"\"" + "'", str55, "\"\"\"\"\"\"");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "\"\"\"\"\"\"" + "'", str61, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "4.5.2.1" + "'", str65, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "\"\"" + "'", str69, "\"\"");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "4.5.2.1" + "'", str70, "4.5.2.1");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[]");
        org.junit.Assert.assertNotNull(strArray73);
        org.junit.Assert.assertNotNull(strArray74);
        org.junit.Assert.assertNotNull(strArray75);
        org.junit.Assert.assertNotNull(strArray76);
        org.junit.Assert.assertNotNull(strArray77);
        org.junit.Assert.assertNotNull(strArray78);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "\"_tset\\12\"" + "'", str80, "\"_tset\\12\"");
    }

    @Test
    public void test1944() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1944");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        python3Target0.language = "4.5.2.1";
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = python3Target0.getCodeGenerator();
        org.antlr.v4.codegen.CodeGenerator codeGenerator4 = python3Target0.gen;
        org.antlr.v4.codegen.CodeGenerator codeGenerator5 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target6 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator5);
        java.lang.String str8 = python3Target6.getTargetStringLiteralFromString("");
        int int9 = python3Target6.getSerializedATNSegmentLimit();
        boolean boolean10 = python3Target6.wantsBaseVisitor();
        org.stringtemplate.v4.STGroup sTGroup11 = python3Target6.loadTemplates();
        python3Target0.templates = sTGroup11;
        java.lang.String str13 = python3Target0.language;
        org.antlr.v4.codegen.target.Python3Target python3Target14 = new org.antlr.v4.codegen.target.Python3Target();
        python3Target14.language = "";
        org.antlr.v4.codegen.target.Python3Target python3Target17 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean18 = python3Target17.supportsOverloadedMethods();
        java.lang.String str19 = python3Target17.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator20 = null;
        java.lang.String str23 = python3Target17.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator20, "", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator24 = null;
        python3Target17.gen = codeGenerator24;
        java.lang.String[] strArray33 = new java.lang.String[] { "\"\"\"\"", "\\12", "\"\"", "4.5.2.1", "", "\"\"\"\"", "\"\"" };
        java.util.LinkedHashSet<java.lang.String> strSet34 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet34, strArray33);
        python3Target17.badWords = strSet34;
        python3Target14.badWords = strSet34;
        python3Target14.addBadWords();
        java.util.Set<java.lang.String> strSet39 = python3Target14.badWords;
        python3Target0.badWords = strSet39;
        org.antlr.v4.codegen.CodeGenerator codeGenerator41 = python3Target0.gen;
        org.junit.Assert.assertNull(codeGenerator3);
        org.junit.Assert.assertNull(codeGenerator4);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\"\"" + "'", str8, "\"\"");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 29 + "'", int9 == 29);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(sTGroup11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "4.5.2.1" + "'", str13, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "4.5.2.1" + "'", str19, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "\"\"" + "'", str23, "\"\"");
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(strSet39);
        org.junit.Assert.assertNull(codeGenerator41);
    }

    @Test
    public void test1945() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1945");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python3Target1.getBadWords();
        org.antlr.v4.codegen.target.Python3Target python3Target3 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str5 = python3Target3.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.codegen.target.Python3Target python3Target6 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean7 = python3Target6.supportsOverloadedMethods();
        java.util.Set<java.lang.String> strSet8 = python3Target6.badWords;
        python3Target3.badWords = strSet8;
        python3Target1.badWords = strSet8;
        java.util.Set<java.lang.String> strSet11 = python3Target1.badWords;
        org.antlr.v4.codegen.target.Python3Target python3Target12 = new org.antlr.v4.codegen.target.Python3Target();
        python3Target12.language = "";
        org.antlr.v4.codegen.target.Python3Target python3Target15 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean16 = python3Target15.supportsOverloadedMethods();
        java.lang.String str17 = python3Target15.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator18 = null;
        java.lang.String str21 = python3Target15.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator18, "", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator22 = null;
        python3Target15.gen = codeGenerator22;
        java.lang.String[] strArray31 = new java.lang.String[] { "\"\"\"\"", "\\12", "\"\"", "4.5.2.1", "", "\"\"\"\"", "\"\"" };
        java.util.LinkedHashSet<java.lang.String> strSet32 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet32, strArray31);
        python3Target15.badWords = strSet32;
        python3Target12.badWords = strSet32;
        python3Target1.badWords = strSet32;
        boolean boolean37 = python3Target1.wantsBaseVisitor();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str39 = python3Target1.getElementName("\"\\\"hi!\\\"\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "\"\"\"\"\"\"" + "'", str5, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertNotNull(strSet11);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "4.5.2.1" + "'", str17, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "\"\"" + "'", str21, "\"\"");
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
    }

    @Test
    public void test1946() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1946");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python3Target1.getBadWords();
        org.antlr.v4.codegen.target.Python3Target python3Target3 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str5 = python3Target3.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.codegen.target.Python3Target python3Target6 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean7 = python3Target6.supportsOverloadedMethods();
        java.util.Set<java.lang.String> strSet8 = python3Target6.badWords;
        python3Target3.badWords = strSet8;
        python3Target1.badWords = strSet8;
        java.util.Set<java.lang.String> strSet11 = python3Target1.badWords;
        org.antlr.v4.codegen.CodeGenerator codeGenerator12 = python3Target1.getCodeGenerator();
        org.antlr.v4.tool.Grammar grammar13 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target14 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean15 = python3Target14.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup16 = python3Target14.templates;
        org.antlr.v4.tool.Grammar grammar17 = null;
        org.stringtemplate.v4.ST sT18 = null;
        python3Target14.genRecognizerHeaderFile(grammar17, sT18, "");
        python3Target14.language = "Python3";
        java.util.Set<java.lang.String> strSet23 = null;
        python3Target14.badWords = strSet23;
        org.antlr.v4.codegen.CodeGenerator codeGenerator25 = null;
        java.lang.String str28 = python3Target14.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator25, "\"Hi!Context\"", false);
        java.lang.String str30 = python3Target14.getListLabel("Python3");
        java.lang.String str32 = python3Target14.getTargetStringLiteralFromString("\\0");
        org.antlr.v4.tool.Grammar grammar33 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target34 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str36 = python3Target34.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.tool.Grammar grammar37 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target38 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean39 = python3Target38.supportsOverloadedMethods();
        java.lang.String str40 = python3Target38.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator41 = null;
        java.lang.String str44 = python3Target38.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator41, "", true);
        java.lang.String str45 = python3Target38.getVersion();
        org.antlr.v4.tool.Grammar grammar46 = null;
        int[] intArray47 = new int[] {};
        java.lang.String[] strArray48 = python3Target38.getTokenTypesAsTargetLabels(grammar46, intArray47);
        java.lang.String[] strArray49 = python3Target34.getTokenTypesAsTargetLabels(grammar37, intArray47);
        java.lang.String[] strArray50 = python3Target14.getTokenTypesAsTargetLabels(grammar33, intArray47);
        java.lang.String[] strArray51 = python3Target1.getTokenTypesAsTargetLabels(grammar13, intArray47);
        boolean boolean52 = python3Target1.templatesExist();
        boolean boolean53 = python3Target1.wantsBaseListener();
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "\"\"\"\"\"\"" + "'", str5, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertNotNull(strSet11);
        org.junit.Assert.assertNull(codeGenerator12);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(sTGroup16);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "Hi!Context" + "'", str28, "Hi!Context");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "Python3" + "'", str30, "Python3");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "\"\\0\"" + "'", str32, "\"\\0\"");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "\"\"\"\"\"\"" + "'", str36, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "4.5.2.1" + "'", str40, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "\"\"" + "'", str44, "\"\"");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "4.5.2.1" + "'", str45, "4.5.2.1");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[]");
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertNotNull(strArray49);
        org.junit.Assert.assertNotNull(strArray50);
        org.junit.Assert.assertNotNull(strArray51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
    }

    @Test
    public void test1947() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1947");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python3Target1.getBadWords();
        java.lang.String str4 = python3Target1.getAltLabelContextStructName("d");
        org.antlr.v4.codegen.CodeGenerator codeGenerator5 = python3Target1.gen;
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "DContext" + "'", str4, "DContext");
        org.junit.Assert.assertNull(codeGenerator5);
    }

    @Test
    public void test1948() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1948");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.lang.String str3 = python3Target1.getTargetStringLiteralFromString("");
        int int4 = python3Target1.getSerializedATNSegmentLimit();
        boolean boolean5 = python3Target1.wantsBaseVisitor();
        org.stringtemplate.v4.STGroup sTGroup6 = python3Target1.loadTemplates();
        java.lang.String str7 = python3Target1.getLanguage();
        java.lang.String str9 = python3Target1.getTargetStringLiteralFromString("\"\"\\0\"\"");
        org.stringtemplate.v4.STGroup sTGroup10 = python3Target1.loadTemplates();
        boolean boolean11 = python3Target1.wantsBaseVisitor();
        boolean boolean12 = python3Target1.templatesExist();
        boolean boolean13 = python3Target1.templatesExist();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "\"\"" + "'", str3, "\"\"");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 29 + "'", int4 == 29);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(sTGroup6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Python3" + "'", str7, "Python3");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\"\\\"\\\"\\\\0\\\"\\\"\"" + "'", str9, "\"\\\"\\\"\\\\0\\\"\\\"\"");
        org.junit.Assert.assertNotNull(sTGroup10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
    }

    @Test
    public void test1949() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1949");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        python3Target0.language = "";
        org.antlr.v4.codegen.target.Python3Target python3Target3 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean4 = python3Target3.supportsOverloadedMethods();
        java.lang.String str5 = python3Target3.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = null;
        java.lang.String str9 = python3Target3.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator6, "", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = null;
        python3Target3.gen = codeGenerator10;
        java.lang.String[] strArray19 = new java.lang.String[] { "\"\"\"\"", "\\12", "\"\"", "4.5.2.1", "", "\"\"\"\"", "\"\"" };
        java.util.LinkedHashSet<java.lang.String> strSet20 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet20, strArray19);
        python3Target3.badWords = strSet20;
        python3Target0.badWords = strSet20;
        java.lang.String str25 = python3Target0.encodeIntAsCharEscape((int) (byte) 100);
        java.lang.String str26 = python3Target0.getLanguage();
        java.lang.String str28 = python3Target0.getTargetStringLiteralFromString("\"\\0\"");
        org.antlr.v4.tool.Grammar grammar29 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target30 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean31 = python3Target30.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup32 = python3Target30.templates;
        org.antlr.v4.tool.Grammar grammar33 = null;
        org.stringtemplate.v4.ST sT34 = null;
        python3Target30.genRecognizerHeaderFile(grammar33, sT34, "");
        python3Target30.language = "Python3";
        java.util.Set<java.lang.String> strSet39 = null;
        python3Target30.badWords = strSet39;
        org.antlr.v4.codegen.CodeGenerator codeGenerator41 = null;
        java.lang.String str44 = python3Target30.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator41, "\"Hi!Context\"", false);
        java.lang.String str46 = python3Target30.getListLabel("Python3");
        java.lang.String str48 = python3Target30.getTargetStringLiteralFromString("\\0");
        org.antlr.v4.tool.Grammar grammar49 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target50 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str52 = python3Target50.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.tool.Grammar grammar53 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target54 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean55 = python3Target54.supportsOverloadedMethods();
        java.lang.String str56 = python3Target54.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator57 = null;
        java.lang.String str60 = python3Target54.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator57, "", true);
        java.lang.String str61 = python3Target54.getVersion();
        org.antlr.v4.tool.Grammar grammar62 = null;
        int[] intArray63 = new int[] {};
        java.lang.String[] strArray64 = python3Target54.getTokenTypesAsTargetLabels(grammar62, intArray63);
        java.lang.String[] strArray65 = python3Target50.getTokenTypesAsTargetLabels(grammar53, intArray63);
        java.lang.String[] strArray66 = python3Target30.getTokenTypesAsTargetLabels(grammar49, intArray63);
        java.lang.String[] strArray67 = python3Target0.getTokenTypesAsTargetLabels(grammar29, intArray63);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str69 = python3Target0.getElementListName("\"\"\\\"DContext\\\"\"\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "4.5.2.1" + "'", str5, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\"\"" + "'", str9, "\"\"");
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "d" + "'", str25, "d");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "\"\"\\0\"\"" + "'", str28, "\"\"\\0\"\"");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNull(sTGroup32);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "Hi!Context" + "'", str44, "Hi!Context");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "Python3" + "'", str46, "Python3");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "\"\\0\"" + "'", str48, "\"\\0\"");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "\"\"\"\"\"\"" + "'", str52, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "4.5.2.1" + "'", str56, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "\"\"" + "'", str60, "\"\"");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "4.5.2.1" + "'", str61, "4.5.2.1");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[]");
        org.junit.Assert.assertNotNull(strArray64);
        org.junit.Assert.assertNotNull(strArray65);
        org.junit.Assert.assertNotNull(strArray66);
        org.junit.Assert.assertNotNull(strArray67);
    }

    @Test
    public void test1950() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1950");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!", "hi!" };
        python3Target0.targetCharValueEscape = strArray5;
        java.lang.String[] strArray8 = new java.lang.String[] { "hi!" };
        org.antlr.v4.codegen.target.Python3Target.python3Keywords = strArray8;
        python3Target0.targetCharValueEscape = strArray8;
        org.antlr.v4.tool.Grammar grammar11 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target12 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str14 = python3Target12.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator15 = null;
        python3Target12.gen = codeGenerator15;
        org.antlr.v4.tool.Grammar grammar17 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target18 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str20 = python3Target18.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.tool.Grammar grammar21 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target22 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean23 = python3Target22.supportsOverloadedMethods();
        java.lang.String str24 = python3Target22.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator25 = null;
        java.lang.String str28 = python3Target22.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator25, "", true);
        java.lang.String str29 = python3Target22.getVersion();
        org.antlr.v4.tool.Grammar grammar30 = null;
        int[] intArray31 = new int[] {};
        java.lang.String[] strArray32 = python3Target22.getTokenTypesAsTargetLabels(grammar30, intArray31);
        java.lang.String[] strArray33 = python3Target18.getTokenTypesAsTargetLabels(grammar21, intArray31);
        java.lang.String[] strArray34 = python3Target12.getTokenTypesAsTargetLabels(grammar17, intArray31);
        java.lang.String[] strArray35 = python3Target0.getTokenTypesAsTargetLabels(grammar11, intArray31);
        java.lang.String[] strArray36 = python3Target0.targetCharValueEscape;
        java.lang.String[] strArray37 = python3Target0.targetCharValueEscape;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str39 = python3Target0.getAltLabelContextStructName("_\"_\"\"\"DContext\"\"Context\"\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "\"\"\"\"\"\"" + "'", str14, "\"\"\"\"\"\"");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "\"\"\"\"\"\"" + "'", str20, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "4.5.2.1" + "'", str24, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "\"\"" + "'", str28, "\"\"");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "4.5.2.1" + "'", str29, "4.5.2.1");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[]");
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertNotNull(strArray37);
    }

    @Test
    public void test1951() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1951");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.lang.String str3 = python3Target1.getTargetStringLiteralFromString("");
        int int4 = python3Target1.getSerializedATNSegmentLimit();
        boolean boolean5 = python3Target1.wantsBaseVisitor();
        org.stringtemplate.v4.STGroup sTGroup6 = python3Target1.loadTemplates();
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = python3Target1.gen;
        boolean boolean8 = python3Target1.wantsBaseListener();
        python3Target1.language = "\\35";
        java.lang.String str12 = python3Target1.encodeIntAsCharEscape(29);
        int int13 = python3Target1.getSerializedATNSegmentLimit();
        org.antlr.v4.codegen.CodeGenerator codeGenerator14 = null;
        java.lang.String str17 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator14, "\"\"\"\"\"\"Context", true);
        boolean boolean18 = python3Target1.templatesExist();
        org.antlr.v4.codegen.CodeGenerator codeGenerator19 = null;
        python3Target1.gen = codeGenerator19;
        java.lang.String str23 = python3Target1.getTargetStringLiteralFromString("\"\\\"Python3\\\"\"", true);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str25 = python3Target1.getImplicitRuleLabel("\"Python3\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "\"\"" + "'", str3, "\"\"");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 29 + "'", int4 == 29);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(sTGroup6);
        org.junit.Assert.assertNull(codeGenerator7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "\\35" + "'", str12, "\\35");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 29 + "'", int13 == 29);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "\"\\\"\\\"\\\"\\\"\\\"Contex\"" + "'", str17, "\"\\\"\\\"\\\"\\\"\\\"Contex\"");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "\"\\\"\\\\\\\"Python3\\\\\\\"\\\"\"" + "'", str23, "\"\\\"\\\\\\\"Python3\\\\\\\"\\\"\"");
    }

    @Test
    public void test1952() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1952");
        org.antlr.v4.codegen.target.Python3Target.PythonStringRenderer pythonStringRenderer0 = new org.antlr.v4.codegen.target.Python3Target.PythonStringRenderer();
        java.lang.Object obj1 = null;
        java.util.Locale locale3 = null;
        java.lang.String str4 = pythonStringRenderer0.toString(obj1, "\"\"\"\"\"\"", locale3);
        org.antlr.v4.codegen.target.Python3Target python3Target5 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray6 = python3Target5.targetCharValueEscape;
        org.stringtemplate.v4.STGroup sTGroup7 = python3Target5.templates;
        java.util.Locale locale9 = null;
        java.lang.String str10 = pythonStringRenderer0.toString((java.lang.Object) sTGroup7, "\"Hi!Context\"", locale9);
        java.util.Locale locale13 = null;
        java.lang.String str14 = pythonStringRenderer0.toString((java.lang.Object) "\"DContext\"", "", locale13);
        java.lang.Object obj15 = null;
        java.util.Locale locale17 = null;
        java.lang.String str18 = pythonStringRenderer0.toString(obj15, "\"\\\"hi!\\\"\"", locale17);
        java.util.Locale locale21 = null;
        java.lang.String str22 = pythonStringRenderer0.toString((java.lang.Object) "#", "", locale21);
        org.antlr.v4.codegen.target.Python3Target python3Target23 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean24 = python3Target23.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup25 = python3Target23.templates;
        org.antlr.v4.tool.Grammar grammar26 = null;
        org.stringtemplate.v4.ST sT27 = null;
        python3Target23.genRecognizerHeaderFile(grammar26, sT27, "");
        python3Target23.language = "Python3";
        java.util.Set<java.lang.String> strSet32 = null;
        python3Target23.badWords = strSet32;
        boolean boolean34 = python3Target23.wantsBaseVisitor();
        java.lang.String str36 = python3Target23.getImplicitSetLabel("Python3");
        int int37 = python3Target23.getInlineTestSetWordSize();
        org.antlr.v4.codegen.target.Python3Target python3Target38 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray39 = python3Target38.targetCharValueEscape;
        java.util.Set<java.lang.String> strSet40 = python3Target38.badWords;
        python3Target23.badWords = strSet40;
        java.lang.String str42 = python3Target23.language;
        java.util.Locale locale44 = null;
        java.lang.String str45 = pythonStringRenderer0.toString((java.lang.Object) str42, "\"\"\"\\0\"\"\"", locale44);
        java.util.Locale locale48 = null;
        java.lang.String str49 = pythonStringRenderer0.toString((java.lang.Object) "\\\"_tsetPython3\\\"Context", "_\\\"_\\\"\\\"\\\"DContext\\\"\\\"Context\\\"\\\"", locale48);
        java.lang.Object obj50 = null;
        java.util.Locale locale52 = null;
        java.lang.String str53 = pythonStringRenderer0.toString(obj50, "\"\\\"4.5.2.1\\\"\"", locale52);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "\"\"\"\"\"\"" + "'", str4, "\"\"\"\"\"\"");
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertNull(sTGroup7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\"Hi!Context\"" + "'", str10, "\"Hi!Context\"");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "\"\\\"hi!\\\"\"" + "'", str18, "\"\\\"hi!\\\"\"");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNull(sTGroup25);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "_tsetPython3" + "'", str36, "_tsetPython3");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 64 + "'", int37 == 64);
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertNotNull(strSet40);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "Python3" + "'", str42, "Python3");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "\"\"\"\\0\"\"\"" + "'", str45, "\"\"\"\\0\"\"\"");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "_\\\"_\\\"\\\"\\\"DContext\\\"\\\"Context\\\"\\\"" + "'", str49, "_\\\"_\\\"\\\"\\\"DContext\\\"\\\"Context\\\"\\\"");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "\"\\\"4.5.2.1\\\"\"" + "'", str53, "\"\\\"4.5.2.1\\\"\"");
    }

    @Test
    public void test1953() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1953");
        java.lang.String str1 = org.stringtemplate.v4.StringRenderer.escapeHTML("\"\"\\\"4.5.2.1\\\"\"\"");
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "\"\"\\\"4.5.2.1\\\"\"\"" + "'", str1, "\"\"\\\"4.5.2.1\\\"\"\"");
    }

    @Test
    public void test1954() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1954");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        org.antlr.v4.tool.Grammar grammar3 = null;
        org.stringtemplate.v4.ST sT4 = null;
        python3Target0.genRecognizerHeaderFile(grammar3, sT4, "");
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = python3Target0.getCodeGenerator();
        java.util.Set<java.lang.String> strSet8 = python3Target0.badWords;
        java.lang.String[] strArray9 = python3Target0.targetCharValueEscape;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str11 = python3Target0.getImplicitRuleLabel("\\nContext");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertNull(codeGenerator7);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertNotNull(strArray9);
    }

    @Test
    public void test1955() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1955");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        java.lang.String str2 = python3Target0.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = null;
        java.lang.String str6 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator3, "", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = null;
        python3Target0.gen = codeGenerator7;
        int int9 = python3Target0.getSerializedATNSegmentLimit();
        org.antlr.v4.tool.Grammar grammar10 = null;
        org.stringtemplate.v4.ST sT11 = null;
        python3Target0.genRecognizerHeaderFile(grammar10, sT11, "_tset12");
        java.lang.String str15 = python3Target0.encodeIntAsCharEscape(0);
        java.util.Set<java.lang.String> strSet16 = python3Target0.badWords;
        boolean boolean17 = python3Target0.wantsBaseListener();
        java.util.Set<java.lang.String> strSet18 = python3Target0.getBadWords();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "4.5.2.1" + "'", str2, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\"\"" + "'", str6, "\"\"");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 29 + "'", int9 == 29);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "\\0" + "'", str15, "\\0");
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(strSet18);
    }

    @Test
    public void test1956() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1956");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray1 = python3Target0.targetCharValueEscape;
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        int int3 = python3Target0.getInlineTestSetWordSize();
        org.antlr.v4.codegen.CodeGenerator codeGenerator4 = python3Target0.gen;
        org.antlr.v4.tool.Grammar grammar5 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target6 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str8 = python3Target6.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.tool.Grammar grammar9 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target10 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean11 = python3Target10.supportsOverloadedMethods();
        java.lang.String str12 = python3Target10.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator13 = null;
        java.lang.String str16 = python3Target10.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator13, "", true);
        java.lang.String str17 = python3Target10.getVersion();
        org.antlr.v4.tool.Grammar grammar18 = null;
        int[] intArray19 = new int[] {};
        java.lang.String[] strArray20 = python3Target10.getTokenTypesAsTargetLabels(grammar18, intArray19);
        java.lang.String[] strArray21 = python3Target6.getTokenTypesAsTargetLabels(grammar9, intArray19);
        java.lang.String[] strArray22 = python3Target0.getTokenTypesAsTargetLabels(grammar5, intArray19);
        java.util.Set<java.lang.String> strSet23 = python3Target0.getBadWords();
        java.lang.Class<?> wildcardClass24 = strSet23.getClass();
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 64 + "'", int3 == 64);
        org.junit.Assert.assertNull(codeGenerator4);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\"\"\"\"\"\"" + "'", str8, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "4.5.2.1" + "'", str12, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "\"\"" + "'", str16, "\"\"");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "4.5.2.1" + "'", str17, "4.5.2.1");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[]");
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertNotNull(strSet23);
        org.junit.Assert.assertNotNull(wildcardClass24);
    }

    @Test
    public void test1957() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1957");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        org.antlr.v4.tool.Grammar grammar3 = null;
        org.stringtemplate.v4.ST sT4 = null;
        python3Target0.genRecognizerHeaderFile(grammar3, sT4, "");
        python3Target0.language = "Python3";
        int int9 = python3Target0.getSerializedATNSegmentLimit();
        java.lang.String str11 = python3Target0.getListLabel("_tsetPython3");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str13 = python3Target0.getElementListName("_tset\\n");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 29 + "'", int9 == 29);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "_tsetPython3" + "'", str11, "_tsetPython3");
    }

    @Test
    public void test1958() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1958");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!", "hi!" };
        python3Target0.targetCharValueEscape = strArray5;
        java.lang.String str8 = python3Target0.getTargetStringLiteralFromString("\"\"");
        java.lang.String str10 = python3Target0.getTargetStringLiteralFromString("\"\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator11 = null;
        python3Target0.gen = codeGenerator11;
        org.antlr.v4.tool.Grammar grammar13 = null;
        org.stringtemplate.v4.ST sT14 = null;
        python3Target0.genRecognizerHeaderFile(grammar13, sT14, "_\"\\\"\\\"\"");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str18 = python3Target0.getElementListName("");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\"\"\"\"" + "'", str8, "\"\"\"\"");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\"\"\"\"" + "'", str10, "\"\"\"\"");
    }

    @Test
    public void test1959() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1959");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        java.lang.String str2 = python3Target0.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = python3Target0.getCodeGenerator();
        org.stringtemplate.v4.STGroup sTGroup4 = null;
        python3Target0.templates = sTGroup4;
        org.stringtemplate.v4.STGroup sTGroup6 = python3Target0.templates;
        java.lang.String[] strArray7 = python3Target0.targetCharValueEscape;
        java.util.Set<java.lang.String> strSet8 = python3Target0.badWords;
        java.util.Set<java.lang.String> strSet9 = python3Target0.getBadWords();
        python3Target0.addBadWords();
        java.lang.String str12 = python3Target0.encodeIntAsCharEscape((int) 'a');
        python3Target0.language = "_tset\"\\\\0\"";
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "4.5.2.1" + "'", str2, "4.5.2.1");
        org.junit.Assert.assertNull(codeGenerator3);
        org.junit.Assert.assertNull(sTGroup6);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertNotNull(strSet9);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "a" + "'", str12, "a");
    }

    @Test
    public void test1960() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1960");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str2 = python3Target0.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = null;
        python3Target0.gen = codeGenerator3;
        java.lang.String str5 = python3Target0.getVersion();
        org.antlr.v4.codegen.target.Python3Target python3Target6 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean7 = python3Target6.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup8 = python3Target6.templates;
        org.antlr.v4.tool.Grammar grammar9 = null;
        org.stringtemplate.v4.ST sT10 = null;
        python3Target6.genRecognizerHeaderFile(grammar9, sT10, "");
        python3Target6.language = "Python3";
        int int15 = python3Target6.getSerializedATNSegmentLimit();
        org.stringtemplate.v4.STGroup sTGroup16 = python3Target6.loadTemplates();
        python3Target0.templates = sTGroup16;
        python3Target0.addBadWords();
        java.lang.String str20 = python3Target0.getAltLabelContextStructName("_\"_tset12\"Context");
        java.lang.String str21 = python3Target0.language;
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "\"\"\"\"\"\"" + "'", str2, "\"\"\"\"\"\"");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "4.5.2.1" + "'", str5, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(sTGroup8);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 29 + "'", int15 == 29);
        org.junit.Assert.assertNotNull(sTGroup16);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "_\"_tset12\"ContextContext" + "'", str20, "_\"_tset12\"ContextContext");
        org.junit.Assert.assertNull(str21);
    }

    @Test
    public void test1961() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1961");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray1 = python3Target0.targetCharValueEscape;
        java.lang.String str2 = python3Target0.language;
        int int3 = python3Target0.getSerializedATNSegmentLimit();
        java.lang.String str6 = python3Target0.getTargetStringLiteralFromString("\"\"\"\"\"\"", false);
        java.lang.String str9 = python3Target0.getTargetStringLiteralFromString("\"Hi!Context\"", false);
        org.antlr.v4.tool.Grammar grammar10 = null;
        org.stringtemplate.v4.ST sT11 = null;
        python3Target0.genRecognizerHeaderFile(grammar10, sT11, "\"_tsetHi!Context\"");
        java.lang.String[] strArray14 = python3Target0.targetCharValueEscape;
        org.antlr.v4.tool.Grammar grammar15 = null;
        org.stringtemplate.v4.ST sT16 = null;
        python3Target0.genRecognizerHeaderFile(grammar15, sT16, "\\\"\\\\0\\\"");
        // The following exception was thrown during execution in test generation
        try {
            org.stringtemplate.v4.STGroup sTGroup19 = python3Target0.loadTemplates();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 29 + "'", int3 == 29);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\"\"\"\"\"\"" + "'", str6, "\"\"\"\"\"\"");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\"Hi!Context\"" + "'", str9, "\"Hi!Context\"");
        org.junit.Assert.assertNotNull(strArray14);
    }

    @Test
    public void test1962() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1962");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!", "hi!" };
        python3Target0.targetCharValueEscape = strArray5;
        java.lang.String str8 = python3Target0.getTargetStringLiteralFromString("\"\"");
        java.lang.String str9 = python3Target0.getLanguage();
        org.antlr.v4.codegen.target.Python3Target python3Target10 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean11 = python3Target10.supportsOverloadedMethods();
        java.lang.String str12 = python3Target10.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator13 = null;
        java.lang.String str16 = python3Target10.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator13, "", true);
        java.lang.String str17 = python3Target10.getVersion();
        org.antlr.v4.codegen.target.Python3Target python3Target18 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean19 = python3Target18.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup20 = python3Target18.templates;
        java.lang.String[] strArray23 = new java.lang.String[] { "hi!", "hi!" };
        python3Target18.targetCharValueEscape = strArray23;
        java.lang.String[] strArray26 = new java.lang.String[] { "hi!" };
        org.antlr.v4.codegen.target.Python3Target.python3Keywords = strArray26;
        python3Target18.targetCharValueEscape = strArray26;
        org.antlr.v4.codegen.target.Python3Target.python3Keywords = strArray26;
        python3Target10.targetCharValueEscape = strArray26;
        python3Target0.targetCharValueEscape = strArray26;
        boolean boolean32 = python3Target0.wantsBaseVisitor();
        org.antlr.v4.tool.Grammar grammar33 = null;
        org.stringtemplate.v4.ST sT34 = null;
        python3Target0.genRecognizerHeaderFile(grammar33, sT34, "_tset\"\"\\\"\\\"\\\"\\\"\\\"\\\"Context\"\"");
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\"\"\"\"" + "'", str8, "\"\"\"\"");
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "4.5.2.1" + "'", str12, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "\"\"" + "'", str16, "\"\"");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "4.5.2.1" + "'", str17, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(sTGroup20);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
    }

    @Test
    public void test1963() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1963");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray1 = python3Target0.targetCharValueEscape;
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = null;
        java.lang.String str6 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator3, "\"\\12\"", false);
        java.lang.String str7 = python3Target0.getLanguage();
        java.lang.String str9 = python3Target0.getTargetStringLiteralFromString("Hi!Context");
        java.lang.String str12 = python3Target0.getTargetStringLiteralFromString("\"\"\\0\"\"", true);
        java.lang.String str14 = python3Target0.getTargetStringLiteralFromString("_#");
        org.antlr.v4.codegen.target.Python3Target python3Target15 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean16 = python3Target15.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup17 = python3Target15.templates;
        org.antlr.v4.tool.Grammar grammar18 = null;
        org.stringtemplate.v4.ST sT19 = null;
        python3Target15.genRecognizerHeaderFile(grammar18, sT19, "");
        org.antlr.v4.codegen.CodeGenerator codeGenerator22 = python3Target15.getCodeGenerator();
        boolean boolean23 = python3Target15.supportsOverloadedMethods();
        org.antlr.v4.codegen.CodeGenerator codeGenerator24 = python3Target15.gen;
        python3Target15.language = "\"\\\"\\\"\\\\0\\\"\\\"\"";
        org.antlr.v4.codegen.target.Python3Target python3Target27 = new org.antlr.v4.codegen.target.Python3Target();
        python3Target27.language = "";
        org.antlr.v4.codegen.target.Python3Target python3Target30 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean31 = python3Target30.supportsOverloadedMethods();
        java.lang.String str32 = python3Target30.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator33 = null;
        java.lang.String str36 = python3Target30.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator33, "", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator37 = null;
        python3Target30.gen = codeGenerator37;
        java.lang.String[] strArray46 = new java.lang.String[] { "\"\"\"\"", "\\12", "\"\"", "4.5.2.1", "", "\"\"\"\"", "\"\"" };
        java.util.LinkedHashSet<java.lang.String> strSet47 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet47, strArray46);
        python3Target30.badWords = strSet47;
        python3Target27.badWords = strSet47;
        java.lang.String str52 = python3Target27.encodeIntAsCharEscape((int) (byte) 100);
        boolean boolean53 = python3Target27.templatesExist();
        java.util.Set<java.lang.String> strSet54 = python3Target27.getBadWords();
        java.lang.String[] strArray55 = python3Target27.targetCharValueEscape;
        python3Target15.targetCharValueEscape = strArray55;
        python3Target0.targetCharValueEscape = strArray55;
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "12" + "'", str6, "12");
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\"Hi!Context\"" + "'", str9, "\"Hi!Context\"");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "\"\"\"\\0\"\"\"" + "'", str12, "\"\"\"\\0\"\"\"");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "\"_#\"" + "'", str14, "\"_#\"");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(sTGroup17);
        org.junit.Assert.assertNull(codeGenerator22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNull(codeGenerator24);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "4.5.2.1" + "'", str32, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "\"\"" + "'", str36, "\"\"");
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "d" + "'", str52, "d");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(strSet54);
        org.junit.Assert.assertNotNull(strArray55);
    }

    @Test
    public void test1964() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1964");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!", "hi!" };
        python3Target0.targetCharValueEscape = strArray5;
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = null;
        java.lang.String str10 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator7, "", false);
        java.util.Set<java.lang.String> strSet11 = python3Target0.badWords;
        java.lang.String str13 = python3Target0.getTargetStringLiteralFromString("12");
        boolean boolean14 = python3Target0.wantsBaseVisitor();
        org.antlr.v4.tool.Grammar grammar15 = null;
        org.stringtemplate.v4.ST sT16 = null;
        python3Target0.genRecognizerHeaderFile(grammar15, sT16, "\"\\0\"");
        org.antlr.v4.tool.Rule rule19 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str20 = python3Target0.getRuleFunctionContextStructName(rule19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNotNull(strSet11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "\"12\"" + "'", str13, "\"12\"");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test1965() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1965");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python3Target1.getBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = null;
        python3Target1.gen = codeGenerator3;
        java.lang.String str6 = python3Target1.getAltLabelContextStructName("hi!");
        java.lang.String str9 = python3Target1.getTargetStringLiteralFromString("\"hi!\"", true);
        int int10 = python3Target1.getSerializedATNSegmentLimit();
        org.stringtemplate.v4.STGroup sTGroup11 = python3Target1.getTemplates();
        org.antlr.v4.tool.Grammar grammar12 = null;
        org.stringtemplate.v4.ST sT13 = null;
        // The following exception was thrown during execution in test generation
        try {
            python3Target1.genFile(grammar12, sT13, "\\\"\\\\\\\"\\\\\\\"hi!\\\\\\\"\\\\\\\"\\\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Hi!Context" + "'", str6, "Hi!Context");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\"\\\"hi!\\\"\"" + "'", str9, "\"\\\"hi!\\\"\"");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 29 + "'", int10 == 29);
        org.junit.Assert.assertNotNull(sTGroup11);
    }

    @Test
    public void test1966() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1966");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        python3Target0.language = "";
        org.antlr.v4.codegen.target.Python3Target python3Target3 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean4 = python3Target3.supportsOverloadedMethods();
        java.lang.String str5 = python3Target3.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = null;
        java.lang.String str9 = python3Target3.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator6, "", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = null;
        python3Target3.gen = codeGenerator10;
        java.lang.String[] strArray19 = new java.lang.String[] { "\"\"\"\"", "\\12", "\"\"", "4.5.2.1", "", "\"\"\"\"", "\"\"" };
        java.util.LinkedHashSet<java.lang.String> strSet20 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet20, strArray19);
        python3Target3.badWords = strSet20;
        python3Target0.badWords = strSet20;
        python3Target0.addBadWords();
        boolean boolean25 = python3Target0.supportsOverloadedMethods();
        org.antlr.v4.codegen.CodeGenerator codeGenerator26 = python3Target0.gen;
        org.antlr.v4.codegen.CodeGenerator codeGenerator27 = python3Target0.gen;
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "4.5.2.1" + "'", str5, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\"\"" + "'", str9, "\"\"");
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNull(codeGenerator26);
        org.junit.Assert.assertNull(codeGenerator27);
    }

    @Test
    public void test1967() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1967");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!", "hi!" };
        python3Target0.targetCharValueEscape = strArray5;
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = null;
        java.lang.String str10 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator7, "", false);
        java.util.Set<java.lang.String> strSet11 = python3Target0.badWords;
        org.antlr.v4.codegen.CodeGenerator codeGenerator12 = null;
        java.lang.String str15 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator12, "@", false);
        org.antlr.v4.codegen.target.Python3Target python3Target16 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean17 = python3Target16.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup18 = python3Target16.templates;
        java.lang.String[] strArray21 = new java.lang.String[] { "hi!", "hi!" };
        python3Target16.targetCharValueEscape = strArray21;
        java.lang.String str24 = python3Target16.getTargetStringLiteralFromString("\"\"");
        org.stringtemplate.v4.STGroup sTGroup25 = null;
        python3Target16.templates = sTGroup25;
        java.lang.String[] strArray27 = python3Target16.targetCharValueEscape;
        python3Target0.targetCharValueEscape = strArray27;
        org.antlr.v4.codegen.target.Python3Target.python3Keywords = strArray27;
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNotNull(strSet11);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNull(sTGroup18);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "\"\"\"\"" + "'", str24, "\"\"\"\"");
        org.junit.Assert.assertNotNull(strArray27);
    }

    @Test
    public void test1968() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1968");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python3Target1.getBadWords();
        java.lang.String str4 = python3Target1.getAltLabelContextStructName("d");
        org.stringtemplate.v4.STGroup sTGroup5 = python3Target1.getTemplates();
        boolean boolean6 = python3Target1.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup7 = python3Target1.getTemplates();
        boolean boolean8 = python3Target1.templatesExist();
        java.lang.String str9 = python3Target1.language;
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = null;
        python3Target1.gen = codeGenerator10;
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "DContext" + "'", str4, "DContext");
        org.junit.Assert.assertNotNull(sTGroup5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(sTGroup7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Python3" + "'", str9, "Python3");
    }

    @Test
    public void test1969() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1969");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.lang.String str3 = python3Target1.getTargetStringLiteralFromString("");
        int int4 = python3Target1.getSerializedATNSegmentLimit();
        java.lang.String str5 = python3Target1.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup6 = python3Target1.loadTemplates();
        org.stringtemplate.v4.STGroup sTGroup7 = python3Target1.getTemplates();
        java.lang.String str9 = python3Target1.getAltLabelContextStructName("\"\"DContext\"\"");
        java.util.Set<java.lang.String> strSet10 = python3Target1.badWords;
        org.antlr.v4.tool.ast.GrammarAST grammarAST11 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str12 = python3Target1.getLoopLabel(grammarAST11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "\"\"" + "'", str3, "\"\"");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 29 + "'", int4 == 29);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Python3" + "'", str5, "Python3");
        org.junit.Assert.assertNotNull(sTGroup6);
        org.junit.Assert.assertNotNull(sTGroup7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\"\"DContext\"\"Context" + "'", str9, "\"\"DContext\"\"Context");
        org.junit.Assert.assertNotNull(strSet10);
    }

    @Test
    public void test1970() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1970");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray1 = python3Target0.targetCharValueEscape;
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = null;
        java.lang.String str6 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator3, "\"\\12\"", false);
        java.lang.String str7 = python3Target0.getLanguage();
        java.lang.String str9 = python3Target0.getTargetStringLiteralFromString("Hi!Context");
        java.lang.String str12 = python3Target0.getTargetStringLiteralFromString("\"\"\\0\"\"", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator13 = null;
        java.lang.String str16 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator13, "\"_tset12\"", true);
        java.util.Set<java.lang.String> strSet17 = python3Target0.getBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator18 = python3Target0.getCodeGenerator();
        java.lang.Class<?> wildcardClass19 = python3Target0.getClass();
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "12" + "'", str6, "12");
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\"Hi!Context\"" + "'", str9, "\"Hi!Context\"");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "\"\"\"\\0\"\"\"" + "'", str12, "\"\"\"\\0\"\"\"");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "\"_tset12\"" + "'", str16, "\"_tset12\"");
        org.junit.Assert.assertNotNull(strSet17);
        org.junit.Assert.assertNull(codeGenerator18);
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test1971() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1971");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!", "hi!" };
        python3Target0.targetCharValueEscape = strArray5;
        java.lang.String str8 = python3Target0.getTargetStringLiteralFromString("\"\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator9 = python3Target0.gen;
        java.lang.String str10 = python3Target0.getLanguage();
        boolean boolean11 = python3Target0.supportsOverloadedMethods();
        org.antlr.v4.codegen.target.Python3Target python3Target12 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean13 = python3Target12.supportsOverloadedMethods();
        int int14 = python3Target12.getInlineTestSetWordSize();
        boolean boolean15 = python3Target12.wantsBaseVisitor();
        java.util.Set<java.lang.String> strSet16 = python3Target12.getBadWords();
        python3Target0.badWords = strSet16;
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\"\"\"\"" + "'", str8, "\"\"\"\"");
        org.junit.Assert.assertNull(codeGenerator9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 64 + "'", int14 == 64);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(strSet16);
    }

    @Test
    public void test1972() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1972");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!", "hi!" };
        python3Target0.targetCharValueEscape = strArray5;
        java.lang.String str8 = python3Target0.getTargetStringLiteralFromString("\"\"");
        java.lang.String str10 = python3Target0.getTargetStringLiteralFromString("\"hi!\"");
        org.antlr.v4.tool.Grammar grammar11 = null;
        org.stringtemplate.v4.ST sT12 = null;
        python3Target0.genRecognizerHeaderFile(grammar11, sT12, "12Context");
        boolean boolean15 = python3Target0.wantsBaseVisitor();
        int int16 = python3Target0.getSerializedATNSegmentLimit();
        org.antlr.v4.tool.Grammar grammar17 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target18 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean19 = python3Target18.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup20 = python3Target18.templates;
        java.lang.String[] strArray23 = new java.lang.String[] { "hi!", "hi!" };
        python3Target18.targetCharValueEscape = strArray23;
        org.antlr.v4.codegen.CodeGenerator codeGenerator25 = null;
        java.lang.String str28 = python3Target18.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator25, "", false);
        org.antlr.v4.tool.Grammar grammar29 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target30 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str32 = python3Target30.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.tool.Grammar grammar33 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target34 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean35 = python3Target34.supportsOverloadedMethods();
        java.lang.String str36 = python3Target34.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator37 = null;
        java.lang.String str40 = python3Target34.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator37, "", true);
        java.lang.String str41 = python3Target34.getVersion();
        org.antlr.v4.tool.Grammar grammar42 = null;
        int[] intArray43 = new int[] {};
        java.lang.String[] strArray44 = python3Target34.getTokenTypesAsTargetLabels(grammar42, intArray43);
        java.lang.String[] strArray45 = python3Target30.getTokenTypesAsTargetLabels(grammar33, intArray43);
        java.lang.String[] strArray46 = python3Target18.getTokenTypesAsTargetLabels(grammar29, intArray43);
        java.lang.String[] strArray47 = python3Target0.getTokenTypesAsTargetLabels(grammar17, intArray43);
        int int48 = python3Target0.getSerializedATNSegmentLimit();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\"\"\"\"" + "'", str8, "\"\"\"\"");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\"\"hi!\"\"" + "'", str10, "\"\"hi!\"\"");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 29 + "'", int16 == 29);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(sTGroup20);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "\"\"\"\"\"\"" + "'", str32, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "4.5.2.1" + "'", str36, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "\"\"" + "'", str40, "\"\"");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "4.5.2.1" + "'", str41, "4.5.2.1");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[]");
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 29 + "'", int48 == 29);
    }

    @Test
    public void test1973() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1973");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        java.lang.String str2 = python3Target0.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = python3Target0.getCodeGenerator();
        org.stringtemplate.v4.STGroup sTGroup4 = null;
        python3Target0.templates = sTGroup4;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str7 = python3Target0.getImplicitRuleLabel("_\"\"\"DContext\"\"Context\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "4.5.2.1" + "'", str2, "4.5.2.1");
        org.junit.Assert.assertNull(codeGenerator3);
    }

    @Test
    public void test1974() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1974");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!", "hi!" };
        python3Target0.targetCharValueEscape = strArray5;
        java.lang.String str8 = python3Target0.getTargetStringLiteralFromString("\"\"");
        java.lang.String str9 = python3Target0.getLanguage();
        org.antlr.v4.codegen.target.Python3Target python3Target10 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray11 = python3Target10.targetCharValueEscape;
        org.stringtemplate.v4.STGroup sTGroup12 = python3Target10.templates;
        int int13 = python3Target10.getInlineTestSetWordSize();
        org.antlr.v4.codegen.CodeGenerator codeGenerator14 = python3Target10.gen;
        org.antlr.v4.tool.Grammar grammar15 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target16 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str18 = python3Target16.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.tool.Grammar grammar19 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target20 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean21 = python3Target20.supportsOverloadedMethods();
        java.lang.String str22 = python3Target20.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator23 = null;
        java.lang.String str26 = python3Target20.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator23, "", true);
        java.lang.String str27 = python3Target20.getVersion();
        org.antlr.v4.tool.Grammar grammar28 = null;
        int[] intArray29 = new int[] {};
        java.lang.String[] strArray30 = python3Target20.getTokenTypesAsTargetLabels(grammar28, intArray29);
        java.lang.String[] strArray31 = python3Target16.getTokenTypesAsTargetLabels(grammar19, intArray29);
        java.lang.String[] strArray32 = python3Target10.getTokenTypesAsTargetLabels(grammar15, intArray29);
        python3Target0.targetCharValueEscape = strArray32;
        org.antlr.v4.codegen.target.Python3Target.python3Keywords = strArray32;
        org.antlr.v4.codegen.target.Python3Target.python3Keywords = strArray32;
        org.antlr.v4.codegen.target.Python3Target.python3Keywords = strArray32;
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\"\"\"\"" + "'", str8, "\"\"\"\"");
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNull(sTGroup12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 64 + "'", int13 == 64);
        org.junit.Assert.assertNull(codeGenerator14);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "\"\"\"\"\"\"" + "'", str18, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "4.5.2.1" + "'", str22, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "\"\"" + "'", str26, "\"\"");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "4.5.2.1" + "'", str27, "4.5.2.1");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[]");
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertNotNull(strArray32);
    }

    @Test
    public void test1975() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1975");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python3Target1.getBadWords();
        java.lang.String str4 = python3Target1.getAltLabelContextStructName("d");
        java.lang.String str5 = python3Target1.getLanguage();
        java.lang.String str6 = python3Target1.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = null;
        java.lang.String str10 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator7, "\"_tsetPython3\"", true);
        python3Target1.language = "_\"\"\"_tset12\"\"\"";
        boolean boolean13 = python3Target1.wantsBaseListener();
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "DContext" + "'", str4, "DContext");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Python3" + "'", str5, "Python3");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "4.5.2.1" + "'", str6, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\"_tsetPython3\"" + "'", str10, "\"_tsetPython3\"");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test1976() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1976");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.lang.String str3 = python3Target1.getTargetStringLiteralFromString("");
        int int4 = python3Target1.getSerializedATNSegmentLimit();
        int int5 = python3Target1.getInlineTestSetWordSize();
        boolean boolean6 = python3Target1.supportsOverloadedMethods();
        org.antlr.v4.tool.ast.GrammarAST grammarAST7 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str8 = python3Target1.getLoopCounter(grammarAST7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "\"\"" + "'", str3, "\"\"");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 29 + "'", int4 == 29);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 64 + "'", int5 == 64);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    }

    @Test
    public void test1977() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1977");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.lang.String str2 = python3Target1.getVersion();
        int int3 = python3Target1.getSerializedATNSegmentLimit();
        java.lang.String str4 = python3Target1.getVersion();
        boolean boolean5 = python3Target1.wantsBaseListener();
        python3Target1.addBadWords();
        int int7 = python3Target1.getInlineTestSetWordSize();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str9 = python3Target1.getImplicitTokenLabel("_tset\"\\35\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "4.5.2.1" + "'", str2, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 29 + "'", int3 == 29);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "4.5.2.1" + "'", str4, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 64 + "'", int7 == 64);
    }

    @Test
    public void test1978() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1978");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        org.antlr.v4.tool.Grammar grammar3 = null;
        org.stringtemplate.v4.ST sT4 = null;
        python3Target0.genRecognizerHeaderFile(grammar3, sT4, "");
        python3Target0.language = "Python3";
        java.util.Set<java.lang.String> strSet9 = null;
        python3Target0.badWords = strSet9;
        boolean boolean11 = python3Target0.wantsBaseVisitor();
        java.lang.String str13 = python3Target0.getImplicitSetLabel("Python3");
        int int14 = python3Target0.getInlineTestSetWordSize();
        org.antlr.v4.codegen.target.Python3Target python3Target15 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray16 = python3Target15.targetCharValueEscape;
        java.util.Set<java.lang.String> strSet17 = python3Target15.badWords;
        python3Target0.badWords = strSet17;
        java.lang.String str19 = python3Target0.language;
        java.lang.String str21 = python3Target0.getListLabel("\\\"\\\"\\\"\\\"\\\"\\\"Contex");
        java.lang.String str23 = python3Target0.getImplicitSetLabel("_tset\"\\\"0\\\"\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator24 = null;
        java.lang.String str27 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator24, "\"\"\"\"\"\"Context", false);
        org.stringtemplate.v4.STGroup sTGroup28 = python3Target0.getTemplates();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "_tsetPython3" + "'", str13, "_tsetPython3");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 64 + "'", int14 == 64);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertNotNull(strSet17);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Python3" + "'", str19, "Python3");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "\\\"\\\"\\\"\\\"\\\"\\\"Contex" + "'", str21, "\\\"\\\"\\\"\\\"\\\"\\\"Contex");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "_tset_tset\"\\\"0\\\"\"" + "'", str23, "_tset_tset\"\\\"0\\\"\"");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "\\\"\\\"\\\"\\\"\\\"Contex" + "'", str27, "\\\"\\\"\\\"\\\"\\\"Contex");
        org.junit.Assert.assertNotNull(sTGroup28);
    }

    @Test
    public void test1979() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1979");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        python3Target0.language = "";
        org.antlr.v4.codegen.target.Python3Target python3Target3 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean4 = python3Target3.supportsOverloadedMethods();
        java.lang.String str5 = python3Target3.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = null;
        java.lang.String str9 = python3Target3.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator6, "", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = null;
        python3Target3.gen = codeGenerator10;
        java.lang.String[] strArray19 = new java.lang.String[] { "\"\"\"\"", "\\12", "\"\"", "4.5.2.1", "", "\"\"\"\"", "\"\"" };
        java.util.LinkedHashSet<java.lang.String> strSet20 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet20, strArray19);
        python3Target3.badWords = strSet20;
        python3Target0.badWords = strSet20;
        java.lang.String str25 = python3Target0.encodeIntAsCharEscape((int) (byte) 100);
        java.lang.String str26 = python3Target0.getLanguage();
        java.lang.String str28 = python3Target0.getTargetStringLiteralFromString("\"\\0\"");
        org.antlr.v4.codegen.target.Python3Target python3Target29 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean30 = python3Target29.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup31 = python3Target29.templates;
        org.antlr.v4.tool.Grammar grammar32 = null;
        org.stringtemplate.v4.ST sT33 = null;
        python3Target29.genRecognizerHeaderFile(grammar32, sT33, "");
        python3Target29.language = "Python3";
        java.util.Set<java.lang.String> strSet38 = null;
        python3Target29.badWords = strSet38;
        boolean boolean40 = python3Target29.wantsBaseVisitor();
        java.lang.String str42 = python3Target29.getImplicitSetLabel("Python3");
        int int43 = python3Target29.getInlineTestSetWordSize();
        java.lang.String str44 = python3Target29.language;
        java.lang.String str45 = python3Target29.getLanguage();
        int int46 = python3Target29.getInlineTestSetWordSize();
        java.lang.String str48 = python3Target29.getImplicitRuleLabel("\"\\\"\\\"4.5.2.1\\\"\\\"\"");
        java.lang.String str50 = python3Target29.getImplicitSetLabel("_tset_12");
        org.stringtemplate.v4.STGroup sTGroup51 = python3Target29.templates;
        python3Target0.templates = sTGroup51;
        int int53 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str54 = python3Target0.getVersion();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str56 = python3Target0.getImplicitTokenLabel("\\1");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "4.5.2.1" + "'", str5, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\"\"" + "'", str9, "\"\"");
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "d" + "'", str25, "d");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "\"\"\\0\"\"" + "'", str28, "\"\"\\0\"\"");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNull(sTGroup31);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "_tsetPython3" + "'", str42, "_tsetPython3");
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 64 + "'", int43 == 64);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "Python3" + "'", str44, "Python3");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "Python3" + "'", str45, "Python3");
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 64 + "'", int46 == 64);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "_\"\\\"\\\"4.5.2.1\\\"\\\"\"" + "'", str48, "_\"\\\"\\\"4.5.2.1\\\"\\\"\"");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "_tset_tset_12" + "'", str50, "_tset_tset_12");
        org.junit.Assert.assertNotNull(sTGroup51);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 64 + "'", int53 == 64);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "4.5.2.1" + "'", str54, "4.5.2.1");
    }

    @Test
    public void test1980() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1980");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        python3Target0.language = "";
        org.antlr.v4.codegen.target.Python3Target python3Target3 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean4 = python3Target3.supportsOverloadedMethods();
        java.lang.String str5 = python3Target3.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = null;
        java.lang.String str9 = python3Target3.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator6, "", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = null;
        python3Target3.gen = codeGenerator10;
        java.lang.String[] strArray19 = new java.lang.String[] { "\"\"\"\"", "\\12", "\"\"", "4.5.2.1", "", "\"\"\"\"", "\"\"" };
        java.util.LinkedHashSet<java.lang.String> strSet20 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet20, strArray19);
        python3Target3.badWords = strSet20;
        python3Target0.badWords = strSet20;
        java.lang.String str25 = python3Target0.encodeIntAsCharEscape((int) (byte) 100);
        boolean boolean26 = python3Target0.templatesExist();
        java.util.Set<java.lang.String> strSet27 = python3Target0.getBadWords();
        java.lang.String[] strArray28 = python3Target0.targetCharValueEscape;
        java.lang.String str30 = python3Target0.encodeIntAsCharEscape((int) (byte) 1);
        boolean boolean31 = python3Target0.supportsOverloadedMethods();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "4.5.2.1" + "'", str5, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\"\"" + "'", str9, "\"\"");
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "d" + "'", str25, "d");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(strSet27);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "\\1" + "'", str30, "\\1");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
    }

    @Test
    public void test1981() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1981");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!", "hi!" };
        python3Target0.targetCharValueEscape = strArray5;
        java.lang.String str8 = python3Target0.getTargetStringLiteralFromString("\"\"");
        java.lang.String str10 = python3Target0.getTargetStringLiteralFromString("\"\"");
        python3Target0.language = "\\1";
        boolean boolean13 = python3Target0.wantsBaseVisitor();
        org.antlr.v4.tool.Grammar grammar14 = null;
        org.stringtemplate.v4.ST sT15 = null;
        python3Target0.genRecognizerHeaderFile(grammar14, sT15, "\"\\12\"");
        org.antlr.v4.tool.ast.GrammarAST grammarAST18 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str19 = python3Target0.getLoopCounter(grammarAST18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\"\"\"\"" + "'", str8, "\"\"\"\"");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\"\"\"\"" + "'", str10, "\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test1982() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1982");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        python3Target0.language = "4.5.2.1";
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = python3Target0.getCodeGenerator();
        org.antlr.v4.codegen.CodeGenerator codeGenerator4 = python3Target0.gen;
        java.lang.String str5 = python3Target0.getLanguage();
        python3Target0.addBadWords();
        org.antlr.v4.codegen.target.Python3Target python3Target7 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str9 = python3Target7.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = null;
        python3Target7.gen = codeGenerator10;
        java.lang.String str12 = python3Target7.getVersion();
        org.antlr.v4.codegen.target.Python3Target python3Target13 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean14 = python3Target13.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup15 = python3Target13.templates;
        org.antlr.v4.tool.Grammar grammar16 = null;
        org.stringtemplate.v4.ST sT17 = null;
        python3Target13.genRecognizerHeaderFile(grammar16, sT17, "");
        python3Target13.language = "Python3";
        int int22 = python3Target13.getSerializedATNSegmentLimit();
        org.stringtemplate.v4.STGroup sTGroup23 = python3Target13.loadTemplates();
        python3Target7.templates = sTGroup23;
        python3Target0.templates = sTGroup23;
        python3Target0.language = "\\35";
        java.lang.String str29 = python3Target0.getTargetStringLiteralFromString("\"\"\"\"\"\"Context");
        java.lang.String str31 = python3Target0.getImplicitSetLabel("\"\\\"\\\"\\\"\\\"\\\"Contex\"");
        boolean boolean32 = python3Target0.supportsOverloadedMethods();
        org.antlr.v4.tool.ast.GrammarAST grammarAST33 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean34 = python3Target0.grammarSymbolCausesIssueInGeneratedCode(grammarAST33);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(codeGenerator3);
        org.junit.Assert.assertNull(codeGenerator4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "4.5.2.1" + "'", str5, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\"\"\"\"\"\"" + "'", str9, "\"\"\"\"\"\"");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "4.5.2.1" + "'", str12, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(sTGroup15);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 29 + "'", int22 == 29);
        org.junit.Assert.assertNotNull(sTGroup23);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "\"\"\"\"\"\"\"Context\"" + "'", str29, "\"\"\"\"\"\"\"Context\"");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "_tset\"\\\"\\\"\\\"\\\"\\\"Contex\"" + "'", str31, "_tset\"\\\"\\\"\\\"\\\"\\\"Contex\"");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
    }

    @Test
    public void test1983() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1983");
        org.antlr.v4.codegen.target.Python3Target.PythonStringRenderer pythonStringRenderer0 = new org.antlr.v4.codegen.target.Python3Target.PythonStringRenderer();
        java.lang.Object obj1 = null;
        java.util.Locale locale3 = null;
        java.lang.String str4 = pythonStringRenderer0.toString(obj1, "\"\"\"\"\"\"", locale3);
        org.antlr.v4.codegen.target.Python3Target python3Target5 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean6 = python3Target5.supportsOverloadedMethods();
        java.util.Set<java.lang.String> strSet7 = python3Target5.badWords;
        boolean boolean8 = python3Target5.templatesExist();
        python3Target5.addBadWords();
        java.util.Locale locale11 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str12 = pythonStringRenderer0.toString((java.lang.Object) python3Target5, "\"\\nContext\"", locale11);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: org.antlr.v4.codegen.target.Python3Target cannot be cast to java.lang.String");
        } catch (java.lang.ClassCastException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "\"\"\"\"\"\"" + "'", str4, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(strSet7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test1984() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1984");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!", "hi!" };
        python3Target0.targetCharValueEscape = strArray5;
        java.lang.String str8 = python3Target0.getTargetStringLiteralFromString("\"\"");
        java.lang.String str10 = python3Target0.getTargetStringLiteralFromString("\"\"");
        java.lang.String str11 = python3Target0.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup12 = python3Target0.templates;
        org.antlr.v4.codegen.CodeGenerator codeGenerator13 = python3Target0.gen;
        boolean boolean14 = python3Target0.templatesExist();
        java.lang.String str15 = python3Target0.getLanguage();
        org.antlr.v4.tool.ast.GrammarAST grammarAST16 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str17 = python3Target0.getLoopLabel(grammarAST16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\"\"\"\"" + "'", str8, "\"\"\"\"");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\"\"\"\"" + "'", str10, "\"\"\"\"");
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(sTGroup12);
        org.junit.Assert.assertNull(codeGenerator13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(str15);
    }

    @Test
    public void test1985() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1985");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.lang.String str3 = python3Target1.getTargetStringLiteralFromString("");
        org.antlr.v4.codegen.CodeGenerator codeGenerator4 = python3Target1.gen;
        org.stringtemplate.v4.STGroup sTGroup5 = python3Target1.templates;
        org.stringtemplate.v4.STGroup sTGroup6 = python3Target1.loadTemplates();
        boolean boolean7 = python3Target1.templatesExist();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str9 = python3Target1.encodeIntAsCharEscape((int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot encode the specified value: -1");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "\"\"" + "'", str3, "\"\"");
        org.junit.Assert.assertNull(codeGenerator4);
        org.junit.Assert.assertNull(sTGroup5);
        org.junit.Assert.assertNotNull(sTGroup6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
    }

    @Test
    public void test1986() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1986");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        java.lang.String str2 = python3Target0.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = null;
        java.lang.String str6 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator3, "", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = null;
        python3Target0.gen = codeGenerator7;
        java.lang.String[] strArray16 = new java.lang.String[] { "\"\"\"\"", "\\12", "\"\"", "4.5.2.1", "", "\"\"\"\"", "\"\"" };
        java.util.LinkedHashSet<java.lang.String> strSet17 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet17, strArray16);
        python3Target0.badWords = strSet17;
        boolean boolean20 = python3Target0.templatesExist();
        int int21 = python3Target0.getSerializedATNSegmentLimit();
        java.lang.String str23 = python3Target0.getTargetStringLiteralFromString("d");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str25 = python3Target0.getListLabel("\"_tset_\\\"\\\"\\\\\\\"DContext\\\\\\\"\\\"\\\"\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "4.5.2.1" + "'", str2, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\"\"" + "'", str6, "\"\"");
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 29 + "'", int21 == 29);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "\"d\"" + "'", str23, "\"d\"");
    }

    @Test
    public void test1987() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1987");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python3Target1.getBadWords();
        org.antlr.v4.codegen.target.Python3Target python3Target3 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str5 = python3Target3.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.codegen.target.Python3Target python3Target6 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean7 = python3Target6.supportsOverloadedMethods();
        java.util.Set<java.lang.String> strSet8 = python3Target6.badWords;
        python3Target3.badWords = strSet8;
        python3Target1.badWords = strSet8;
        java.util.Set<java.lang.String> strSet11 = python3Target1.badWords;
        org.antlr.v4.codegen.CodeGenerator codeGenerator12 = python3Target1.getCodeGenerator();
        java.lang.String str14 = python3Target1.getImplicitSetLabel("12");
        java.lang.String str15 = python3Target1.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator16 = python3Target1.getCodeGenerator();
        java.lang.String[] strArray17 = python3Target1.targetCharValueEscape;
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "\"\"\"\"\"\"" + "'", str5, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertNotNull(strSet11);
        org.junit.Assert.assertNull(codeGenerator12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "_tset12" + "'", str14, "_tset12");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Python3" + "'", str15, "Python3");
        org.junit.Assert.assertNull(codeGenerator16);
        org.junit.Assert.assertNotNull(strArray17);
    }

    @Test
    public void test1988() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1988");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        org.antlr.v4.tool.Grammar grammar3 = null;
        org.stringtemplate.v4.ST sT4 = null;
        python3Target0.genRecognizerHeaderFile(grammar3, sT4, "");
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = python3Target0.getCodeGenerator();
        java.util.Set<java.lang.String> strSet8 = python3Target0.badWords;
        boolean boolean9 = python3Target0.templatesExist();
        java.lang.String str10 = python3Target0.getVersion();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str12 = python3Target0.getListLabel("_\"\"\\\"\\\"hi!\\\"\\\"\"\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertNull(codeGenerator7);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "4.5.2.1" + "'", str10, "4.5.2.1");
    }

    @Test
    public void test1989() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1989");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.lang.String str3 = python3Target1.getTargetStringLiteralFromString("");
        int int4 = python3Target1.getSerializedATNSegmentLimit();
        boolean boolean5 = python3Target1.wantsBaseVisitor();
        org.stringtemplate.v4.STGroup sTGroup6 = python3Target1.loadTemplates();
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = python3Target1.gen;
        boolean boolean8 = python3Target1.wantsBaseListener();
        boolean boolean9 = python3Target1.supportsOverloadedMethods();
        java.lang.Class<?> wildcardClass10 = python3Target1.getClass();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "\"\"" + "'", str3, "\"\"");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 29 + "'", int4 == 29);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(sTGroup6);
        org.junit.Assert.assertNull(codeGenerator7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test1990() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1990");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray1 = python3Target0.targetCharValueEscape;
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = null;
        java.lang.String str6 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator3, "\"\\12\"", false);
        int int7 = python3Target0.getSerializedATNSegmentLimit();
        boolean boolean8 = python3Target0.templatesExist();
        boolean boolean9 = python3Target0.supportsOverloadedMethods();
        org.antlr.v4.tool.Grammar grammar10 = null;
        org.stringtemplate.v4.ST sT11 = null;
        python3Target0.genRecognizerHeaderFile(grammar10, sT11, "_tsetPython3");
        org.antlr.v4.tool.Grammar grammar14 = null;
        org.stringtemplate.v4.ST sT15 = null;
        // The following exception was thrown during execution in test generation
        try {
            python3Target0.genListenerFile(grammar14, sT15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "12" + "'", str6, "12");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 29 + "'", int7 == 29);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test1991() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1991");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        org.antlr.v4.tool.Grammar grammar3 = null;
        org.stringtemplate.v4.ST sT4 = null;
        python3Target0.genRecognizerHeaderFile(grammar3, sT4, "");
        python3Target0.language = "Python3";
        java.util.Set<java.lang.String> strSet9 = null;
        python3Target0.badWords = strSet9;
        org.antlr.v4.codegen.CodeGenerator codeGenerator11 = null;
        java.lang.String str14 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator11, "\"Hi!Context\"", false);
        java.lang.String str16 = python3Target0.getListLabel("Python3");
        java.lang.String str18 = python3Target0.getTargetStringLiteralFromString("\\0");
        org.antlr.v4.tool.Grammar grammar19 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target20 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str22 = python3Target20.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.tool.Grammar grammar23 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target24 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean25 = python3Target24.supportsOverloadedMethods();
        java.lang.String str26 = python3Target24.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator27 = null;
        java.lang.String str30 = python3Target24.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator27, "", true);
        java.lang.String str31 = python3Target24.getVersion();
        org.antlr.v4.tool.Grammar grammar32 = null;
        int[] intArray33 = new int[] {};
        java.lang.String[] strArray34 = python3Target24.getTokenTypesAsTargetLabels(grammar32, intArray33);
        java.lang.String[] strArray35 = python3Target20.getTokenTypesAsTargetLabels(grammar23, intArray33);
        java.lang.String[] strArray36 = python3Target0.getTokenTypesAsTargetLabels(grammar19, intArray33);
        java.lang.String str38 = python3Target0.getListLabel("\"\"\"\"\"\"Context");
        java.lang.String[] strArray39 = python3Target0.targetCharValueEscape;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Set<java.lang.String> strSet40 = python3Target0.getBadWords();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Hi!Context" + "'", str14, "Hi!Context");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Python3" + "'", str16, "Python3");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "\"\\0\"" + "'", str18, "\"\\0\"");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "\"\"\"\"\"\"" + "'", str22, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "4.5.2.1" + "'", str26, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "\"\"" + "'", str30, "\"\"");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "4.5.2.1" + "'", str31, "4.5.2.1");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[]");
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "\"\"\"\"\"\"Context" + "'", str38, "\"\"\"\"\"\"Context");
        org.junit.Assert.assertNotNull(strArray39);
    }

    @Test
    public void test1992() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1992");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!", "hi!" };
        python3Target0.targetCharValueEscape = strArray5;
        java.lang.String str8 = python3Target0.getTargetStringLiteralFromString("\"\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator9 = python3Target0.gen;
        java.lang.String str10 = python3Target0.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator11 = null;
        java.lang.String str14 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator11, "\\\"\\\"hi!\\\"\\\"", false);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\"\"\"\"" + "'", str8, "\"\"\"\"");
        org.junit.Assert.assertNull(codeGenerator9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "\\\"\\\"hi!\\\"\\\"" + "'", str14, "\\\"\\\"hi!\\\"\\\"");
    }

    @Test
    public void test1993() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1993");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray1 = python3Target0.targetCharValueEscape;
        java.lang.String str2 = python3Target0.language;
        int int3 = python3Target0.getSerializedATNSegmentLimit();
        org.antlr.v4.codegen.CodeGenerator codeGenerator4 = null;
        python3Target0.gen = codeGenerator4;
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target7 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator6);
        java.util.Set<java.lang.String> strSet8 = python3Target7.getBadWords();
        java.lang.String str10 = python3Target7.getAltLabelContextStructName("d");
        org.stringtemplate.v4.STGroup sTGroup11 = python3Target7.getTemplates();
        python3Target0.templates = sTGroup11;
        org.antlr.v4.codegen.target.Python3Target python3Target13 = new org.antlr.v4.codegen.target.Python3Target();
        python3Target13.language = "4.5.2.1";
        org.antlr.v4.codegen.CodeGenerator codeGenerator16 = python3Target13.getCodeGenerator();
        org.antlr.v4.codegen.CodeGenerator codeGenerator17 = python3Target13.gen;
        org.antlr.v4.codegen.CodeGenerator codeGenerator18 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target19 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator18);
        java.lang.String str21 = python3Target19.getTargetStringLiteralFromString("");
        int int22 = python3Target19.getSerializedATNSegmentLimit();
        boolean boolean23 = python3Target19.wantsBaseVisitor();
        org.stringtemplate.v4.STGroup sTGroup24 = python3Target19.loadTemplates();
        python3Target13.templates = sTGroup24;
        java.lang.String str27 = python3Target13.encodeIntAsCharEscape((int) (byte) 10);
        org.antlr.v4.codegen.CodeGenerator codeGenerator28 = null;
        python3Target13.gen = codeGenerator28;
        boolean boolean30 = python3Target13.wantsBaseListener();
        java.lang.String str32 = python3Target13.getImplicitSetLabel("_12");
        org.antlr.v4.tool.Grammar grammar33 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator34 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target35 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator34);
        java.lang.String str36 = python3Target35.getVersion();
        int int37 = python3Target35.getSerializedATNSegmentLimit();
        java.lang.String str38 = python3Target35.getVersion();
        boolean boolean39 = python3Target35.wantsBaseListener();
        python3Target35.addBadWords();
        org.antlr.v4.tool.Grammar grammar41 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator42 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target43 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator42);
        java.util.Set<java.lang.String> strSet44 = python3Target43.getBadWords();
        org.antlr.v4.codegen.target.Python3Target python3Target45 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str47 = python3Target45.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.codegen.target.Python3Target python3Target48 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean49 = python3Target48.supportsOverloadedMethods();
        java.util.Set<java.lang.String> strSet50 = python3Target48.badWords;
        python3Target45.badWords = strSet50;
        python3Target43.badWords = strSet50;
        java.util.Set<java.lang.String> strSet53 = python3Target43.badWords;
        org.antlr.v4.codegen.CodeGenerator codeGenerator54 = python3Target43.getCodeGenerator();
        org.antlr.v4.tool.Grammar grammar55 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target56 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean57 = python3Target56.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup58 = python3Target56.templates;
        org.antlr.v4.tool.Grammar grammar59 = null;
        org.stringtemplate.v4.ST sT60 = null;
        python3Target56.genRecognizerHeaderFile(grammar59, sT60, "");
        python3Target56.language = "Python3";
        java.util.Set<java.lang.String> strSet65 = null;
        python3Target56.badWords = strSet65;
        org.antlr.v4.codegen.CodeGenerator codeGenerator67 = null;
        java.lang.String str70 = python3Target56.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator67, "\"Hi!Context\"", false);
        java.lang.String str72 = python3Target56.getListLabel("Python3");
        java.lang.String str74 = python3Target56.getTargetStringLiteralFromString("\\0");
        org.antlr.v4.tool.Grammar grammar75 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target76 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str78 = python3Target76.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.tool.Grammar grammar79 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target80 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean81 = python3Target80.supportsOverloadedMethods();
        java.lang.String str82 = python3Target80.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator83 = null;
        java.lang.String str86 = python3Target80.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator83, "", true);
        java.lang.String str87 = python3Target80.getVersion();
        org.antlr.v4.tool.Grammar grammar88 = null;
        int[] intArray89 = new int[] {};
        java.lang.String[] strArray90 = python3Target80.getTokenTypesAsTargetLabels(grammar88, intArray89);
        java.lang.String[] strArray91 = python3Target76.getTokenTypesAsTargetLabels(grammar79, intArray89);
        java.lang.String[] strArray92 = python3Target56.getTokenTypesAsTargetLabels(grammar75, intArray89);
        java.lang.String[] strArray93 = python3Target43.getTokenTypesAsTargetLabels(grammar55, intArray89);
        java.lang.String[] strArray94 = python3Target35.getTokenTypesAsTargetLabels(grammar41, intArray89);
        java.lang.String[] strArray95 = python3Target13.getTokenTypesAsTargetLabels(grammar33, intArray89);
        python3Target0.targetCharValueEscape = strArray95;
        org.antlr.v4.tool.ast.GrammarAST grammarAST97 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean98 = python3Target0.grammarSymbolCausesIssueInGeneratedCode(grammarAST97);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 29 + "'", int3 == 29);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "DContext" + "'", str10, "DContext");
        org.junit.Assert.assertNotNull(sTGroup11);
        org.junit.Assert.assertNull(codeGenerator16);
        org.junit.Assert.assertNull(codeGenerator17);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "\"\"" + "'", str21, "\"\"");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 29 + "'", int22 == 29);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(sTGroup24);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "\\12" + "'", str27, "\\12");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "_tset_12" + "'", str32, "_tset_12");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "4.5.2.1" + "'", str36, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 29 + "'", int37 == 29);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "4.5.2.1" + "'", str38, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(strSet44);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "\"\"\"\"\"\"" + "'", str47, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(strSet50);
        org.junit.Assert.assertNotNull(strSet53);
        org.junit.Assert.assertNull(codeGenerator54);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNull(sTGroup58);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "Hi!Context" + "'", str70, "Hi!Context");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "Python3" + "'", str72, "Python3");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "\"\\0\"" + "'", str74, "\"\\0\"");
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "\"\"\"\"\"\"" + "'", str78, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "4.5.2.1" + "'", str82, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "\"\"" + "'", str86, "\"\"");
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "4.5.2.1" + "'", str87, "4.5.2.1");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[]");
        org.junit.Assert.assertNotNull(strArray90);
        org.junit.Assert.assertNotNull(strArray91);
        org.junit.Assert.assertNotNull(strArray92);
        org.junit.Assert.assertNotNull(strArray93);
        org.junit.Assert.assertNotNull(strArray94);
        org.junit.Assert.assertNotNull(strArray95);
    }

    @Test
    public void test1994() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1994");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray1 = python3Target0.targetCharValueEscape;
        java.util.Set<java.lang.String> strSet2 = python3Target0.badWords;
        org.antlr.v4.tool.Grammar grammar3 = null;
        org.stringtemplate.v4.ST sT4 = null;
        python3Target0.genRecognizerHeaderFile(grammar3, sT4, "\\\"\\\"DContext\\\"\\\"");
        org.antlr.v4.tool.ast.GrammarAST grammarAST7 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str8 = python3Target0.getLoopLabel(grammarAST7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertNotNull(strSet2);
    }

    @Test
    public void test1995() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1995");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        org.antlr.v4.tool.Grammar grammar3 = null;
        org.stringtemplate.v4.ST sT4 = null;
        python3Target0.genRecognizerHeaderFile(grammar3, sT4, "");
        python3Target0.language = "Python3";
        java.util.Set<java.lang.String> strSet9 = null;
        python3Target0.badWords = strSet9;
        boolean boolean11 = python3Target0.wantsBaseVisitor();
        org.antlr.v4.codegen.target.Python3Target python3Target12 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean13 = python3Target12.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup14 = python3Target12.templates;
        java.lang.String[] strArray17 = new java.lang.String[] { "hi!", "hi!" };
        python3Target12.targetCharValueEscape = strArray17;
        org.antlr.v4.codegen.CodeGenerator codeGenerator19 = null;
        java.lang.String str22 = python3Target12.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator19, "", false);
        java.util.Set<java.lang.String> strSet23 = python3Target12.badWords;
        java.util.Set<java.lang.String> strSet24 = python3Target12.badWords;
        python3Target0.badWords = strSet24;
        int int26 = python3Target0.getInlineTestSetWordSize();
        org.antlr.v4.codegen.target.Python3Target python3Target27 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean28 = python3Target27.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup29 = python3Target27.templates;
        java.lang.String[] strArray32 = new java.lang.String[] { "hi!", "hi!" };
        python3Target27.targetCharValueEscape = strArray32;
        java.lang.String str35 = python3Target27.getTargetStringLiteralFromString("\"\"");
        java.lang.String str36 = python3Target27.getLanguage();
        org.antlr.v4.codegen.target.Python3Target python3Target37 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray38 = python3Target37.targetCharValueEscape;
        org.stringtemplate.v4.STGroup sTGroup39 = python3Target37.templates;
        int int40 = python3Target37.getInlineTestSetWordSize();
        org.antlr.v4.codegen.CodeGenerator codeGenerator41 = python3Target37.gen;
        org.antlr.v4.tool.Grammar grammar42 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target43 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str45 = python3Target43.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.tool.Grammar grammar46 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target47 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean48 = python3Target47.supportsOverloadedMethods();
        java.lang.String str49 = python3Target47.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator50 = null;
        java.lang.String str53 = python3Target47.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator50, "", true);
        java.lang.String str54 = python3Target47.getVersion();
        org.antlr.v4.tool.Grammar grammar55 = null;
        int[] intArray56 = new int[] {};
        java.lang.String[] strArray57 = python3Target47.getTokenTypesAsTargetLabels(grammar55, intArray56);
        java.lang.String[] strArray58 = python3Target43.getTokenTypesAsTargetLabels(grammar46, intArray56);
        java.lang.String[] strArray59 = python3Target37.getTokenTypesAsTargetLabels(grammar42, intArray56);
        python3Target27.targetCharValueEscape = strArray59;
        int int61 = python3Target27.getInlineTestSetWordSize();
        org.antlr.v4.codegen.target.Python3Target python3Target62 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean63 = python3Target62.supportsOverloadedMethods();
        java.lang.String str64 = python3Target62.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator65 = python3Target62.getCodeGenerator();
        org.antlr.v4.tool.Grammar grammar66 = null;
        org.stringtemplate.v4.ST sT67 = null;
        python3Target62.genRecognizerHeaderFile(grammar66, sT67, "_tsetPython3");
        boolean boolean70 = python3Target62.wantsBaseListener();
        org.antlr.v4.codegen.target.Python3Target python3Target71 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean72 = python3Target71.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup73 = python3Target71.templates;
        java.lang.String[] strArray76 = new java.lang.String[] { "hi!", "hi!" };
        python3Target71.targetCharValueEscape = strArray76;
        org.antlr.v4.codegen.CodeGenerator codeGenerator78 = null;
        java.lang.String str81 = python3Target71.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator78, "", false);
        java.util.Set<java.lang.String> strSet82 = python3Target71.badWords;
        java.util.Set<java.lang.String> strSet83 = python3Target71.badWords;
        java.util.Set<java.lang.String> strSet84 = python3Target71.badWords;
        python3Target62.badWords = strSet84;
        org.antlr.v4.codegen.target.Python3Target python3Target86 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean87 = python3Target86.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup88 = python3Target86.templates;
        org.antlr.v4.tool.Grammar grammar89 = null;
        org.stringtemplate.v4.ST sT90 = null;
        python3Target86.genRecognizerHeaderFile(grammar89, sT90, "");
        python3Target86.language = "Python3";
        int int95 = python3Target86.getSerializedATNSegmentLimit();
        org.stringtemplate.v4.STGroup sTGroup96 = python3Target86.loadTemplates();
        python3Target62.templates = sTGroup96;
        python3Target27.templates = sTGroup96;
        python3Target0.templates = sTGroup96;
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(sTGroup14);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertNotNull(strSet23);
        org.junit.Assert.assertNotNull(strSet24);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 64 + "'", int26 == 64);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(sTGroup29);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "\"\"\"\"" + "'", str35, "\"\"\"\"");
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertNull(sTGroup39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 64 + "'", int40 == 64);
        org.junit.Assert.assertNull(codeGenerator41);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "\"\"\"\"\"\"" + "'", str45, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "4.5.2.1" + "'", str49, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "\"\"" + "'", str53, "\"\"");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "4.5.2.1" + "'", str54, "4.5.2.1");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[]");
        org.junit.Assert.assertNotNull(strArray57);
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertNotNull(strArray59);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 64 + "'", int61 == 64);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "4.5.2.1" + "'", str64, "4.5.2.1");
        org.junit.Assert.assertNull(codeGenerator65);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNull(sTGroup73);
        org.junit.Assert.assertNotNull(strArray76);
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "" + "'", str81, "");
        org.junit.Assert.assertNotNull(strSet82);
        org.junit.Assert.assertNotNull(strSet83);
        org.junit.Assert.assertNotNull(strSet84);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNull(sTGroup88);
        org.junit.Assert.assertTrue("'" + int95 + "' != '" + 29 + "'", int95 == 29);
        org.junit.Assert.assertNotNull(sTGroup96);
    }

    @Test
    public void test1996() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1996");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.lang.String str3 = python3Target1.getTargetStringLiteralFromString("");
        int int4 = python3Target1.getSerializedATNSegmentLimit();
        boolean boolean5 = python3Target1.wantsBaseVisitor();
        org.stringtemplate.v4.STGroup sTGroup6 = python3Target1.loadTemplates();
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = python3Target1.gen;
        boolean boolean8 = python3Target1.wantsBaseListener();
        python3Target1.language = "\\35";
        java.lang.String str12 = python3Target1.encodeIntAsCharEscape(29);
        org.antlr.v4.codegen.target.Python3Target python3Target13 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean14 = python3Target13.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup15 = python3Target13.templates;
        java.lang.String[] strArray18 = new java.lang.String[] { "hi!", "hi!" };
        python3Target13.targetCharValueEscape = strArray18;
        java.lang.String str21 = python3Target13.getTargetStringLiteralFromString("\"\"");
        java.lang.String str23 = python3Target13.getTargetStringLiteralFromString("\"hi!\"");
        java.lang.String str24 = python3Target13.language;
        java.util.Set<java.lang.String> strSet25 = python3Target13.getBadWords();
        python3Target1.badWords = strSet25;
        // The following exception was thrown during execution in test generation
        try {
            org.stringtemplate.v4.STGroup sTGroup27 = python3Target1.loadTemplates();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "\"\"" + "'", str3, "\"\"");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 29 + "'", int4 == 29);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(sTGroup6);
        org.junit.Assert.assertNull(codeGenerator7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "\\35" + "'", str12, "\\35");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(sTGroup15);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "\"\"\"\"" + "'", str21, "\"\"\"\"");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "\"\"hi!\"\"" + "'", str23, "\"\"hi!\"\"");
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(strSet25);
    }

    @Test
    public void test1997() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1997");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!", "hi!" };
        python3Target0.targetCharValueEscape = strArray5;
        java.lang.String str8 = python3Target0.getTargetStringLiteralFromString("\"\"");
        python3Target0.language = "\"hi!\"";
        boolean boolean11 = python3Target0.wantsBaseListener();
        int int12 = python3Target0.getInlineTestSetWordSize();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\"\"\"\"" + "'", str8, "\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 64 + "'", int12 == 64);
    }

    @Test
    public void test1998() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1998");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.lang.String str3 = python3Target1.getTargetStringLiteralFromString("");
        int int4 = python3Target1.getSerializedATNSegmentLimit();
        int int5 = python3Target1.getInlineTestSetWordSize();
        org.antlr.v4.tool.ast.GrammarAST grammarAST6 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean7 = python3Target1.visibleGrammarSymbolCausesIssueInGeneratedCode(grammarAST6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "\"\"" + "'", str3, "\"\"");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 29 + "'", int4 == 29);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 64 + "'", int5 == 64);
    }

    @Test
    public void test1999() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1999");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.lang.String str3 = python3Target1.getTargetStringLiteralFromString("");
        int int4 = python3Target1.getSerializedATNSegmentLimit();
        boolean boolean5 = python3Target1.wantsBaseListener();
        org.antlr.v4.codegen.target.Python3Target python3Target6 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean7 = python3Target6.supportsOverloadedMethods();
        java.lang.String str8 = python3Target6.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator9 = null;
        java.lang.String str12 = python3Target6.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator9, "", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator13 = null;
        python3Target6.gen = codeGenerator13;
        java.lang.String[] strArray22 = new java.lang.String[] { "\"\"\"\"", "\\12", "\"\"", "4.5.2.1", "", "\"\"\"\"", "\"\"" };
        java.util.LinkedHashSet<java.lang.String> strSet23 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet23, strArray22);
        python3Target6.badWords = strSet23;
        org.antlr.v4.tool.Grammar grammar26 = null;
        org.stringtemplate.v4.ST sT27 = null;
        python3Target6.genRecognizerHeaderFile(grammar26, sT27, "\"\"");
        java.lang.String str31 = python3Target6.encodeIntAsCharEscape((int) (byte) 10);
        org.antlr.v4.codegen.target.Python3Target python3Target32 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray33 = python3Target32.targetCharValueEscape;
        java.lang.String str34 = python3Target32.language;
        int int35 = python3Target32.getSerializedATNSegmentLimit();
        org.antlr.v4.codegen.CodeGenerator codeGenerator36 = null;
        python3Target32.gen = codeGenerator36;
        org.antlr.v4.codegen.CodeGenerator codeGenerator38 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target39 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator38);
        java.util.Set<java.lang.String> strSet40 = python3Target39.getBadWords();
        java.lang.String str42 = python3Target39.getAltLabelContextStructName("d");
        org.stringtemplate.v4.STGroup sTGroup43 = python3Target39.getTemplates();
        python3Target32.templates = sTGroup43;
        python3Target6.templates = sTGroup43;
        python3Target1.templates = sTGroup43;
        org.antlr.v4.tool.Grammar grammar47 = null;
        int[] intArray48 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String[] strArray49 = python3Target1.getTokenTypesAsTargetLabels(grammar47, intArray48);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "\"\"" + "'", str3, "\"\"");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 29 + "'", int4 == 29);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "4.5.2.1" + "'", str8, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "\"\"" + "'", str12, "\"\"");
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "\\12" + "'", str31, "\\12");
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 29 + "'", int35 == 29);
        org.junit.Assert.assertNotNull(strSet40);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "DContext" + "'", str42, "DContext");
        org.junit.Assert.assertNotNull(sTGroup43);
    }

    @Test
    public void test2000() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test2000");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python3Target1.getBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = null;
        python3Target1.gen = codeGenerator3;
        java.lang.String str6 = python3Target1.getAltLabelContextStructName("hi!");
        java.lang.String str9 = python3Target1.getTargetStringLiteralFromString("\"hi!\"", true);
        java.lang.String str11 = python3Target1.getAltLabelContextStructName("\"\"\"\"\"\"\"\"");
        java.lang.String str13 = python3Target1.encodeIntAsCharEscape((int) '#');
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Hi!Context" + "'", str6, "Hi!Context");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\"\\\"hi!\\\"\"" + "'", str9, "\"\\\"hi!\\\"\"");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "\"\"\"\"\"\"\"\"Context" + "'", str11, "\"\"\"\"\"\"\"\"Context");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "#" + "'", str13, "#");
    }
}

