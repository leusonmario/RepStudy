import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest2 {

    public static boolean debug = false;

    @Test
    public void test1001() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1001");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        org.antlr.v4.tool.Grammar grammar3 = null;
        org.stringtemplate.v4.ST sT4 = null;
        python3Target0.genRecognizerHeaderFile(grammar3, sT4, "");
        python3Target0.language = "Python3";
        int int9 = python3Target0.getSerializedATNSegmentLimit();
        java.lang.String str11 = python3Target0.getListLabel("_tsetPython3");
        boolean boolean12 = python3Target0.wantsBaseVisitor();
        java.lang.String[] strArray13 = python3Target0.targetCharValueEscape;
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 29 + "'", int9 == 29);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "_tsetPython3" + "'", str11, "_tsetPython3");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(strArray13);
    }

    @Test
    public void test1002() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1002");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.lang.String str3 = python3Target1.getTargetStringLiteralFromString("");
        int int4 = python3Target1.getSerializedATNSegmentLimit();
        boolean boolean5 = python3Target1.wantsBaseVisitor();
        java.lang.String str6 = python3Target1.getVersion();
        java.lang.String str8 = python3Target1.encodeIntAsCharEscape(29);
        org.antlr.v4.codegen.CodeGenerator codeGenerator9 = python3Target1.getCodeGenerator();
        int int10 = python3Target1.getSerializedATNSegmentLimit();
        org.antlr.v4.tool.Grammar grammar11 = null;
        org.stringtemplate.v4.ST sT12 = null;
        // The following exception was thrown during execution in test generation
        try {
            python3Target1.genFile(grammar11, sT12, "\"\\\"DContext\\\"\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "\"\"" + "'", str3, "\"\"");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 29 + "'", int4 == 29);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "4.5.2.1" + "'", str6, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\\35" + "'", str8, "\\35");
        org.junit.Assert.assertNull(codeGenerator9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 29 + "'", int10 == 29);
    }

    @Test
    public void test1003() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1003");
        java.lang.String str1 = org.stringtemplate.v4.StringRenderer.escapeHTML("\\\"\\\"\\\"\\\"\\\"\\\"Contex");
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "\\\"\\\"\\\"\\\"\\\"\\\"Contex" + "'", str1, "\\\"\\\"\\\"\\\"\\\"\\\"Contex");
    }

    @Test
    public void test1004() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1004");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        java.lang.String str2 = python3Target0.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = null;
        java.lang.String str6 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator3, "", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = null;
        python3Target0.gen = codeGenerator7;
        java.lang.String[] strArray16 = new java.lang.String[] { "\"\"\"\"", "\\12", "\"\"", "4.5.2.1", "", "\"\"\"\"", "\"\"" };
        java.util.LinkedHashSet<java.lang.String> strSet17 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet17, strArray16);
        python3Target0.badWords = strSet17;
        org.antlr.v4.codegen.CodeGenerator codeGenerator20 = python3Target0.gen;
        java.lang.String str21 = python3Target0.getVersion();
        int int22 = python3Target0.getSerializedATNSegmentLimit();
        java.lang.String str23 = python3Target0.language;
        org.antlr.v4.codegen.target.Python3Target python3Target24 = new org.antlr.v4.codegen.target.Python3Target();
        python3Target24.language = "4.5.2.1";
        org.antlr.v4.codegen.CodeGenerator codeGenerator27 = python3Target24.getCodeGenerator();
        org.antlr.v4.codegen.CodeGenerator codeGenerator28 = python3Target24.gen;
        org.antlr.v4.codegen.CodeGenerator codeGenerator29 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target30 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator29);
        java.lang.String str32 = python3Target30.getTargetStringLiteralFromString("");
        int int33 = python3Target30.getSerializedATNSegmentLimit();
        boolean boolean34 = python3Target30.wantsBaseVisitor();
        org.stringtemplate.v4.STGroup sTGroup35 = python3Target30.loadTemplates();
        python3Target24.templates = sTGroup35;
        python3Target0.templates = sTGroup35;
        boolean boolean38 = python3Target0.wantsBaseVisitor();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "4.5.2.1" + "'", str2, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\"\"" + "'", str6, "\"\"");
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNull(codeGenerator20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "4.5.2.1" + "'", str21, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 29 + "'", int22 == 29);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNull(codeGenerator27);
        org.junit.Assert.assertNull(codeGenerator28);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "\"\"" + "'", str32, "\"\"");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 29 + "'", int33 == 29);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(sTGroup35);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
    }

    @Test
    public void test1005() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1005");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        org.antlr.v4.tool.Grammar grammar3 = null;
        org.stringtemplate.v4.ST sT4 = null;
        python3Target0.genRecognizerHeaderFile(grammar3, sT4, "");
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = python3Target0.getCodeGenerator();
        int int8 = python3Target0.getInlineTestSetWordSize();
        org.antlr.v4.codegen.target.Python3Target python3Target9 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean10 = python3Target9.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup11 = python3Target9.templates;
        org.antlr.v4.tool.Grammar grammar12 = null;
        org.stringtemplate.v4.ST sT13 = null;
        python3Target9.genRecognizerHeaderFile(grammar12, sT13, "");
        python3Target9.language = "Python3";
        int int18 = python3Target9.getSerializedATNSegmentLimit();
        java.lang.String str20 = python3Target9.getListLabel("_tsetPython3");
        org.stringtemplate.v4.STGroup sTGroup21 = python3Target9.getTemplates();
        java.lang.String[] strArray22 = python3Target9.targetCharValueEscape;
        python3Target0.targetCharValueEscape = strArray22;
        boolean boolean24 = python3Target0.wantsBaseListener();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertNull(codeGenerator7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 64 + "'", int8 == 64);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(sTGroup11);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 29 + "'", int18 == 29);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "_tsetPython3" + "'", str20, "_tsetPython3");
        org.junit.Assert.assertNotNull(sTGroup21);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    }

    @Test
    public void test1006() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1006");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        java.lang.String str2 = python3Target0.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = null;
        java.lang.String str6 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator3, "", true);
        java.lang.String str7 = python3Target0.getVersion();
        org.antlr.v4.tool.Grammar grammar8 = null;
        int[] intArray9 = new int[] {};
        java.lang.String[] strArray10 = python3Target0.getTokenTypesAsTargetLabels(grammar8, intArray9);
        java.lang.String[] strArray11 = python3Target0.targetCharValueEscape;
        java.util.Set<java.lang.String> strSet12 = python3Target0.badWords;
        python3Target0.addBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator14 = null;
        python3Target0.gen = codeGenerator14;
        org.antlr.v4.tool.ast.GrammarAST grammarAST16 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean17 = python3Target0.visibleGrammarSymbolCausesIssueInGeneratedCode(grammarAST16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "4.5.2.1" + "'", str2, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\"\"" + "'", str6, "\"\"");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "4.5.2.1" + "'", str7, "4.5.2.1");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[]");
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(strSet12);
    }

    @Test
    public void test1007() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1007");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray1 = python3Target0.targetCharValueEscape;
        java.lang.String str2 = python3Target0.language;
        int int3 = python3Target0.getSerializedATNSegmentLimit();
        java.lang.String str6 = python3Target0.getTargetStringLiteralFromString("\"\"\"\"\"\"", false);
        java.lang.String str9 = python3Target0.getTargetStringLiteralFromString("\"Hi!Context\"", false);
        org.antlr.v4.tool.Grammar grammar10 = null;
        org.stringtemplate.v4.ST sT11 = null;
        python3Target0.genRecognizerHeaderFile(grammar10, sT11, "\"_tsetHi!Context\"");
        java.lang.String[] strArray14 = python3Target0.targetCharValueEscape;
        org.antlr.v4.tool.Grammar grammar15 = null;
        org.stringtemplate.v4.ST sT16 = null;
        // The following exception was thrown during execution in test generation
        try {
            python3Target0.genFile(grammar15, sT16, "_tset\"\"\\\"\\\"\\\"\\\"\\\"\\\"Context\"\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 29 + "'", int3 == 29);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\"\"\"\"\"\"" + "'", str6, "\"\"\"\"\"\"");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\"Hi!Context\"" + "'", str9, "\"Hi!Context\"");
        org.junit.Assert.assertNotNull(strArray14);
    }

    @Test
    public void test1008() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1008");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python3Target1.getBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = null;
        python3Target1.gen = codeGenerator3;
        java.lang.String str6 = python3Target1.getAltLabelContextStructName("hi!");
        org.antlr.v4.tool.Grammar grammar7 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target8 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean9 = python3Target8.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup10 = python3Target8.templates;
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "hi!" };
        python3Target8.targetCharValueEscape = strArray13;
        java.lang.String[] strArray16 = new java.lang.String[] { "hi!" };
        org.antlr.v4.codegen.target.Python3Target.python3Keywords = strArray16;
        python3Target8.targetCharValueEscape = strArray16;
        org.antlr.v4.tool.Grammar grammar19 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target20 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str22 = python3Target20.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator23 = null;
        python3Target20.gen = codeGenerator23;
        org.antlr.v4.tool.Grammar grammar25 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target26 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str28 = python3Target26.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.tool.Grammar grammar29 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target30 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean31 = python3Target30.supportsOverloadedMethods();
        java.lang.String str32 = python3Target30.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator33 = null;
        java.lang.String str36 = python3Target30.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator33, "", true);
        java.lang.String str37 = python3Target30.getVersion();
        org.antlr.v4.tool.Grammar grammar38 = null;
        int[] intArray39 = new int[] {};
        java.lang.String[] strArray40 = python3Target30.getTokenTypesAsTargetLabels(grammar38, intArray39);
        java.lang.String[] strArray41 = python3Target26.getTokenTypesAsTargetLabels(grammar29, intArray39);
        java.lang.String[] strArray42 = python3Target20.getTokenTypesAsTargetLabels(grammar25, intArray39);
        java.lang.String[] strArray43 = python3Target8.getTokenTypesAsTargetLabels(grammar19, intArray39);
        java.lang.String[] strArray44 = python3Target1.getTokenTypesAsTargetLabels(grammar7, intArray39);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str46 = python3Target1.getImplicitTokenLabel("\"\"12\"\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Hi!Context" + "'", str6, "Hi!Context");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(sTGroup10);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "\"\"\"\"\"\"" + "'", str22, "\"\"\"\"\"\"");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "\"\"\"\"\"\"" + "'", str28, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "4.5.2.1" + "'", str32, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "\"\"" + "'", str36, "\"\"");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "4.5.2.1" + "'", str37, "4.5.2.1");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[]");
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertNotNull(strArray44);
    }

    @Test
    public void test1009() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1009");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray1 = python3Target0.targetCharValueEscape;
        java.lang.String str2 = python3Target0.language;
        int int3 = python3Target0.getSerializedATNSegmentLimit();
        java.lang.String str5 = python3Target0.encodeIntAsCharEscape(1);
        java.lang.String str7 = python3Target0.encodeIntAsCharEscape(0);
        org.antlr.v4.tool.ast.GrammarAST grammarAST8 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean9 = python3Target0.visibleGrammarSymbolCausesIssueInGeneratedCode(grammarAST8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 29 + "'", int3 == 29);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "\\1" + "'", str5, "\\1");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "\\0" + "'", str7, "\\0");
    }

    @Test
    public void test1010() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1010");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python3Target1.getBadWords();
        java.lang.String str4 = python3Target1.getAltLabelContextStructName("d");
        org.stringtemplate.v4.STGroup sTGroup5 = python3Target1.getTemplates();
        java.lang.String str6 = python3Target1.language;
        org.stringtemplate.v4.STGroup sTGroup7 = python3Target1.getTemplates();
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = null;
        python3Target1.gen = codeGenerator8;
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "DContext" + "'", str4, "DContext");
        org.junit.Assert.assertNotNull(sTGroup5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Python3" + "'", str6, "Python3");
        org.junit.Assert.assertNotNull(sTGroup7);
    }

    @Test
    public void test1011() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1011");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.lang.String str2 = python3Target1.getVersion();
        int int3 = python3Target1.getSerializedATNSegmentLimit();
        java.lang.String str4 = python3Target1.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator5 = python3Target1.gen;
        org.antlr.v4.tool.Grammar grammar6 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target7 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray8 = python3Target7.targetCharValueEscape;
        org.stringtemplate.v4.STGroup sTGroup9 = python3Target7.templates;
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = null;
        java.lang.String str13 = python3Target7.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator10, "\"\\12\"", false);
        int int14 = python3Target7.getInlineTestSetWordSize();
        org.antlr.v4.codegen.CodeGenerator codeGenerator15 = python3Target7.getCodeGenerator();
        org.antlr.v4.tool.Grammar grammar16 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator17 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target18 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator17);
        java.lang.String str19 = python3Target18.getVersion();
        int int20 = python3Target18.getSerializedATNSegmentLimit();
        java.lang.String str21 = python3Target18.getVersion();
        boolean boolean22 = python3Target18.wantsBaseListener();
        python3Target18.addBadWords();
        org.antlr.v4.tool.Grammar grammar24 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator25 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target26 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator25);
        java.util.Set<java.lang.String> strSet27 = python3Target26.getBadWords();
        org.antlr.v4.codegen.target.Python3Target python3Target28 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str30 = python3Target28.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.codegen.target.Python3Target python3Target31 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean32 = python3Target31.supportsOverloadedMethods();
        java.util.Set<java.lang.String> strSet33 = python3Target31.badWords;
        python3Target28.badWords = strSet33;
        python3Target26.badWords = strSet33;
        java.util.Set<java.lang.String> strSet36 = python3Target26.badWords;
        org.antlr.v4.codegen.CodeGenerator codeGenerator37 = python3Target26.getCodeGenerator();
        org.antlr.v4.tool.Grammar grammar38 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target39 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean40 = python3Target39.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup41 = python3Target39.templates;
        org.antlr.v4.tool.Grammar grammar42 = null;
        org.stringtemplate.v4.ST sT43 = null;
        python3Target39.genRecognizerHeaderFile(grammar42, sT43, "");
        python3Target39.language = "Python3";
        java.util.Set<java.lang.String> strSet48 = null;
        python3Target39.badWords = strSet48;
        org.antlr.v4.codegen.CodeGenerator codeGenerator50 = null;
        java.lang.String str53 = python3Target39.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator50, "\"Hi!Context\"", false);
        java.lang.String str55 = python3Target39.getListLabel("Python3");
        java.lang.String str57 = python3Target39.getTargetStringLiteralFromString("\\0");
        org.antlr.v4.tool.Grammar grammar58 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target59 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str61 = python3Target59.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.tool.Grammar grammar62 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target63 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean64 = python3Target63.supportsOverloadedMethods();
        java.lang.String str65 = python3Target63.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator66 = null;
        java.lang.String str69 = python3Target63.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator66, "", true);
        java.lang.String str70 = python3Target63.getVersion();
        org.antlr.v4.tool.Grammar grammar71 = null;
        int[] intArray72 = new int[] {};
        java.lang.String[] strArray73 = python3Target63.getTokenTypesAsTargetLabels(grammar71, intArray72);
        java.lang.String[] strArray74 = python3Target59.getTokenTypesAsTargetLabels(grammar62, intArray72);
        java.lang.String[] strArray75 = python3Target39.getTokenTypesAsTargetLabels(grammar58, intArray72);
        java.lang.String[] strArray76 = python3Target26.getTokenTypesAsTargetLabels(grammar38, intArray72);
        java.lang.String[] strArray77 = python3Target18.getTokenTypesAsTargetLabels(grammar24, intArray72);
        java.lang.String[] strArray78 = python3Target7.getTokenTypesAsTargetLabels(grammar16, intArray72);
        java.lang.String[] strArray79 = python3Target1.getTokenTypesAsTargetLabels(grammar6, intArray72);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "4.5.2.1" + "'", str2, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 29 + "'", int3 == 29);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "4.5.2.1" + "'", str4, "4.5.2.1");
        org.junit.Assert.assertNull(codeGenerator5);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNull(sTGroup9);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "12" + "'", str13, "12");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 64 + "'", int14 == 64);
        org.junit.Assert.assertNull(codeGenerator15);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "4.5.2.1" + "'", str19, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 29 + "'", int20 == 29);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "4.5.2.1" + "'", str21, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(strSet27);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "\"\"\"\"\"\"" + "'", str30, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(strSet33);
        org.junit.Assert.assertNotNull(strSet36);
        org.junit.Assert.assertNull(codeGenerator37);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNull(sTGroup41);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "Hi!Context" + "'", str53, "Hi!Context");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "Python3" + "'", str55, "Python3");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "\"\\0\"" + "'", str57, "\"\\0\"");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "\"\"\"\"\"\"" + "'", str61, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "4.5.2.1" + "'", str65, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "\"\"" + "'", str69, "\"\"");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "4.5.2.1" + "'", str70, "4.5.2.1");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[]");
        org.junit.Assert.assertNotNull(strArray73);
        org.junit.Assert.assertNotNull(strArray74);
        org.junit.Assert.assertNotNull(strArray75);
        org.junit.Assert.assertNotNull(strArray76);
        org.junit.Assert.assertNotNull(strArray77);
        org.junit.Assert.assertNotNull(strArray78);
        org.junit.Assert.assertNotNull(strArray79);
    }

    @Test
    public void test1012() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1012");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        org.antlr.v4.tool.Grammar grammar3 = null;
        org.stringtemplate.v4.ST sT4 = null;
        python3Target0.genRecognizerHeaderFile(grammar3, sT4, "");
        python3Target0.language = "Python3";
        int int9 = python3Target0.getSerializedATNSegmentLimit();
        java.lang.String str11 = python3Target0.getListLabel("_tsetPython3");
        org.stringtemplate.v4.STGroup sTGroup12 = python3Target0.getTemplates();
        java.lang.String[] strArray13 = python3Target0.targetCharValueEscape;
        org.antlr.v4.tool.ast.GrammarAST grammarAST14 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean15 = python3Target0.grammarSymbolCausesIssueInGeneratedCode(grammarAST14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 29 + "'", int9 == 29);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "_tsetPython3" + "'", str11, "_tsetPython3");
        org.junit.Assert.assertNotNull(sTGroup12);
        org.junit.Assert.assertNotNull(strArray13);
    }

    @Test
    public void test1013() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1013");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        python3Target0.language = "4.5.2.1";
        java.lang.String str4 = python3Target0.encodeIntAsCharEscape(10);
        java.lang.String str6 = python3Target0.getTargetStringLiteralFromString("\"\\\"\\\"hi!\\\"\\\"\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = null;
        python3Target0.gen = codeGenerator7;
        java.lang.String str9 = python3Target0.getVersion();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "\\12" + "'", str4, "\\12");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\"\"\\\"\\\"hi!\\\"\\\"\"\"" + "'", str6, "\"\"\\\"\\\"hi!\\\"\\\"\"\"");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "4.5.2.1" + "'", str9, "4.5.2.1");
    }

    @Test
    public void test1014() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1014");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python3Target1.getBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = null;
        python3Target1.gen = codeGenerator3;
        java.lang.String str6 = python3Target1.getAltLabelContextStructName("hi!");
        java.lang.String str9 = python3Target1.getTargetStringLiteralFromString("\"hi!\"", true);
        boolean boolean10 = python3Target1.wantsBaseListener();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str12 = python3Target1.getElementName("\"\"_tset12\"\"Context");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Hi!Context" + "'", str6, "Hi!Context");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\"\\\"hi!\\\"\"" + "'", str9, "\"\\\"hi!\\\"\"");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test1015() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1015");
        java.lang.String str1 = org.stringtemplate.v4.StringRenderer.escapeHTML("3");
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "3" + "'", str1, "3");
    }

    @Test
    public void test1016() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1016");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str2 = python3Target0.getTargetStringLiteralFromString("\"\"\"\"");
        java.lang.String str4 = python3Target0.getTargetStringLiteralFromString("");
        int int5 = python3Target0.getSerializedATNSegmentLimit();
        org.antlr.v4.codegen.target.Python3Target python3Target6 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray7 = python3Target6.targetCharValueEscape;
        org.stringtemplate.v4.STGroup sTGroup8 = python3Target6.templates;
        int int9 = python3Target6.getInlineTestSetWordSize();
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = python3Target6.gen;
        org.antlr.v4.tool.Grammar grammar11 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target12 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str14 = python3Target12.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.tool.Grammar grammar15 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target16 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean17 = python3Target16.supportsOverloadedMethods();
        java.lang.String str18 = python3Target16.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator19 = null;
        java.lang.String str22 = python3Target16.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator19, "", true);
        java.lang.String str23 = python3Target16.getVersion();
        org.antlr.v4.tool.Grammar grammar24 = null;
        int[] intArray25 = new int[] {};
        java.lang.String[] strArray26 = python3Target16.getTokenTypesAsTargetLabels(grammar24, intArray25);
        java.lang.String[] strArray27 = python3Target12.getTokenTypesAsTargetLabels(grammar15, intArray25);
        java.lang.String[] strArray28 = python3Target6.getTokenTypesAsTargetLabels(grammar11, intArray25);
        python3Target0.targetCharValueEscape = strArray28;
        java.util.Set<java.lang.String> strSet30 = python3Target0.badWords;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str32 = python3Target0.getImplicitRuleLabel("_tset\\\"\\\\\\\"\\\\\\\"hi!\\\\\\\"\\\\\\\"\\\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "\"\"\"\"\"\"" + "'", str2, "\"\"\"\"\"\"");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "\"\"" + "'", str4, "\"\"");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 29 + "'", int5 == 29);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNull(sTGroup8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 64 + "'", int9 == 64);
        org.junit.Assert.assertNull(codeGenerator10);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "\"\"\"\"\"\"" + "'", str14, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "4.5.2.1" + "'", str18, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "\"\"" + "'", str22, "\"\"");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "4.5.2.1" + "'", str23, "4.5.2.1");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[]");
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertNotNull(strSet30);
    }

    @Test
    public void test1017() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1017");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray1 = python3Target0.targetCharValueEscape;
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = null;
        java.lang.String str6 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator3, "\"\\12\"", false);
        java.lang.String str7 = python3Target0.getLanguage();
        boolean boolean8 = python3Target0.supportsOverloadedMethods();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str10 = python3Target0.getElementName("\"\"12\"\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "12" + "'", str6, "12");
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test1018() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1018");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        org.antlr.v4.tool.Grammar grammar3 = null;
        org.stringtemplate.v4.ST sT4 = null;
        python3Target0.genRecognizerHeaderFile(grammar3, sT4, "");
        python3Target0.language = "Python3";
        java.util.Set<java.lang.String> strSet9 = null;
        python3Target0.badWords = strSet9;
        boolean boolean11 = python3Target0.wantsBaseVisitor();
        java.lang.String str13 = python3Target0.getImplicitSetLabel("Python3");
        java.lang.String str16 = python3Target0.getTargetStringLiteralFromString("\"\"hi!\"\"", true);
        int int17 = python3Target0.getInlineTestSetWordSize();
        org.antlr.v4.codegen.CodeGenerator codeGenerator18 = python3Target0.gen;
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "_tsetPython3" + "'", str13, "_tsetPython3");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "\"\"\"hi!\"\"\"" + "'", str16, "\"\"\"hi!\"\"\"");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 64 + "'", int17 == 64);
        org.junit.Assert.assertNull(codeGenerator18);
    }

    @Test
    public void test1019() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1019");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str2 = python3Target0.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = null;
        python3Target0.gen = codeGenerator3;
        java.lang.String str5 = python3Target0.getVersion();
        org.antlr.v4.codegen.target.Python3Target python3Target6 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean7 = python3Target6.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup8 = python3Target6.templates;
        org.antlr.v4.tool.Grammar grammar9 = null;
        org.stringtemplate.v4.ST sT10 = null;
        python3Target6.genRecognizerHeaderFile(grammar9, sT10, "");
        python3Target6.language = "Python3";
        int int15 = python3Target6.getSerializedATNSegmentLimit();
        org.stringtemplate.v4.STGroup sTGroup16 = python3Target6.loadTemplates();
        python3Target0.templates = sTGroup16;
        java.util.Set<java.lang.String> strSet18 = python3Target0.getBadWords();
        boolean boolean19 = python3Target0.supportsOverloadedMethods();
        org.antlr.v4.tool.ast.GrammarAST grammarAST20 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str21 = python3Target0.getLoopLabel(grammarAST20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "\"\"\"\"\"\"" + "'", str2, "\"\"\"\"\"\"");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "4.5.2.1" + "'", str5, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(sTGroup8);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 29 + "'", int15 == 29);
        org.junit.Assert.assertNotNull(sTGroup16);
        org.junit.Assert.assertNotNull(strSet18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    }

    @Test
    public void test1020() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1020");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str2 = python3Target0.getTargetStringLiteralFromString("\"\"\"\"");
        java.lang.String str4 = python3Target0.getTargetStringLiteralFromString("");
        int int5 = python3Target0.getSerializedATNSegmentLimit();
        boolean boolean6 = python3Target0.templatesExist();
        java.lang.String str7 = python3Target0.getLanguage();
        java.lang.String str8 = python3Target0.language;
        java.lang.Class<?> wildcardClass9 = python3Target0.getClass();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "\"\"\"\"\"\"" + "'", str2, "\"\"\"\"\"\"");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "\"\"" + "'", str4, "\"\"");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 29 + "'", int5 == 29);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test1021() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1021");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python3Target1.getBadWords();
        java.lang.String str4 = python3Target1.getAltLabelContextStructName("d");
        org.stringtemplate.v4.STGroup sTGroup5 = python3Target1.getTemplates();
        java.lang.String str6 = python3Target1.language;
        org.antlr.v4.tool.Grammar grammar7 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target9 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator8);
        java.util.Set<java.lang.String> strSet10 = python3Target9.getBadWords();
        org.antlr.v4.codegen.target.Python3Target python3Target11 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str13 = python3Target11.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.codegen.target.Python3Target python3Target14 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean15 = python3Target14.supportsOverloadedMethods();
        java.util.Set<java.lang.String> strSet16 = python3Target14.badWords;
        python3Target11.badWords = strSet16;
        python3Target9.badWords = strSet16;
        java.util.Set<java.lang.String> strSet19 = python3Target9.badWords;
        java.lang.String str21 = python3Target9.getAltLabelContextStructName("d");
        org.antlr.v4.tool.Grammar grammar22 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target23 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean24 = python3Target23.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup25 = python3Target23.templates;
        org.antlr.v4.tool.Grammar grammar26 = null;
        org.stringtemplate.v4.ST sT27 = null;
        python3Target23.genRecognizerHeaderFile(grammar26, sT27, "");
        boolean boolean30 = python3Target23.supportsOverloadedMethods();
        python3Target23.language = "\"\\12\"";
        org.antlr.v4.tool.Grammar grammar33 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator34 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target35 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator34);
        java.util.Set<java.lang.String> strSet36 = python3Target35.getBadWords();
        java.lang.String str38 = python3Target35.getAltLabelContextStructName("d");
        java.lang.String str40 = python3Target35.getTargetStringLiteralFromString("\"\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator41 = python3Target35.getCodeGenerator();
        org.antlr.v4.tool.Grammar grammar42 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator43 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target44 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator43);
        java.util.Set<java.lang.String> strSet45 = python3Target44.getBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator46 = null;
        python3Target44.gen = codeGenerator46;
        java.lang.String str49 = python3Target44.getAltLabelContextStructName("hi!");
        java.lang.String str52 = python3Target44.getTargetStringLiteralFromString("\"hi!\"", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator53 = null;
        python3Target44.gen = codeGenerator53;
        org.antlr.v4.tool.Grammar grammar55 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target56 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray57 = python3Target56.targetCharValueEscape;
        org.stringtemplate.v4.STGroup sTGroup58 = python3Target56.templates;
        int int59 = python3Target56.getInlineTestSetWordSize();
        org.antlr.v4.codegen.CodeGenerator codeGenerator60 = python3Target56.gen;
        org.antlr.v4.tool.Grammar grammar61 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target62 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str64 = python3Target62.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.tool.Grammar grammar65 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target66 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean67 = python3Target66.supportsOverloadedMethods();
        java.lang.String str68 = python3Target66.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator69 = null;
        java.lang.String str72 = python3Target66.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator69, "", true);
        java.lang.String str73 = python3Target66.getVersion();
        org.antlr.v4.tool.Grammar grammar74 = null;
        int[] intArray75 = new int[] {};
        java.lang.String[] strArray76 = python3Target66.getTokenTypesAsTargetLabels(grammar74, intArray75);
        java.lang.String[] strArray77 = python3Target62.getTokenTypesAsTargetLabels(grammar65, intArray75);
        java.lang.String[] strArray78 = python3Target56.getTokenTypesAsTargetLabels(grammar61, intArray75);
        java.lang.String[] strArray79 = python3Target44.getTokenTypesAsTargetLabels(grammar55, intArray75);
        java.lang.String[] strArray80 = python3Target35.getTokenTypesAsTargetLabels(grammar42, intArray75);
        java.lang.String[] strArray81 = python3Target23.getTokenTypesAsTargetLabels(grammar33, intArray75);
        java.lang.String[] strArray82 = python3Target9.getTokenTypesAsTargetLabels(grammar22, intArray75);
        java.lang.String[] strArray83 = python3Target1.getTokenTypesAsTargetLabels(grammar7, intArray75);
        org.antlr.v4.tool.ast.GrammarAST grammarAST84 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean85 = python3Target1.visibleGrammarSymbolCausesIssueInGeneratedCode(grammarAST84);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "DContext" + "'", str4, "DContext");
        org.junit.Assert.assertNotNull(sTGroup5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Python3" + "'", str6, "Python3");
        org.junit.Assert.assertNotNull(strSet10);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "\"\"\"\"\"\"" + "'", str13, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertNotNull(strSet19);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "DContext" + "'", str21, "DContext");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNull(sTGroup25);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(strSet36);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "DContext" + "'", str38, "DContext");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "\"\\\"\\\"\"" + "'", str40, "\"\\\"\\\"\"");
        org.junit.Assert.assertNull(codeGenerator41);
        org.junit.Assert.assertNotNull(strSet45);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "Hi!Context" + "'", str49, "Hi!Context");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "\"\\\"hi!\\\"\"" + "'", str52, "\"\\\"hi!\\\"\"");
        org.junit.Assert.assertNotNull(strArray57);
        org.junit.Assert.assertNull(sTGroup58);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 64 + "'", int59 == 64);
        org.junit.Assert.assertNull(codeGenerator60);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "\"\"\"\"\"\"" + "'", str64, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "4.5.2.1" + "'", str68, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "\"\"" + "'", str72, "\"\"");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "4.5.2.1" + "'", str73, "4.5.2.1");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[]");
        org.junit.Assert.assertNotNull(strArray76);
        org.junit.Assert.assertNotNull(strArray77);
        org.junit.Assert.assertNotNull(strArray78);
        org.junit.Assert.assertNotNull(strArray79);
        org.junit.Assert.assertNotNull(strArray80);
        org.junit.Assert.assertNotNull(strArray81);
        org.junit.Assert.assertNotNull(strArray82);
        org.junit.Assert.assertNotNull(strArray83);
    }

    @Test
    public void test1022() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1022");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.antlr.v4.tool.Grammar grammar2 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target4 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator3);
        java.util.Set<java.lang.String> strSet5 = python3Target4.getBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = null;
        python3Target4.gen = codeGenerator6;
        java.lang.String str9 = python3Target4.getAltLabelContextStructName("hi!");
        java.lang.String str12 = python3Target4.getTargetStringLiteralFromString("\"hi!\"", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator13 = null;
        python3Target4.gen = codeGenerator13;
        org.antlr.v4.tool.Grammar grammar15 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target16 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray17 = python3Target16.targetCharValueEscape;
        org.stringtemplate.v4.STGroup sTGroup18 = python3Target16.templates;
        int int19 = python3Target16.getInlineTestSetWordSize();
        org.antlr.v4.codegen.CodeGenerator codeGenerator20 = python3Target16.gen;
        org.antlr.v4.tool.Grammar grammar21 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target22 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str24 = python3Target22.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.tool.Grammar grammar25 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target26 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean27 = python3Target26.supportsOverloadedMethods();
        java.lang.String str28 = python3Target26.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator29 = null;
        java.lang.String str32 = python3Target26.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator29, "", true);
        java.lang.String str33 = python3Target26.getVersion();
        org.antlr.v4.tool.Grammar grammar34 = null;
        int[] intArray35 = new int[] {};
        java.lang.String[] strArray36 = python3Target26.getTokenTypesAsTargetLabels(grammar34, intArray35);
        java.lang.String[] strArray37 = python3Target22.getTokenTypesAsTargetLabels(grammar25, intArray35);
        java.lang.String[] strArray38 = python3Target16.getTokenTypesAsTargetLabels(grammar21, intArray35);
        java.lang.String[] strArray39 = python3Target4.getTokenTypesAsTargetLabels(grammar15, intArray35);
        java.lang.String[] strArray40 = python3Target0.getTokenTypesAsTargetLabels(grammar2, intArray35);
        org.antlr.v4.codegen.CodeGenerator codeGenerator41 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target42 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator41);
        java.lang.String str44 = python3Target42.getTargetStringLiteralFromString("");
        int int45 = python3Target42.getSerializedATNSegmentLimit();
        boolean boolean46 = python3Target42.wantsBaseVisitor();
        org.stringtemplate.v4.STGroup sTGroup47 = python3Target42.templates;
        org.stringtemplate.v4.STGroup sTGroup48 = python3Target42.loadTemplates();
        python3Target0.templates = sTGroup48;
        boolean boolean50 = python3Target0.supportsOverloadedMethods();
        org.antlr.v4.codegen.CodeGenerator codeGenerator51 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target52 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator51);
        java.util.Set<java.lang.String> strSet53 = python3Target52.getBadWords();
        org.antlr.v4.codegen.target.Python3Target python3Target54 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str56 = python3Target54.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.codegen.target.Python3Target python3Target57 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean58 = python3Target57.supportsOverloadedMethods();
        java.util.Set<java.lang.String> strSet59 = python3Target57.badWords;
        python3Target54.badWords = strSet59;
        python3Target52.badWords = strSet59;
        java.util.Set<java.lang.String> strSet62 = python3Target52.badWords;
        java.lang.String str63 = python3Target52.language;
        java.util.Set<java.lang.String> strSet64 = python3Target52.badWords;
        java.lang.String str66 = python3Target52.getListLabel("\"\\\"\\\\\\\"Python3\\\\\\\"\\\"\"");
        org.antlr.v4.codegen.target.Python3Target python3Target67 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean68 = python3Target67.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup69 = python3Target67.templates;
        java.lang.String[] strArray72 = new java.lang.String[] { "hi!", "hi!" };
        python3Target67.targetCharValueEscape = strArray72;
        org.antlr.v4.codegen.CodeGenerator codeGenerator74 = null;
        java.lang.String str77 = python3Target67.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator74, "", false);
        boolean boolean78 = python3Target67.wantsBaseListener();
        org.antlr.v4.codegen.CodeGenerator codeGenerator79 = python3Target67.gen;
        org.antlr.v4.codegen.target.Python3Target python3Target80 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray81 = python3Target80.targetCharValueEscape;
        java.lang.String str82 = python3Target80.language;
        int int83 = python3Target80.getSerializedATNSegmentLimit();
        org.antlr.v4.codegen.CodeGenerator codeGenerator84 = null;
        python3Target80.gen = codeGenerator84;
        org.antlr.v4.codegen.CodeGenerator codeGenerator86 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target87 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator86);
        java.util.Set<java.lang.String> strSet88 = python3Target87.getBadWords();
        java.lang.String str90 = python3Target87.getAltLabelContextStructName("d");
        org.stringtemplate.v4.STGroup sTGroup91 = python3Target87.getTemplates();
        python3Target80.templates = sTGroup91;
        python3Target67.templates = sTGroup91;
        python3Target52.templates = sTGroup91;
        python3Target0.templates = sTGroup91;
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Hi!Context" + "'", str9, "Hi!Context");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "\"\\\"hi!\\\"\"" + "'", str12, "\"\\\"hi!\\\"\"");
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertNull(sTGroup18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 64 + "'", int19 == 64);
        org.junit.Assert.assertNull(codeGenerator20);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "\"\"\"\"\"\"" + "'", str24, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "4.5.2.1" + "'", str28, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "\"\"" + "'", str32, "\"\"");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "4.5.2.1" + "'", str33, "4.5.2.1");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[]");
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "\"\"" + "'", str44, "\"\"");
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 29 + "'", int45 == 29);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNull(sTGroup47);
        org.junit.Assert.assertNotNull(sTGroup48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(strSet53);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "\"\"\"\"\"\"" + "'", str56, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(strSet59);
        org.junit.Assert.assertNotNull(strSet62);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "Python3" + "'", str63, "Python3");
        org.junit.Assert.assertNotNull(strSet64);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "\"\\\"\\\\\\\"Python3\\\\\\\"\\\"\"" + "'", str66, "\"\\\"\\\\\\\"Python3\\\\\\\"\\\"\"");
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNull(sTGroup69);
        org.junit.Assert.assertNotNull(strArray72);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "" + "'", str77, "");
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNull(codeGenerator79);
        org.junit.Assert.assertNotNull(strArray81);
        org.junit.Assert.assertNull(str82);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 29 + "'", int83 == 29);
        org.junit.Assert.assertNotNull(strSet88);
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "DContext" + "'", str90, "DContext");
        org.junit.Assert.assertNotNull(sTGroup91);
    }

    @Test
    public void test1023() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1023");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        java.lang.String str2 = python3Target0.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = null;
        java.lang.String str6 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator3, "", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = null;
        python3Target0.gen = codeGenerator7;
        java.lang.String[] strArray16 = new java.lang.String[] { "\"\"\"\"", "\\12", "\"\"", "4.5.2.1", "", "\"\"\"\"", "\"\"" };
        java.util.LinkedHashSet<java.lang.String> strSet17 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet17, strArray16);
        python3Target0.badWords = strSet17;
        org.antlr.v4.codegen.CodeGenerator codeGenerator20 = python3Target0.gen;
        java.lang.String str21 = python3Target0.getVersion();
        int int22 = python3Target0.getSerializedATNSegmentLimit();
        java.lang.String str23 = python3Target0.getLanguage();
        boolean boolean24 = python3Target0.wantsBaseListener();
        boolean boolean25 = python3Target0.wantsBaseVisitor();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "4.5.2.1" + "'", str2, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\"\"" + "'", str6, "\"\"");
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNull(codeGenerator20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "4.5.2.1" + "'", str21, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 29 + "'", int22 == 29);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
    }

    @Test
    public void test1024() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1024");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        org.antlr.v4.codegen.CodeGenerator codeGenerator1 = python3Target0.getCodeGenerator();
        org.antlr.v4.codegen.CodeGenerator codeGenerator2 = python3Target0.gen;
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = python3Target0.getCodeGenerator();
        boolean boolean4 = python3Target0.wantsBaseVisitor();
        org.antlr.v4.tool.ast.GrammarAST grammarAST5 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str6 = python3Target0.getLoopLabel(grammarAST5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(codeGenerator1);
        org.junit.Assert.assertNull(codeGenerator2);
        org.junit.Assert.assertNull(codeGenerator3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    }

    @Test
    public void test1025() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1025");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        python3Target0.language = "4.5.2.1";
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = python3Target0.getCodeGenerator();
        org.antlr.v4.codegen.CodeGenerator codeGenerator4 = python3Target0.gen;
        org.antlr.v4.codegen.CodeGenerator codeGenerator5 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target6 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator5);
        java.lang.String str8 = python3Target6.getTargetStringLiteralFromString("");
        int int9 = python3Target6.getSerializedATNSegmentLimit();
        boolean boolean10 = python3Target6.wantsBaseVisitor();
        org.stringtemplate.v4.STGroup sTGroup11 = python3Target6.loadTemplates();
        python3Target0.templates = sTGroup11;
        java.lang.String str13 = python3Target0.language;
        org.antlr.v4.codegen.target.Python3Target python3Target14 = new org.antlr.v4.codegen.target.Python3Target();
        python3Target14.language = "";
        org.antlr.v4.codegen.target.Python3Target python3Target17 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean18 = python3Target17.supportsOverloadedMethods();
        java.lang.String str19 = python3Target17.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator20 = null;
        java.lang.String str23 = python3Target17.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator20, "", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator24 = null;
        python3Target17.gen = codeGenerator24;
        java.lang.String[] strArray33 = new java.lang.String[] { "\"\"\"\"", "\\12", "\"\"", "4.5.2.1", "", "\"\"\"\"", "\"\"" };
        java.util.LinkedHashSet<java.lang.String> strSet34 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet34, strArray33);
        python3Target17.badWords = strSet34;
        python3Target14.badWords = strSet34;
        python3Target14.addBadWords();
        java.util.Set<java.lang.String> strSet39 = python3Target14.badWords;
        python3Target0.badWords = strSet39;
        int int41 = python3Target0.getSerializedATNSegmentLimit();
        java.lang.String str42 = python3Target0.language;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str44 = python3Target0.getElementName("_tset_12");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(codeGenerator3);
        org.junit.Assert.assertNull(codeGenerator4);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\"\"" + "'", str8, "\"\"");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 29 + "'", int9 == 29);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(sTGroup11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "4.5.2.1" + "'", str13, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "4.5.2.1" + "'", str19, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "\"\"" + "'", str23, "\"\"");
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(strSet39);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 29 + "'", int41 == 29);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "4.5.2.1" + "'", str42, "4.5.2.1");
    }

    @Test
    public void test1026() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1026");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        java.lang.String str2 = python3Target0.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = python3Target0.getCodeGenerator();
        org.stringtemplate.v4.STGroup sTGroup4 = null;
        python3Target0.templates = sTGroup4;
        org.stringtemplate.v4.STGroup sTGroup6 = python3Target0.templates;
        java.lang.String[] strArray7 = python3Target0.targetCharValueEscape;
        java.util.Set<java.lang.String> strSet8 = python3Target0.badWords;
        java.util.Set<java.lang.String> strSet9 = python3Target0.getBadWords();
        python3Target0.addBadWords();
        org.antlr.v4.tool.ast.GrammarAST grammarAST11 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str12 = python3Target0.getLoopCounter(grammarAST11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "4.5.2.1" + "'", str2, "4.5.2.1");
        org.junit.Assert.assertNull(codeGenerator3);
        org.junit.Assert.assertNull(sTGroup6);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertNotNull(strSet9);
    }

    @Test
    public void test1027() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1027");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python3Target1.getBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = null;
        python3Target1.gen = codeGenerator3;
        java.lang.String str6 = python3Target1.getAltLabelContextStructName("hi!");
        java.lang.String str9 = python3Target1.getTargetStringLiteralFromString("\"hi!\"", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = null;
        python3Target1.gen = codeGenerator10;
        org.antlr.v4.tool.Grammar grammar12 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target13 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray14 = python3Target13.targetCharValueEscape;
        org.stringtemplate.v4.STGroup sTGroup15 = python3Target13.templates;
        int int16 = python3Target13.getInlineTestSetWordSize();
        org.antlr.v4.codegen.CodeGenerator codeGenerator17 = python3Target13.gen;
        org.antlr.v4.tool.Grammar grammar18 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target19 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str21 = python3Target19.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.tool.Grammar grammar22 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target23 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean24 = python3Target23.supportsOverloadedMethods();
        java.lang.String str25 = python3Target23.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator26 = null;
        java.lang.String str29 = python3Target23.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator26, "", true);
        java.lang.String str30 = python3Target23.getVersion();
        org.antlr.v4.tool.Grammar grammar31 = null;
        int[] intArray32 = new int[] {};
        java.lang.String[] strArray33 = python3Target23.getTokenTypesAsTargetLabels(grammar31, intArray32);
        java.lang.String[] strArray34 = python3Target19.getTokenTypesAsTargetLabels(grammar22, intArray32);
        java.lang.String[] strArray35 = python3Target13.getTokenTypesAsTargetLabels(grammar18, intArray32);
        java.lang.String[] strArray36 = python3Target1.getTokenTypesAsTargetLabels(grammar12, intArray32);
        java.lang.String[] strArray37 = python3Target1.targetCharValueEscape;
        java.lang.String str39 = python3Target1.getImplicitRuleLabel("#");
        org.antlr.v4.codegen.CodeGenerator codeGenerator40 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target41 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator40);
        java.lang.String str43 = python3Target41.getTargetStringLiteralFromString("");
        org.antlr.v4.codegen.CodeGenerator codeGenerator44 = python3Target41.gen;
        org.stringtemplate.v4.STGroup sTGroup45 = python3Target41.templates;
        org.stringtemplate.v4.STGroup sTGroup46 = python3Target41.loadTemplates();
        python3Target1.templates = sTGroup46;
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Hi!Context" + "'", str6, "Hi!Context");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\"\\\"hi!\\\"\"" + "'", str9, "\"\\\"hi!\\\"\"");
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertNull(sTGroup15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 64 + "'", int16 == 64);
        org.junit.Assert.assertNull(codeGenerator17);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "\"\"\"\"\"\"" + "'", str21, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "4.5.2.1" + "'", str25, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "\"\"" + "'", str29, "\"\"");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "4.5.2.1" + "'", str30, "4.5.2.1");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[]");
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "_#" + "'", str39, "_#");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "\"\"" + "'", str43, "\"\"");
        org.junit.Assert.assertNull(codeGenerator44);
        org.junit.Assert.assertNull(sTGroup45);
        org.junit.Assert.assertNotNull(sTGroup46);
    }

    @Test
    public void test1028() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1028");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray1 = python3Target0.targetCharValueEscape;
        java.lang.String str2 = python3Target0.language;
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = null;
        python3Target0.gen = codeGenerator3;
        java.lang.String[] strArray5 = python3Target0.targetCharValueEscape;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str7 = python3Target0.getElementListName("\\\"\\\"\\\"\\\"\\\"\\\"Context");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNotNull(strArray5);
    }

    @Test
    public void test1029() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1029");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray1 = python3Target0.targetCharValueEscape;
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = null;
        java.lang.String str6 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator3, "\"\\12\"", false);
        java.lang.String str7 = python3Target0.getLanguage();
        org.antlr.v4.tool.ast.GrammarAST grammarAST8 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str9 = python3Target0.getLoopCounter(grammarAST8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "12" + "'", str6, "12");
        org.junit.Assert.assertNull(str7);
    }

    @Test
    public void test1030() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1030");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python3Target1.getBadWords();
        org.antlr.v4.codegen.target.Python3Target python3Target3 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str5 = python3Target3.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.codegen.target.Python3Target python3Target6 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean7 = python3Target6.supportsOverloadedMethods();
        java.util.Set<java.lang.String> strSet8 = python3Target6.badWords;
        python3Target3.badWords = strSet8;
        python3Target1.badWords = strSet8;
        java.util.Set<java.lang.String> strSet11 = python3Target1.badWords;
        java.lang.String str12 = python3Target1.language;
        org.stringtemplate.v4.STGroup sTGroup13 = python3Target1.getTemplates();
        boolean boolean14 = python3Target1.wantsBaseVisitor();
        org.antlr.v4.codegen.CodeGenerator codeGenerator15 = python3Target1.gen;
        org.stringtemplate.v4.STGroup sTGroup16 = python3Target1.templates;
        boolean boolean17 = python3Target1.templatesExist();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str19 = python3Target1.getImplicitTokenLabel("\"12\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "\"\"\"\"\"\"" + "'", str5, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertNotNull(strSet11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Python3" + "'", str12, "Python3");
        org.junit.Assert.assertNotNull(sTGroup13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(codeGenerator15);
        org.junit.Assert.assertNotNull(sTGroup16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
    }

    @Test
    public void test1031() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1031");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        org.antlr.v4.tool.Grammar grammar3 = null;
        org.stringtemplate.v4.ST sT4 = null;
        python3Target0.genRecognizerHeaderFile(grammar3, sT4, "");
        python3Target0.language = "Python3";
        java.util.Set<java.lang.String> strSet9 = null;
        python3Target0.badWords = strSet9;
        org.antlr.v4.codegen.CodeGenerator codeGenerator11 = null;
        java.lang.String str14 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator11, "\"Hi!Context\"", false);
        java.lang.String str16 = python3Target0.getListLabel("Python3");
        org.antlr.v4.codegen.CodeGenerator codeGenerator17 = python3Target0.getCodeGenerator();
        org.antlr.v4.codegen.target.Python3Target python3Target18 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean19 = python3Target18.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup20 = python3Target18.templates;
        org.antlr.v4.tool.Grammar grammar21 = null;
        org.stringtemplate.v4.ST sT22 = null;
        python3Target18.genRecognizerHeaderFile(grammar21, sT22, "");
        python3Target18.language = "Python3";
        java.util.Set<java.lang.String> strSet27 = null;
        python3Target18.badWords = strSet27;
        org.antlr.v4.codegen.CodeGenerator codeGenerator29 = null;
        java.lang.String str32 = python3Target18.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator29, "\"Hi!Context\"", false);
        java.lang.String str34 = python3Target18.getListLabel("Python3");
        java.lang.String str36 = python3Target18.getTargetStringLiteralFromString("\\0");
        org.antlr.v4.tool.Grammar grammar37 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target38 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str40 = python3Target38.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.tool.Grammar grammar41 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target42 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean43 = python3Target42.supportsOverloadedMethods();
        java.lang.String str44 = python3Target42.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator45 = null;
        java.lang.String str48 = python3Target42.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator45, "", true);
        java.lang.String str49 = python3Target42.getVersion();
        org.antlr.v4.tool.Grammar grammar50 = null;
        int[] intArray51 = new int[] {};
        java.lang.String[] strArray52 = python3Target42.getTokenTypesAsTargetLabels(grammar50, intArray51);
        java.lang.String[] strArray53 = python3Target38.getTokenTypesAsTargetLabels(grammar41, intArray51);
        java.lang.String[] strArray54 = python3Target18.getTokenTypesAsTargetLabels(grammar37, intArray51);
        org.stringtemplate.v4.STGroup sTGroup55 = python3Target18.getTemplates();
        python3Target18.language = "\"\"4.5.2.1\"\"";
        org.stringtemplate.v4.STGroup sTGroup58 = python3Target18.getTemplates();
        python3Target0.templates = sTGroup58;
        org.stringtemplate.v4.STGroup sTGroup60 = python3Target0.loadTemplates();
        org.antlr.v4.tool.Rule rule61 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str62 = python3Target0.getRuleFunctionContextStructName(rule61);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Hi!Context" + "'", str14, "Hi!Context");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Python3" + "'", str16, "Python3");
        org.junit.Assert.assertNull(codeGenerator17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(sTGroup20);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "Hi!Context" + "'", str32, "Hi!Context");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "Python3" + "'", str34, "Python3");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "\"\\0\"" + "'", str36, "\"\\0\"");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "\"\"\"\"\"\"" + "'", str40, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "4.5.2.1" + "'", str44, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "\"\"" + "'", str48, "\"\"");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "4.5.2.1" + "'", str49, "4.5.2.1");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[]");
        org.junit.Assert.assertNotNull(strArray52);
        org.junit.Assert.assertNotNull(strArray53);
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertNotNull(sTGroup55);
        org.junit.Assert.assertNotNull(sTGroup58);
        org.junit.Assert.assertNotNull(sTGroup60);
    }

    @Test
    public void test1032() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1032");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.lang.String str3 = python3Target1.getTargetStringLiteralFromString("");
        int int4 = python3Target1.getSerializedATNSegmentLimit();
        java.lang.String str5 = python3Target1.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup6 = python3Target1.loadTemplates();
        org.stringtemplate.v4.STGroup sTGroup7 = python3Target1.getTemplates();
        java.lang.String str9 = python3Target1.getAltLabelContextStructName("\"\"DContext\"\"");
        java.lang.String str11 = python3Target1.getListLabel("\"\\\"\\\"\\\\0\\\"\\\"\"Context");
        org.antlr.v4.tool.ast.GrammarAST grammarAST12 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str13 = python3Target1.getLoopCounter(grammarAST12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "\"\"" + "'", str3, "\"\"");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 29 + "'", int4 == 29);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Python3" + "'", str5, "Python3");
        org.junit.Assert.assertNotNull(sTGroup6);
        org.junit.Assert.assertNotNull(sTGroup7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\"\"DContext\"\"Context" + "'", str9, "\"\"DContext\"\"Context");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "\"\\\"\\\"\\\\0\\\"\\\"\"Context" + "'", str11, "\"\\\"\\\"\\\\0\\\"\\\"\"Context");
    }

    @Test
    public void test1033() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1033");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        org.antlr.v4.tool.Grammar grammar3 = null;
        org.stringtemplate.v4.ST sT4 = null;
        python3Target0.genRecognizerHeaderFile(grammar3, sT4, "");
        python3Target0.language = "Python3";
        java.util.Set<java.lang.String> strSet9 = null;
        python3Target0.badWords = strSet9;
        boolean boolean11 = python3Target0.wantsBaseVisitor();
        java.lang.String str13 = python3Target0.getImplicitSetLabel("Python3");
        org.antlr.v4.tool.ast.GrammarAST grammarAST14 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str15 = python3Target0.getLoopCounter(grammarAST14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "_tsetPython3" + "'", str13, "_tsetPython3");
    }

    @Test
    public void test1034() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1034");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.lang.String str3 = python3Target1.getTargetStringLiteralFromString("");
        int int4 = python3Target1.getSerializedATNSegmentLimit();
        boolean boolean5 = python3Target1.wantsBaseListener();
        python3Target1.addBadWords();
        org.antlr.v4.tool.ast.GrammarAST grammarAST7 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str8 = python3Target1.getLoopCounter(grammarAST7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "\"\"" + "'", str3, "\"\"");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 29 + "'", int4 == 29);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
    }

    @Test
    public void test1035() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1035");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.lang.String str2 = python3Target1.getVersion();
        int int3 = python3Target1.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet4 = python3Target1.badWords;
        java.util.Set<java.lang.String> strSet5 = python3Target1.getBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = python3Target1.getCodeGenerator();
        java.lang.String str8 = python3Target1.getListLabel("_tset_tset_12");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "4.5.2.1" + "'", str2, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 64 + "'", int3 == 64);
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNull(codeGenerator6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "_tset_tset_12" + "'", str8, "_tset_tset_12");
    }

    @Test
    public void test1036() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1036");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        java.lang.String str2 = python3Target0.getVersion();
        boolean boolean3 = python3Target0.supportsOverloadedMethods();
        org.antlr.v4.codegen.CodeGenerator codeGenerator4 = null;
        java.lang.String str7 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator4, "", false);
        java.lang.String str10 = python3Target0.getTargetStringLiteralFromString("\"DContext\"", true);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str12 = python3Target0.getImplicitRuleLabel("hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "4.5.2.1" + "'", str2, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\"\"DContext\"\"" + "'", str10, "\"\"DContext\"\"");
    }

    @Test
    public void test1037() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1037");
        org.antlr.v4.codegen.target.Python3Target.PythonStringRenderer pythonStringRenderer0 = new org.antlr.v4.codegen.target.Python3Target.PythonStringRenderer();
        java.lang.Object obj1 = null;
        java.util.Locale locale3 = null;
        java.lang.String str4 = pythonStringRenderer0.toString(obj1, "\"\"\"\"\"\"", locale3);
        org.antlr.v4.codegen.target.Python3Target python3Target5 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray6 = python3Target5.targetCharValueEscape;
        org.stringtemplate.v4.STGroup sTGroup7 = python3Target5.templates;
        java.util.Locale locale9 = null;
        java.lang.String str10 = pythonStringRenderer0.toString((java.lang.Object) sTGroup7, "\"Hi!Context\"", locale9);
        java.util.Locale locale13 = null;
        java.lang.String str14 = pythonStringRenderer0.toString((java.lang.Object) "\"DContext\"", "", locale13);
        java.lang.Object obj15 = null;
        java.util.Locale locale17 = null;
        java.lang.String str18 = pythonStringRenderer0.toString(obj15, "\"\\\"hi!\\\"\"", locale17);
        java.util.Locale locale21 = null;
        java.lang.String str22 = pythonStringRenderer0.toString((java.lang.Object) "\"\"\"\"\"\"\"\"Context", "\"1\"", locale21);
        org.antlr.v4.codegen.target.Python3Target python3Target23 = new org.antlr.v4.codegen.target.Python3Target();
        python3Target23.language = "";
        org.antlr.v4.codegen.target.Python3Target python3Target26 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean27 = python3Target26.supportsOverloadedMethods();
        java.lang.String str28 = python3Target26.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator29 = null;
        java.lang.String str32 = python3Target26.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator29, "", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator33 = null;
        python3Target26.gen = codeGenerator33;
        java.lang.String[] strArray42 = new java.lang.String[] { "\"\"\"\"", "\\12", "\"\"", "4.5.2.1", "", "\"\"\"\"", "\"\"" };
        java.util.LinkedHashSet<java.lang.String> strSet43 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet43, strArray42);
        python3Target26.badWords = strSet43;
        python3Target23.badWords = strSet43;
        java.lang.String str48 = python3Target23.encodeIntAsCharEscape((int) (byte) 100);
        java.lang.String str49 = python3Target23.getLanguage();
        java.lang.String[] strArray50 = new java.lang.String[] {};
        python3Target23.targetCharValueEscape = strArray50;
        java.lang.String str54 = python3Target23.getTargetStringLiteralFromString("", true);
        java.util.Locale locale56 = null;
        java.lang.String str57 = pythonStringRenderer0.toString((java.lang.Object) str54, "\"\\\"\\\"\\\"\\\\\\\"\\\\\\\"hi!\\\\\\\"\\\\\\\"\\\"\\\"\\\"\"", locale56);
        org.antlr.v4.codegen.CodeGenerator codeGenerator58 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target59 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator58);
        java.util.Set<java.lang.String> strSet60 = python3Target59.getBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator61 = null;
        python3Target59.gen = codeGenerator61;
        java.lang.String str64 = python3Target59.getAltLabelContextStructName("hi!");
        boolean boolean65 = python3Target59.supportsOverloadedMethods();
        java.lang.String[] strArray66 = python3Target59.targetCharValueEscape;
        java.lang.String str67 = python3Target59.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator68 = null;
        java.lang.String str71 = python3Target59.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator68, "", true);
        java.util.Locale locale73 = null;
        java.lang.String str74 = pythonStringRenderer0.toString((java.lang.Object) codeGenerator68, "\"\\\"\\\"4.5.2.1\\\"\\\"\"", locale73);
        org.antlr.v4.codegen.CodeGenerator codeGenerator75 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target76 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator75);
        java.util.Set<java.lang.String> strSet77 = python3Target76.getBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator78 = null;
        python3Target76.gen = codeGenerator78;
        java.lang.String str81 = python3Target76.getAltLabelContextStructName("hi!");
        java.lang.String str83 = python3Target76.encodeIntAsCharEscape((int) (byte) 10);
        java.util.Locale locale85 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str86 = pythonStringRenderer0.toString((java.lang.Object) python3Target76, "\"\\\"\\\"\\\\0\\\"\\\"\"Context", locale85);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: org.antlr.v4.codegen.target.Python3Target cannot be cast to java.lang.String");
        } catch (java.lang.ClassCastException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "\"\"\"\"\"\"" + "'", str4, "\"\"\"\"\"\"");
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertNull(sTGroup7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\"Hi!Context\"" + "'", str10, "\"Hi!Context\"");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "\"\\\"hi!\\\"\"" + "'", str18, "\"\\\"hi!\\\"\"");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "\"1\"" + "'", str22, "\"1\"");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "4.5.2.1" + "'", str28, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "\"\"" + "'", str32, "\"\"");
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "d" + "'", str48, "d");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "" + "'", str49, "");
        org.junit.Assert.assertNotNull(strArray50);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "\"\"" + "'", str54, "\"\"");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "\"\\\"\\\"\\\"\\\\\\\"\\\\\\\"hi!\\\\\\\"\\\\\\\"\\\"\\\"\\\"\"" + "'", str57, "\"\\\"\\\"\\\"\\\\\\\"\\\\\\\"hi!\\\\\\\"\\\\\\\"\\\"\\\"\\\"\"");
        org.junit.Assert.assertNotNull(strSet60);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "Hi!Context" + "'", str64, "Hi!Context");
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(strArray66);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "Python3" + "'", str67, "Python3");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "\"\"" + "'", str71, "\"\"");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "\"\\\"\\\"4.5.2.1\\\"\\\"\"" + "'", str74, "\"\\\"\\\"4.5.2.1\\\"\\\"\"");
        org.junit.Assert.assertNotNull(strSet77);
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "Hi!Context" + "'", str81, "Hi!Context");
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "\\n" + "'", str83, "\\n");
    }

    @Test
    public void test1038() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1038");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        org.antlr.v4.tool.Grammar grammar3 = null;
        org.stringtemplate.v4.ST sT4 = null;
        python3Target0.genRecognizerHeaderFile(grammar3, sT4, "");
        python3Target0.language = "Python3";
        java.util.Set<java.lang.String> strSet9 = null;
        python3Target0.badWords = strSet9;
        boolean boolean11 = python3Target0.wantsBaseVisitor();
        java.lang.String str12 = python3Target0.language;
        org.antlr.v4.tool.ast.GrammarAST grammarAST13 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str14 = python3Target0.getLoopLabel(grammarAST13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Python3" + "'", str12, "Python3");
    }

    @Test
    public void test1039() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1039");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!", "hi!" };
        python3Target0.targetCharValueEscape = strArray5;
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = null;
        java.lang.String str10 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator7, "", false);
        boolean boolean11 = python3Target0.wantsBaseListener();
        org.antlr.v4.codegen.CodeGenerator codeGenerator12 = python3Target0.gen;
        java.lang.String str13 = python3Target0.getVersion();
        org.antlr.v4.tool.Grammar grammar14 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str16 = python3Target0.getTokenTypeAsTargetLabel(grammar14, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(codeGenerator12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "4.5.2.1" + "'", str13, "4.5.2.1");
    }

    @Test
    public void test1040() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1040");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray1 = python3Target0.targetCharValueEscape;
        java.lang.String str2 = python3Target0.language;
        int int3 = python3Target0.getSerializedATNSegmentLimit();
        org.antlr.v4.codegen.CodeGenerator codeGenerator4 = python3Target0.getCodeGenerator();
        org.antlr.v4.codegen.CodeGenerator codeGenerator5 = null;
        java.lang.String str8 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator5, "_tset\"\\\"\\\"hi!\\\"\\\"\"", true);
        java.lang.String str9 = python3Target0.language;
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target11 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator10);
        java.util.Set<java.lang.String> strSet12 = python3Target11.getBadWords();
        org.antlr.v4.codegen.target.Python3Target python3Target13 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str15 = python3Target13.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.codegen.target.Python3Target python3Target16 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean17 = python3Target16.supportsOverloadedMethods();
        java.util.Set<java.lang.String> strSet18 = python3Target16.badWords;
        python3Target13.badWords = strSet18;
        python3Target11.badWords = strSet18;
        python3Target0.badWords = strSet18;
        org.antlr.v4.tool.Grammar grammar22 = null;
        org.stringtemplate.v4.ST sT23 = null;
        // The following exception was thrown during execution in test generation
        try {
            python3Target0.genListenerFile(grammar22, sT23);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 29 + "'", int3 == 29);
        org.junit.Assert.assertNull(codeGenerator4);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\"tset\\\"\\\"\\\"hi!\\\"\\\"\"" + "'", str8, "\"tset\\\"\\\"\\\"hi!\\\"\\\"\"");
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "\"\"\"\"\"\"" + "'", str15, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(strSet18);
    }

    @Test
    public void test1041() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1041");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.lang.String str3 = python3Target1.getTargetStringLiteralFromString("");
        int int4 = python3Target1.getSerializedATNSegmentLimit();
        boolean boolean5 = python3Target1.wantsBaseVisitor();
        java.lang.String str6 = python3Target1.getVersion();
        java.lang.String str8 = python3Target1.encodeIntAsCharEscape(29);
        org.antlr.v4.codegen.CodeGenerator codeGenerator9 = python3Target1.getCodeGenerator();
        int int10 = python3Target1.getSerializedATNSegmentLimit();
        java.lang.String str11 = python3Target1.getLanguage();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str13 = python3Target1.getImplicitTokenLabel("\"@\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "\"\"" + "'", str3, "\"\"");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 29 + "'", int4 == 29);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "4.5.2.1" + "'", str6, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\\35" + "'", str8, "\\35");
        org.junit.Assert.assertNull(codeGenerator9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 29 + "'", int10 == 29);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Python3" + "'", str11, "Python3");
    }

    @Test
    public void test1042() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1042");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!", "hi!" };
        python3Target0.targetCharValueEscape = strArray5;
        java.lang.String[] strArray8 = new java.lang.String[] { "hi!" };
        org.antlr.v4.codegen.target.Python3Target.python3Keywords = strArray8;
        python3Target0.targetCharValueEscape = strArray8;
        org.antlr.v4.tool.Grammar grammar11 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target12 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str14 = python3Target12.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator15 = null;
        python3Target12.gen = codeGenerator15;
        org.antlr.v4.tool.Grammar grammar17 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target18 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str20 = python3Target18.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.tool.Grammar grammar21 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target22 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean23 = python3Target22.supportsOverloadedMethods();
        java.lang.String str24 = python3Target22.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator25 = null;
        java.lang.String str28 = python3Target22.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator25, "", true);
        java.lang.String str29 = python3Target22.getVersion();
        org.antlr.v4.tool.Grammar grammar30 = null;
        int[] intArray31 = new int[] {};
        java.lang.String[] strArray32 = python3Target22.getTokenTypesAsTargetLabels(grammar30, intArray31);
        java.lang.String[] strArray33 = python3Target18.getTokenTypesAsTargetLabels(grammar21, intArray31);
        java.lang.String[] strArray34 = python3Target12.getTokenTypesAsTargetLabels(grammar17, intArray31);
        java.lang.String[] strArray35 = python3Target0.getTokenTypesAsTargetLabels(grammar11, intArray31);
        org.stringtemplate.v4.STGroup sTGroup36 = python3Target0.templates;
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "\"\"\"\"\"\"" + "'", str14, "\"\"\"\"\"\"");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "\"\"\"\"\"\"" + "'", str20, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "4.5.2.1" + "'", str24, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "\"\"" + "'", str28, "\"\"");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "4.5.2.1" + "'", str29, "4.5.2.1");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[]");
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertNull(sTGroup36);
    }

    @Test
    public void test1043() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1043");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        org.antlr.v4.tool.Grammar grammar3 = null;
        org.stringtemplate.v4.ST sT4 = null;
        python3Target0.genRecognizerHeaderFile(grammar3, sT4, "");
        python3Target0.language = "Python3";
        int int9 = python3Target0.getSerializedATNSegmentLimit();
        org.stringtemplate.v4.STGroup sTGroup10 = python3Target0.loadTemplates();
        python3Target0.addBadWords();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str13 = python3Target0.getElementListName("\"\\\"DContext\\\"\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 29 + "'", int9 == 29);
        org.junit.Assert.assertNotNull(sTGroup10);
    }

    @Test
    public void test1044() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1044");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray1 = python3Target0.targetCharValueEscape;
        java.lang.String str2 = python3Target0.language;
        int int3 = python3Target0.getSerializedATNSegmentLimit();
        org.antlr.v4.codegen.CodeGenerator codeGenerator4 = null;
        java.lang.String str7 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator4, "d", true);
        org.antlr.v4.codegen.target.Python3Target python3Target8 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str10 = python3Target8.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.tool.Grammar grammar11 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target12 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean13 = python3Target12.supportsOverloadedMethods();
        java.lang.String str14 = python3Target12.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator15 = null;
        java.lang.String str18 = python3Target12.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator15, "", true);
        java.lang.String str19 = python3Target12.getVersion();
        org.antlr.v4.tool.Grammar grammar20 = null;
        int[] intArray21 = new int[] {};
        java.lang.String[] strArray22 = python3Target12.getTokenTypesAsTargetLabels(grammar20, intArray21);
        java.lang.String[] strArray23 = python3Target8.getTokenTypesAsTargetLabels(grammar11, intArray21);
        python3Target0.targetCharValueEscape = strArray23;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str26 = python3Target0.getImplicitRuleLabel("\"_tset\\12\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 29 + "'", int3 == 29);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "\"\"" + "'", str7, "\"\"");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\"\"\"\"\"\"" + "'", str10, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "4.5.2.1" + "'", str14, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "\"\"" + "'", str18, "\"\"");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "4.5.2.1" + "'", str19, "4.5.2.1");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[]");
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertNotNull(strArray23);
    }

    @Test
    public void test1045() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1045");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python3Target1.getBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = null;
        python3Target1.gen = codeGenerator3;
        java.lang.String str6 = python3Target1.getAltLabelContextStructName("hi!");
        java.lang.String str9 = python3Target1.getTargetStringLiteralFromString("\"hi!\"", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = null;
        python3Target1.gen = codeGenerator10;
        org.antlr.v4.tool.Grammar grammar12 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target13 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray14 = python3Target13.targetCharValueEscape;
        org.stringtemplate.v4.STGroup sTGroup15 = python3Target13.templates;
        int int16 = python3Target13.getInlineTestSetWordSize();
        org.antlr.v4.codegen.CodeGenerator codeGenerator17 = python3Target13.gen;
        org.antlr.v4.tool.Grammar grammar18 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target19 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str21 = python3Target19.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.tool.Grammar grammar22 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target23 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean24 = python3Target23.supportsOverloadedMethods();
        java.lang.String str25 = python3Target23.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator26 = null;
        java.lang.String str29 = python3Target23.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator26, "", true);
        java.lang.String str30 = python3Target23.getVersion();
        org.antlr.v4.tool.Grammar grammar31 = null;
        int[] intArray32 = new int[] {};
        java.lang.String[] strArray33 = python3Target23.getTokenTypesAsTargetLabels(grammar31, intArray32);
        java.lang.String[] strArray34 = python3Target19.getTokenTypesAsTargetLabels(grammar22, intArray32);
        java.lang.String[] strArray35 = python3Target13.getTokenTypesAsTargetLabels(grammar18, intArray32);
        java.lang.String[] strArray36 = python3Target1.getTokenTypesAsTargetLabels(grammar12, intArray32);
        java.lang.String str38 = python3Target1.getAltLabelContextStructName("\"Python3\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator39 = python3Target1.gen;
        int int40 = python3Target1.getSerializedATNSegmentLimit();
        org.stringtemplate.v4.STGroup sTGroup41 = python3Target1.loadTemplates();
        java.util.Set<java.lang.String> strSet42 = python3Target1.getBadWords();
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Hi!Context" + "'", str6, "Hi!Context");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\"\\\"hi!\\\"\"" + "'", str9, "\"\\\"hi!\\\"\"");
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertNull(sTGroup15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 64 + "'", int16 == 64);
        org.junit.Assert.assertNull(codeGenerator17);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "\"\"\"\"\"\"" + "'", str21, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "4.5.2.1" + "'", str25, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "\"\"" + "'", str29, "\"\"");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "4.5.2.1" + "'", str30, "4.5.2.1");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[]");
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "\"Python3\"Context" + "'", str38, "\"Python3\"Context");
        org.junit.Assert.assertNull(codeGenerator39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 29 + "'", int40 == 29);
        org.junit.Assert.assertNotNull(sTGroup41);
        org.junit.Assert.assertNotNull(strSet42);
    }

    @Test
    public void test1046() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1046");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        java.lang.String str2 = python3Target0.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = null;
        java.lang.String str6 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator3, "", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = null;
        python3Target0.gen = codeGenerator7;
        java.lang.String[] strArray16 = new java.lang.String[] { "\"\"\"\"", "\\12", "\"\"", "4.5.2.1", "", "\"\"\"\"", "\"\"" };
        java.util.LinkedHashSet<java.lang.String> strSet17 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet17, strArray16);
        python3Target0.badWords = strSet17;
        org.antlr.v4.tool.Grammar grammar20 = null;
        org.stringtemplate.v4.ST sT21 = null;
        python3Target0.genRecognizerHeaderFile(grammar20, sT21, "\"\"");
        java.lang.String str25 = python3Target0.encodeIntAsCharEscape((int) (byte) 10);
        java.lang.String str26 = python3Target0.language;
        java.util.Set<java.lang.String> strSet27 = python3Target0.getBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator28 = null;
        java.lang.String str31 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator28, "", false);
        java.util.Set<java.lang.String> strSet32 = python3Target0.badWords;
        boolean boolean33 = python3Target0.supportsOverloadedMethods();
        boolean boolean34 = python3Target0.supportsOverloadedMethods();
        org.antlr.v4.tool.Rule rule35 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str36 = python3Target0.getRuleFunctionContextStructName(rule35);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "4.5.2.1" + "'", str2, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\"\"" + "'", str6, "\"\"");
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "\\12" + "'", str25, "\\12");
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(strSet27);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "" + "'", str31, "");
        org.junit.Assert.assertNotNull(strSet32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
    }

    @Test
    public void test1047() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1047");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        org.antlr.v4.tool.Grammar grammar3 = null;
        org.stringtemplate.v4.ST sT4 = null;
        python3Target0.genRecognizerHeaderFile(grammar3, sT4, "");
        python3Target0.language = "Python3";
        java.util.Set<java.lang.String> strSet9 = null;
        python3Target0.badWords = strSet9;
        boolean boolean11 = python3Target0.wantsBaseVisitor();
        org.antlr.v4.codegen.CodeGenerator codeGenerator12 = null;
        python3Target0.gen = codeGenerator12;
        boolean boolean14 = python3Target0.supportsOverloadedMethods();
        boolean boolean15 = python3Target0.wantsBaseListener();
        org.antlr.v4.tool.ast.GrammarAST grammarAST16 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean17 = python3Target0.grammarSymbolCausesIssueInGeneratedCode(grammarAST16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test1048() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1048");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        java.lang.String str2 = python3Target0.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = python3Target0.getCodeGenerator();
        org.stringtemplate.v4.STGroup sTGroup4 = null;
        python3Target0.templates = sTGroup4;
        org.stringtemplate.v4.STGroup sTGroup6 = python3Target0.templates;
        java.lang.String[] strArray7 = python3Target0.targetCharValueEscape;
        org.antlr.v4.codegen.target.Python3Target.python3Keywords = strArray7;
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "4.5.2.1" + "'", str2, "4.5.2.1");
        org.junit.Assert.assertNull(codeGenerator3);
        org.junit.Assert.assertNull(sTGroup6);
        org.junit.Assert.assertNotNull(strArray7);
    }

    @Test
    public void test1049() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1049");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        java.lang.String str2 = python3Target0.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = null;
        java.lang.String str6 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator3, "", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = null;
        python3Target0.gen = codeGenerator7;
        java.lang.String[] strArray16 = new java.lang.String[] { "\"\"\"\"", "\\12", "\"\"", "4.5.2.1", "", "\"\"\"\"", "\"\"" };
        java.util.LinkedHashSet<java.lang.String> strSet17 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet17, strArray16);
        python3Target0.badWords = strSet17;
        java.lang.String str20 = python3Target0.getLanguage();
        java.lang.String str23 = python3Target0.getTargetStringLiteralFromString("_tsetHi!Context", true);
        org.antlr.v4.tool.ast.GrammarAST grammarAST24 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str25 = python3Target0.getLoopCounter(grammarAST24);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "4.5.2.1" + "'", str2, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\"\"" + "'", str6, "\"\"");
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "\"_tsetHi!Context\"" + "'", str23, "\"_tsetHi!Context\"");
    }

    @Test
    public void test1050() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1050");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        java.lang.String str2 = python3Target0.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = python3Target0.getCodeGenerator();
        org.stringtemplate.v4.STGroup sTGroup4 = null;
        python3Target0.templates = sTGroup4;
        org.stringtemplate.v4.STGroup sTGroup6 = python3Target0.templates;
        java.lang.String[] strArray7 = python3Target0.targetCharValueEscape;
        java.util.Set<java.lang.String> strSet8 = python3Target0.badWords;
        java.util.Set<java.lang.String> strSet9 = python3Target0.getBadWords();
        boolean boolean10 = python3Target0.wantsBaseVisitor();
        java.lang.String[] strArray11 = python3Target0.targetCharValueEscape;
        // The following exception was thrown during execution in test generation
        try {
            org.stringtemplate.v4.STGroup sTGroup12 = python3Target0.getTemplates();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "4.5.2.1" + "'", str2, "4.5.2.1");
        org.junit.Assert.assertNull(codeGenerator3);
        org.junit.Assert.assertNull(sTGroup6);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertNotNull(strSet9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(strArray11);
    }

    @Test
    public void test1051() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1051");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!", "hi!" };
        python3Target0.targetCharValueEscape = strArray5;
        java.lang.String str8 = python3Target0.getTargetStringLiteralFromString("\"\"");
        java.lang.String str10 = python3Target0.getTargetStringLiteralFromString("\"\"");
        java.lang.String str11 = python3Target0.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup12 = python3Target0.templates;
        org.antlr.v4.codegen.CodeGenerator codeGenerator13 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target14 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator13);
        java.util.Set<java.lang.String> strSet15 = python3Target14.getBadWords();
        org.antlr.v4.codegen.target.Python3Target python3Target16 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str18 = python3Target16.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.codegen.target.Python3Target python3Target19 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean20 = python3Target19.supportsOverloadedMethods();
        java.util.Set<java.lang.String> strSet21 = python3Target19.badWords;
        python3Target16.badWords = strSet21;
        python3Target14.badWords = strSet21;
        java.util.Set<java.lang.String> strSet24 = python3Target14.badWords;
        java.lang.String str25 = python3Target14.language;
        java.util.Set<java.lang.String> strSet26 = python3Target14.badWords;
        java.lang.String str28 = python3Target14.getListLabel("\"\\\"\\\\\\\"Python3\\\\\\\"\\\"\"");
        org.antlr.v4.codegen.target.Python3Target python3Target29 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean30 = python3Target29.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup31 = python3Target29.templates;
        java.lang.String[] strArray34 = new java.lang.String[] { "hi!", "hi!" };
        python3Target29.targetCharValueEscape = strArray34;
        org.antlr.v4.codegen.CodeGenerator codeGenerator36 = null;
        java.lang.String str39 = python3Target29.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator36, "", false);
        boolean boolean40 = python3Target29.wantsBaseListener();
        org.antlr.v4.codegen.CodeGenerator codeGenerator41 = python3Target29.gen;
        org.antlr.v4.codegen.target.Python3Target python3Target42 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray43 = python3Target42.targetCharValueEscape;
        java.lang.String str44 = python3Target42.language;
        int int45 = python3Target42.getSerializedATNSegmentLimit();
        org.antlr.v4.codegen.CodeGenerator codeGenerator46 = null;
        python3Target42.gen = codeGenerator46;
        org.antlr.v4.codegen.CodeGenerator codeGenerator48 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target49 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator48);
        java.util.Set<java.lang.String> strSet50 = python3Target49.getBadWords();
        java.lang.String str52 = python3Target49.getAltLabelContextStructName("d");
        org.stringtemplate.v4.STGroup sTGroup53 = python3Target49.getTemplates();
        python3Target42.templates = sTGroup53;
        python3Target29.templates = sTGroup53;
        python3Target14.templates = sTGroup53;
        python3Target0.templates = sTGroup53;
        org.antlr.v4.tool.ast.GrammarAST grammarAST58 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str59 = python3Target0.getLoopLabel(grammarAST58);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\"\"\"\"" + "'", str8, "\"\"\"\"");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\"\"\"\"" + "'", str10, "\"\"\"\"");
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(sTGroup12);
        org.junit.Assert.assertNotNull(strSet15);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "\"\"\"\"\"\"" + "'", str18, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(strSet21);
        org.junit.Assert.assertNotNull(strSet24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Python3" + "'", str25, "Python3");
        org.junit.Assert.assertNotNull(strSet26);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "\"\\\"\\\\\\\"Python3\\\\\\\"\\\"\"" + "'", str28, "\"\\\"\\\\\\\"Python3\\\\\\\"\\\"\"");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNull(sTGroup31);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "" + "'", str39, "");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNull(codeGenerator41);
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 29 + "'", int45 == 29);
        org.junit.Assert.assertNotNull(strSet50);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "DContext" + "'", str52, "DContext");
        org.junit.Assert.assertNotNull(sTGroup53);
    }

    @Test
    public void test1052() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1052");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        org.antlr.v4.tool.Grammar grammar3 = null;
        org.stringtemplate.v4.ST sT4 = null;
        python3Target0.genRecognizerHeaderFile(grammar3, sT4, "");
        python3Target0.language = "Python3";
        java.util.Set<java.lang.String> strSet9 = null;
        python3Target0.badWords = strSet9;
        boolean boolean11 = python3Target0.wantsBaseVisitor();
        java.lang.String str12 = python3Target0.language;
        boolean boolean13 = python3Target0.wantsBaseListener();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Python3" + "'", str12, "Python3");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test1053() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1053");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python3Target1.getBadWords();
        java.lang.String str4 = python3Target1.getAltLabelContextStructName("d");
        org.stringtemplate.v4.STGroup sTGroup5 = python3Target1.getTemplates();
        boolean boolean6 = python3Target1.supportsOverloadedMethods();
        java.lang.String str8 = python3Target1.getImplicitRuleLabel("12");
        org.stringtemplate.v4.STGroup sTGroup9 = python3Target1.templates;
        java.lang.Class<?> wildcardClass10 = sTGroup9.getClass();
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "DContext" + "'", str4, "DContext");
        org.junit.Assert.assertNotNull(sTGroup5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "_12" + "'", str8, "_12");
        org.junit.Assert.assertNotNull(sTGroup9);
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test1054() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1054");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!", "hi!" };
        python3Target0.targetCharValueEscape = strArray5;
        java.lang.String[] strArray8 = new java.lang.String[] { "hi!" };
        org.antlr.v4.codegen.target.Python3Target.python3Keywords = strArray8;
        python3Target0.targetCharValueEscape = strArray8;
        boolean boolean11 = python3Target0.wantsBaseVisitor();
        python3Target0.language = "";
        java.util.Set<java.lang.String> strSet14 = python3Target0.badWords;
        org.antlr.v4.tool.ast.GrammarAST grammarAST15 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean16 = python3Target0.visibleGrammarSymbolCausesIssueInGeneratedCode(grammarAST15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(strSet14);
    }

    @Test
    public void test1055() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1055");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray1 = python3Target0.targetCharValueEscape;
        python3Target0.addBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = python3Target0.gen;
        org.antlr.v4.codegen.CodeGenerator codeGenerator4 = null;
        python3Target0.gen = codeGenerator4;
        org.antlr.v4.codegen.model.RuleFunction ruleFunction6 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str7 = python3Target0.getRuleFunctionContextStructName(ruleFunction6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertNull(codeGenerator3);
    }

    @Test
    public void test1056() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1056");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python3Target1.getBadWords();
        org.antlr.v4.codegen.target.Python3Target python3Target3 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str5 = python3Target3.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.codegen.target.Python3Target python3Target6 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean7 = python3Target6.supportsOverloadedMethods();
        java.util.Set<java.lang.String> strSet8 = python3Target6.badWords;
        python3Target3.badWords = strSet8;
        python3Target1.badWords = strSet8;
        java.util.Set<java.lang.String> strSet11 = python3Target1.badWords;
        java.lang.String str12 = python3Target1.language;
        boolean boolean13 = python3Target1.templatesExist();
        org.antlr.v4.tool.Rule rule14 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str15 = python3Target1.getRuleFunctionContextStructName(rule14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "\"\"\"\"\"\"" + "'", str5, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertNotNull(strSet11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Python3" + "'", str12, "Python3");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
    }

    @Test
    public void test1057() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1057");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        java.lang.String str2 = python3Target0.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = null;
        java.lang.String str6 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator3, "", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = null;
        python3Target0.gen = codeGenerator7;
        int int9 = python3Target0.getSerializedATNSegmentLimit();
        org.antlr.v4.tool.Grammar grammar10 = null;
        org.stringtemplate.v4.ST sT11 = null;
        python3Target0.genRecognizerHeaderFile(grammar10, sT11, "_tset12");
        java.util.Set<java.lang.String> strSet14 = python3Target0.getBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator15 = null;
        java.lang.String str18 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator15, "\"\"\\0\"\"", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator19 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target20 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator19);
        java.util.Set<java.lang.String> strSet21 = python3Target20.getBadWords();
        java.lang.String str23 = python3Target20.getAltLabelContextStructName("d");
        java.lang.String str25 = python3Target20.getTargetStringLiteralFromString("\"\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator26 = python3Target20.getCodeGenerator();
        org.antlr.v4.tool.Grammar grammar27 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator28 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target29 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator28);
        java.util.Set<java.lang.String> strSet30 = python3Target29.getBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator31 = null;
        python3Target29.gen = codeGenerator31;
        java.lang.String str34 = python3Target29.getAltLabelContextStructName("hi!");
        java.lang.String str37 = python3Target29.getTargetStringLiteralFromString("\"hi!\"", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator38 = null;
        python3Target29.gen = codeGenerator38;
        org.antlr.v4.tool.Grammar grammar40 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target41 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray42 = python3Target41.targetCharValueEscape;
        org.stringtemplate.v4.STGroup sTGroup43 = python3Target41.templates;
        int int44 = python3Target41.getInlineTestSetWordSize();
        org.antlr.v4.codegen.CodeGenerator codeGenerator45 = python3Target41.gen;
        org.antlr.v4.tool.Grammar grammar46 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target47 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str49 = python3Target47.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.tool.Grammar grammar50 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target51 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean52 = python3Target51.supportsOverloadedMethods();
        java.lang.String str53 = python3Target51.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator54 = null;
        java.lang.String str57 = python3Target51.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator54, "", true);
        java.lang.String str58 = python3Target51.getVersion();
        org.antlr.v4.tool.Grammar grammar59 = null;
        int[] intArray60 = new int[] {};
        java.lang.String[] strArray61 = python3Target51.getTokenTypesAsTargetLabels(grammar59, intArray60);
        java.lang.String[] strArray62 = python3Target47.getTokenTypesAsTargetLabels(grammar50, intArray60);
        java.lang.String[] strArray63 = python3Target41.getTokenTypesAsTargetLabels(grammar46, intArray60);
        java.lang.String[] strArray64 = python3Target29.getTokenTypesAsTargetLabels(grammar40, intArray60);
        java.lang.String[] strArray65 = python3Target20.getTokenTypesAsTargetLabels(grammar27, intArray60);
        org.antlr.v4.codegen.target.Python3Target.python3Keywords = strArray65;
        python3Target0.targetCharValueEscape = strArray65;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str69 = python3Target0.getElementName("\"\\1\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "4.5.2.1" + "'", str2, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\"\"" + "'", str6, "\"\"");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 29 + "'", int9 == 29);
        org.junit.Assert.assertNotNull(strSet14);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "\"\\\"0\\\"\"" + "'", str18, "\"\\\"0\\\"\"");
        org.junit.Assert.assertNotNull(strSet21);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "DContext" + "'", str23, "DContext");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "\"\\\"\\\"\"" + "'", str25, "\"\\\"\\\"\"");
        org.junit.Assert.assertNull(codeGenerator26);
        org.junit.Assert.assertNotNull(strSet30);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "Hi!Context" + "'", str34, "Hi!Context");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "\"\\\"hi!\\\"\"" + "'", str37, "\"\\\"hi!\\\"\"");
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertNull(sTGroup43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 64 + "'", int44 == 64);
        org.junit.Assert.assertNull(codeGenerator45);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "\"\"\"\"\"\"" + "'", str49, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "4.5.2.1" + "'", str53, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "\"\"" + "'", str57, "\"\"");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "4.5.2.1" + "'", str58, "4.5.2.1");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[]");
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertNotNull(strArray62);
        org.junit.Assert.assertNotNull(strArray63);
        org.junit.Assert.assertNotNull(strArray64);
        org.junit.Assert.assertNotNull(strArray65);
    }

    @Test
    public void test1058() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1058");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!", "hi!" };
        python3Target0.targetCharValueEscape = strArray5;
        java.lang.String str8 = python3Target0.getTargetStringLiteralFromString("\"\"");
        java.lang.String str9 = python3Target0.getLanguage();
        org.antlr.v4.codegen.target.Python3Target python3Target10 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray11 = python3Target10.targetCharValueEscape;
        org.stringtemplate.v4.STGroup sTGroup12 = python3Target10.templates;
        int int13 = python3Target10.getInlineTestSetWordSize();
        org.antlr.v4.codegen.CodeGenerator codeGenerator14 = python3Target10.gen;
        org.antlr.v4.tool.Grammar grammar15 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target16 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str18 = python3Target16.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.tool.Grammar grammar19 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target20 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean21 = python3Target20.supportsOverloadedMethods();
        java.lang.String str22 = python3Target20.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator23 = null;
        java.lang.String str26 = python3Target20.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator23, "", true);
        java.lang.String str27 = python3Target20.getVersion();
        org.antlr.v4.tool.Grammar grammar28 = null;
        int[] intArray29 = new int[] {};
        java.lang.String[] strArray30 = python3Target20.getTokenTypesAsTargetLabels(grammar28, intArray29);
        java.lang.String[] strArray31 = python3Target16.getTokenTypesAsTargetLabels(grammar19, intArray29);
        java.lang.String[] strArray32 = python3Target10.getTokenTypesAsTargetLabels(grammar15, intArray29);
        python3Target0.targetCharValueEscape = strArray32;
        org.antlr.v4.codegen.CodeGenerator codeGenerator34 = null;
        java.lang.String str37 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator34, "\"12\"", false);
        boolean boolean38 = python3Target0.wantsBaseListener();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str40 = python3Target0.getAltLabelContextStructName("_tset12");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\"\"\"\"" + "'", str8, "\"\"\"\"");
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNull(sTGroup12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 64 + "'", int13 == 64);
        org.junit.Assert.assertNull(codeGenerator14);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "\"\"\"\"\"\"" + "'", str18, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "4.5.2.1" + "'", str22, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "\"\"" + "'", str26, "\"\"");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "4.5.2.1" + "'", str27, "4.5.2.1");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[]");
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "12" + "'", str37, "12");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
    }

    @Test
    public void test1059() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1059");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!", "hi!" };
        python3Target0.targetCharValueEscape = strArray5;
        java.lang.String str8 = python3Target0.getTargetStringLiteralFromString("\"\"");
        java.lang.String str10 = python3Target0.getTargetStringLiteralFromString("\"\"");
        java.lang.String str11 = python3Target0.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup12 = python3Target0.templates;
        org.antlr.v4.codegen.CodeGenerator codeGenerator13 = python3Target0.getCodeGenerator();
        int int14 = python3Target0.getSerializedATNSegmentLimit();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\"\"\"\"" + "'", str8, "\"\"\"\"");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\"\"\"\"" + "'", str10, "\"\"\"\"");
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(sTGroup12);
        org.junit.Assert.assertNull(codeGenerator13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 29 + "'", int14 == 29);
    }

    @Test
    public void test1060() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1060");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        java.lang.String str2 = python3Target0.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = python3Target0.getCodeGenerator();
        org.antlr.v4.tool.Grammar grammar4 = null;
        org.stringtemplate.v4.ST sT5 = null;
        python3Target0.genRecognizerHeaderFile(grammar4, sT5, "_tsetPython3");
        boolean boolean8 = python3Target0.wantsBaseListener();
        int int9 = python3Target0.getSerializedATNSegmentLimit();
        boolean boolean10 = python3Target0.wantsBaseListener();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "4.5.2.1" + "'", str2, "4.5.2.1");
        org.junit.Assert.assertNull(codeGenerator3);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 29 + "'", int9 == 29);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test1061() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1061");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python3Target1.getBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = null;
        python3Target1.gen = codeGenerator3;
        java.lang.String str6 = python3Target1.getAltLabelContextStructName("hi!");
        java.lang.String str9 = python3Target1.getTargetStringLiteralFromString("\"hi!\"", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = null;
        python3Target1.gen = codeGenerator10;
        org.antlr.v4.tool.Grammar grammar12 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target13 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray14 = python3Target13.targetCharValueEscape;
        org.stringtemplate.v4.STGroup sTGroup15 = python3Target13.templates;
        int int16 = python3Target13.getInlineTestSetWordSize();
        org.antlr.v4.codegen.CodeGenerator codeGenerator17 = python3Target13.gen;
        org.antlr.v4.tool.Grammar grammar18 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target19 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str21 = python3Target19.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.tool.Grammar grammar22 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target23 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean24 = python3Target23.supportsOverloadedMethods();
        java.lang.String str25 = python3Target23.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator26 = null;
        java.lang.String str29 = python3Target23.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator26, "", true);
        java.lang.String str30 = python3Target23.getVersion();
        org.antlr.v4.tool.Grammar grammar31 = null;
        int[] intArray32 = new int[] {};
        java.lang.String[] strArray33 = python3Target23.getTokenTypesAsTargetLabels(grammar31, intArray32);
        java.lang.String[] strArray34 = python3Target19.getTokenTypesAsTargetLabels(grammar22, intArray32);
        java.lang.String[] strArray35 = python3Target13.getTokenTypesAsTargetLabels(grammar18, intArray32);
        java.lang.String[] strArray36 = python3Target1.getTokenTypesAsTargetLabels(grammar12, intArray32);
        java.lang.String str38 = python3Target1.getAltLabelContextStructName("\"Python3\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator39 = python3Target1.gen;
        org.antlr.v4.tool.ast.GrammarAST grammarAST40 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str41 = python3Target1.getLoopLabel(grammarAST40);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Hi!Context" + "'", str6, "Hi!Context");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\"\\\"hi!\\\"\"" + "'", str9, "\"\\\"hi!\\\"\"");
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertNull(sTGroup15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 64 + "'", int16 == 64);
        org.junit.Assert.assertNull(codeGenerator17);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "\"\"\"\"\"\"" + "'", str21, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "4.5.2.1" + "'", str25, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "\"\"" + "'", str29, "\"\"");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "4.5.2.1" + "'", str30, "4.5.2.1");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[]");
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "\"Python3\"Context" + "'", str38, "\"Python3\"Context");
        org.junit.Assert.assertNull(codeGenerator39);
    }

    @Test
    public void test1062() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1062");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.lang.String str3 = python3Target1.getTargetStringLiteralFromString("");
        int int4 = python3Target1.getSerializedATNSegmentLimit();
        boolean boolean5 = python3Target1.wantsBaseVisitor();
        java.lang.String str6 = python3Target1.getVersion();
        org.stringtemplate.v4.STGroup sTGroup7 = python3Target1.getTemplates();
        python3Target1.addBadWords();
        python3Target1.addBadWords();
        java.lang.Class<?> wildcardClass10 = python3Target1.getClass();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "\"\"" + "'", str3, "\"\"");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 29 + "'", int4 == 29);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "4.5.2.1" + "'", str6, "4.5.2.1");
        org.junit.Assert.assertNotNull(sTGroup7);
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test1063() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1063");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        java.lang.String str2 = python3Target0.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = null;
        java.lang.String str6 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator3, "", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = null;
        python3Target0.gen = codeGenerator7;
        java.lang.String[] strArray16 = new java.lang.String[] { "\"\"\"\"", "\\12", "\"\"", "4.5.2.1", "", "\"\"\"\"", "\"\"" };
        java.util.LinkedHashSet<java.lang.String> strSet17 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet17, strArray16);
        python3Target0.badWords = strSet17;
        org.antlr.v4.codegen.CodeGenerator codeGenerator20 = python3Target0.gen;
        java.lang.String str23 = python3Target0.getTargetStringLiteralFromString("\\12", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator24 = null;
        java.lang.String str27 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator24, "", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator28 = null;
        python3Target0.gen = codeGenerator28;
        org.antlr.v4.codegen.CodeGenerator codeGenerator30 = null;
        python3Target0.gen = codeGenerator30;
        org.antlr.v4.tool.ast.GrammarAST grammarAST32 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str33 = python3Target0.getLoopLabel(grammarAST32);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "4.5.2.1" + "'", str2, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\"\"" + "'", str6, "\"\"");
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNull(codeGenerator20);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "\"\\12\"" + "'", str23, "\"\\12\"");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "\"\"" + "'", str27, "\"\"");
    }

    @Test
    public void test1064() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1064");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        java.lang.String str2 = python3Target0.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = python3Target0.getCodeGenerator();
        org.stringtemplate.v4.STGroup sTGroup4 = null;
        python3Target0.templates = sTGroup4;
        org.stringtemplate.v4.STGroup sTGroup6 = python3Target0.templates;
        java.lang.String[] strArray7 = python3Target0.targetCharValueEscape;
        java.util.Set<java.lang.String> strSet8 = python3Target0.badWords;
        java.util.Set<java.lang.String> strSet9 = python3Target0.getBadWords();
        python3Target0.addBadWords();
        org.antlr.v4.codegen.model.RuleFunction ruleFunction11 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str12 = python3Target0.getRuleFunctionContextStructName(ruleFunction11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "4.5.2.1" + "'", str2, "4.5.2.1");
        org.junit.Assert.assertNull(codeGenerator3);
        org.junit.Assert.assertNull(sTGroup6);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertNotNull(strSet9);
    }

    @Test
    public void test1065() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1065");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str2 = python3Target0.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = null;
        python3Target0.gen = codeGenerator3;
        org.antlr.v4.codegen.target.Python3Target python3Target5 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray6 = python3Target5.targetCharValueEscape;
        java.lang.String str7 = python3Target5.language;
        java.lang.String[] strArray8 = python3Target5.targetCharValueEscape;
        python3Target0.targetCharValueEscape = strArray8;
        org.antlr.v4.tool.Grammar grammar10 = null;
        org.stringtemplate.v4.ST sT11 = null;
        // The following exception was thrown during execution in test generation
        try {
            python3Target0.genListenerFile(grammar10, sT11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "\"\"\"\"\"\"" + "'", str2, "\"\"\"\"\"\"");
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(strArray8);
    }

    @Test
    public void test1066() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1066");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python3Target1.getBadWords();
        org.antlr.v4.codegen.target.Python3Target python3Target3 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str5 = python3Target3.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.codegen.target.Python3Target python3Target6 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean7 = python3Target6.supportsOverloadedMethods();
        java.util.Set<java.lang.String> strSet8 = python3Target6.badWords;
        python3Target3.badWords = strSet8;
        python3Target1.badWords = strSet8;
        java.util.Set<java.lang.String> strSet11 = python3Target1.badWords;
        org.antlr.v4.codegen.CodeGenerator codeGenerator12 = python3Target1.getCodeGenerator();
        org.antlr.v4.tool.Grammar grammar13 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target14 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean15 = python3Target14.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup16 = python3Target14.templates;
        org.antlr.v4.tool.Grammar grammar17 = null;
        org.stringtemplate.v4.ST sT18 = null;
        python3Target14.genRecognizerHeaderFile(grammar17, sT18, "");
        python3Target14.language = "Python3";
        java.util.Set<java.lang.String> strSet23 = null;
        python3Target14.badWords = strSet23;
        org.antlr.v4.codegen.CodeGenerator codeGenerator25 = null;
        java.lang.String str28 = python3Target14.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator25, "\"Hi!Context\"", false);
        java.lang.String str30 = python3Target14.getListLabel("Python3");
        java.lang.String str32 = python3Target14.getTargetStringLiteralFromString("\\0");
        org.antlr.v4.tool.Grammar grammar33 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target34 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str36 = python3Target34.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.tool.Grammar grammar37 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target38 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean39 = python3Target38.supportsOverloadedMethods();
        java.lang.String str40 = python3Target38.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator41 = null;
        java.lang.String str44 = python3Target38.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator41, "", true);
        java.lang.String str45 = python3Target38.getVersion();
        org.antlr.v4.tool.Grammar grammar46 = null;
        int[] intArray47 = new int[] {};
        java.lang.String[] strArray48 = python3Target38.getTokenTypesAsTargetLabels(grammar46, intArray47);
        java.lang.String[] strArray49 = python3Target34.getTokenTypesAsTargetLabels(grammar37, intArray47);
        java.lang.String[] strArray50 = python3Target14.getTokenTypesAsTargetLabels(grammar33, intArray47);
        java.lang.String[] strArray51 = python3Target1.getTokenTypesAsTargetLabels(grammar13, intArray47);
        java.lang.String str53 = python3Target1.encodeIntAsCharEscape(100);
        java.lang.String str55 = python3Target1.encodeIntAsCharEscape(10);
        org.stringtemplate.v4.STGroup sTGroup56 = python3Target1.getTemplates();
        java.lang.String str57 = python3Target1.language;
        org.antlr.v4.tool.Grammar grammar58 = null;
        org.stringtemplate.v4.ST sT59 = null;
        // The following exception was thrown during execution in test generation
        try {
            python3Target1.genFile(grammar58, sT59, "_tsetHi!Context");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "\"\"\"\"\"\"" + "'", str5, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertNotNull(strSet11);
        org.junit.Assert.assertNull(codeGenerator12);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(sTGroup16);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "Hi!Context" + "'", str28, "Hi!Context");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "Python3" + "'", str30, "Python3");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "\"\\0\"" + "'", str32, "\"\\0\"");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "\"\"\"\"\"\"" + "'", str36, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "4.5.2.1" + "'", str40, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "\"\"" + "'", str44, "\"\"");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "4.5.2.1" + "'", str45, "4.5.2.1");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[]");
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertNotNull(strArray49);
        org.junit.Assert.assertNotNull(strArray50);
        org.junit.Assert.assertNotNull(strArray51);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "d" + "'", str53, "d");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "\\n" + "'", str55, "\\n");
        org.junit.Assert.assertNotNull(sTGroup56);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "Python3" + "'", str57, "Python3");
    }

    @Test
    public void test1067() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1067");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        java.lang.String str2 = python3Target0.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = null;
        java.lang.String str6 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator3, "", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = null;
        python3Target0.gen = codeGenerator7;
        java.lang.String[] strArray16 = new java.lang.String[] { "\"\"\"\"", "\\12", "\"\"", "4.5.2.1", "", "\"\"\"\"", "\"\"" };
        java.util.LinkedHashSet<java.lang.String> strSet17 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet17, strArray16);
        python3Target0.badWords = strSet17;
        java.lang.String str20 = python3Target0.getLanguage();
        java.lang.String str23 = python3Target0.getTargetStringLiteralFromString("_tsetHi!Context", true);
        org.antlr.v4.tool.ast.GrammarAST grammarAST24 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean25 = python3Target0.visibleGrammarSymbolCausesIssueInGeneratedCode(grammarAST24);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "4.5.2.1" + "'", str2, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\"\"" + "'", str6, "\"\"");
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "\"_tsetHi!Context\"" + "'", str23, "\"_tsetHi!Context\"");
    }

    @Test
    public void test1068() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1068");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python3Target1.getBadWords();
        org.antlr.v4.codegen.target.Python3Target python3Target3 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str5 = python3Target3.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.codegen.target.Python3Target python3Target6 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean7 = python3Target6.supportsOverloadedMethods();
        java.util.Set<java.lang.String> strSet8 = python3Target6.badWords;
        python3Target3.badWords = strSet8;
        python3Target1.badWords = strSet8;
        java.util.Set<java.lang.String> strSet11 = python3Target1.badWords;
        org.antlr.v4.codegen.target.Python3Target python3Target12 = new org.antlr.v4.codegen.target.Python3Target();
        python3Target12.language = "";
        org.antlr.v4.codegen.target.Python3Target python3Target15 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean16 = python3Target15.supportsOverloadedMethods();
        java.lang.String str17 = python3Target15.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator18 = null;
        java.lang.String str21 = python3Target15.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator18, "", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator22 = null;
        python3Target15.gen = codeGenerator22;
        java.lang.String[] strArray31 = new java.lang.String[] { "\"\"\"\"", "\\12", "\"\"", "4.5.2.1", "", "\"\"\"\"", "\"\"" };
        java.util.LinkedHashSet<java.lang.String> strSet32 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet32, strArray31);
        python3Target15.badWords = strSet32;
        python3Target12.badWords = strSet32;
        python3Target1.badWords = strSet32;
        boolean boolean37 = python3Target1.wantsBaseVisitor();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str39 = python3Target1.getImplicitTokenLabel("_\"\"hi!\"\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "\"\"\"\"\"\"" + "'", str5, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertNotNull(strSet11);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "4.5.2.1" + "'", str17, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "\"\"" + "'", str21, "\"\"");
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
    }

    @Test
    public void test1069() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1069");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!", "hi!" };
        python3Target0.targetCharValueEscape = strArray5;
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = null;
        java.lang.String str10 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator7, "", false);
        int int11 = python3Target0.getSerializedATNSegmentLimit();
        java.lang.String str12 = python3Target0.getVersion();
        boolean boolean13 = python3Target0.supportsOverloadedMethods();
        python3Target0.addBadWords();
        org.antlr.v4.tool.Grammar grammar15 = null;
        org.stringtemplate.v4.ST sT16 = null;
        // The following exception was thrown during execution in test generation
        try {
            python3Target0.genFile(grammar15, sT16, "\\\"\\\"hi!\\\"\\\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 29 + "'", int11 == 29);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "4.5.2.1" + "'", str12, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test1070() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1070");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!", "hi!" };
        python3Target0.targetCharValueEscape = strArray5;
        java.lang.String str8 = python3Target0.getTargetStringLiteralFromString("\"\"");
        org.stringtemplate.v4.STGroup sTGroup9 = null;
        python3Target0.templates = sTGroup9;
        java.lang.String[] strArray11 = python3Target0.targetCharValueEscape;
        int int12 = python3Target0.getInlineTestSetWordSize();
        java.lang.String[] strArray13 = new java.lang.String[] {};
        python3Target0.targetCharValueEscape = strArray13;
        java.lang.String str16 = python3Target0.getTargetStringLiteralFromString("_tsetPython3");
        org.antlr.v4.codegen.model.RuleFunction ruleFunction17 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str18 = python3Target0.getRuleFunctionContextStructName(ruleFunction17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\"\"\"\"" + "'", str8, "\"\"\"\"");
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 64 + "'", int12 == 64);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "\"_tsetPython3\"" + "'", str16, "\"_tsetPython3\"");
    }

    @Test
    public void test1071() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1071");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python3Target1.getBadWords();
        java.lang.String str3 = python3Target1.language;
        org.antlr.v4.tool.Grammar grammar4 = null;
        org.stringtemplate.v4.ST sT5 = null;
        // The following exception was thrown during execution in test generation
        try {
            python3Target1.genFile(grammar4, sT5, "");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Python3" + "'", str3, "Python3");
    }

    @Test
    public void test1072() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1072");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!", "hi!" };
        python3Target0.targetCharValueEscape = strArray5;
        java.lang.String str8 = python3Target0.getTargetStringLiteralFromString("\"\"");
        org.stringtemplate.v4.STGroup sTGroup9 = null;
        python3Target0.templates = sTGroup9;
        java.lang.String[] strArray11 = python3Target0.targetCharValueEscape;
        int int12 = python3Target0.getInlineTestSetWordSize();
        org.antlr.v4.codegen.CodeGenerator codeGenerator13 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target14 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator13);
        java.lang.String str16 = python3Target14.getTargetStringLiteralFromString("");
        int int17 = python3Target14.getSerializedATNSegmentLimit();
        boolean boolean18 = python3Target14.wantsBaseVisitor();
        org.stringtemplate.v4.STGroup sTGroup19 = python3Target14.loadTemplates();
        org.antlr.v4.codegen.CodeGenerator codeGenerator20 = python3Target14.gen;
        org.antlr.v4.codegen.target.Python3Target python3Target21 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean22 = python3Target21.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup23 = python3Target21.templates;
        org.antlr.v4.tool.Grammar grammar24 = null;
        org.stringtemplate.v4.ST sT25 = null;
        python3Target21.genRecognizerHeaderFile(grammar24, sT25, "");
        python3Target21.language = "Python3";
        int int30 = python3Target21.getSerializedATNSegmentLimit();
        org.stringtemplate.v4.STGroup sTGroup31 = python3Target21.loadTemplates();
        python3Target14.templates = sTGroup31;
        java.lang.String str33 = python3Target14.getVersion();
        java.util.Set<java.lang.String> strSet34 = python3Target14.getBadWords();
        python3Target0.badWords = strSet34;
        java.lang.String[] strArray36 = org.antlr.v4.codegen.target.Python3Target.python3Keywords;
        org.antlr.v4.codegen.target.Python3Target.python3Keywords = strArray36;
        python3Target0.targetCharValueEscape = strArray36;
        python3Target0.addBadWords();
        org.antlr.v4.tool.Grammar grammar40 = null;
        int[] intArray41 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String[] strArray42 = python3Target0.getTokenTypesAsTargetLabels(grammar40, intArray41);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\"\"\"\"" + "'", str8, "\"\"\"\"");
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 64 + "'", int12 == 64);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "\"\"" + "'", str16, "\"\"");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 29 + "'", int17 == 29);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(sTGroup19);
        org.junit.Assert.assertNull(codeGenerator20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(sTGroup23);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 29 + "'", int30 == 29);
        org.junit.Assert.assertNotNull(sTGroup31);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "4.5.2.1" + "'", str33, "4.5.2.1");
        org.junit.Assert.assertNotNull(strSet34);
        org.junit.Assert.assertNotNull(strArray36);
    }

    @Test
    public void test1073() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1073");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        org.antlr.v4.tool.Grammar grammar3 = null;
        org.stringtemplate.v4.ST sT4 = null;
        python3Target0.genRecognizerHeaderFile(grammar3, sT4, "");
        python3Target0.language = "Python3";
        java.util.Set<java.lang.String> strSet9 = null;
        python3Target0.badWords = strSet9;
        boolean boolean11 = python3Target0.wantsBaseVisitor();
        java.lang.String str13 = python3Target0.getImplicitSetLabel("Python3");
        int int14 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str15 = python3Target0.language;
        java.lang.String str16 = python3Target0.getLanguage();
        int int17 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str19 = python3Target0.getImplicitRuleLabel("\"\\\"\\\"4.5.2.1\\\"\\\"\"");
        java.lang.String str21 = python3Target0.getImplicitSetLabel("_tset_12");
        org.antlr.v4.tool.Grammar grammar22 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str24 = python3Target0.getTokenTypeAsTargetLabel(grammar22, (int) (short) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "_tsetPython3" + "'", str13, "_tsetPython3");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 64 + "'", int14 == 64);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Python3" + "'", str15, "Python3");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Python3" + "'", str16, "Python3");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 64 + "'", int17 == 64);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "_\"\\\"\\\"4.5.2.1\\\"\\\"\"" + "'", str19, "_\"\\\"\\\"4.5.2.1\\\"\\\"\"");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "_tset_tset_12" + "'", str21, "_tset_tset_12");
    }

    @Test
    public void test1074() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1074");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        org.antlr.v4.tool.Grammar grammar3 = null;
        org.stringtemplate.v4.ST sT4 = null;
        python3Target0.genRecognizerHeaderFile(grammar3, sT4, "");
        org.antlr.v4.codegen.target.Python3Target python3Target7 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray8 = python3Target7.targetCharValueEscape;
        python3Target0.targetCharValueEscape = strArray8;
        boolean boolean10 = python3Target0.supportsOverloadedMethods();
        org.antlr.v4.codegen.CodeGenerator codeGenerator11 = null;
        python3Target0.gen = codeGenerator11;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str14 = python3Target0.getElementName("\"\"\"\"\"\"\"\"\"Context\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test1075() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1075");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!", "hi!" };
        python3Target0.targetCharValueEscape = strArray5;
        java.lang.String[] strArray8 = new java.lang.String[] { "hi!" };
        org.antlr.v4.codegen.target.Python3Target.python3Keywords = strArray8;
        python3Target0.targetCharValueEscape = strArray8;
        java.util.Set<java.lang.String> strSet11 = python3Target0.getBadWords();
        int int12 = python3Target0.getSerializedATNSegmentLimit();
        org.antlr.v4.codegen.target.Python3Target python3Target13 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean14 = python3Target13.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup15 = python3Target13.templates;
        java.lang.String[] strArray18 = new java.lang.String[] { "hi!", "hi!" };
        python3Target13.targetCharValueEscape = strArray18;
        java.lang.String[] strArray21 = new java.lang.String[] { "hi!" };
        org.antlr.v4.codegen.target.Python3Target.python3Keywords = strArray21;
        python3Target13.targetCharValueEscape = strArray21;
        org.antlr.v4.tool.Grammar grammar24 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target25 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str27 = python3Target25.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator28 = null;
        python3Target25.gen = codeGenerator28;
        org.antlr.v4.tool.Grammar grammar30 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target31 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str33 = python3Target31.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.tool.Grammar grammar34 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target35 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean36 = python3Target35.supportsOverloadedMethods();
        java.lang.String str37 = python3Target35.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator38 = null;
        java.lang.String str41 = python3Target35.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator38, "", true);
        java.lang.String str42 = python3Target35.getVersion();
        org.antlr.v4.tool.Grammar grammar43 = null;
        int[] intArray44 = new int[] {};
        java.lang.String[] strArray45 = python3Target35.getTokenTypesAsTargetLabels(grammar43, intArray44);
        java.lang.String[] strArray46 = python3Target31.getTokenTypesAsTargetLabels(grammar34, intArray44);
        java.lang.String[] strArray47 = python3Target25.getTokenTypesAsTargetLabels(grammar30, intArray44);
        java.lang.String[] strArray48 = python3Target13.getTokenTypesAsTargetLabels(grammar24, intArray44);
        org.antlr.v4.codegen.CodeGenerator codeGenerator49 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target50 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator49);
        java.util.Set<java.lang.String> strSet51 = python3Target50.getBadWords();
        java.lang.String str53 = python3Target50.getAltLabelContextStructName("d");
        java.lang.String str55 = python3Target50.getTargetStringLiteralFromString("\"\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator56 = python3Target50.getCodeGenerator();
        org.antlr.v4.tool.Grammar grammar57 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator58 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target59 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator58);
        java.util.Set<java.lang.String> strSet60 = python3Target59.getBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator61 = null;
        python3Target59.gen = codeGenerator61;
        java.lang.String str64 = python3Target59.getAltLabelContextStructName("hi!");
        java.lang.String str67 = python3Target59.getTargetStringLiteralFromString("\"hi!\"", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator68 = null;
        python3Target59.gen = codeGenerator68;
        org.antlr.v4.tool.Grammar grammar70 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target71 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray72 = python3Target71.targetCharValueEscape;
        org.stringtemplate.v4.STGroup sTGroup73 = python3Target71.templates;
        int int74 = python3Target71.getInlineTestSetWordSize();
        org.antlr.v4.codegen.CodeGenerator codeGenerator75 = python3Target71.gen;
        org.antlr.v4.tool.Grammar grammar76 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target77 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str79 = python3Target77.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.tool.Grammar grammar80 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target81 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean82 = python3Target81.supportsOverloadedMethods();
        java.lang.String str83 = python3Target81.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator84 = null;
        java.lang.String str87 = python3Target81.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator84, "", true);
        java.lang.String str88 = python3Target81.getVersion();
        org.antlr.v4.tool.Grammar grammar89 = null;
        int[] intArray90 = new int[] {};
        java.lang.String[] strArray91 = python3Target81.getTokenTypesAsTargetLabels(grammar89, intArray90);
        java.lang.String[] strArray92 = python3Target77.getTokenTypesAsTargetLabels(grammar80, intArray90);
        java.lang.String[] strArray93 = python3Target71.getTokenTypesAsTargetLabels(grammar76, intArray90);
        java.lang.String[] strArray94 = python3Target59.getTokenTypesAsTargetLabels(grammar70, intArray90);
        java.lang.String[] strArray95 = python3Target50.getTokenTypesAsTargetLabels(grammar57, intArray90);
        python3Target13.targetCharValueEscape = strArray95;
        python3Target0.targetCharValueEscape = strArray95;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str99 = python3Target0.getElementListName("_\"\"4.5.2.1\"\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(strSet11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 29 + "'", int12 == 29);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(sTGroup15);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "\"\"\"\"\"\"" + "'", str27, "\"\"\"\"\"\"");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "\"\"\"\"\"\"" + "'", str33, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "4.5.2.1" + "'", str37, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "\"\"" + "'", str41, "\"\"");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "4.5.2.1" + "'", str42, "4.5.2.1");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[]");
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertNotNull(strSet51);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "DContext" + "'", str53, "DContext");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "\"\\\"\\\"\"" + "'", str55, "\"\\\"\\\"\"");
        org.junit.Assert.assertNull(codeGenerator56);
        org.junit.Assert.assertNotNull(strSet60);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "Hi!Context" + "'", str64, "Hi!Context");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "\"\\\"hi!\\\"\"" + "'", str67, "\"\\\"hi!\\\"\"");
        org.junit.Assert.assertNotNull(strArray72);
        org.junit.Assert.assertNull(sTGroup73);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 64 + "'", int74 == 64);
        org.junit.Assert.assertNull(codeGenerator75);
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "\"\"\"\"\"\"" + "'", str79, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "4.5.2.1" + "'", str83, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "\"\"" + "'", str87, "\"\"");
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "4.5.2.1" + "'", str88, "4.5.2.1");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[]");
        org.junit.Assert.assertNotNull(strArray91);
        org.junit.Assert.assertNotNull(strArray92);
        org.junit.Assert.assertNotNull(strArray93);
        org.junit.Assert.assertNotNull(strArray94);
        org.junit.Assert.assertNotNull(strArray95);
    }

    @Test
    public void test1076() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1076");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        org.antlr.v4.tool.Grammar grammar3 = null;
        org.stringtemplate.v4.ST sT4 = null;
        python3Target0.genRecognizerHeaderFile(grammar3, sT4, "");
        org.antlr.v4.codegen.target.Python3Target python3Target7 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray8 = python3Target7.targetCharValueEscape;
        python3Target0.targetCharValueEscape = strArray8;
        python3Target0.addBadWords();
        boolean boolean11 = python3Target0.supportsOverloadedMethods();
        org.antlr.v4.tool.ast.GrammarAST grammarAST12 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str13 = python3Target0.getLoopLabel(grammarAST12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test1077() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1077");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        org.antlr.v4.codegen.CodeGenerator codeGenerator1 = python3Target0.getCodeGenerator();
        boolean boolean2 = python3Target0.templatesExist();
        boolean boolean3 = python3Target0.templatesExist();
        org.stringtemplate.v4.STGroup sTGroup4 = python3Target0.templates;
        org.stringtemplate.v4.STGroup sTGroup5 = python3Target0.templates;
        org.junit.Assert.assertNull(codeGenerator1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(sTGroup4);
        org.junit.Assert.assertNull(sTGroup5);
    }

    @Test
    public void test1078() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1078");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        python3Target0.language = "4.5.2.1";
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = python3Target0.getCodeGenerator();
        org.antlr.v4.codegen.target.Python3Target python3Target4 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str6 = python3Target4.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.tool.Grammar grammar7 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target8 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean9 = python3Target8.supportsOverloadedMethods();
        java.lang.String str10 = python3Target8.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator11 = null;
        java.lang.String str14 = python3Target8.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator11, "", true);
        java.lang.String str15 = python3Target8.getVersion();
        org.antlr.v4.tool.Grammar grammar16 = null;
        int[] intArray17 = new int[] {};
        java.lang.String[] strArray18 = python3Target8.getTokenTypesAsTargetLabels(grammar16, intArray17);
        java.lang.String[] strArray19 = python3Target4.getTokenTypesAsTargetLabels(grammar7, intArray17);
        java.lang.String[] strArray20 = python3Target4.targetCharValueEscape;
        python3Target0.targetCharValueEscape = strArray20;
        boolean boolean22 = python3Target0.supportsOverloadedMethods();
        // The following exception was thrown during execution in test generation
        try {
            org.stringtemplate.v4.STGroup sTGroup23 = python3Target0.loadTemplates();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(codeGenerator3);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\"\"\"\"\"\"" + "'", str6, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "4.5.2.1" + "'", str10, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "\"\"" + "'", str14, "\"\"");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "4.5.2.1" + "'", str15, "4.5.2.1");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[]");
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
    }

    @Test
    public void test1079() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1079");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!", "hi!" };
        python3Target0.targetCharValueEscape = strArray5;
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = null;
        java.lang.String str10 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator7, "", false);
        int int11 = python3Target0.getSerializedATNSegmentLimit();
        java.lang.String str12 = python3Target0.getVersion();
        boolean boolean13 = python3Target0.supportsOverloadedMethods();
        org.antlr.v4.codegen.CodeGenerator codeGenerator14 = python3Target0.getCodeGenerator();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str16 = python3Target0.getListLabel("_tset_12");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 29 + "'", int11 == 29);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "4.5.2.1" + "'", str12, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(codeGenerator14);
    }

    @Test
    public void test1080() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1080");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        org.antlr.v4.tool.Grammar grammar3 = null;
        org.stringtemplate.v4.ST sT4 = null;
        python3Target0.genRecognizerHeaderFile(grammar3, sT4, "");
        python3Target0.language = "Python3";
        java.util.Set<java.lang.String> strSet9 = null;
        python3Target0.badWords = strSet9;
        org.antlr.v4.codegen.CodeGenerator codeGenerator11 = null;
        java.lang.String str14 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator11, "\"Hi!Context\"", false);
        java.lang.String str16 = python3Target0.getListLabel("\"_tset12\"");
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Hi!Context" + "'", str14, "Hi!Context");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "\"_tset12\"" + "'", str16, "\"_tset12\"");
    }

    @Test
    public void test1081() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1081");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        python3Target0.language = "";
        org.antlr.v4.codegen.target.Python3Target python3Target3 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean4 = python3Target3.supportsOverloadedMethods();
        java.lang.String str5 = python3Target3.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = null;
        java.lang.String str9 = python3Target3.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator6, "", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = null;
        python3Target3.gen = codeGenerator10;
        java.lang.String[] strArray19 = new java.lang.String[] { "\"\"\"\"", "\\12", "\"\"", "4.5.2.1", "", "\"\"\"\"", "\"\"" };
        java.util.LinkedHashSet<java.lang.String> strSet20 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet20, strArray19);
        python3Target3.badWords = strSet20;
        python3Target0.badWords = strSet20;
        python3Target0.language = "_tsetPython3";
        int int26 = python3Target0.getSerializedATNSegmentLimit();
        int int27 = python3Target0.getSerializedATNSegmentLimit();
        org.antlr.v4.tool.Rule rule28 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str29 = python3Target0.getRuleFunctionContextStructName(rule28);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "4.5.2.1" + "'", str5, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\"\"" + "'", str9, "\"\"");
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 29 + "'", int26 == 29);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 29 + "'", int27 == 29);
    }

    @Test
    public void test1082() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1082");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray1 = python3Target0.targetCharValueEscape;
        boolean boolean2 = python3Target0.templatesExist();
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test1083() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1083");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        java.lang.String str2 = python3Target0.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = python3Target0.getCodeGenerator();
        org.stringtemplate.v4.STGroup sTGroup4 = null;
        python3Target0.templates = sTGroup4;
        org.stringtemplate.v4.STGroup sTGroup6 = python3Target0.templates;
        java.lang.String[] strArray7 = python3Target0.targetCharValueEscape;
        java.lang.String str10 = python3Target0.getTargetStringLiteralFromString("\"12\"", false);
        org.antlr.v4.codegen.target.Python3Target python3Target11 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean12 = python3Target11.supportsOverloadedMethods();
        java.lang.String str13 = python3Target11.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator14 = python3Target11.getCodeGenerator();
        org.stringtemplate.v4.STGroup sTGroup15 = null;
        python3Target11.templates = sTGroup15;
        org.stringtemplate.v4.STGroup sTGroup17 = python3Target11.templates;
        java.lang.String[] strArray18 = python3Target11.targetCharValueEscape;
        java.util.Set<java.lang.String> strSet19 = python3Target11.badWords;
        java.util.Set<java.lang.String> strSet20 = python3Target11.getBadWords();
        python3Target0.badWords = strSet20;
        int int22 = python3Target0.getSerializedATNSegmentLimit();
        java.lang.String str25 = python3Target0.getTargetStringLiteralFromString("\"tset\\\"\\\"\\\"hi!\\\"\\\"\"", true);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str27 = python3Target0.getElementName("\"_tset\"\\\"Python3\\\"\"\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "4.5.2.1" + "'", str2, "4.5.2.1");
        org.junit.Assert.assertNull(codeGenerator3);
        org.junit.Assert.assertNull(sTGroup6);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\"12\"" + "'", str10, "\"12\"");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "4.5.2.1" + "'", str13, "4.5.2.1");
        org.junit.Assert.assertNull(codeGenerator14);
        org.junit.Assert.assertNull(sTGroup17);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertNotNull(strSet19);
        org.junit.Assert.assertNotNull(strSet20);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 29 + "'", int22 == 29);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "\"\"tset\\\"\\\"\\\"hi!\\\"\\\"\"\"" + "'", str25, "\"\"tset\\\"\\\"\\\"hi!\\\"\\\"\"\"");
    }

    @Test
    public void test1084() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1084");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python3Target1.getBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = null;
        python3Target1.gen = codeGenerator3;
        java.lang.String str6 = python3Target1.getAltLabelContextStructName("hi!");
        java.lang.String[] strArray7 = python3Target1.targetCharValueEscape;
        org.antlr.v4.codegen.target.Python3Target python3Target8 = new org.antlr.v4.codegen.target.Python3Target();
        python3Target8.language = "4.5.2.1";
        org.antlr.v4.codegen.CodeGenerator codeGenerator11 = python3Target8.getCodeGenerator();
        org.antlr.v4.codegen.CodeGenerator codeGenerator12 = python3Target8.gen;
        org.antlr.v4.codegen.CodeGenerator codeGenerator13 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target14 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator13);
        java.lang.String str16 = python3Target14.getTargetStringLiteralFromString("");
        int int17 = python3Target14.getSerializedATNSegmentLimit();
        boolean boolean18 = python3Target14.wantsBaseVisitor();
        org.stringtemplate.v4.STGroup sTGroup19 = python3Target14.loadTemplates();
        python3Target8.templates = sTGroup19;
        org.antlr.v4.codegen.CodeGenerator codeGenerator21 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target22 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator21);
        java.util.Set<java.lang.String> strSet23 = python3Target22.getBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator24 = null;
        python3Target22.gen = codeGenerator24;
        java.lang.String str27 = python3Target22.getAltLabelContextStructName("hi!");
        java.lang.String str30 = python3Target22.getTargetStringLiteralFromString("\"hi!\"", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator31 = null;
        python3Target22.gen = codeGenerator31;
        org.antlr.v4.tool.Grammar grammar33 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target34 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray35 = python3Target34.targetCharValueEscape;
        org.stringtemplate.v4.STGroup sTGroup36 = python3Target34.templates;
        int int37 = python3Target34.getInlineTestSetWordSize();
        org.antlr.v4.codegen.CodeGenerator codeGenerator38 = python3Target34.gen;
        org.antlr.v4.tool.Grammar grammar39 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target40 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str42 = python3Target40.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.tool.Grammar grammar43 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target44 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean45 = python3Target44.supportsOverloadedMethods();
        java.lang.String str46 = python3Target44.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator47 = null;
        java.lang.String str50 = python3Target44.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator47, "", true);
        java.lang.String str51 = python3Target44.getVersion();
        org.antlr.v4.tool.Grammar grammar52 = null;
        int[] intArray53 = new int[] {};
        java.lang.String[] strArray54 = python3Target44.getTokenTypesAsTargetLabels(grammar52, intArray53);
        java.lang.String[] strArray55 = python3Target40.getTokenTypesAsTargetLabels(grammar43, intArray53);
        java.lang.String[] strArray56 = python3Target34.getTokenTypesAsTargetLabels(grammar39, intArray53);
        java.lang.String[] strArray57 = python3Target22.getTokenTypesAsTargetLabels(grammar33, intArray53);
        org.antlr.v4.codegen.target.Python3Target.python3Keywords = strArray57;
        python3Target8.targetCharValueEscape = strArray57;
        python3Target1.targetCharValueEscape = strArray57;
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Hi!Context" + "'", str6, "Hi!Context");
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNull(codeGenerator11);
        org.junit.Assert.assertNull(codeGenerator12);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "\"\"" + "'", str16, "\"\"");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 29 + "'", int17 == 29);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(sTGroup19);
        org.junit.Assert.assertNotNull(strSet23);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "Hi!Context" + "'", str27, "Hi!Context");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "\"\\\"hi!\\\"\"" + "'", str30, "\"\\\"hi!\\\"\"");
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertNull(sTGroup36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 64 + "'", int37 == 64);
        org.junit.Assert.assertNull(codeGenerator38);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "\"\"\"\"\"\"" + "'", str42, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "4.5.2.1" + "'", str46, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "\"\"" + "'", str50, "\"\"");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "4.5.2.1" + "'", str51, "4.5.2.1");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[]");
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertNotNull(strArray55);
        org.junit.Assert.assertNotNull(strArray56);
        org.junit.Assert.assertNotNull(strArray57);
    }

    @Test
    public void test1085() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1085");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python3Target1.getBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = null;
        python3Target1.gen = codeGenerator3;
        java.lang.String str6 = python3Target1.getAltLabelContextStructName("hi!");
        java.lang.String str9 = python3Target1.getTargetStringLiteralFromString("\"hi!\"", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = null;
        python3Target1.gen = codeGenerator10;
        org.antlr.v4.tool.Grammar grammar12 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target13 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray14 = python3Target13.targetCharValueEscape;
        org.stringtemplate.v4.STGroup sTGroup15 = python3Target13.templates;
        int int16 = python3Target13.getInlineTestSetWordSize();
        org.antlr.v4.codegen.CodeGenerator codeGenerator17 = python3Target13.gen;
        org.antlr.v4.tool.Grammar grammar18 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target19 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str21 = python3Target19.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.tool.Grammar grammar22 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target23 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean24 = python3Target23.supportsOverloadedMethods();
        java.lang.String str25 = python3Target23.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator26 = null;
        java.lang.String str29 = python3Target23.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator26, "", true);
        java.lang.String str30 = python3Target23.getVersion();
        org.antlr.v4.tool.Grammar grammar31 = null;
        int[] intArray32 = new int[] {};
        java.lang.String[] strArray33 = python3Target23.getTokenTypesAsTargetLabels(grammar31, intArray32);
        java.lang.String[] strArray34 = python3Target19.getTokenTypesAsTargetLabels(grammar22, intArray32);
        java.lang.String[] strArray35 = python3Target13.getTokenTypesAsTargetLabels(grammar18, intArray32);
        java.lang.String[] strArray36 = python3Target1.getTokenTypesAsTargetLabels(grammar12, intArray32);
        java.lang.String str38 = python3Target1.getAltLabelContextStructName("\"Python3\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator39 = python3Target1.gen;
        org.antlr.v4.codegen.CodeGenerator codeGenerator40 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target41 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator40);
        java.lang.String str43 = python3Target41.getTargetStringLiteralFromString("");
        int int44 = python3Target41.getSerializedATNSegmentLimit();
        boolean boolean45 = python3Target41.wantsBaseVisitor();
        org.stringtemplate.v4.STGroup sTGroup46 = python3Target41.loadTemplates();
        org.antlr.v4.codegen.CodeGenerator codeGenerator47 = python3Target41.gen;
        org.antlr.v4.codegen.target.Python3Target python3Target48 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean49 = python3Target48.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup50 = python3Target48.templates;
        org.antlr.v4.tool.Grammar grammar51 = null;
        org.stringtemplate.v4.ST sT52 = null;
        python3Target48.genRecognizerHeaderFile(grammar51, sT52, "");
        python3Target48.language = "Python3";
        int int57 = python3Target48.getSerializedATNSegmentLimit();
        org.stringtemplate.v4.STGroup sTGroup58 = python3Target48.loadTemplates();
        python3Target41.templates = sTGroup58;
        java.lang.String str60 = python3Target41.getVersion();
        java.util.Set<java.lang.String> strSet61 = python3Target41.getBadWords();
        python3Target1.badWords = strSet61;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str64 = python3Target1.getImplicitTokenLabel("\"d\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Hi!Context" + "'", str6, "Hi!Context");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\"\\\"hi!\\\"\"" + "'", str9, "\"\\\"hi!\\\"\"");
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertNull(sTGroup15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 64 + "'", int16 == 64);
        org.junit.Assert.assertNull(codeGenerator17);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "\"\"\"\"\"\"" + "'", str21, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "4.5.2.1" + "'", str25, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "\"\"" + "'", str29, "\"\"");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "4.5.2.1" + "'", str30, "4.5.2.1");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[]");
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "\"Python3\"Context" + "'", str38, "\"Python3\"Context");
        org.junit.Assert.assertNull(codeGenerator39);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "\"\"" + "'", str43, "\"\"");
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 29 + "'", int44 == 29);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(sTGroup46);
        org.junit.Assert.assertNull(codeGenerator47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNull(sTGroup50);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 29 + "'", int57 == 29);
        org.junit.Assert.assertNotNull(sTGroup58);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "4.5.2.1" + "'", str60, "4.5.2.1");
        org.junit.Assert.assertNotNull(strSet61);
    }

    @Test
    public void test1086() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1086");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        java.lang.String str2 = python3Target0.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = python3Target0.getCodeGenerator();
        org.stringtemplate.v4.STGroup sTGroup4 = null;
        python3Target0.templates = sTGroup4;
        org.stringtemplate.v4.STGroup sTGroup6 = python3Target0.templates;
        java.lang.String[] strArray7 = python3Target0.targetCharValueEscape;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str9 = python3Target0.getImplicitTokenLabel("12");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "4.5.2.1" + "'", str2, "4.5.2.1");
        org.junit.Assert.assertNull(codeGenerator3);
        org.junit.Assert.assertNull(sTGroup6);
        org.junit.Assert.assertNotNull(strArray7);
    }

    @Test
    public void test1087() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1087");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python3Target1.getBadWords();
        java.lang.String str4 = python3Target1.getAltLabelContextStructName("d");
        org.stringtemplate.v4.STGroup sTGroup5 = python3Target1.getTemplates();
        boolean boolean6 = python3Target1.supportsOverloadedMethods();
        java.util.Set<java.lang.String> strSet7 = python3Target1.badWords;
        java.lang.String str8 = python3Target1.language;
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "DContext" + "'", str4, "DContext");
        org.junit.Assert.assertNotNull(sTGroup5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(strSet7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Python3" + "'", str8, "Python3");
    }

    @Test
    public void test1088() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1088");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        java.lang.String str2 = python3Target0.getVersion();
        java.lang.String str3 = python3Target0.getVersion();
        org.antlr.v4.tool.ast.GrammarAST grammarAST4 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean5 = python3Target0.grammarSymbolCausesIssueInGeneratedCode(grammarAST4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "4.5.2.1" + "'", str2, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "4.5.2.1" + "'", str3, "4.5.2.1");
    }

    @Test
    public void test1089() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1089");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python3Target1.getBadWords();
        org.antlr.v4.codegen.target.Python3Target python3Target3 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str5 = python3Target3.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.codegen.target.Python3Target python3Target6 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean7 = python3Target6.supportsOverloadedMethods();
        java.util.Set<java.lang.String> strSet8 = python3Target6.badWords;
        python3Target3.badWords = strSet8;
        python3Target1.badWords = strSet8;
        java.util.Set<java.lang.String> strSet11 = python3Target1.badWords;
        java.lang.String str12 = python3Target1.language;
        boolean boolean13 = python3Target1.templatesExist();
        org.antlr.v4.tool.ast.GrammarAST grammarAST14 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str15 = python3Target1.getLoopCounter(grammarAST14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "\"\"\"\"\"\"" + "'", str5, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertNotNull(strSet11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Python3" + "'", str12, "Python3");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
    }

    @Test
    public void test1090() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1090");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python3Target1.getBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = null;
        python3Target1.gen = codeGenerator3;
        java.lang.String str6 = python3Target1.getAltLabelContextStructName("hi!");
        java.lang.String str9 = python3Target1.getTargetStringLiteralFromString("\"hi!\"", true);
        java.lang.String str11 = python3Target1.getAltLabelContextStructName("\"\"\"\"\"\"\"\"");
        int int12 = python3Target1.getInlineTestSetWordSize();
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Hi!Context" + "'", str6, "Hi!Context");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\"\\\"hi!\\\"\"" + "'", str9, "\"\\\"hi!\\\"\"");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "\"\"\"\"\"\"\"\"Context" + "'", str11, "\"\"\"\"\"\"\"\"Context");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 64 + "'", int12 == 64);
    }

    @Test
    public void test1091() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1091");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray1 = python3Target0.targetCharValueEscape;
        java.lang.String str2 = python3Target0.language;
        int int3 = python3Target0.getSerializedATNSegmentLimit();
        org.antlr.v4.codegen.CodeGenerator codeGenerator4 = null;
        python3Target0.gen = codeGenerator4;
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target7 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator6);
        java.util.Set<java.lang.String> strSet8 = python3Target7.getBadWords();
        java.lang.String str10 = python3Target7.getAltLabelContextStructName("d");
        org.stringtemplate.v4.STGroup sTGroup11 = python3Target7.getTemplates();
        python3Target0.templates = sTGroup11;
        org.antlr.v4.codegen.CodeGenerator codeGenerator13 = python3Target0.gen;
        int int14 = python3Target0.getSerializedATNSegmentLimit();
        java.lang.String str16 = python3Target0.getImplicitSetLabel("\"\"\\\"\\\"\\\"\\\"\\\"\\\"Context\"\"");
        java.lang.String str17 = python3Target0.getLanguage();
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 29 + "'", int3 == 29);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "DContext" + "'", str10, "DContext");
        org.junit.Assert.assertNotNull(sTGroup11);
        org.junit.Assert.assertNull(codeGenerator13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 29 + "'", int14 == 29);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "_tset\"\"\\\"\\\"\\\"\\\"\\\"\\\"Context\"\"" + "'", str16, "_tset\"\"\\\"\\\"\\\"\\\"\\\"\\\"Context\"\"");
        org.junit.Assert.assertNull(str17);
    }

    @Test
    public void test1092() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1092");
        java.lang.String str1 = org.stringtemplate.v4.StringRenderer.escapeHTML("\"\\\"\\\\\\\"Python3\\\\\\\"\\\"\"");
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "\"\\\"\\\\\\\"Python3\\\\\\\"\\\"\"" + "'", str1, "\"\\\"\\\\\\\"Python3\\\\\\\"\\\"\"");
    }

    @Test
    public void test1093() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1093");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        python3Target0.language = "4.5.2.1";
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = python3Target0.getCodeGenerator();
        org.antlr.v4.codegen.CodeGenerator codeGenerator4 = python3Target0.gen;
        java.lang.String str5 = python3Target0.getLanguage();
        python3Target0.addBadWords();
        java.lang.String str8 = python3Target0.encodeIntAsCharEscape(10);
        java.lang.String str9 = python3Target0.getVersion();
        java.util.Set<java.lang.String> strSet10 = python3Target0.badWords;
        org.antlr.v4.codegen.target.Python3Target python3Target11 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean12 = python3Target11.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup13 = python3Target11.templates;
        java.lang.String[] strArray16 = new java.lang.String[] { "hi!", "hi!" };
        python3Target11.targetCharValueEscape = strArray16;
        java.lang.String[] strArray19 = new java.lang.String[] { "hi!" };
        org.antlr.v4.codegen.target.Python3Target.python3Keywords = strArray19;
        python3Target11.targetCharValueEscape = strArray19;
        org.antlr.v4.codegen.target.Python3Target python3Target22 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean23 = python3Target22.supportsOverloadedMethods();
        java.lang.String str24 = python3Target22.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator25 = null;
        java.lang.String str28 = python3Target22.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator25, "", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator29 = null;
        python3Target22.gen = codeGenerator29;
        java.lang.String[] strArray38 = new java.lang.String[] { "\"\"\"\"", "\\12", "\"\"", "4.5.2.1", "", "\"\"\"\"", "\"\"" };
        java.util.LinkedHashSet<java.lang.String> strSet39 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet39, strArray38);
        python3Target22.badWords = strSet39;
        python3Target11.badWords = strSet39;
        java.lang.String[] strArray43 = python3Target11.targetCharValueEscape;
        python3Target0.targetCharValueEscape = strArray43;
        org.antlr.v4.tool.Grammar grammar45 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str47 = python3Target0.getTokenTypeAsTargetLabel(grammar45, (int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(codeGenerator3);
        org.junit.Assert.assertNull(codeGenerator4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "4.5.2.1" + "'", str5, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\\12" + "'", str8, "\\12");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "4.5.2.1" + "'", str9, "4.5.2.1");
        org.junit.Assert.assertNotNull(strSet10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(sTGroup13);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "4.5.2.1" + "'", str24, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "\"\"" + "'", str28, "\"\"");
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(strArray43);
    }

    @Test
    public void test1094() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1094");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        org.antlr.v4.tool.Grammar grammar3 = null;
        org.stringtemplate.v4.ST sT4 = null;
        python3Target0.genRecognizerHeaderFile(grammar3, sT4, "");
        python3Target0.language = "Python3";
        java.util.Set<java.lang.String> strSet9 = null;
        python3Target0.badWords = strSet9;
        boolean boolean11 = python3Target0.wantsBaseVisitor();
        java.lang.String str12 = python3Target0.language;
        java.lang.String str13 = python3Target0.language;
        org.antlr.v4.tool.Grammar grammar14 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str16 = python3Target0.getTokenTypeAsTargetLabel(grammar14, (int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Python3" + "'", str12, "Python3");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Python3" + "'", str13, "Python3");
    }

    @Test
    public void test1095() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1095");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.lang.String str3 = python3Target1.getTargetStringLiteralFromString("");
        int int4 = python3Target1.getSerializedATNSegmentLimit();
        java.lang.String str5 = python3Target1.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup6 = python3Target1.loadTemplates();
        org.stringtemplate.v4.STGroup sTGroup7 = python3Target1.getTemplates();
        java.lang.String str9 = python3Target1.getListLabel("_#");
        int int10 = python3Target1.getInlineTestSetWordSize();
        org.antlr.v4.tool.ast.GrammarAST grammarAST11 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean12 = python3Target1.grammarSymbolCausesIssueInGeneratedCode(grammarAST11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "\"\"" + "'", str3, "\"\"");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 29 + "'", int4 == 29);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Python3" + "'", str5, "Python3");
        org.junit.Assert.assertNotNull(sTGroup6);
        org.junit.Assert.assertNotNull(sTGroup7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "_#" + "'", str9, "_#");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 64 + "'", int10 == 64);
    }

    @Test
    public void test1096() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1096");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        org.antlr.v4.tool.Grammar grammar3 = null;
        org.stringtemplate.v4.ST sT4 = null;
        python3Target0.genRecognizerHeaderFile(grammar3, sT4, "");
        python3Target0.language = "Python3";
        int int9 = python3Target0.getSerializedATNSegmentLimit();
        java.lang.String str11 = python3Target0.getListLabel("_tsetPython3");
        org.antlr.v4.tool.ast.GrammarAST grammarAST12 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str13 = python3Target0.getLoopCounter(grammarAST12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 29 + "'", int9 == 29);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "_tsetPython3" + "'", str11, "_tsetPython3");
    }

    @Test
    public void test1097() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1097");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        org.antlr.v4.tool.Grammar grammar3 = null;
        org.stringtemplate.v4.ST sT4 = null;
        python3Target0.genRecognizerHeaderFile(grammar3, sT4, "");
        python3Target0.language = "Python3";
        int int9 = python3Target0.getSerializedATNSegmentLimit();
        java.lang.String str11 = python3Target0.getListLabel("_tsetPython3");
        org.stringtemplate.v4.STGroup sTGroup12 = python3Target0.loadTemplates();
        int int13 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str16 = python3Target0.getTargetStringLiteralFromString("\"\"_tset12\"\"", true);
        java.lang.String str18 = python3Target0.getImplicitSetLabel("\\12");
        python3Target0.addBadWords();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 29 + "'", int9 == 29);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "_tsetPython3" + "'", str11, "_tsetPython3");
        org.junit.Assert.assertNotNull(sTGroup12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 64 + "'", int13 == 64);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "\"\"\"_tset12\"\"\"" + "'", str16, "\"\"\"_tset12\"\"\"");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "_tset\\12" + "'", str18, "_tset\\12");
    }

    @Test
    public void test1098() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1098");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        java.util.Set<java.lang.String> strSet2 = python3Target0.badWords;
        int int3 = python3Target0.getSerializedATNSegmentLimit();
        org.antlr.v4.tool.Grammar grammar4 = null;
        org.stringtemplate.v4.ST sT5 = null;
        python3Target0.genRecognizerHeaderFile(grammar4, sT5, "\"Python3\"Context");
        boolean boolean8 = python3Target0.supportsOverloadedMethods();
        org.antlr.v4.tool.Rule rule9 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str10 = python3Target0.getRuleFunctionContextStructName(rule9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 29 + "'", int3 == 29);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test1099() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1099");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        org.antlr.v4.tool.Grammar grammar3 = null;
        org.stringtemplate.v4.ST sT4 = null;
        python3Target0.genRecognizerHeaderFile(grammar3, sT4, "");
        python3Target0.language = "Python3";
        java.util.Set<java.lang.String> strSet9 = null;
        python3Target0.badWords = strSet9;
        boolean boolean11 = python3Target0.wantsBaseVisitor();
        java.lang.String str12 = python3Target0.getVersion();
        boolean boolean13 = python3Target0.supportsOverloadedMethods();
        java.lang.Class<?> wildcardClass14 = python3Target0.getClass();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "4.5.2.1" + "'", str12, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test1100() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1100");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str2 = python3Target0.getTargetStringLiteralFromString("\"\"\"\"");
        java.lang.String str4 = python3Target0.getTargetStringLiteralFromString("");
        int int5 = python3Target0.getSerializedATNSegmentLimit();
        org.antlr.v4.codegen.target.Python3Target python3Target6 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray7 = python3Target6.targetCharValueEscape;
        org.stringtemplate.v4.STGroup sTGroup8 = python3Target6.templates;
        int int9 = python3Target6.getInlineTestSetWordSize();
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = python3Target6.gen;
        org.antlr.v4.tool.Grammar grammar11 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target12 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str14 = python3Target12.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.tool.Grammar grammar15 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target16 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean17 = python3Target16.supportsOverloadedMethods();
        java.lang.String str18 = python3Target16.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator19 = null;
        java.lang.String str22 = python3Target16.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator19, "", true);
        java.lang.String str23 = python3Target16.getVersion();
        org.antlr.v4.tool.Grammar grammar24 = null;
        int[] intArray25 = new int[] {};
        java.lang.String[] strArray26 = python3Target16.getTokenTypesAsTargetLabels(grammar24, intArray25);
        java.lang.String[] strArray27 = python3Target12.getTokenTypesAsTargetLabels(grammar15, intArray25);
        java.lang.String[] strArray28 = python3Target6.getTokenTypesAsTargetLabels(grammar11, intArray25);
        python3Target0.targetCharValueEscape = strArray28;
        boolean boolean30 = python3Target0.wantsBaseListener();
        org.antlr.v4.codegen.CodeGenerator codeGenerator31 = python3Target0.getCodeGenerator();
        // The following exception was thrown during execution in test generation
        try {
            org.stringtemplate.v4.STGroup sTGroup32 = python3Target0.getTemplates();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "\"\"\"\"\"\"" + "'", str2, "\"\"\"\"\"\"");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "\"\"" + "'", str4, "\"\"");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 29 + "'", int5 == 29);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNull(sTGroup8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 64 + "'", int9 == 64);
        org.junit.Assert.assertNull(codeGenerator10);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "\"\"\"\"\"\"" + "'", str14, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "4.5.2.1" + "'", str18, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "\"\"" + "'", str22, "\"\"");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "4.5.2.1" + "'", str23, "4.5.2.1");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[]");
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNull(codeGenerator31);
    }

    @Test
    public void test1101() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1101");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        python3Target0.language = "4.5.2.1";
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = python3Target0.getCodeGenerator();
        org.antlr.v4.codegen.CodeGenerator codeGenerator4 = python3Target0.gen;
        org.antlr.v4.codegen.CodeGenerator codeGenerator5 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target6 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator5);
        java.lang.String str8 = python3Target6.getTargetStringLiteralFromString("");
        int int9 = python3Target6.getSerializedATNSegmentLimit();
        boolean boolean10 = python3Target6.wantsBaseVisitor();
        org.stringtemplate.v4.STGroup sTGroup11 = python3Target6.loadTemplates();
        python3Target0.templates = sTGroup11;
        java.lang.String str13 = python3Target0.language;
        org.antlr.v4.codegen.target.Python3Target python3Target14 = new org.antlr.v4.codegen.target.Python3Target();
        python3Target14.language = "";
        org.antlr.v4.codegen.target.Python3Target python3Target17 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean18 = python3Target17.supportsOverloadedMethods();
        java.lang.String str19 = python3Target17.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator20 = null;
        java.lang.String str23 = python3Target17.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator20, "", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator24 = null;
        python3Target17.gen = codeGenerator24;
        java.lang.String[] strArray33 = new java.lang.String[] { "\"\"\"\"", "\\12", "\"\"", "4.5.2.1", "", "\"\"\"\"", "\"\"" };
        java.util.LinkedHashSet<java.lang.String> strSet34 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet34, strArray33);
        python3Target17.badWords = strSet34;
        python3Target14.badWords = strSet34;
        python3Target14.addBadWords();
        java.util.Set<java.lang.String> strSet39 = python3Target14.badWords;
        python3Target0.badWords = strSet39;
        java.util.Set<java.lang.String> strSet41 = python3Target0.getBadWords();
        org.antlr.v4.codegen.model.RuleFunction ruleFunction42 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str43 = python3Target0.getRuleFunctionContextStructName(ruleFunction42);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(codeGenerator3);
        org.junit.Assert.assertNull(codeGenerator4);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\"\"" + "'", str8, "\"\"");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 29 + "'", int9 == 29);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(sTGroup11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "4.5.2.1" + "'", str13, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "4.5.2.1" + "'", str19, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "\"\"" + "'", str23, "\"\"");
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(strSet39);
        org.junit.Assert.assertNotNull(strSet41);
    }

    @Test
    public void test1102() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1102");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray1 = python3Target0.targetCharValueEscape;
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        int int3 = python3Target0.getInlineTestSetWordSize();
        org.antlr.v4.codegen.CodeGenerator codeGenerator4 = python3Target0.gen;
        org.antlr.v4.tool.Grammar grammar5 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target6 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str8 = python3Target6.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.tool.Grammar grammar9 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target10 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean11 = python3Target10.supportsOverloadedMethods();
        java.lang.String str12 = python3Target10.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator13 = null;
        java.lang.String str16 = python3Target10.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator13, "", true);
        java.lang.String str17 = python3Target10.getVersion();
        org.antlr.v4.tool.Grammar grammar18 = null;
        int[] intArray19 = new int[] {};
        java.lang.String[] strArray20 = python3Target10.getTokenTypesAsTargetLabels(grammar18, intArray19);
        java.lang.String[] strArray21 = python3Target6.getTokenTypesAsTargetLabels(grammar9, intArray19);
        java.lang.String[] strArray22 = python3Target0.getTokenTypesAsTargetLabels(grammar5, intArray19);
        org.antlr.v4.codegen.CodeGenerator codeGenerator23 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target24 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator23);
        java.util.Set<java.lang.String> strSet25 = python3Target24.getBadWords();
        org.antlr.v4.codegen.target.Python3Target python3Target26 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str28 = python3Target26.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.codegen.target.Python3Target python3Target29 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean30 = python3Target29.supportsOverloadedMethods();
        java.util.Set<java.lang.String> strSet31 = python3Target29.badWords;
        python3Target26.badWords = strSet31;
        python3Target24.badWords = strSet31;
        java.util.Set<java.lang.String> strSet34 = python3Target24.badWords;
        java.lang.String str36 = python3Target24.getAltLabelContextStructName("d");
        org.antlr.v4.tool.Grammar grammar37 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target38 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean39 = python3Target38.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup40 = python3Target38.templates;
        org.antlr.v4.tool.Grammar grammar41 = null;
        org.stringtemplate.v4.ST sT42 = null;
        python3Target38.genRecognizerHeaderFile(grammar41, sT42, "");
        boolean boolean45 = python3Target38.supportsOverloadedMethods();
        python3Target38.language = "\"\\12\"";
        org.antlr.v4.tool.Grammar grammar48 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator49 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target50 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator49);
        java.util.Set<java.lang.String> strSet51 = python3Target50.getBadWords();
        java.lang.String str53 = python3Target50.getAltLabelContextStructName("d");
        java.lang.String str55 = python3Target50.getTargetStringLiteralFromString("\"\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator56 = python3Target50.getCodeGenerator();
        org.antlr.v4.tool.Grammar grammar57 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator58 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target59 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator58);
        java.util.Set<java.lang.String> strSet60 = python3Target59.getBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator61 = null;
        python3Target59.gen = codeGenerator61;
        java.lang.String str64 = python3Target59.getAltLabelContextStructName("hi!");
        java.lang.String str67 = python3Target59.getTargetStringLiteralFromString("\"hi!\"", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator68 = null;
        python3Target59.gen = codeGenerator68;
        org.antlr.v4.tool.Grammar grammar70 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target71 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray72 = python3Target71.targetCharValueEscape;
        org.stringtemplate.v4.STGroup sTGroup73 = python3Target71.templates;
        int int74 = python3Target71.getInlineTestSetWordSize();
        org.antlr.v4.codegen.CodeGenerator codeGenerator75 = python3Target71.gen;
        org.antlr.v4.tool.Grammar grammar76 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target77 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str79 = python3Target77.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.tool.Grammar grammar80 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target81 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean82 = python3Target81.supportsOverloadedMethods();
        java.lang.String str83 = python3Target81.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator84 = null;
        java.lang.String str87 = python3Target81.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator84, "", true);
        java.lang.String str88 = python3Target81.getVersion();
        org.antlr.v4.tool.Grammar grammar89 = null;
        int[] intArray90 = new int[] {};
        java.lang.String[] strArray91 = python3Target81.getTokenTypesAsTargetLabels(grammar89, intArray90);
        java.lang.String[] strArray92 = python3Target77.getTokenTypesAsTargetLabels(grammar80, intArray90);
        java.lang.String[] strArray93 = python3Target71.getTokenTypesAsTargetLabels(grammar76, intArray90);
        java.lang.String[] strArray94 = python3Target59.getTokenTypesAsTargetLabels(grammar70, intArray90);
        java.lang.String[] strArray95 = python3Target50.getTokenTypesAsTargetLabels(grammar57, intArray90);
        java.lang.String[] strArray96 = python3Target38.getTokenTypesAsTargetLabels(grammar48, intArray90);
        java.lang.String[] strArray97 = python3Target24.getTokenTypesAsTargetLabels(grammar37, intArray90);
        python3Target0.targetCharValueEscape = strArray97;
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 64 + "'", int3 == 64);
        org.junit.Assert.assertNull(codeGenerator4);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\"\"\"\"\"\"" + "'", str8, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "4.5.2.1" + "'", str12, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "\"\"" + "'", str16, "\"\"");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "4.5.2.1" + "'", str17, "4.5.2.1");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[]");
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertNotNull(strSet25);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "\"\"\"\"\"\"" + "'", str28, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(strSet31);
        org.junit.Assert.assertNotNull(strSet34);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "DContext" + "'", str36, "DContext");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNull(sTGroup40);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(strSet51);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "DContext" + "'", str53, "DContext");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "\"\\\"\\\"\"" + "'", str55, "\"\\\"\\\"\"");
        org.junit.Assert.assertNull(codeGenerator56);
        org.junit.Assert.assertNotNull(strSet60);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "Hi!Context" + "'", str64, "Hi!Context");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "\"\\\"hi!\\\"\"" + "'", str67, "\"\\\"hi!\\\"\"");
        org.junit.Assert.assertNotNull(strArray72);
        org.junit.Assert.assertNull(sTGroup73);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 64 + "'", int74 == 64);
        org.junit.Assert.assertNull(codeGenerator75);
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "\"\"\"\"\"\"" + "'", str79, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "4.5.2.1" + "'", str83, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "\"\"" + "'", str87, "\"\"");
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "4.5.2.1" + "'", str88, "4.5.2.1");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[]");
        org.junit.Assert.assertNotNull(strArray91);
        org.junit.Assert.assertNotNull(strArray92);
        org.junit.Assert.assertNotNull(strArray93);
        org.junit.Assert.assertNotNull(strArray94);
        org.junit.Assert.assertNotNull(strArray95);
        org.junit.Assert.assertNotNull(strArray96);
        org.junit.Assert.assertNotNull(strArray97);
    }

    @Test
    public void test1103() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1103");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python3Target1.getBadWords();
        org.antlr.v4.codegen.target.Python3Target python3Target3 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str5 = python3Target3.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.codegen.target.Python3Target python3Target6 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean7 = python3Target6.supportsOverloadedMethods();
        java.util.Set<java.lang.String> strSet8 = python3Target6.badWords;
        python3Target3.badWords = strSet8;
        python3Target1.badWords = strSet8;
        java.util.Set<java.lang.String> strSet11 = python3Target1.badWords;
        org.antlr.v4.codegen.CodeGenerator codeGenerator12 = python3Target1.getCodeGenerator();
        org.antlr.v4.tool.Grammar grammar13 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target14 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean15 = python3Target14.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup16 = python3Target14.templates;
        org.antlr.v4.tool.Grammar grammar17 = null;
        org.stringtemplate.v4.ST sT18 = null;
        python3Target14.genRecognizerHeaderFile(grammar17, sT18, "");
        python3Target14.language = "Python3";
        java.util.Set<java.lang.String> strSet23 = null;
        python3Target14.badWords = strSet23;
        org.antlr.v4.codegen.CodeGenerator codeGenerator25 = null;
        java.lang.String str28 = python3Target14.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator25, "\"Hi!Context\"", false);
        java.lang.String str30 = python3Target14.getListLabel("Python3");
        java.lang.String str32 = python3Target14.getTargetStringLiteralFromString("\\0");
        org.antlr.v4.tool.Grammar grammar33 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target34 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str36 = python3Target34.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.tool.Grammar grammar37 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target38 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean39 = python3Target38.supportsOverloadedMethods();
        java.lang.String str40 = python3Target38.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator41 = null;
        java.lang.String str44 = python3Target38.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator41, "", true);
        java.lang.String str45 = python3Target38.getVersion();
        org.antlr.v4.tool.Grammar grammar46 = null;
        int[] intArray47 = new int[] {};
        java.lang.String[] strArray48 = python3Target38.getTokenTypesAsTargetLabels(grammar46, intArray47);
        java.lang.String[] strArray49 = python3Target34.getTokenTypesAsTargetLabels(grammar37, intArray47);
        java.lang.String[] strArray50 = python3Target14.getTokenTypesAsTargetLabels(grammar33, intArray47);
        java.lang.String[] strArray51 = python3Target1.getTokenTypesAsTargetLabels(grammar13, intArray47);
        boolean boolean52 = python3Target1.templatesExist();
        python3Target1.addBadWords();
        org.antlr.v4.tool.ast.GrammarAST grammarAST54 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean55 = python3Target1.visibleGrammarSymbolCausesIssueInGeneratedCode(grammarAST54);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "\"\"\"\"\"\"" + "'", str5, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertNotNull(strSet11);
        org.junit.Assert.assertNull(codeGenerator12);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(sTGroup16);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "Hi!Context" + "'", str28, "Hi!Context");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "Python3" + "'", str30, "Python3");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "\"\\0\"" + "'", str32, "\"\\0\"");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "\"\"\"\"\"\"" + "'", str36, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "4.5.2.1" + "'", str40, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "\"\"" + "'", str44, "\"\"");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "4.5.2.1" + "'", str45, "4.5.2.1");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[]");
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertNotNull(strArray49);
        org.junit.Assert.assertNotNull(strArray50);
        org.junit.Assert.assertNotNull(strArray51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
    }

    @Test
    public void test1104() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1104");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python3Target1.getBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = null;
        python3Target1.gen = codeGenerator3;
        java.lang.String str6 = python3Target1.getAltLabelContextStructName("hi!");
        java.lang.String str9 = python3Target1.getTargetStringLiteralFromString("\"hi!\"", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = null;
        python3Target1.gen = codeGenerator10;
        org.antlr.v4.tool.Grammar grammar12 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target13 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray14 = python3Target13.targetCharValueEscape;
        org.stringtemplate.v4.STGroup sTGroup15 = python3Target13.templates;
        int int16 = python3Target13.getInlineTestSetWordSize();
        org.antlr.v4.codegen.CodeGenerator codeGenerator17 = python3Target13.gen;
        org.antlr.v4.tool.Grammar grammar18 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target19 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str21 = python3Target19.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.tool.Grammar grammar22 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target23 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean24 = python3Target23.supportsOverloadedMethods();
        java.lang.String str25 = python3Target23.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator26 = null;
        java.lang.String str29 = python3Target23.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator26, "", true);
        java.lang.String str30 = python3Target23.getVersion();
        org.antlr.v4.tool.Grammar grammar31 = null;
        int[] intArray32 = new int[] {};
        java.lang.String[] strArray33 = python3Target23.getTokenTypesAsTargetLabels(grammar31, intArray32);
        java.lang.String[] strArray34 = python3Target19.getTokenTypesAsTargetLabels(grammar22, intArray32);
        java.lang.String[] strArray35 = python3Target13.getTokenTypesAsTargetLabels(grammar18, intArray32);
        java.lang.String[] strArray36 = python3Target1.getTokenTypesAsTargetLabels(grammar12, intArray32);
        java.lang.String[] strArray37 = python3Target1.targetCharValueEscape;
        java.lang.String str39 = python3Target1.getImplicitRuleLabel("#");
        org.antlr.v4.codegen.target.Python3Target python3Target40 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean41 = python3Target40.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup42 = python3Target40.templates;
        org.antlr.v4.tool.Grammar grammar43 = null;
        org.stringtemplate.v4.ST sT44 = null;
        python3Target40.genRecognizerHeaderFile(grammar43, sT44, "");
        python3Target40.language = "Python3";
        java.util.Set<java.lang.String> strSet49 = null;
        python3Target40.badWords = strSet49;
        boolean boolean51 = python3Target40.wantsBaseVisitor();
        org.antlr.v4.codegen.target.Python3Target python3Target52 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean53 = python3Target52.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup54 = python3Target52.templates;
        java.lang.String[] strArray57 = new java.lang.String[] { "hi!", "hi!" };
        python3Target52.targetCharValueEscape = strArray57;
        org.antlr.v4.codegen.CodeGenerator codeGenerator59 = null;
        java.lang.String str62 = python3Target52.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator59, "", false);
        java.util.Set<java.lang.String> strSet63 = python3Target52.badWords;
        java.util.Set<java.lang.String> strSet64 = python3Target52.badWords;
        python3Target40.badWords = strSet64;
        python3Target1.badWords = strSet64;
        org.antlr.v4.tool.Grammar grammar67 = null;
        org.stringtemplate.v4.ST sT68 = null;
        // The following exception was thrown during execution in test generation
        try {
            python3Target1.genListenerFile(grammar67, sT68);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Hi!Context" + "'", str6, "Hi!Context");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\"\\\"hi!\\\"\"" + "'", str9, "\"\\\"hi!\\\"\"");
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertNull(sTGroup15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 64 + "'", int16 == 64);
        org.junit.Assert.assertNull(codeGenerator17);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "\"\"\"\"\"\"" + "'", str21, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "4.5.2.1" + "'", str25, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "\"\"" + "'", str29, "\"\"");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "4.5.2.1" + "'", str30, "4.5.2.1");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[]");
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "_#" + "'", str39, "_#");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNull(sTGroup42);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNull(sTGroup54);
        org.junit.Assert.assertNotNull(strArray57);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "" + "'", str62, "");
        org.junit.Assert.assertNotNull(strSet63);
        org.junit.Assert.assertNotNull(strSet64);
    }

    @Test
    public void test1105() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1105");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray1 = python3Target0.targetCharValueEscape;
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = null;
        java.lang.String str6 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator3, "\"\\12\"", false);
        java.lang.String str7 = python3Target0.getLanguage();
        java.lang.String str9 = python3Target0.getTargetStringLiteralFromString("Hi!Context");
        boolean boolean10 = python3Target0.templatesExist();
        org.antlr.v4.codegen.CodeGenerator codeGenerator11 = python3Target0.getCodeGenerator();
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "12" + "'", str6, "12");
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\"Hi!Context\"" + "'", str9, "\"Hi!Context\"");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(codeGenerator11);
    }

    @Test
    public void test1106() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1106");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str2 = python3Target0.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = null;
        python3Target0.gen = codeGenerator3;
        java.lang.String str5 = python3Target0.getVersion();
        org.antlr.v4.codegen.target.Python3Target python3Target6 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean7 = python3Target6.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup8 = python3Target6.templates;
        org.antlr.v4.tool.Grammar grammar9 = null;
        org.stringtemplate.v4.ST sT10 = null;
        python3Target6.genRecognizerHeaderFile(grammar9, sT10, "");
        python3Target6.language = "Python3";
        int int15 = python3Target6.getSerializedATNSegmentLimit();
        org.stringtemplate.v4.STGroup sTGroup16 = python3Target6.loadTemplates();
        python3Target0.templates = sTGroup16;
        java.util.Set<java.lang.String> strSet18 = python3Target0.getBadWords();
        boolean boolean19 = python3Target0.supportsOverloadedMethods();
        java.lang.String str21 = python3Target0.getAltLabelContextStructName("_\"\"\\\"\\\"hi!\\\"\\\"\"\"");
        org.antlr.v4.tool.ast.GrammarAST grammarAST22 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean23 = python3Target0.grammarSymbolCausesIssueInGeneratedCode(grammarAST22);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "\"\"\"\"\"\"" + "'", str2, "\"\"\"\"\"\"");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "4.5.2.1" + "'", str5, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(sTGroup8);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 29 + "'", int15 == 29);
        org.junit.Assert.assertNotNull(sTGroup16);
        org.junit.Assert.assertNotNull(strSet18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "_\"\"\\\"\\\"hi!\\\"\\\"\"\"Context" + "'", str21, "_\"\"\\\"\\\"hi!\\\"\\\"\"\"Context");
    }

    @Test
    public void test1107() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1107");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!", "hi!" };
        python3Target0.targetCharValueEscape = strArray5;
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = null;
        java.lang.String str10 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator7, "", false);
        org.antlr.v4.tool.Grammar grammar11 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target12 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str14 = python3Target12.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.tool.Grammar grammar15 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target16 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean17 = python3Target16.supportsOverloadedMethods();
        java.lang.String str18 = python3Target16.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator19 = null;
        java.lang.String str22 = python3Target16.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator19, "", true);
        java.lang.String str23 = python3Target16.getVersion();
        org.antlr.v4.tool.Grammar grammar24 = null;
        int[] intArray25 = new int[] {};
        java.lang.String[] strArray26 = python3Target16.getTokenTypesAsTargetLabels(grammar24, intArray25);
        java.lang.String[] strArray27 = python3Target12.getTokenTypesAsTargetLabels(grammar15, intArray25);
        java.lang.String[] strArray28 = python3Target0.getTokenTypesAsTargetLabels(grammar11, intArray25);
        java.lang.Class<?> wildcardClass29 = python3Target0.getClass();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "\"\"\"\"\"\"" + "'", str14, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "4.5.2.1" + "'", str18, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "\"\"" + "'", str22, "\"\"");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "4.5.2.1" + "'", str23, "4.5.2.1");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[]");
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertNotNull(wildcardClass29);
    }

    @Test
    public void test1108() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1108");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        org.antlr.v4.tool.Grammar grammar3 = null;
        org.stringtemplate.v4.ST sT4 = null;
        python3Target0.genRecognizerHeaderFile(grammar3, sT4, "");
        python3Target0.language = "Python3";
        java.util.Set<java.lang.String> strSet9 = null;
        python3Target0.badWords = strSet9;
        boolean boolean11 = python3Target0.wantsBaseVisitor();
        java.lang.String[] strArray13 = new java.lang.String[] { "12Context" };
        java.util.LinkedHashSet<java.lang.String> strSet14 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet14, strArray13);
        python3Target0.badWords = strSet14;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str18 = python3Target0.getElementListName("\"1\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
    }

    @Test
    public void test1109() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1109");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        java.lang.String str2 = python3Target0.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = null;
        java.lang.String str6 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator3, "", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = null;
        python3Target0.gen = codeGenerator7;
        java.lang.String[] strArray16 = new java.lang.String[] { "\"\"\"\"", "\\12", "\"\"", "4.5.2.1", "", "\"\"\"\"", "\"\"" };
        java.util.LinkedHashSet<java.lang.String> strSet17 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet17, strArray16);
        python3Target0.badWords = strSet17;
        org.antlr.v4.tool.Grammar grammar20 = null;
        org.stringtemplate.v4.ST sT21 = null;
        python3Target0.genRecognizerHeaderFile(grammar20, sT21, "\"\"");
        java.lang.String str25 = python3Target0.encodeIntAsCharEscape((int) (byte) 10);
        java.lang.String str26 = python3Target0.language;
        java.util.Set<java.lang.String> strSet27 = python3Target0.getBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator28 = null;
        java.lang.String str31 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator28, "", false);
        java.util.Set<java.lang.String> strSet32 = python3Target0.badWords;
        boolean boolean33 = python3Target0.supportsOverloadedMethods();
        java.lang.Class<?> wildcardClass34 = python3Target0.getClass();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "4.5.2.1" + "'", str2, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\"\"" + "'", str6, "\"\"");
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "\\12" + "'", str25, "\\12");
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(strSet27);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "" + "'", str31, "");
        org.junit.Assert.assertNotNull(strSet32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(wildcardClass34);
    }

    @Test
    public void test1110() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1110");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!", "hi!" };
        python3Target0.targetCharValueEscape = strArray5;
        java.lang.String str8 = python3Target0.getTargetStringLiteralFromString("\"\"");
        org.stringtemplate.v4.STGroup sTGroup9 = null;
        python3Target0.templates = sTGroup9;
        java.lang.String[] strArray11 = python3Target0.targetCharValueEscape;
        int int12 = python3Target0.getInlineTestSetWordSize();
        org.stringtemplate.v4.STGroup sTGroup13 = python3Target0.templates;
        org.antlr.v4.codegen.model.RuleFunction ruleFunction14 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str15 = python3Target0.getRuleFunctionContextStructName(ruleFunction14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\"\"\"\"" + "'", str8, "\"\"\"\"");
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 64 + "'", int12 == 64);
        org.junit.Assert.assertNull(sTGroup13);
    }

    @Test
    public void test1111() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1111");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python3Target1.getBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = null;
        python3Target1.gen = codeGenerator3;
        java.lang.String str6 = python3Target1.getAltLabelContextStructName("hi!");
        boolean boolean7 = python3Target1.supportsOverloadedMethods();
        java.lang.String[] strArray8 = python3Target1.targetCharValueEscape;
        java.lang.String str9 = python3Target1.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = null;
        java.lang.String str13 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator10, "", true);
        java.lang.String str14 = python3Target1.getLanguage();
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Hi!Context" + "'", str6, "Hi!Context");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Python3" + "'", str9, "Python3");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "\"\"" + "'", str13, "\"\"");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Python3" + "'", str14, "Python3");
    }

    @Test
    public void test1112() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1112");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        java.lang.String str2 = python3Target0.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = python3Target0.getCodeGenerator();
        org.antlr.v4.tool.Grammar grammar4 = null;
        org.stringtemplate.v4.ST sT5 = null;
        python3Target0.genRecognizerHeaderFile(grammar4, sT5, "_tsetPython3");
        boolean boolean8 = python3Target0.wantsBaseListener();
        org.antlr.v4.codegen.CodeGenerator codeGenerator9 = null;
        java.lang.String str12 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator9, "\"\"\"\"\"\"\"Context\"Context", false);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str14 = python3Target0.getElementName("_\"\"\\\"\\\"hi!\\\"\\\"\"\"Context");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "4.5.2.1" + "'", str2, "4.5.2.1");
        org.junit.Assert.assertNull(codeGenerator3);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "\\\"\\\"\\\"\\\"\\\"\\\"Context\\\"Contex" + "'", str12, "\\\"\\\"\\\"\\\"\\\"\\\"Context\\\"Contex");
    }

    @Test
    public void test1113() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1113");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        java.lang.String str2 = python3Target0.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = null;
        java.lang.String str6 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator3, "", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = null;
        python3Target0.gen = codeGenerator7;
        java.lang.String[] strArray16 = new java.lang.String[] { "\"\"\"\"", "\\12", "\"\"", "4.5.2.1", "", "\"\"\"\"", "\"\"" };
        java.util.LinkedHashSet<java.lang.String> strSet17 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet17, strArray16);
        python3Target0.badWords = strSet17;
        python3Target0.language = "\"\"\"\"";
        java.lang.String str22 = python3Target0.getLanguage();
        boolean boolean23 = python3Target0.wantsBaseVisitor();
        org.antlr.v4.tool.ast.GrammarAST grammarAST24 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str25 = python3Target0.getLoopCounter(grammarAST24);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "4.5.2.1" + "'", str2, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\"\"" + "'", str6, "\"\"");
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "\"\"\"\"" + "'", str22, "\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
    }

    @Test
    public void test1114() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1114");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!", "hi!" };
        python3Target0.targetCharValueEscape = strArray5;
        java.lang.String str8 = python3Target0.getTargetStringLiteralFromString("\"\"");
        java.lang.String str9 = python3Target0.getLanguage();
        java.util.Set<java.lang.String> strSet10 = python3Target0.getBadWords();
        org.antlr.v4.codegen.target.Python3Target python3Target11 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean12 = python3Target11.supportsOverloadedMethods();
        java.lang.String str13 = python3Target11.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator14 = null;
        java.lang.String str17 = python3Target11.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator14, "", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator18 = null;
        python3Target11.gen = codeGenerator18;
        java.lang.String[] strArray27 = new java.lang.String[] { "\"\"\"\"", "\\12", "\"\"", "4.5.2.1", "", "\"\"\"\"", "\"\"" };
        java.util.LinkedHashSet<java.lang.String> strSet28 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet28, strArray27);
        python3Target11.badWords = strSet28;
        boolean boolean31 = python3Target11.templatesExist();
        org.antlr.v4.codegen.CodeGenerator codeGenerator32 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target33 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator32);
        java.lang.String str35 = python3Target33.getTargetStringLiteralFromString("");
        int int36 = python3Target33.getSerializedATNSegmentLimit();
        boolean boolean37 = python3Target33.wantsBaseVisitor();
        org.stringtemplate.v4.STGroup sTGroup38 = python3Target33.loadTemplates();
        python3Target11.templates = sTGroup38;
        python3Target0.templates = sTGroup38;
        java.lang.String str41 = python3Target0.getVersion();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\"\"\"\"" + "'", str8, "\"\"\"\"");
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(strSet10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "4.5.2.1" + "'", str13, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "\"\"" + "'", str17, "\"\"");
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "\"\"" + "'", str35, "\"\"");
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 29 + "'", int36 == 29);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(sTGroup38);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "4.5.2.1" + "'", str41, "4.5.2.1");
    }

    @Test
    public void test1115() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1115");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray1 = python3Target0.targetCharValueEscape;
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = null;
        java.lang.String str6 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator3, "\"\\12\"", false);
        int int7 = python3Target0.getSerializedATNSegmentLimit();
        boolean boolean8 = python3Target0.templatesExist();
        boolean boolean9 = python3Target0.supportsOverloadedMethods();
        org.antlr.v4.tool.Grammar grammar10 = null;
        org.stringtemplate.v4.ST sT11 = null;
        python3Target0.genRecognizerHeaderFile(grammar10, sT11, "_tsetPython3");
        java.util.Set<java.lang.String> strSet14 = python3Target0.badWords;
        org.antlr.v4.codegen.CodeGenerator codeGenerator15 = null;
        python3Target0.gen = codeGenerator15;
        org.antlr.v4.codegen.CodeGenerator codeGenerator17 = null;
        python3Target0.gen = codeGenerator17;
        boolean boolean19 = python3Target0.supportsOverloadedMethods();
        org.antlr.v4.tool.Grammar grammar20 = null;
        org.stringtemplate.v4.ST sT21 = null;
        python3Target0.genRecognizerHeaderFile(grammar20, sT21, "\"\"\\\"\\\"\\\"\\\"\\\"\\\"Context\"\"");
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "12" + "'", str6, "12");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 29 + "'", int7 == 29);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(strSet14);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    }

    @Test
    public void test1116() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1116");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str2 = python3Target0.getTargetStringLiteralFromString("\"\"\"\"");
        java.lang.String str4 = python3Target0.getTargetStringLiteralFromString("");
        int int5 = python3Target0.getSerializedATNSegmentLimit();
        org.antlr.v4.codegen.target.Python3Target python3Target6 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray7 = python3Target6.targetCharValueEscape;
        org.stringtemplate.v4.STGroup sTGroup8 = python3Target6.templates;
        int int9 = python3Target6.getInlineTestSetWordSize();
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = python3Target6.gen;
        org.antlr.v4.tool.Grammar grammar11 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target12 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str14 = python3Target12.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.tool.Grammar grammar15 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target16 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean17 = python3Target16.supportsOverloadedMethods();
        java.lang.String str18 = python3Target16.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator19 = null;
        java.lang.String str22 = python3Target16.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator19, "", true);
        java.lang.String str23 = python3Target16.getVersion();
        org.antlr.v4.tool.Grammar grammar24 = null;
        int[] intArray25 = new int[] {};
        java.lang.String[] strArray26 = python3Target16.getTokenTypesAsTargetLabels(grammar24, intArray25);
        java.lang.String[] strArray27 = python3Target12.getTokenTypesAsTargetLabels(grammar15, intArray25);
        java.lang.String[] strArray28 = python3Target6.getTokenTypesAsTargetLabels(grammar11, intArray25);
        python3Target0.targetCharValueEscape = strArray28;
        boolean boolean30 = python3Target0.wantsBaseListener();
        org.antlr.v4.codegen.CodeGenerator codeGenerator31 = python3Target0.getCodeGenerator();
        org.antlr.v4.codegen.CodeGenerator codeGenerator32 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target33 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator32);
        java.util.Set<java.lang.String> strSet34 = python3Target33.getBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator35 = null;
        python3Target33.gen = codeGenerator35;
        java.lang.String str38 = python3Target33.getAltLabelContextStructName("hi!");
        java.lang.String str41 = python3Target33.getTargetStringLiteralFromString("\"hi!\"", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator42 = null;
        python3Target33.gen = codeGenerator42;
        org.antlr.v4.tool.Grammar grammar44 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target45 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray46 = python3Target45.targetCharValueEscape;
        org.stringtemplate.v4.STGroup sTGroup47 = python3Target45.templates;
        int int48 = python3Target45.getInlineTestSetWordSize();
        org.antlr.v4.codegen.CodeGenerator codeGenerator49 = python3Target45.gen;
        org.antlr.v4.tool.Grammar grammar50 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target51 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str53 = python3Target51.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.tool.Grammar grammar54 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target55 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean56 = python3Target55.supportsOverloadedMethods();
        java.lang.String str57 = python3Target55.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator58 = null;
        java.lang.String str61 = python3Target55.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator58, "", true);
        java.lang.String str62 = python3Target55.getVersion();
        org.antlr.v4.tool.Grammar grammar63 = null;
        int[] intArray64 = new int[] {};
        java.lang.String[] strArray65 = python3Target55.getTokenTypesAsTargetLabels(grammar63, intArray64);
        java.lang.String[] strArray66 = python3Target51.getTokenTypesAsTargetLabels(grammar54, intArray64);
        java.lang.String[] strArray67 = python3Target45.getTokenTypesAsTargetLabels(grammar50, intArray64);
        java.lang.String[] strArray68 = python3Target33.getTokenTypesAsTargetLabels(grammar44, intArray64);
        java.lang.String str70 = python3Target33.getAltLabelContextStructName("\"Python3\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator71 = python3Target33.gen;
        int int72 = python3Target33.getSerializedATNSegmentLimit();
        org.stringtemplate.v4.STGroup sTGroup73 = python3Target33.loadTemplates();
        python3Target0.templates = sTGroup73;
        java.lang.String str76 = python3Target0.encodeIntAsCharEscape((int) (byte) 10);
        org.antlr.v4.tool.ast.GrammarAST grammarAST77 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean78 = python3Target0.visibleGrammarSymbolCausesIssueInGeneratedCode(grammarAST77);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "\"\"\"\"\"\"" + "'", str2, "\"\"\"\"\"\"");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "\"\"" + "'", str4, "\"\"");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 29 + "'", int5 == 29);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNull(sTGroup8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 64 + "'", int9 == 64);
        org.junit.Assert.assertNull(codeGenerator10);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "\"\"\"\"\"\"" + "'", str14, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "4.5.2.1" + "'", str18, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "\"\"" + "'", str22, "\"\"");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "4.5.2.1" + "'", str23, "4.5.2.1");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[]");
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNull(codeGenerator31);
        org.junit.Assert.assertNotNull(strSet34);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "Hi!Context" + "'", str38, "Hi!Context");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "\"\\\"hi!\\\"\"" + "'", str41, "\"\\\"hi!\\\"\"");
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertNull(sTGroup47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 64 + "'", int48 == 64);
        org.junit.Assert.assertNull(codeGenerator49);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "\"\"\"\"\"\"" + "'", str53, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "4.5.2.1" + "'", str57, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "\"\"" + "'", str61, "\"\"");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "4.5.2.1" + "'", str62, "4.5.2.1");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[]");
        org.junit.Assert.assertNotNull(strArray65);
        org.junit.Assert.assertNotNull(strArray66);
        org.junit.Assert.assertNotNull(strArray67);
        org.junit.Assert.assertNotNull(strArray68);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "\"Python3\"Context" + "'", str70, "\"Python3\"Context");
        org.junit.Assert.assertNull(codeGenerator71);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 29 + "'", int72 == 29);
        org.junit.Assert.assertNotNull(sTGroup73);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "\\12" + "'", str76, "\\12");
    }

    @Test
    public void test1117() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1117");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        java.lang.String str2 = python3Target0.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = null;
        java.lang.String str6 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator3, "", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = null;
        python3Target0.gen = codeGenerator7;
        java.lang.String[] strArray16 = new java.lang.String[] { "\"\"\"\"", "\\12", "\"\"", "4.5.2.1", "", "\"\"\"\"", "\"\"" };
        java.util.LinkedHashSet<java.lang.String> strSet17 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet17, strArray16);
        python3Target0.badWords = strSet17;
        org.antlr.v4.codegen.CodeGenerator codeGenerator20 = python3Target0.gen;
        java.lang.String str23 = python3Target0.getTargetStringLiteralFromString("\\12", true);
        java.util.Set<java.lang.String> strSet24 = python3Target0.badWords;
        java.lang.String str25 = python3Target0.language;
        java.util.Set<java.lang.String> strSet26 = python3Target0.getBadWords();
        java.lang.Class<?> wildcardClass27 = strSet26.getClass();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "4.5.2.1" + "'", str2, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\"\"" + "'", str6, "\"\"");
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNull(codeGenerator20);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "\"\\12\"" + "'", str23, "\"\\12\"");
        org.junit.Assert.assertNotNull(strSet24);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNotNull(strSet26);
        org.junit.Assert.assertNotNull(wildcardClass27);
    }

    @Test
    public void test1118() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1118");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!", "hi!" };
        python3Target0.targetCharValueEscape = strArray5;
        java.lang.String str8 = python3Target0.getTargetStringLiteralFromString("\"\"");
        java.lang.String str10 = python3Target0.getTargetStringLiteralFromString("\"\"");
        java.lang.String str11 = python3Target0.getLanguage();
        int int12 = python3Target0.getInlineTestSetWordSize();
        boolean boolean13 = python3Target0.wantsBaseVisitor();
        java.lang.String str14 = python3Target0.getLanguage();
        org.antlr.v4.codegen.target.Python3Target python3Target15 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean16 = python3Target15.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup17 = python3Target15.templates;
        java.lang.String[] strArray20 = new java.lang.String[] { "hi!", "hi!" };
        python3Target15.targetCharValueEscape = strArray20;
        org.antlr.v4.codegen.CodeGenerator codeGenerator22 = null;
        java.lang.String str25 = python3Target15.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator22, "", false);
        int int26 = python3Target15.getSerializedATNSegmentLimit();
        java.lang.String str27 = python3Target15.getVersion();
        boolean boolean28 = python3Target15.supportsOverloadedMethods();
        org.antlr.v4.codegen.target.Python3Target python3Target29 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean30 = python3Target29.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup31 = python3Target29.templates;
        java.lang.String[] strArray34 = new java.lang.String[] { "hi!", "hi!" };
        python3Target29.targetCharValueEscape = strArray34;
        java.lang.String[] strArray37 = new java.lang.String[] { "hi!" };
        org.antlr.v4.codegen.target.Python3Target.python3Keywords = strArray37;
        python3Target29.targetCharValueEscape = strArray37;
        org.antlr.v4.codegen.target.Python3Target.python3Keywords = strArray37;
        python3Target15.targetCharValueEscape = strArray37;
        python3Target0.targetCharValueEscape = strArray37;
        org.antlr.v4.codegen.CodeGenerator codeGenerator43 = null;
        python3Target0.gen = codeGenerator43;
        java.lang.String str45 = python3Target0.language;
        python3Target0.language = "\"\\\"Python3\\\"\"";
        org.antlr.v4.tool.Grammar grammar48 = null;
        org.stringtemplate.v4.ST sT49 = null;
        // The following exception was thrown during execution in test generation
        try {
            python3Target0.genListenerFile(grammar48, sT49);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\"\"\"\"" + "'", str8, "\"\"\"\"");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\"\"\"\"" + "'", str10, "\"\"\"\"");
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 64 + "'", int12 == 64);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(sTGroup17);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 29 + "'", int26 == 29);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "4.5.2.1" + "'", str27, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNull(sTGroup31);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertNull(str45);
    }

    @Test
    public void test1119() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1119");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!", "hi!" };
        python3Target0.targetCharValueEscape = strArray5;
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = null;
        java.lang.String str10 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator7, "", false);
        int int11 = python3Target0.getSerializedATNSegmentLimit();
        java.lang.String str12 = python3Target0.getVersion();
        boolean boolean13 = python3Target0.supportsOverloadedMethods();
        boolean boolean14 = python3Target0.wantsBaseVisitor();
        org.antlr.v4.tool.ast.GrammarAST grammarAST15 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean16 = python3Target0.grammarSymbolCausesIssueInGeneratedCode(grammarAST15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 29 + "'", int11 == 29);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "4.5.2.1" + "'", str12, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test1120() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1120");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!", "hi!" };
        python3Target0.targetCharValueEscape = strArray5;
        java.lang.String str8 = python3Target0.getTargetStringLiteralFromString("\"\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator9 = python3Target0.gen;
        org.antlr.v4.codegen.target.Python3Target python3Target10 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean11 = python3Target10.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup12 = python3Target10.templates;
        java.lang.String str13 = python3Target10.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator14 = null;
        java.lang.String str17 = python3Target10.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator14, "\"\\\"hi!\\\"\"", true);
        java.util.Set<java.lang.String> strSet18 = python3Target10.badWords;
        python3Target0.badWords = strSet18;
        boolean boolean20 = python3Target0.wantsBaseListener();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\"\"\"\"" + "'", str8, "\"\"\"\"");
        org.junit.Assert.assertNull(codeGenerator9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(sTGroup12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "4.5.2.1" + "'", str13, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "\"\\\"hi!\\\"\"" + "'", str17, "\"\\\"hi!\\\"\"");
        org.junit.Assert.assertNotNull(strSet18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    }

    @Test
    public void test1121() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1121");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray1 = python3Target0.targetCharValueEscape;
        python3Target0.addBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target4 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator3);
        java.lang.String str6 = python3Target4.getTargetStringLiteralFromString("");
        int int7 = python3Target4.getSerializedATNSegmentLimit();
        boolean boolean8 = python3Target4.wantsBaseVisitor();
        org.stringtemplate.v4.STGroup sTGroup9 = python3Target4.loadTemplates();
        python3Target0.templates = sTGroup9;
        boolean boolean11 = python3Target0.wantsBaseListener();
        java.lang.String[] strArray12 = python3Target0.targetCharValueEscape;
        boolean boolean13 = python3Target0.templatesExist();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str15 = python3Target0.getImplicitTokenLabel("\\\"hi!\\\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\"\"" + "'", str6, "\"\"");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 29 + "'", int7 == 29);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(sTGroup9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test1122() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1122");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        python3Target0.language = "";
        org.antlr.v4.codegen.target.Python3Target python3Target3 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean4 = python3Target3.supportsOverloadedMethods();
        java.lang.String str5 = python3Target3.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = null;
        java.lang.String str9 = python3Target3.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator6, "", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = null;
        python3Target3.gen = codeGenerator10;
        java.lang.String[] strArray19 = new java.lang.String[] { "\"\"\"\"", "\\12", "\"\"", "4.5.2.1", "", "\"\"\"\"", "\"\"" };
        java.util.LinkedHashSet<java.lang.String> strSet20 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet20, strArray19);
        python3Target3.badWords = strSet20;
        python3Target0.badWords = strSet20;
        java.lang.String str25 = python3Target0.encodeIntAsCharEscape((int) (byte) 100);
        java.lang.String str26 = python3Target0.getLanguage();
        java.lang.String[] strArray27 = new java.lang.String[] {};
        python3Target0.targetCharValueEscape = strArray27;
        java.lang.String str31 = python3Target0.getTargetStringLiteralFromString("", true);
        org.antlr.v4.codegen.target.Python3Target python3Target32 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean33 = python3Target32.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup34 = python3Target32.templates;
        java.lang.String[] strArray37 = new java.lang.String[] { "hi!", "hi!" };
        python3Target32.targetCharValueEscape = strArray37;
        java.lang.String[] strArray40 = new java.lang.String[] { "hi!" };
        org.antlr.v4.codegen.target.Python3Target.python3Keywords = strArray40;
        python3Target32.targetCharValueEscape = strArray40;
        org.antlr.v4.codegen.target.Python3Target.python3Keywords = strArray40;
        org.antlr.v4.codegen.target.Python3Target.python3Keywords = strArray40;
        python3Target0.targetCharValueEscape = strArray40;
        org.antlr.v4.codegen.model.RuleFunction ruleFunction46 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str47 = python3Target0.getRuleFunctionContextStructName(ruleFunction46);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "4.5.2.1" + "'", str5, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\"\"" + "'", str9, "\"\"");
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "d" + "'", str25, "d");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "\"\"" + "'", str31, "\"\"");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNull(sTGroup34);
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertNotNull(strArray40);
    }

    @Test
    public void test1123() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1123");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        org.antlr.v4.tool.Grammar grammar3 = null;
        org.stringtemplate.v4.ST sT4 = null;
        python3Target0.genRecognizerHeaderFile(grammar3, sT4, "");
        python3Target0.language = "Python3";
        int int9 = python3Target0.getSerializedATNSegmentLimit();
        java.lang.String str11 = python3Target0.getListLabel("_tsetPython3");
        org.antlr.v4.codegen.CodeGenerator codeGenerator12 = null;
        java.lang.String str15 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator12, "\"\"\"hi!\"\"\"", true);
        java.lang.String str17 = python3Target0.getAltLabelContextStructName("\"\"\"\"\"\"\"\"Context");
        int int18 = python3Target0.getSerializedATNSegmentLimit();
        boolean boolean19 = python3Target0.wantsBaseVisitor();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 29 + "'", int9 == 29);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "_tsetPython3" + "'", str11, "_tsetPython3");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "\"\\\"\\\"hi!\\\"\\\"\"" + "'", str15, "\"\\\"\\\"hi!\\\"\\\"\"");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "\"\"\"\"\"\"\"\"ContextContext" + "'", str17, "\"\"\"\"\"\"\"\"ContextContext");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 29 + "'", int18 == 29);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    }

    @Test
    public void test1124() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1124");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!", "hi!" };
        python3Target0.targetCharValueEscape = strArray5;
        java.lang.String[] strArray8 = new java.lang.String[] { "hi!" };
        org.antlr.v4.codegen.target.Python3Target.python3Keywords = strArray8;
        python3Target0.targetCharValueEscape = strArray8;
        java.lang.String str12 = python3Target0.getTargetStringLiteralFromString("\"\"\"\"\"\"");
        org.antlr.v4.tool.Grammar grammar13 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str15 = python3Target0.getTokenTypeAsTargetLabel(grammar13, 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "\"\"\"\"\"\"\"\"" + "'", str12, "\"\"\"\"\"\"\"\"");
    }

    @Test
    public void test1125() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1125");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        org.antlr.v4.codegen.CodeGenerator codeGenerator1 = python3Target0.getCodeGenerator();
        java.lang.String str3 = python3Target0.getTargetStringLiteralFromString("\\35");
        org.antlr.v4.codegen.CodeGenerator codeGenerator4 = null;
        java.lang.String str7 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator4, "\"Hi!Context\"", false);
        org.antlr.v4.tool.ast.GrammarAST grammarAST8 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str9 = python3Target0.getLoopLabel(grammarAST8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(codeGenerator1);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "\"\\35\"" + "'", str3, "\"\\35\"");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Hi!Context" + "'", str7, "Hi!Context");
    }

    @Test
    public void test1126() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1126");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        org.antlr.v4.tool.Grammar grammar3 = null;
        org.stringtemplate.v4.ST sT4 = null;
        python3Target0.genRecognizerHeaderFile(grammar3, sT4, "");
        python3Target0.language = "Python3";
        int int9 = python3Target0.getSerializedATNSegmentLimit();
        java.lang.String str11 = python3Target0.getListLabel("_tsetPython3");
        boolean boolean12 = python3Target0.wantsBaseVisitor();
        python3Target0.addBadWords();
        org.antlr.v4.tool.Grammar grammar14 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str16 = python3Target0.getTokenTypeAsTargetLabel(grammar14, (int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 29 + "'", int9 == 29);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "_tsetPython3" + "'", str11, "_tsetPython3");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test1127() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1127");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        java.lang.String str2 = python3Target0.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = null;
        java.lang.String str6 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator3, "", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = null;
        python3Target0.gen = codeGenerator7;
        java.lang.String[] strArray16 = new java.lang.String[] { "\"\"\"\"", "\\12", "\"\"", "4.5.2.1", "", "\"\"\"\"", "\"\"" };
        java.util.LinkedHashSet<java.lang.String> strSet17 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet17, strArray16);
        python3Target0.badWords = strSet17;
        org.antlr.v4.codegen.CodeGenerator codeGenerator20 = python3Target0.gen;
        java.lang.String str21 = python3Target0.getVersion();
        int int22 = python3Target0.getSerializedATNSegmentLimit();
        java.util.Set<java.lang.String> strSet23 = python3Target0.getBadWords();
        org.antlr.v4.tool.Grammar grammar24 = null;
        org.stringtemplate.v4.ST sT25 = null;
        python3Target0.genRecognizerHeaderFile(grammar24, sT25, "\"DContext\"");
        python3Target0.addBadWords();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "4.5.2.1" + "'", str2, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\"\"" + "'", str6, "\"\"");
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNull(codeGenerator20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "4.5.2.1" + "'", str21, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 29 + "'", int22 == 29);
        org.junit.Assert.assertNotNull(strSet23);
    }

    @Test
    public void test1128() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1128");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!", "hi!" };
        python3Target0.targetCharValueEscape = strArray5;
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = null;
        java.lang.String str10 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator7, "", false);
        int int11 = python3Target0.getSerializedATNSegmentLimit();
        java.lang.String str12 = python3Target0.getVersion();
        boolean boolean13 = python3Target0.supportsOverloadedMethods();
        org.antlr.v4.codegen.target.Python3Target python3Target14 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean15 = python3Target14.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup16 = python3Target14.templates;
        java.lang.String[] strArray19 = new java.lang.String[] { "hi!", "hi!" };
        python3Target14.targetCharValueEscape = strArray19;
        java.lang.String[] strArray22 = new java.lang.String[] { "hi!" };
        org.antlr.v4.codegen.target.Python3Target.python3Keywords = strArray22;
        python3Target14.targetCharValueEscape = strArray22;
        org.antlr.v4.codegen.target.Python3Target.python3Keywords = strArray22;
        python3Target0.targetCharValueEscape = strArray22;
        java.lang.String str27 = python3Target0.getVersion();
        org.antlr.v4.codegen.model.RuleFunction ruleFunction28 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str29 = python3Target0.getRuleFunctionContextStructName(ruleFunction28);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 29 + "'", int11 == 29);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "4.5.2.1" + "'", str12, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(sTGroup16);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "4.5.2.1" + "'", str27, "4.5.2.1");
    }

    @Test
    public void test1129() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1129");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        python3Target0.language = "4.5.2.1";
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = python3Target0.getCodeGenerator();
        org.antlr.v4.codegen.CodeGenerator codeGenerator4 = python3Target0.gen;
        java.util.Set<java.lang.String> strSet5 = python3Target0.badWords;
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = python3Target0.gen;
        java.lang.String str7 = python3Target0.language;
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target9 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator8);
        java.lang.String str11 = python3Target9.getTargetStringLiteralFromString("");
        int int12 = python3Target9.getSerializedATNSegmentLimit();
        boolean boolean13 = python3Target9.wantsBaseVisitor();
        java.lang.String str14 = python3Target9.getVersion();
        org.stringtemplate.v4.STGroup sTGroup15 = python3Target9.getTemplates();
        python3Target0.templates = sTGroup15;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str18 = python3Target0.getElementListName("\"\"\"_tset12\"\"\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(codeGenerator3);
        org.junit.Assert.assertNull(codeGenerator4);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNull(codeGenerator6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "4.5.2.1" + "'", str7, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "\"\"" + "'", str11, "\"\"");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 29 + "'", int12 == 29);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "4.5.2.1" + "'", str14, "4.5.2.1");
        org.junit.Assert.assertNotNull(sTGroup15);
    }

    @Test
    public void test1130() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1130");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        java.lang.String str2 = python3Target0.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = python3Target0.getCodeGenerator();
        org.stringtemplate.v4.STGroup sTGroup4 = null;
        python3Target0.templates = sTGroup4;
        org.stringtemplate.v4.STGroup sTGroup6 = python3Target0.templates;
        java.lang.String[] strArray7 = python3Target0.targetCharValueEscape;
        java.lang.String str10 = python3Target0.getTargetStringLiteralFromString("\"12\"", false);
        org.antlr.v4.tool.Grammar grammar11 = null;
        org.stringtemplate.v4.ST sT12 = null;
        // The following exception was thrown during execution in test generation
        try {
            python3Target0.genFile(grammar11, sT12, "_#");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "4.5.2.1" + "'", str2, "4.5.2.1");
        org.junit.Assert.assertNull(codeGenerator3);
        org.junit.Assert.assertNull(sTGroup6);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\"12\"" + "'", str10, "\"12\"");
    }

    @Test
    public void test1131() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1131");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!", "hi!" };
        python3Target0.targetCharValueEscape = strArray5;
        java.lang.String str8 = python3Target0.getTargetStringLiteralFromString("\"\"");
        java.lang.String str10 = python3Target0.getTargetStringLiteralFromString("\"\"");
        java.lang.String str11 = python3Target0.getLanguage();
        int int12 = python3Target0.getInlineTestSetWordSize();
        boolean boolean13 = python3Target0.templatesExist();
        org.antlr.v4.codegen.CodeGenerator codeGenerator14 = null;
        python3Target0.gen = codeGenerator14;
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\"\"\"\"" + "'", str8, "\"\"\"\"");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\"\"\"\"" + "'", str10, "\"\"\"\"");
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 64 + "'", int12 == 64);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test1132() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1132");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!", "hi!" };
        python3Target0.targetCharValueEscape = strArray5;
        java.lang.String str8 = python3Target0.getTargetStringLiteralFromString("\"\"");
        java.lang.String str10 = python3Target0.getTargetStringLiteralFromString("\"\"");
        java.lang.String str11 = python3Target0.getLanguage();
        boolean boolean12 = python3Target0.wantsBaseVisitor();
        python3Target0.addBadWords();
        org.antlr.v4.tool.ast.GrammarAST grammarAST14 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean15 = python3Target0.visibleGrammarSymbolCausesIssueInGeneratedCode(grammarAST14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\"\"\"\"" + "'", str8, "\"\"\"\"");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\"\"\"\"" + "'", str10, "\"\"\"\"");
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test1133() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1133");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        java.lang.String str2 = python3Target0.getVersion();
        org.antlr.v4.codegen.target.Python3Target python3Target3 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean4 = python3Target3.supportsOverloadedMethods();
        python3Target3.language = "\"\"\"\"";
        org.antlr.v4.codegen.target.Python3Target python3Target7 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray8 = python3Target7.targetCharValueEscape;
        org.stringtemplate.v4.STGroup sTGroup9 = python3Target7.templates;
        int int10 = python3Target7.getInlineTestSetWordSize();
        org.antlr.v4.codegen.CodeGenerator codeGenerator11 = python3Target7.gen;
        org.antlr.v4.tool.Grammar grammar12 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target13 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str15 = python3Target13.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.tool.Grammar grammar16 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target17 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean18 = python3Target17.supportsOverloadedMethods();
        java.lang.String str19 = python3Target17.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator20 = null;
        java.lang.String str23 = python3Target17.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator20, "", true);
        java.lang.String str24 = python3Target17.getVersion();
        org.antlr.v4.tool.Grammar grammar25 = null;
        int[] intArray26 = new int[] {};
        java.lang.String[] strArray27 = python3Target17.getTokenTypesAsTargetLabels(grammar25, intArray26);
        java.lang.String[] strArray28 = python3Target13.getTokenTypesAsTargetLabels(grammar16, intArray26);
        java.lang.String[] strArray29 = python3Target7.getTokenTypesAsTargetLabels(grammar12, intArray26);
        java.lang.String[] strArray52 = new java.lang.String[] { "\"\\\"\\\"\"", "DContext", "", "hi!", "d", "\"\"\"\"\"\"", "\"\"\"\"\"\"", "_tsetPython3", "\"hi!\"", "\"hi!\"", "Hi!Context", "\"\"\"\"\"\"", "\"hi!\"", "12", "\"4.5.2.1\"", "DContext", "Hi!Context", "Python3", "\"hi!\"", "", "\"\"", "\\\"4.5.2.1\\\"" };
        java.util.LinkedHashSet<java.lang.String> strSet53 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet53, strArray52);
        python3Target7.badWords = strSet53;
        org.antlr.v4.codegen.target.Python3Target python3Target56 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean57 = python3Target56.supportsOverloadedMethods();
        java.lang.String str58 = python3Target56.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator59 = null;
        java.lang.String str62 = python3Target56.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator59, "", true);
        java.lang.String str63 = python3Target56.getVersion();
        org.antlr.v4.codegen.target.Python3Target python3Target64 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str66 = python3Target64.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.tool.Grammar grammar67 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target68 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean69 = python3Target68.supportsOverloadedMethods();
        java.lang.String str70 = python3Target68.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator71 = null;
        java.lang.String str74 = python3Target68.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator71, "", true);
        java.lang.String str75 = python3Target68.getVersion();
        org.antlr.v4.tool.Grammar grammar76 = null;
        int[] intArray77 = new int[] {};
        java.lang.String[] strArray78 = python3Target68.getTokenTypesAsTargetLabels(grammar76, intArray77);
        java.lang.String[] strArray79 = python3Target64.getTokenTypesAsTargetLabels(grammar67, intArray77);
        java.lang.String[] strArray80 = python3Target64.targetCharValueEscape;
        python3Target56.targetCharValueEscape = strArray80;
        python3Target7.targetCharValueEscape = strArray80;
        python3Target3.targetCharValueEscape = strArray80;
        python3Target0.targetCharValueEscape = strArray80;
        java.lang.String str86 = python3Target0.encodeIntAsCharEscape((int) '#');
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "4.5.2.1" + "'", str2, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNull(sTGroup9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 64 + "'", int10 == 64);
        org.junit.Assert.assertNull(codeGenerator11);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "\"\"\"\"\"\"" + "'", str15, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "4.5.2.1" + "'", str19, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "\"\"" + "'", str23, "\"\"");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "4.5.2.1" + "'", str24, "4.5.2.1");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[]");
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertNotNull(strArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "4.5.2.1" + "'", str58, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "\"\"" + "'", str62, "\"\"");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "4.5.2.1" + "'", str63, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "\"\"\"\"\"\"" + "'", str66, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "4.5.2.1" + "'", str70, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "\"\"" + "'", str74, "\"\"");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "4.5.2.1" + "'", str75, "4.5.2.1");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[]");
        org.junit.Assert.assertNotNull(strArray78);
        org.junit.Assert.assertNotNull(strArray79);
        org.junit.Assert.assertNotNull(strArray80);
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "#" + "'", str86, "#");
    }

    @Test
    public void test1134() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1134");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!", "hi!" };
        python3Target0.targetCharValueEscape = strArray5;
        java.lang.String[] strArray8 = new java.lang.String[] { "hi!" };
        org.antlr.v4.codegen.target.Python3Target.python3Keywords = strArray8;
        python3Target0.targetCharValueEscape = strArray8;
        java.util.Set<java.lang.String> strSet11 = python3Target0.getBadWords();
        int int12 = python3Target0.getInlineTestSetWordSize();
        int int13 = python3Target0.getSerializedATNSegmentLimit();
        int int14 = python3Target0.getSerializedATNSegmentLimit();
        java.lang.String str16 = python3Target0.encodeIntAsCharEscape((int) '4');
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(strSet11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 64 + "'", int12 == 64);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 29 + "'", int13 == 29);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 29 + "'", int14 == 29);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "\\64" + "'", str16, "\\64");
    }

    @Test
    public void test1135() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1135");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!", "hi!" };
        python3Target0.targetCharValueEscape = strArray5;
        java.lang.String str8 = python3Target0.getTargetStringLiteralFromString("\"\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator9 = python3Target0.gen;
        org.antlr.v4.tool.Grammar grammar10 = null;
        org.stringtemplate.v4.ST sT11 = null;
        python3Target0.genRecognizerHeaderFile(grammar10, sT11, "_tset\\\\12");
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\"\"\"\"" + "'", str8, "\"\"\"\"");
        org.junit.Assert.assertNull(codeGenerator9);
    }

    @Test
    public void test1136() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1136");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        java.lang.String str2 = python3Target0.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = null;
        java.lang.String str6 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator3, "", true);
        java.lang.String str7 = python3Target0.getVersion();
        org.antlr.v4.codegen.target.Python3Target python3Target8 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean9 = python3Target8.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup10 = python3Target8.templates;
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "hi!" };
        python3Target8.targetCharValueEscape = strArray13;
        java.lang.String[] strArray16 = new java.lang.String[] { "hi!" };
        org.antlr.v4.codegen.target.Python3Target.python3Keywords = strArray16;
        python3Target8.targetCharValueEscape = strArray16;
        org.antlr.v4.codegen.target.Python3Target.python3Keywords = strArray16;
        python3Target0.targetCharValueEscape = strArray16;
        org.antlr.v4.tool.ast.GrammarAST grammarAST21 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str22 = python3Target0.getLoopCounter(grammarAST21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "4.5.2.1" + "'", str2, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\"\"" + "'", str6, "\"\"");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "4.5.2.1" + "'", str7, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(sTGroup10);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertNotNull(strArray16);
    }

    @Test
    public void test1137() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1137");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str2 = python3Target0.getTargetStringLiteralFromString("\"\"\"\"");
        java.lang.String str4 = python3Target0.getTargetStringLiteralFromString("");
        int int5 = python3Target0.getSerializedATNSegmentLimit();
        org.antlr.v4.codegen.target.Python3Target python3Target6 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray7 = python3Target6.targetCharValueEscape;
        org.stringtemplate.v4.STGroup sTGroup8 = python3Target6.templates;
        int int9 = python3Target6.getInlineTestSetWordSize();
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = python3Target6.gen;
        org.antlr.v4.tool.Grammar grammar11 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target12 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str14 = python3Target12.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.tool.Grammar grammar15 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target16 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean17 = python3Target16.supportsOverloadedMethods();
        java.lang.String str18 = python3Target16.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator19 = null;
        java.lang.String str22 = python3Target16.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator19, "", true);
        java.lang.String str23 = python3Target16.getVersion();
        org.antlr.v4.tool.Grammar grammar24 = null;
        int[] intArray25 = new int[] {};
        java.lang.String[] strArray26 = python3Target16.getTokenTypesAsTargetLabels(grammar24, intArray25);
        java.lang.String[] strArray27 = python3Target12.getTokenTypesAsTargetLabels(grammar15, intArray25);
        java.lang.String[] strArray28 = python3Target6.getTokenTypesAsTargetLabels(grammar11, intArray25);
        python3Target0.targetCharValueEscape = strArray28;
        java.util.Set<java.lang.String> strSet30 = python3Target0.badWords;
        org.antlr.v4.tool.Rule rule31 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str32 = python3Target0.getRuleFunctionContextStructName(rule31);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "\"\"\"\"\"\"" + "'", str2, "\"\"\"\"\"\"");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "\"\"" + "'", str4, "\"\"");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 29 + "'", int5 == 29);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNull(sTGroup8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 64 + "'", int9 == 64);
        org.junit.Assert.assertNull(codeGenerator10);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "\"\"\"\"\"\"" + "'", str14, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "4.5.2.1" + "'", str18, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "\"\"" + "'", str22, "\"\"");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "4.5.2.1" + "'", str23, "4.5.2.1");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[]");
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertNotNull(strSet30);
    }

    @Test
    public void test1138() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1138");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        python3Target0.language = "";
        int int3 = python3Target0.getSerializedATNSegmentLimit();
        boolean boolean4 = python3Target0.wantsBaseVisitor();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 29 + "'", int3 == 29);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    }

    @Test
    public void test1139() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1139");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray1 = python3Target0.targetCharValueEscape;
        java.lang.String str2 = python3Target0.getVersion();
        int int3 = python3Target0.getInlineTestSetWordSize();
        boolean boolean4 = python3Target0.wantsBaseListener();
        org.antlr.v4.tool.Grammar grammar5 = null;
        org.stringtemplate.v4.ST sT6 = null;
        // The following exception was thrown during execution in test generation
        try {
            python3Target0.genFile(grammar5, sT6, "_tset\"\\\"\\\"hi!\\\"\\\"\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "4.5.2.1" + "'", str2, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 64 + "'", int3 == 64);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    }

    @Test
    public void test1140() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1140");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.lang.String str2 = python3Target1.getLanguage();
        java.lang.String str4 = python3Target1.getImplicitSetLabel("Python3");
        org.antlr.v4.codegen.CodeGenerator codeGenerator5 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target6 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator5);
        java.util.Set<java.lang.String> strSet7 = python3Target6.getBadWords();
        python3Target1.badWords = strSet7;
        boolean boolean9 = python3Target1.wantsBaseVisitor();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str11 = python3Target1.getImplicitTokenLabel("\"\\\"\\\"\\\"\\\"\\\"\\\"Context\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "Python3" + "'", str2, "Python3");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "_tsetPython3" + "'", str4, "_tsetPython3");
        org.junit.Assert.assertNotNull(strSet7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test1141() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1141");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!", "hi!" };
        python3Target0.targetCharValueEscape = strArray5;
        java.lang.String[] strArray8 = new java.lang.String[] { "hi!" };
        org.antlr.v4.codegen.target.Python3Target.python3Keywords = strArray8;
        python3Target0.targetCharValueEscape = strArray8;
        org.antlr.v4.tool.Grammar grammar11 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target12 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str14 = python3Target12.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator15 = null;
        python3Target12.gen = codeGenerator15;
        org.antlr.v4.tool.Grammar grammar17 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target18 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str20 = python3Target18.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.tool.Grammar grammar21 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target22 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean23 = python3Target22.supportsOverloadedMethods();
        java.lang.String str24 = python3Target22.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator25 = null;
        java.lang.String str28 = python3Target22.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator25, "", true);
        java.lang.String str29 = python3Target22.getVersion();
        org.antlr.v4.tool.Grammar grammar30 = null;
        int[] intArray31 = new int[] {};
        java.lang.String[] strArray32 = python3Target22.getTokenTypesAsTargetLabels(grammar30, intArray31);
        java.lang.String[] strArray33 = python3Target18.getTokenTypesAsTargetLabels(grammar21, intArray31);
        java.lang.String[] strArray34 = python3Target12.getTokenTypesAsTargetLabels(grammar17, intArray31);
        java.lang.String[] strArray35 = python3Target0.getTokenTypesAsTargetLabels(grammar11, intArray31);
        org.antlr.v4.codegen.CodeGenerator codeGenerator36 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target37 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator36);
        java.util.Set<java.lang.String> strSet38 = python3Target37.getBadWords();
        java.lang.String str40 = python3Target37.getAltLabelContextStructName("d");
        java.lang.String str42 = python3Target37.getTargetStringLiteralFromString("\"\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator43 = python3Target37.getCodeGenerator();
        org.antlr.v4.tool.Grammar grammar44 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator45 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target46 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator45);
        java.util.Set<java.lang.String> strSet47 = python3Target46.getBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator48 = null;
        python3Target46.gen = codeGenerator48;
        java.lang.String str51 = python3Target46.getAltLabelContextStructName("hi!");
        java.lang.String str54 = python3Target46.getTargetStringLiteralFromString("\"hi!\"", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator55 = null;
        python3Target46.gen = codeGenerator55;
        org.antlr.v4.tool.Grammar grammar57 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target58 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray59 = python3Target58.targetCharValueEscape;
        org.stringtemplate.v4.STGroup sTGroup60 = python3Target58.templates;
        int int61 = python3Target58.getInlineTestSetWordSize();
        org.antlr.v4.codegen.CodeGenerator codeGenerator62 = python3Target58.gen;
        org.antlr.v4.tool.Grammar grammar63 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target64 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str66 = python3Target64.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.tool.Grammar grammar67 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target68 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean69 = python3Target68.supportsOverloadedMethods();
        java.lang.String str70 = python3Target68.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator71 = null;
        java.lang.String str74 = python3Target68.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator71, "", true);
        java.lang.String str75 = python3Target68.getVersion();
        org.antlr.v4.tool.Grammar grammar76 = null;
        int[] intArray77 = new int[] {};
        java.lang.String[] strArray78 = python3Target68.getTokenTypesAsTargetLabels(grammar76, intArray77);
        java.lang.String[] strArray79 = python3Target64.getTokenTypesAsTargetLabels(grammar67, intArray77);
        java.lang.String[] strArray80 = python3Target58.getTokenTypesAsTargetLabels(grammar63, intArray77);
        java.lang.String[] strArray81 = python3Target46.getTokenTypesAsTargetLabels(grammar57, intArray77);
        java.lang.String[] strArray82 = python3Target37.getTokenTypesAsTargetLabels(grammar44, intArray77);
        python3Target0.targetCharValueEscape = strArray82;
        org.antlr.v4.codegen.CodeGenerator codeGenerator84 = null;
        java.lang.String str87 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator84, "\"@\"", false);
        // The following exception was thrown during execution in test generation
        try {
            org.stringtemplate.v4.STGroup sTGroup88 = python3Target0.getTemplates();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "\"\"\"\"\"\"" + "'", str14, "\"\"\"\"\"\"");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "\"\"\"\"\"\"" + "'", str20, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "4.5.2.1" + "'", str24, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "\"\"" + "'", str28, "\"\"");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "4.5.2.1" + "'", str29, "4.5.2.1");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[]");
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertNotNull(strSet38);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "DContext" + "'", str40, "DContext");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "\"\\\"\\\"\"" + "'", str42, "\"\\\"\\\"\"");
        org.junit.Assert.assertNull(codeGenerator43);
        org.junit.Assert.assertNotNull(strSet47);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "Hi!Context" + "'", str51, "Hi!Context");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "\"\\\"hi!\\\"\"" + "'", str54, "\"\\\"hi!\\\"\"");
        org.junit.Assert.assertNotNull(strArray59);
        org.junit.Assert.assertNull(sTGroup60);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 64 + "'", int61 == 64);
        org.junit.Assert.assertNull(codeGenerator62);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "\"\"\"\"\"\"" + "'", str66, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "4.5.2.1" + "'", str70, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "\"\"" + "'", str74, "\"\"");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "4.5.2.1" + "'", str75, "4.5.2.1");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[]");
        org.junit.Assert.assertNotNull(strArray78);
        org.junit.Assert.assertNotNull(strArray79);
        org.junit.Assert.assertNotNull(strArray80);
        org.junit.Assert.assertNotNull(strArray81);
        org.junit.Assert.assertNotNull(strArray82);
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "@" + "'", str87, "@");
    }

    @Test
    public void test1142() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1142");
        org.antlr.v4.codegen.target.Python3Target.PythonStringRenderer pythonStringRenderer0 = new org.antlr.v4.codegen.target.Python3Target.PythonStringRenderer();
        java.lang.Object obj1 = null;
        java.util.Locale locale3 = null;
        java.lang.String str4 = pythonStringRenderer0.toString(obj1, "\"\"\"\"\"\"", locale3);
        org.antlr.v4.codegen.target.Python3Target python3Target5 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean6 = python3Target5.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup7 = python3Target5.templates;
        org.antlr.v4.tool.Grammar grammar8 = null;
        org.stringtemplate.v4.ST sT9 = null;
        python3Target5.genRecognizerHeaderFile(grammar8, sT9, "");
        python3Target5.language = "Python3";
        java.util.Set<java.lang.String> strSet14 = null;
        python3Target5.badWords = strSet14;
        org.antlr.v4.codegen.CodeGenerator codeGenerator16 = null;
        java.lang.String str19 = python3Target5.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator16, "\"Hi!Context\"", false);
        java.lang.String str21 = python3Target5.getListLabel("Python3");
        java.lang.String str23 = python3Target5.getTargetStringLiteralFromString("\\0");
        org.antlr.v4.tool.Grammar grammar24 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target25 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str27 = python3Target25.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.tool.Grammar grammar28 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target29 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean30 = python3Target29.supportsOverloadedMethods();
        java.lang.String str31 = python3Target29.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator32 = null;
        java.lang.String str35 = python3Target29.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator32, "", true);
        java.lang.String str36 = python3Target29.getVersion();
        org.antlr.v4.tool.Grammar grammar37 = null;
        int[] intArray38 = new int[] {};
        java.lang.String[] strArray39 = python3Target29.getTokenTypesAsTargetLabels(grammar37, intArray38);
        java.lang.String[] strArray40 = python3Target25.getTokenTypesAsTargetLabels(grammar28, intArray38);
        java.lang.String[] strArray41 = python3Target5.getTokenTypesAsTargetLabels(grammar24, intArray38);
        java.lang.String str43 = python3Target5.getListLabel("\"\"\"\"\"\"Context");
        java.util.Locale locale45 = null;
        java.lang.String str46 = pythonStringRenderer0.toString((java.lang.Object) str43, "\"_\"\\1\"\"Context", locale45);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "\"\"\"\"\"\"" + "'", str4, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(sTGroup7);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Hi!Context" + "'", str19, "Hi!Context");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Python3" + "'", str21, "Python3");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "\"\\0\"" + "'", str23, "\"\\0\"");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "\"\"\"\"\"\"" + "'", str27, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "4.5.2.1" + "'", str31, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "\"\"" + "'", str35, "\"\"");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "4.5.2.1" + "'", str36, "4.5.2.1");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[]");
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "\"\"\"\"\"\"Context" + "'", str43, "\"\"\"\"\"\"Context");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "\"_\"\\1\"\"Context" + "'", str46, "\"_\"\\1\"\"Context");
    }

    @Test
    public void test1143() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1143");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        org.antlr.v4.tool.Grammar grammar3 = null;
        org.stringtemplate.v4.ST sT4 = null;
        python3Target0.genRecognizerHeaderFile(grammar3, sT4, "");
        python3Target0.language = "Python3";
        int int9 = python3Target0.getSerializedATNSegmentLimit();
        java.lang.String str11 = python3Target0.getListLabel("_tsetPython3");
        org.antlr.v4.codegen.CodeGenerator codeGenerator12 = null;
        java.lang.String str15 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator12, "\"\"\"hi!\"\"\"", true);
        org.antlr.v4.tool.ast.GrammarAST grammarAST16 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean17 = python3Target0.grammarSymbolCausesIssueInGeneratedCode(grammarAST16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 29 + "'", int9 == 29);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "_tsetPython3" + "'", str11, "_tsetPython3");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "\"\\\"\\\"hi!\\\"\\\"\"" + "'", str15, "\"\\\"\\\"hi!\\\"\\\"\"");
    }

    @Test
    public void test1144() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1144");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        java.lang.String str2 = python3Target0.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = null;
        java.lang.String str6 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator3, "", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = null;
        python3Target0.gen = codeGenerator7;
        java.lang.String[] strArray16 = new java.lang.String[] { "\"\"\"\"", "\\12", "\"\"", "4.5.2.1", "", "\"\"\"\"", "\"\"" };
        java.util.LinkedHashSet<java.lang.String> strSet17 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet17, strArray16);
        python3Target0.badWords = strSet17;
        org.antlr.v4.codegen.CodeGenerator codeGenerator20 = python3Target0.gen;
        java.lang.String str21 = python3Target0.getVersion();
        int int22 = python3Target0.getSerializedATNSegmentLimit();
        java.lang.String str23 = python3Target0.language;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str25 = python3Target0.getElementName("\"\\\"4.5.2.1\\\"\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "4.5.2.1" + "'", str2, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\"\"" + "'", str6, "\"\"");
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNull(codeGenerator20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "4.5.2.1" + "'", str21, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 29 + "'", int22 == 29);
        org.junit.Assert.assertNull(str23);
    }

    @Test
    public void test1145() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1145");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.lang.String str3 = python3Target1.getTargetStringLiteralFromString("");
        int int4 = python3Target1.getSerializedATNSegmentLimit();
        boolean boolean5 = python3Target1.wantsBaseVisitor();
        org.stringtemplate.v4.STGroup sTGroup6 = python3Target1.loadTemplates();
        org.antlr.v4.codegen.target.Python3Target python3Target7 = new org.antlr.v4.codegen.target.Python3Target();
        python3Target7.language = "4.5.2.1";
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = python3Target7.getCodeGenerator();
        org.antlr.v4.codegen.CodeGenerator codeGenerator11 = python3Target7.gen;
        java.util.Set<java.lang.String> strSet12 = python3Target7.badWords;
        python3Target1.badWords = strSet12;
        java.lang.String str14 = python3Target1.getVersion();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "\"\"" + "'", str3, "\"\"");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 29 + "'", int4 == 29);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(sTGroup6);
        org.junit.Assert.assertNull(codeGenerator10);
        org.junit.Assert.assertNull(codeGenerator11);
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "4.5.2.1" + "'", str14, "4.5.2.1");
    }

    @Test
    public void test1146() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1146");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.lang.String str2 = python3Target1.getVersion();
        int int3 = python3Target1.getSerializedATNSegmentLimit();
        java.lang.String str4 = python3Target1.getVersion();
        boolean boolean5 = python3Target1.wantsBaseListener();
        java.lang.String str7 = python3Target1.getTargetStringLiteralFromString("_12");
        java.lang.String str9 = python3Target1.getImplicitRuleLabel("__tset\"\"\"\"\"\"\"\"ContextContextContext");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "4.5.2.1" + "'", str2, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 29 + "'", int3 == 29);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "4.5.2.1" + "'", str4, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "\"_12\"" + "'", str7, "\"_12\"");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "___tset\"\"\"\"\"\"\"\"ContextContextContext" + "'", str9, "___tset\"\"\"\"\"\"\"\"ContextContextContext");
    }

    @Test
    public void test1147() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1147");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python3Target1.getBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = null;
        python3Target1.gen = codeGenerator3;
        org.antlr.v4.codegen.CodeGenerator codeGenerator5 = null;
        java.lang.String str8 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator5, "\"12\"", true);
        java.lang.String str9 = python3Target1.language;
        boolean boolean10 = python3Target1.templatesExist();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str12 = python3Target1.getElementName("\"_\"\\1\"\"Context");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\"12\"" + "'", str8, "\"12\"");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Python3" + "'", str9, "Python3");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
    }

    @Test
    public void test1148() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1148");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.lang.String str3 = python3Target1.getTargetStringLiteralFromString("");
        int int4 = python3Target1.getSerializedATNSegmentLimit();
        boolean boolean5 = python3Target1.wantsBaseVisitor();
        java.lang.String str6 = python3Target1.getVersion();
        org.stringtemplate.v4.STGroup sTGroup7 = python3Target1.getTemplates();
        python3Target1.addBadWords();
        python3Target1.addBadWords();
        org.antlr.v4.codegen.target.Python3Target python3Target10 = new org.antlr.v4.codegen.target.Python3Target();
        python3Target10.language = "4.5.2.1";
        org.antlr.v4.codegen.CodeGenerator codeGenerator13 = python3Target10.getCodeGenerator();
        org.antlr.v4.codegen.CodeGenerator codeGenerator14 = python3Target10.gen;
        java.util.Set<java.lang.String> strSet15 = python3Target10.badWords;
        python3Target1.badWords = strSet15;
        org.antlr.v4.codegen.CodeGenerator codeGenerator17 = null;
        python3Target1.gen = codeGenerator17;
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "\"\"" + "'", str3, "\"\"");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 29 + "'", int4 == 29);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "4.5.2.1" + "'", str6, "4.5.2.1");
        org.junit.Assert.assertNotNull(sTGroup7);
        org.junit.Assert.assertNull(codeGenerator13);
        org.junit.Assert.assertNull(codeGenerator14);
        org.junit.Assert.assertNotNull(strSet15);
    }

    @Test
    public void test1149() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1149");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python3Target1.getBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = null;
        python3Target1.gen = codeGenerator3;
        java.lang.String str6 = python3Target1.getAltLabelContextStructName("hi!");
        org.antlr.v4.tool.Grammar grammar7 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target8 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean9 = python3Target8.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup10 = python3Target8.templates;
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "hi!" };
        python3Target8.targetCharValueEscape = strArray13;
        java.lang.String[] strArray16 = new java.lang.String[] { "hi!" };
        org.antlr.v4.codegen.target.Python3Target.python3Keywords = strArray16;
        python3Target8.targetCharValueEscape = strArray16;
        org.antlr.v4.tool.Grammar grammar19 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target20 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str22 = python3Target20.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator23 = null;
        python3Target20.gen = codeGenerator23;
        org.antlr.v4.tool.Grammar grammar25 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target26 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str28 = python3Target26.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.tool.Grammar grammar29 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target30 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean31 = python3Target30.supportsOverloadedMethods();
        java.lang.String str32 = python3Target30.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator33 = null;
        java.lang.String str36 = python3Target30.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator33, "", true);
        java.lang.String str37 = python3Target30.getVersion();
        org.antlr.v4.tool.Grammar grammar38 = null;
        int[] intArray39 = new int[] {};
        java.lang.String[] strArray40 = python3Target30.getTokenTypesAsTargetLabels(grammar38, intArray39);
        java.lang.String[] strArray41 = python3Target26.getTokenTypesAsTargetLabels(grammar29, intArray39);
        java.lang.String[] strArray42 = python3Target20.getTokenTypesAsTargetLabels(grammar25, intArray39);
        java.lang.String[] strArray43 = python3Target8.getTokenTypesAsTargetLabels(grammar19, intArray39);
        java.lang.String[] strArray44 = python3Target1.getTokenTypesAsTargetLabels(grammar7, intArray39);
        org.antlr.v4.tool.Grammar grammar45 = null;
        org.stringtemplate.v4.ST sT46 = null;
        // The following exception was thrown during execution in test generation
        try {
            python3Target1.genFile(grammar45, sT46, "\"\"\"\"\"\"\"\"ContextContext");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Hi!Context" + "'", str6, "Hi!Context");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(sTGroup10);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "\"\"\"\"\"\"" + "'", str22, "\"\"\"\"\"\"");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "\"\"\"\"\"\"" + "'", str28, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "4.5.2.1" + "'", str32, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "\"\"" + "'", str36, "\"\"");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "4.5.2.1" + "'", str37, "4.5.2.1");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[]");
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertNotNull(strArray44);
    }

    @Test
    public void test1150() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1150");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!", "hi!" };
        python3Target0.targetCharValueEscape = strArray5;
        java.lang.String str8 = python3Target0.getTargetStringLiteralFromString("\"\"");
        java.lang.String str10 = python3Target0.getTargetStringLiteralFromString("\"\"");
        python3Target0.language = "\\1";
        boolean boolean13 = python3Target0.wantsBaseVisitor();
        python3Target0.addBadWords();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\"\"\"\"" + "'", str8, "\"\"\"\"");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\"\"\"\"" + "'", str10, "\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test1151() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1151");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!", "hi!" };
        python3Target0.targetCharValueEscape = strArray5;
        java.lang.String str8 = python3Target0.getTargetStringLiteralFromString("\"\"");
        org.stringtemplate.v4.STGroup sTGroup9 = null;
        python3Target0.templates = sTGroup9;
        java.lang.String[] strArray11 = python3Target0.targetCharValueEscape;
        int int12 = python3Target0.getInlineTestSetWordSize();
        java.lang.String[] strArray13 = new java.lang.String[] {};
        python3Target0.targetCharValueEscape = strArray13;
        java.lang.String str16 = python3Target0.getTargetStringLiteralFromString("_tsetPython3");
        org.antlr.v4.codegen.CodeGenerator codeGenerator17 = null;
        python3Target0.gen = codeGenerator17;
        org.antlr.v4.tool.Grammar grammar19 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str21 = python3Target0.getTokenTypeAsTargetLabel(grammar19, (int) (byte) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\"\"\"\"" + "'", str8, "\"\"\"\"");
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 64 + "'", int12 == 64);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "\"_tsetPython3\"" + "'", str16, "\"_tsetPython3\"");
    }

    @Test
    public void test1152() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1152");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.lang.String str2 = python3Target1.getVersion();
        int int3 = python3Target1.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet4 = python3Target1.badWords;
        org.antlr.v4.tool.ast.GrammarAST grammarAST5 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str6 = python3Target1.getLoopLabel(grammarAST5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "4.5.2.1" + "'", str2, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 64 + "'", int3 == 64);
        org.junit.Assert.assertNotNull(strSet4);
    }

    @Test
    public void test1153() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1153");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray1 = python3Target0.targetCharValueEscape;
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = null;
        java.lang.String str6 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator3, "\"\\12\"", false);
        int int7 = python3Target0.getSerializedATNSegmentLimit();
        boolean boolean8 = python3Target0.templatesExist();
        java.lang.String str9 = python3Target0.getLanguage();
        // The following exception was thrown during execution in test generation
        try {
            org.stringtemplate.v4.STGroup sTGroup10 = python3Target0.getTemplates();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "12" + "'", str6, "12");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 29 + "'", int7 == 29);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(str9);
    }

    @Test
    public void test1154() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1154");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python3Target1.getBadWords();
        java.lang.String str4 = python3Target1.getAltLabelContextStructName("d");
        org.stringtemplate.v4.STGroup sTGroup5 = python3Target1.getTemplates();
        boolean boolean6 = python3Target1.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup7 = python3Target1.getTemplates();
        java.lang.String str9 = python3Target1.getListLabel("_tset\\\"\\\\\\\"\\\\\\\"hi!\\\\\\\"\\\\\\\"\\\"");
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "DContext" + "'", str4, "DContext");
        org.junit.Assert.assertNotNull(sTGroup5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(sTGroup7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "_tset\\\"\\\\\\\"\\\\\\\"hi!\\\\\\\"\\\\\\\"\\\"" + "'", str9, "_tset\\\"\\\\\\\"\\\\\\\"hi!\\\\\\\"\\\\\\\"\\\"");
    }

    @Test
    public void test1155() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1155");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray1 = python3Target0.targetCharValueEscape;
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        int int3 = python3Target0.getInlineTestSetWordSize();
        org.antlr.v4.codegen.CodeGenerator codeGenerator4 = python3Target0.gen;
        org.antlr.v4.codegen.CodeGenerator codeGenerator5 = python3Target0.getCodeGenerator();
        org.antlr.v4.tool.Grammar grammar6 = null;
        org.stringtemplate.v4.ST sT7 = null;
        python3Target0.genRecognizerHeaderFile(grammar6, sT7, "\\n");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str11 = python3Target0.getImplicitTokenLabel("\"_\"\\1\"\"Context");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 64 + "'", int3 == 64);
        org.junit.Assert.assertNull(codeGenerator4);
        org.junit.Assert.assertNull(codeGenerator5);
    }

    @Test
    public void test1156() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1156");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.lang.String str3 = python3Target1.getTargetStringLiteralFromString("");
        int int4 = python3Target1.getSerializedATNSegmentLimit();
        boolean boolean5 = python3Target1.wantsBaseVisitor();
        org.stringtemplate.v4.STGroup sTGroup6 = python3Target1.loadTemplates();
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = python3Target1.gen;
        org.antlr.v4.codegen.target.Python3Target python3Target8 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean9 = python3Target8.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup10 = python3Target8.templates;
        org.antlr.v4.tool.Grammar grammar11 = null;
        org.stringtemplate.v4.ST sT12 = null;
        python3Target8.genRecognizerHeaderFile(grammar11, sT12, "");
        python3Target8.language = "Python3";
        int int17 = python3Target8.getSerializedATNSegmentLimit();
        org.stringtemplate.v4.STGroup sTGroup18 = python3Target8.loadTemplates();
        python3Target1.templates = sTGroup18;
        org.antlr.v4.tool.Grammar grammar20 = null;
        org.stringtemplate.v4.ST sT21 = null;
        python3Target1.genRecognizerHeaderFile(grammar20, sT21, "\"_tset12\"");
        int int24 = python3Target1.getSerializedATNSegmentLimit();
        org.stringtemplate.v4.STGroup sTGroup25 = python3Target1.loadTemplates();
        org.antlr.v4.codegen.model.RuleFunction ruleFunction26 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str27 = python3Target1.getRuleFunctionContextStructName(ruleFunction26);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "\"\"" + "'", str3, "\"\"");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 29 + "'", int4 == 29);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(sTGroup6);
        org.junit.Assert.assertNull(codeGenerator7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(sTGroup10);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 29 + "'", int17 == 29);
        org.junit.Assert.assertNotNull(sTGroup18);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 29 + "'", int24 == 29);
        org.junit.Assert.assertNotNull(sTGroup25);
    }

    @Test
    public void test1157() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1157");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        java.lang.String str2 = python3Target0.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = python3Target0.getCodeGenerator();
        org.stringtemplate.v4.STGroup sTGroup4 = null;
        python3Target0.templates = sTGroup4;
        org.stringtemplate.v4.STGroup sTGroup6 = python3Target0.templates;
        java.lang.String[] strArray7 = python3Target0.targetCharValueEscape;
        java.util.Set<java.lang.String> strSet8 = python3Target0.badWords;
        java.util.Set<java.lang.String> strSet9 = python3Target0.getBadWords();
        boolean boolean10 = python3Target0.wantsBaseVisitor();
        org.antlr.v4.codegen.CodeGenerator codeGenerator11 = python3Target0.getCodeGenerator();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str13 = python3Target0.getImplicitTokenLabel("\"\\\"\\\"hi!\\\"\\\"\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "4.5.2.1" + "'", str2, "4.5.2.1");
        org.junit.Assert.assertNull(codeGenerator3);
        org.junit.Assert.assertNull(sTGroup6);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertNotNull(strSet9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(codeGenerator11);
    }

    @Test
    public void test1158() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1158");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.lang.String str3 = python3Target1.getTargetStringLiteralFromString("");
        int int4 = python3Target1.getSerializedATNSegmentLimit();
        int int5 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str6 = python3Target1.getVersion();
        boolean boolean7 = python3Target1.templatesExist();
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = null;
        python3Target1.gen = codeGenerator8;
        boolean boolean10 = python3Target1.supportsOverloadedMethods();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "\"\"" + "'", str3, "\"\"");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 29 + "'", int4 == 29);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 64 + "'", int5 == 64);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "4.5.2.1" + "'", str6, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test1159() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1159");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        python3Target0.language = "";
        org.antlr.v4.codegen.target.Python3Target python3Target3 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean4 = python3Target3.supportsOverloadedMethods();
        java.lang.String str5 = python3Target3.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = null;
        java.lang.String str9 = python3Target3.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator6, "", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = null;
        python3Target3.gen = codeGenerator10;
        java.lang.String[] strArray19 = new java.lang.String[] { "\"\"\"\"", "\\12", "\"\"", "4.5.2.1", "", "\"\"\"\"", "\"\"" };
        java.util.LinkedHashSet<java.lang.String> strSet20 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet20, strArray19);
        python3Target3.badWords = strSet20;
        python3Target0.badWords = strSet20;
        java.lang.String str25 = python3Target0.encodeIntAsCharEscape((int) (byte) 100);
        java.lang.String str27 = python3Target0.getTargetStringLiteralFromString("12");
        int int28 = python3Target0.getInlineTestSetWordSize();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "4.5.2.1" + "'", str5, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\"\"" + "'", str9, "\"\"");
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "d" + "'", str25, "d");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "\"12\"" + "'", str27, "\"12\"");
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 64 + "'", int28 == 64);
    }

    @Test
    public void test1160() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1160");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python3Target1.getBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = null;
        python3Target1.gen = codeGenerator3;
        java.lang.String str6 = python3Target1.getAltLabelContextStructName("hi!");
        java.lang.String str9 = python3Target1.getTargetStringLiteralFromString("\"hi!\"", true);
        boolean boolean10 = python3Target1.templatesExist();
        org.antlr.v4.codegen.CodeGenerator codeGenerator11 = null;
        java.lang.String str14 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator11, "\"1\"", false);
        org.antlr.v4.tool.Grammar grammar15 = null;
        org.stringtemplate.v4.ST sT16 = null;
        // The following exception was thrown during execution in test generation
        try {
            python3Target1.genFile(grammar15, sT16, "_tset\"\\\"Python3\\\"\"Context");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Hi!Context" + "'", str6, "Hi!Context");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\"\\\"hi!\\\"\"" + "'", str9, "\"\\\"hi!\\\"\"");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "1" + "'", str14, "1");
    }

    @Test
    public void test1161() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1161");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        org.antlr.v4.tool.Grammar grammar3 = null;
        org.stringtemplate.v4.ST sT4 = null;
        python3Target0.genRecognizerHeaderFile(grammar3, sT4, "");
        python3Target0.language = "Python3";
        int int9 = python3Target0.getSerializedATNSegmentLimit();
        java.lang.String str11 = python3Target0.getListLabel("_tsetPython3");
        org.stringtemplate.v4.STGroup sTGroup12 = python3Target0.getTemplates();
        java.lang.String[] strArray13 = python3Target0.targetCharValueEscape;
        org.antlr.v4.codegen.target.Python3Target.python3Keywords = strArray13;
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 29 + "'", int9 == 29);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "_tsetPython3" + "'", str11, "_tsetPython3");
        org.junit.Assert.assertNotNull(sTGroup12);
        org.junit.Assert.assertNotNull(strArray13);
    }

    @Test
    public void test1162() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1162");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str2 = python3Target0.getTargetStringLiteralFromString("\"\"\"\"");
        java.lang.String str4 = python3Target0.getTargetStringLiteralFromString("");
        int int5 = python3Target0.getSerializedATNSegmentLimit();
        org.antlr.v4.codegen.target.Python3Target python3Target6 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray7 = python3Target6.targetCharValueEscape;
        org.stringtemplate.v4.STGroup sTGroup8 = python3Target6.templates;
        int int9 = python3Target6.getInlineTestSetWordSize();
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = python3Target6.gen;
        org.antlr.v4.tool.Grammar grammar11 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target12 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str14 = python3Target12.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.tool.Grammar grammar15 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target16 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean17 = python3Target16.supportsOverloadedMethods();
        java.lang.String str18 = python3Target16.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator19 = null;
        java.lang.String str22 = python3Target16.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator19, "", true);
        java.lang.String str23 = python3Target16.getVersion();
        org.antlr.v4.tool.Grammar grammar24 = null;
        int[] intArray25 = new int[] {};
        java.lang.String[] strArray26 = python3Target16.getTokenTypesAsTargetLabels(grammar24, intArray25);
        java.lang.String[] strArray27 = python3Target12.getTokenTypesAsTargetLabels(grammar15, intArray25);
        java.lang.String[] strArray28 = python3Target6.getTokenTypesAsTargetLabels(grammar11, intArray25);
        python3Target0.targetCharValueEscape = strArray28;
        boolean boolean30 = python3Target0.wantsBaseListener();
        org.antlr.v4.codegen.CodeGenerator codeGenerator31 = python3Target0.getCodeGenerator();
        org.antlr.v4.codegen.CodeGenerator codeGenerator32 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target33 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator32);
        java.util.Set<java.lang.String> strSet34 = python3Target33.getBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator35 = null;
        python3Target33.gen = codeGenerator35;
        java.lang.String str38 = python3Target33.getAltLabelContextStructName("hi!");
        java.lang.String str41 = python3Target33.getTargetStringLiteralFromString("\"hi!\"", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator42 = null;
        python3Target33.gen = codeGenerator42;
        org.antlr.v4.tool.Grammar grammar44 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target45 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray46 = python3Target45.targetCharValueEscape;
        org.stringtemplate.v4.STGroup sTGroup47 = python3Target45.templates;
        int int48 = python3Target45.getInlineTestSetWordSize();
        org.antlr.v4.codegen.CodeGenerator codeGenerator49 = python3Target45.gen;
        org.antlr.v4.tool.Grammar grammar50 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target51 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str53 = python3Target51.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.tool.Grammar grammar54 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target55 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean56 = python3Target55.supportsOverloadedMethods();
        java.lang.String str57 = python3Target55.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator58 = null;
        java.lang.String str61 = python3Target55.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator58, "", true);
        java.lang.String str62 = python3Target55.getVersion();
        org.antlr.v4.tool.Grammar grammar63 = null;
        int[] intArray64 = new int[] {};
        java.lang.String[] strArray65 = python3Target55.getTokenTypesAsTargetLabels(grammar63, intArray64);
        java.lang.String[] strArray66 = python3Target51.getTokenTypesAsTargetLabels(grammar54, intArray64);
        java.lang.String[] strArray67 = python3Target45.getTokenTypesAsTargetLabels(grammar50, intArray64);
        java.lang.String[] strArray68 = python3Target33.getTokenTypesAsTargetLabels(grammar44, intArray64);
        java.lang.String str70 = python3Target33.getAltLabelContextStructName("\"Python3\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator71 = python3Target33.gen;
        int int72 = python3Target33.getSerializedATNSegmentLimit();
        org.stringtemplate.v4.STGroup sTGroup73 = python3Target33.loadTemplates();
        python3Target0.templates = sTGroup73;
        python3Target0.addBadWords();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "\"\"\"\"\"\"" + "'", str2, "\"\"\"\"\"\"");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "\"\"" + "'", str4, "\"\"");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 29 + "'", int5 == 29);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNull(sTGroup8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 64 + "'", int9 == 64);
        org.junit.Assert.assertNull(codeGenerator10);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "\"\"\"\"\"\"" + "'", str14, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "4.5.2.1" + "'", str18, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "\"\"" + "'", str22, "\"\"");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "4.5.2.1" + "'", str23, "4.5.2.1");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[]");
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNull(codeGenerator31);
        org.junit.Assert.assertNotNull(strSet34);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "Hi!Context" + "'", str38, "Hi!Context");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "\"\\\"hi!\\\"\"" + "'", str41, "\"\\\"hi!\\\"\"");
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertNull(sTGroup47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 64 + "'", int48 == 64);
        org.junit.Assert.assertNull(codeGenerator49);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "\"\"\"\"\"\"" + "'", str53, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "4.5.2.1" + "'", str57, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "\"\"" + "'", str61, "\"\"");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "4.5.2.1" + "'", str62, "4.5.2.1");
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[]");
        org.junit.Assert.assertNotNull(strArray65);
        org.junit.Assert.assertNotNull(strArray66);
        org.junit.Assert.assertNotNull(strArray67);
        org.junit.Assert.assertNotNull(strArray68);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "\"Python3\"Context" + "'", str70, "\"Python3\"Context");
        org.junit.Assert.assertNull(codeGenerator71);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 29 + "'", int72 == 29);
        org.junit.Assert.assertNotNull(sTGroup73);
    }

    @Test
    public void test1163() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1163");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray1 = python3Target0.targetCharValueEscape;
        java.lang.String str2 = python3Target0.language;
        int int3 = python3Target0.getSerializedATNSegmentLimit();
        org.antlr.v4.codegen.CodeGenerator codeGenerator4 = null;
        python3Target0.gen = codeGenerator4;
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target7 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator6);
        java.util.Set<java.lang.String> strSet8 = python3Target7.getBadWords();
        java.lang.String str10 = python3Target7.getAltLabelContextStructName("d");
        org.stringtemplate.v4.STGroup sTGroup11 = python3Target7.getTemplates();
        python3Target0.templates = sTGroup11;
        org.antlr.v4.codegen.target.Python3Target python3Target13 = new org.antlr.v4.codegen.target.Python3Target();
        python3Target13.language = "4.5.2.1";
        org.antlr.v4.codegen.CodeGenerator codeGenerator16 = python3Target13.getCodeGenerator();
        org.antlr.v4.codegen.CodeGenerator codeGenerator17 = python3Target13.gen;
        org.antlr.v4.codegen.CodeGenerator codeGenerator18 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target19 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator18);
        java.lang.String str21 = python3Target19.getTargetStringLiteralFromString("");
        int int22 = python3Target19.getSerializedATNSegmentLimit();
        boolean boolean23 = python3Target19.wantsBaseVisitor();
        org.stringtemplate.v4.STGroup sTGroup24 = python3Target19.loadTemplates();
        python3Target13.templates = sTGroup24;
        java.lang.String str27 = python3Target13.encodeIntAsCharEscape((int) (byte) 10);
        org.antlr.v4.codegen.CodeGenerator codeGenerator28 = null;
        python3Target13.gen = codeGenerator28;
        boolean boolean30 = python3Target13.wantsBaseListener();
        java.lang.String str32 = python3Target13.getImplicitSetLabel("_12");
        org.antlr.v4.tool.Grammar grammar33 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator34 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target35 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator34);
        java.lang.String str36 = python3Target35.getVersion();
        int int37 = python3Target35.getSerializedATNSegmentLimit();
        java.lang.String str38 = python3Target35.getVersion();
        boolean boolean39 = python3Target35.wantsBaseListener();
        python3Target35.addBadWords();
        org.antlr.v4.tool.Grammar grammar41 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator42 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target43 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator42);
        java.util.Set<java.lang.String> strSet44 = python3Target43.getBadWords();
        org.antlr.v4.codegen.target.Python3Target python3Target45 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str47 = python3Target45.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.codegen.target.Python3Target python3Target48 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean49 = python3Target48.supportsOverloadedMethods();
        java.util.Set<java.lang.String> strSet50 = python3Target48.badWords;
        python3Target45.badWords = strSet50;
        python3Target43.badWords = strSet50;
        java.util.Set<java.lang.String> strSet53 = python3Target43.badWords;
        org.antlr.v4.codegen.CodeGenerator codeGenerator54 = python3Target43.getCodeGenerator();
        org.antlr.v4.tool.Grammar grammar55 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target56 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean57 = python3Target56.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup58 = python3Target56.templates;
        org.antlr.v4.tool.Grammar grammar59 = null;
        org.stringtemplate.v4.ST sT60 = null;
        python3Target56.genRecognizerHeaderFile(grammar59, sT60, "");
        python3Target56.language = "Python3";
        java.util.Set<java.lang.String> strSet65 = null;
        python3Target56.badWords = strSet65;
        org.antlr.v4.codegen.CodeGenerator codeGenerator67 = null;
        java.lang.String str70 = python3Target56.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator67, "\"Hi!Context\"", false);
        java.lang.String str72 = python3Target56.getListLabel("Python3");
        java.lang.String str74 = python3Target56.getTargetStringLiteralFromString("\\0");
        org.antlr.v4.tool.Grammar grammar75 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target76 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str78 = python3Target76.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.tool.Grammar grammar79 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target80 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean81 = python3Target80.supportsOverloadedMethods();
        java.lang.String str82 = python3Target80.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator83 = null;
        java.lang.String str86 = python3Target80.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator83, "", true);
        java.lang.String str87 = python3Target80.getVersion();
        org.antlr.v4.tool.Grammar grammar88 = null;
        int[] intArray89 = new int[] {};
        java.lang.String[] strArray90 = python3Target80.getTokenTypesAsTargetLabels(grammar88, intArray89);
        java.lang.String[] strArray91 = python3Target76.getTokenTypesAsTargetLabels(grammar79, intArray89);
        java.lang.String[] strArray92 = python3Target56.getTokenTypesAsTargetLabels(grammar75, intArray89);
        java.lang.String[] strArray93 = python3Target43.getTokenTypesAsTargetLabels(grammar55, intArray89);
        java.lang.String[] strArray94 = python3Target35.getTokenTypesAsTargetLabels(grammar41, intArray89);
        java.lang.String[] strArray95 = python3Target13.getTokenTypesAsTargetLabels(grammar33, intArray89);
        python3Target0.targetCharValueEscape = strArray95;
        // The following exception was thrown during execution in test generation
        try {
            org.stringtemplate.v4.STGroup sTGroup97 = python3Target0.loadTemplates();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 29 + "'", int3 == 29);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "DContext" + "'", str10, "DContext");
        org.junit.Assert.assertNotNull(sTGroup11);
        org.junit.Assert.assertNull(codeGenerator16);
        org.junit.Assert.assertNull(codeGenerator17);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "\"\"" + "'", str21, "\"\"");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 29 + "'", int22 == 29);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(sTGroup24);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "\\12" + "'", str27, "\\12");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "_tset_12" + "'", str32, "_tset_12");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "4.5.2.1" + "'", str36, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 29 + "'", int37 == 29);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "4.5.2.1" + "'", str38, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(strSet44);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "\"\"\"\"\"\"" + "'", str47, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(strSet50);
        org.junit.Assert.assertNotNull(strSet53);
        org.junit.Assert.assertNull(codeGenerator54);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNull(sTGroup58);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "Hi!Context" + "'", str70, "Hi!Context");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "Python3" + "'", str72, "Python3");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "\"\\0\"" + "'", str74, "\"\\0\"");
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "\"\"\"\"\"\"" + "'", str78, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "4.5.2.1" + "'", str82, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "\"\"" + "'", str86, "\"\"");
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "4.5.2.1" + "'", str87, "4.5.2.1");
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[]");
        org.junit.Assert.assertNotNull(strArray90);
        org.junit.Assert.assertNotNull(strArray91);
        org.junit.Assert.assertNotNull(strArray92);
        org.junit.Assert.assertNotNull(strArray93);
        org.junit.Assert.assertNotNull(strArray94);
        org.junit.Assert.assertNotNull(strArray95);
    }

    @Test
    public void test1164() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1164");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.lang.String str2 = python3Target1.getVersion();
        int int3 = python3Target1.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet4 = python3Target1.getBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator5 = python3Target1.gen;
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = python3Target1.getCodeGenerator();
        java.util.Set<java.lang.String> strSet7 = python3Target1.badWords;
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "4.5.2.1" + "'", str2, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 64 + "'", int3 == 64);
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertNull(codeGenerator5);
        org.junit.Assert.assertNull(codeGenerator6);
        org.junit.Assert.assertNotNull(strSet7);
    }

    @Test
    public void test1165() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1165");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        org.antlr.v4.tool.Grammar grammar3 = null;
        org.stringtemplate.v4.ST sT4 = null;
        python3Target0.genRecognizerHeaderFile(grammar3, sT4, "");
        python3Target0.language = "Python3";
        int int9 = python3Target0.getSerializedATNSegmentLimit();
        java.lang.String str11 = python3Target0.getListLabel("_tsetPython3");
        java.lang.String str13 = python3Target0.getAltLabelContextStructName("\"\\\"DContext\\\"\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator14 = null;
        java.lang.String str17 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator14, "\"\\\"0\\\"\"", true);
        java.lang.String str19 = python3Target0.getTargetStringLiteralFromString("\\12");
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 29 + "'", int9 == 29);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "_tsetPython3" + "'", str11, "_tsetPython3");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "\"\\\"DContext\\\"\"Context" + "'", str13, "\"\\\"DContext\\\"\"Context");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "\"\\\"0\\\"\"" + "'", str17, "\"\\\"0\\\"\"");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "\"\\12\"" + "'", str19, "\"\\12\"");
    }

    @Test
    public void test1166() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1166");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.lang.String str3 = python3Target1.getTargetStringLiteralFromString("");
        int int4 = python3Target1.getSerializedATNSegmentLimit();
        boolean boolean5 = python3Target1.wantsBaseVisitor();
        org.stringtemplate.v4.STGroup sTGroup6 = python3Target1.loadTemplates();
        java.lang.String str7 = python3Target1.getLanguage();
        boolean boolean8 = python3Target1.wantsBaseVisitor();
        org.antlr.v4.tool.ast.GrammarAST grammarAST9 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean10 = python3Target1.grammarSymbolCausesIssueInGeneratedCode(grammarAST9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "\"\"" + "'", str3, "\"\"");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 29 + "'", int4 == 29);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(sTGroup6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Python3" + "'", str7, "Python3");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test1167() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1167");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        org.antlr.v4.tool.Grammar grammar3 = null;
        org.stringtemplate.v4.ST sT4 = null;
        python3Target0.genRecognizerHeaderFile(grammar3, sT4, "");
        python3Target0.language = "Python3";
        java.util.Set<java.lang.String> strSet9 = null;
        python3Target0.badWords = strSet9;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Set<java.lang.String> strSet11 = python3Target0.getBadWords();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
    }

    @Test
    public void test1168() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1168");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        java.lang.String str2 = python3Target0.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = null;
        java.lang.String str6 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator3, "", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = null;
        python3Target0.gen = codeGenerator7;
        java.lang.String[] strArray16 = new java.lang.String[] { "\"\"\"\"", "\\12", "\"\"", "4.5.2.1", "", "\"\"\"\"", "\"\"" };
        java.util.LinkedHashSet<java.lang.String> strSet17 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet17, strArray16);
        python3Target0.badWords = strSet17;
        org.antlr.v4.codegen.CodeGenerator codeGenerator20 = python3Target0.gen;
        java.lang.String str21 = python3Target0.getVersion();
        int int22 = python3Target0.getSerializedATNSegmentLimit();
        java.lang.String str23 = python3Target0.getLanguage();
        java.lang.String str24 = python3Target0.getLanguage();
        java.lang.String str25 = python3Target0.getVersion();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str27 = python3Target0.getImplicitRuleLabel("\"\\\"\\\\\\\"Python3\\\\\\\"\\\"\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "4.5.2.1" + "'", str2, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\"\"" + "'", str6, "\"\"");
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNull(codeGenerator20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "4.5.2.1" + "'", str21, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 29 + "'", int22 == 29);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "4.5.2.1" + "'", str25, "4.5.2.1");
    }

    @Test
    public void test1169() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1169");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        python3Target0.language = "";
        org.antlr.v4.codegen.target.Python3Target python3Target3 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean4 = python3Target3.supportsOverloadedMethods();
        java.lang.String str5 = python3Target3.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = null;
        java.lang.String str9 = python3Target3.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator6, "", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = null;
        python3Target3.gen = codeGenerator10;
        java.lang.String[] strArray19 = new java.lang.String[] { "\"\"\"\"", "\\12", "\"\"", "4.5.2.1", "", "\"\"\"\"", "\"\"" };
        java.util.LinkedHashSet<java.lang.String> strSet20 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet20, strArray19);
        python3Target3.badWords = strSet20;
        python3Target0.badWords = strSet20;
        java.lang.String str25 = python3Target0.encodeIntAsCharEscape((int) (byte) 100);
        java.lang.String str26 = python3Target0.getLanguage();
        java.lang.String str28 = python3Target0.getTargetStringLiteralFromString("\"\\0\"");
        org.antlr.v4.codegen.target.Python3Target python3Target29 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean30 = python3Target29.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup31 = python3Target29.templates;
        org.antlr.v4.tool.Grammar grammar32 = null;
        org.stringtemplate.v4.ST sT33 = null;
        python3Target29.genRecognizerHeaderFile(grammar32, sT33, "");
        python3Target29.language = "Python3";
        java.util.Set<java.lang.String> strSet38 = null;
        python3Target29.badWords = strSet38;
        boolean boolean40 = python3Target29.wantsBaseVisitor();
        java.lang.String str42 = python3Target29.getImplicitSetLabel("Python3");
        int int43 = python3Target29.getInlineTestSetWordSize();
        java.lang.String str44 = python3Target29.language;
        java.lang.String str45 = python3Target29.getLanguage();
        int int46 = python3Target29.getInlineTestSetWordSize();
        java.lang.String str48 = python3Target29.getImplicitRuleLabel("\"\\\"\\\"4.5.2.1\\\"\\\"\"");
        java.lang.String str50 = python3Target29.getImplicitSetLabel("_tset_12");
        org.stringtemplate.v4.STGroup sTGroup51 = python3Target29.templates;
        python3Target0.templates = sTGroup51;
        org.antlr.v4.tool.Grammar grammar53 = null;
        org.stringtemplate.v4.ST sT54 = null;
        // The following exception was thrown during execution in test generation
        try {
            python3Target0.genListenerFile(grammar53, sT54);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "4.5.2.1" + "'", str5, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\"\"" + "'", str9, "\"\"");
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "d" + "'", str25, "d");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "\"\"\\0\"\"" + "'", str28, "\"\"\\0\"\"");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNull(sTGroup31);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "_tsetPython3" + "'", str42, "_tsetPython3");
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 64 + "'", int43 == 64);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "Python3" + "'", str44, "Python3");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "Python3" + "'", str45, "Python3");
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 64 + "'", int46 == 64);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "_\"\\\"\\\"4.5.2.1\\\"\\\"\"" + "'", str48, "_\"\\\"\\\"4.5.2.1\\\"\\\"\"");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "_tset_tset_12" + "'", str50, "_tset_tset_12");
        org.junit.Assert.assertNotNull(sTGroup51);
    }

    @Test
    public void test1170() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1170");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!", "hi!" };
        python3Target0.targetCharValueEscape = strArray5;
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = null;
        java.lang.String str10 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator7, "", false);
        int int11 = python3Target0.getSerializedATNSegmentLimit();
        java.lang.String str12 = python3Target0.getVersion();
        org.antlr.v4.tool.ast.GrammarAST grammarAST13 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str14 = python3Target0.getLoopCounter(grammarAST13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 29 + "'", int11 == 29);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "4.5.2.1" + "'", str12, "4.5.2.1");
    }

    @Test
    public void test1171() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1171");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        org.antlr.v4.tool.Grammar grammar3 = null;
        org.stringtemplate.v4.ST sT4 = null;
        python3Target0.genRecognizerHeaderFile(grammar3, sT4, "");
        org.antlr.v4.codegen.target.Python3Target python3Target7 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray8 = python3Target7.targetCharValueEscape;
        python3Target0.targetCharValueEscape = strArray8;
        python3Target0.addBadWords();
        java.lang.String[] strArray11 = python3Target0.targetCharValueEscape;
        org.antlr.v4.codegen.target.Python3Target python3Target12 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean13 = python3Target12.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup14 = python3Target12.templates;
        java.lang.String[] strArray17 = new java.lang.String[] { "hi!", "hi!" };
        python3Target12.targetCharValueEscape = strArray17;
        org.antlr.v4.codegen.CodeGenerator codeGenerator19 = null;
        java.lang.String str22 = python3Target12.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator19, "", false);
        int int23 = python3Target12.getSerializedATNSegmentLimit();
        java.lang.String str24 = python3Target12.getVersion();
        boolean boolean25 = python3Target12.supportsOverloadedMethods();
        org.antlr.v4.codegen.target.Python3Target python3Target26 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean27 = python3Target26.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup28 = python3Target26.templates;
        java.lang.String[] strArray31 = new java.lang.String[] { "hi!", "hi!" };
        python3Target26.targetCharValueEscape = strArray31;
        java.lang.String[] strArray34 = new java.lang.String[] { "hi!" };
        org.antlr.v4.codegen.target.Python3Target.python3Keywords = strArray34;
        python3Target26.targetCharValueEscape = strArray34;
        org.antlr.v4.codegen.target.Python3Target.python3Keywords = strArray34;
        python3Target12.targetCharValueEscape = strArray34;
        python3Target0.targetCharValueEscape = strArray34;
        java.lang.String[] strArray40 = python3Target0.targetCharValueEscape;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str42 = python3Target0.getElementName("_\"\"4.5.2.1\"\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(sTGroup14);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 29 + "'", int23 == 29);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "4.5.2.1" + "'", str24, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNull(sTGroup28);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertNotNull(strArray40);
    }

    @Test
    public void test1172() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1172");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python3Target1.getBadWords();
        org.antlr.v4.codegen.target.Python3Target python3Target3 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str5 = python3Target3.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.codegen.target.Python3Target python3Target6 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean7 = python3Target6.supportsOverloadedMethods();
        java.util.Set<java.lang.String> strSet8 = python3Target6.badWords;
        python3Target3.badWords = strSet8;
        python3Target1.badWords = strSet8;
        java.util.Set<java.lang.String> strSet11 = python3Target1.badWords;
        org.antlr.v4.codegen.CodeGenerator codeGenerator12 = python3Target1.getCodeGenerator();
        org.antlr.v4.tool.Grammar grammar13 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target14 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean15 = python3Target14.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup16 = python3Target14.templates;
        org.antlr.v4.tool.Grammar grammar17 = null;
        org.stringtemplate.v4.ST sT18 = null;
        python3Target14.genRecognizerHeaderFile(grammar17, sT18, "");
        python3Target14.language = "Python3";
        java.util.Set<java.lang.String> strSet23 = null;
        python3Target14.badWords = strSet23;
        org.antlr.v4.codegen.CodeGenerator codeGenerator25 = null;
        java.lang.String str28 = python3Target14.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator25, "\"Hi!Context\"", false);
        java.lang.String str30 = python3Target14.getListLabel("Python3");
        java.lang.String str32 = python3Target14.getTargetStringLiteralFromString("\\0");
        org.antlr.v4.tool.Grammar grammar33 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target34 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str36 = python3Target34.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.tool.Grammar grammar37 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target38 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean39 = python3Target38.supportsOverloadedMethods();
        java.lang.String str40 = python3Target38.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator41 = null;
        java.lang.String str44 = python3Target38.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator41, "", true);
        java.lang.String str45 = python3Target38.getVersion();
        org.antlr.v4.tool.Grammar grammar46 = null;
        int[] intArray47 = new int[] {};
        java.lang.String[] strArray48 = python3Target38.getTokenTypesAsTargetLabels(grammar46, intArray47);
        java.lang.String[] strArray49 = python3Target34.getTokenTypesAsTargetLabels(grammar37, intArray47);
        java.lang.String[] strArray50 = python3Target14.getTokenTypesAsTargetLabels(grammar33, intArray47);
        java.lang.String[] strArray51 = python3Target1.getTokenTypesAsTargetLabels(grammar13, intArray47);
        java.lang.String str53 = python3Target1.encodeIntAsCharEscape(100);
        java.lang.String str55 = python3Target1.encodeIntAsCharEscape(10);
        org.stringtemplate.v4.STGroup sTGroup56 = python3Target1.getTemplates();
        org.antlr.v4.tool.Grammar grammar57 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str59 = python3Target1.getTokenTypeAsTargetLabel(grammar57, (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "\"\"\"\"\"\"" + "'", str5, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertNotNull(strSet11);
        org.junit.Assert.assertNull(codeGenerator12);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(sTGroup16);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "Hi!Context" + "'", str28, "Hi!Context");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "Python3" + "'", str30, "Python3");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "\"\\0\"" + "'", str32, "\"\\0\"");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "\"\"\"\"\"\"" + "'", str36, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "4.5.2.1" + "'", str40, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "\"\"" + "'", str44, "\"\"");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "4.5.2.1" + "'", str45, "4.5.2.1");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[]");
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertNotNull(strArray49);
        org.junit.Assert.assertNotNull(strArray50);
        org.junit.Assert.assertNotNull(strArray51);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "d" + "'", str53, "d");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "\\n" + "'", str55, "\\n");
        org.junit.Assert.assertNotNull(sTGroup56);
    }

    @Test
    public void test1173() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1173");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        python3Target0.language = "\"\"\"\"";
        org.antlr.v4.codegen.CodeGenerator codeGenerator4 = null;
        java.lang.String str7 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator4, "\\12", true);
        java.lang.String[] strArray8 = python3Target0.targetCharValueEscape;
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "\"1\"" + "'", str7, "\"1\"");
        org.junit.Assert.assertNotNull(strArray8);
    }

    @Test
    public void test1174() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1174");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        java.lang.String str2 = python3Target0.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = null;
        java.lang.String str6 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator3, "", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = null;
        python3Target0.gen = codeGenerator7;
        java.lang.String[] strArray16 = new java.lang.String[] { "\"\"\"\"", "\\12", "\"\"", "4.5.2.1", "", "\"\"\"\"", "\"\"" };
        java.util.LinkedHashSet<java.lang.String> strSet17 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet17, strArray16);
        python3Target0.badWords = strSet17;
        org.antlr.v4.codegen.CodeGenerator codeGenerator20 = python3Target0.gen;
        java.lang.String str21 = python3Target0.getVersion();
        int int22 = python3Target0.getSerializedATNSegmentLimit();
        boolean boolean23 = python3Target0.wantsBaseVisitor();
        java.lang.Class<?> wildcardClass24 = python3Target0.getClass();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "4.5.2.1" + "'", str2, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\"\"" + "'", str6, "\"\"");
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNull(codeGenerator20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "4.5.2.1" + "'", str21, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 29 + "'", int22 == 29);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(wildcardClass24);
    }

    @Test
    public void test1175() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1175");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray1 = python3Target0.targetCharValueEscape;
        java.util.Set<java.lang.String> strSet2 = python3Target0.badWords;
        int int3 = python3Target0.getInlineTestSetWordSize();
        boolean boolean4 = python3Target0.templatesExist();
        java.util.Set<java.lang.String> strSet5 = python3Target0.badWords;
        org.antlr.v4.tool.Grammar grammar6 = null;
        org.stringtemplate.v4.ST sT7 = null;
        python3Target0.genRecognizerHeaderFile(grammar6, sT7, "\\0");
        python3Target0.language = "_tset\\64";
        org.antlr.v4.tool.Grammar grammar12 = null;
        org.stringtemplate.v4.ST sT13 = null;
        // The following exception was thrown during execution in test generation
        try {
            python3Target0.genFile(grammar12, sT13, "\".5.2.\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 64 + "'", int3 == 64);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(strSet5);
    }

    @Test
    public void test1176() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1176");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!", "hi!" };
        python3Target0.targetCharValueEscape = strArray5;
        java.lang.String str8 = python3Target0.getTargetStringLiteralFromString("\"\"");
        org.stringtemplate.v4.STGroup sTGroup9 = null;
        python3Target0.templates = sTGroup9;
        java.lang.String[] strArray11 = python3Target0.targetCharValueEscape;
        int int12 = python3Target0.getInlineTestSetWordSize();
        org.antlr.v4.codegen.model.RuleFunction ruleFunction13 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str14 = python3Target0.getRuleFunctionContextStructName(ruleFunction13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\"\"\"\"" + "'", str8, "\"\"\"\"");
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 64 + "'", int12 == 64);
    }

    @Test
    public void test1177() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1177");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        java.lang.String str2 = python3Target0.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = python3Target0.getCodeGenerator();
        org.stringtemplate.v4.STGroup sTGroup4 = null;
        python3Target0.templates = sTGroup4;
        org.stringtemplate.v4.STGroup sTGroup6 = python3Target0.templates;
        java.lang.String[] strArray7 = python3Target0.targetCharValueEscape;
        java.util.Set<java.lang.String> strSet8 = python3Target0.badWords;
        org.antlr.v4.tool.Grammar grammar9 = null;
        org.stringtemplate.v4.ST sT10 = null;
        // The following exception was thrown during execution in test generation
        try {
            python3Target0.genFile(grammar9, sT10, "Hi!Context");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "4.5.2.1" + "'", str2, "4.5.2.1");
        org.junit.Assert.assertNull(codeGenerator3);
        org.junit.Assert.assertNull(sTGroup6);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strSet8);
    }

    @Test
    public void test1178() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1178");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.lang.String str3 = python3Target1.getTargetStringLiteralFromString("");
        int int4 = python3Target1.getSerializedATNSegmentLimit();
        boolean boolean5 = python3Target1.wantsBaseListener();
        org.antlr.v4.codegen.target.Python3Target python3Target6 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean7 = python3Target6.supportsOverloadedMethods();
        java.lang.String str8 = python3Target6.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator9 = null;
        java.lang.String str12 = python3Target6.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator9, "", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator13 = null;
        python3Target6.gen = codeGenerator13;
        java.lang.String[] strArray22 = new java.lang.String[] { "\"\"\"\"", "\\12", "\"\"", "4.5.2.1", "", "\"\"\"\"", "\"\"" };
        java.util.LinkedHashSet<java.lang.String> strSet23 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet23, strArray22);
        python3Target6.badWords = strSet23;
        org.antlr.v4.tool.Grammar grammar26 = null;
        org.stringtemplate.v4.ST sT27 = null;
        python3Target6.genRecognizerHeaderFile(grammar26, sT27, "\"\"");
        java.lang.String str31 = python3Target6.encodeIntAsCharEscape((int) (byte) 10);
        org.antlr.v4.codegen.target.Python3Target python3Target32 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray33 = python3Target32.targetCharValueEscape;
        java.lang.String str34 = python3Target32.language;
        int int35 = python3Target32.getSerializedATNSegmentLimit();
        org.antlr.v4.codegen.CodeGenerator codeGenerator36 = null;
        python3Target32.gen = codeGenerator36;
        org.antlr.v4.codegen.CodeGenerator codeGenerator38 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target39 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator38);
        java.util.Set<java.lang.String> strSet40 = python3Target39.getBadWords();
        java.lang.String str42 = python3Target39.getAltLabelContextStructName("d");
        org.stringtemplate.v4.STGroup sTGroup43 = python3Target39.getTemplates();
        python3Target32.templates = sTGroup43;
        python3Target6.templates = sTGroup43;
        python3Target1.templates = sTGroup43;
        python3Target1.language = "\"\"@\"\"";
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "\"\"" + "'", str3, "\"\"");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 29 + "'", int4 == 29);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "4.5.2.1" + "'", str8, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "\"\"" + "'", str12, "\"\"");
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "\\12" + "'", str31, "\\12");
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 29 + "'", int35 == 29);
        org.junit.Assert.assertNotNull(strSet40);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "DContext" + "'", str42, "DContext");
        org.junit.Assert.assertNotNull(sTGroup43);
    }

    @Test
    public void test1179() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1179");
        java.lang.String str1 = org.stringtemplate.v4.StringRenderer.escapeHTML("_\"\"12\"\"");
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "_\"\"12\"\"" + "'", str1, "_\"\"12\"\"");
    }

    @Test
    public void test1180() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1180");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.lang.String str2 = python3Target1.getVersion();
        int int3 = python3Target1.getSerializedATNSegmentLimit();
        java.lang.String str4 = python3Target1.getVersion();
        boolean boolean5 = python3Target1.wantsBaseListener();
        python3Target1.addBadWords();
        java.lang.Class<?> wildcardClass7 = python3Target1.getClass();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "4.5.2.1" + "'", str2, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 29 + "'", int3 == 29);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "4.5.2.1" + "'", str4, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test1181() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1181");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        org.antlr.v4.tool.Grammar grammar3 = null;
        org.stringtemplate.v4.ST sT4 = null;
        python3Target0.genRecognizerHeaderFile(grammar3, sT4, "");
        python3Target0.language = "Python3";
        int int9 = python3Target0.getSerializedATNSegmentLimit();
        java.lang.String str11 = python3Target0.getListLabel("_tsetPython3");
        org.antlr.v4.codegen.CodeGenerator codeGenerator12 = null;
        java.lang.String str15 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator12, "\"\"\"hi!\"\"\"", true);
        java.lang.String str17 = python3Target0.getAltLabelContextStructName("\"\"\"\"\"\"\"\"Context");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str19 = python3Target0.getImplicitTokenLabel("_\"\\\"\\\"4.5.2.1\\\"\\\"\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 29 + "'", int9 == 29);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "_tsetPython3" + "'", str11, "_tsetPython3");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "\"\\\"\\\"hi!\\\"\\\"\"" + "'", str15, "\"\\\"\\\"hi!\\\"\\\"\"");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "\"\"\"\"\"\"\"\"ContextContext" + "'", str17, "\"\"\"\"\"\"\"\"ContextContext");
    }

    @Test
    public void test1182() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1182");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.lang.String str3 = python3Target1.getTargetStringLiteralFromString("");
        int int4 = python3Target1.getSerializedATNSegmentLimit();
        boolean boolean5 = python3Target1.wantsBaseVisitor();
        org.stringtemplate.v4.STGroup sTGroup6 = python3Target1.loadTemplates();
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = python3Target1.gen;
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = python3Target1.getCodeGenerator();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "\"\"" + "'", str3, "\"\"");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 29 + "'", int4 == 29);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(sTGroup6);
        org.junit.Assert.assertNull(codeGenerator7);
        org.junit.Assert.assertNull(codeGenerator8);
    }

    @Test
    public void test1183() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1183");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        python3Target0.language = "";
        org.antlr.v4.codegen.target.Python3Target python3Target3 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean4 = python3Target3.supportsOverloadedMethods();
        java.lang.String str5 = python3Target3.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = null;
        java.lang.String str9 = python3Target3.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator6, "", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = null;
        python3Target3.gen = codeGenerator10;
        java.lang.String[] strArray19 = new java.lang.String[] { "\"\"\"\"", "\\12", "\"\"", "4.5.2.1", "", "\"\"\"\"", "\"\"" };
        java.util.LinkedHashSet<java.lang.String> strSet20 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet20, strArray19);
        python3Target3.badWords = strSet20;
        python3Target0.badWords = strSet20;
        java.lang.String str25 = python3Target0.encodeIntAsCharEscape((int) (byte) 100);
        java.lang.String str26 = python3Target0.getLanguage();
        java.lang.String str28 = python3Target0.getTargetStringLiteralFromString("\"\\0\"");
        boolean boolean29 = python3Target0.templatesExist();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "4.5.2.1" + "'", str5, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\"\"" + "'", str9, "\"\"");
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "d" + "'", str25, "d");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "\"\"\\0\"\"" + "'", str28, "\"\"\\0\"\"");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
    }

    @Test
    public void test1184() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1184");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        org.antlr.v4.tool.Grammar grammar3 = null;
        org.stringtemplate.v4.ST sT4 = null;
        python3Target0.genRecognizerHeaderFile(grammar3, sT4, "");
        python3Target0.language = "Python3";
        int int9 = python3Target0.getSerializedATNSegmentLimit();
        java.lang.String str11 = python3Target0.getListLabel("_tsetPython3");
        java.lang.String str13 = python3Target0.getAltLabelContextStructName("\"\\\"DContext\\\"\"");
        java.util.Set<java.lang.String> strSet14 = python3Target0.badWords;
        org.antlr.v4.tool.Grammar grammar15 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str17 = python3Target0.getTokenTypeAsTargetLabel(grammar15, 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 29 + "'", int9 == 29);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "_tsetPython3" + "'", str11, "_tsetPython3");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "\"\\\"DContext\\\"\"Context" + "'", str13, "\"\\\"DContext\\\"\"Context");
        org.junit.Assert.assertNotNull(strSet14);
    }

    @Test
    public void test1185() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1185");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray1 = python3Target0.targetCharValueEscape;
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        int int3 = python3Target0.getInlineTestSetWordSize();
        org.antlr.v4.codegen.CodeGenerator codeGenerator4 = python3Target0.gen;
        org.antlr.v4.tool.Grammar grammar5 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target6 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str8 = python3Target6.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.tool.Grammar grammar9 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target10 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean11 = python3Target10.supportsOverloadedMethods();
        java.lang.String str12 = python3Target10.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator13 = null;
        java.lang.String str16 = python3Target10.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator13, "", true);
        java.lang.String str17 = python3Target10.getVersion();
        org.antlr.v4.tool.Grammar grammar18 = null;
        int[] intArray19 = new int[] {};
        java.lang.String[] strArray20 = python3Target10.getTokenTypesAsTargetLabels(grammar18, intArray19);
        java.lang.String[] strArray21 = python3Target6.getTokenTypesAsTargetLabels(grammar9, intArray19);
        java.lang.String[] strArray22 = python3Target0.getTokenTypesAsTargetLabels(grammar5, intArray19);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str24 = python3Target0.getElementName("DContext");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 64 + "'", int3 == 64);
        org.junit.Assert.assertNull(codeGenerator4);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\"\"\"\"\"\"" + "'", str8, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "4.5.2.1" + "'", str12, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "\"\"" + "'", str16, "\"\"");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "4.5.2.1" + "'", str17, "4.5.2.1");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[]");
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(strArray22);
    }

    @Test
    public void test1186() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1186");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        java.lang.String str2 = python3Target0.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = null;
        java.lang.String str6 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator3, "", true);
        java.lang.String str7 = python3Target0.getVersion();
        org.antlr.v4.tool.Grammar grammar8 = null;
        int[] intArray9 = new int[] {};
        java.lang.String[] strArray10 = python3Target0.getTokenTypesAsTargetLabels(grammar8, intArray9);
        java.lang.String[] strArray11 = python3Target0.targetCharValueEscape;
        java.util.Set<java.lang.String> strSet12 = python3Target0.badWords;
        python3Target0.addBadWords();
        org.antlr.v4.tool.ast.GrammarAST grammarAST14 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean15 = python3Target0.grammarSymbolCausesIssueInGeneratedCode(grammarAST14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "4.5.2.1" + "'", str2, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\"\"" + "'", str6, "\"\"");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "4.5.2.1" + "'", str7, "4.5.2.1");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[]");
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(strSet12);
    }

    @Test
    public void test1187() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1187");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray1 = python3Target0.targetCharValueEscape;
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = null;
        java.lang.String str6 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator3, "\"\\12\"", false);
        java.lang.String str7 = python3Target0.getLanguage();
        java.lang.String str9 = python3Target0.getTargetStringLiteralFromString("Hi!Context");
        boolean boolean10 = python3Target0.templatesExist();
        boolean boolean11 = python3Target0.templatesExist();
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "12" + "'", str6, "12");
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\"Hi!Context\"" + "'", str9, "\"Hi!Context\"");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test1188() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1188");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.lang.String str3 = python3Target1.getTargetStringLiteralFromString("");
        int int4 = python3Target1.getSerializedATNSegmentLimit();
        int int5 = python3Target1.getInlineTestSetWordSize();
        java.lang.String str6 = python3Target1.getVersion();
        boolean boolean7 = python3Target1.templatesExist();
        java.lang.String str9 = python3Target1.encodeIntAsCharEscape((int) 'a');
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str11 = python3Target1.getElementName("\"\"@\"\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "\"\"" + "'", str3, "\"\"");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 29 + "'", int4 == 29);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 64 + "'", int5 == 64);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "4.5.2.1" + "'", str6, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "a" + "'", str9, "a");
    }

    @Test
    public void test1189() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1189");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python3Target1.getBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = null;
        python3Target1.gen = codeGenerator3;
        java.lang.String str6 = python3Target1.getAltLabelContextStructName("hi!");
        java.lang.String str9 = python3Target1.getTargetStringLiteralFromString("\"hi!\"", true);
        python3Target1.language = "\"\\\"\\\"hi!\\\"\\\"\"";
        java.lang.String str13 = python3Target1.getImplicitSetLabel("\"\"");
        int int14 = python3Target1.getSerializedATNSegmentLimit();
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Hi!Context" + "'", str6, "Hi!Context");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\"\\\"hi!\\\"\"" + "'", str9, "\"\\\"hi!\\\"\"");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "_tset\"\"" + "'", str13, "_tset\"\"");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 29 + "'", int14 == 29);
    }

    @Test
    public void test1190() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1190");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.lang.String str3 = python3Target1.getTargetStringLiteralFromString("");
        int int4 = python3Target1.getSerializedATNSegmentLimit();
        boolean boolean5 = python3Target1.wantsBaseVisitor();
        java.lang.String str7 = python3Target1.getImplicitRuleLabel("\"\"\\\"\\\"hi!\\\"\\\"\"\"");
        java.lang.String str9 = python3Target1.getTargetStringLiteralFromString("_\"\\\"\\\"\"");
        org.antlr.v4.tool.Rule rule10 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str11 = python3Target1.getRuleFunctionContextStructName(rule10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "\"\"" + "'", str3, "\"\"");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 29 + "'", int4 == 29);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "_\"\"\\\"\\\"hi!\\\"\\\"\"\"" + "'", str7, "_\"\"\\\"\\\"hi!\\\"\\\"\"\"");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\"_\\\"\\\\\\\"\\\\\\\"\\\"\"" + "'", str9, "\"_\\\"\\\\\\\"\\\\\\\"\\\"\"");
    }

    @Test
    public void test1191() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1191");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        java.lang.String str2 = python3Target0.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = null;
        java.lang.String str6 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator3, "", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = null;
        python3Target0.gen = codeGenerator7;
        int int9 = python3Target0.getSerializedATNSegmentLimit();
        org.antlr.v4.tool.Grammar grammar10 = null;
        org.stringtemplate.v4.ST sT11 = null;
        python3Target0.genRecognizerHeaderFile(grammar10, sT11, "_tset12");
        org.stringtemplate.v4.STGroup sTGroup14 = python3Target0.templates;
        org.stringtemplate.v4.STGroup sTGroup15 = python3Target0.templates;
        python3Target0.language = "\\nContext";
        org.stringtemplate.v4.STGroup sTGroup18 = python3Target0.templates;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str20 = python3Target0.getAltLabelContextStructName("");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 0");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "4.5.2.1" + "'", str2, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\"\"" + "'", str6, "\"\"");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 29 + "'", int9 == 29);
        org.junit.Assert.assertNull(sTGroup14);
        org.junit.Assert.assertNull(sTGroup15);
        org.junit.Assert.assertNull(sTGroup18);
    }

    @Test
    public void test1192() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1192");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        java.lang.String str2 = python3Target0.getVersion();
        boolean boolean3 = python3Target0.supportsOverloadedMethods();
        org.antlr.v4.tool.Grammar grammar4 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str6 = python3Target0.getTokenTypeAsTargetLabel(grammar4, (int) (short) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "4.5.2.1" + "'", str2, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    }

    @Test
    public void test1193() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1193");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python3Target1.getBadWords();
        java.lang.String str4 = python3Target1.getAltLabelContextStructName("d");
        java.lang.String str6 = python3Target1.getTargetStringLiteralFromString("\"\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = python3Target1.getCodeGenerator();
        boolean boolean8 = python3Target1.wantsBaseVisitor();
        org.antlr.v4.tool.Grammar grammar9 = null;
        org.stringtemplate.v4.ST sT10 = null;
        python3Target1.genRecognizerHeaderFile(grammar9, sT10, "d");
        java.lang.String str14 = python3Target1.getListLabel("\"\"\\\"\\\"\\\"\\\\\\\"\\\\\\\"hi!\\\\\\\"\\\\\\\"\\\"\\\"\\\"\"\"");
        org.antlr.v4.tool.ast.GrammarAST grammarAST15 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean16 = python3Target1.visibleGrammarSymbolCausesIssueInGeneratedCode(grammarAST15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "DContext" + "'", str4, "DContext");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\"\\\"\\\"\"" + "'", str6, "\"\\\"\\\"\"");
        org.junit.Assert.assertNull(codeGenerator7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "\"\"\\\"\\\"\\\"\\\\\\\"\\\\\\\"hi!\\\\\\\"\\\\\\\"\\\"\\\"\\\"\"\"" + "'", str14, "\"\"\\\"\\\"\\\"\\\\\\\"\\\\\\\"hi!\\\\\\\"\\\\\\\"\\\"\\\"\\\"\"\"");
    }

    @Test
    public void test1194() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1194");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        org.antlr.v4.tool.Grammar grammar3 = null;
        org.stringtemplate.v4.ST sT4 = null;
        python3Target0.genRecognizerHeaderFile(grammar3, sT4, "");
        python3Target0.language = "Python3";
        java.util.Set<java.lang.String> strSet9 = null;
        python3Target0.badWords = strSet9;
        org.antlr.v4.codegen.CodeGenerator codeGenerator11 = null;
        java.lang.String str14 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator11, "\"Hi!Context\"", false);
        java.lang.String str16 = python3Target0.getListLabel("Python3");
        java.lang.String str18 = python3Target0.getTargetStringLiteralFromString("\\0");
        org.antlr.v4.tool.Grammar grammar19 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target20 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str22 = python3Target20.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.tool.Grammar grammar23 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target24 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean25 = python3Target24.supportsOverloadedMethods();
        java.lang.String str26 = python3Target24.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator27 = null;
        java.lang.String str30 = python3Target24.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator27, "", true);
        java.lang.String str31 = python3Target24.getVersion();
        org.antlr.v4.tool.Grammar grammar32 = null;
        int[] intArray33 = new int[] {};
        java.lang.String[] strArray34 = python3Target24.getTokenTypesAsTargetLabels(grammar32, intArray33);
        java.lang.String[] strArray35 = python3Target20.getTokenTypesAsTargetLabels(grammar23, intArray33);
        java.lang.String[] strArray36 = python3Target0.getTokenTypesAsTargetLabels(grammar19, intArray33);
        java.lang.String str38 = python3Target0.getAltLabelContextStructName("\\n");
        org.antlr.v4.codegen.target.Python3Target python3Target39 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean40 = python3Target39.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup41 = python3Target39.templates;
        org.antlr.v4.tool.Grammar grammar42 = null;
        org.stringtemplate.v4.ST sT43 = null;
        python3Target39.genRecognizerHeaderFile(grammar42, sT43, "");
        org.antlr.v4.codegen.target.Python3Target python3Target46 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray47 = python3Target46.targetCharValueEscape;
        python3Target39.targetCharValueEscape = strArray47;
        python3Target39.addBadWords();
        java.lang.String[] strArray50 = python3Target39.targetCharValueEscape;
        python3Target0.targetCharValueEscape = strArray50;
        org.antlr.v4.codegen.target.Python3Target python3Target52 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean53 = python3Target52.supportsOverloadedMethods();
        int int54 = python3Target52.getInlineTestSetWordSize();
        java.lang.String[] strArray55 = python3Target52.targetCharValueEscape;
        org.antlr.v4.codegen.target.Python3Target.python3Keywords = strArray55;
        python3Target0.targetCharValueEscape = strArray55;
        int int58 = python3Target0.getInlineTestSetWordSize();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Hi!Context" + "'", str14, "Hi!Context");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Python3" + "'", str16, "Python3");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "\"\\0\"" + "'", str18, "\"\\0\"");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "\"\"\"\"\"\"" + "'", str22, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "4.5.2.1" + "'", str26, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "\"\"" + "'", str30, "\"\"");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "4.5.2.1" + "'", str31, "4.5.2.1");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[]");
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "\\nContext" + "'", str38, "\\nContext");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNull(sTGroup41);
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertNotNull(strArray50);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 64 + "'", int54 == 64);
        org.junit.Assert.assertNotNull(strArray55);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 64 + "'", int58 == 64);
    }

    @Test
    public void test1195() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1195");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray1 = python3Target0.targetCharValueEscape;
        java.lang.String str2 = python3Target0.language;
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = null;
        python3Target0.gen = codeGenerator3;
        // The following exception was thrown during execution in test generation
        try {
            org.stringtemplate.v4.STGroup sTGroup5 = python3Target0.loadTemplates();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertNull(str2);
    }

    @Test
    public void test1196() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1196");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray1 = python3Target0.targetCharValueEscape;
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        int int3 = python3Target0.getInlineTestSetWordSize();
        org.antlr.v4.codegen.CodeGenerator codeGenerator4 = python3Target0.gen;
        org.antlr.v4.tool.Grammar grammar5 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target6 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str8 = python3Target6.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.tool.Grammar grammar9 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target10 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean11 = python3Target10.supportsOverloadedMethods();
        java.lang.String str12 = python3Target10.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator13 = null;
        java.lang.String str16 = python3Target10.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator13, "", true);
        java.lang.String str17 = python3Target10.getVersion();
        org.antlr.v4.tool.Grammar grammar18 = null;
        int[] intArray19 = new int[] {};
        java.lang.String[] strArray20 = python3Target10.getTokenTypesAsTargetLabels(grammar18, intArray19);
        java.lang.String[] strArray21 = python3Target6.getTokenTypesAsTargetLabels(grammar9, intArray19);
        java.lang.String[] strArray22 = python3Target0.getTokenTypesAsTargetLabels(grammar5, intArray19);
        java.lang.String[] strArray45 = new java.lang.String[] { "\"\\\"\\\"\"", "DContext", "", "hi!", "d", "\"\"\"\"\"\"", "\"\"\"\"\"\"", "_tsetPython3", "\"hi!\"", "\"hi!\"", "Hi!Context", "\"\"\"\"\"\"", "\"hi!\"", "12", "\"4.5.2.1\"", "DContext", "Hi!Context", "Python3", "\"hi!\"", "", "\"\"", "\\\"4.5.2.1\\\"" };
        java.util.LinkedHashSet<java.lang.String> strSet46 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet46, strArray45);
        python3Target0.badWords = strSet46;
        boolean boolean49 = python3Target0.wantsBaseVisitor();
        python3Target0.addBadWords();
        // The following exception was thrown during execution in test generation
        try {
            org.stringtemplate.v4.STGroup sTGroup51 = python3Target0.getTemplates();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 64 + "'", int3 == 64);
        org.junit.Assert.assertNull(codeGenerator4);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\"\"\"\"\"\"" + "'", str8, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "4.5.2.1" + "'", str12, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "\"\"" + "'", str16, "\"\"");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "4.5.2.1" + "'", str17, "4.5.2.1");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[]");
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
    }

    @Test
    public void test1197() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1197");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        org.antlr.v4.tool.Grammar grammar3 = null;
        org.stringtemplate.v4.ST sT4 = null;
        python3Target0.genRecognizerHeaderFile(grammar3, sT4, "");
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = python3Target0.getCodeGenerator();
        boolean boolean8 = python3Target0.supportsOverloadedMethods();
        boolean boolean9 = python3Target0.supportsOverloadedMethods();
        org.antlr.v4.tool.ast.GrammarAST grammarAST10 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str11 = python3Target0.getLoopCounter(grammarAST10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertNull(codeGenerator7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test1198() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1198");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray1 = python3Target0.targetCharValueEscape;
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = null;
        java.lang.String str6 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator3, "\"\\12\"", false);
        int int7 = python3Target0.getSerializedATNSegmentLimit();
        boolean boolean8 = python3Target0.templatesExist();
        boolean boolean9 = python3Target0.supportsOverloadedMethods();
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = python3Target0.gen;
        java.lang.String str13 = python3Target0.getTargetStringLiteralFromString("\"hi!\"", false);
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "12" + "'", str6, "12");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 29 + "'", int7 == 29);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(codeGenerator10);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "\"hi!\"" + "'", str13, "\"hi!\"");
    }

    @Test
    public void test1199() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1199");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        org.antlr.v4.tool.Grammar grammar3 = null;
        org.stringtemplate.v4.ST sT4 = null;
        python3Target0.genRecognizerHeaderFile(grammar3, sT4, "");
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = python3Target0.getCodeGenerator();
        org.antlr.v4.codegen.target.Python3Target python3Target8 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray9 = python3Target8.targetCharValueEscape;
        org.stringtemplate.v4.STGroup sTGroup10 = python3Target8.templates;
        int int11 = python3Target8.getInlineTestSetWordSize();
        org.antlr.v4.codegen.CodeGenerator codeGenerator12 = python3Target8.gen;
        org.antlr.v4.tool.Grammar grammar13 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target14 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str16 = python3Target14.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.tool.Grammar grammar17 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target18 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean19 = python3Target18.supportsOverloadedMethods();
        java.lang.String str20 = python3Target18.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator21 = null;
        java.lang.String str24 = python3Target18.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator21, "", true);
        java.lang.String str25 = python3Target18.getVersion();
        org.antlr.v4.tool.Grammar grammar26 = null;
        int[] intArray27 = new int[] {};
        java.lang.String[] strArray28 = python3Target18.getTokenTypesAsTargetLabels(grammar26, intArray27);
        java.lang.String[] strArray29 = python3Target14.getTokenTypesAsTargetLabels(grammar17, intArray27);
        java.lang.String[] strArray30 = python3Target8.getTokenTypesAsTargetLabels(grammar13, intArray27);
        org.antlr.v4.codegen.target.Python3Target.python3Keywords = strArray30;
        python3Target0.targetCharValueEscape = strArray30;
        org.antlr.v4.tool.ast.GrammarAST grammarAST33 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str34 = python3Target0.getLoopLabel(grammarAST33);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertNull(codeGenerator7);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertNull(sTGroup10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 64 + "'", int11 == 64);
        org.junit.Assert.assertNull(codeGenerator12);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "\"\"\"\"\"\"" + "'", str16, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "4.5.2.1" + "'", str20, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "\"\"" + "'", str24, "\"\"");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "4.5.2.1" + "'", str25, "4.5.2.1");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[]");
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertNotNull(strArray30);
    }

    @Test
    public void test1200() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1200");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!", "hi!" };
        python3Target0.targetCharValueEscape = strArray5;
        java.lang.String str8 = python3Target0.getTargetStringLiteralFromString("\"\"");
        org.stringtemplate.v4.STGroup sTGroup9 = null;
        python3Target0.templates = sTGroup9;
        org.antlr.v4.tool.Grammar grammar11 = null;
        org.stringtemplate.v4.ST sT12 = null;
        python3Target0.genRecognizerHeaderFile(grammar11, sT12, "Hi!Context");
        org.antlr.v4.tool.ast.GrammarAST grammarAST15 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean16 = python3Target0.visibleGrammarSymbolCausesIssueInGeneratedCode(grammarAST15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\"\"\"\"" + "'", str8, "\"\"\"\"");
    }

    @Test
    public void test1201() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1201");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!", "hi!" };
        python3Target0.targetCharValueEscape = strArray5;
        java.lang.String str8 = python3Target0.getTargetStringLiteralFromString("\"\"");
        java.lang.String str10 = python3Target0.getTargetStringLiteralFromString("\"\"");
        java.lang.String str11 = python3Target0.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup12 = python3Target0.templates;
        org.antlr.v4.codegen.CodeGenerator codeGenerator13 = python3Target0.getCodeGenerator();
        boolean boolean14 = python3Target0.supportsOverloadedMethods();
        boolean boolean15 = python3Target0.wantsBaseVisitor();
        java.lang.String str16 = python3Target0.getLanguage();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\"\"\"\"" + "'", str8, "\"\"\"\"");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\"\"\"\"" + "'", str10, "\"\"\"\"");
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(sTGroup12);
        org.junit.Assert.assertNull(codeGenerator13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(str16);
    }

    @Test
    public void test1202() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1202");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        org.antlr.v4.codegen.CodeGenerator codeGenerator1 = python3Target0.getCodeGenerator();
        python3Target0.addBadWords();
        org.junit.Assert.assertNull(codeGenerator1);
    }

    @Test
    public void test1203() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1203");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray1 = python3Target0.targetCharValueEscape;
        java.lang.String str2 = python3Target0.language;
        int int3 = python3Target0.getSerializedATNSegmentLimit();
        org.antlr.v4.codegen.CodeGenerator codeGenerator4 = python3Target0.getCodeGenerator();
        org.antlr.v4.codegen.CodeGenerator codeGenerator5 = null;
        java.lang.String str8 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator5, "_tset\"\\\"\\\"hi!\\\"\\\"\"", true);
        java.lang.String str9 = python3Target0.language;
        java.util.Set<java.lang.String> strSet10 = python3Target0.getBadWords();
        org.antlr.v4.codegen.target.Python3Target python3Target11 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean12 = python3Target11.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup13 = python3Target11.templates;
        org.antlr.v4.tool.Grammar grammar14 = null;
        org.stringtemplate.v4.ST sT15 = null;
        python3Target11.genRecognizerHeaderFile(grammar14, sT15, "");
        python3Target11.language = "Python3";
        int int20 = python3Target11.getSerializedATNSegmentLimit();
        org.stringtemplate.v4.STGroup sTGroup21 = python3Target11.loadTemplates();
        python3Target11.addBadWords();
        java.lang.String str24 = python3Target11.getTargetStringLiteralFromString("\\35");
        java.lang.String str27 = python3Target11.getTargetStringLiteralFromString("@", true);
        org.antlr.v4.codegen.target.Python3Target python3Target28 = new org.antlr.v4.codegen.target.Python3Target();
        python3Target28.language = "";
        org.antlr.v4.codegen.target.Python3Target python3Target31 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean32 = python3Target31.supportsOverloadedMethods();
        java.lang.String str33 = python3Target31.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator34 = null;
        java.lang.String str37 = python3Target31.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator34, "", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator38 = null;
        python3Target31.gen = codeGenerator38;
        java.lang.String[] strArray47 = new java.lang.String[] { "\"\"\"\"", "\\12", "\"\"", "4.5.2.1", "", "\"\"\"\"", "\"\"" };
        java.util.LinkedHashSet<java.lang.String> strSet48 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet48, strArray47);
        python3Target31.badWords = strSet48;
        python3Target28.badWords = strSet48;
        java.lang.String str53 = python3Target28.encodeIntAsCharEscape((int) (byte) 100);
        boolean boolean54 = python3Target28.templatesExist();
        org.antlr.v4.codegen.target.Python3Target python3Target55 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str57 = python3Target55.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator58 = null;
        python3Target55.gen = codeGenerator58;
        org.antlr.v4.tool.Grammar grammar60 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target61 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str63 = python3Target61.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.tool.Grammar grammar64 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target65 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean66 = python3Target65.supportsOverloadedMethods();
        java.lang.String str67 = python3Target65.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator68 = null;
        java.lang.String str71 = python3Target65.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator68, "", true);
        java.lang.String str72 = python3Target65.getVersion();
        org.antlr.v4.tool.Grammar grammar73 = null;
        int[] intArray74 = new int[] {};
        java.lang.String[] strArray75 = python3Target65.getTokenTypesAsTargetLabels(grammar73, intArray74);
        java.lang.String[] strArray76 = python3Target61.getTokenTypesAsTargetLabels(grammar64, intArray74);
        java.lang.String[] strArray77 = python3Target55.getTokenTypesAsTargetLabels(grammar60, intArray74);
        python3Target28.targetCharValueEscape = strArray77;
        python3Target11.targetCharValueEscape = strArray77;
        python3Target0.targetCharValueEscape = strArray77;
        org.stringtemplate.v4.STGroup sTGroup81 = python3Target0.templates;
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 29 + "'", int3 == 29);
        org.junit.Assert.assertNull(codeGenerator4);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\"tset\\\"\\\"\\\"hi!\\\"\\\"\"" + "'", str8, "\"tset\\\"\\\"\\\"hi!\\\"\\\"\"");
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(strSet10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(sTGroup13);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 29 + "'", int20 == 29);
        org.junit.Assert.assertNotNull(sTGroup21);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "\"\\35\"" + "'", str24, "\"\\35\"");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "\"@\"" + "'", str27, "\"@\"");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "4.5.2.1" + "'", str33, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "\"\"" + "'", str37, "\"\"");
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "d" + "'", str53, "d");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "\"\"\"\"\"\"" + "'", str57, "\"\"\"\"\"\"");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "\"\"\"\"\"\"" + "'", str63, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "4.5.2.1" + "'", str67, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "\"\"" + "'", str71, "\"\"");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "4.5.2.1" + "'", str72, "4.5.2.1");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[]");
        org.junit.Assert.assertNotNull(strArray75);
        org.junit.Assert.assertNotNull(strArray76);
        org.junit.Assert.assertNotNull(strArray77);
        org.junit.Assert.assertNull(sTGroup81);
    }

    @Test
    public void test1204() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1204");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray1 = python3Target0.targetCharValueEscape;
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = null;
        java.lang.String str6 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator3, "\"\\12\"", false);
        int int7 = python3Target0.getInlineTestSetWordSize();
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = python3Target0.getCodeGenerator();
        org.antlr.v4.tool.Rule rule9 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str10 = python3Target0.getRuleFunctionContextStructName(rule9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "12" + "'", str6, "12");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 64 + "'", int7 == 64);
        org.junit.Assert.assertNull(codeGenerator8);
    }

    @Test
    public void test1205() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1205");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray1 = python3Target0.targetCharValueEscape;
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = null;
        java.lang.String str6 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator3, "\"\\12\"", false);
        java.lang.String str7 = python3Target0.getLanguage();
        boolean boolean8 = python3Target0.templatesExist();
        org.antlr.v4.codegen.CodeGenerator codeGenerator9 = python3Target0.gen;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str11 = python3Target0.getListLabel("\"Python3\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "12" + "'", str6, "12");
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(codeGenerator9);
    }

    @Test
    public void test1206() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1206");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        python3Target0.language = "4.5.2.1";
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = python3Target0.getCodeGenerator();
        org.antlr.v4.codegen.CodeGenerator codeGenerator4 = python3Target0.gen;
        org.antlr.v4.codegen.CodeGenerator codeGenerator5 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target6 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator5);
        java.lang.String str8 = python3Target6.getTargetStringLiteralFromString("");
        int int9 = python3Target6.getSerializedATNSegmentLimit();
        boolean boolean10 = python3Target6.wantsBaseVisitor();
        org.stringtemplate.v4.STGroup sTGroup11 = python3Target6.loadTemplates();
        python3Target0.templates = sTGroup11;
        java.lang.String str13 = python3Target0.language;
        org.antlr.v4.codegen.target.Python3Target python3Target14 = new org.antlr.v4.codegen.target.Python3Target();
        python3Target14.language = "";
        org.antlr.v4.codegen.target.Python3Target python3Target17 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean18 = python3Target17.supportsOverloadedMethods();
        java.lang.String str19 = python3Target17.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator20 = null;
        java.lang.String str23 = python3Target17.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator20, "", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator24 = null;
        python3Target17.gen = codeGenerator24;
        java.lang.String[] strArray33 = new java.lang.String[] { "\"\"\"\"", "\\12", "\"\"", "4.5.2.1", "", "\"\"\"\"", "\"\"" };
        java.util.LinkedHashSet<java.lang.String> strSet34 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet34, strArray33);
        python3Target17.badWords = strSet34;
        python3Target14.badWords = strSet34;
        python3Target14.addBadWords();
        java.util.Set<java.lang.String> strSet39 = python3Target14.badWords;
        python3Target0.badWords = strSet39;
        int int41 = python3Target0.getSerializedATNSegmentLimit();
        java.lang.String str42 = python3Target0.language;
        org.antlr.v4.codegen.target.Python3Target python3Target43 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray44 = python3Target43.targetCharValueEscape;
        java.lang.String str45 = python3Target43.language;
        int int46 = python3Target43.getSerializedATNSegmentLimit();
        java.lang.String str49 = python3Target43.getTargetStringLiteralFromString("\"\"\"\"\"\"", false);
        boolean boolean50 = python3Target43.supportsOverloadedMethods();
        org.antlr.v4.codegen.target.Python3Target python3Target51 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str53 = python3Target51.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.codegen.target.Python3Target python3Target54 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean55 = python3Target54.supportsOverloadedMethods();
        java.util.Set<java.lang.String> strSet56 = python3Target54.badWords;
        python3Target51.badWords = strSet56;
        python3Target43.badWords = strSet56;
        python3Target0.badWords = strSet56;
        java.lang.String str61 = python3Target0.getListLabel("\"\"\"\"\"\"\"Context\"");
        org.junit.Assert.assertNull(codeGenerator3);
        org.junit.Assert.assertNull(codeGenerator4);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\"\"" + "'", str8, "\"\"");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 29 + "'", int9 == 29);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(sTGroup11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "4.5.2.1" + "'", str13, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "4.5.2.1" + "'", str19, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "\"\"" + "'", str23, "\"\"");
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(strSet39);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 29 + "'", int41 == 29);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "4.5.2.1" + "'", str42, "4.5.2.1");
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 29 + "'", int46 == 29);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "\"\"\"\"\"\"" + "'", str49, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "\"\"\"\"\"\"" + "'", str53, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(strSet56);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "\"\"\"\"\"\"\"Context\"" + "'", str61, "\"\"\"\"\"\"\"Context\"");
    }

    @Test
    public void test1207() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1207");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        java.lang.String str2 = python3Target0.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = null;
        java.lang.String str6 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator3, "", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = null;
        python3Target0.gen = codeGenerator7;
        java.lang.String[] strArray16 = new java.lang.String[] { "\"\"\"\"", "\\12", "\"\"", "4.5.2.1", "", "\"\"\"\"", "\"\"" };
        java.util.LinkedHashSet<java.lang.String> strSet17 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet17, strArray16);
        python3Target0.badWords = strSet17;
        org.antlr.v4.codegen.CodeGenerator codeGenerator20 = python3Target0.gen;
        java.lang.String str23 = python3Target0.getTargetStringLiteralFromString("\\12", true);
        boolean boolean24 = python3Target0.wantsBaseListener();
        org.antlr.v4.codegen.CodeGenerator codeGenerator25 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target26 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator25);
        java.util.Set<java.lang.String> strSet27 = python3Target26.getBadWords();
        java.lang.String str29 = python3Target26.getAltLabelContextStructName("d");
        org.stringtemplate.v4.STGroup sTGroup30 = python3Target26.getTemplates();
        org.antlr.v4.codegen.CodeGenerator codeGenerator31 = null;
        java.lang.String str34 = python3Target26.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator31, "", true);
        java.lang.String str36 = python3Target26.getImplicitSetLabel("\"\\0\"");
        java.lang.String str38 = python3Target26.getListLabel("\"Python3\"");
        java.lang.String str40 = python3Target26.getListLabel("\"\\\"hi!\\\"\"");
        java.util.Set<java.lang.String> strSet41 = python3Target26.getBadWords();
        python3Target0.badWords = strSet41;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str44 = python3Target0.getElementListName("__\"\\\"\\\"4.5.2.1\\\"\\\"\"Context");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "4.5.2.1" + "'", str2, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\"\"" + "'", str6, "\"\"");
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNull(codeGenerator20);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "\"\\12\"" + "'", str23, "\"\\12\"");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(strSet27);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "DContext" + "'", str29, "DContext");
        org.junit.Assert.assertNotNull(sTGroup30);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "\"\"" + "'", str34, "\"\"");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "_tset\"\\0\"" + "'", str36, "_tset\"\\0\"");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "\"Python3\"" + "'", str38, "\"Python3\"");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "\"\\\"hi!\\\"\"" + "'", str40, "\"\\\"hi!\\\"\"");
        org.junit.Assert.assertNotNull(strSet41);
    }

    @Test
    public void test1208() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1208");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!", "hi!" };
        python3Target0.targetCharValueEscape = strArray5;
        java.lang.String str8 = python3Target0.getTargetStringLiteralFromString("\"\"");
        org.stringtemplate.v4.STGroup sTGroup9 = null;
        python3Target0.templates = sTGroup9;
        java.lang.String[] strArray11 = python3Target0.targetCharValueEscape;
        int int12 = python3Target0.getInlineTestSetWordSize();
        org.antlr.v4.codegen.CodeGenerator codeGenerator13 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target14 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator13);
        java.lang.String str16 = python3Target14.getTargetStringLiteralFromString("");
        int int17 = python3Target14.getSerializedATNSegmentLimit();
        boolean boolean18 = python3Target14.wantsBaseVisitor();
        org.stringtemplate.v4.STGroup sTGroup19 = python3Target14.loadTemplates();
        org.antlr.v4.codegen.CodeGenerator codeGenerator20 = python3Target14.gen;
        org.antlr.v4.codegen.target.Python3Target python3Target21 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean22 = python3Target21.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup23 = python3Target21.templates;
        org.antlr.v4.tool.Grammar grammar24 = null;
        org.stringtemplate.v4.ST sT25 = null;
        python3Target21.genRecognizerHeaderFile(grammar24, sT25, "");
        python3Target21.language = "Python3";
        int int30 = python3Target21.getSerializedATNSegmentLimit();
        org.stringtemplate.v4.STGroup sTGroup31 = python3Target21.loadTemplates();
        python3Target14.templates = sTGroup31;
        java.lang.String str33 = python3Target14.getVersion();
        java.util.Set<java.lang.String> strSet34 = python3Target14.getBadWords();
        python3Target0.badWords = strSet34;
        java.lang.String[] strArray36 = org.antlr.v4.codegen.target.Python3Target.python3Keywords;
        org.antlr.v4.codegen.target.Python3Target.python3Keywords = strArray36;
        python3Target0.targetCharValueEscape = strArray36;
        org.antlr.v4.codegen.CodeGenerator codeGenerator39 = python3Target0.gen;
        org.antlr.v4.codegen.CodeGenerator codeGenerator40 = null;
        java.lang.String str43 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator40, "", true);
        // The following exception was thrown during execution in test generation
        try {
            org.stringtemplate.v4.STGroup sTGroup44 = python3Target0.getTemplates();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\"\"\"\"" + "'", str8, "\"\"\"\"");
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 64 + "'", int12 == 64);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "\"\"" + "'", str16, "\"\"");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 29 + "'", int17 == 29);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(sTGroup19);
        org.junit.Assert.assertNull(codeGenerator20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(sTGroup23);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 29 + "'", int30 == 29);
        org.junit.Assert.assertNotNull(sTGroup31);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "4.5.2.1" + "'", str33, "4.5.2.1");
        org.junit.Assert.assertNotNull(strSet34);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertNull(codeGenerator39);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "\"\"" + "'", str43, "\"\"");
    }

    @Test
    public void test1209() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1209");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python3Target1.getBadWords();
        org.antlr.v4.codegen.target.Python3Target python3Target3 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str5 = python3Target3.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.codegen.target.Python3Target python3Target6 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean7 = python3Target6.supportsOverloadedMethods();
        java.util.Set<java.lang.String> strSet8 = python3Target6.badWords;
        python3Target3.badWords = strSet8;
        python3Target1.badWords = strSet8;
        java.util.Set<java.lang.String> strSet11 = python3Target1.badWords;
        org.antlr.v4.codegen.CodeGenerator codeGenerator12 = python3Target1.getCodeGenerator();
        java.lang.String str14 = python3Target1.getAltLabelContextStructName("_tset\"\\\"Python3\\\"\"");
        org.antlr.v4.tool.Grammar grammar15 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target16 = new org.antlr.v4.codegen.target.Python3Target();
        python3Target16.language = "";
        org.antlr.v4.codegen.target.Python3Target python3Target19 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean20 = python3Target19.supportsOverloadedMethods();
        java.lang.String str21 = python3Target19.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator22 = null;
        java.lang.String str25 = python3Target19.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator22, "", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator26 = null;
        python3Target19.gen = codeGenerator26;
        java.lang.String[] strArray35 = new java.lang.String[] { "\"\"\"\"", "\\12", "\"\"", "4.5.2.1", "", "\"\"\"\"", "\"\"" };
        java.util.LinkedHashSet<java.lang.String> strSet36 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet36, strArray35);
        python3Target19.badWords = strSet36;
        python3Target16.badWords = strSet36;
        java.lang.String str41 = python3Target16.encodeIntAsCharEscape((int) (byte) 100);
        java.lang.String str42 = python3Target16.getLanguage();
        java.lang.String[] strArray43 = new java.lang.String[] {};
        python3Target16.targetCharValueEscape = strArray43;
        org.antlr.v4.tool.Grammar grammar45 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target46 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean47 = python3Target46.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup48 = python3Target46.templates;
        java.lang.String[] strArray51 = new java.lang.String[] { "hi!", "hi!" };
        python3Target46.targetCharValueEscape = strArray51;
        org.antlr.v4.codegen.CodeGenerator codeGenerator53 = null;
        java.lang.String str56 = python3Target46.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator53, "", false);
        java.util.Set<java.lang.String> strSet57 = python3Target46.badWords;
        java.lang.String str59 = python3Target46.getTargetStringLiteralFromString("12");
        int int60 = python3Target46.getSerializedATNSegmentLimit();
        boolean boolean61 = python3Target46.supportsOverloadedMethods();
        org.antlr.v4.tool.Grammar grammar62 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target63 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean64 = python3Target63.supportsOverloadedMethods();
        java.util.Set<java.lang.String> strSet65 = python3Target63.badWords;
        boolean boolean66 = python3Target63.templatesExist();
        java.lang.String str67 = python3Target63.getLanguage();
        org.antlr.v4.tool.Grammar grammar68 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target69 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str71 = python3Target69.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator72 = null;
        python3Target69.gen = codeGenerator72;
        org.antlr.v4.tool.Grammar grammar74 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target75 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str77 = python3Target75.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.tool.Grammar grammar78 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target79 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean80 = python3Target79.supportsOverloadedMethods();
        java.lang.String str81 = python3Target79.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator82 = null;
        java.lang.String str85 = python3Target79.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator82, "", true);
        java.lang.String str86 = python3Target79.getVersion();
        org.antlr.v4.tool.Grammar grammar87 = null;
        int[] intArray88 = new int[] {};
        java.lang.String[] strArray89 = python3Target79.getTokenTypesAsTargetLabels(grammar87, intArray88);
        java.lang.String[] strArray90 = python3Target75.getTokenTypesAsTargetLabels(grammar78, intArray88);
        java.lang.String[] strArray91 = python3Target69.getTokenTypesAsTargetLabels(grammar74, intArray88);
        java.lang.String[] strArray92 = python3Target63.getTokenTypesAsTargetLabels(grammar68, intArray88);
        java.lang.String[] strArray93 = python3Target46.getTokenTypesAsTargetLabels(grammar62, intArray88);
        java.lang.String[] strArray94 = python3Target16.getTokenTypesAsTargetLabels(grammar45, intArray88);
        java.lang.String[] strArray95 = python3Target1.getTokenTypesAsTargetLabels(grammar15, intArray88);
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "\"\"\"\"\"\"" + "'", str5, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertNotNull(strSet11);
        org.junit.Assert.assertNull(codeGenerator12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "_tset\"\\\"Python3\\\"\"Context" + "'", str14, "_tset\"\\\"Python3\\\"\"Context");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "4.5.2.1" + "'", str21, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "\"\"" + "'", str25, "\"\"");
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "d" + "'", str41, "d");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "" + "'", str42, "");
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNull(sTGroup48);
        org.junit.Assert.assertNotNull(strArray51);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "" + "'", str56, "");
        org.junit.Assert.assertNotNull(strSet57);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "\"12\"" + "'", str59, "\"12\"");
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 29 + "'", int60 == 29);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(strSet65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNull(str67);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "\"\"\"\"\"\"" + "'", str71, "\"\"\"\"\"\"");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "\"\"\"\"\"\"" + "'", str77, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "4.5.2.1" + "'", str81, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "\"\"" + "'", str85, "\"\"");
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "4.5.2.1" + "'", str86, "4.5.2.1");
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[]");
        org.junit.Assert.assertNotNull(strArray89);
        org.junit.Assert.assertNotNull(strArray90);
        org.junit.Assert.assertNotNull(strArray91);
        org.junit.Assert.assertNotNull(strArray92);
        org.junit.Assert.assertNotNull(strArray93);
        org.junit.Assert.assertNotNull(strArray94);
        org.junit.Assert.assertNotNull(strArray95);
    }

    @Test
    public void test1210() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1210");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        org.antlr.v4.tool.Grammar grammar3 = null;
        org.stringtemplate.v4.ST sT4 = null;
        python3Target0.genRecognizerHeaderFile(grammar3, sT4, "");
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = python3Target0.getCodeGenerator();
        int int8 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str11 = python3Target0.getTargetStringLiteralFromString("\"\\\"Python3\\\"\"", false);
        python3Target0.language = "nContex";
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertNull(codeGenerator7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 64 + "'", int8 == 64);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "\"\\\"Python3\\\"\"" + "'", str11, "\"\\\"Python3\\\"\"");
    }

    @Test
    public void test1211() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1211");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.lang.String str3 = python3Target1.getTargetStringLiteralFromString("");
        int int4 = python3Target1.getSerializedATNSegmentLimit();
        java.lang.String str5 = python3Target1.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup6 = python3Target1.loadTemplates();
        org.stringtemplate.v4.STGroup sTGroup7 = python3Target1.getTemplates();
        java.lang.String str9 = python3Target1.getAltLabelContextStructName("\"\"DContext\"\"");
        org.antlr.v4.tool.Rule rule10 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str11 = python3Target1.getRuleFunctionContextStructName(rule10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "\"\"" + "'", str3, "\"\"");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 29 + "'", int4 == 29);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Python3" + "'", str5, "Python3");
        org.junit.Assert.assertNotNull(sTGroup6);
        org.junit.Assert.assertNotNull(sTGroup7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\"\"DContext\"\"Context" + "'", str9, "\"\"DContext\"\"Context");
    }

    @Test
    public void test1212() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1212");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray1 = python3Target0.targetCharValueEscape;
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        int int3 = python3Target0.getInlineTestSetWordSize();
        org.antlr.v4.codegen.CodeGenerator codeGenerator4 = python3Target0.gen;
        boolean boolean5 = python3Target0.templatesExist();
        org.antlr.v4.tool.Grammar grammar6 = null;
        org.stringtemplate.v4.ST sT7 = null;
        // The following exception was thrown during execution in test generation
        try {
            python3Target0.genFile(grammar6, sT7, "");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 64 + "'", int3 == 64);
        org.junit.Assert.assertNull(codeGenerator4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
    }

    @Test
    public void test1213() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1213");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        org.antlr.v4.tool.Grammar grammar3 = null;
        org.stringtemplate.v4.ST sT4 = null;
        python3Target0.genRecognizerHeaderFile(grammar3, sT4, "");
        python3Target0.language = "Python3";
        int int9 = python3Target0.getSerializedATNSegmentLimit();
        org.stringtemplate.v4.STGroup sTGroup10 = python3Target0.loadTemplates();
        python3Target0.addBadWords();
        java.lang.String str13 = python3Target0.getTargetStringLiteralFromString("\\35");
        python3Target0.addBadWords();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 29 + "'", int9 == 29);
        org.junit.Assert.assertNotNull(sTGroup10);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "\"\\35\"" + "'", str13, "\"\\35\"");
    }

    @Test
    public void test1214() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1214");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!", "hi!" };
        python3Target0.targetCharValueEscape = strArray5;
        java.lang.String str8 = python3Target0.getTargetStringLiteralFromString("\"\"");
        org.stringtemplate.v4.STGroup sTGroup9 = null;
        python3Target0.templates = sTGroup9;
        java.lang.String[] strArray11 = python3Target0.targetCharValueEscape;
        int int12 = python3Target0.getInlineTestSetWordSize();
        org.antlr.v4.codegen.CodeGenerator codeGenerator13 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target14 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator13);
        java.lang.String str16 = python3Target14.getTargetStringLiteralFromString("");
        int int17 = python3Target14.getSerializedATNSegmentLimit();
        boolean boolean18 = python3Target14.wantsBaseVisitor();
        org.stringtemplate.v4.STGroup sTGroup19 = python3Target14.loadTemplates();
        org.antlr.v4.codegen.CodeGenerator codeGenerator20 = python3Target14.gen;
        org.antlr.v4.codegen.target.Python3Target python3Target21 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean22 = python3Target21.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup23 = python3Target21.templates;
        org.antlr.v4.tool.Grammar grammar24 = null;
        org.stringtemplate.v4.ST sT25 = null;
        python3Target21.genRecognizerHeaderFile(grammar24, sT25, "");
        python3Target21.language = "Python3";
        int int30 = python3Target21.getSerializedATNSegmentLimit();
        org.stringtemplate.v4.STGroup sTGroup31 = python3Target21.loadTemplates();
        python3Target14.templates = sTGroup31;
        java.lang.String str33 = python3Target14.getVersion();
        java.util.Set<java.lang.String> strSet34 = python3Target14.getBadWords();
        python3Target0.badWords = strSet34;
        java.lang.String[] strArray36 = org.antlr.v4.codegen.target.Python3Target.python3Keywords;
        org.antlr.v4.codegen.target.Python3Target.python3Keywords = strArray36;
        python3Target0.targetCharValueEscape = strArray36;
        org.antlr.v4.codegen.CodeGenerator codeGenerator39 = python3Target0.gen;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str41 = python3Target0.getElementListName("\"\\\"DContext\\\"\"Context");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\"\"\"\"" + "'", str8, "\"\"\"\"");
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 64 + "'", int12 == 64);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "\"\"" + "'", str16, "\"\"");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 29 + "'", int17 == 29);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(sTGroup19);
        org.junit.Assert.assertNull(codeGenerator20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(sTGroup23);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 29 + "'", int30 == 29);
        org.junit.Assert.assertNotNull(sTGroup31);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "4.5.2.1" + "'", str33, "4.5.2.1");
        org.junit.Assert.assertNotNull(strSet34);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertNull(codeGenerator39);
    }

    @Test
    public void test1215() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1215");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python3Target1.getBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = null;
        python3Target1.gen = codeGenerator3;
        org.antlr.v4.codegen.CodeGenerator codeGenerator5 = null;
        java.lang.String str8 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator5, "\"12\"", true);
        java.lang.String str9 = python3Target1.language;
        java.lang.String str11 = python3Target1.getImplicitRuleLabel("\"\"\"DContext\"\"Context\"");
        java.util.Set<java.lang.String> strSet12 = python3Target1.badWords;
        org.antlr.v4.codegen.target.Python3Target python3Target13 = new org.antlr.v4.codegen.target.Python3Target();
        python3Target13.language = "";
        org.antlr.v4.codegen.target.Python3Target python3Target16 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean17 = python3Target16.supportsOverloadedMethods();
        java.lang.String str18 = python3Target16.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator19 = null;
        java.lang.String str22 = python3Target16.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator19, "", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator23 = null;
        python3Target16.gen = codeGenerator23;
        java.lang.String[] strArray32 = new java.lang.String[] { "\"\"\"\"", "\\12", "\"\"", "4.5.2.1", "", "\"\"\"\"", "\"\"" };
        java.util.LinkedHashSet<java.lang.String> strSet33 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet33, strArray32);
        python3Target16.badWords = strSet33;
        python3Target13.badWords = strSet33;
        java.lang.String str38 = python3Target13.encodeIntAsCharEscape((int) (byte) 100);
        java.lang.String str39 = python3Target13.getLanguage();
        java.lang.String str41 = python3Target13.getTargetStringLiteralFromString("\"\\0\"");
        java.lang.String[] strArray42 = python3Target13.targetCharValueEscape;
        python3Target1.targetCharValueEscape = strArray42;
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\"12\"" + "'", str8, "\"12\"");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Python3" + "'", str9, "Python3");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "_\"\"\"DContext\"\"Context\"" + "'", str11, "_\"\"\"DContext\"\"Context\"");
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "4.5.2.1" + "'", str18, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "\"\"" + "'", str22, "\"\"");
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "d" + "'", str38, "d");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "" + "'", str39, "");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "\"\"\\0\"\"" + "'", str41, "\"\"\\0\"\"");
        org.junit.Assert.assertNotNull(strArray42);
    }

    @Test
    public void test1216() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1216");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.lang.String str3 = python3Target1.getTargetStringLiteralFromString("");
        python3Target1.language = "";
        org.antlr.v4.tool.Grammar grammar6 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str8 = python3Target1.getTokenTypeAsTargetLabel(grammar6, (int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "\"\"" + "'", str3, "\"\"");
    }

    @Test
    public void test1217() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1217");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        java.lang.String str2 = python3Target0.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = null;
        java.lang.String str6 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator3, "", true);
        java.lang.String str7 = python3Target0.getVersion();
        org.antlr.v4.tool.Grammar grammar8 = null;
        org.stringtemplate.v4.ST sT9 = null;
        python3Target0.genRecognizerHeaderFile(grammar8, sT9, "\"\"\"\"\"\"");
        org.antlr.v4.tool.Grammar grammar12 = null;
        org.stringtemplate.v4.ST sT13 = null;
        python3Target0.genRecognizerHeaderFile(grammar12, sT13, "_tset_12");
        java.lang.String str16 = python3Target0.language;
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "4.5.2.1" + "'", str2, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\"\"" + "'", str6, "\"\"");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "4.5.2.1" + "'", str7, "4.5.2.1");
        org.junit.Assert.assertNull(str16);
    }

    @Test
    public void test1218() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1218");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        python3Target0.language = "";
        org.antlr.v4.codegen.target.Python3Target python3Target3 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean4 = python3Target3.supportsOverloadedMethods();
        java.lang.String str5 = python3Target3.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = null;
        java.lang.String str9 = python3Target3.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator6, "", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = null;
        python3Target3.gen = codeGenerator10;
        java.lang.String[] strArray19 = new java.lang.String[] { "\"\"\"\"", "\\12", "\"\"", "4.5.2.1", "", "\"\"\"\"", "\"\"" };
        java.util.LinkedHashSet<java.lang.String> strSet20 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet20, strArray19);
        python3Target3.badWords = strSet20;
        python3Target0.badWords = strSet20;
        java.lang.String str25 = python3Target0.encodeIntAsCharEscape((int) (byte) 100);
        java.lang.String str26 = python3Target0.getLanguage();
        java.lang.String str28 = python3Target0.getTargetStringLiteralFromString("\"\\0\"");
        org.antlr.v4.tool.Grammar grammar29 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target30 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean31 = python3Target30.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup32 = python3Target30.templates;
        org.antlr.v4.tool.Grammar grammar33 = null;
        org.stringtemplate.v4.ST sT34 = null;
        python3Target30.genRecognizerHeaderFile(grammar33, sT34, "");
        python3Target30.language = "Python3";
        java.util.Set<java.lang.String> strSet39 = null;
        python3Target30.badWords = strSet39;
        org.antlr.v4.codegen.CodeGenerator codeGenerator41 = null;
        java.lang.String str44 = python3Target30.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator41, "\"Hi!Context\"", false);
        java.lang.String str46 = python3Target30.getListLabel("Python3");
        java.lang.String str48 = python3Target30.getTargetStringLiteralFromString("\\0");
        org.antlr.v4.tool.Grammar grammar49 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target50 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str52 = python3Target50.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.tool.Grammar grammar53 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target54 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean55 = python3Target54.supportsOverloadedMethods();
        java.lang.String str56 = python3Target54.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator57 = null;
        java.lang.String str60 = python3Target54.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator57, "", true);
        java.lang.String str61 = python3Target54.getVersion();
        org.antlr.v4.tool.Grammar grammar62 = null;
        int[] intArray63 = new int[] {};
        java.lang.String[] strArray64 = python3Target54.getTokenTypesAsTargetLabels(grammar62, intArray63);
        java.lang.String[] strArray65 = python3Target50.getTokenTypesAsTargetLabels(grammar53, intArray63);
        java.lang.String[] strArray66 = python3Target30.getTokenTypesAsTargetLabels(grammar49, intArray63);
        java.lang.String[] strArray67 = python3Target0.getTokenTypesAsTargetLabels(grammar29, intArray63);
        org.antlr.v4.codegen.target.Python3Target.python3Keywords = strArray67;
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "4.5.2.1" + "'", str5, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\"\"" + "'", str9, "\"\"");
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "d" + "'", str25, "d");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "\"\"\\0\"\"" + "'", str28, "\"\"\\0\"\"");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNull(sTGroup32);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "Hi!Context" + "'", str44, "Hi!Context");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "Python3" + "'", str46, "Python3");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "\"\\0\"" + "'", str48, "\"\\0\"");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "\"\"\"\"\"\"" + "'", str52, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "4.5.2.1" + "'", str56, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "\"\"" + "'", str60, "\"\"");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "4.5.2.1" + "'", str61, "4.5.2.1");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[]");
        org.junit.Assert.assertNotNull(strArray64);
        org.junit.Assert.assertNotNull(strArray65);
        org.junit.Assert.assertNotNull(strArray66);
        org.junit.Assert.assertNotNull(strArray67);
    }

    @Test
    public void test1219() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1219");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        python3Target0.language = "4.5.2.1";
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = python3Target0.getCodeGenerator();
        org.antlr.v4.codegen.CodeGenerator codeGenerator4 = python3Target0.gen;
        java.lang.String str5 = python3Target0.getLanguage();
        python3Target0.addBadWords();
        org.antlr.v4.codegen.target.Python3Target python3Target7 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str9 = python3Target7.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = null;
        python3Target7.gen = codeGenerator10;
        java.lang.String str12 = python3Target7.getVersion();
        org.antlr.v4.codegen.target.Python3Target python3Target13 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean14 = python3Target13.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup15 = python3Target13.templates;
        org.antlr.v4.tool.Grammar grammar16 = null;
        org.stringtemplate.v4.ST sT17 = null;
        python3Target13.genRecognizerHeaderFile(grammar16, sT17, "");
        python3Target13.language = "Python3";
        int int22 = python3Target13.getSerializedATNSegmentLimit();
        org.stringtemplate.v4.STGroup sTGroup23 = python3Target13.loadTemplates();
        python3Target7.templates = sTGroup23;
        python3Target0.templates = sTGroup23;
        python3Target0.language = "\\35";
        java.lang.String str29 = python3Target0.getTargetStringLiteralFromString("\"\"\"\"\"\"Context");
        java.lang.String str31 = python3Target0.getImplicitSetLabel("\"\\\"\\\"\\\"\\\"\\\"Contex\"");
        java.lang.Class<?> wildcardClass32 = python3Target0.getClass();
        org.junit.Assert.assertNull(codeGenerator3);
        org.junit.Assert.assertNull(codeGenerator4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "4.5.2.1" + "'", str5, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\"\"\"\"\"\"" + "'", str9, "\"\"\"\"\"\"");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "4.5.2.1" + "'", str12, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(sTGroup15);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 29 + "'", int22 == 29);
        org.junit.Assert.assertNotNull(sTGroup23);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "\"\"\"\"\"\"\"Context\"" + "'", str29, "\"\"\"\"\"\"\"Context\"");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "_tset\"\\\"\\\"\\\"\\\"\\\"Contex\"" + "'", str31, "_tset\"\\\"\\\"\\\"\\\"\\\"Contex\"");
        org.junit.Assert.assertNotNull(wildcardClass32);
    }

    @Test
    public void test1220() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1220");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        org.antlr.v4.tool.Grammar grammar3 = null;
        org.stringtemplate.v4.ST sT4 = null;
        python3Target0.genRecognizerHeaderFile(grammar3, sT4, "");
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = python3Target0.getCodeGenerator();
        boolean boolean8 = python3Target0.supportsOverloadedMethods();
        org.antlr.v4.codegen.CodeGenerator codeGenerator9 = python3Target0.gen;
        int int10 = python3Target0.getInlineTestSetWordSize();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertNull(codeGenerator7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(codeGenerator9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 64 + "'", int10 == 64);
    }

    @Test
    public void test1221() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1221");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python3Target1.getBadWords();
        org.antlr.v4.codegen.target.Python3Target python3Target3 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str5 = python3Target3.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.codegen.target.Python3Target python3Target6 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean7 = python3Target6.supportsOverloadedMethods();
        java.util.Set<java.lang.String> strSet8 = python3Target6.badWords;
        python3Target3.badWords = strSet8;
        python3Target1.badWords = strSet8;
        java.util.Set<java.lang.String> strSet11 = python3Target1.badWords;
        org.antlr.v4.codegen.target.Python3Target python3Target12 = new org.antlr.v4.codegen.target.Python3Target();
        python3Target12.language = "";
        org.antlr.v4.codegen.target.Python3Target python3Target15 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean16 = python3Target15.supportsOverloadedMethods();
        java.lang.String str17 = python3Target15.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator18 = null;
        java.lang.String str21 = python3Target15.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator18, "", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator22 = null;
        python3Target15.gen = codeGenerator22;
        java.lang.String[] strArray31 = new java.lang.String[] { "\"\"\"\"", "\\12", "\"\"", "4.5.2.1", "", "\"\"\"\"", "\"\"" };
        java.util.LinkedHashSet<java.lang.String> strSet32 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet32, strArray31);
        python3Target15.badWords = strSet32;
        python3Target12.badWords = strSet32;
        python3Target1.badWords = strSet32;
        java.lang.String[] strArray37 = python3Target1.targetCharValueEscape;
        java.lang.String str40 = python3Target1.getTargetStringLiteralFromString("1", false);
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "\"\"\"\"\"\"" + "'", str5, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertNotNull(strSet11);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "4.5.2.1" + "'", str17, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "\"\"" + "'", str21, "\"\"");
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "1" + "'", str40, "1");
    }

    @Test
    public void test1222() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1222");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        org.antlr.v4.tool.Grammar grammar3 = null;
        org.stringtemplate.v4.ST sT4 = null;
        python3Target0.genRecognizerHeaderFile(grammar3, sT4, "");
        python3Target0.language = "Python3";
        int int9 = python3Target0.getSerializedATNSegmentLimit();
        java.lang.String str11 = python3Target0.getListLabel("_tsetPython3");
        org.antlr.v4.codegen.CodeGenerator codeGenerator12 = null;
        java.lang.String str15 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator12, "\"\"\"hi!\"\"\"", true);
        java.lang.String str17 = python3Target0.getAltLabelContextStructName("\"\"\"\"\"\"\"\"Context");
        java.util.Set<java.lang.String> strSet18 = python3Target0.badWords;
        python3Target0.addBadWords();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str21 = python3Target0.getElementListName("\\35");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 29 + "'", int9 == 29);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "_tsetPython3" + "'", str11, "_tsetPython3");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "\"\\\"\\\"hi!\\\"\\\"\"" + "'", str15, "\"\\\"\\\"hi!\\\"\\\"\"");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "\"\"\"\"\"\"\"\"ContextContext" + "'", str17, "\"\"\"\"\"\"\"\"ContextContext");
        org.junit.Assert.assertNotNull(strSet18);
    }

    @Test
    public void test1223() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1223");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python3Target1.getBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = null;
        python3Target1.gen = codeGenerator3;
        java.lang.String str6 = python3Target1.getAltLabelContextStructName("hi!");
        java.lang.String str9 = python3Target1.getTargetStringLiteralFromString("\"hi!\"", true);
        python3Target1.language = "\"\\\"\\\"hi!\\\"\\\"\"";
        java.lang.String str13 = python3Target1.getImplicitSetLabel("\"\"");
        org.antlr.v4.tool.ast.GrammarAST grammarAST14 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean15 = python3Target1.grammarSymbolCausesIssueInGeneratedCode(grammarAST14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Hi!Context" + "'", str6, "Hi!Context");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\"\\\"hi!\\\"\"" + "'", str9, "\"\\\"hi!\\\"\"");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "_tset\"\"" + "'", str13, "_tset\"\"");
    }

    @Test
    public void test1224() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1224");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        org.antlr.v4.tool.Grammar grammar3 = null;
        org.stringtemplate.v4.ST sT4 = null;
        python3Target0.genRecognizerHeaderFile(grammar3, sT4, "");
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = python3Target0.getCodeGenerator();
        org.antlr.v4.codegen.target.Python3Target python3Target8 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray9 = python3Target8.targetCharValueEscape;
        org.stringtemplate.v4.STGroup sTGroup10 = python3Target8.templates;
        int int11 = python3Target8.getInlineTestSetWordSize();
        org.antlr.v4.codegen.CodeGenerator codeGenerator12 = python3Target8.gen;
        org.antlr.v4.tool.Grammar grammar13 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target14 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str16 = python3Target14.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.tool.Grammar grammar17 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target18 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean19 = python3Target18.supportsOverloadedMethods();
        java.lang.String str20 = python3Target18.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator21 = null;
        java.lang.String str24 = python3Target18.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator21, "", true);
        java.lang.String str25 = python3Target18.getVersion();
        org.antlr.v4.tool.Grammar grammar26 = null;
        int[] intArray27 = new int[] {};
        java.lang.String[] strArray28 = python3Target18.getTokenTypesAsTargetLabels(grammar26, intArray27);
        java.lang.String[] strArray29 = python3Target14.getTokenTypesAsTargetLabels(grammar17, intArray27);
        java.lang.String[] strArray30 = python3Target8.getTokenTypesAsTargetLabels(grammar13, intArray27);
        org.antlr.v4.codegen.target.Python3Target.python3Keywords = strArray30;
        python3Target0.targetCharValueEscape = strArray30;
        org.antlr.v4.codegen.CodeGenerator codeGenerator33 = null;
        python3Target0.gen = codeGenerator33;
        org.antlr.v4.tool.Grammar grammar35 = null;
        org.stringtemplate.v4.ST sT36 = null;
        // The following exception was thrown during execution in test generation
        try {
            python3Target0.genListenerFile(grammar35, sT36);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertNull(codeGenerator7);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertNull(sTGroup10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 64 + "'", int11 == 64);
        org.junit.Assert.assertNull(codeGenerator12);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "\"\"\"\"\"\"" + "'", str16, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "4.5.2.1" + "'", str20, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "\"\"" + "'", str24, "\"\"");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "4.5.2.1" + "'", str25, "4.5.2.1");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[]");
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertNotNull(strArray30);
    }

    @Test
    public void test1225() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1225");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        python3Target0.language = "";
        org.antlr.v4.codegen.target.Python3Target python3Target3 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean4 = python3Target3.supportsOverloadedMethods();
        java.lang.String str5 = python3Target3.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = null;
        java.lang.String str9 = python3Target3.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator6, "", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = null;
        python3Target3.gen = codeGenerator10;
        java.lang.String[] strArray19 = new java.lang.String[] { "\"\"\"\"", "\\12", "\"\"", "4.5.2.1", "", "\"\"\"\"", "\"\"" };
        java.util.LinkedHashSet<java.lang.String> strSet20 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet20, strArray19);
        python3Target3.badWords = strSet20;
        python3Target0.badWords = strSet20;
        java.lang.String str25 = python3Target0.encodeIntAsCharEscape((int) (byte) 100);
        int int26 = python3Target0.getInlineTestSetWordSize();
        boolean boolean27 = python3Target0.wantsBaseVisitor();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str29 = python3Target0.getElementListName("\"\"\"\\0\"\"\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "4.5.2.1" + "'", str5, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\"\"" + "'", str9, "\"\"");
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "d" + "'", str25, "d");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 64 + "'", int26 == 64);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
    }

    @Test
    public void test1226() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1226");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        python3Target0.language = "";
        org.antlr.v4.codegen.target.Python3Target python3Target3 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean4 = python3Target3.supportsOverloadedMethods();
        java.lang.String str5 = python3Target3.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = null;
        java.lang.String str9 = python3Target3.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator6, "", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = null;
        python3Target3.gen = codeGenerator10;
        java.lang.String[] strArray19 = new java.lang.String[] { "\"\"\"\"", "\\12", "\"\"", "4.5.2.1", "", "\"\"\"\"", "\"\"" };
        java.util.LinkedHashSet<java.lang.String> strSet20 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet20, strArray19);
        python3Target3.badWords = strSet20;
        python3Target0.badWords = strSet20;
        python3Target0.language = "_tsetPython3";
        int int26 = python3Target0.getSerializedATNSegmentLimit();
        java.lang.String str27 = python3Target0.getLanguage();
        // The following exception was thrown during execution in test generation
        try {
            org.stringtemplate.v4.STGroup sTGroup28 = python3Target0.loadTemplates();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "4.5.2.1" + "'", str5, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\"\"" + "'", str9, "\"\"");
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 29 + "'", int26 == 29);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "_tsetPython3" + "'", str27, "_tsetPython3");
    }

    @Test
    public void test1227() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1227");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        org.antlr.v4.tool.Grammar grammar3 = null;
        org.stringtemplate.v4.ST sT4 = null;
        python3Target0.genRecognizerHeaderFile(grammar3, sT4, "");
        org.antlr.v4.codegen.target.Python3Target python3Target7 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray8 = python3Target7.targetCharValueEscape;
        python3Target0.targetCharValueEscape = strArray8;
        python3Target0.addBadWords();
        int int11 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str14 = python3Target0.getTargetStringLiteralFromString("\\\"\\\"4.5.2.1\\\"\\\"", true);
        org.antlr.v4.codegen.model.RuleFunction ruleFunction15 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str16 = python3Target0.getRuleFunctionContextStructName(ruleFunction15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 64 + "'", int11 == 64);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "\"\\\"\\\"4.5.2.1\\\"\\\"\"" + "'", str14, "\"\\\"\\\"4.5.2.1\\\"\\\"\"");
    }

    @Test
    public void test1228() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1228");
        org.antlr.v4.codegen.target.Python3Target.PythonStringRenderer pythonStringRenderer0 = new org.antlr.v4.codegen.target.Python3Target.PythonStringRenderer();
        java.lang.Object obj1 = null;
        java.util.Locale locale3 = null;
        java.lang.String str4 = pythonStringRenderer0.toString(obj1, "\"\"\"\"\"\"", locale3);
        org.antlr.v4.codegen.target.Python3Target python3Target5 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray6 = python3Target5.targetCharValueEscape;
        org.stringtemplate.v4.STGroup sTGroup7 = python3Target5.templates;
        java.util.Locale locale9 = null;
        java.lang.String str10 = pythonStringRenderer0.toString((java.lang.Object) sTGroup7, "\"Hi!Context\"", locale9);
        java.util.Locale locale13 = null;
        java.lang.String str14 = pythonStringRenderer0.toString((java.lang.Object) "\"\"\"\"\"\"\"\"", "4.5.2.1", locale13);
        org.antlr.v4.codegen.target.Python3Target python3Target15 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray16 = python3Target15.targetCharValueEscape;
        org.stringtemplate.v4.STGroup sTGroup17 = python3Target15.templates;
        org.antlr.v4.codegen.CodeGenerator codeGenerator18 = null;
        java.lang.String str21 = python3Target15.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator18, "\"\\12\"", false);
        java.lang.String str22 = python3Target15.getLanguage();
        boolean boolean23 = python3Target15.wantsBaseVisitor();
        java.util.Locale locale25 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str26 = pythonStringRenderer0.toString((java.lang.Object) boolean23, "\"\\12\"", locale25);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.lang.Boolean cannot be cast to java.lang.String");
        } catch (java.lang.ClassCastException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "\"\"\"\"\"\"" + "'", str4, "\"\"\"\"\"\"");
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertNull(sTGroup7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\"Hi!Context\"" + "'", str10, "\"Hi!Context\"");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "4.5.2.1" + "'", str14, "4.5.2.1");
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertNull(sTGroup17);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "12" + "'", str21, "12");
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
    }

    @Test
    public void test1229() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1229");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str2 = python3Target0.getTargetStringLiteralFromString("\"\"\"\"");
        java.lang.String str4 = python3Target0.getTargetStringLiteralFromString("");
        int int5 = python3Target0.getSerializedATNSegmentLimit();
        org.antlr.v4.codegen.target.Python3Target python3Target6 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray7 = python3Target6.targetCharValueEscape;
        org.stringtemplate.v4.STGroup sTGroup8 = python3Target6.templates;
        int int9 = python3Target6.getInlineTestSetWordSize();
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = python3Target6.gen;
        org.antlr.v4.tool.Grammar grammar11 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target12 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str14 = python3Target12.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.tool.Grammar grammar15 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target16 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean17 = python3Target16.supportsOverloadedMethods();
        java.lang.String str18 = python3Target16.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator19 = null;
        java.lang.String str22 = python3Target16.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator19, "", true);
        java.lang.String str23 = python3Target16.getVersion();
        org.antlr.v4.tool.Grammar grammar24 = null;
        int[] intArray25 = new int[] {};
        java.lang.String[] strArray26 = python3Target16.getTokenTypesAsTargetLabels(grammar24, intArray25);
        java.lang.String[] strArray27 = python3Target12.getTokenTypesAsTargetLabels(grammar15, intArray25);
        java.lang.String[] strArray28 = python3Target6.getTokenTypesAsTargetLabels(grammar11, intArray25);
        python3Target0.targetCharValueEscape = strArray28;
        boolean boolean30 = python3Target0.wantsBaseListener();
        org.antlr.v4.codegen.CodeGenerator codeGenerator31 = python3Target0.getCodeGenerator();
        python3Target0.addBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator33 = null;
        python3Target0.gen = codeGenerator33;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str36 = python3Target0.getImplicitTokenLabel("\\nContext");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "\"\"\"\"\"\"" + "'", str2, "\"\"\"\"\"\"");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "\"\"" + "'", str4, "\"\"");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 29 + "'", int5 == 29);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNull(sTGroup8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 64 + "'", int9 == 64);
        org.junit.Assert.assertNull(codeGenerator10);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "\"\"\"\"\"\"" + "'", str14, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "4.5.2.1" + "'", str18, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "\"\"" + "'", str22, "\"\"");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "4.5.2.1" + "'", str23, "4.5.2.1");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[]");
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNull(codeGenerator31);
    }

    @Test
    public void test1230() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1230");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        java.lang.String str2 = python3Target0.getVersion();
        boolean boolean3 = python3Target0.supportsOverloadedMethods();
        org.antlr.v4.codegen.target.Python3Target python3Target4 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean5 = python3Target4.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup6 = python3Target4.templates;
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!", "hi!" };
        python3Target4.targetCharValueEscape = strArray9;
        org.antlr.v4.codegen.CodeGenerator codeGenerator11 = null;
        java.lang.String str14 = python3Target4.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator11, "", false);
        java.util.Set<java.lang.String> strSet15 = python3Target4.badWords;
        java.util.Set<java.lang.String> strSet16 = python3Target4.badWords;
        java.util.Set<java.lang.String> strSet17 = python3Target4.badWords;
        python3Target0.badWords = strSet17;
        java.lang.String str20 = python3Target0.encodeIntAsCharEscape(0);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "4.5.2.1" + "'", str2, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(sTGroup6);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertNotNull(strSet15);
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertNotNull(strSet17);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "\\0" + "'", str20, "\\0");
    }

    @Test
    public void test1231() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1231");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!", "hi!" };
        python3Target0.targetCharValueEscape = strArray5;
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = null;
        python3Target0.gen = codeGenerator7;
        java.lang.String str10 = python3Target0.getTargetStringLiteralFromString("Python3");
        java.lang.String[] strArray11 = python3Target0.targetCharValueEscape;
        java.lang.String str13 = python3Target0.getTargetStringLiteralFromString("\"\\\"DContext\\\"\"");
        org.antlr.v4.tool.ast.GrammarAST grammarAST14 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str15 = python3Target0.getLoopCounter(grammarAST14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\"Python3\"" + "'", str10, "\"Python3\"");
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "\"\"\\\"DContext\\\"\"\"" + "'", str13, "\"\"\\\"DContext\\\"\"\"");
    }

    @Test
    public void test1232() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1232");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray1 = python3Target0.targetCharValueEscape;
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        int int3 = python3Target0.getInlineTestSetWordSize();
        org.antlr.v4.codegen.CodeGenerator codeGenerator4 = python3Target0.gen;
        org.antlr.v4.tool.Grammar grammar5 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target6 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str8 = python3Target6.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.tool.Grammar grammar9 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target10 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean11 = python3Target10.supportsOverloadedMethods();
        java.lang.String str12 = python3Target10.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator13 = null;
        java.lang.String str16 = python3Target10.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator13, "", true);
        java.lang.String str17 = python3Target10.getVersion();
        org.antlr.v4.tool.Grammar grammar18 = null;
        int[] intArray19 = new int[] {};
        java.lang.String[] strArray20 = python3Target10.getTokenTypesAsTargetLabels(grammar18, intArray19);
        java.lang.String[] strArray21 = python3Target6.getTokenTypesAsTargetLabels(grammar9, intArray19);
        java.lang.String[] strArray22 = python3Target0.getTokenTypesAsTargetLabels(grammar5, intArray19);
        java.lang.String[] strArray23 = python3Target0.targetCharValueEscape;
        org.antlr.v4.codegen.CodeGenerator codeGenerator24 = python3Target0.getCodeGenerator();
        java.lang.String str27 = python3Target0.getTargetStringLiteralFromString("\"\"\\\"\\\"hi!\\\"\\\"\"\"", true);
        int int28 = python3Target0.getInlineTestSetWordSize();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str30 = python3Target0.getElementListName("\\1");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 64 + "'", int3 == 64);
        org.junit.Assert.assertNull(codeGenerator4);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\"\"\"\"\"\"" + "'", str8, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "4.5.2.1" + "'", str12, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "\"\"" + "'", str16, "\"\"");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "4.5.2.1" + "'", str17, "4.5.2.1");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[]");
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertNull(codeGenerator24);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "\"\"\"\\\"\\\"hi!\\\"\\\"\"\"\"" + "'", str27, "\"\"\"\\\"\\\"hi!\\\"\\\"\"\"\"");
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 64 + "'", int28 == 64);
    }

    @Test
    public void test1233() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1233");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.lang.String str2 = python3Target1.getVersion();
        int int3 = python3Target1.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet4 = python3Target1.badWords;
        org.antlr.v4.codegen.target.Python3Target python3Target5 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean6 = python3Target5.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup7 = python3Target5.templates;
        java.lang.String[] strArray10 = new java.lang.String[] { "hi!", "hi!" };
        python3Target5.targetCharValueEscape = strArray10;
        java.lang.String str13 = python3Target5.getTargetStringLiteralFromString("\"\"");
        java.lang.String str14 = python3Target5.getLanguage();
        java.util.Set<java.lang.String> strSet15 = python3Target5.badWords;
        python3Target1.badWords = strSet15;
        python3Target1.language = "\"_tset12\"";
        org.antlr.v4.tool.ast.GrammarAST grammarAST19 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean20 = python3Target1.grammarSymbolCausesIssueInGeneratedCode(grammarAST19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "4.5.2.1" + "'", str2, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 64 + "'", int3 == 64);
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(sTGroup7);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "\"\"\"\"" + "'", str13, "\"\"\"\"");
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(strSet15);
    }

    @Test
    public void test1234() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1234");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        java.util.Set<java.lang.String> strSet2 = python3Target0.badWords;
        boolean boolean3 = python3Target0.templatesExist();
        boolean boolean4 = python3Target0.templatesExist();
        java.lang.String str6 = python3Target0.getTargetStringLiteralFromString("DContext");
        org.antlr.v4.tool.Grammar grammar7 = null;
        org.stringtemplate.v4.ST sT8 = null;
        // The following exception was thrown during execution in test generation
        try {
            python3Target0.genFile(grammar7, sT8, "_tset_\"\"\\\"DContext\\\"\"\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\"DContext\"" + "'", str6, "\"DContext\"");
    }

    @Test
    public void test1235() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1235");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray1 = python3Target0.targetCharValueEscape;
        java.lang.String str2 = python3Target0.language;
        int int3 = python3Target0.getSerializedATNSegmentLimit();
        java.lang.String str6 = python3Target0.getTargetStringLiteralFromString("\"\"\"\"\"\"", false);
        boolean boolean7 = python3Target0.supportsOverloadedMethods();
        int int8 = python3Target0.getInlineTestSetWordSize();
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 29 + "'", int3 == 29);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\"\"\"\"\"\"" + "'", str6, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 64 + "'", int8 == 64);
    }

    @Test
    public void test1236() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1236");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!", "hi!" };
        python3Target0.targetCharValueEscape = strArray5;
        java.lang.String str8 = python3Target0.getTargetStringLiteralFromString("\"\"");
        org.stringtemplate.v4.STGroup sTGroup9 = null;
        python3Target0.templates = sTGroup9;
        java.lang.String[] strArray11 = python3Target0.targetCharValueEscape;
        // The following exception was thrown during execution in test generation
        try {
            org.stringtemplate.v4.STGroup sTGroup12 = python3Target0.loadTemplates();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\"\"\"\"" + "'", str8, "\"\"\"\"");
        org.junit.Assert.assertNotNull(strArray11);
    }

    @Test
    public void test1237() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1237");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.lang.String str2 = python3Target1.getLanguage();
        java.lang.String str4 = python3Target1.getImplicitSetLabel("Python3");
        org.antlr.v4.codegen.CodeGenerator codeGenerator5 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target6 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator5);
        java.util.Set<java.lang.String> strSet7 = python3Target6.getBadWords();
        python3Target1.badWords = strSet7;
        python3Target1.addBadWords();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "Python3" + "'", str2, "Python3");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "_tsetPython3" + "'", str4, "_tsetPython3");
        org.junit.Assert.assertNotNull(strSet7);
    }

    @Test
    public void test1238() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1238");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        java.lang.String str2 = python3Target0.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = python3Target0.getCodeGenerator();
        org.stringtemplate.v4.STGroup sTGroup4 = null;
        python3Target0.templates = sTGroup4;
        org.stringtemplate.v4.STGroup sTGroup6 = python3Target0.templates;
        org.antlr.v4.tool.Grammar grammar7 = null;
        org.stringtemplate.v4.ST sT8 = null;
        python3Target0.genRecognizerHeaderFile(grammar7, sT8, "");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str12 = python3Target0.getElementListName("\"\"@\"\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "4.5.2.1" + "'", str2, "4.5.2.1");
        org.junit.Assert.assertNull(codeGenerator3);
        org.junit.Assert.assertNull(sTGroup6);
    }

    @Test
    public void test1239() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1239");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python3Target1.getBadWords();
        java.lang.String str4 = python3Target1.getAltLabelContextStructName("d");
        org.stringtemplate.v4.STGroup sTGroup5 = python3Target1.getTemplates();
        boolean boolean6 = python3Target1.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup7 = python3Target1.getTemplates();
        python3Target1.language = "\"\"";
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = null;
        java.lang.String str13 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator10, "\\\"4.5.2.1\\\"", false);
        org.antlr.v4.codegen.CodeGenerator codeGenerator14 = python3Target1.gen;
        python3Target1.addBadWords();
        boolean boolean16 = python3Target1.templatesExist();
        org.antlr.v4.codegen.CodeGenerator codeGenerator17 = null;
        python3Target1.gen = codeGenerator17;
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "DContext" + "'", str4, "DContext");
        org.junit.Assert.assertNotNull(sTGroup5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(sTGroup7);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "\\\"4.5.2.1\\\"" + "'", str13, "\\\"4.5.2.1\\\"");
        org.junit.Assert.assertNull(codeGenerator14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    }

    @Test
    public void test1240() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1240");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        java.lang.String str3 = python3Target0.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator4 = null;
        java.lang.String str7 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator4, "\"\\\"hi!\\\"\"", true);
        org.stringtemplate.v4.STGroup sTGroup8 = python3Target0.templates;
        org.antlr.v4.codegen.CodeGenerator codeGenerator9 = python3Target0.getCodeGenerator();
        org.antlr.v4.tool.ast.GrammarAST grammarAST10 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean11 = python3Target0.visibleGrammarSymbolCausesIssueInGeneratedCode(grammarAST10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "4.5.2.1" + "'", str3, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "\"\\\"hi!\\\"\"" + "'", str7, "\"\\\"hi!\\\"\"");
        org.junit.Assert.assertNull(sTGroup8);
        org.junit.Assert.assertNull(codeGenerator9);
    }

    @Test
    public void test1241() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1241");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.lang.String str2 = python3Target1.getVersion();
        int int3 = python3Target1.getSerializedATNSegmentLimit();
        java.lang.String str4 = python3Target1.getVersion();
        boolean boolean5 = python3Target1.wantsBaseListener();
        java.lang.String str7 = python3Target1.getImplicitRuleLabel("\"_tset_tset_12\"");
        java.lang.String[] strArray8 = python3Target1.targetCharValueEscape;
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "4.5.2.1" + "'", str2, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 29 + "'", int3 == 29);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "4.5.2.1" + "'", str4, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "_\"_tset_tset_12\"" + "'", str7, "_\"_tset_tset_12\"");
        org.junit.Assert.assertNotNull(strArray8);
    }

    @Test
    public void test1242() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1242");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        python3Target0.language = "4.5.2.1";
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = python3Target0.getCodeGenerator();
        org.antlr.v4.codegen.CodeGenerator codeGenerator4 = python3Target0.gen;
        org.antlr.v4.codegen.target.Python3Target python3Target5 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray6 = python3Target5.targetCharValueEscape;
        python3Target5.addBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target9 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator8);
        java.lang.String str11 = python3Target9.getTargetStringLiteralFromString("");
        int int12 = python3Target9.getSerializedATNSegmentLimit();
        boolean boolean13 = python3Target9.wantsBaseVisitor();
        org.stringtemplate.v4.STGroup sTGroup14 = python3Target9.loadTemplates();
        python3Target5.templates = sTGroup14;
        python3Target0.templates = sTGroup14;
        boolean boolean17 = python3Target0.templatesExist();
        boolean boolean18 = python3Target0.supportsOverloadedMethods();
        org.junit.Assert.assertNull(codeGenerator3);
        org.junit.Assert.assertNull(codeGenerator4);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "\"\"" + "'", str11, "\"\"");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 29 + "'", int12 == 29);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(sTGroup14);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    }

    @Test
    public void test1243() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1243");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.lang.String str3 = python3Target1.getTargetStringLiteralFromString("");
        int int4 = python3Target1.getSerializedATNSegmentLimit();
        boolean boolean5 = python3Target1.wantsBaseVisitor();
        java.lang.String str7 = python3Target1.getImplicitRuleLabel("\"\"\\\"\\\"hi!\\\"\\\"\"\"");
        org.antlr.v4.tool.ast.GrammarAST grammarAST8 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str9 = python3Target1.getLoopLabel(grammarAST8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "\"\"" + "'", str3, "\"\"");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 29 + "'", int4 == 29);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "_\"\"\\\"\\\"hi!\\\"\\\"\"\"" + "'", str7, "_\"\"\\\"\\\"hi!\\\"\\\"\"\"");
    }

    @Test
    public void test1244() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1244");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!", "hi!" };
        python3Target0.targetCharValueEscape = strArray5;
        java.lang.String str8 = python3Target0.getTargetStringLiteralFromString("\"\"");
        java.lang.String str9 = python3Target0.getLanguage();
        org.antlr.v4.codegen.target.Python3Target python3Target10 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray11 = python3Target10.targetCharValueEscape;
        org.stringtemplate.v4.STGroup sTGroup12 = python3Target10.templates;
        int int13 = python3Target10.getInlineTestSetWordSize();
        org.antlr.v4.codegen.CodeGenerator codeGenerator14 = python3Target10.gen;
        org.antlr.v4.tool.Grammar grammar15 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target16 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str18 = python3Target16.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.tool.Grammar grammar19 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target20 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean21 = python3Target20.supportsOverloadedMethods();
        java.lang.String str22 = python3Target20.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator23 = null;
        java.lang.String str26 = python3Target20.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator23, "", true);
        java.lang.String str27 = python3Target20.getVersion();
        org.antlr.v4.tool.Grammar grammar28 = null;
        int[] intArray29 = new int[] {};
        java.lang.String[] strArray30 = python3Target20.getTokenTypesAsTargetLabels(grammar28, intArray29);
        java.lang.String[] strArray31 = python3Target16.getTokenTypesAsTargetLabels(grammar19, intArray29);
        java.lang.String[] strArray32 = python3Target10.getTokenTypesAsTargetLabels(grammar15, intArray29);
        python3Target0.targetCharValueEscape = strArray32;
        int int34 = python3Target0.getInlineTestSetWordSize();
        org.antlr.v4.codegen.target.Python3Target python3Target35 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean36 = python3Target35.supportsOverloadedMethods();
        java.lang.String str37 = python3Target35.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator38 = python3Target35.getCodeGenerator();
        org.antlr.v4.tool.Grammar grammar39 = null;
        org.stringtemplate.v4.ST sT40 = null;
        python3Target35.genRecognizerHeaderFile(grammar39, sT40, "_tsetPython3");
        boolean boolean43 = python3Target35.wantsBaseListener();
        org.antlr.v4.codegen.target.Python3Target python3Target44 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean45 = python3Target44.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup46 = python3Target44.templates;
        java.lang.String[] strArray49 = new java.lang.String[] { "hi!", "hi!" };
        python3Target44.targetCharValueEscape = strArray49;
        org.antlr.v4.codegen.CodeGenerator codeGenerator51 = null;
        java.lang.String str54 = python3Target44.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator51, "", false);
        java.util.Set<java.lang.String> strSet55 = python3Target44.badWords;
        java.util.Set<java.lang.String> strSet56 = python3Target44.badWords;
        java.util.Set<java.lang.String> strSet57 = python3Target44.badWords;
        python3Target35.badWords = strSet57;
        org.antlr.v4.codegen.target.Python3Target python3Target59 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean60 = python3Target59.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup61 = python3Target59.templates;
        org.antlr.v4.tool.Grammar grammar62 = null;
        org.stringtemplate.v4.ST sT63 = null;
        python3Target59.genRecognizerHeaderFile(grammar62, sT63, "");
        python3Target59.language = "Python3";
        int int68 = python3Target59.getSerializedATNSegmentLimit();
        org.stringtemplate.v4.STGroup sTGroup69 = python3Target59.loadTemplates();
        python3Target35.templates = sTGroup69;
        python3Target0.templates = sTGroup69;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str73 = python3Target0.getImplicitTokenLabel("_\"\"\\\"\\\"hi!\\\"\\\"\"\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\"\"\"\"" + "'", str8, "\"\"\"\"");
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNull(sTGroup12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 64 + "'", int13 == 64);
        org.junit.Assert.assertNull(codeGenerator14);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "\"\"\"\"\"\"" + "'", str18, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "4.5.2.1" + "'", str22, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "\"\"" + "'", str26, "\"\"");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "4.5.2.1" + "'", str27, "4.5.2.1");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[]");
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 64 + "'", int34 == 64);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "4.5.2.1" + "'", str37, "4.5.2.1");
        org.junit.Assert.assertNull(codeGenerator38);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNull(sTGroup46);
        org.junit.Assert.assertNotNull(strArray49);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "" + "'", str54, "");
        org.junit.Assert.assertNotNull(strSet55);
        org.junit.Assert.assertNotNull(strSet56);
        org.junit.Assert.assertNotNull(strSet57);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNull(sTGroup61);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 29 + "'", int68 == 29);
        org.junit.Assert.assertNotNull(sTGroup69);
    }

    @Test
    public void test1245() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1245");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!", "hi!" };
        python3Target0.targetCharValueEscape = strArray5;
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = null;
        java.lang.String str10 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator7, "", false);
        int int11 = python3Target0.getSerializedATNSegmentLimit();
        java.lang.String str12 = python3Target0.getVersion();
        java.lang.String str14 = python3Target0.getTargetStringLiteralFromString("4.5.2.1");
        org.antlr.v4.codegen.CodeGenerator codeGenerator15 = python3Target0.gen;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str17 = python3Target0.getImplicitTokenLabel("_\"_\"\"\"DContext\"\"Context\"\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 29 + "'", int11 == 29);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "4.5.2.1" + "'", str12, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "\"4.5.2.1\"" + "'", str14, "\"4.5.2.1\"");
        org.junit.Assert.assertNull(codeGenerator15);
    }

    @Test
    public void test1246() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1246");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        python3Target0.language = "4.5.2.1";
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = python3Target0.getCodeGenerator();
        java.lang.String str4 = python3Target0.language;
        java.lang.String str7 = python3Target0.getTargetStringLiteralFromString("\\12", true);
        org.antlr.v4.tool.ast.GrammarAST grammarAST8 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean9 = python3Target0.visibleGrammarSymbolCausesIssueInGeneratedCode(grammarAST8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(codeGenerator3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "4.5.2.1" + "'", str4, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "\"\\12\"" + "'", str7, "\"\\12\"");
    }

    @Test
    public void test1247() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1247");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!", "hi!" };
        python3Target0.targetCharValueEscape = strArray5;
        java.lang.String str8 = python3Target0.getTargetStringLiteralFromString("\"\"");
        java.lang.String str10 = python3Target0.getTargetStringLiteralFromString("\"\"");
        java.lang.String[] strArray11 = python3Target0.targetCharValueEscape;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str13 = python3Target0.encodeIntAsCharEscape((int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot encode the specified value: -1");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\"\"\"\"" + "'", str8, "\"\"\"\"");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\"\"\"\"" + "'", str10, "\"\"\"\"");
        org.junit.Assert.assertNotNull(strArray11);
    }

    @Test
    public void test1248() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1248");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.lang.String str2 = python3Target1.getLanguage();
        java.lang.String str4 = python3Target1.getImplicitSetLabel("Python3");
        org.antlr.v4.codegen.model.RuleFunction ruleFunction5 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str6 = python3Target1.getRuleFunctionContextStructName(ruleFunction5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "Python3" + "'", str2, "Python3");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "_tsetPython3" + "'", str4, "_tsetPython3");
    }

    @Test
    public void test1249() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1249");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.lang.String str3 = python3Target1.getTargetStringLiteralFromString("");
        int int4 = python3Target1.getSerializedATNSegmentLimit();
        boolean boolean5 = python3Target1.wantsBaseVisitor();
        org.stringtemplate.v4.STGroup sTGroup6 = python3Target1.loadTemplates();
        boolean boolean7 = python3Target1.wantsBaseVisitor();
        org.antlr.v4.tool.ast.GrammarAST grammarAST8 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str9 = python3Target1.getLoopLabel(grammarAST8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "\"\"" + "'", str3, "\"\"");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 29 + "'", int4 == 29);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(sTGroup6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    public void test1250() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1250");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        java.util.Set<java.lang.String> strSet2 = python3Target0.badWords;
        int int3 = python3Target0.getSerializedATNSegmentLimit();
        java.lang.String str4 = python3Target0.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator5 = null;
        java.lang.String str8 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator5, "\\35", false);
        org.stringtemplate.v4.STGroup sTGroup9 = python3Target0.templates;
        boolean boolean10 = python3Target0.wantsBaseListener();
        java.lang.String str11 = python3Target0.getVersion();
        java.util.Set<java.lang.String> strSet12 = python3Target0.getBadWords();
        org.antlr.v4.tool.ast.GrammarAST grammarAST13 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str14 = python3Target0.getLoopLabel(grammarAST13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 29 + "'", int3 == 29);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "3" + "'", str8, "3");
        org.junit.Assert.assertNull(sTGroup9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "4.5.2.1" + "'", str11, "4.5.2.1");
        org.junit.Assert.assertNotNull(strSet12);
    }

    @Test
    public void test1251() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1251");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str2 = python3Target0.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.tool.Grammar grammar3 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target4 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean5 = python3Target4.supportsOverloadedMethods();
        java.lang.String str6 = python3Target4.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = null;
        java.lang.String str10 = python3Target4.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator7, "", true);
        java.lang.String str11 = python3Target4.getVersion();
        org.antlr.v4.tool.Grammar grammar12 = null;
        int[] intArray13 = new int[] {};
        java.lang.String[] strArray14 = python3Target4.getTokenTypesAsTargetLabels(grammar12, intArray13);
        java.lang.String[] strArray15 = python3Target0.getTokenTypesAsTargetLabels(grammar3, intArray13);
        java.lang.String[] strArray16 = python3Target0.targetCharValueEscape;
        java.lang.String str18 = python3Target0.getTargetStringLiteralFromString("\"\"\"\"\"\"");
        java.lang.String[] strArray19 = python3Target0.targetCharValueEscape;
        org.antlr.v4.codegen.CodeGenerator codeGenerator20 = python3Target0.getCodeGenerator();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "\"\"\"\"\"\"" + "'", str2, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "4.5.2.1" + "'", str6, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\"\"" + "'", str10, "\"\"");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "4.5.2.1" + "'", str11, "4.5.2.1");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[]");
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "\"\"\"\"\"\"\"\"" + "'", str18, "\"\"\"\"\"\"\"\"");
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertNull(codeGenerator20);
    }

    @Test
    public void test1252() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1252");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        java.lang.String str2 = python3Target0.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = null;
        java.lang.String str6 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator3, "", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = null;
        python3Target0.gen = codeGenerator7;
        java.lang.String[] strArray16 = new java.lang.String[] { "\"\"\"\"", "\\12", "\"\"", "4.5.2.1", "", "\"\"\"\"", "\"\"" };
        java.util.LinkedHashSet<java.lang.String> strSet17 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet17, strArray16);
        python3Target0.badWords = strSet17;
        org.antlr.v4.codegen.CodeGenerator codeGenerator20 = python3Target0.gen;
        java.lang.String str21 = python3Target0.getVersion();
        int int22 = python3Target0.getSerializedATNSegmentLimit();
        org.antlr.v4.codegen.target.Python3Target python3Target23 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray24 = python3Target23.targetCharValueEscape;
        org.stringtemplate.v4.STGroup sTGroup25 = python3Target23.templates;
        int int26 = python3Target23.getInlineTestSetWordSize();
        org.antlr.v4.codegen.CodeGenerator codeGenerator27 = python3Target23.gen;
        org.antlr.v4.tool.Grammar grammar28 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target29 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str31 = python3Target29.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.tool.Grammar grammar32 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target33 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean34 = python3Target33.supportsOverloadedMethods();
        java.lang.String str35 = python3Target33.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator36 = null;
        java.lang.String str39 = python3Target33.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator36, "", true);
        java.lang.String str40 = python3Target33.getVersion();
        org.antlr.v4.tool.Grammar grammar41 = null;
        int[] intArray42 = new int[] {};
        java.lang.String[] strArray43 = python3Target33.getTokenTypesAsTargetLabels(grammar41, intArray42);
        java.lang.String[] strArray44 = python3Target29.getTokenTypesAsTargetLabels(grammar32, intArray42);
        java.lang.String[] strArray45 = python3Target23.getTokenTypesAsTargetLabels(grammar28, intArray42);
        org.antlr.v4.codegen.target.Python3Target.python3Keywords = strArray45;
        python3Target0.targetCharValueEscape = strArray45;
        org.antlr.v4.tool.Rule rule48 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str49 = python3Target0.getRuleFunctionContextStructName(rule48);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "4.5.2.1" + "'", str2, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\"\"" + "'", str6, "\"\"");
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNull(codeGenerator20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "4.5.2.1" + "'", str21, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 29 + "'", int22 == 29);
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertNull(sTGroup25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 64 + "'", int26 == 64);
        org.junit.Assert.assertNull(codeGenerator27);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "\"\"\"\"\"\"" + "'", str31, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "4.5.2.1" + "'", str35, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "\"\"" + "'", str39, "\"\"");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "4.5.2.1" + "'", str40, "4.5.2.1");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[]");
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertNotNull(strArray45);
    }

    @Test
    public void test1253() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1253");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!", "hi!" };
        python3Target0.targetCharValueEscape = strArray5;
        java.lang.String str8 = python3Target0.getTargetStringLiteralFromString("\"\"");
        java.lang.String str10 = python3Target0.getTargetStringLiteralFromString("\"\"");
        java.lang.String str11 = python3Target0.getLanguage();
        org.antlr.v4.tool.Grammar grammar12 = null;
        org.stringtemplate.v4.ST sT13 = null;
        python3Target0.genRecognizerHeaderFile(grammar12, sT13, "\"\\\"hi!\\\"\"");
        org.antlr.v4.tool.Grammar grammar16 = null;
        org.stringtemplate.v4.ST sT17 = null;
        // The following exception was thrown during execution in test generation
        try {
            python3Target0.genListenerFile(grammar16, sT17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\"\"\"\"" + "'", str8, "\"\"\"\"");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\"\"\"\"" + "'", str10, "\"\"\"\"");
        org.junit.Assert.assertNull(str11);
    }

    @Test
    public void test1254() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1254");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        python3Target0.language = "4.5.2.1";
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = python3Target0.getCodeGenerator();
        org.antlr.v4.codegen.CodeGenerator codeGenerator4 = python3Target0.gen;
        java.lang.String str5 = python3Target0.getLanguage();
        python3Target0.addBadWords();
        java.lang.String str8 = python3Target0.encodeIntAsCharEscape(10);
        java.lang.String str9 = python3Target0.getVersion();
        python3Target0.addBadWords();
        org.antlr.v4.codegen.target.Python3Target python3Target11 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean12 = python3Target11.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup13 = python3Target11.templates;
        java.lang.String[] strArray16 = new java.lang.String[] { "hi!", "hi!" };
        python3Target11.targetCharValueEscape = strArray16;
        java.lang.String str19 = python3Target11.getTargetStringLiteralFromString("\"\"");
        java.lang.String str20 = python3Target11.getLanguage();
        java.util.Set<java.lang.String> strSet21 = python3Target11.getBadWords();
        org.antlr.v4.codegen.target.Python3Target python3Target22 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean23 = python3Target22.supportsOverloadedMethods();
        java.lang.String str24 = python3Target22.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator25 = null;
        java.lang.String str28 = python3Target22.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator25, "", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator29 = null;
        python3Target22.gen = codeGenerator29;
        java.lang.String[] strArray38 = new java.lang.String[] { "\"\"\"\"", "\\12", "\"\"", "4.5.2.1", "", "\"\"\"\"", "\"\"" };
        java.util.LinkedHashSet<java.lang.String> strSet39 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet39, strArray38);
        python3Target22.badWords = strSet39;
        org.antlr.v4.tool.Grammar grammar42 = null;
        org.stringtemplate.v4.ST sT43 = null;
        python3Target22.genRecognizerHeaderFile(grammar42, sT43, "\"\"");
        java.lang.String str47 = python3Target22.encodeIntAsCharEscape((int) (byte) 10);
        java.lang.String str48 = python3Target22.language;
        java.util.Set<java.lang.String> strSet49 = python3Target22.getBadWords();
        org.antlr.v4.tool.Grammar grammar50 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target51 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str53 = python3Target51.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator54 = null;
        python3Target51.gen = codeGenerator54;
        org.antlr.v4.tool.Grammar grammar56 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target57 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str59 = python3Target57.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.tool.Grammar grammar60 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target61 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean62 = python3Target61.supportsOverloadedMethods();
        java.lang.String str63 = python3Target61.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator64 = null;
        java.lang.String str67 = python3Target61.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator64, "", true);
        java.lang.String str68 = python3Target61.getVersion();
        org.antlr.v4.tool.Grammar grammar69 = null;
        int[] intArray70 = new int[] {};
        java.lang.String[] strArray71 = python3Target61.getTokenTypesAsTargetLabels(grammar69, intArray70);
        java.lang.String[] strArray72 = python3Target57.getTokenTypesAsTargetLabels(grammar60, intArray70);
        java.lang.String[] strArray73 = python3Target51.getTokenTypesAsTargetLabels(grammar56, intArray70);
        java.lang.String[] strArray74 = python3Target22.getTokenTypesAsTargetLabels(grammar50, intArray70);
        python3Target11.targetCharValueEscape = strArray74;
        python3Target0.targetCharValueEscape = strArray74;
        org.junit.Assert.assertNull(codeGenerator3);
        org.junit.Assert.assertNull(codeGenerator4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "4.5.2.1" + "'", str5, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\\12" + "'", str8, "\\12");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "4.5.2.1" + "'", str9, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(sTGroup13);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "\"\"\"\"" + "'", str19, "\"\"\"\"");
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(strSet21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "4.5.2.1" + "'", str24, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "\"\"" + "'", str28, "\"\"");
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "\\12" + "'", str47, "\\12");
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertNotNull(strSet49);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "\"\"\"\"\"\"" + "'", str53, "\"\"\"\"\"\"");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "\"\"\"\"\"\"" + "'", str59, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "4.5.2.1" + "'", str63, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "\"\"" + "'", str67, "\"\"");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "4.5.2.1" + "'", str68, "4.5.2.1");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[]");
        org.junit.Assert.assertNotNull(strArray71);
        org.junit.Assert.assertNotNull(strArray72);
        org.junit.Assert.assertNotNull(strArray73);
        org.junit.Assert.assertNotNull(strArray74);
    }

    @Test
    public void test1255() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1255");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.lang.String str3 = python3Target1.getTargetStringLiteralFromString("");
        int int4 = python3Target1.getSerializedATNSegmentLimit();
        boolean boolean5 = python3Target1.wantsBaseVisitor();
        java.lang.String str6 = python3Target1.getVersion();
        java.lang.String str8 = python3Target1.encodeIntAsCharEscape(29);
        org.antlr.v4.codegen.CodeGenerator codeGenerator9 = python3Target1.getCodeGenerator();
        int int10 = python3Target1.getSerializedATNSegmentLimit();
        java.util.Set<java.lang.String> strSet11 = python3Target1.badWords;
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "\"\"" + "'", str3, "\"\"");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 29 + "'", int4 == 29);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "4.5.2.1" + "'", str6, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\\35" + "'", str8, "\\35");
        org.junit.Assert.assertNull(codeGenerator9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 29 + "'", int10 == 29);
        org.junit.Assert.assertNotNull(strSet11);
    }

    @Test
    public void test1256() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1256");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python3Target1.getBadWords();
        java.lang.String str4 = python3Target1.getAltLabelContextStructName("d");
        org.stringtemplate.v4.STGroup sTGroup5 = python3Target1.getTemplates();
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = null;
        java.lang.String str9 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator6, "", true);
        org.antlr.v4.tool.Grammar grammar10 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target11 = new org.antlr.v4.codegen.target.Python3Target();
        python3Target11.language = "";
        org.antlr.v4.codegen.target.Python3Target python3Target14 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean15 = python3Target14.supportsOverloadedMethods();
        java.lang.String str16 = python3Target14.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator17 = null;
        java.lang.String str20 = python3Target14.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator17, "", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator21 = null;
        python3Target14.gen = codeGenerator21;
        java.lang.String[] strArray30 = new java.lang.String[] { "\"\"\"\"", "\\12", "\"\"", "4.5.2.1", "", "\"\"\"\"", "\"\"" };
        java.util.LinkedHashSet<java.lang.String> strSet31 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet31, strArray30);
        python3Target14.badWords = strSet31;
        python3Target11.badWords = strSet31;
        java.lang.String str36 = python3Target11.encodeIntAsCharEscape((int) (byte) 100);
        java.lang.String str37 = python3Target11.getLanguage();
        java.lang.String[] strArray38 = new java.lang.String[] {};
        python3Target11.targetCharValueEscape = strArray38;
        org.antlr.v4.tool.Grammar grammar40 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target41 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean42 = python3Target41.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup43 = python3Target41.templates;
        java.lang.String[] strArray46 = new java.lang.String[] { "hi!", "hi!" };
        python3Target41.targetCharValueEscape = strArray46;
        org.antlr.v4.codegen.CodeGenerator codeGenerator48 = null;
        java.lang.String str51 = python3Target41.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator48, "", false);
        java.util.Set<java.lang.String> strSet52 = python3Target41.badWords;
        java.lang.String str54 = python3Target41.getTargetStringLiteralFromString("12");
        int int55 = python3Target41.getSerializedATNSegmentLimit();
        boolean boolean56 = python3Target41.supportsOverloadedMethods();
        org.antlr.v4.tool.Grammar grammar57 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target58 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean59 = python3Target58.supportsOverloadedMethods();
        java.util.Set<java.lang.String> strSet60 = python3Target58.badWords;
        boolean boolean61 = python3Target58.templatesExist();
        java.lang.String str62 = python3Target58.getLanguage();
        org.antlr.v4.tool.Grammar grammar63 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target64 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str66 = python3Target64.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator67 = null;
        python3Target64.gen = codeGenerator67;
        org.antlr.v4.tool.Grammar grammar69 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target70 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str72 = python3Target70.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.tool.Grammar grammar73 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target74 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean75 = python3Target74.supportsOverloadedMethods();
        java.lang.String str76 = python3Target74.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator77 = null;
        java.lang.String str80 = python3Target74.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator77, "", true);
        java.lang.String str81 = python3Target74.getVersion();
        org.antlr.v4.tool.Grammar grammar82 = null;
        int[] intArray83 = new int[] {};
        java.lang.String[] strArray84 = python3Target74.getTokenTypesAsTargetLabels(grammar82, intArray83);
        java.lang.String[] strArray85 = python3Target70.getTokenTypesAsTargetLabels(grammar73, intArray83);
        java.lang.String[] strArray86 = python3Target64.getTokenTypesAsTargetLabels(grammar69, intArray83);
        java.lang.String[] strArray87 = python3Target58.getTokenTypesAsTargetLabels(grammar63, intArray83);
        java.lang.String[] strArray88 = python3Target41.getTokenTypesAsTargetLabels(grammar57, intArray83);
        java.lang.String[] strArray89 = python3Target11.getTokenTypesAsTargetLabels(grammar40, intArray83);
        java.lang.String[] strArray90 = python3Target1.getTokenTypesAsTargetLabels(grammar10, intArray83);
        java.lang.String str92 = python3Target1.encodeIntAsCharEscape((int) (short) 10);
        org.antlr.v4.tool.Grammar grammar93 = null;
        int[] intArray94 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String[] strArray95 = python3Target1.getTokenTypesAsTargetLabels(grammar93, intArray94);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "DContext" + "'", str4, "DContext");
        org.junit.Assert.assertNotNull(sTGroup5);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\"\"" + "'", str9, "\"\"");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "4.5.2.1" + "'", str16, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "\"\"" + "'", str20, "\"\"");
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "d" + "'", str36, "d");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "" + "'", str37, "");
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNull(sTGroup43);
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "" + "'", str51, "");
        org.junit.Assert.assertNotNull(strSet52);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "\"12\"" + "'", str54, "\"12\"");
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 29 + "'", int55 == 29);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(strSet60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNull(str62);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "\"\"\"\"\"\"" + "'", str66, "\"\"\"\"\"\"");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "\"\"\"\"\"\"" + "'", str72, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "4.5.2.1" + "'", str76, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "\"\"" + "'", str80, "\"\"");
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "4.5.2.1" + "'", str81, "4.5.2.1");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[]");
        org.junit.Assert.assertNotNull(strArray84);
        org.junit.Assert.assertNotNull(strArray85);
        org.junit.Assert.assertNotNull(strArray86);
        org.junit.Assert.assertNotNull(strArray87);
        org.junit.Assert.assertNotNull(strArray88);
        org.junit.Assert.assertNotNull(strArray89);
        org.junit.Assert.assertNotNull(strArray90);
        org.junit.Assert.assertEquals("'" + str92 + "' != '" + "\\n" + "'", str92, "\\n");
    }

    @Test
    public void test1257() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1257");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!", "hi!" };
        python3Target0.targetCharValueEscape = strArray5;
        java.lang.String str8 = python3Target0.getTargetStringLiteralFromString("\"\"");
        java.lang.String str10 = python3Target0.getTargetStringLiteralFromString("\"\"");
        boolean boolean11 = python3Target0.wantsBaseVisitor();
        org.antlr.v4.tool.Grammar grammar12 = null;
        org.stringtemplate.v4.ST sT13 = null;
        python3Target0.genRecognizerHeaderFile(grammar12, sT13, "");
        java.lang.String str16 = python3Target0.language;
        java.lang.String str17 = python3Target0.getVersion();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str19 = python3Target0.getElementName("_tset\"\"\\0\"\"Context");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\"\"\"\"" + "'", str8, "\"\"\"\"");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\"\"\"\"" + "'", str10, "\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "4.5.2.1" + "'", str17, "4.5.2.1");
    }

    @Test
    public void test1258() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1258");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        python3Target0.language = "";
        org.antlr.v4.codegen.target.Python3Target python3Target3 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean4 = python3Target3.supportsOverloadedMethods();
        java.lang.String str5 = python3Target3.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = null;
        java.lang.String str9 = python3Target3.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator6, "", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = null;
        python3Target3.gen = codeGenerator10;
        java.lang.String[] strArray19 = new java.lang.String[] { "\"\"\"\"", "\\12", "\"\"", "4.5.2.1", "", "\"\"\"\"", "\"\"" };
        java.util.LinkedHashSet<java.lang.String> strSet20 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet20, strArray19);
        python3Target3.badWords = strSet20;
        python3Target0.badWords = strSet20;
        python3Target0.language = "_tsetPython3";
        org.antlr.v4.tool.Grammar grammar26 = null;
        org.stringtemplate.v4.ST sT27 = null;
        python3Target0.genRecognizerHeaderFile(grammar26, sT27, "_tsetPython3");
        org.antlr.v4.tool.Grammar grammar30 = null;
        org.stringtemplate.v4.ST sT31 = null;
        // The following exception was thrown during execution in test generation
        try {
            python3Target0.genFile(grammar30, sT31, "_tset\"\"\\0\"\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "4.5.2.1" + "'", str5, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\"\"" + "'", str9, "\"\"");
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
    }

    @Test
    public void test1259() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1259");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python3Target1.getBadWords();
        java.lang.String str4 = python3Target1.getAltLabelContextStructName("d");
        org.stringtemplate.v4.STGroup sTGroup5 = python3Target1.getTemplates();
        boolean boolean6 = python3Target1.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup7 = python3Target1.getTemplates();
        python3Target1.language = "\"\"";
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = null;
        java.lang.String str13 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator10, "\\\"4.5.2.1\\\"", false);
        org.antlr.v4.codegen.CodeGenerator codeGenerator14 = python3Target1.gen;
        python3Target1.addBadWords();
        boolean boolean16 = python3Target1.templatesExist();
        org.antlr.v4.tool.ast.GrammarAST grammarAST17 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean18 = python3Target1.visibleGrammarSymbolCausesIssueInGeneratedCode(grammarAST17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "DContext" + "'", str4, "DContext");
        org.junit.Assert.assertNotNull(sTGroup5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(sTGroup7);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "\\\"4.5.2.1\\\"" + "'", str13, "\\\"4.5.2.1\\\"");
        org.junit.Assert.assertNull(codeGenerator14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    }

    @Test
    public void test1260() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1260");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray1 = python3Target0.targetCharValueEscape;
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = null;
        java.lang.String str6 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator3, "\"\\12\"", false);
        int int7 = python3Target0.getSerializedATNSegmentLimit();
        boolean boolean8 = python3Target0.templatesExist();
        boolean boolean9 = python3Target0.supportsOverloadedMethods();
        org.antlr.v4.tool.Grammar grammar10 = null;
        org.stringtemplate.v4.ST sT11 = null;
        python3Target0.genRecognizerHeaderFile(grammar10, sT11, "_tsetPython3");
        java.lang.String str14 = python3Target0.getVersion();
        java.lang.String[] strArray15 = python3Target0.targetCharValueEscape;
        java.lang.Class<?> wildcardClass16 = python3Target0.getClass();
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "12" + "'", str6, "12");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 29 + "'", int7 == 29);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "4.5.2.1" + "'", str14, "4.5.2.1");
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test1261() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1261");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        java.lang.String str2 = python3Target0.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = python3Target0.getCodeGenerator();
        org.stringtemplate.v4.STGroup sTGroup4 = null;
        python3Target0.templates = sTGroup4;
        org.stringtemplate.v4.STGroup sTGroup6 = python3Target0.templates;
        java.lang.String[] strArray7 = python3Target0.targetCharValueEscape;
        java.lang.String str10 = python3Target0.getTargetStringLiteralFromString("\"12\"", false);
        org.antlr.v4.codegen.target.Python3Target python3Target11 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean12 = python3Target11.supportsOverloadedMethods();
        java.lang.String str13 = python3Target11.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator14 = python3Target11.getCodeGenerator();
        org.stringtemplate.v4.STGroup sTGroup15 = null;
        python3Target11.templates = sTGroup15;
        org.stringtemplate.v4.STGroup sTGroup17 = python3Target11.templates;
        java.lang.String[] strArray18 = python3Target11.targetCharValueEscape;
        java.util.Set<java.lang.String> strSet19 = python3Target11.badWords;
        java.util.Set<java.lang.String> strSet20 = python3Target11.getBadWords();
        python3Target0.badWords = strSet20;
        org.antlr.v4.tool.ast.GrammarAST grammarAST22 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean23 = python3Target0.grammarSymbolCausesIssueInGeneratedCode(grammarAST22);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "4.5.2.1" + "'", str2, "4.5.2.1");
        org.junit.Assert.assertNull(codeGenerator3);
        org.junit.Assert.assertNull(sTGroup6);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\"12\"" + "'", str10, "\"12\"");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "4.5.2.1" + "'", str13, "4.5.2.1");
        org.junit.Assert.assertNull(codeGenerator14);
        org.junit.Assert.assertNull(sTGroup17);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertNotNull(strSet19);
        org.junit.Assert.assertNotNull(strSet20);
    }

    @Test
    public void test1262() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1262");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python3Target1.getBadWords();
        java.lang.String str4 = python3Target1.getAltLabelContextStructName("d");
        java.lang.String str5 = python3Target1.getLanguage();
        java.lang.String str6 = python3Target1.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = null;
        java.lang.String str10 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator7, "\"_tsetPython3\"", true);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str12 = python3Target1.getElementName("\"Hi!Context\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "DContext" + "'", str4, "DContext");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Python3" + "'", str5, "Python3");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "4.5.2.1" + "'", str6, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\"_tsetPython3\"" + "'", str10, "\"_tsetPython3\"");
    }

    @Test
    public void test1263() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1263");
        java.lang.String str1 = org.stringtemplate.v4.StringRenderer.escapeHTML("\"\\\"DContext\\\"\"Context");
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "\"\\\"DContext\\\"\"Context" + "'", str1, "\"\\\"DContext\\\"\"Context");
    }

    @Test
    public void test1264() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1264");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python3Target1.getBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = null;
        python3Target1.gen = codeGenerator3;
        java.lang.String str6 = python3Target1.getAltLabelContextStructName("hi!");
        java.lang.String str9 = python3Target1.getTargetStringLiteralFromString("\"hi!\"", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = null;
        python3Target1.gen = codeGenerator10;
        org.antlr.v4.tool.Grammar grammar12 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target13 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray14 = python3Target13.targetCharValueEscape;
        org.stringtemplate.v4.STGroup sTGroup15 = python3Target13.templates;
        int int16 = python3Target13.getInlineTestSetWordSize();
        org.antlr.v4.codegen.CodeGenerator codeGenerator17 = python3Target13.gen;
        org.antlr.v4.tool.Grammar grammar18 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target19 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str21 = python3Target19.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.tool.Grammar grammar22 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target23 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean24 = python3Target23.supportsOverloadedMethods();
        java.lang.String str25 = python3Target23.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator26 = null;
        java.lang.String str29 = python3Target23.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator26, "", true);
        java.lang.String str30 = python3Target23.getVersion();
        org.antlr.v4.tool.Grammar grammar31 = null;
        int[] intArray32 = new int[] {};
        java.lang.String[] strArray33 = python3Target23.getTokenTypesAsTargetLabels(grammar31, intArray32);
        java.lang.String[] strArray34 = python3Target19.getTokenTypesAsTargetLabels(grammar22, intArray32);
        java.lang.String[] strArray35 = python3Target13.getTokenTypesAsTargetLabels(grammar18, intArray32);
        java.lang.String[] strArray36 = python3Target1.getTokenTypesAsTargetLabels(grammar12, intArray32);
        java.lang.String[] strArray37 = python3Target1.targetCharValueEscape;
        java.lang.String str39 = python3Target1.getImplicitRuleLabel("#");
        java.lang.String str41 = python3Target1.getAltLabelContextStructName("\"\\\"\\\"\\\\1\\\"\\\"\"");
        org.antlr.v4.tool.ast.GrammarAST grammarAST42 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean43 = python3Target1.visibleGrammarSymbolCausesIssueInGeneratedCode(grammarAST42);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Hi!Context" + "'", str6, "Hi!Context");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\"\\\"hi!\\\"\"" + "'", str9, "\"\\\"hi!\\\"\"");
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertNull(sTGroup15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 64 + "'", int16 == 64);
        org.junit.Assert.assertNull(codeGenerator17);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "\"\"\"\"\"\"" + "'", str21, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "4.5.2.1" + "'", str25, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "\"\"" + "'", str29, "\"\"");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "4.5.2.1" + "'", str30, "4.5.2.1");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[]");
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "_#" + "'", str39, "_#");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "\"\\\"\\\"\\\\1\\\"\\\"\"Context" + "'", str41, "\"\\\"\\\"\\\\1\\\"\\\"\"Context");
    }

    @Test
    public void test1265() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1265");
        org.antlr.v4.codegen.target.Python3Target.PythonStringRenderer pythonStringRenderer0 = new org.antlr.v4.codegen.target.Python3Target.PythonStringRenderer();
        java.lang.Object obj1 = null;
        java.util.Locale locale3 = null;
        java.lang.String str4 = pythonStringRenderer0.toString(obj1, "\"\"\"\"\"\"", locale3);
        org.antlr.v4.codegen.target.Python3Target python3Target5 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray6 = python3Target5.targetCharValueEscape;
        org.stringtemplate.v4.STGroup sTGroup7 = python3Target5.templates;
        java.util.Locale locale9 = null;
        java.lang.String str10 = pythonStringRenderer0.toString((java.lang.Object) sTGroup7, "\"Hi!Context\"", locale9);
        java.util.Locale locale13 = null;
        java.lang.String str14 = pythonStringRenderer0.toString((java.lang.Object) "\"DContext\"", "", locale13);
        java.lang.Object obj15 = null;
        java.util.Locale locale17 = null;
        java.lang.String str18 = pythonStringRenderer0.toString(obj15, "\"\\\"hi!\\\"\"", locale17);
        java.util.Locale locale21 = null;
        java.lang.String str22 = pythonStringRenderer0.toString((java.lang.Object) "\"\"\"\"\"\"\"\"Context", "\"1\"", locale21);
        org.antlr.v4.codegen.target.Python3Target python3Target23 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean24 = python3Target23.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup25 = python3Target23.templates;
        java.lang.String[] strArray28 = new java.lang.String[] { "hi!", "hi!" };
        python3Target23.targetCharValueEscape = strArray28;
        java.lang.String str31 = python3Target23.getTargetStringLiteralFromString("\"\"");
        java.lang.String str33 = python3Target23.getTargetStringLiteralFromString("\"\"");
        java.lang.String str34 = python3Target23.getLanguage();
        int int35 = python3Target23.getInlineTestSetWordSize();
        boolean boolean36 = python3Target23.wantsBaseVisitor();
        java.lang.String str37 = python3Target23.getLanguage();
        org.antlr.v4.codegen.target.Python3Target python3Target38 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean39 = python3Target38.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup40 = python3Target38.templates;
        java.lang.String[] strArray43 = new java.lang.String[] { "hi!", "hi!" };
        python3Target38.targetCharValueEscape = strArray43;
        org.antlr.v4.codegen.CodeGenerator codeGenerator45 = null;
        java.lang.String str48 = python3Target38.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator45, "", false);
        int int49 = python3Target38.getSerializedATNSegmentLimit();
        java.lang.String str50 = python3Target38.getVersion();
        boolean boolean51 = python3Target38.supportsOverloadedMethods();
        org.antlr.v4.codegen.target.Python3Target python3Target52 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean53 = python3Target52.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup54 = python3Target52.templates;
        java.lang.String[] strArray57 = new java.lang.String[] { "hi!", "hi!" };
        python3Target52.targetCharValueEscape = strArray57;
        java.lang.String[] strArray60 = new java.lang.String[] { "hi!" };
        org.antlr.v4.codegen.target.Python3Target.python3Keywords = strArray60;
        python3Target52.targetCharValueEscape = strArray60;
        org.antlr.v4.codegen.target.Python3Target.python3Keywords = strArray60;
        python3Target38.targetCharValueEscape = strArray60;
        python3Target23.targetCharValueEscape = strArray60;
        org.antlr.v4.codegen.CodeGenerator codeGenerator66 = null;
        python3Target23.gen = codeGenerator66;
        int int68 = python3Target23.getInlineTestSetWordSize();
        org.antlr.v4.tool.Grammar grammar69 = null;
        org.stringtemplate.v4.ST sT70 = null;
        python3Target23.genRecognizerHeaderFile(grammar69, sT70, "\"\"\\0\"\"");
        java.util.Locale locale74 = null;
        java.lang.String str75 = pythonStringRenderer0.toString((java.lang.Object) sT70, "_\"4.5.2.1\"", locale74);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "\"\"\"\"\"\"" + "'", str4, "\"\"\"\"\"\"");
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertNull(sTGroup7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\"Hi!Context\"" + "'", str10, "\"Hi!Context\"");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "\"\\\"hi!\\\"\"" + "'", str18, "\"\\\"hi!\\\"\"");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "\"1\"" + "'", str22, "\"1\"");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNull(sTGroup25);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "\"\"\"\"" + "'", str31, "\"\"\"\"");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "\"\"\"\"" + "'", str33, "\"\"\"\"");
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 64 + "'", int35 == 64);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNull(sTGroup40);
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "" + "'", str48, "");
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 29 + "'", int49 == 29);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "4.5.2.1" + "'", str50, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNull(sTGroup54);
        org.junit.Assert.assertNotNull(strArray57);
        org.junit.Assert.assertNotNull(strArray60);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 64 + "'", int68 == 64);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "_\"4.5.2.1\"" + "'", str75, "_\"4.5.2.1\"");
    }

    @Test
    public void test1266() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1266");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        java.lang.String str2 = python3Target0.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = null;
        java.lang.String str6 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator3, "", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = null;
        python3Target0.gen = codeGenerator7;
        java.lang.String[] strArray16 = new java.lang.String[] { "\"\"\"\"", "\\12", "\"\"", "4.5.2.1", "", "\"\"\"\"", "\"\"" };
        java.util.LinkedHashSet<java.lang.String> strSet17 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet17, strArray16);
        python3Target0.badWords = strSet17;
        org.antlr.v4.codegen.CodeGenerator codeGenerator20 = python3Target0.gen;
        java.lang.String str21 = python3Target0.getVersion();
        int int22 = python3Target0.getSerializedATNSegmentLimit();
        java.lang.String str23 = python3Target0.language;
        org.antlr.v4.codegen.target.Python3Target python3Target24 = new org.antlr.v4.codegen.target.Python3Target();
        python3Target24.language = "4.5.2.1";
        org.antlr.v4.codegen.CodeGenerator codeGenerator27 = python3Target24.getCodeGenerator();
        org.antlr.v4.codegen.CodeGenerator codeGenerator28 = python3Target24.gen;
        org.antlr.v4.codegen.CodeGenerator codeGenerator29 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target30 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator29);
        java.lang.String str32 = python3Target30.getTargetStringLiteralFromString("");
        int int33 = python3Target30.getSerializedATNSegmentLimit();
        boolean boolean34 = python3Target30.wantsBaseVisitor();
        org.stringtemplate.v4.STGroup sTGroup35 = python3Target30.loadTemplates();
        python3Target24.templates = sTGroup35;
        python3Target0.templates = sTGroup35;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str39 = python3Target0.getElementName("\\\"\\\"hi!\\\"\\\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "4.5.2.1" + "'", str2, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\"\"" + "'", str6, "\"\"");
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNull(codeGenerator20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "4.5.2.1" + "'", str21, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 29 + "'", int22 == 29);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNull(codeGenerator27);
        org.junit.Assert.assertNull(codeGenerator28);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "\"\"" + "'", str32, "\"\"");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 29 + "'", int33 == 29);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(sTGroup35);
    }

    @Test
    public void test1267() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1267");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        java.lang.String str2 = python3Target0.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = python3Target0.getCodeGenerator();
        org.stringtemplate.v4.STGroup sTGroup4 = null;
        python3Target0.templates = sTGroup4;
        org.stringtemplate.v4.STGroup sTGroup6 = python3Target0.templates;
        java.lang.String[] strArray7 = python3Target0.targetCharValueEscape;
        java.util.Set<java.lang.String> strSet8 = python3Target0.badWords;
        java.util.Set<java.lang.String> strSet9 = python3Target0.getBadWords();
        python3Target0.addBadWords();
        java.lang.String str12 = python3Target0.encodeIntAsCharEscape((int) 'a');
        org.antlr.v4.tool.Grammar grammar13 = null;
        org.stringtemplate.v4.ST sT14 = null;
        // The following exception was thrown during execution in test generation
        try {
            python3Target0.genFile(grammar13, sT14, "\"\"\"\"\"\"Context");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "4.5.2.1" + "'", str2, "4.5.2.1");
        org.junit.Assert.assertNull(codeGenerator3);
        org.junit.Assert.assertNull(sTGroup6);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertNotNull(strSet9);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "a" + "'", str12, "a");
    }

    @Test
    public void test1268() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1268");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!", "hi!" };
        python3Target0.targetCharValueEscape = strArray5;
        java.lang.String[] strArray8 = new java.lang.String[] { "hi!" };
        org.antlr.v4.codegen.target.Python3Target.python3Keywords = strArray8;
        python3Target0.targetCharValueEscape = strArray8;
        org.antlr.v4.tool.Grammar grammar11 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target12 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str14 = python3Target12.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator15 = null;
        python3Target12.gen = codeGenerator15;
        org.antlr.v4.tool.Grammar grammar17 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target18 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str20 = python3Target18.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.tool.Grammar grammar21 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target22 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean23 = python3Target22.supportsOverloadedMethods();
        java.lang.String str24 = python3Target22.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator25 = null;
        java.lang.String str28 = python3Target22.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator25, "", true);
        java.lang.String str29 = python3Target22.getVersion();
        org.antlr.v4.tool.Grammar grammar30 = null;
        int[] intArray31 = new int[] {};
        java.lang.String[] strArray32 = python3Target22.getTokenTypesAsTargetLabels(grammar30, intArray31);
        java.lang.String[] strArray33 = python3Target18.getTokenTypesAsTargetLabels(grammar21, intArray31);
        java.lang.String[] strArray34 = python3Target12.getTokenTypesAsTargetLabels(grammar17, intArray31);
        java.lang.String[] strArray35 = python3Target0.getTokenTypesAsTargetLabels(grammar11, intArray31);
        org.antlr.v4.codegen.CodeGenerator codeGenerator36 = null;
        java.lang.String str39 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator36, "\"_tset12\"", false);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str41 = python3Target0.getListLabel("Hi!Context");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "\"\"\"\"\"\"" + "'", str14, "\"\"\"\"\"\"");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "\"\"\"\"\"\"" + "'", str20, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "4.5.2.1" + "'", str24, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "\"\"" + "'", str28, "\"\"");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "4.5.2.1" + "'", str29, "4.5.2.1");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[]");
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "_tset12" + "'", str39, "_tset12");
    }

    @Test
    public void test1269() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1269");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        java.lang.String str2 = python3Target0.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = null;
        java.lang.String str6 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator3, "", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = null;
        python3Target0.gen = codeGenerator7;
        java.lang.String[] strArray16 = new java.lang.String[] { "\"\"\"\"", "\\12", "\"\"", "4.5.2.1", "", "\"\"\"\"", "\"\"" };
        java.util.LinkedHashSet<java.lang.String> strSet17 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet17, strArray16);
        python3Target0.badWords = strSet17;
        java.lang.String str20 = python3Target0.getLanguage();
        java.lang.String str23 = python3Target0.getTargetStringLiteralFromString("_tsetHi!Context", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator24 = python3Target0.gen;
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "4.5.2.1" + "'", str2, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\"\"" + "'", str6, "\"\"");
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "\"_tsetHi!Context\"" + "'", str23, "\"_tsetHi!Context\"");
        org.junit.Assert.assertNull(codeGenerator24);
    }

    @Test
    public void test1270() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1270");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!", "hi!" };
        python3Target0.targetCharValueEscape = strArray5;
        java.lang.String str8 = python3Target0.getTargetStringLiteralFromString("\"\"");
        java.lang.String str9 = python3Target0.getLanguage();
        java.util.Set<java.lang.String> strSet10 = python3Target0.getBadWords();
        org.antlr.v4.codegen.target.Python3Target python3Target11 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean12 = python3Target11.supportsOverloadedMethods();
        java.lang.String str13 = python3Target11.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator14 = null;
        java.lang.String str17 = python3Target11.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator14, "", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator18 = null;
        python3Target11.gen = codeGenerator18;
        java.lang.String[] strArray27 = new java.lang.String[] { "\"\"\"\"", "\\12", "\"\"", "4.5.2.1", "", "\"\"\"\"", "\"\"" };
        java.util.LinkedHashSet<java.lang.String> strSet28 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet28, strArray27);
        python3Target11.badWords = strSet28;
        boolean boolean31 = python3Target11.templatesExist();
        org.antlr.v4.codegen.CodeGenerator codeGenerator32 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target33 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator32);
        java.lang.String str35 = python3Target33.getTargetStringLiteralFromString("");
        int int36 = python3Target33.getSerializedATNSegmentLimit();
        boolean boolean37 = python3Target33.wantsBaseVisitor();
        org.stringtemplate.v4.STGroup sTGroup38 = python3Target33.loadTemplates();
        python3Target11.templates = sTGroup38;
        python3Target0.templates = sTGroup38;
        java.lang.String str42 = python3Target0.getImplicitRuleLabel("_tset12");
        java.lang.String str44 = python3Target0.getImplicitSetLabel("\\64");
        java.lang.String str45 = python3Target0.language;
        java.lang.Class<?> wildcardClass46 = python3Target0.getClass();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\"\"\"\"" + "'", str8, "\"\"\"\"");
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(strSet10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "4.5.2.1" + "'", str13, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "\"\"" + "'", str17, "\"\"");
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "\"\"" + "'", str35, "\"\"");
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 29 + "'", int36 == 29);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(sTGroup38);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "__tset12" + "'", str42, "__tset12");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "_tset\\64" + "'", str44, "_tset\\64");
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertNotNull(wildcardClass46);
    }

    @Test
    public void test1271() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1271");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray1 = python3Target0.targetCharValueEscape;
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = null;
        java.lang.String str6 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator3, "\"\\12\"", false);
        java.lang.String str7 = python3Target0.getLanguage();
        java.lang.Class<?> wildcardClass8 = python3Target0.getClass();
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "12" + "'", str6, "12");
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(wildcardClass8);
    }

    @Test
    public void test1272() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1272");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        org.antlr.v4.tool.Grammar grammar3 = null;
        org.stringtemplate.v4.ST sT4 = null;
        python3Target0.genRecognizerHeaderFile(grammar3, sT4, "");
        python3Target0.language = "Python3";
        java.util.Set<java.lang.String> strSet9 = null;
        python3Target0.badWords = strSet9;
        boolean boolean11 = python3Target0.wantsBaseVisitor();
        java.lang.String str13 = python3Target0.getImplicitSetLabel("Python3");
        int int14 = python3Target0.getInlineTestSetWordSize();
        java.lang.String str15 = python3Target0.language;
        org.antlr.v4.tool.Grammar grammar16 = null;
        org.stringtemplate.v4.ST sT17 = null;
        // The following exception was thrown during execution in test generation
        try {
            python3Target0.genFile(grammar16, sT17, "\"\\\"\\\"hi!\\\"\\\"\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "_tsetPython3" + "'", str13, "_tsetPython3");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 64 + "'", int14 == 64);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Python3" + "'", str15, "Python3");
    }

    @Test
    public void test1273() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1273");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        org.antlr.v4.tool.Grammar grammar3 = null;
        org.stringtemplate.v4.ST sT4 = null;
        python3Target0.genRecognizerHeaderFile(grammar3, sT4, "");
        python3Target0.language = "Python3";
        int int9 = python3Target0.getSerializedATNSegmentLimit();
        java.lang.String str11 = python3Target0.getListLabel("_tsetPython3");
        boolean boolean12 = python3Target0.wantsBaseVisitor();
        python3Target0.addBadWords();
        int int14 = python3Target0.getSerializedATNSegmentLimit();
        org.antlr.v4.codegen.CodeGenerator codeGenerator15 = python3Target0.gen;
        org.antlr.v4.codegen.target.Python3Target python3Target16 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean17 = python3Target16.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup18 = python3Target16.templates;
        java.lang.String[] strArray21 = new java.lang.String[] { "hi!", "hi!" };
        python3Target16.targetCharValueEscape = strArray21;
        java.lang.String str24 = python3Target16.getTargetStringLiteralFromString("\"\"");
        java.lang.String str25 = python3Target16.getLanguage();
        org.antlr.v4.codegen.target.Python3Target python3Target26 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray27 = python3Target26.targetCharValueEscape;
        org.stringtemplate.v4.STGroup sTGroup28 = python3Target26.templates;
        int int29 = python3Target26.getInlineTestSetWordSize();
        org.antlr.v4.codegen.CodeGenerator codeGenerator30 = python3Target26.gen;
        org.antlr.v4.tool.Grammar grammar31 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target32 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str34 = python3Target32.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.tool.Grammar grammar35 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target36 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean37 = python3Target36.supportsOverloadedMethods();
        java.lang.String str38 = python3Target36.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator39 = null;
        java.lang.String str42 = python3Target36.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator39, "", true);
        java.lang.String str43 = python3Target36.getVersion();
        org.antlr.v4.tool.Grammar grammar44 = null;
        int[] intArray45 = new int[] {};
        java.lang.String[] strArray46 = python3Target36.getTokenTypesAsTargetLabels(grammar44, intArray45);
        java.lang.String[] strArray47 = python3Target32.getTokenTypesAsTargetLabels(grammar35, intArray45);
        java.lang.String[] strArray48 = python3Target26.getTokenTypesAsTargetLabels(grammar31, intArray45);
        python3Target16.targetCharValueEscape = strArray48;
        int int50 = python3Target16.getInlineTestSetWordSize();
        org.antlr.v4.codegen.target.Python3Target python3Target51 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean52 = python3Target51.supportsOverloadedMethods();
        java.lang.String str53 = python3Target51.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator54 = python3Target51.getCodeGenerator();
        org.antlr.v4.tool.Grammar grammar55 = null;
        org.stringtemplate.v4.ST sT56 = null;
        python3Target51.genRecognizerHeaderFile(grammar55, sT56, "_tsetPython3");
        boolean boolean59 = python3Target51.wantsBaseListener();
        org.antlr.v4.codegen.target.Python3Target python3Target60 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean61 = python3Target60.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup62 = python3Target60.templates;
        java.lang.String[] strArray65 = new java.lang.String[] { "hi!", "hi!" };
        python3Target60.targetCharValueEscape = strArray65;
        org.antlr.v4.codegen.CodeGenerator codeGenerator67 = null;
        java.lang.String str70 = python3Target60.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator67, "", false);
        java.util.Set<java.lang.String> strSet71 = python3Target60.badWords;
        java.util.Set<java.lang.String> strSet72 = python3Target60.badWords;
        java.util.Set<java.lang.String> strSet73 = python3Target60.badWords;
        python3Target51.badWords = strSet73;
        org.antlr.v4.codegen.target.Python3Target python3Target75 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean76 = python3Target75.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup77 = python3Target75.templates;
        org.antlr.v4.tool.Grammar grammar78 = null;
        org.stringtemplate.v4.ST sT79 = null;
        python3Target75.genRecognizerHeaderFile(grammar78, sT79, "");
        python3Target75.language = "Python3";
        int int84 = python3Target75.getSerializedATNSegmentLimit();
        org.stringtemplate.v4.STGroup sTGroup85 = python3Target75.loadTemplates();
        python3Target51.templates = sTGroup85;
        python3Target16.templates = sTGroup85;
        python3Target0.templates = sTGroup85;
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 29 + "'", int9 == 29);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "_tsetPython3" + "'", str11, "_tsetPython3");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 29 + "'", int14 == 29);
        org.junit.Assert.assertNull(codeGenerator15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNull(sTGroup18);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "\"\"\"\"" + "'", str24, "\"\"\"\"");
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertNull(sTGroup28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 64 + "'", int29 == 64);
        org.junit.Assert.assertNull(codeGenerator30);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "\"\"\"\"\"\"" + "'", str34, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "4.5.2.1" + "'", str38, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "\"\"" + "'", str42, "\"\"");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "4.5.2.1" + "'", str43, "4.5.2.1");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[]");
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 64 + "'", int50 == 64);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "4.5.2.1" + "'", str53, "4.5.2.1");
        org.junit.Assert.assertNull(codeGenerator54);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNull(sTGroup62);
        org.junit.Assert.assertNotNull(strArray65);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "" + "'", str70, "");
        org.junit.Assert.assertNotNull(strSet71);
        org.junit.Assert.assertNotNull(strSet72);
        org.junit.Assert.assertNotNull(strSet73);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNull(sTGroup77);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 29 + "'", int84 == 29);
        org.junit.Assert.assertNotNull(sTGroup85);
    }

    @Test
    public void test1274() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1274");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python3Target1.getBadWords();
        java.lang.String str4 = python3Target1.getAltLabelContextStructName("d");
        org.stringtemplate.v4.STGroup sTGroup5 = python3Target1.getTemplates();
        boolean boolean6 = python3Target1.supportsOverloadedMethods();
        java.lang.String str8 = python3Target1.getImplicitRuleLabel("12");
        org.stringtemplate.v4.STGroup sTGroup9 = python3Target1.templates;
        int int10 = python3Target1.getInlineTestSetWordSize();
        org.antlr.v4.tool.Grammar grammar11 = null;
        org.stringtemplate.v4.ST sT12 = null;
        python3Target1.genRecognizerHeaderFile(grammar11, sT12, "_tset\"\\\"\\\"hi!\\\"\\\"\"");
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "DContext" + "'", str4, "DContext");
        org.junit.Assert.assertNotNull(sTGroup5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "_12" + "'", str8, "_12");
        org.junit.Assert.assertNotNull(sTGroup9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 64 + "'", int10 == 64);
    }

    @Test
    public void test1275() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1275");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        java.lang.String str2 = python3Target0.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = python3Target0.getCodeGenerator();
        org.stringtemplate.v4.STGroup sTGroup4 = null;
        python3Target0.templates = sTGroup4;
        org.stringtemplate.v4.STGroup sTGroup6 = python3Target0.templates;
        java.lang.String[] strArray7 = python3Target0.targetCharValueEscape;
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target9 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator8);
        java.util.Set<java.lang.String> strSet10 = python3Target9.getBadWords();
        java.lang.String str12 = python3Target9.getAltLabelContextStructName("d");
        org.stringtemplate.v4.STGroup sTGroup13 = python3Target9.templates;
        python3Target0.templates = sTGroup13;
        org.antlr.v4.codegen.CodeGenerator codeGenerator15 = python3Target0.gen;
        org.antlr.v4.codegen.CodeGenerator codeGenerator16 = python3Target0.getCodeGenerator();
        org.antlr.v4.codegen.model.RuleFunction ruleFunction17 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str18 = python3Target0.getRuleFunctionContextStructName(ruleFunction17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "4.5.2.1" + "'", str2, "4.5.2.1");
        org.junit.Assert.assertNull(codeGenerator3);
        org.junit.Assert.assertNull(sTGroup6);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strSet10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "DContext" + "'", str12, "DContext");
        org.junit.Assert.assertNotNull(sTGroup13);
        org.junit.Assert.assertNull(codeGenerator15);
        org.junit.Assert.assertNull(codeGenerator16);
    }

    @Test
    public void test1276() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1276");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        java.lang.String str2 = python3Target0.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = null;
        java.lang.String str6 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator3, "", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = null;
        python3Target0.gen = codeGenerator7;
        java.lang.String[] strArray16 = new java.lang.String[] { "\"\"\"\"", "\\12", "\"\"", "4.5.2.1", "", "\"\"\"\"", "\"\"" };
        java.util.LinkedHashSet<java.lang.String> strSet17 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet17, strArray16);
        python3Target0.badWords = strSet17;
        java.lang.String str20 = python3Target0.getLanguage();
        org.antlr.v4.tool.Grammar grammar21 = null;
        org.stringtemplate.v4.ST sT22 = null;
        // The following exception was thrown during execution in test generation
        try {
            python3Target0.genListenerFile(grammar21, sT22);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "4.5.2.1" + "'", str2, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\"\"" + "'", str6, "\"\"");
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNull(str20);
    }

    @Test
    public void test1277() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1277");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!", "hi!" };
        python3Target0.targetCharValueEscape = strArray5;
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = null;
        java.lang.String str10 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator7, "", false);
        java.util.Set<java.lang.String> strSet11 = python3Target0.badWords;
        java.lang.String str13 = python3Target0.getTargetStringLiteralFromString("12");
        int int14 = python3Target0.getSerializedATNSegmentLimit();
        java.util.Set<java.lang.String> strSet15 = python3Target0.badWords;
        org.antlr.v4.tool.Grammar grammar16 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str18 = python3Target0.getTokenTypeAsTargetLabel(grammar16, 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNotNull(strSet11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "\"12\"" + "'", str13, "\"12\"");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 29 + "'", int14 == 29);
        org.junit.Assert.assertNotNull(strSet15);
    }

    @Test
    public void test1278() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1278");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        org.antlr.v4.tool.Grammar grammar3 = null;
        org.stringtemplate.v4.ST sT4 = null;
        python3Target0.genRecognizerHeaderFile(grammar3, sT4, "");
        python3Target0.language = "Python3";
        java.util.Set<java.lang.String> strSet9 = null;
        python3Target0.badWords = strSet9;
        boolean boolean11 = python3Target0.wantsBaseVisitor();
        java.lang.String str12 = python3Target0.getVersion();
        java.lang.String str13 = python3Target0.getLanguage();
        org.antlr.v4.tool.ast.GrammarAST grammarAST14 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str15 = python3Target0.getLoopCounter(grammarAST14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "4.5.2.1" + "'", str12, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Python3" + "'", str13, "Python3");
    }

    @Test
    public void test1279() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1279");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!", "hi!" };
        python3Target0.targetCharValueEscape = strArray5;
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = null;
        java.lang.String str10 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator7, "", false);
        java.util.Set<java.lang.String> strSet11 = python3Target0.badWords;
        org.antlr.v4.codegen.CodeGenerator codeGenerator12 = null;
        java.lang.String str15 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator12, "@", false);
        org.antlr.v4.tool.ast.GrammarAST grammarAST16 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean17 = python3Target0.grammarSymbolCausesIssueInGeneratedCode(grammarAST16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNotNull(strSet11);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
    }

    @Test
    public void test1280() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1280");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        java.lang.String str2 = python3Target0.getVersion();
        java.lang.String str3 = python3Target0.getVersion();
        python3Target0.addBadWords();
        org.antlr.v4.tool.ast.GrammarAST grammarAST5 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean6 = python3Target0.grammarSymbolCausesIssueInGeneratedCode(grammarAST5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "4.5.2.1" + "'", str2, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "4.5.2.1" + "'", str3, "4.5.2.1");
    }

    @Test
    public void test1281() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1281");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        java.util.Set<java.lang.String> strSet2 = python3Target0.badWords;
        int int3 = python3Target0.getSerializedATNSegmentLimit();
        org.antlr.v4.tool.Grammar grammar4 = null;
        org.stringtemplate.v4.ST sT5 = null;
        python3Target0.genRecognizerHeaderFile(grammar4, sT5, "\"Python3\"Context");
        org.antlr.v4.tool.Grammar grammar8 = null;
        org.stringtemplate.v4.ST sT9 = null;
        // The following exception was thrown during execution in test generation
        try {
            python3Target0.genFile(grammar8, sT9, "\"\"\"\"\"\"\"\"ContextContext");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 29 + "'", int3 == 29);
    }

    @Test
    public void test1282() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1282");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray1 = python3Target0.targetCharValueEscape;
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = null;
        java.lang.String str6 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator3, "\"\\12\"", false);
        java.lang.String str7 = python3Target0.getLanguage();
        boolean boolean8 = python3Target0.templatesExist();
        org.antlr.v4.codegen.CodeGenerator codeGenerator9 = python3Target0.gen;
        org.antlr.v4.tool.ast.GrammarAST grammarAST10 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str11 = python3Target0.getLoopCounter(grammarAST10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "12" + "'", str6, "12");
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(codeGenerator9);
    }

    @Test
    public void test1283() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1283");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray1 = python3Target0.targetCharValueEscape;
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = null;
        java.lang.String str6 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator3, "\"\\12\"", false);
        int int7 = python3Target0.getSerializedATNSegmentLimit();
        boolean boolean8 = python3Target0.templatesExist();
        boolean boolean9 = python3Target0.supportsOverloadedMethods();
        org.antlr.v4.tool.Grammar grammar10 = null;
        org.stringtemplate.v4.ST sT11 = null;
        python3Target0.genRecognizerHeaderFile(grammar10, sT11, "_tsetPython3");
        java.util.Set<java.lang.String> strSet14 = python3Target0.badWords;
        java.util.Set<java.lang.String> strSet15 = python3Target0.badWords;
        org.antlr.v4.tool.ast.GrammarAST grammarAST16 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean17 = python3Target0.visibleGrammarSymbolCausesIssueInGeneratedCode(grammarAST16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "12" + "'", str6, "12");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 29 + "'", int7 == 29);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(strSet14);
        org.junit.Assert.assertNotNull(strSet15);
    }

    @Test
    public void test1284() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1284");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray1 = python3Target0.targetCharValueEscape;
        java.lang.String str2 = python3Target0.language;
        int int3 = python3Target0.getSerializedATNSegmentLimit();
        java.lang.String str6 = python3Target0.getTargetStringLiteralFromString("\"\"\"\"\"\"", false);
        org.antlr.v4.tool.ast.GrammarAST grammarAST7 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean8 = python3Target0.visibleGrammarSymbolCausesIssueInGeneratedCode(grammarAST7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 29 + "'", int3 == 29);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\"\"\"\"\"\"" + "'", str6, "\"\"\"\"\"\"");
    }

    @Test
    public void test1285() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1285");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        java.lang.String str2 = python3Target0.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = null;
        java.lang.String str6 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator3, "", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = null;
        python3Target0.gen = codeGenerator7;
        java.lang.String[] strArray16 = new java.lang.String[] { "\"\"\"\"", "\\12", "\"\"", "4.5.2.1", "", "\"\"\"\"", "\"\"" };
        java.util.LinkedHashSet<java.lang.String> strSet17 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet17, strArray16);
        python3Target0.badWords = strSet17;
        org.antlr.v4.tool.Grammar grammar20 = null;
        org.stringtemplate.v4.ST sT21 = null;
        python3Target0.genRecognizerHeaderFile(grammar20, sT21, "\"\"");
        java.lang.String str25 = python3Target0.encodeIntAsCharEscape((int) (byte) 10);
        boolean boolean26 = python3Target0.wantsBaseVisitor();
        org.antlr.v4.tool.Grammar grammar27 = null;
        org.stringtemplate.v4.ST sT28 = null;
        python3Target0.genRecognizerHeaderFile(grammar27, sT28, "_tset_tset\"\\\"0\\\"\"");
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "4.5.2.1" + "'", str2, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\"\"" + "'", str6, "\"\"");
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "\\12" + "'", str25, "\\12");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
    }

    @Test
    public void test1286() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1286");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python3Target1.getBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = null;
        python3Target1.gen = codeGenerator3;
        java.lang.String str6 = python3Target1.getAltLabelContextStructName("hi!");
        org.antlr.v4.tool.Grammar grammar7 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target8 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean9 = python3Target8.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup10 = python3Target8.templates;
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "hi!" };
        python3Target8.targetCharValueEscape = strArray13;
        java.lang.String[] strArray16 = new java.lang.String[] { "hi!" };
        org.antlr.v4.codegen.target.Python3Target.python3Keywords = strArray16;
        python3Target8.targetCharValueEscape = strArray16;
        org.antlr.v4.tool.Grammar grammar19 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target20 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str22 = python3Target20.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator23 = null;
        python3Target20.gen = codeGenerator23;
        org.antlr.v4.tool.Grammar grammar25 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target26 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str28 = python3Target26.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.tool.Grammar grammar29 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target30 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean31 = python3Target30.supportsOverloadedMethods();
        java.lang.String str32 = python3Target30.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator33 = null;
        java.lang.String str36 = python3Target30.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator33, "", true);
        java.lang.String str37 = python3Target30.getVersion();
        org.antlr.v4.tool.Grammar grammar38 = null;
        int[] intArray39 = new int[] {};
        java.lang.String[] strArray40 = python3Target30.getTokenTypesAsTargetLabels(grammar38, intArray39);
        java.lang.String[] strArray41 = python3Target26.getTokenTypesAsTargetLabels(grammar29, intArray39);
        java.lang.String[] strArray42 = python3Target20.getTokenTypesAsTargetLabels(grammar25, intArray39);
        java.lang.String[] strArray43 = python3Target8.getTokenTypesAsTargetLabels(grammar19, intArray39);
        java.lang.String[] strArray44 = python3Target1.getTokenTypesAsTargetLabels(grammar7, intArray39);
        java.util.Set<java.lang.String> strSet45 = python3Target1.getBadWords();
        java.lang.String str46 = python3Target1.getVersion();
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Hi!Context" + "'", str6, "Hi!Context");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(sTGroup10);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "\"\"\"\"\"\"" + "'", str22, "\"\"\"\"\"\"");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "\"\"\"\"\"\"" + "'", str28, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "4.5.2.1" + "'", str32, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "\"\"" + "'", str36, "\"\"");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "4.5.2.1" + "'", str37, "4.5.2.1");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[]");
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertNotNull(strSet45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "4.5.2.1" + "'", str46, "4.5.2.1");
    }

    @Test
    public void test1287() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1287");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray1 = python3Target0.targetCharValueEscape;
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        int int3 = python3Target0.getInlineTestSetWordSize();
        boolean boolean4 = python3Target0.supportsOverloadedMethods();
        java.lang.String str6 = python3Target0.encodeIntAsCharEscape(64);
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = python3Target0.getCodeGenerator();
        org.antlr.v4.tool.Grammar grammar8 = null;
        org.stringtemplate.v4.ST sT9 = null;
        // The following exception was thrown during execution in test generation
        try {
            python3Target0.genListenerFile(grammar8, sT9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 64 + "'", int3 == 64);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "@" + "'", str6, "@");
        org.junit.Assert.assertNull(codeGenerator7);
    }

    @Test
    public void test1288() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1288");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray1 = python3Target0.targetCharValueEscape;
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        int int3 = python3Target0.getInlineTestSetWordSize();
        org.antlr.v4.codegen.CodeGenerator codeGenerator4 = python3Target0.gen;
        org.antlr.v4.tool.Grammar grammar5 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target6 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str8 = python3Target6.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.tool.Grammar grammar9 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target10 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean11 = python3Target10.supportsOverloadedMethods();
        java.lang.String str12 = python3Target10.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator13 = null;
        java.lang.String str16 = python3Target10.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator13, "", true);
        java.lang.String str17 = python3Target10.getVersion();
        org.antlr.v4.tool.Grammar grammar18 = null;
        int[] intArray19 = new int[] {};
        java.lang.String[] strArray20 = python3Target10.getTokenTypesAsTargetLabels(grammar18, intArray19);
        java.lang.String[] strArray21 = python3Target6.getTokenTypesAsTargetLabels(grammar9, intArray19);
        java.lang.String[] strArray22 = python3Target0.getTokenTypesAsTargetLabels(grammar5, intArray19);
        java.lang.String[] strArray23 = python3Target0.targetCharValueEscape;
        org.antlr.v4.codegen.CodeGenerator codeGenerator24 = python3Target0.getCodeGenerator();
        org.antlr.v4.tool.ast.GrammarAST grammarAST25 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean26 = python3Target0.visibleGrammarSymbolCausesIssueInGeneratedCode(grammarAST25);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 64 + "'", int3 == 64);
        org.junit.Assert.assertNull(codeGenerator4);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\"\"\"\"\"\"" + "'", str8, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "4.5.2.1" + "'", str12, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "\"\"" + "'", str16, "\"\"");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "4.5.2.1" + "'", str17, "4.5.2.1");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[]");
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertNull(codeGenerator24);
    }

    @Test
    public void test1289() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1289");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        java.lang.String str2 = python3Target0.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = python3Target0.getCodeGenerator();
        org.antlr.v4.tool.Grammar grammar4 = null;
        org.stringtemplate.v4.ST sT5 = null;
        python3Target0.genRecognizerHeaderFile(grammar4, sT5, "_tsetPython3");
        boolean boolean8 = python3Target0.wantsBaseListener();
        int int9 = python3Target0.getSerializedATNSegmentLimit();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str11 = python3Target0.getAltLabelContextStructName("\"\"\\1\"\"Context");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "4.5.2.1" + "'", str2, "4.5.2.1");
        org.junit.Assert.assertNull(codeGenerator3);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 29 + "'", int9 == 29);
    }

    @Test
    public void test1290() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1290");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!", "hi!" };
        python3Target0.targetCharValueEscape = strArray5;
        java.lang.String str8 = python3Target0.getTargetStringLiteralFromString("\"\"");
        java.lang.String str10 = python3Target0.getTargetStringLiteralFromString("\"\"");
        java.lang.String str11 = python3Target0.getLanguage();
        int int12 = python3Target0.getInlineTestSetWordSize();
        org.antlr.v4.codegen.CodeGenerator codeGenerator13 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target14 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator13);
        java.util.Set<java.lang.String> strSet15 = python3Target14.getBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator16 = null;
        python3Target14.gen = codeGenerator16;
        java.lang.String str19 = python3Target14.getAltLabelContextStructName("hi!");
        java.lang.String str22 = python3Target14.getTargetStringLiteralFromString("\"hi!\"", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator23 = null;
        python3Target14.gen = codeGenerator23;
        org.antlr.v4.tool.Grammar grammar25 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target26 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray27 = python3Target26.targetCharValueEscape;
        org.stringtemplate.v4.STGroup sTGroup28 = python3Target26.templates;
        int int29 = python3Target26.getInlineTestSetWordSize();
        org.antlr.v4.codegen.CodeGenerator codeGenerator30 = python3Target26.gen;
        org.antlr.v4.tool.Grammar grammar31 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target32 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str34 = python3Target32.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.tool.Grammar grammar35 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target36 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean37 = python3Target36.supportsOverloadedMethods();
        java.lang.String str38 = python3Target36.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator39 = null;
        java.lang.String str42 = python3Target36.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator39, "", true);
        java.lang.String str43 = python3Target36.getVersion();
        org.antlr.v4.tool.Grammar grammar44 = null;
        int[] intArray45 = new int[] {};
        java.lang.String[] strArray46 = python3Target36.getTokenTypesAsTargetLabels(grammar44, intArray45);
        java.lang.String[] strArray47 = python3Target32.getTokenTypesAsTargetLabels(grammar35, intArray45);
        java.lang.String[] strArray48 = python3Target26.getTokenTypesAsTargetLabels(grammar31, intArray45);
        java.lang.String[] strArray49 = python3Target14.getTokenTypesAsTargetLabels(grammar25, intArray45);
        java.lang.String str51 = python3Target14.getAltLabelContextStructName("\"Python3\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator52 = python3Target14.gen;
        org.antlr.v4.codegen.target.Python3Target python3Target53 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean54 = python3Target53.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup55 = python3Target53.templates;
        java.lang.String[] strArray58 = new java.lang.String[] { "hi!", "hi!" };
        python3Target53.targetCharValueEscape = strArray58;
        org.antlr.v4.codegen.CodeGenerator codeGenerator60 = null;
        java.lang.String str63 = python3Target53.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator60, "", false);
        java.util.Set<java.lang.String> strSet64 = python3Target53.badWords;
        java.util.Set<java.lang.String> strSet65 = python3Target53.badWords;
        python3Target14.badWords = strSet65;
        python3Target0.badWords = strSet65;
        org.antlr.v4.tool.Grammar grammar68 = null;
        org.stringtemplate.v4.ST sT69 = null;
        // The following exception was thrown during execution in test generation
        try {
            python3Target0.genFile(grammar68, sT69, "_tset\\64");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\"\"\"\"" + "'", str8, "\"\"\"\"");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\"\"\"\"" + "'", str10, "\"\"\"\"");
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 64 + "'", int12 == 64);
        org.junit.Assert.assertNotNull(strSet15);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Hi!Context" + "'", str19, "Hi!Context");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "\"\\\"hi!\\\"\"" + "'", str22, "\"\\\"hi!\\\"\"");
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertNull(sTGroup28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 64 + "'", int29 == 64);
        org.junit.Assert.assertNull(codeGenerator30);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "\"\"\"\"\"\"" + "'", str34, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "4.5.2.1" + "'", str38, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "\"\"" + "'", str42, "\"\"");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "4.5.2.1" + "'", str43, "4.5.2.1");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[]");
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertNotNull(strArray49);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "\"Python3\"Context" + "'", str51, "\"Python3\"Context");
        org.junit.Assert.assertNull(codeGenerator52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNull(sTGroup55);
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "" + "'", str63, "");
        org.junit.Assert.assertNotNull(strSet64);
        org.junit.Assert.assertNotNull(strSet65);
    }

    @Test
    public void test1291() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1291");
        org.antlr.v4.codegen.target.Python3Target.PythonStringRenderer pythonStringRenderer0 = new org.antlr.v4.codegen.target.Python3Target.PythonStringRenderer();
        java.lang.Object obj1 = null;
        java.util.Locale locale3 = null;
        java.lang.String str4 = pythonStringRenderer0.toString(obj1, "\"\"\"\"\"\"", locale3);
        org.antlr.v4.codegen.target.Python3Target python3Target5 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str7 = python3Target5.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = null;
        python3Target5.gen = codeGenerator8;
        java.lang.String str10 = python3Target5.getVersion();
        org.antlr.v4.codegen.target.Python3Target python3Target11 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean12 = python3Target11.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup13 = python3Target11.templates;
        org.antlr.v4.tool.Grammar grammar14 = null;
        org.stringtemplate.v4.ST sT15 = null;
        python3Target11.genRecognizerHeaderFile(grammar14, sT15, "");
        python3Target11.language = "Python3";
        int int20 = python3Target11.getSerializedATNSegmentLimit();
        org.stringtemplate.v4.STGroup sTGroup21 = python3Target11.loadTemplates();
        python3Target5.templates = sTGroup21;
        java.util.Set<java.lang.String> strSet23 = python3Target5.getBadWords();
        java.util.Locale locale25 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str26 = pythonStringRenderer0.toString((java.lang.Object) strSet23, "\"\"\\\"DContext\\\"\"\"", locale25);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.util.HashSet cannot be cast to java.lang.String");
        } catch (java.lang.ClassCastException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "\"\"\"\"\"\"" + "'", str4, "\"\"\"\"\"\"");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "\"\"\"\"\"\"" + "'", str7, "\"\"\"\"\"\"");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "4.5.2.1" + "'", str10, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(sTGroup13);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 29 + "'", int20 == 29);
        org.junit.Assert.assertNotNull(sTGroup21);
        org.junit.Assert.assertNotNull(strSet23);
    }

    @Test
    public void test1292() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1292");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.lang.String str3 = python3Target1.getTargetStringLiteralFromString("");
        org.antlr.v4.codegen.CodeGenerator codeGenerator4 = python3Target1.gen;
        org.stringtemplate.v4.STGroup sTGroup5 = python3Target1.templates;
        org.stringtemplate.v4.STGroup sTGroup6 = python3Target1.loadTemplates();
        org.stringtemplate.v4.STGroup sTGroup7 = python3Target1.getTemplates();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "\"\"" + "'", str3, "\"\"");
        org.junit.Assert.assertNull(codeGenerator4);
        org.junit.Assert.assertNull(sTGroup5);
        org.junit.Assert.assertNotNull(sTGroup6);
        org.junit.Assert.assertNotNull(sTGroup7);
    }

    @Test
    public void test1293() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1293");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray1 = python3Target0.targetCharValueEscape;
        java.lang.String str2 = python3Target0.language;
        int int3 = python3Target0.getSerializedATNSegmentLimit();
        java.lang.String str6 = python3Target0.getTargetStringLiteralFromString("\"\"\"\"\"\"", false);
        java.lang.String str9 = python3Target0.getTargetStringLiteralFromString("\"Hi!Context\"", false);
        org.antlr.v4.tool.Grammar grammar10 = null;
        org.stringtemplate.v4.ST sT11 = null;
        python3Target0.genRecognizerHeaderFile(grammar10, sT11, "\"_tsetHi!Context\"");
        java.lang.String[] strArray14 = python3Target0.targetCharValueEscape;
        java.lang.Class<?> wildcardClass15 = strArray14.getClass();
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 29 + "'", int3 == 29);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\"\"\"\"\"\"" + "'", str6, "\"\"\"\"\"\"");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\"Hi!Context\"" + "'", str9, "\"Hi!Context\"");
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test1294() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1294");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        org.antlr.v4.tool.Grammar grammar3 = null;
        org.stringtemplate.v4.ST sT4 = null;
        python3Target0.genRecognizerHeaderFile(grammar3, sT4, "");
        python3Target0.language = "Python3";
        int int9 = python3Target0.getSerializedATNSegmentLimit();
        java.lang.String str11 = python3Target0.getListLabel("_tsetPython3");
        boolean boolean12 = python3Target0.wantsBaseVisitor();
        java.util.Set<java.lang.String> strSet13 = python3Target0.getBadWords();
        org.stringtemplate.v4.STGroup sTGroup14 = python3Target0.templates;
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 29 + "'", int9 == 29);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "_tsetPython3" + "'", str11, "_tsetPython3");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(strSet13);
        org.junit.Assert.assertNotNull(sTGroup14);
    }

    @Test
    public void test1295() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1295");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        python3Target0.language = "";
        org.antlr.v4.codegen.target.Python3Target python3Target3 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean4 = python3Target3.supportsOverloadedMethods();
        java.lang.String str5 = python3Target3.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = null;
        java.lang.String str9 = python3Target3.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator6, "", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = null;
        python3Target3.gen = codeGenerator10;
        java.lang.String[] strArray19 = new java.lang.String[] { "\"\"\"\"", "\\12", "\"\"", "4.5.2.1", "", "\"\"\"\"", "\"\"" };
        java.util.LinkedHashSet<java.lang.String> strSet20 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet20, strArray19);
        python3Target3.badWords = strSet20;
        python3Target0.badWords = strSet20;
        java.lang.String str25 = python3Target0.encodeIntAsCharEscape((int) (byte) 100);
        java.lang.String str26 = python3Target0.getLanguage();
        java.lang.String str28 = python3Target0.getTargetStringLiteralFromString("\"\\0\"");
        org.antlr.v4.codegen.target.Python3Target python3Target29 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean30 = python3Target29.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup31 = python3Target29.templates;
        org.antlr.v4.tool.Grammar grammar32 = null;
        org.stringtemplate.v4.ST sT33 = null;
        python3Target29.genRecognizerHeaderFile(grammar32, sT33, "");
        python3Target29.language = "Python3";
        java.util.Set<java.lang.String> strSet38 = null;
        python3Target29.badWords = strSet38;
        boolean boolean40 = python3Target29.wantsBaseVisitor();
        java.lang.String str42 = python3Target29.getImplicitSetLabel("Python3");
        int int43 = python3Target29.getInlineTestSetWordSize();
        java.lang.String str44 = python3Target29.language;
        java.lang.String str45 = python3Target29.getLanguage();
        int int46 = python3Target29.getInlineTestSetWordSize();
        java.lang.String str48 = python3Target29.getImplicitRuleLabel("\"\\\"\\\"4.5.2.1\\\"\\\"\"");
        java.lang.String str50 = python3Target29.getImplicitSetLabel("_tset_12");
        org.stringtemplate.v4.STGroup sTGroup51 = python3Target29.templates;
        python3Target0.templates = sTGroup51;
        org.antlr.v4.tool.Grammar grammar53 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target54 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean55 = python3Target54.supportsOverloadedMethods();
        java.lang.String str56 = python3Target54.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator57 = null;
        java.lang.String str60 = python3Target54.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator57, "", true);
        java.lang.String str61 = python3Target54.getVersion();
        org.antlr.v4.tool.Grammar grammar62 = null;
        int[] intArray63 = new int[] {};
        java.lang.String[] strArray64 = python3Target54.getTokenTypesAsTargetLabels(grammar62, intArray63);
        java.lang.String[] strArray65 = python3Target0.getTokenTypesAsTargetLabels(grammar53, intArray63);
        org.antlr.v4.tool.Grammar grammar66 = null;
        org.stringtemplate.v4.ST sT67 = null;
        // The following exception was thrown during execution in test generation
        try {
            python3Target0.genListenerFile(grammar66, sT67);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "4.5.2.1" + "'", str5, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\"\"" + "'", str9, "\"\"");
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "d" + "'", str25, "d");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "\"\"\\0\"\"" + "'", str28, "\"\"\\0\"\"");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNull(sTGroup31);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "_tsetPython3" + "'", str42, "_tsetPython3");
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 64 + "'", int43 == 64);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "Python3" + "'", str44, "Python3");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "Python3" + "'", str45, "Python3");
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 64 + "'", int46 == 64);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "_\"\\\"\\\"4.5.2.1\\\"\\\"\"" + "'", str48, "_\"\\\"\\\"4.5.2.1\\\"\\\"\"");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "_tset_tset_12" + "'", str50, "_tset_tset_12");
        org.junit.Assert.assertNotNull(sTGroup51);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "4.5.2.1" + "'", str56, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "\"\"" + "'", str60, "\"\"");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "4.5.2.1" + "'", str61, "4.5.2.1");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[]");
        org.junit.Assert.assertNotNull(strArray64);
        org.junit.Assert.assertNotNull(strArray65);
    }

    @Test
    public void test1296() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1296");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.lang.String str3 = python3Target1.getTargetStringLiteralFromString("");
        int int4 = python3Target1.getSerializedATNSegmentLimit();
        java.lang.String str5 = python3Target1.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup6 = python3Target1.loadTemplates();
        org.stringtemplate.v4.STGroup sTGroup7 = python3Target1.getTemplates();
        java.lang.String str9 = python3Target1.getAltLabelContextStructName("\"\"DContext\"\"");
        org.antlr.v4.tool.Grammar grammar10 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str12 = python3Target1.getTokenTypeAsTargetLabel(grammar10, 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "\"\"" + "'", str3, "\"\"");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 29 + "'", int4 == 29);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Python3" + "'", str5, "Python3");
        org.junit.Assert.assertNotNull(sTGroup6);
        org.junit.Assert.assertNotNull(sTGroup7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\"\"DContext\"\"Context" + "'", str9, "\"\"DContext\"\"Context");
    }

    @Test
    public void test1297() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1297");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python3Target1.getBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = null;
        python3Target1.gen = codeGenerator3;
        java.lang.String str6 = python3Target1.getAltLabelContextStructName("hi!");
        boolean boolean7 = python3Target1.supportsOverloadedMethods();
        java.lang.String[] strArray8 = python3Target1.targetCharValueEscape;
        java.lang.String str9 = python3Target1.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = null;
        java.lang.String str13 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator10, "", true);
        java.lang.String[] strArray14 = python3Target1.targetCharValueEscape;
        java.lang.String str17 = python3Target1.getTargetStringLiteralFromString("_\"_\"\"\"DContext\"\"Context\"\"", true);
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Hi!Context" + "'", str6, "Hi!Context");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Python3" + "'", str9, "Python3");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "\"\"" + "'", str13, "\"\"");
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "\"_\\\"_\\\"\\\"\\\"DContext\\\"\\\"Context\\\"\\\"\"" + "'", str17, "\"_\\\"_\\\"\\\"\\\"DContext\\\"\\\"Context\\\"\\\"\"");
    }

    @Test
    public void test1298() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1298");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        python3Target0.language = "";
        org.antlr.v4.codegen.target.Python3Target python3Target3 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean4 = python3Target3.supportsOverloadedMethods();
        java.lang.String str5 = python3Target3.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = null;
        java.lang.String str9 = python3Target3.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator6, "", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = null;
        python3Target3.gen = codeGenerator10;
        java.lang.String[] strArray19 = new java.lang.String[] { "\"\"\"\"", "\\12", "\"\"", "4.5.2.1", "", "\"\"\"\"", "\"\"" };
        java.util.LinkedHashSet<java.lang.String> strSet20 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet20, strArray19);
        python3Target3.badWords = strSet20;
        python3Target0.badWords = strSet20;
        python3Target0.language = "_tsetPython3";
        org.antlr.v4.tool.Grammar grammar26 = null;
        org.stringtemplate.v4.ST sT27 = null;
        python3Target0.genRecognizerHeaderFile(grammar26, sT27, "_tsetPython3");
        org.antlr.v4.codegen.CodeGenerator codeGenerator30 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target31 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator30);
        java.util.Set<java.lang.String> strSet32 = python3Target31.getBadWords();
        org.antlr.v4.codegen.target.Python3Target python3Target33 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str35 = python3Target33.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.codegen.target.Python3Target python3Target36 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean37 = python3Target36.supportsOverloadedMethods();
        java.util.Set<java.lang.String> strSet38 = python3Target36.badWords;
        python3Target33.badWords = strSet38;
        python3Target31.badWords = strSet38;
        java.util.Set<java.lang.String> strSet41 = python3Target31.badWords;
        java.lang.String str42 = python3Target31.language;
        java.util.Set<java.lang.String> strSet43 = python3Target31.badWords;
        java.lang.String str45 = python3Target31.getListLabel("\"\\\"\\\\\\\"Python3\\\\\\\"\\\"\"");
        org.antlr.v4.codegen.target.Python3Target python3Target46 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean47 = python3Target46.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup48 = python3Target46.templates;
        java.lang.String[] strArray51 = new java.lang.String[] { "hi!", "hi!" };
        python3Target46.targetCharValueEscape = strArray51;
        org.antlr.v4.codegen.CodeGenerator codeGenerator53 = null;
        java.lang.String str56 = python3Target46.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator53, "", false);
        boolean boolean57 = python3Target46.wantsBaseListener();
        org.antlr.v4.codegen.CodeGenerator codeGenerator58 = python3Target46.gen;
        org.antlr.v4.codegen.target.Python3Target python3Target59 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray60 = python3Target59.targetCharValueEscape;
        java.lang.String str61 = python3Target59.language;
        int int62 = python3Target59.getSerializedATNSegmentLimit();
        org.antlr.v4.codegen.CodeGenerator codeGenerator63 = null;
        python3Target59.gen = codeGenerator63;
        org.antlr.v4.codegen.CodeGenerator codeGenerator65 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target66 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator65);
        java.util.Set<java.lang.String> strSet67 = python3Target66.getBadWords();
        java.lang.String str69 = python3Target66.getAltLabelContextStructName("d");
        org.stringtemplate.v4.STGroup sTGroup70 = python3Target66.getTemplates();
        python3Target59.templates = sTGroup70;
        python3Target46.templates = sTGroup70;
        python3Target31.templates = sTGroup70;
        python3Target0.templates = sTGroup70;
        java.util.Set<java.lang.String> strSet75 = python3Target0.getBadWords();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "4.5.2.1" + "'", str5, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\"\"" + "'", str9, "\"\"");
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(strSet32);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "\"\"\"\"\"\"" + "'", str35, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(strSet38);
        org.junit.Assert.assertNotNull(strSet41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "Python3" + "'", str42, "Python3");
        org.junit.Assert.assertNotNull(strSet43);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "\"\\\"\\\\\\\"Python3\\\\\\\"\\\"\"" + "'", str45, "\"\\\"\\\\\\\"Python3\\\\\\\"\\\"\"");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNull(sTGroup48);
        org.junit.Assert.assertNotNull(strArray51);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "" + "'", str56, "");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNull(codeGenerator58);
        org.junit.Assert.assertNotNull(strArray60);
        org.junit.Assert.assertNull(str61);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 29 + "'", int62 == 29);
        org.junit.Assert.assertNotNull(strSet67);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "DContext" + "'", str69, "DContext");
        org.junit.Assert.assertNotNull(sTGroup70);
        org.junit.Assert.assertNotNull(strSet75);
    }

    @Test
    public void test1299() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1299");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        org.antlr.v4.tool.Grammar grammar3 = null;
        org.stringtemplate.v4.ST sT4 = null;
        python3Target0.genRecognizerHeaderFile(grammar3, sT4, "");
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = python3Target0.getCodeGenerator();
        org.antlr.v4.codegen.target.Python3Target python3Target8 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray9 = python3Target8.targetCharValueEscape;
        org.stringtemplate.v4.STGroup sTGroup10 = python3Target8.templates;
        int int11 = python3Target8.getInlineTestSetWordSize();
        org.antlr.v4.codegen.CodeGenerator codeGenerator12 = python3Target8.gen;
        org.antlr.v4.tool.Grammar grammar13 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target14 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str16 = python3Target14.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.tool.Grammar grammar17 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target18 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean19 = python3Target18.supportsOverloadedMethods();
        java.lang.String str20 = python3Target18.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator21 = null;
        java.lang.String str24 = python3Target18.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator21, "", true);
        java.lang.String str25 = python3Target18.getVersion();
        org.antlr.v4.tool.Grammar grammar26 = null;
        int[] intArray27 = new int[] {};
        java.lang.String[] strArray28 = python3Target18.getTokenTypesAsTargetLabels(grammar26, intArray27);
        java.lang.String[] strArray29 = python3Target14.getTokenTypesAsTargetLabels(grammar17, intArray27);
        java.lang.String[] strArray30 = python3Target8.getTokenTypesAsTargetLabels(grammar13, intArray27);
        org.antlr.v4.codegen.target.Python3Target.python3Keywords = strArray30;
        python3Target0.targetCharValueEscape = strArray30;
        org.antlr.v4.codegen.CodeGenerator codeGenerator33 = null;
        python3Target0.gen = codeGenerator33;
        java.lang.String str35 = python3Target0.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator36 = python3Target0.gen;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str38 = python3Target0.getImplicitTokenLabel("\"\"\"\"\"\"\"\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertNull(codeGenerator7);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertNull(sTGroup10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 64 + "'", int11 == 64);
        org.junit.Assert.assertNull(codeGenerator12);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "\"\"\"\"\"\"" + "'", str16, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "4.5.2.1" + "'", str20, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "\"\"" + "'", str24, "\"\"");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "4.5.2.1" + "'", str25, "4.5.2.1");
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[]");
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNull(codeGenerator36);
    }

    @Test
    public void test1300() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1300");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        python3Target0.language = "4.5.2.1";
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = python3Target0.getCodeGenerator();
        org.antlr.v4.codegen.CodeGenerator codeGenerator4 = python3Target0.gen;
        org.antlr.v4.codegen.CodeGenerator codeGenerator5 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target6 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator5);
        java.lang.String str8 = python3Target6.getTargetStringLiteralFromString("");
        int int9 = python3Target6.getSerializedATNSegmentLimit();
        boolean boolean10 = python3Target6.wantsBaseVisitor();
        org.stringtemplate.v4.STGroup sTGroup11 = python3Target6.loadTemplates();
        python3Target0.templates = sTGroup11;
        java.lang.String str13 = python3Target0.language;
        java.lang.String str15 = python3Target0.getTargetStringLiteralFromString("\"\\0\"");
        org.antlr.v4.tool.Grammar grammar16 = null;
        org.stringtemplate.v4.ST sT17 = null;
        // The following exception was thrown during execution in test generation
        try {
            python3Target0.genListenerFile(grammar16, sT17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(codeGenerator3);
        org.junit.Assert.assertNull(codeGenerator4);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\"\"" + "'", str8, "\"\"");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 29 + "'", int9 == 29);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(sTGroup11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "4.5.2.1" + "'", str13, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "\"\"\\0\"\"" + "'", str15, "\"\"\\0\"\"");
    }

    @Test
    public void test1301() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1301");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python3Target1.getBadWords();
        org.antlr.v4.codegen.target.Python3Target python3Target3 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str5 = python3Target3.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.codegen.target.Python3Target python3Target6 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean7 = python3Target6.supportsOverloadedMethods();
        java.util.Set<java.lang.String> strSet8 = python3Target6.badWords;
        python3Target3.badWords = strSet8;
        python3Target1.badWords = strSet8;
        java.util.Set<java.lang.String> strSet11 = python3Target1.badWords;
        org.antlr.v4.codegen.CodeGenerator codeGenerator12 = python3Target1.getCodeGenerator();
        org.antlr.v4.tool.Grammar grammar13 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target14 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean15 = python3Target14.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup16 = python3Target14.templates;
        org.antlr.v4.tool.Grammar grammar17 = null;
        org.stringtemplate.v4.ST sT18 = null;
        python3Target14.genRecognizerHeaderFile(grammar17, sT18, "");
        python3Target14.language = "Python3";
        java.util.Set<java.lang.String> strSet23 = null;
        python3Target14.badWords = strSet23;
        org.antlr.v4.codegen.CodeGenerator codeGenerator25 = null;
        java.lang.String str28 = python3Target14.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator25, "\"Hi!Context\"", false);
        java.lang.String str30 = python3Target14.getListLabel("Python3");
        java.lang.String str32 = python3Target14.getTargetStringLiteralFromString("\\0");
        org.antlr.v4.tool.Grammar grammar33 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target34 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str36 = python3Target34.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.tool.Grammar grammar37 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target38 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean39 = python3Target38.supportsOverloadedMethods();
        java.lang.String str40 = python3Target38.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator41 = null;
        java.lang.String str44 = python3Target38.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator41, "", true);
        java.lang.String str45 = python3Target38.getVersion();
        org.antlr.v4.tool.Grammar grammar46 = null;
        int[] intArray47 = new int[] {};
        java.lang.String[] strArray48 = python3Target38.getTokenTypesAsTargetLabels(grammar46, intArray47);
        java.lang.String[] strArray49 = python3Target34.getTokenTypesAsTargetLabels(grammar37, intArray47);
        java.lang.String[] strArray50 = python3Target14.getTokenTypesAsTargetLabels(grammar33, intArray47);
        java.lang.String[] strArray51 = python3Target1.getTokenTypesAsTargetLabels(grammar13, intArray47);
        boolean boolean52 = python3Target1.templatesExist();
        java.lang.String[] strArray53 = python3Target1.targetCharValueEscape;
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "\"\"\"\"\"\"" + "'", str5, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertNotNull(strSet11);
        org.junit.Assert.assertNull(codeGenerator12);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(sTGroup16);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "Hi!Context" + "'", str28, "Hi!Context");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "Python3" + "'", str30, "Python3");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "\"\\0\"" + "'", str32, "\"\\0\"");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "\"\"\"\"\"\"" + "'", str36, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "4.5.2.1" + "'", str40, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "\"\"" + "'", str44, "\"\"");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "4.5.2.1" + "'", str45, "4.5.2.1");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[]");
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertNotNull(strArray49);
        org.junit.Assert.assertNotNull(strArray50);
        org.junit.Assert.assertNotNull(strArray51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(strArray53);
    }

    @Test
    public void test1302() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1302");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        python3Target0.language = "";
        org.antlr.v4.codegen.target.Python3Target python3Target3 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean4 = python3Target3.supportsOverloadedMethods();
        java.lang.String str5 = python3Target3.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = null;
        java.lang.String str9 = python3Target3.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator6, "", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = null;
        python3Target3.gen = codeGenerator10;
        java.lang.String[] strArray19 = new java.lang.String[] { "\"\"\"\"", "\\12", "\"\"", "4.5.2.1", "", "\"\"\"\"", "\"\"" };
        java.util.LinkedHashSet<java.lang.String> strSet20 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet20, strArray19);
        python3Target3.badWords = strSet20;
        python3Target0.badWords = strSet20;
        java.lang.String str25 = python3Target0.encodeIntAsCharEscape((int) (byte) 100);
        org.antlr.v4.tool.Grammar grammar26 = null;
        org.stringtemplate.v4.ST sT27 = null;
        python3Target0.genRecognizerHeaderFile(grammar26, sT27, "");
        java.lang.String str30 = python3Target0.language;
        boolean boolean31 = python3Target0.wantsBaseListener();
        // The following exception was thrown during execution in test generation
        try {
            org.stringtemplate.v4.STGroup sTGroup32 = python3Target0.loadTemplates();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "4.5.2.1" + "'", str5, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\"\"" + "'", str9, "\"\"");
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "d" + "'", str25, "d");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
    }

    @Test
    public void test1303() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1303");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        org.antlr.v4.tool.Grammar grammar3 = null;
        org.stringtemplate.v4.ST sT4 = null;
        python3Target0.genRecognizerHeaderFile(grammar3, sT4, "");
        python3Target0.language = "Python3";
        java.util.Set<java.lang.String> strSet9 = null;
        python3Target0.badWords = strSet9;
        org.antlr.v4.codegen.CodeGenerator codeGenerator11 = null;
        java.lang.String str14 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator11, "\"Hi!Context\"", false);
        java.lang.String str16 = python3Target0.getListLabel("Python3");
        java.lang.String str18 = python3Target0.getTargetStringLiteralFromString("\\0");
        org.antlr.v4.tool.Grammar grammar19 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target20 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str22 = python3Target20.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.tool.Grammar grammar23 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target24 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean25 = python3Target24.supportsOverloadedMethods();
        java.lang.String str26 = python3Target24.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator27 = null;
        java.lang.String str30 = python3Target24.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator27, "", true);
        java.lang.String str31 = python3Target24.getVersion();
        org.antlr.v4.tool.Grammar grammar32 = null;
        int[] intArray33 = new int[] {};
        java.lang.String[] strArray34 = python3Target24.getTokenTypesAsTargetLabels(grammar32, intArray33);
        java.lang.String[] strArray35 = python3Target20.getTokenTypesAsTargetLabels(grammar23, intArray33);
        java.lang.String[] strArray36 = python3Target0.getTokenTypesAsTargetLabels(grammar19, intArray33);
        org.stringtemplate.v4.STGroup sTGroup37 = python3Target0.getTemplates();
        python3Target0.language = "\"\"4.5.2.1\"\"";
        org.stringtemplate.v4.STGroup sTGroup40 = python3Target0.getTemplates();
        org.antlr.v4.tool.ast.GrammarAST grammarAST41 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str42 = python3Target0.getLoopCounter(grammarAST41);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Hi!Context" + "'", str14, "Hi!Context");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Python3" + "'", str16, "Python3");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "\"\\0\"" + "'", str18, "\"\\0\"");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "\"\"\"\"\"\"" + "'", str22, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "4.5.2.1" + "'", str26, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "\"\"" + "'", str30, "\"\"");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "4.5.2.1" + "'", str31, "4.5.2.1");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[]");
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertNotNull(sTGroup37);
        org.junit.Assert.assertNotNull(sTGroup40);
    }

    @Test
    public void test1304() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1304");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        java.lang.String str2 = python3Target0.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = python3Target0.getCodeGenerator();
        org.stringtemplate.v4.STGroup sTGroup4 = null;
        python3Target0.templates = sTGroup4;
        org.stringtemplate.v4.STGroup sTGroup6 = python3Target0.templates;
        org.antlr.v4.tool.Grammar grammar7 = null;
        org.stringtemplate.v4.ST sT8 = null;
        python3Target0.genRecognizerHeaderFile(grammar7, sT8, "");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str12 = python3Target0.getListLabel("_\"\\\"\\\"4.5.2.1\\\"\\\"\"Context");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "4.5.2.1" + "'", str2, "4.5.2.1");
        org.junit.Assert.assertNull(codeGenerator3);
        org.junit.Assert.assertNull(sTGroup6);
    }

    @Test
    public void test1305() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1305");
        org.antlr.v4.codegen.target.Python3Target.PythonStringRenderer pythonStringRenderer0 = new org.antlr.v4.codegen.target.Python3Target.PythonStringRenderer();
        java.lang.Object obj1 = null;
        java.util.Locale locale3 = null;
        java.lang.String str4 = pythonStringRenderer0.toString(obj1, "\"12\"", locale3);
        org.antlr.v4.codegen.target.Python3Target python3Target5 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray6 = python3Target5.targetCharValueEscape;
        java.lang.String str7 = python3Target5.getVersion();
        int int8 = python3Target5.getInlineTestSetWordSize();
        java.util.Locale locale10 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str11 = pythonStringRenderer0.toString((java.lang.Object) python3Target5, "_tsetHi!Context", locale10);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: org.antlr.v4.codegen.target.Python3Target cannot be cast to java.lang.String");
        } catch (java.lang.ClassCastException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "\"12\"" + "'", str4, "\"12\"");
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "4.5.2.1" + "'", str7, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 64 + "'", int8 == 64);
    }

    @Test
    public void test1306() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1306");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        python3Target0.language = "";
        org.antlr.v4.codegen.target.Python3Target python3Target3 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean4 = python3Target3.supportsOverloadedMethods();
        java.lang.String str5 = python3Target3.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = null;
        java.lang.String str9 = python3Target3.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator6, "", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = null;
        python3Target3.gen = codeGenerator10;
        java.lang.String[] strArray19 = new java.lang.String[] { "\"\"\"\"", "\\12", "\"\"", "4.5.2.1", "", "\"\"\"\"", "\"\"" };
        java.util.LinkedHashSet<java.lang.String> strSet20 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet20, strArray19);
        python3Target3.badWords = strSet20;
        python3Target0.badWords = strSet20;
        python3Target0.addBadWords();
        org.antlr.v4.tool.ast.GrammarAST grammarAST25 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean26 = python3Target0.visibleGrammarSymbolCausesIssueInGeneratedCode(grammarAST25);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "4.5.2.1" + "'", str5, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\"\"" + "'", str9, "\"\"");
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
    }

    @Test
    public void test1307() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1307");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray1 = python3Target0.targetCharValueEscape;
        python3Target0.addBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target4 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator3);
        java.lang.String str6 = python3Target4.getTargetStringLiteralFromString("");
        int int7 = python3Target4.getSerializedATNSegmentLimit();
        boolean boolean8 = python3Target4.wantsBaseVisitor();
        org.stringtemplate.v4.STGroup sTGroup9 = python3Target4.loadTemplates();
        python3Target0.templates = sTGroup9;
        java.lang.String str12 = python3Target0.getAltLabelContextStructName("\"_tset12\"");
        java.lang.Class<?> wildcardClass13 = python3Target0.getClass();
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\"\"" + "'", str6, "\"\"");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 29 + "'", int7 == 29);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(sTGroup9);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "\"_tset12\"Context" + "'", str12, "\"_tset12\"Context");
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test1308() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1308");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str2 = python3Target0.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = null;
        python3Target0.gen = codeGenerator3;
        org.antlr.v4.codegen.CodeGenerator codeGenerator5 = python3Target0.getCodeGenerator();
        org.antlr.v4.tool.ast.GrammarAST grammarAST6 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str7 = python3Target0.getLoopCounter(grammarAST6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "\"\"\"\"\"\"" + "'", str2, "\"\"\"\"\"\"");
        org.junit.Assert.assertNull(codeGenerator5);
    }

    @Test
    public void test1309() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1309");
        org.antlr.v4.codegen.target.Python3Target.PythonStringRenderer pythonStringRenderer0 = new org.antlr.v4.codegen.target.Python3Target.PythonStringRenderer();
        java.lang.Object obj1 = null;
        java.util.Locale locale3 = null;
        java.lang.String str4 = pythonStringRenderer0.toString(obj1, "\"\"\"\"\"\"", locale3);
        org.antlr.v4.codegen.target.Python3Target python3Target5 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray6 = python3Target5.targetCharValueEscape;
        org.stringtemplate.v4.STGroup sTGroup7 = python3Target5.templates;
        java.util.Locale locale9 = null;
        java.lang.String str10 = pythonStringRenderer0.toString((java.lang.Object) sTGroup7, "\"Hi!Context\"", locale9);
        java.util.Locale locale13 = null;
        java.lang.String str14 = pythonStringRenderer0.toString((java.lang.Object) "\"DContext\"", "", locale13);
        java.lang.Object obj15 = null;
        java.util.Locale locale17 = null;
        java.lang.String str18 = pythonStringRenderer0.toString(obj15, "\"\\\"hi!\\\"\"", locale17);
        java.util.Locale locale21 = null;
        java.lang.String str22 = pythonStringRenderer0.toString((java.lang.Object) "\"\"\"\"\"\"\"\"Context", "\"1\"", locale21);
        org.antlr.v4.codegen.target.Python3Target python3Target23 = new org.antlr.v4.codegen.target.Python3Target();
        python3Target23.language = "";
        org.antlr.v4.codegen.target.Python3Target python3Target26 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean27 = python3Target26.supportsOverloadedMethods();
        java.lang.String str28 = python3Target26.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator29 = null;
        java.lang.String str32 = python3Target26.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator29, "", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator33 = null;
        python3Target26.gen = codeGenerator33;
        java.lang.String[] strArray42 = new java.lang.String[] { "\"\"\"\"", "\\12", "\"\"", "4.5.2.1", "", "\"\"\"\"", "\"\"" };
        java.util.LinkedHashSet<java.lang.String> strSet43 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet43, strArray42);
        python3Target26.badWords = strSet43;
        python3Target23.badWords = strSet43;
        java.lang.String str48 = python3Target23.encodeIntAsCharEscape((int) (byte) 100);
        java.lang.String str49 = python3Target23.getLanguage();
        java.lang.String[] strArray50 = new java.lang.String[] {};
        python3Target23.targetCharValueEscape = strArray50;
        java.lang.String str54 = python3Target23.getTargetStringLiteralFromString("", true);
        java.util.Locale locale56 = null;
        java.lang.String str57 = pythonStringRenderer0.toString((java.lang.Object) str54, "\"\\\"\\\"\\\"\\\\\\\"\\\\\\\"hi!\\\\\\\"\\\\\\\"\\\"\\\"\\\"\"", locale56);
        java.util.Locale locale60 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str61 = pythonStringRenderer0.toString((java.lang.Object) (short) 0, "\"\"4.5.2.1\"\"", locale60);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.lang.Short cannot be cast to java.lang.String");
        } catch (java.lang.ClassCastException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "\"\"\"\"\"\"" + "'", str4, "\"\"\"\"\"\"");
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertNull(sTGroup7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\"Hi!Context\"" + "'", str10, "\"Hi!Context\"");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "\"\\\"hi!\\\"\"" + "'", str18, "\"\\\"hi!\\\"\"");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "\"1\"" + "'", str22, "\"1\"");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "4.5.2.1" + "'", str28, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "\"\"" + "'", str32, "\"\"");
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "d" + "'", str48, "d");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "" + "'", str49, "");
        org.junit.Assert.assertNotNull(strArray50);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "\"\"" + "'", str54, "\"\"");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "\"\\\"\\\"\\\"\\\\\\\"\\\\\\\"hi!\\\\\\\"\\\\\\\"\\\"\\\"\\\"\"" + "'", str57, "\"\\\"\\\"\\\"\\\\\\\"\\\\\\\"hi!\\\\\\\"\\\\\\\"\\\"\\\"\\\"\"");
    }

    @Test
    public void test1310() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1310");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        java.lang.String str2 = python3Target0.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = null;
        java.lang.String str6 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator3, "", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = null;
        python3Target0.gen = codeGenerator7;
        int int9 = python3Target0.getSerializedATNSegmentLimit();
        org.antlr.v4.tool.Grammar grammar10 = null;
        org.stringtemplate.v4.ST sT11 = null;
        python3Target0.genRecognizerHeaderFile(grammar10, sT11, "_tset12");
        org.stringtemplate.v4.STGroup sTGroup14 = python3Target0.templates;
        org.stringtemplate.v4.STGroup sTGroup15 = python3Target0.templates;
        org.antlr.v4.codegen.CodeGenerator codeGenerator16 = python3Target0.getCodeGenerator();
        python3Target0.addBadWords();
        java.lang.String str19 = python3Target0.encodeIntAsCharEscape((int) '4');
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "4.5.2.1" + "'", str2, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\"\"" + "'", str6, "\"\"");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 29 + "'", int9 == 29);
        org.junit.Assert.assertNull(sTGroup14);
        org.junit.Assert.assertNull(sTGroup15);
        org.junit.Assert.assertNull(codeGenerator16);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "\\64" + "'", str19, "\\64");
    }

    @Test
    public void test1311() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1311");
        org.antlr.v4.codegen.target.Python3Target.PythonStringRenderer pythonStringRenderer0 = new org.antlr.v4.codegen.target.Python3Target.PythonStringRenderer();
        java.lang.Object obj1 = null;
        java.util.Locale locale3 = null;
        java.lang.String str4 = pythonStringRenderer0.toString(obj1, "\"\"\"\"\"\"", locale3);
        org.antlr.v4.codegen.target.Python3Target python3Target5 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray6 = python3Target5.targetCharValueEscape;
        org.stringtemplate.v4.STGroup sTGroup7 = python3Target5.templates;
        java.util.Locale locale9 = null;
        java.lang.String str10 = pythonStringRenderer0.toString((java.lang.Object) sTGroup7, "\"Hi!Context\"", locale9);
        java.util.Locale locale13 = null;
        java.lang.String str14 = pythonStringRenderer0.toString((java.lang.Object) "\"DContext\"", "", locale13);
        java.lang.Object obj15 = null;
        java.util.Locale locale17 = null;
        java.lang.String str18 = pythonStringRenderer0.toString(obj15, "\"\\\"hi!\\\"\"", locale17);
        java.util.Locale locale21 = null;
        java.lang.String str22 = pythonStringRenderer0.toString((java.lang.Object) "\"\"\"\"\"\"\"\"Context", "\"1\"", locale21);
        org.antlr.v4.codegen.target.Python3Target python3Target23 = new org.antlr.v4.codegen.target.Python3Target();
        python3Target23.language = "";
        org.antlr.v4.codegen.target.Python3Target python3Target26 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean27 = python3Target26.supportsOverloadedMethods();
        java.lang.String str28 = python3Target26.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator29 = null;
        java.lang.String str32 = python3Target26.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator29, "", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator33 = null;
        python3Target26.gen = codeGenerator33;
        java.lang.String[] strArray42 = new java.lang.String[] { "\"\"\"\"", "\\12", "\"\"", "4.5.2.1", "", "\"\"\"\"", "\"\"" };
        java.util.LinkedHashSet<java.lang.String> strSet43 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet43, strArray42);
        python3Target26.badWords = strSet43;
        python3Target23.badWords = strSet43;
        java.lang.String str48 = python3Target23.encodeIntAsCharEscape((int) (byte) 100);
        java.lang.String str49 = python3Target23.getLanguage();
        java.lang.String[] strArray50 = new java.lang.String[] {};
        python3Target23.targetCharValueEscape = strArray50;
        java.lang.String str54 = python3Target23.getTargetStringLiteralFromString("", true);
        java.util.Locale locale56 = null;
        java.lang.String str57 = pythonStringRenderer0.toString((java.lang.Object) str54, "\"\\\"\\\"\\\"\\\\\\\"\\\\\\\"hi!\\\\\\\"\\\\\\\"\\\"\\\"\\\"\"", locale56);
        org.antlr.v4.codegen.target.Python3Target python3Target58 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean59 = python3Target58.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup60 = python3Target58.templates;
        java.lang.String[] strArray63 = new java.lang.String[] { "hi!", "hi!" };
        python3Target58.targetCharValueEscape = strArray63;
        java.lang.String str66 = python3Target58.getTargetStringLiteralFromString("\"\"");
        java.lang.String str67 = python3Target58.getLanguage();
        org.antlr.v4.codegen.target.Python3Target python3Target68 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray69 = python3Target68.targetCharValueEscape;
        org.stringtemplate.v4.STGroup sTGroup70 = python3Target68.templates;
        int int71 = python3Target68.getInlineTestSetWordSize();
        org.antlr.v4.codegen.CodeGenerator codeGenerator72 = python3Target68.gen;
        org.antlr.v4.tool.Grammar grammar73 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target74 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str76 = python3Target74.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.tool.Grammar grammar77 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target78 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean79 = python3Target78.supportsOverloadedMethods();
        java.lang.String str80 = python3Target78.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator81 = null;
        java.lang.String str84 = python3Target78.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator81, "", true);
        java.lang.String str85 = python3Target78.getVersion();
        org.antlr.v4.tool.Grammar grammar86 = null;
        int[] intArray87 = new int[] {};
        java.lang.String[] strArray88 = python3Target78.getTokenTypesAsTargetLabels(grammar86, intArray87);
        java.lang.String[] strArray89 = python3Target74.getTokenTypesAsTargetLabels(grammar77, intArray87);
        java.lang.String[] strArray90 = python3Target68.getTokenTypesAsTargetLabels(grammar73, intArray87);
        python3Target58.targetCharValueEscape = strArray90;
        org.stringtemplate.v4.STGroup sTGroup92 = python3Target58.templates;
        org.antlr.v4.codegen.CodeGenerator codeGenerator93 = python3Target58.gen;
        java.util.Locale locale95 = null;
        java.lang.String str96 = pythonStringRenderer0.toString((java.lang.Object) codeGenerator93, "_tset\"\\\\0\"", locale95);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "\"\"\"\"\"\"" + "'", str4, "\"\"\"\"\"\"");
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertNull(sTGroup7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\"Hi!Context\"" + "'", str10, "\"Hi!Context\"");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "\"\\\"hi!\\\"\"" + "'", str18, "\"\\\"hi!\\\"\"");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "\"1\"" + "'", str22, "\"1\"");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "4.5.2.1" + "'", str28, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "\"\"" + "'", str32, "\"\"");
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "d" + "'", str48, "d");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "" + "'", str49, "");
        org.junit.Assert.assertNotNull(strArray50);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "\"\"" + "'", str54, "\"\"");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "\"\\\"\\\"\\\"\\\\\\\"\\\\\\\"hi!\\\\\\\"\\\\\\\"\\\"\\\"\\\"\"" + "'", str57, "\"\\\"\\\"\\\"\\\\\\\"\\\\\\\"hi!\\\\\\\"\\\\\\\"\\\"\\\"\\\"\"");
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNull(sTGroup60);
        org.junit.Assert.assertNotNull(strArray63);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "\"\"\"\"" + "'", str66, "\"\"\"\"");
        org.junit.Assert.assertNull(str67);
        org.junit.Assert.assertNotNull(strArray69);
        org.junit.Assert.assertNull(sTGroup70);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 64 + "'", int71 == 64);
        org.junit.Assert.assertNull(codeGenerator72);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "\"\"\"\"\"\"" + "'", str76, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "4.5.2.1" + "'", str80, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "\"\"" + "'", str84, "\"\"");
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "4.5.2.1" + "'", str85, "4.5.2.1");
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[]");
        org.junit.Assert.assertNotNull(strArray88);
        org.junit.Assert.assertNotNull(strArray89);
        org.junit.Assert.assertNotNull(strArray90);
        org.junit.Assert.assertNull(sTGroup92);
        org.junit.Assert.assertNull(codeGenerator93);
        org.junit.Assert.assertEquals("'" + str96 + "' != '" + "_tset\"\\\\0\"" + "'", str96, "_tset\"\\\\0\"");
    }

    @Test
    public void test1312() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1312");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python3Target1.getBadWords();
        java.lang.String str4 = python3Target1.getAltLabelContextStructName("d");
        org.stringtemplate.v4.STGroup sTGroup5 = python3Target1.getTemplates();
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = null;
        java.lang.String str9 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator6, "", true);
        java.lang.String str11 = python3Target1.getImplicitSetLabel("\"\\0\"");
        java.lang.String str13 = python3Target1.getListLabel("\"\"\"hi!\"\"\"");
        org.antlr.v4.tool.Grammar grammar14 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str16 = python3Target1.getTokenTypeAsTargetLabel(grammar14, 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "DContext" + "'", str4, "DContext");
        org.junit.Assert.assertNotNull(sTGroup5);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\"\"" + "'", str9, "\"\"");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "_tset\"\\0\"" + "'", str11, "_tset\"\\0\"");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "\"\"\"hi!\"\"\"" + "'", str13, "\"\"\"hi!\"\"\"");
    }

    @Test
    public void test1313() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1313");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.antlr.v4.tool.Grammar grammar2 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target4 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator3);
        java.util.Set<java.lang.String> strSet5 = python3Target4.getBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = null;
        python3Target4.gen = codeGenerator6;
        java.lang.String str9 = python3Target4.getAltLabelContextStructName("hi!");
        java.lang.String str12 = python3Target4.getTargetStringLiteralFromString("\"hi!\"", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator13 = null;
        python3Target4.gen = codeGenerator13;
        org.antlr.v4.tool.Grammar grammar15 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target16 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray17 = python3Target16.targetCharValueEscape;
        org.stringtemplate.v4.STGroup sTGroup18 = python3Target16.templates;
        int int19 = python3Target16.getInlineTestSetWordSize();
        org.antlr.v4.codegen.CodeGenerator codeGenerator20 = python3Target16.gen;
        org.antlr.v4.tool.Grammar grammar21 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target22 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str24 = python3Target22.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.tool.Grammar grammar25 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target26 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean27 = python3Target26.supportsOverloadedMethods();
        java.lang.String str28 = python3Target26.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator29 = null;
        java.lang.String str32 = python3Target26.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator29, "", true);
        java.lang.String str33 = python3Target26.getVersion();
        org.antlr.v4.tool.Grammar grammar34 = null;
        int[] intArray35 = new int[] {};
        java.lang.String[] strArray36 = python3Target26.getTokenTypesAsTargetLabels(grammar34, intArray35);
        java.lang.String[] strArray37 = python3Target22.getTokenTypesAsTargetLabels(grammar25, intArray35);
        java.lang.String[] strArray38 = python3Target16.getTokenTypesAsTargetLabels(grammar21, intArray35);
        java.lang.String[] strArray39 = python3Target4.getTokenTypesAsTargetLabels(grammar15, intArray35);
        java.lang.String[] strArray40 = python3Target0.getTokenTypesAsTargetLabels(grammar2, intArray35);
        java.lang.String str42 = python3Target0.getTargetStringLiteralFromString("\"\"4.5.2.1\"\"");
        java.lang.String str45 = python3Target0.getTargetStringLiteralFromString("\"12\"", true);
        int int46 = python3Target0.getSerializedATNSegmentLimit();
        // The following exception was thrown during execution in test generation
        try {
            org.stringtemplate.v4.STGroup sTGroup47 = python3Target0.loadTemplates();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Hi!Context" + "'", str9, "Hi!Context");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "\"\\\"hi!\\\"\"" + "'", str12, "\"\\\"hi!\\\"\"");
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertNull(sTGroup18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 64 + "'", int19 == 64);
        org.junit.Assert.assertNull(codeGenerator20);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "\"\"\"\"\"\"" + "'", str24, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "4.5.2.1" + "'", str28, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "\"\"" + "'", str32, "\"\"");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "4.5.2.1" + "'", str33, "4.5.2.1");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[]");
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "\"\"\"4.5.2.1\"\"\"" + "'", str42, "\"\"\"4.5.2.1\"\"\"");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "\"\"12\"\"" + "'", str45, "\"\"12\"\"");
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 29 + "'", int46 == 29);
    }

    @Test
    public void test1314() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1314");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray1 = python3Target0.targetCharValueEscape;
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = null;
        java.lang.String str6 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator3, "\"\\12\"", false);
        int int7 = python3Target0.getSerializedATNSegmentLimit();
        boolean boolean8 = python3Target0.templatesExist();
        java.lang.String str9 = python3Target0.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = null;
        python3Target0.gen = codeGenerator10;
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "12" + "'", str6, "12");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 29 + "'", int7 == 29);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(str9);
    }

    @Test
    public void test1315() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1315");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python3Target1.getBadWords();
        java.lang.String str4 = python3Target1.getAltLabelContextStructName("d");
        org.stringtemplate.v4.STGroup sTGroup5 = python3Target1.getTemplates();
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = null;
        java.lang.String str9 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator6, "", true);
        org.antlr.v4.tool.Grammar grammar10 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target11 = new org.antlr.v4.codegen.target.Python3Target();
        python3Target11.language = "";
        org.antlr.v4.codegen.target.Python3Target python3Target14 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean15 = python3Target14.supportsOverloadedMethods();
        java.lang.String str16 = python3Target14.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator17 = null;
        java.lang.String str20 = python3Target14.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator17, "", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator21 = null;
        python3Target14.gen = codeGenerator21;
        java.lang.String[] strArray30 = new java.lang.String[] { "\"\"\"\"", "\\12", "\"\"", "4.5.2.1", "", "\"\"\"\"", "\"\"" };
        java.util.LinkedHashSet<java.lang.String> strSet31 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet31, strArray30);
        python3Target14.badWords = strSet31;
        python3Target11.badWords = strSet31;
        java.lang.String str36 = python3Target11.encodeIntAsCharEscape((int) (byte) 100);
        java.lang.String str37 = python3Target11.getLanguage();
        java.lang.String[] strArray38 = new java.lang.String[] {};
        python3Target11.targetCharValueEscape = strArray38;
        org.antlr.v4.tool.Grammar grammar40 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target41 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean42 = python3Target41.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup43 = python3Target41.templates;
        java.lang.String[] strArray46 = new java.lang.String[] { "hi!", "hi!" };
        python3Target41.targetCharValueEscape = strArray46;
        org.antlr.v4.codegen.CodeGenerator codeGenerator48 = null;
        java.lang.String str51 = python3Target41.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator48, "", false);
        java.util.Set<java.lang.String> strSet52 = python3Target41.badWords;
        java.lang.String str54 = python3Target41.getTargetStringLiteralFromString("12");
        int int55 = python3Target41.getSerializedATNSegmentLimit();
        boolean boolean56 = python3Target41.supportsOverloadedMethods();
        org.antlr.v4.tool.Grammar grammar57 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target58 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean59 = python3Target58.supportsOverloadedMethods();
        java.util.Set<java.lang.String> strSet60 = python3Target58.badWords;
        boolean boolean61 = python3Target58.templatesExist();
        java.lang.String str62 = python3Target58.getLanguage();
        org.antlr.v4.tool.Grammar grammar63 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target64 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str66 = python3Target64.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator67 = null;
        python3Target64.gen = codeGenerator67;
        org.antlr.v4.tool.Grammar grammar69 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target70 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str72 = python3Target70.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.tool.Grammar grammar73 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target74 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean75 = python3Target74.supportsOverloadedMethods();
        java.lang.String str76 = python3Target74.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator77 = null;
        java.lang.String str80 = python3Target74.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator77, "", true);
        java.lang.String str81 = python3Target74.getVersion();
        org.antlr.v4.tool.Grammar grammar82 = null;
        int[] intArray83 = new int[] {};
        java.lang.String[] strArray84 = python3Target74.getTokenTypesAsTargetLabels(grammar82, intArray83);
        java.lang.String[] strArray85 = python3Target70.getTokenTypesAsTargetLabels(grammar73, intArray83);
        java.lang.String[] strArray86 = python3Target64.getTokenTypesAsTargetLabels(grammar69, intArray83);
        java.lang.String[] strArray87 = python3Target58.getTokenTypesAsTargetLabels(grammar63, intArray83);
        java.lang.String[] strArray88 = python3Target41.getTokenTypesAsTargetLabels(grammar57, intArray83);
        java.lang.String[] strArray89 = python3Target11.getTokenTypesAsTargetLabels(grammar40, intArray83);
        java.lang.String[] strArray90 = python3Target1.getTokenTypesAsTargetLabels(grammar10, intArray83);
        java.lang.String str91 = python3Target1.getVersion();
        java.lang.String str93 = python3Target1.getListLabel("\"\"DContext\"\"");
        org.antlr.v4.tool.ast.GrammarAST grammarAST94 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str95 = python3Target1.getLoopCounter(grammarAST94);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "DContext" + "'", str4, "DContext");
        org.junit.Assert.assertNotNull(sTGroup5);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\"\"" + "'", str9, "\"\"");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "4.5.2.1" + "'", str16, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "\"\"" + "'", str20, "\"\"");
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "d" + "'", str36, "d");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "" + "'", str37, "");
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNull(sTGroup43);
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "" + "'", str51, "");
        org.junit.Assert.assertNotNull(strSet52);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "\"12\"" + "'", str54, "\"12\"");
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 29 + "'", int55 == 29);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(strSet60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNull(str62);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "\"\"\"\"\"\"" + "'", str66, "\"\"\"\"\"\"");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "\"\"\"\"\"\"" + "'", str72, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "4.5.2.1" + "'", str76, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "\"\"" + "'", str80, "\"\"");
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "4.5.2.1" + "'", str81, "4.5.2.1");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[]");
        org.junit.Assert.assertNotNull(strArray84);
        org.junit.Assert.assertNotNull(strArray85);
        org.junit.Assert.assertNotNull(strArray86);
        org.junit.Assert.assertNotNull(strArray87);
        org.junit.Assert.assertNotNull(strArray88);
        org.junit.Assert.assertNotNull(strArray89);
        org.junit.Assert.assertNotNull(strArray90);
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "4.5.2.1" + "'", str91, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str93 + "' != '" + "\"\"DContext\"\"" + "'", str93, "\"\"DContext\"\"");
    }

    @Test
    public void test1316() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1316");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.lang.String str3 = python3Target1.getTargetStringLiteralFromString("");
        int int4 = python3Target1.getSerializedATNSegmentLimit();
        boolean boolean5 = python3Target1.wantsBaseVisitor();
        org.stringtemplate.v4.STGroup sTGroup6 = python3Target1.loadTemplates();
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = python3Target1.gen;
        boolean boolean8 = python3Target1.wantsBaseListener();
        python3Target1.language = "\\35";
        java.lang.String str12 = python3Target1.encodeIntAsCharEscape(29);
        int int13 = python3Target1.getSerializedATNSegmentLimit();
        org.antlr.v4.codegen.CodeGenerator codeGenerator14 = null;
        java.lang.String str17 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator14, "\"\"\"\"\"\"Context", true);
        boolean boolean18 = python3Target1.templatesExist();
        boolean boolean19 = python3Target1.supportsOverloadedMethods();
        int int20 = python3Target1.getSerializedATNSegmentLimit();
        org.antlr.v4.tool.ast.GrammarAST grammarAST21 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str22 = python3Target1.getLoopLabel(grammarAST21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "\"\"" + "'", str3, "\"\"");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 29 + "'", int4 == 29);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(sTGroup6);
        org.junit.Assert.assertNull(codeGenerator7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "\\35" + "'", str12, "\\35");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 29 + "'", int13 == 29);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "\"\\\"\\\"\\\"\\\"\\\"Contex\"" + "'", str17, "\"\\\"\\\"\\\"\\\"\\\"Contex\"");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 29 + "'", int20 == 29);
    }

    @Test
    public void test1317() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1317");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        python3Target0.language = "4.5.2.1";
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = python3Target0.getCodeGenerator();
        org.antlr.v4.codegen.CodeGenerator codeGenerator4 = python3Target0.gen;
        org.antlr.v4.codegen.target.Python3Target python3Target5 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean6 = python3Target5.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup7 = python3Target5.templates;
        org.antlr.v4.tool.Grammar grammar8 = null;
        org.stringtemplate.v4.ST sT9 = null;
        python3Target5.genRecognizerHeaderFile(grammar8, sT9, "");
        boolean boolean12 = python3Target5.supportsOverloadedMethods();
        python3Target5.language = "\"\\12\"";
        org.antlr.v4.tool.Grammar grammar15 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator16 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target17 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator16);
        java.util.Set<java.lang.String> strSet18 = python3Target17.getBadWords();
        java.lang.String str20 = python3Target17.getAltLabelContextStructName("d");
        java.lang.String str22 = python3Target17.getTargetStringLiteralFromString("\"\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator23 = python3Target17.getCodeGenerator();
        org.antlr.v4.tool.Grammar grammar24 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator25 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target26 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator25);
        java.util.Set<java.lang.String> strSet27 = python3Target26.getBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator28 = null;
        python3Target26.gen = codeGenerator28;
        java.lang.String str31 = python3Target26.getAltLabelContextStructName("hi!");
        java.lang.String str34 = python3Target26.getTargetStringLiteralFromString("\"hi!\"", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator35 = null;
        python3Target26.gen = codeGenerator35;
        org.antlr.v4.tool.Grammar grammar37 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target38 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray39 = python3Target38.targetCharValueEscape;
        org.stringtemplate.v4.STGroup sTGroup40 = python3Target38.templates;
        int int41 = python3Target38.getInlineTestSetWordSize();
        org.antlr.v4.codegen.CodeGenerator codeGenerator42 = python3Target38.gen;
        org.antlr.v4.tool.Grammar grammar43 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target44 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str46 = python3Target44.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.tool.Grammar grammar47 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target48 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean49 = python3Target48.supportsOverloadedMethods();
        java.lang.String str50 = python3Target48.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator51 = null;
        java.lang.String str54 = python3Target48.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator51, "", true);
        java.lang.String str55 = python3Target48.getVersion();
        org.antlr.v4.tool.Grammar grammar56 = null;
        int[] intArray57 = new int[] {};
        java.lang.String[] strArray58 = python3Target48.getTokenTypesAsTargetLabels(grammar56, intArray57);
        java.lang.String[] strArray59 = python3Target44.getTokenTypesAsTargetLabels(grammar47, intArray57);
        java.lang.String[] strArray60 = python3Target38.getTokenTypesAsTargetLabels(grammar43, intArray57);
        java.lang.String[] strArray61 = python3Target26.getTokenTypesAsTargetLabels(grammar37, intArray57);
        java.lang.String[] strArray62 = python3Target17.getTokenTypesAsTargetLabels(grammar24, intArray57);
        java.lang.String[] strArray63 = python3Target5.getTokenTypesAsTargetLabels(grammar15, intArray57);
        python3Target0.targetCharValueEscape = strArray63;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str66 = python3Target0.getImplicitTokenLabel("\"\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(codeGenerator3);
        org.junit.Assert.assertNull(codeGenerator4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(sTGroup7);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(strSet18);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "DContext" + "'", str20, "DContext");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "\"\\\"\\\"\"" + "'", str22, "\"\\\"\\\"\"");
        org.junit.Assert.assertNull(codeGenerator23);
        org.junit.Assert.assertNotNull(strSet27);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "Hi!Context" + "'", str31, "Hi!Context");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "\"\\\"hi!\\\"\"" + "'", str34, "\"\\\"hi!\\\"\"");
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertNull(sTGroup40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 64 + "'", int41 == 64);
        org.junit.Assert.assertNull(codeGenerator42);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "\"\"\"\"\"\"" + "'", str46, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "4.5.2.1" + "'", str50, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "\"\"" + "'", str54, "\"\"");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "4.5.2.1" + "'", str55, "4.5.2.1");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[]");
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertNotNull(strArray59);
        org.junit.Assert.assertNotNull(strArray60);
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertNotNull(strArray62);
        org.junit.Assert.assertNotNull(strArray63);
    }

    @Test
    public void test1318() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1318");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python3Target1.getBadWords();
        java.lang.String str4 = python3Target1.getAltLabelContextStructName("d");
        org.stringtemplate.v4.STGroup sTGroup5 = python3Target1.getTemplates();
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = null;
        java.lang.String str9 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator6, "", true);
        java.lang.String str11 = python3Target1.getImplicitSetLabel("\"\\0\"");
        java.lang.String str13 = python3Target1.getListLabel("\"Python3\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator14 = python3Target1.gen;
        org.antlr.v4.codegen.CodeGenerator codeGenerator15 = null;
        python3Target1.gen = codeGenerator15;
        python3Target1.language = "\"\"\"DContext\"\"Context\"";
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "DContext" + "'", str4, "DContext");
        org.junit.Assert.assertNotNull(sTGroup5);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\"\"" + "'", str9, "\"\"");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "_tset\"\\0\"" + "'", str11, "_tset\"\\0\"");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "\"Python3\"" + "'", str13, "\"Python3\"");
        org.junit.Assert.assertNull(codeGenerator14);
    }

    @Test
    public void test1319() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1319");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        org.antlr.v4.tool.Grammar grammar3 = null;
        org.stringtemplate.v4.ST sT4 = null;
        python3Target0.genRecognizerHeaderFile(grammar3, sT4, "\"DContext\"");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str8 = python3Target0.getAltLabelContextStructName("\"\\1\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
    }

    @Test
    public void test1320() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1320");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!", "hi!" };
        python3Target0.targetCharValueEscape = strArray5;
        java.lang.String[] strArray8 = new java.lang.String[] { "hi!" };
        org.antlr.v4.codegen.target.Python3Target.python3Keywords = strArray8;
        python3Target0.targetCharValueEscape = strArray8;
        org.antlr.v4.tool.Grammar grammar11 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target12 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str14 = python3Target12.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator15 = null;
        python3Target12.gen = codeGenerator15;
        org.antlr.v4.tool.Grammar grammar17 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target18 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str20 = python3Target18.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.tool.Grammar grammar21 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target22 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean23 = python3Target22.supportsOverloadedMethods();
        java.lang.String str24 = python3Target22.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator25 = null;
        java.lang.String str28 = python3Target22.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator25, "", true);
        java.lang.String str29 = python3Target22.getVersion();
        org.antlr.v4.tool.Grammar grammar30 = null;
        int[] intArray31 = new int[] {};
        java.lang.String[] strArray32 = python3Target22.getTokenTypesAsTargetLabels(grammar30, intArray31);
        java.lang.String[] strArray33 = python3Target18.getTokenTypesAsTargetLabels(grammar21, intArray31);
        java.lang.String[] strArray34 = python3Target12.getTokenTypesAsTargetLabels(grammar17, intArray31);
        java.lang.String[] strArray35 = python3Target0.getTokenTypesAsTargetLabels(grammar11, intArray31);
        org.antlr.v4.tool.Grammar grammar36 = null;
        org.stringtemplate.v4.ST sT37 = null;
        python3Target0.genRecognizerHeaderFile(grammar36, sT37, "");
        org.antlr.v4.codegen.CodeGenerator codeGenerator40 = null;
        python3Target0.gen = codeGenerator40;
        org.stringtemplate.v4.STGroup sTGroup42 = python3Target0.templates;
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "\"\"\"\"\"\"" + "'", str14, "\"\"\"\"\"\"");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "\"\"\"\"\"\"" + "'", str20, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "4.5.2.1" + "'", str24, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "\"\"" + "'", str28, "\"\"");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "4.5.2.1" + "'", str29, "4.5.2.1");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[]");
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertNull(sTGroup42);
    }

    @Test
    public void test1321() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1321");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.lang.String str2 = python3Target1.getVersion();
        int int3 = python3Target1.getSerializedATNSegmentLimit();
        int int4 = python3Target1.getSerializedATNSegmentLimit();
        python3Target1.addBadWords();
        boolean boolean6 = python3Target1.templatesExist();
        org.antlr.v4.tool.Grammar grammar7 = null;
        org.stringtemplate.v4.ST sT8 = null;
        // The following exception was thrown during execution in test generation
        try {
            python3Target1.genFile(grammar7, sT8, "\\\"hi!\\\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "4.5.2.1" + "'", str2, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 29 + "'", int3 == 29);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 29 + "'", int4 == 29);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
    }

    @Test
    public void test1322() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1322");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!", "hi!" };
        python3Target0.targetCharValueEscape = strArray5;
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = null;
        java.lang.String str10 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator7, "", false);
        boolean boolean11 = python3Target0.wantsBaseListener();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str13 = python3Target0.getListLabel("\"\\\"\\\\0\\\"\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test1323() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1323");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.lang.String str3 = python3Target1.getTargetStringLiteralFromString("");
        int int4 = python3Target1.getSerializedATNSegmentLimit();
        java.lang.String str5 = python3Target1.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup6 = python3Target1.loadTemplates();
        java.lang.String str7 = python3Target1.getVersion();
        python3Target1.addBadWords();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "\"\"" + "'", str3, "\"\"");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 29 + "'", int4 == 29);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Python3" + "'", str5, "Python3");
        org.junit.Assert.assertNotNull(sTGroup6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "4.5.2.1" + "'", str7, "4.5.2.1");
    }

    @Test
    public void test1324() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1324");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!", "hi!" };
        python3Target0.targetCharValueEscape = strArray5;
        java.lang.String[] strArray8 = new java.lang.String[] { "hi!" };
        org.antlr.v4.codegen.target.Python3Target.python3Keywords = strArray8;
        python3Target0.targetCharValueEscape = strArray8;
        java.util.Set<java.lang.String> strSet11 = python3Target0.getBadWords();
        int int12 = python3Target0.getInlineTestSetWordSize();
        boolean boolean13 = python3Target0.wantsBaseListener();
        org.antlr.v4.tool.Grammar grammar14 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target15 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray16 = python3Target15.targetCharValueEscape;
        org.stringtemplate.v4.STGroup sTGroup17 = python3Target15.templates;
        int int18 = python3Target15.getInlineTestSetWordSize();
        org.antlr.v4.codegen.CodeGenerator codeGenerator19 = python3Target15.gen;
        org.antlr.v4.tool.Grammar grammar20 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target21 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str23 = python3Target21.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.tool.Grammar grammar24 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target25 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean26 = python3Target25.supportsOverloadedMethods();
        java.lang.String str27 = python3Target25.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator28 = null;
        java.lang.String str31 = python3Target25.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator28, "", true);
        java.lang.String str32 = python3Target25.getVersion();
        org.antlr.v4.tool.Grammar grammar33 = null;
        int[] intArray34 = new int[] {};
        java.lang.String[] strArray35 = python3Target25.getTokenTypesAsTargetLabels(grammar33, intArray34);
        java.lang.String[] strArray36 = python3Target21.getTokenTypesAsTargetLabels(grammar24, intArray34);
        java.lang.String[] strArray37 = python3Target15.getTokenTypesAsTargetLabels(grammar20, intArray34);
        java.lang.String[] strArray38 = python3Target0.getTokenTypesAsTargetLabels(grammar14, intArray34);
        boolean boolean39 = python3Target0.templatesExist();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(strSet11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 64 + "'", int12 == 64);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertNull(sTGroup17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 64 + "'", int18 == 64);
        org.junit.Assert.assertNull(codeGenerator19);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "\"\"\"\"\"\"" + "'", str23, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "4.5.2.1" + "'", str27, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "\"\"" + "'", str31, "\"\"");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "4.5.2.1" + "'", str32, "4.5.2.1");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[]");
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
    }

    @Test
    public void test1325() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1325");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        java.lang.String str2 = python3Target0.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = python3Target0.getCodeGenerator();
        org.stringtemplate.v4.STGroup sTGroup4 = null;
        python3Target0.templates = sTGroup4;
        org.stringtemplate.v4.STGroup sTGroup6 = python3Target0.templates;
        java.lang.String[] strArray7 = python3Target0.targetCharValueEscape;
        java.lang.String str10 = python3Target0.getTargetStringLiteralFromString("\"12\"", false);
        org.antlr.v4.codegen.target.Python3Target python3Target11 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean12 = python3Target11.supportsOverloadedMethods();
        java.lang.String str13 = python3Target11.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator14 = python3Target11.getCodeGenerator();
        org.stringtemplate.v4.STGroup sTGroup15 = null;
        python3Target11.templates = sTGroup15;
        org.stringtemplate.v4.STGroup sTGroup17 = python3Target11.templates;
        java.lang.String[] strArray18 = python3Target11.targetCharValueEscape;
        java.util.Set<java.lang.String> strSet19 = python3Target11.badWords;
        java.util.Set<java.lang.String> strSet20 = python3Target11.getBadWords();
        python3Target0.badWords = strSet20;
        java.lang.Class<?> wildcardClass22 = strSet20.getClass();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "4.5.2.1" + "'", str2, "4.5.2.1");
        org.junit.Assert.assertNull(codeGenerator3);
        org.junit.Assert.assertNull(sTGroup6);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\"12\"" + "'", str10, "\"12\"");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "4.5.2.1" + "'", str13, "4.5.2.1");
        org.junit.Assert.assertNull(codeGenerator14);
        org.junit.Assert.assertNull(sTGroup17);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertNotNull(strSet19);
        org.junit.Assert.assertNotNull(strSet20);
        org.junit.Assert.assertNotNull(wildcardClass22);
    }

    @Test
    public void test1326() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1326");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.lang.String str2 = python3Target1.getLanguage();
        java.lang.String str4 = python3Target1.getImplicitSetLabel("Python3");
        org.antlr.v4.codegen.CodeGenerator codeGenerator5 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target6 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator5);
        java.util.Set<java.lang.String> strSet7 = python3Target6.getBadWords();
        python3Target1.badWords = strSet7;
        java.lang.String str10 = python3Target1.getListLabel("\"hi!\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator11 = null;
        java.lang.String str14 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator11, "", false);
        org.antlr.v4.tool.Grammar grammar15 = null;
        org.stringtemplate.v4.ST sT16 = null;
        // The following exception was thrown during execution in test generation
        try {
            python3Target1.genListenerFile(grammar15, sT16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "Python3" + "'", str2, "Python3");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "_tsetPython3" + "'", str4, "_tsetPython3");
        org.junit.Assert.assertNotNull(strSet7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\"hi!\"" + "'", str10, "\"hi!\"");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
    }

    @Test
    public void test1327() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1327");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray1 = python3Target0.targetCharValueEscape;
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = null;
        java.lang.String str6 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator3, "\"\\12\"", false);
        int int7 = python3Target0.getSerializedATNSegmentLimit();
        boolean boolean8 = python3Target0.templatesExist();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str10 = python3Target0.getElementName("\"\"Python3\"\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "12" + "'", str6, "12");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 29 + "'", int7 == 29);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test1328() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1328");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.lang.String str3 = python3Target1.getTargetStringLiteralFromString("");
        int int4 = python3Target1.getSerializedATNSegmentLimit();
        boolean boolean5 = python3Target1.wantsBaseVisitor();
        java.lang.String str7 = python3Target1.getImplicitRuleLabel("\"\"\\\"\\\"hi!\\\"\\\"\"\"");
        org.antlr.v4.tool.ast.GrammarAST grammarAST8 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean9 = python3Target1.visibleGrammarSymbolCausesIssueInGeneratedCode(grammarAST8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "\"\"" + "'", str3, "\"\"");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 29 + "'", int4 == 29);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "_\"\"\\\"\\\"hi!\\\"\\\"\"\"" + "'", str7, "_\"\"\\\"\\\"hi!\\\"\\\"\"\"");
    }

    @Test
    public void test1329() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1329");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray1 = python3Target0.targetCharValueEscape;
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = null;
        java.lang.String str6 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator3, "\"\\12\"", false);
        int int7 = python3Target0.getInlineTestSetWordSize();
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = python3Target0.getCodeGenerator();
        org.antlr.v4.tool.Grammar grammar9 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target11 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator10);
        java.lang.String str12 = python3Target11.getVersion();
        int int13 = python3Target11.getSerializedATNSegmentLimit();
        java.lang.String str14 = python3Target11.getVersion();
        boolean boolean15 = python3Target11.wantsBaseListener();
        python3Target11.addBadWords();
        org.antlr.v4.tool.Grammar grammar17 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator18 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target19 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator18);
        java.util.Set<java.lang.String> strSet20 = python3Target19.getBadWords();
        org.antlr.v4.codegen.target.Python3Target python3Target21 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str23 = python3Target21.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.codegen.target.Python3Target python3Target24 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean25 = python3Target24.supportsOverloadedMethods();
        java.util.Set<java.lang.String> strSet26 = python3Target24.badWords;
        python3Target21.badWords = strSet26;
        python3Target19.badWords = strSet26;
        java.util.Set<java.lang.String> strSet29 = python3Target19.badWords;
        org.antlr.v4.codegen.CodeGenerator codeGenerator30 = python3Target19.getCodeGenerator();
        org.antlr.v4.tool.Grammar grammar31 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target32 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean33 = python3Target32.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup34 = python3Target32.templates;
        org.antlr.v4.tool.Grammar grammar35 = null;
        org.stringtemplate.v4.ST sT36 = null;
        python3Target32.genRecognizerHeaderFile(grammar35, sT36, "");
        python3Target32.language = "Python3";
        java.util.Set<java.lang.String> strSet41 = null;
        python3Target32.badWords = strSet41;
        org.antlr.v4.codegen.CodeGenerator codeGenerator43 = null;
        java.lang.String str46 = python3Target32.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator43, "\"Hi!Context\"", false);
        java.lang.String str48 = python3Target32.getListLabel("Python3");
        java.lang.String str50 = python3Target32.getTargetStringLiteralFromString("\\0");
        org.antlr.v4.tool.Grammar grammar51 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target52 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str54 = python3Target52.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.tool.Grammar grammar55 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target56 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean57 = python3Target56.supportsOverloadedMethods();
        java.lang.String str58 = python3Target56.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator59 = null;
        java.lang.String str62 = python3Target56.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator59, "", true);
        java.lang.String str63 = python3Target56.getVersion();
        org.antlr.v4.tool.Grammar grammar64 = null;
        int[] intArray65 = new int[] {};
        java.lang.String[] strArray66 = python3Target56.getTokenTypesAsTargetLabels(grammar64, intArray65);
        java.lang.String[] strArray67 = python3Target52.getTokenTypesAsTargetLabels(grammar55, intArray65);
        java.lang.String[] strArray68 = python3Target32.getTokenTypesAsTargetLabels(grammar51, intArray65);
        java.lang.String[] strArray69 = python3Target19.getTokenTypesAsTargetLabels(grammar31, intArray65);
        java.lang.String[] strArray70 = python3Target11.getTokenTypesAsTargetLabels(grammar17, intArray65);
        java.lang.String[] strArray71 = python3Target0.getTokenTypesAsTargetLabels(grammar9, intArray65);
        boolean boolean72 = python3Target0.wantsBaseVisitor();
        org.antlr.v4.codegen.CodeGenerator codeGenerator73 = python3Target0.gen;
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "12" + "'", str6, "12");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 64 + "'", int7 == 64);
        org.junit.Assert.assertNull(codeGenerator8);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "4.5.2.1" + "'", str12, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 29 + "'", int13 == 29);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "4.5.2.1" + "'", str14, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(strSet20);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "\"\"\"\"\"\"" + "'", str23, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(strSet26);
        org.junit.Assert.assertNotNull(strSet29);
        org.junit.Assert.assertNull(codeGenerator30);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNull(sTGroup34);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "Hi!Context" + "'", str46, "Hi!Context");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "Python3" + "'", str48, "Python3");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "\"\\0\"" + "'", str50, "\"\\0\"");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "\"\"\"\"\"\"" + "'", str54, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "4.5.2.1" + "'", str58, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "\"\"" + "'", str62, "\"\"");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "4.5.2.1" + "'", str63, "4.5.2.1");
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[]");
        org.junit.Assert.assertNotNull(strArray66);
        org.junit.Assert.assertNotNull(strArray67);
        org.junit.Assert.assertNotNull(strArray68);
        org.junit.Assert.assertNotNull(strArray69);
        org.junit.Assert.assertNotNull(strArray70);
        org.junit.Assert.assertNotNull(strArray71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNull(codeGenerator73);
    }

    @Test
    public void test1330() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1330");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        python3Target0.language = "";
        java.lang.String str4 = python3Target0.encodeIntAsCharEscape(10);
        boolean boolean5 = python3Target0.templatesExist();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "\\12" + "'", str4, "\\12");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
    }

    @Test
    public void test1331() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1331");
        org.antlr.v4.codegen.target.Python3Target.PythonStringRenderer pythonStringRenderer0 = new org.antlr.v4.codegen.target.Python3Target.PythonStringRenderer();
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean2 = python3Target1.supportsOverloadedMethods();
        java.lang.String str3 = python3Target1.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator4 = python3Target1.getCodeGenerator();
        org.stringtemplate.v4.STGroup sTGroup5 = null;
        python3Target1.templates = sTGroup5;
        org.stringtemplate.v4.STGroup sTGroup7 = python3Target1.templates;
        java.util.Locale locale9 = null;
        java.lang.String str10 = pythonStringRenderer0.toString((java.lang.Object) sTGroup7, "Hi!Context", locale9);
        java.util.Locale locale13 = null;
        java.lang.String str14 = pythonStringRenderer0.toString((java.lang.Object) "_\"\"\\\"\\\"hi!\\\"\\\"\"\"Context", "\"\"\"\"hi!\"\"\"\"", locale13);
        org.antlr.v4.codegen.target.Python3Target python3Target15 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean16 = python3Target15.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup17 = python3Target15.templates;
        org.antlr.v4.tool.Grammar grammar18 = null;
        org.stringtemplate.v4.ST sT19 = null;
        python3Target15.genRecognizerHeaderFile(grammar18, sT19, "");
        python3Target15.language = "Python3";
        int int24 = python3Target15.getSerializedATNSegmentLimit();
        java.lang.String str26 = python3Target15.getListLabel("_tsetPython3");
        org.antlr.v4.codegen.CodeGenerator codeGenerator27 = null;
        java.lang.String str30 = python3Target15.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator27, "\"\"\"hi!\"\"\"", true);
        java.lang.String[] strArray31 = python3Target15.targetCharValueEscape;
        java.util.Locale locale33 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str34 = pythonStringRenderer0.toString((java.lang.Object) strArray31, "_tset12", locale33);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: [Ljava.lang.String; cannot be cast to java.lang.String");
        } catch (java.lang.ClassCastException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "4.5.2.1" + "'", str3, "4.5.2.1");
        org.junit.Assert.assertNull(codeGenerator4);
        org.junit.Assert.assertNull(sTGroup7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Hi!Context" + "'", str10, "Hi!Context");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "\"\"\"\"hi!\"\"\"\"" + "'", str14, "\"\"\"\"hi!\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(sTGroup17);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 29 + "'", int24 == 29);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "_tsetPython3" + "'", str26, "_tsetPython3");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "\"\\\"\\\"hi!\\\"\\\"\"" + "'", str30, "\"\\\"\\\"hi!\\\"\\\"\"");
        org.junit.Assert.assertNotNull(strArray31);
    }

    @Test
    public void test1332() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1332");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!", "hi!" };
        python3Target0.targetCharValueEscape = strArray5;
        java.lang.String str8 = python3Target0.getTargetStringLiteralFromString("\"\"");
        org.stringtemplate.v4.STGroup sTGroup9 = null;
        python3Target0.templates = sTGroup9;
        java.lang.String[] strArray11 = python3Target0.targetCharValueEscape;
        int int12 = python3Target0.getInlineTestSetWordSize();
        org.antlr.v4.codegen.CodeGenerator codeGenerator13 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target14 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator13);
        java.lang.String str16 = python3Target14.getTargetStringLiteralFromString("");
        int int17 = python3Target14.getSerializedATNSegmentLimit();
        boolean boolean18 = python3Target14.wantsBaseVisitor();
        org.stringtemplate.v4.STGroup sTGroup19 = python3Target14.loadTemplates();
        org.antlr.v4.codegen.CodeGenerator codeGenerator20 = python3Target14.gen;
        org.antlr.v4.codegen.target.Python3Target python3Target21 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean22 = python3Target21.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup23 = python3Target21.templates;
        org.antlr.v4.tool.Grammar grammar24 = null;
        org.stringtemplate.v4.ST sT25 = null;
        python3Target21.genRecognizerHeaderFile(grammar24, sT25, "");
        python3Target21.language = "Python3";
        int int30 = python3Target21.getSerializedATNSegmentLimit();
        org.stringtemplate.v4.STGroup sTGroup31 = python3Target21.loadTemplates();
        python3Target14.templates = sTGroup31;
        java.lang.String str33 = python3Target14.getVersion();
        java.util.Set<java.lang.String> strSet34 = python3Target14.getBadWords();
        python3Target0.badWords = strSet34;
        java.lang.String str37 = python3Target0.encodeIntAsCharEscape((int) (byte) 10);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\"\"\"\"" + "'", str8, "\"\"\"\"");
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 64 + "'", int12 == 64);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "\"\"" + "'", str16, "\"\"");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 29 + "'", int17 == 29);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(sTGroup19);
        org.junit.Assert.assertNull(codeGenerator20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(sTGroup23);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 29 + "'", int30 == 29);
        org.junit.Assert.assertNotNull(sTGroup31);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "4.5.2.1" + "'", str33, "4.5.2.1");
        org.junit.Assert.assertNotNull(strSet34);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "\\12" + "'", str37, "\\12");
    }

    @Test
    public void test1333() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1333");
        org.antlr.v4.codegen.target.Python3Target.PythonStringRenderer pythonStringRenderer0 = new org.antlr.v4.codegen.target.Python3Target.PythonStringRenderer();
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean2 = python3Target1.supportsOverloadedMethods();
        java.lang.String str3 = python3Target1.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator4 = null;
        java.lang.String str7 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator4, "", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = null;
        python3Target1.gen = codeGenerator8;
        java.lang.String[] strArray17 = new java.lang.String[] { "\"\"\"\"", "\\12", "\"\"", "4.5.2.1", "", "\"\"\"\"", "\"\"" };
        java.util.LinkedHashSet<java.lang.String> strSet18 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet18, strArray17);
        python3Target1.badWords = strSet18;
        org.antlr.v4.tool.Grammar grammar21 = null;
        org.stringtemplate.v4.ST sT22 = null;
        python3Target1.genRecognizerHeaderFile(grammar21, sT22, "\"\"");
        java.lang.String str26 = python3Target1.encodeIntAsCharEscape((int) (byte) 10);
        java.lang.String str27 = python3Target1.language;
        java.util.Set<java.lang.String> strSet28 = python3Target1.getBadWords();
        java.lang.String str29 = python3Target1.language;
        java.util.Set<java.lang.String> strSet30 = null;
        python3Target1.badWords = strSet30;
        java.util.Locale locale33 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str34 = pythonStringRenderer0.toString((java.lang.Object) python3Target1, "\\\"hi!\\\"", locale33);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: org.antlr.v4.codegen.target.Python3Target cannot be cast to java.lang.String");
        } catch (java.lang.ClassCastException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "4.5.2.1" + "'", str3, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "\"\"" + "'", str7, "\"\"");
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "\\12" + "'", str26, "\\12");
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(strSet28);
        org.junit.Assert.assertNull(str29);
    }

    @Test
    public void test1334() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1334");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        org.antlr.v4.tool.Grammar grammar3 = null;
        org.stringtemplate.v4.ST sT4 = null;
        python3Target0.genRecognizerHeaderFile(grammar3, sT4, "");
        python3Target0.language = "Python3";
        java.util.Set<java.lang.String> strSet9 = null;
        python3Target0.badWords = strSet9;
        org.antlr.v4.codegen.CodeGenerator codeGenerator11 = null;
        java.lang.String str14 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator11, "\"Hi!Context\"", false);
        java.lang.String str16 = python3Target0.getListLabel("Python3");
        org.antlr.v4.tool.Grammar grammar17 = null;
        org.stringtemplate.v4.ST sT18 = null;
        // The following exception was thrown during execution in test generation
        try {
            python3Target0.genFile(grammar17, sT18, "12Context");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Hi!Context" + "'", str14, "Hi!Context");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Python3" + "'", str16, "Python3");
    }

    @Test
    public void test1335() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1335");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        org.antlr.v4.tool.Grammar grammar3 = null;
        org.stringtemplate.v4.ST sT4 = null;
        python3Target0.genRecognizerHeaderFile(grammar3, sT4, "");
        python3Target0.language = "Python3";
        int int9 = python3Target0.getSerializedATNSegmentLimit();
        org.stringtemplate.v4.STGroup sTGroup10 = python3Target0.loadTemplates();
        python3Target0.addBadWords();
        java.lang.String str13 = python3Target0.getTargetStringLiteralFromString("\\35");
        java.util.Set<java.lang.String> strSet14 = python3Target0.badWords;
        org.antlr.v4.tool.Rule rule15 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str16 = python3Target0.getRuleFunctionContextStructName(rule15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 29 + "'", int9 == 29);
        org.junit.Assert.assertNotNull(sTGroup10);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "\"\\35\"" + "'", str13, "\"\\35\"");
        org.junit.Assert.assertNotNull(strSet14);
    }

    @Test
    public void test1336() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1336");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray1 = python3Target0.targetCharValueEscape;
        java.lang.String str2 = python3Target0.language;
        int int3 = python3Target0.getSerializedATNSegmentLimit();
        org.antlr.v4.codegen.CodeGenerator codeGenerator4 = python3Target0.getCodeGenerator();
        boolean boolean5 = python3Target0.wantsBaseListener();
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 29 + "'", int3 == 29);
        org.junit.Assert.assertNull(codeGenerator4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
    }

    @Test
    public void test1337() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1337");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        java.lang.String str2 = python3Target0.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = null;
        java.lang.String str6 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator3, "", true);
        java.lang.String str7 = python3Target0.getVersion();
        org.antlr.v4.tool.Grammar grammar8 = null;
        org.stringtemplate.v4.ST sT9 = null;
        python3Target0.genRecognizerHeaderFile(grammar8, sT9, "\"\"\"\"\"\"");
        org.antlr.v4.tool.Grammar grammar12 = null;
        org.stringtemplate.v4.ST sT13 = null;
        python3Target0.genRecognizerHeaderFile(grammar12, sT13, "_tset_12");
        boolean boolean16 = python3Target0.templatesExist();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str18 = python3Target0.getElementName("_tsetPython3");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "4.5.2.1" + "'", str2, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\"\"" + "'", str6, "\"\"");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "4.5.2.1" + "'", str7, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    }

    @Test
    public void test1338() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1338");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        org.antlr.v4.tool.Grammar grammar3 = null;
        org.stringtemplate.v4.ST sT4 = null;
        python3Target0.genRecognizerHeaderFile(grammar3, sT4, "");
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = python3Target0.getCodeGenerator();
        java.util.Set<java.lang.String> strSet8 = python3Target0.badWords;
        boolean boolean9 = python3Target0.templatesExist();
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target11 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator10);
        java.util.Set<java.lang.String> strSet12 = python3Target11.getBadWords();
        java.lang.String str14 = python3Target11.getAltLabelContextStructName("d");
        org.stringtemplate.v4.STGroup sTGroup15 = python3Target11.getTemplates();
        python3Target0.templates = sTGroup15;
        int int17 = python3Target0.getSerializedATNSegmentLimit();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertNull(codeGenerator7);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "DContext" + "'", str14, "DContext");
        org.junit.Assert.assertNotNull(sTGroup15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 29 + "'", int17 == 29);
    }

    @Test
    public void test1339() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1339");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray1 = python3Target0.targetCharValueEscape;
        java.lang.String str2 = python3Target0.language;
        int int3 = python3Target0.getSerializedATNSegmentLimit();
        java.lang.String str6 = python3Target0.getTargetStringLiteralFromString("\"\"\"\"\"\"", false);
        java.lang.String str9 = python3Target0.getTargetStringLiteralFromString("\"Hi!Context\"", false);
        org.antlr.v4.codegen.model.RuleFunction ruleFunction10 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str11 = python3Target0.getRuleFunctionContextStructName(ruleFunction10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 29 + "'", int3 == 29);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\"\"\"\"\"\"" + "'", str6, "\"\"\"\"\"\"");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\"Hi!Context\"" + "'", str9, "\"Hi!Context\"");
    }

    @Test
    public void test1340() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1340");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        org.antlr.v4.tool.Grammar grammar3 = null;
        org.stringtemplate.v4.ST sT4 = null;
        python3Target0.genRecognizerHeaderFile(grammar3, sT4, "");
        python3Target0.language = "Python3";
        java.util.Set<java.lang.String> strSet9 = null;
        python3Target0.badWords = strSet9;
        org.antlr.v4.codegen.CodeGenerator codeGenerator11 = null;
        java.lang.String str14 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator11, "\"Hi!Context\"", false);
        java.lang.String str16 = python3Target0.getListLabel("Python3");
        org.antlr.v4.codegen.CodeGenerator codeGenerator17 = python3Target0.getCodeGenerator();
        java.lang.String str19 = python3Target0.getListLabel("4.5.2.1");
        org.antlr.v4.tool.Grammar grammar20 = null;
        org.stringtemplate.v4.ST sT21 = null;
        // The following exception was thrown during execution in test generation
        try {
            python3Target0.genListenerFile(grammar20, sT21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Hi!Context" + "'", str14, "Hi!Context");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Python3" + "'", str16, "Python3");
        org.junit.Assert.assertNull(codeGenerator17);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "4.5.2.1" + "'", str19, "4.5.2.1");
    }

    @Test
    public void test1341() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1341");
        java.lang.String str1 = org.stringtemplate.v4.StringRenderer.escapeHTML("_tsethi!");
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "_tsethi!" + "'", str1, "_tsethi!");
    }

    @Test
    public void test1342() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1342");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.lang.String str3 = python3Target1.getTargetStringLiteralFromString("");
        int int4 = python3Target1.getSerializedATNSegmentLimit();
        boolean boolean5 = python3Target1.wantsBaseListener();
        java.lang.String str7 = python3Target1.getAltLabelContextStructName("__tset\"\"\"\"\"\"\"\"ContextContextContext");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "\"\"" + "'", str3, "\"\"");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 29 + "'", int4 == 29);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "__tset\"\"\"\"\"\"\"\"ContextContextContextContext" + "'", str7, "__tset\"\"\"\"\"\"\"\"ContextContextContextContext");
    }

    @Test
    public void test1343() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1343");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python3Target1.getBadWords();
        java.lang.String str4 = python3Target1.getAltLabelContextStructName("d");
        org.stringtemplate.v4.STGroup sTGroup5 = python3Target1.getTemplates();
        boolean boolean6 = python3Target1.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup7 = python3Target1.getTemplates();
        python3Target1.language = "\"\"";
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = null;
        java.lang.String str13 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator10, "\\\"4.5.2.1\\\"", false);
        org.antlr.v4.codegen.CodeGenerator codeGenerator14 = python3Target1.gen;
        java.lang.String str16 = python3Target1.getListLabel("_tset12");
        java.lang.String str18 = python3Target1.getImplicitSetLabel("\"\\\"\\\"hi!\\\"\\\"\"");
        java.lang.String str19 = python3Target1.getVersion();
        org.antlr.v4.tool.Grammar grammar20 = null;
        org.stringtemplate.v4.ST sT21 = null;
        // The following exception was thrown during execution in test generation
        try {
            python3Target1.genListenerFile(grammar20, sT21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "DContext" + "'", str4, "DContext");
        org.junit.Assert.assertNotNull(sTGroup5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(sTGroup7);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "\\\"4.5.2.1\\\"" + "'", str13, "\\\"4.5.2.1\\\"");
        org.junit.Assert.assertNull(codeGenerator14);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "_tset12" + "'", str16, "_tset12");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "_tset\"\\\"\\\"hi!\\\"\\\"\"" + "'", str18, "_tset\"\\\"\\\"hi!\\\"\\\"\"");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "4.5.2.1" + "'", str19, "4.5.2.1");
    }

    @Test
    public void test1344() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1344");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        java.lang.String str2 = python3Target0.getVersion();
        boolean boolean3 = python3Target0.supportsOverloadedMethods();
        org.antlr.v4.codegen.CodeGenerator codeGenerator4 = null;
        java.lang.String str7 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator4, "", false);
        java.lang.String str8 = python3Target0.getLanguage();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "4.5.2.1" + "'", str2, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertNull(str8);
    }

    @Test
    public void test1345() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1345");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python3Target1.getBadWords();
        org.antlr.v4.codegen.target.Python3Target python3Target3 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str5 = python3Target3.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.codegen.target.Python3Target python3Target6 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean7 = python3Target6.supportsOverloadedMethods();
        java.util.Set<java.lang.String> strSet8 = python3Target6.badWords;
        python3Target3.badWords = strSet8;
        python3Target1.badWords = strSet8;
        java.util.Set<java.lang.String> strSet11 = python3Target1.badWords;
        java.lang.String str12 = python3Target1.language;
        java.util.Set<java.lang.String> strSet13 = python3Target1.badWords;
        java.lang.String str15 = python3Target1.getListLabel("\"\\\"\\\\\\\"Python3\\\\\\\"\\\"\"");
        java.lang.String str17 = python3Target1.getImplicitRuleLabel("\"\"hi!\"\"");
        python3Target1.language = "\"\\64\"";
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "\"\"\"\"\"\"" + "'", str5, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertNotNull(strSet11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Python3" + "'", str12, "Python3");
        org.junit.Assert.assertNotNull(strSet13);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "\"\\\"\\\\\\\"Python3\\\\\\\"\\\"\"" + "'", str15, "\"\\\"\\\\\\\"Python3\\\\\\\"\\\"\"");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "_\"\"hi!\"\"" + "'", str17, "_\"\"hi!\"\"");
    }

    @Test
    public void test1346() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1346");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        java.lang.String str3 = python3Target0.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator4 = null;
        java.lang.String str7 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator4, "\"\\\"hi!\\\"\"", true);
        org.stringtemplate.v4.STGroup sTGroup8 = python3Target0.templates;
        org.antlr.v4.codegen.CodeGenerator codeGenerator9 = python3Target0.getCodeGenerator();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str11 = python3Target0.getElementListName("\"\"_tset12\"\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "4.5.2.1" + "'", str3, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "\"\\\"hi!\\\"\"" + "'", str7, "\"\\\"hi!\\\"\"");
        org.junit.Assert.assertNull(sTGroup8);
        org.junit.Assert.assertNull(codeGenerator9);
    }

    @Test
    public void test1347() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1347");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.lang.String str3 = python3Target1.getTargetStringLiteralFromString("");
        int int4 = python3Target1.getSerializedATNSegmentLimit();
        boolean boolean5 = python3Target1.wantsBaseVisitor();
        org.stringtemplate.v4.STGroup sTGroup6 = python3Target1.loadTemplates();
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = python3Target1.gen;
        org.antlr.v4.codegen.target.Python3Target python3Target8 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean9 = python3Target8.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup10 = python3Target8.templates;
        org.antlr.v4.tool.Grammar grammar11 = null;
        org.stringtemplate.v4.ST sT12 = null;
        python3Target8.genRecognizerHeaderFile(grammar11, sT12, "");
        python3Target8.language = "Python3";
        int int17 = python3Target8.getSerializedATNSegmentLimit();
        org.stringtemplate.v4.STGroup sTGroup18 = python3Target8.loadTemplates();
        python3Target1.templates = sTGroup18;
        java.lang.String str20 = python3Target1.getVersion();
        java.lang.String str21 = python3Target1.language;
        boolean boolean22 = python3Target1.wantsBaseListener();
        org.antlr.v4.codegen.target.Python3Target python3Target23 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray24 = python3Target23.targetCharValueEscape;
        org.stringtemplate.v4.STGroup sTGroup25 = python3Target23.templates;
        int int26 = python3Target23.getInlineTestSetWordSize();
        int int27 = python3Target23.getSerializedATNSegmentLimit();
        java.util.Set<java.lang.String> strSet28 = python3Target23.badWords;
        python3Target1.badWords = strSet28;
        boolean boolean30 = python3Target1.templatesExist();
        int int31 = python3Target1.getInlineTestSetWordSize();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "\"\"" + "'", str3, "\"\"");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 29 + "'", int4 == 29);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(sTGroup6);
        org.junit.Assert.assertNull(codeGenerator7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(sTGroup10);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 29 + "'", int17 == 29);
        org.junit.Assert.assertNotNull(sTGroup18);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "4.5.2.1" + "'", str20, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Python3" + "'", str21, "Python3");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertNull(sTGroup25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 64 + "'", int26 == 64);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 29 + "'", int27 == 29);
        org.junit.Assert.assertNotNull(strSet28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 64 + "'", int31 == 64);
    }

    @Test
    public void test1348() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1348");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        python3Target0.language = "4.5.2.1";
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = python3Target0.getCodeGenerator();
        org.antlr.v4.codegen.CodeGenerator codeGenerator4 = python3Target0.gen;
        org.antlr.v4.codegen.CodeGenerator codeGenerator5 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target6 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator5);
        java.lang.String str8 = python3Target6.getTargetStringLiteralFromString("");
        int int9 = python3Target6.getSerializedATNSegmentLimit();
        boolean boolean10 = python3Target6.wantsBaseVisitor();
        org.stringtemplate.v4.STGroup sTGroup11 = python3Target6.loadTemplates();
        python3Target0.templates = sTGroup11;
        java.lang.String str13 = python3Target0.language;
        org.antlr.v4.codegen.target.Python3Target python3Target14 = new org.antlr.v4.codegen.target.Python3Target();
        python3Target14.language = "";
        org.antlr.v4.codegen.target.Python3Target python3Target17 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean18 = python3Target17.supportsOverloadedMethods();
        java.lang.String str19 = python3Target17.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator20 = null;
        java.lang.String str23 = python3Target17.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator20, "", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator24 = null;
        python3Target17.gen = codeGenerator24;
        java.lang.String[] strArray33 = new java.lang.String[] { "\"\"\"\"", "\\12", "\"\"", "4.5.2.1", "", "\"\"\"\"", "\"\"" };
        java.util.LinkedHashSet<java.lang.String> strSet34 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet34, strArray33);
        python3Target17.badWords = strSet34;
        python3Target14.badWords = strSet34;
        python3Target14.addBadWords();
        java.util.Set<java.lang.String> strSet39 = python3Target14.badWords;
        python3Target0.badWords = strSet39;
        int int41 = python3Target0.getSerializedATNSegmentLimit();
        java.lang.String str42 = python3Target0.language;
        org.antlr.v4.tool.Grammar grammar43 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str45 = python3Target0.getTokenTypeAsTargetLabel(grammar43, 64);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(codeGenerator3);
        org.junit.Assert.assertNull(codeGenerator4);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\"\"" + "'", str8, "\"\"");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 29 + "'", int9 == 29);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(sTGroup11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "4.5.2.1" + "'", str13, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "4.5.2.1" + "'", str19, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "\"\"" + "'", str23, "\"\"");
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(strSet39);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 29 + "'", int41 == 29);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "4.5.2.1" + "'", str42, "4.5.2.1");
    }

    @Test
    public void test1349() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1349");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!", "hi!" };
        python3Target0.targetCharValueEscape = strArray5;
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = null;
        java.lang.String str10 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator7, "", false);
        int int11 = python3Target0.getSerializedATNSegmentLimit();
        java.lang.String str12 = python3Target0.getVersion();
        java.lang.String str14 = python3Target0.getTargetStringLiteralFromString("4.5.2.1");
        python3Target0.addBadWords();
        java.lang.String str16 = python3Target0.language;
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 29 + "'", int11 == 29);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "4.5.2.1" + "'", str12, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "\"4.5.2.1\"" + "'", str14, "\"4.5.2.1\"");
        org.junit.Assert.assertNull(str16);
    }

    @Test
    public void test1350() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1350");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        java.util.Set<java.lang.String> strSet2 = python3Target0.badWords;
        boolean boolean3 = python3Target0.templatesExist();
        python3Target0.addBadWords();
        org.antlr.v4.tool.Grammar grammar5 = null;
        org.stringtemplate.v4.ST sT6 = null;
        python3Target0.genRecognizerHeaderFile(grammar5, sT6, "\"\\0\"");
        org.stringtemplate.v4.STGroup sTGroup9 = python3Target0.templates;
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(sTGroup9);
    }

    @Test
    public void test1351() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1351");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray1 = python3Target0.targetCharValueEscape;
        java.lang.String str2 = python3Target0.language;
        int int3 = python3Target0.getSerializedATNSegmentLimit();
        java.lang.String str5 = python3Target0.encodeIntAsCharEscape(1);
        java.lang.String str6 = python3Target0.getLanguage();
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 29 + "'", int3 == 29);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "\\1" + "'", str5, "\\1");
        org.junit.Assert.assertNull(str6);
    }

    @Test
    public void test1352() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1352");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray1 = python3Target0.targetCharValueEscape;
        java.util.Set<java.lang.String> strSet2 = python3Target0.badWords;
        int int3 = python3Target0.getInlineTestSetWordSize();
        boolean boolean4 = python3Target0.templatesExist();
        java.util.Set<java.lang.String> strSet5 = python3Target0.badWords;
        org.antlr.v4.tool.Grammar grammar6 = null;
        org.stringtemplate.v4.ST sT7 = null;
        python3Target0.genRecognizerHeaderFile(grammar6, sT7, "\\0");
        python3Target0.language = "_tset\\64";
        org.antlr.v4.codegen.CodeGenerator codeGenerator12 = python3Target0.getCodeGenerator();
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 64 + "'", int3 == 64);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNull(codeGenerator12);
    }

    @Test
    public void test1353() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1353");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = null;
        python3Target0.gen = codeGenerator3;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str6 = python3Target0.getElementName("\"\"\\\"\\\"hi!\\\"\\\"\"\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
    }

    @Test
    public void test1354() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1354");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        java.lang.String str2 = python3Target0.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = null;
        java.lang.String str6 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator3, "", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = null;
        python3Target0.gen = codeGenerator7;
        java.lang.String[] strArray16 = new java.lang.String[] { "\"\"\"\"", "\\12", "\"\"", "4.5.2.1", "", "\"\"\"\"", "\"\"" };
        java.util.LinkedHashSet<java.lang.String> strSet17 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet17, strArray16);
        python3Target0.badWords = strSet17;
        org.antlr.v4.tool.Grammar grammar20 = null;
        org.stringtemplate.v4.ST sT21 = null;
        python3Target0.genRecognizerHeaderFile(grammar20, sT21, "\"\"");
        java.lang.String str25 = python3Target0.encodeIntAsCharEscape((int) (byte) 10);
        java.lang.String str26 = python3Target0.language;
        java.util.Set<java.lang.String> strSet27 = python3Target0.getBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator28 = null;
        java.lang.String str31 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator28, "", false);
        java.util.Set<java.lang.String> strSet32 = python3Target0.badWords;
        boolean boolean33 = python3Target0.supportsOverloadedMethods();
        boolean boolean34 = python3Target0.supportsOverloadedMethods();
        java.lang.String str37 = python3Target0.getTargetStringLiteralFromString("_\"4.5.2.1\"", false);
        org.antlr.v4.codegen.CodeGenerator codeGenerator38 = python3Target0.getCodeGenerator();
        org.antlr.v4.tool.ast.GrammarAST grammarAST39 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean40 = python3Target0.grammarSymbolCausesIssueInGeneratedCode(grammarAST39);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "4.5.2.1" + "'", str2, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\"\"" + "'", str6, "\"\"");
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "\\12" + "'", str25, "\\12");
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(strSet27);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "" + "'", str31, "");
        org.junit.Assert.assertNotNull(strSet32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "_\"4.5.2.1\"" + "'", str37, "_\"4.5.2.1\"");
        org.junit.Assert.assertNull(codeGenerator38);
    }

    @Test
    public void test1355() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1355");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        java.lang.String str2 = python3Target0.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = python3Target0.getCodeGenerator();
        org.stringtemplate.v4.STGroup sTGroup4 = null;
        python3Target0.templates = sTGroup4;
        org.stringtemplate.v4.STGroup sTGroup6 = python3Target0.templates;
        java.lang.String str8 = python3Target0.encodeIntAsCharEscape((int) (short) 10);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "4.5.2.1" + "'", str2, "4.5.2.1");
        org.junit.Assert.assertNull(codeGenerator3);
        org.junit.Assert.assertNull(sTGroup6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\\12" + "'", str8, "\\12");
    }

    @Test
    public void test1356() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1356");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        org.antlr.v4.tool.Grammar grammar3 = null;
        org.stringtemplate.v4.ST sT4 = null;
        python3Target0.genRecognizerHeaderFile(grammar3, sT4, "");
        python3Target0.language = "Python3";
        java.util.Set<java.lang.String> strSet9 = null;
        python3Target0.badWords = strSet9;
        boolean boolean11 = python3Target0.wantsBaseVisitor();
        java.lang.String[] strArray13 = new java.lang.String[] { "12Context" };
        java.util.LinkedHashSet<java.lang.String> strSet14 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet14, strArray13);
        python3Target0.badWords = strSet14;
        int int17 = python3Target0.getSerializedATNSegmentLimit();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 29 + "'", int17 == 29);
    }

    @Test
    public void test1357() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1357");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        org.antlr.v4.tool.Grammar grammar3 = null;
        org.stringtemplate.v4.ST sT4 = null;
        python3Target0.genRecognizerHeaderFile(grammar3, sT4, "");
        python3Target0.language = "Python3";
        int int9 = python3Target0.getSerializedATNSegmentLimit();
        java.lang.String str11 = python3Target0.getListLabel("_tsetPython3");
        org.antlr.v4.codegen.CodeGenerator codeGenerator12 = null;
        java.lang.String str15 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator12, "\"\"\"hi!\"\"\"", true);
        java.lang.String str17 = python3Target0.getAltLabelContextStructName("\"\"\"\"\"\"\"\"Context");
        int int18 = python3Target0.getSerializedATNSegmentLimit();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str20 = python3Target0.getElementListName("\\\"\\\\\\\"\\\\\\\"hi!\\\\\\\"\\\\\\\"\\\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 29 + "'", int9 == 29);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "_tsetPython3" + "'", str11, "_tsetPython3");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "\"\\\"\\\"hi!\\\"\\\"\"" + "'", str15, "\"\\\"\\\"hi!\\\"\\\"\"");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "\"\"\"\"\"\"\"\"ContextContext" + "'", str17, "\"\"\"\"\"\"\"\"ContextContext");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 29 + "'", int18 == 29);
    }

    @Test
    public void test1358() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1358");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        python3Target0.language = "";
        org.antlr.v4.codegen.target.Python3Target python3Target3 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean4 = python3Target3.supportsOverloadedMethods();
        java.lang.String str5 = python3Target3.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = null;
        java.lang.String str9 = python3Target3.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator6, "", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = null;
        python3Target3.gen = codeGenerator10;
        java.lang.String[] strArray19 = new java.lang.String[] { "\"\"\"\"", "\\12", "\"\"", "4.5.2.1", "", "\"\"\"\"", "\"\"" };
        java.util.LinkedHashSet<java.lang.String> strSet20 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet20, strArray19);
        python3Target3.badWords = strSet20;
        python3Target0.badWords = strSet20;
        java.lang.String str25 = python3Target0.encodeIntAsCharEscape((int) (byte) 100);
        org.antlr.v4.tool.Grammar grammar26 = null;
        org.stringtemplate.v4.ST sT27 = null;
        python3Target0.genRecognizerHeaderFile(grammar26, sT27, "");
        java.lang.String str30 = python3Target0.language;
        org.antlr.v4.tool.Grammar grammar31 = null;
        org.stringtemplate.v4.ST sT32 = null;
        // The following exception was thrown during execution in test generation
        try {
            python3Target0.genListenerFile(grammar31, sT32);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "4.5.2.1" + "'", str5, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\"\"" + "'", str9, "\"\"");
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "d" + "'", str25, "d");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
    }

    @Test
    public void test1359() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1359");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        java.lang.String str2 = python3Target0.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = null;
        java.lang.String str6 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator3, "", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = null;
        python3Target0.gen = codeGenerator7;
        int int9 = python3Target0.getSerializedATNSegmentLimit();
        org.antlr.v4.tool.Grammar grammar10 = null;
        org.stringtemplate.v4.ST sT11 = null;
        python3Target0.genRecognizerHeaderFile(grammar10, sT11, "_tset12");
        org.stringtemplate.v4.STGroup sTGroup14 = python3Target0.templates;
        org.stringtemplate.v4.STGroup sTGroup15 = python3Target0.templates;
        python3Target0.language = "\\nContext";
        java.lang.String[] strArray18 = python3Target0.targetCharValueEscape;
        java.lang.String str20 = python3Target0.getTargetStringLiteralFromString("\"\"DContext\"\"Context");
        int int21 = python3Target0.getSerializedATNSegmentLimit();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str23 = python3Target0.getElementName("\\\"\\\"4.5.2.1\\\"\\\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "4.5.2.1" + "'", str2, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\"\"" + "'", str6, "\"\"");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 29 + "'", int9 == 29);
        org.junit.Assert.assertNull(sTGroup14);
        org.junit.Assert.assertNull(sTGroup15);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "\"\"\"DContext\"\"Context\"" + "'", str20, "\"\"\"DContext\"\"Context\"");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 29 + "'", int21 == 29);
    }

    @Test
    public void test1360() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1360");
        org.antlr.v4.codegen.target.Python3Target.PythonStringRenderer pythonStringRenderer0 = new org.antlr.v4.codegen.target.Python3Target.PythonStringRenderer();
        java.lang.Object obj1 = null;
        java.util.Locale locale3 = null;
        java.lang.String str4 = pythonStringRenderer0.toString(obj1, "\"\"\"\"\"\"", locale3);
        org.antlr.v4.codegen.target.Python3Target python3Target5 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray6 = python3Target5.targetCharValueEscape;
        org.stringtemplate.v4.STGroup sTGroup7 = python3Target5.templates;
        java.util.Locale locale9 = null;
        java.lang.String str10 = pythonStringRenderer0.toString((java.lang.Object) sTGroup7, "\"Hi!Context\"", locale9);
        java.util.Locale locale13 = null;
        java.lang.String str14 = pythonStringRenderer0.toString((java.lang.Object) "\"DContext\"", "", locale13);
        java.lang.Object obj15 = null;
        java.util.Locale locale17 = null;
        java.lang.String str18 = pythonStringRenderer0.toString(obj15, "\"\\\"hi!\\\"\"", locale17);
        java.util.Locale locale21 = null;
        java.lang.String str22 = pythonStringRenderer0.toString((java.lang.Object) "\"\"\"\"\"\"\"\"Context", "\"1\"", locale21);
        org.antlr.v4.codegen.target.Python3Target python3Target23 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str25 = python3Target23.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.codegen.target.Python3Target python3Target26 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean27 = python3Target26.supportsOverloadedMethods();
        java.util.Set<java.lang.String> strSet28 = python3Target26.badWords;
        python3Target23.badWords = strSet28;
        java.util.Locale locale31 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str32 = pythonStringRenderer0.toString((java.lang.Object) python3Target23, "___tset\"\"\"\"\"\"\"\"ContextContextContext", locale31);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: org.antlr.v4.codegen.target.Python3Target cannot be cast to java.lang.String");
        } catch (java.lang.ClassCastException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "\"\"\"\"\"\"" + "'", str4, "\"\"\"\"\"\"");
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertNull(sTGroup7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\"Hi!Context\"" + "'", str10, "\"Hi!Context\"");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "\"\\\"hi!\\\"\"" + "'", str18, "\"\\\"hi!\\\"\"");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "\"1\"" + "'", str22, "\"1\"");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "\"\"\"\"\"\"" + "'", str25, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(strSet28);
    }

    @Test
    public void test1361() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1361");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray1 = python3Target0.targetCharValueEscape;
        java.lang.String str2 = python3Target0.language;
        int int3 = python3Target0.getSerializedATNSegmentLimit();
        java.lang.String str6 = python3Target0.getTargetStringLiteralFromString("\"\"\"\"\"\"", false);
        boolean boolean7 = python3Target0.supportsOverloadedMethods();
        java.util.Set<java.lang.String> strSet8 = python3Target0.getBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator9 = python3Target0.getCodeGenerator();
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 29 + "'", int3 == 29);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\"\"\"\"\"\"" + "'", str6, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertNull(codeGenerator9);
    }

    @Test
    public void test1362() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1362");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        python3Target0.language = "";
        java.lang.String str4 = python3Target0.encodeIntAsCharEscape(10);
        java.lang.String[] strArray5 = python3Target0.targetCharValueEscape;
        int int6 = python3Target0.getInlineTestSetWordSize();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "\\12" + "'", str4, "\\12");
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 64 + "'", int6 == 64);
    }

    @Test
    public void test1363() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1363");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.lang.String str3 = python3Target1.getTargetStringLiteralFromString("");
        int int4 = python3Target1.getSerializedATNSegmentLimit();
        boolean boolean5 = python3Target1.wantsBaseVisitor();
        org.stringtemplate.v4.STGroup sTGroup6 = python3Target1.loadTemplates();
        java.lang.String str7 = python3Target1.getLanguage();
        boolean boolean8 = python3Target1.wantsBaseVisitor();
        boolean boolean9 = python3Target1.templatesExist();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "\"\"" + "'", str3, "\"\"");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 29 + "'", int4 == 29);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(sTGroup6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Python3" + "'", str7, "Python3");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
    }

    @Test
    public void test1364() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1364");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        java.lang.String str2 = python3Target0.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = null;
        java.lang.String str6 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator3, "", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = null;
        python3Target0.gen = codeGenerator7;
        java.lang.String[] strArray16 = new java.lang.String[] { "\"\"\"\"", "\\12", "\"\"", "4.5.2.1", "", "\"\"\"\"", "\"\"" };
        java.util.LinkedHashSet<java.lang.String> strSet17 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet17, strArray16);
        python3Target0.badWords = strSet17;
        org.antlr.v4.tool.Grammar grammar20 = null;
        org.stringtemplate.v4.ST sT21 = null;
        python3Target0.genRecognizerHeaderFile(grammar20, sT21, "\"\"");
        java.lang.String str25 = python3Target0.encodeIntAsCharEscape((int) (byte) 10);
        boolean boolean26 = python3Target0.wantsBaseVisitor();
        int int27 = python3Target0.getSerializedATNSegmentLimit();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "4.5.2.1" + "'", str2, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\"\"" + "'", str6, "\"\"");
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "\\12" + "'", str25, "\\12");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 29 + "'", int27 == 29);
    }

    @Test
    public void test1365() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1365");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray1 = python3Target0.targetCharValueEscape;
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = null;
        java.lang.String str6 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator3, "\"\\12\"", false);
        java.lang.String str7 = python3Target0.getLanguage();
        org.antlr.v4.codegen.target.Python3Target python3Target8 = new org.antlr.v4.codegen.target.Python3Target();
        python3Target8.language = "4.5.2.1";
        org.antlr.v4.codegen.CodeGenerator codeGenerator11 = python3Target8.getCodeGenerator();
        org.antlr.v4.codegen.CodeGenerator codeGenerator12 = python3Target8.gen;
        java.lang.String str13 = python3Target8.getLanguage();
        python3Target8.addBadWords();
        org.antlr.v4.codegen.target.Python3Target python3Target15 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str17 = python3Target15.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator18 = null;
        python3Target15.gen = codeGenerator18;
        java.lang.String str20 = python3Target15.getVersion();
        org.antlr.v4.codegen.target.Python3Target python3Target21 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean22 = python3Target21.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup23 = python3Target21.templates;
        org.antlr.v4.tool.Grammar grammar24 = null;
        org.stringtemplate.v4.ST sT25 = null;
        python3Target21.genRecognizerHeaderFile(grammar24, sT25, "");
        python3Target21.language = "Python3";
        int int30 = python3Target21.getSerializedATNSegmentLimit();
        org.stringtemplate.v4.STGroup sTGroup31 = python3Target21.loadTemplates();
        python3Target15.templates = sTGroup31;
        python3Target8.templates = sTGroup31;
        python3Target8.language = "\\35";
        org.stringtemplate.v4.STGroup sTGroup36 = python3Target8.getTemplates();
        python3Target0.templates = sTGroup36;
        java.lang.String str39 = python3Target0.getTargetStringLiteralFromString("\"\"\"\"\"\"\"\"");
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "12" + "'", str6, "12");
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(codeGenerator11);
        org.junit.Assert.assertNull(codeGenerator12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "4.5.2.1" + "'", str13, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "\"\"\"\"\"\"" + "'", str17, "\"\"\"\"\"\"");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "4.5.2.1" + "'", str20, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(sTGroup23);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 29 + "'", int30 == 29);
        org.junit.Assert.assertNotNull(sTGroup31);
        org.junit.Assert.assertNotNull(sTGroup36);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "\"\"\"\"\"\"\"\"\"\"" + "'", str39, "\"\"\"\"\"\"\"\"\"\"");
    }

    @Test
    public void test1366() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1366");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray1 = python3Target0.targetCharValueEscape;
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        org.antlr.v4.tool.ast.GrammarAST grammarAST3 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean4 = python3Target0.grammarSymbolCausesIssueInGeneratedCode(grammarAST3);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertNull(sTGroup2);
    }

    @Test
    public void test1367() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1367");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!", "hi!" };
        python3Target0.targetCharValueEscape = strArray5;
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = null;
        java.lang.String str10 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator7, "", false);
        java.util.Set<java.lang.String> strSet11 = python3Target0.badWords;
        java.lang.String str13 = python3Target0.getTargetStringLiteralFromString("12");
        int int14 = python3Target0.getSerializedATNSegmentLimit();
        java.util.Set<java.lang.String> strSet15 = python3Target0.badWords;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str17 = python3Target0.getAltLabelContextStructName("\"\"\"\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNotNull(strSet11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "\"12\"" + "'", str13, "\"12\"");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 29 + "'", int14 == 29);
        org.junit.Assert.assertNotNull(strSet15);
    }

    @Test
    public void test1368() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1368");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        java.lang.String str2 = python3Target0.getVersion();
        boolean boolean3 = python3Target0.supportsOverloadedMethods();
        org.antlr.v4.codegen.CodeGenerator codeGenerator4 = null;
        java.lang.String str7 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator4, "", false);
        org.antlr.v4.tool.Grammar grammar8 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target9 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean10 = python3Target9.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup11 = python3Target9.templates;
        java.lang.String[] strArray14 = new java.lang.String[] { "hi!", "hi!" };
        python3Target9.targetCharValueEscape = strArray14;
        org.antlr.v4.codegen.CodeGenerator codeGenerator16 = null;
        java.lang.String str19 = python3Target9.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator16, "", false);
        java.util.Set<java.lang.String> strSet20 = python3Target9.badWords;
        java.lang.String str22 = python3Target9.getTargetStringLiteralFromString("12");
        int int23 = python3Target9.getSerializedATNSegmentLimit();
        boolean boolean24 = python3Target9.supportsOverloadedMethods();
        org.antlr.v4.tool.Grammar grammar25 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target26 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean27 = python3Target26.supportsOverloadedMethods();
        java.util.Set<java.lang.String> strSet28 = python3Target26.badWords;
        boolean boolean29 = python3Target26.templatesExist();
        java.lang.String str30 = python3Target26.getLanguage();
        org.antlr.v4.tool.Grammar grammar31 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target32 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str34 = python3Target32.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator35 = null;
        python3Target32.gen = codeGenerator35;
        org.antlr.v4.tool.Grammar grammar37 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target38 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str40 = python3Target38.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.tool.Grammar grammar41 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target42 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean43 = python3Target42.supportsOverloadedMethods();
        java.lang.String str44 = python3Target42.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator45 = null;
        java.lang.String str48 = python3Target42.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator45, "", true);
        java.lang.String str49 = python3Target42.getVersion();
        org.antlr.v4.tool.Grammar grammar50 = null;
        int[] intArray51 = new int[] {};
        java.lang.String[] strArray52 = python3Target42.getTokenTypesAsTargetLabels(grammar50, intArray51);
        java.lang.String[] strArray53 = python3Target38.getTokenTypesAsTargetLabels(grammar41, intArray51);
        java.lang.String[] strArray54 = python3Target32.getTokenTypesAsTargetLabels(grammar37, intArray51);
        java.lang.String[] strArray55 = python3Target26.getTokenTypesAsTargetLabels(grammar31, intArray51);
        java.lang.String[] strArray56 = python3Target9.getTokenTypesAsTargetLabels(grammar25, intArray51);
        java.lang.String[] strArray57 = python3Target0.getTokenTypesAsTargetLabels(grammar8, intArray51);
        org.antlr.v4.tool.Grammar grammar58 = null;
        org.stringtemplate.v4.ST sT59 = null;
        python3Target0.genRecognizerHeaderFile(grammar58, sT59, "hi!");
        java.util.Set<java.lang.String> strSet62 = python3Target0.getBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator63 = null;
        python3Target0.gen = codeGenerator63;
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "4.5.2.1" + "'", str2, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(sTGroup11);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertNotNull(strSet20);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "\"12\"" + "'", str22, "\"12\"");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 29 + "'", int23 == 29);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(strSet28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "\"\"\"\"\"\"" + "'", str34, "\"\"\"\"\"\"");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "\"\"\"\"\"\"" + "'", str40, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "4.5.2.1" + "'", str44, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "\"\"" + "'", str48, "\"\"");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "4.5.2.1" + "'", str49, "4.5.2.1");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[]");
        org.junit.Assert.assertNotNull(strArray52);
        org.junit.Assert.assertNotNull(strArray53);
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertNotNull(strArray55);
        org.junit.Assert.assertNotNull(strArray56);
        org.junit.Assert.assertNotNull(strArray57);
        org.junit.Assert.assertNotNull(strSet62);
    }

    @Test
    public void test1369() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1369");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python3Target1.getBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = null;
        python3Target1.gen = codeGenerator3;
        org.antlr.v4.codegen.CodeGenerator codeGenerator5 = null;
        java.lang.String str8 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator5, "\"12\"", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator9 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target10 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator9);
        java.lang.String str12 = python3Target10.getTargetStringLiteralFromString("");
        int int13 = python3Target10.getSerializedATNSegmentLimit();
        boolean boolean14 = python3Target10.wantsBaseVisitor();
        org.stringtemplate.v4.STGroup sTGroup15 = python3Target10.loadTemplates();
        org.antlr.v4.codegen.target.Python3Target python3Target16 = new org.antlr.v4.codegen.target.Python3Target();
        python3Target16.language = "4.5.2.1";
        org.antlr.v4.codegen.CodeGenerator codeGenerator19 = python3Target16.getCodeGenerator();
        org.antlr.v4.codegen.CodeGenerator codeGenerator20 = python3Target16.gen;
        java.util.Set<java.lang.String> strSet21 = python3Target16.badWords;
        python3Target10.badWords = strSet21;
        python3Target1.badWords = strSet21;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str25 = python3Target1.getElementListName("\"\"\"4.5.2.1\"\"\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\"12\"" + "'", str8, "\"12\"");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "\"\"" + "'", str12, "\"\"");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 29 + "'", int13 == 29);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(sTGroup15);
        org.junit.Assert.assertNull(codeGenerator19);
        org.junit.Assert.assertNull(codeGenerator20);
        org.junit.Assert.assertNotNull(strSet21);
    }

    @Test
    public void test1370() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1370");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        java.lang.String str2 = python3Target0.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = null;
        java.lang.String str6 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator3, "", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = null;
        python3Target0.gen = codeGenerator7;
        java.lang.String[] strArray16 = new java.lang.String[] { "\"\"\"\"", "\\12", "\"\"", "4.5.2.1", "", "\"\"\"\"", "\"\"" };
        java.util.LinkedHashSet<java.lang.String> strSet17 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet17, strArray16);
        python3Target0.badWords = strSet17;
        boolean boolean20 = python3Target0.templatesExist();
        int int21 = python3Target0.getSerializedATNSegmentLimit();
        org.antlr.v4.tool.ast.GrammarAST grammarAST22 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean23 = python3Target0.visibleGrammarSymbolCausesIssueInGeneratedCode(grammarAST22);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "4.5.2.1" + "'", str2, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\"\"" + "'", str6, "\"\"");
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 29 + "'", int21 == 29);
    }

    @Test
    public void test1371() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1371");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        python3Target0.language = "";
        org.antlr.v4.codegen.target.Python3Target python3Target3 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean4 = python3Target3.supportsOverloadedMethods();
        java.lang.String str5 = python3Target3.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = null;
        java.lang.String str9 = python3Target3.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator6, "", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = null;
        python3Target3.gen = codeGenerator10;
        java.lang.String[] strArray19 = new java.lang.String[] { "\"\"\"\"", "\\12", "\"\"", "4.5.2.1", "", "\"\"\"\"", "\"\"" };
        java.util.LinkedHashSet<java.lang.String> strSet20 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet20, strArray19);
        python3Target3.badWords = strSet20;
        python3Target0.badWords = strSet20;
        java.lang.String str25 = python3Target0.encodeIntAsCharEscape((int) (byte) 100);
        java.lang.String str26 = python3Target0.getLanguage();
        java.lang.String str28 = python3Target0.getTargetStringLiteralFromString("\"\\0\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator29 = null;
        python3Target0.gen = codeGenerator29;
        org.antlr.v4.codegen.CodeGenerator codeGenerator31 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target32 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator31);
        java.lang.String str33 = python3Target32.getLanguage();
        java.lang.String str35 = python3Target32.getImplicitSetLabel("Python3");
        org.antlr.v4.codegen.CodeGenerator codeGenerator36 = null;
        java.lang.String str39 = python3Target32.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator36, "\"\"\"\"", true);
        org.stringtemplate.v4.STGroup sTGroup40 = python3Target32.loadTemplates();
        python3Target0.templates = sTGroup40;
        java.lang.String str42 = python3Target0.language;
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "4.5.2.1" + "'", str5, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\"\"" + "'", str9, "\"\"");
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "d" + "'", str25, "d");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "\"\"\\0\"\"" + "'", str28, "\"\"\\0\"\"");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "Python3" + "'", str33, "Python3");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "_tsetPython3" + "'", str35, "_tsetPython3");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "\"\\\"\\\"\"" + "'", str39, "\"\\\"\\\"\"");
        org.junit.Assert.assertNotNull(sTGroup40);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "" + "'", str42, "");
    }

    @Test
    public void test1372() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1372");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.lang.String str3 = python3Target1.getTargetStringLiteralFromString("");
        int int4 = python3Target1.getSerializedATNSegmentLimit();
        java.lang.String str5 = python3Target1.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup6 = python3Target1.loadTemplates();
        org.stringtemplate.v4.STGroup sTGroup7 = python3Target1.getTemplates();
        java.lang.String str9 = python3Target1.getAltLabelContextStructName("\"\"DContext\"\"");
        java.lang.String str11 = python3Target1.getTargetStringLiteralFromString("\"Python3\"");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "\"\"" + "'", str3, "\"\"");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 29 + "'", int4 == 29);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Python3" + "'", str5, "Python3");
        org.junit.Assert.assertNotNull(sTGroup6);
        org.junit.Assert.assertNotNull(sTGroup7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\"\"DContext\"\"Context" + "'", str9, "\"\"DContext\"\"Context");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "\"\\\"Python3\\\"\"" + "'", str11, "\"\\\"Python3\\\"\"");
    }

    @Test
    public void test1373() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1373");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        org.antlr.v4.tool.Grammar grammar3 = null;
        org.stringtemplate.v4.ST sT4 = null;
        python3Target0.genRecognizerHeaderFile(grammar3, sT4, "");
        python3Target0.language = "Python3";
        java.util.Set<java.lang.String> strSet9 = null;
        python3Target0.badWords = strSet9;
        boolean boolean11 = python3Target0.wantsBaseVisitor();
        java.lang.String str13 = python3Target0.getImplicitSetLabel("Python3");
        org.antlr.v4.tool.Grammar grammar14 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str16 = python3Target0.getTokenTypeAsTargetLabel(grammar14, 29);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "_tsetPython3" + "'", str13, "_tsetPython3");
    }

    @Test
    public void test1374() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1374");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python3Target1.getBadWords();
        java.lang.String str4 = python3Target1.getAltLabelContextStructName("d");
        java.lang.String str5 = python3Target1.getLanguage();
        java.lang.String str6 = python3Target1.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = null;
        java.lang.String str10 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator7, "\"_tsetPython3\"", true);
        java.lang.String str11 = python3Target1.language;
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "DContext" + "'", str4, "DContext");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Python3" + "'", str5, "Python3");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "4.5.2.1" + "'", str6, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\"_tsetPython3\"" + "'", str10, "\"_tsetPython3\"");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Python3" + "'", str11, "Python3");
    }

    @Test
    public void test1375() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1375");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        python3Target0.language = "";
        org.antlr.v4.codegen.target.Python3Target python3Target3 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean4 = python3Target3.supportsOverloadedMethods();
        java.lang.String str5 = python3Target3.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = null;
        java.lang.String str9 = python3Target3.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator6, "", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = null;
        python3Target3.gen = codeGenerator10;
        java.lang.String[] strArray19 = new java.lang.String[] { "\"\"\"\"", "\\12", "\"\"", "4.5.2.1", "", "\"\"\"\"", "\"\"" };
        java.util.LinkedHashSet<java.lang.String> strSet20 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet20, strArray19);
        python3Target3.badWords = strSet20;
        python3Target0.badWords = strSet20;
        java.lang.String str25 = python3Target0.encodeIntAsCharEscape((int) (byte) 100);
        java.lang.String str26 = python3Target0.getLanguage();
        java.lang.String str28 = python3Target0.getTargetStringLiteralFromString("\"\\0\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator29 = null;
        python3Target0.gen = codeGenerator29;
        org.stringtemplate.v4.STGroup sTGroup31 = python3Target0.templates;
        org.stringtemplate.v4.STGroup sTGroup32 = python3Target0.templates;
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "4.5.2.1" + "'", str5, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\"\"" + "'", str9, "\"\"");
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "d" + "'", str25, "d");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "\"\"\\0\"\"" + "'", str28, "\"\"\\0\"\"");
        org.junit.Assert.assertNull(sTGroup31);
        org.junit.Assert.assertNull(sTGroup32);
    }

    @Test
    public void test1376() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1376");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        org.antlr.v4.tool.Grammar grammar3 = null;
        org.stringtemplate.v4.ST sT4 = null;
        python3Target0.genRecognizerHeaderFile(grammar3, sT4, "");
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = python3Target0.getCodeGenerator();
        java.util.Set<java.lang.String> strSet8 = python3Target0.badWords;
        boolean boolean9 = python3Target0.templatesExist();
        java.lang.String str10 = python3Target0.getVersion();
        org.antlr.v4.tool.Rule rule11 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str12 = python3Target0.getRuleFunctionContextStructName(rule11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertNull(codeGenerator7);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "4.5.2.1" + "'", str10, "4.5.2.1");
    }

    @Test
    public void test1377() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1377");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.lang.String str3 = python3Target1.getTargetStringLiteralFromString("");
        int int4 = python3Target1.getSerializedATNSegmentLimit();
        java.lang.String str6 = python3Target1.getImplicitSetLabel("\\12");
        boolean boolean7 = python3Target1.wantsBaseVisitor();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "\"\"" + "'", str3, "\"\"");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 29 + "'", int4 == 29);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "_tset\\12" + "'", str6, "_tset\\12");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    public void test1378() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1378");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        java.util.Set<java.lang.String> strSet2 = python3Target0.badWords;
        boolean boolean3 = python3Target0.templatesExist();
        python3Target0.addBadWords();
        java.lang.String str5 = python3Target0.getLanguage();
        org.antlr.v4.tool.ast.GrammarAST grammarAST6 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean7 = python3Target0.grammarSymbolCausesIssueInGeneratedCode(grammarAST6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(str5);
    }

    @Test
    public void test1379() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1379");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python3Target1.getBadWords();
        org.antlr.v4.codegen.target.Python3Target python3Target3 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str5 = python3Target3.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.codegen.target.Python3Target python3Target6 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean7 = python3Target6.supportsOverloadedMethods();
        java.util.Set<java.lang.String> strSet8 = python3Target6.badWords;
        python3Target3.badWords = strSet8;
        python3Target1.badWords = strSet8;
        java.util.Set<java.lang.String> strSet11 = python3Target1.badWords;
        org.antlr.v4.codegen.CodeGenerator codeGenerator12 = python3Target1.getCodeGenerator();
        org.antlr.v4.tool.Grammar grammar13 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target14 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean15 = python3Target14.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup16 = python3Target14.templates;
        org.antlr.v4.tool.Grammar grammar17 = null;
        org.stringtemplate.v4.ST sT18 = null;
        python3Target14.genRecognizerHeaderFile(grammar17, sT18, "");
        python3Target14.language = "Python3";
        java.util.Set<java.lang.String> strSet23 = null;
        python3Target14.badWords = strSet23;
        org.antlr.v4.codegen.CodeGenerator codeGenerator25 = null;
        java.lang.String str28 = python3Target14.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator25, "\"Hi!Context\"", false);
        java.lang.String str30 = python3Target14.getListLabel("Python3");
        java.lang.String str32 = python3Target14.getTargetStringLiteralFromString("\\0");
        org.antlr.v4.tool.Grammar grammar33 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target34 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str36 = python3Target34.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.tool.Grammar grammar37 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target38 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean39 = python3Target38.supportsOverloadedMethods();
        java.lang.String str40 = python3Target38.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator41 = null;
        java.lang.String str44 = python3Target38.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator41, "", true);
        java.lang.String str45 = python3Target38.getVersion();
        org.antlr.v4.tool.Grammar grammar46 = null;
        int[] intArray47 = new int[] {};
        java.lang.String[] strArray48 = python3Target38.getTokenTypesAsTargetLabels(grammar46, intArray47);
        java.lang.String[] strArray49 = python3Target34.getTokenTypesAsTargetLabels(grammar37, intArray47);
        java.lang.String[] strArray50 = python3Target14.getTokenTypesAsTargetLabels(grammar33, intArray47);
        java.lang.String[] strArray51 = python3Target1.getTokenTypesAsTargetLabels(grammar13, intArray47);
        boolean boolean52 = python3Target1.templatesExist();
        org.antlr.v4.codegen.CodeGenerator codeGenerator53 = null;
        java.lang.String str56 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator53, "\\n", false);
        int int57 = python3Target1.getSerializedATNSegmentLimit();
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "\"\"\"\"\"\"" + "'", str5, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertNotNull(strSet11);
        org.junit.Assert.assertNull(codeGenerator12);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(sTGroup16);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "Hi!Context" + "'", str28, "Hi!Context");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "Python3" + "'", str30, "Python3");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "\"\\0\"" + "'", str32, "\"\\0\"");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "\"\"\"\"\"\"" + "'", str36, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "4.5.2.1" + "'", str40, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "\"\"" + "'", str44, "\"\"");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "4.5.2.1" + "'", str45, "4.5.2.1");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[]");
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertNotNull(strArray49);
        org.junit.Assert.assertNotNull(strArray50);
        org.junit.Assert.assertNotNull(strArray51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "" + "'", str56, "");
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 29 + "'", int57 == 29);
    }

    @Test
    public void test1380() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1380");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        org.antlr.v4.tool.Grammar grammar3 = null;
        org.stringtemplate.v4.ST sT4 = null;
        python3Target0.genRecognizerHeaderFile(grammar3, sT4, "");
        org.antlr.v4.codegen.target.Python3Target python3Target7 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray8 = python3Target7.targetCharValueEscape;
        python3Target0.targetCharValueEscape = strArray8;
        python3Target0.addBadWords();
        boolean boolean11 = python3Target0.supportsOverloadedMethods();
        python3Target0.language = "_tset_tset_12";
        org.antlr.v4.tool.Grammar grammar14 = null;
        org.stringtemplate.v4.ST sT15 = null;
        // The following exception was thrown during execution in test generation
        try {
            python3Target0.genListenerFile(grammar14, sT15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test1381() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1381");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        java.lang.String str2 = python3Target0.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = null;
        java.lang.String str6 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator3, "", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = null;
        python3Target0.gen = codeGenerator7;
        java.lang.String[] strArray16 = new java.lang.String[] { "\"\"\"\"", "\\12", "\"\"", "4.5.2.1", "", "\"\"\"\"", "\"\"" };
        java.util.LinkedHashSet<java.lang.String> strSet17 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet17, strArray16);
        python3Target0.badWords = strSet17;
        java.lang.String str20 = python3Target0.getLanguage();
        java.lang.String str23 = python3Target0.getTargetStringLiteralFromString("_tsetHi!Context", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator24 = python3Target0.gen;
        java.lang.String str27 = python3Target0.getTargetStringLiteralFromString("_\"\"\\\"DContext\\\"\"\"", false);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "4.5.2.1" + "'", str2, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\"\"" + "'", str6, "\"\"");
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "\"_tsetHi!Context\"" + "'", str23, "\"_tsetHi!Context\"");
        org.junit.Assert.assertNull(codeGenerator24);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "_\"\"\\\"DContext\\\"\"\"" + "'", str27, "_\"\"\\\"DContext\\\"\"\"");
    }

    @Test
    public void test1382() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1382");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.lang.String str3 = python3Target1.getTargetStringLiteralFromString("");
        int int4 = python3Target1.getSerializedATNSegmentLimit();
        int int5 = python3Target1.getInlineTestSetWordSize();
        org.antlr.v4.tool.Grammar grammar6 = null;
        org.stringtemplate.v4.ST sT7 = null;
        python3Target1.genRecognizerHeaderFile(grammar6, sT7, "@");
        boolean boolean10 = python3Target1.templatesExist();
        org.stringtemplate.v4.STGroup sTGroup11 = python3Target1.loadTemplates();
        org.stringtemplate.v4.STGroup sTGroup12 = python3Target1.loadTemplates();
        java.lang.String str14 = python3Target1.getAltLabelContextStructName("\"_tset12\"");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "\"\"" + "'", str3, "\"\"");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 29 + "'", int4 == 29);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 64 + "'", int5 == 64);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(sTGroup11);
        org.junit.Assert.assertNotNull(sTGroup12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "\"_tset12\"Context" + "'", str14, "\"_tset12\"Context");
    }

    @Test
    public void test1383() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1383");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.antlr.v4.codegen.CodeGenerator codeGenerator2 = null;
        python3Target0.gen = codeGenerator2;
        java.lang.String[] strArray4 = org.antlr.v4.codegen.target.Python3Target.python3Keywords;
        org.antlr.v4.codegen.target.Python3Target.python3Keywords = strArray4;
        python3Target0.targetCharValueEscape = strArray4;
        java.lang.String[] strArray7 = python3Target0.targetCharValueEscape;
        java.lang.Class<?> wildcardClass8 = strArray7.getClass();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(wildcardClass8);
    }

    @Test
    public void test1384() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1384");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        java.lang.String str2 = python3Target0.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = null;
        java.lang.String str6 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator3, "", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = null;
        python3Target0.gen = codeGenerator7;
        int int9 = python3Target0.getSerializedATNSegmentLimit();
        java.lang.String str11 = python3Target0.getTargetStringLiteralFromString("\\1");
        java.lang.String str12 = python3Target0.language;
        org.antlr.v4.tool.Grammar grammar13 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator14 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target15 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator14);
        java.util.Set<java.lang.String> strSet16 = python3Target15.getBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator17 = null;
        python3Target15.gen = codeGenerator17;
        java.lang.String str20 = python3Target15.getAltLabelContextStructName("hi!");
        org.antlr.v4.tool.Grammar grammar21 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target22 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean23 = python3Target22.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup24 = python3Target22.templates;
        java.lang.String[] strArray27 = new java.lang.String[] { "hi!", "hi!" };
        python3Target22.targetCharValueEscape = strArray27;
        java.lang.String[] strArray30 = new java.lang.String[] { "hi!" };
        org.antlr.v4.codegen.target.Python3Target.python3Keywords = strArray30;
        python3Target22.targetCharValueEscape = strArray30;
        org.antlr.v4.tool.Grammar grammar33 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target34 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str36 = python3Target34.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator37 = null;
        python3Target34.gen = codeGenerator37;
        org.antlr.v4.tool.Grammar grammar39 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target40 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str42 = python3Target40.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.tool.Grammar grammar43 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target44 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean45 = python3Target44.supportsOverloadedMethods();
        java.lang.String str46 = python3Target44.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator47 = null;
        java.lang.String str50 = python3Target44.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator47, "", true);
        java.lang.String str51 = python3Target44.getVersion();
        org.antlr.v4.tool.Grammar grammar52 = null;
        int[] intArray53 = new int[] {};
        java.lang.String[] strArray54 = python3Target44.getTokenTypesAsTargetLabels(grammar52, intArray53);
        java.lang.String[] strArray55 = python3Target40.getTokenTypesAsTargetLabels(grammar43, intArray53);
        java.lang.String[] strArray56 = python3Target34.getTokenTypesAsTargetLabels(grammar39, intArray53);
        java.lang.String[] strArray57 = python3Target22.getTokenTypesAsTargetLabels(grammar33, intArray53);
        java.lang.String[] strArray58 = python3Target15.getTokenTypesAsTargetLabels(grammar21, intArray53);
        java.lang.String[] strArray59 = python3Target0.getTokenTypesAsTargetLabels(grammar13, intArray53);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str61 = python3Target0.getImplicitRuleLabel("\"_tset_\\\"\\\"\\\\\\\"DContext\\\\\\\"\\\"\\\"\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "4.5.2.1" + "'", str2, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\"\"" + "'", str6, "\"\"");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 29 + "'", int9 == 29);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "\"\\1\"" + "'", str11, "\"\\1\"");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "Hi!Context" + "'", str20, "Hi!Context");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNull(sTGroup24);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "\"\"\"\"\"\"" + "'", str36, "\"\"\"\"\"\"");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "\"\"\"\"\"\"" + "'", str42, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "4.5.2.1" + "'", str46, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "\"\"" + "'", str50, "\"\"");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "4.5.2.1" + "'", str51, "4.5.2.1");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[]");
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertNotNull(strArray55);
        org.junit.Assert.assertNotNull(strArray56);
        org.junit.Assert.assertNotNull(strArray57);
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertNotNull(strArray59);
    }

    @Test
    public void test1385() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1385");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!", "hi!" };
        python3Target0.targetCharValueEscape = strArray5;
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = null;
        java.lang.String str10 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator7, "", false);
        java.util.Set<java.lang.String> strSet11 = python3Target0.badWords;
        java.util.Set<java.lang.String> strSet12 = python3Target0.badWords;
        java.lang.String[] strArray13 = python3Target0.targetCharValueEscape;
        java.lang.String str14 = python3Target0.getVersion();
        org.antlr.v4.tool.Grammar grammar15 = null;
        org.stringtemplate.v4.ST sT16 = null;
        // The following exception was thrown during execution in test generation
        try {
            python3Target0.genListenerFile(grammar15, sT16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNotNull(strSet11);
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "4.5.2.1" + "'", str14, "4.5.2.1");
    }

    @Test
    public void test1386() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1386");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        org.antlr.v4.tool.Grammar grammar3 = null;
        org.stringtemplate.v4.ST sT4 = null;
        python3Target0.genRecognizerHeaderFile(grammar3, sT4, "");
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = python3Target0.getCodeGenerator();
        boolean boolean8 = python3Target0.supportsOverloadedMethods();
        org.antlr.v4.codegen.CodeGenerator codeGenerator9 = python3Target0.gen;
        python3Target0.language = "\"\\\"\\\"\\\\0\\\"\\\"\"";
        org.antlr.v4.tool.ast.GrammarAST grammarAST12 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean13 = python3Target0.grammarSymbolCausesIssueInGeneratedCode(grammarAST12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertNull(codeGenerator7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(codeGenerator9);
    }

    @Test
    public void test1387() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1387");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        org.antlr.v4.tool.Grammar grammar3 = null;
        org.stringtemplate.v4.ST sT4 = null;
        python3Target0.genRecognizerHeaderFile(grammar3, sT4, "");
        org.antlr.v4.codegen.target.Python3Target python3Target7 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray8 = python3Target7.targetCharValueEscape;
        python3Target0.targetCharValueEscape = strArray8;
        boolean boolean10 = python3Target0.supportsOverloadedMethods();
        int int11 = python3Target0.getInlineTestSetWordSize();
        org.antlr.v4.tool.Grammar grammar12 = null;
        org.stringtemplate.v4.ST sT13 = null;
        // The following exception was thrown during execution in test generation
        try {
            python3Target0.genFile(grammar12, sT13, "\"\\\\0\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 64 + "'", int11 == 64);
    }

    @Test
    public void test1388() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1388");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray1 = python3Target0.targetCharValueEscape;
        python3Target0.addBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target4 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator3);
        java.lang.String str6 = python3Target4.getTargetStringLiteralFromString("");
        int int7 = python3Target4.getSerializedATNSegmentLimit();
        boolean boolean8 = python3Target4.wantsBaseVisitor();
        org.stringtemplate.v4.STGroup sTGroup9 = python3Target4.loadTemplates();
        python3Target0.templates = sTGroup9;
        org.antlr.v4.tool.Rule rule11 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str12 = python3Target0.getRuleFunctionContextStructName(rule11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\"\"" + "'", str6, "\"\"");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 29 + "'", int7 == 29);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(sTGroup9);
    }

    @Test
    public void test1389() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1389");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray1 = python3Target0.targetCharValueEscape;
        python3Target0.addBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = python3Target0.gen;
        java.lang.Class<?> wildcardClass4 = python3Target0.getClass();
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertNull(codeGenerator3);
        org.junit.Assert.assertNotNull(wildcardClass4);
    }

    @Test
    public void test1390() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1390");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        org.antlr.v4.tool.Grammar grammar3 = null;
        org.stringtemplate.v4.ST sT4 = null;
        python3Target0.genRecognizerHeaderFile(grammar3, sT4, "");
        org.antlr.v4.codegen.target.Python3Target python3Target7 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray8 = python3Target7.targetCharValueEscape;
        python3Target0.targetCharValueEscape = strArray8;
        boolean boolean10 = python3Target0.supportsOverloadedMethods();
        org.antlr.v4.codegen.CodeGenerator codeGenerator11 = null;
        python3Target0.gen = codeGenerator11;
        boolean boolean13 = python3Target0.wantsBaseVisitor();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test1391() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1391");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray1 = python3Target0.targetCharValueEscape;
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = null;
        java.lang.String str6 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator3, "\"\\12\"", false);
        int int7 = python3Target0.getSerializedATNSegmentLimit();
        boolean boolean8 = python3Target0.templatesExist();
        boolean boolean9 = python3Target0.supportsOverloadedMethods();
        org.antlr.v4.tool.Grammar grammar10 = null;
        org.stringtemplate.v4.ST sT11 = null;
        python3Target0.genRecognizerHeaderFile(grammar10, sT11, "_tsetPython3");
        java.util.Set<java.lang.String> strSet14 = python3Target0.badWords;
        org.antlr.v4.codegen.CodeGenerator codeGenerator15 = null;
        python3Target0.gen = codeGenerator15;
        org.antlr.v4.codegen.CodeGenerator codeGenerator17 = null;
        python3Target0.gen = codeGenerator17;
        org.antlr.v4.tool.Grammar grammar19 = null;
        org.stringtemplate.v4.ST sT20 = null;
        python3Target0.genRecognizerHeaderFile(grammar19, sT20, "_tset_12");
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "12" + "'", str6, "12");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 29 + "'", int7 == 29);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(strSet14);
    }

    @Test
    public void test1392() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1392");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray1 = python3Target0.targetCharValueEscape;
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        int int3 = python3Target0.getInlineTestSetWordSize();
        boolean boolean4 = python3Target0.supportsOverloadedMethods();
        java.lang.String str6 = python3Target0.encodeIntAsCharEscape(64);
        java.lang.String str8 = python3Target0.encodeIntAsCharEscape((int) (short) 1);
        python3Target0.addBadWords();
        org.antlr.v4.tool.Grammar grammar10 = null;
        org.stringtemplate.v4.ST sT11 = null;
        // The following exception was thrown during execution in test generation
        try {
            python3Target0.genFile(grammar10, sT11, "\"\\\"\\\"4.5.2.1\\\"\\\"\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 64 + "'", int3 == 64);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "@" + "'", str6, "@");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\\1" + "'", str8, "\\1");
    }

    @Test
    public void test1393() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1393");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        java.lang.String str2 = python3Target0.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = null;
        java.lang.String str6 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator3, "", true);
        java.lang.String str7 = python3Target0.getVersion();
        org.antlr.v4.codegen.target.Python3Target python3Target8 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean9 = python3Target8.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup10 = python3Target8.templates;
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "hi!" };
        python3Target8.targetCharValueEscape = strArray13;
        java.lang.String[] strArray16 = new java.lang.String[] { "hi!" };
        org.antlr.v4.codegen.target.Python3Target.python3Keywords = strArray16;
        python3Target8.targetCharValueEscape = strArray16;
        org.antlr.v4.codegen.target.Python3Target.python3Keywords = strArray16;
        python3Target0.targetCharValueEscape = strArray16;
        org.antlr.v4.codegen.CodeGenerator codeGenerator21 = python3Target0.getCodeGenerator();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str23 = python3Target0.getAltLabelContextStructName("\"_tset\"\\\\0\"\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "4.5.2.1" + "'", str2, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\"\"" + "'", str6, "\"\"");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "4.5.2.1" + "'", str7, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(sTGroup10);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertNull(codeGenerator21);
    }

    @Test
    public void test1394() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1394");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        python3Target0.language = "";
        org.antlr.v4.codegen.target.Python3Target python3Target3 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean4 = python3Target3.supportsOverloadedMethods();
        java.lang.String str5 = python3Target3.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = null;
        java.lang.String str9 = python3Target3.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator6, "", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = null;
        python3Target3.gen = codeGenerator10;
        java.lang.String[] strArray19 = new java.lang.String[] { "\"\"\"\"", "\\12", "\"\"", "4.5.2.1", "", "\"\"\"\"", "\"\"" };
        java.util.LinkedHashSet<java.lang.String> strSet20 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet20, strArray19);
        python3Target3.badWords = strSet20;
        python3Target0.badWords = strSet20;
        java.lang.String str25 = python3Target0.encodeIntAsCharEscape((int) (byte) 100);
        org.antlr.v4.tool.Grammar grammar26 = null;
        org.stringtemplate.v4.ST sT27 = null;
        python3Target0.genRecognizerHeaderFile(grammar26, sT27, "");
        org.antlr.v4.codegen.CodeGenerator codeGenerator30 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target31 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator30);
        java.util.Set<java.lang.String> strSet32 = python3Target31.getBadWords();
        org.antlr.v4.codegen.target.Python3Target python3Target33 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str35 = python3Target33.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.codegen.target.Python3Target python3Target36 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean37 = python3Target36.supportsOverloadedMethods();
        java.util.Set<java.lang.String> strSet38 = python3Target36.badWords;
        python3Target33.badWords = strSet38;
        python3Target31.badWords = strSet38;
        java.util.Set<java.lang.String> strSet41 = python3Target31.badWords;
        org.antlr.v4.codegen.target.Python3Target python3Target42 = new org.antlr.v4.codegen.target.Python3Target();
        python3Target42.language = "";
        org.antlr.v4.codegen.target.Python3Target python3Target45 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean46 = python3Target45.supportsOverloadedMethods();
        java.lang.String str47 = python3Target45.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator48 = null;
        java.lang.String str51 = python3Target45.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator48, "", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator52 = null;
        python3Target45.gen = codeGenerator52;
        java.lang.String[] strArray61 = new java.lang.String[] { "\"\"\"\"", "\\12", "\"\"", "4.5.2.1", "", "\"\"\"\"", "\"\"" };
        java.util.LinkedHashSet<java.lang.String> strSet62 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet62, strArray61);
        python3Target45.badWords = strSet62;
        python3Target42.badWords = strSet62;
        python3Target31.badWords = strSet62;
        java.lang.String[] strArray67 = python3Target31.targetCharValueEscape;
        python3Target0.targetCharValueEscape = strArray67;
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "4.5.2.1" + "'", str5, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\"\"" + "'", str9, "\"\"");
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "d" + "'", str25, "d");
        org.junit.Assert.assertNotNull(strSet32);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "\"\"\"\"\"\"" + "'", str35, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(strSet38);
        org.junit.Assert.assertNotNull(strSet41);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "4.5.2.1" + "'", str47, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "\"\"" + "'", str51, "\"\"");
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(strArray67);
    }

    @Test
    public void test1395() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1395");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        java.lang.String str2 = python3Target0.getVersion();
        java.lang.String str4 = python3Target0.getTargetStringLiteralFromString("12");
        boolean boolean5 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup6 = python3Target0.templates;
        boolean boolean7 = python3Target0.wantsBaseVisitor();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "4.5.2.1" + "'", str2, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "\"12\"" + "'", str4, "\"12\"");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(sTGroup6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    public void test1396() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1396");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!", "hi!" };
        python3Target0.targetCharValueEscape = strArray5;
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = null;
        java.lang.String str10 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator7, "", false);
        java.lang.String str12 = python3Target0.encodeIntAsCharEscape((int) '4');
        org.antlr.v4.tool.ast.GrammarAST grammarAST13 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str14 = python3Target0.getLoopLabel(grammarAST13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "\\64" + "'", str12, "\\64");
    }

    @Test
    public void test1397() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1397");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        java.util.Set<java.lang.String> strSet2 = python3Target0.badWords;
        boolean boolean3 = python3Target0.supportsOverloadedMethods();
        boolean boolean4 = python3Target0.supportsOverloadedMethods();
        java.lang.String str6 = python3Target0.getTargetStringLiteralFromString("\"\"hi!\"\"");
        int int7 = python3Target0.getSerializedATNSegmentLimit();
        java.lang.String str8 = python3Target0.language;
        java.lang.Class<?> wildcardClass9 = python3Target0.getClass();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\"\"\"hi!\"\"\"" + "'", str6, "\"\"\"hi!\"\"\"");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 29 + "'", int7 == 29);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test1398() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1398");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python3Target1.getBadWords();
        java.lang.String str4 = python3Target1.getAltLabelContextStructName("d");
        org.stringtemplate.v4.STGroup sTGroup5 = python3Target1.getTemplates();
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = null;
        java.lang.String str9 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator6, "", true);
        org.antlr.v4.tool.Grammar grammar10 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target11 = new org.antlr.v4.codegen.target.Python3Target();
        python3Target11.language = "";
        org.antlr.v4.codegen.target.Python3Target python3Target14 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean15 = python3Target14.supportsOverloadedMethods();
        java.lang.String str16 = python3Target14.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator17 = null;
        java.lang.String str20 = python3Target14.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator17, "", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator21 = null;
        python3Target14.gen = codeGenerator21;
        java.lang.String[] strArray30 = new java.lang.String[] { "\"\"\"\"", "\\12", "\"\"", "4.5.2.1", "", "\"\"\"\"", "\"\"" };
        java.util.LinkedHashSet<java.lang.String> strSet31 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet31, strArray30);
        python3Target14.badWords = strSet31;
        python3Target11.badWords = strSet31;
        java.lang.String str36 = python3Target11.encodeIntAsCharEscape((int) (byte) 100);
        java.lang.String str37 = python3Target11.getLanguage();
        java.lang.String[] strArray38 = new java.lang.String[] {};
        python3Target11.targetCharValueEscape = strArray38;
        org.antlr.v4.tool.Grammar grammar40 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target41 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean42 = python3Target41.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup43 = python3Target41.templates;
        java.lang.String[] strArray46 = new java.lang.String[] { "hi!", "hi!" };
        python3Target41.targetCharValueEscape = strArray46;
        org.antlr.v4.codegen.CodeGenerator codeGenerator48 = null;
        java.lang.String str51 = python3Target41.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator48, "", false);
        java.util.Set<java.lang.String> strSet52 = python3Target41.badWords;
        java.lang.String str54 = python3Target41.getTargetStringLiteralFromString("12");
        int int55 = python3Target41.getSerializedATNSegmentLimit();
        boolean boolean56 = python3Target41.supportsOverloadedMethods();
        org.antlr.v4.tool.Grammar grammar57 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target58 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean59 = python3Target58.supportsOverloadedMethods();
        java.util.Set<java.lang.String> strSet60 = python3Target58.badWords;
        boolean boolean61 = python3Target58.templatesExist();
        java.lang.String str62 = python3Target58.getLanguage();
        org.antlr.v4.tool.Grammar grammar63 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target64 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str66 = python3Target64.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator67 = null;
        python3Target64.gen = codeGenerator67;
        org.antlr.v4.tool.Grammar grammar69 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target70 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str72 = python3Target70.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.tool.Grammar grammar73 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target74 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean75 = python3Target74.supportsOverloadedMethods();
        java.lang.String str76 = python3Target74.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator77 = null;
        java.lang.String str80 = python3Target74.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator77, "", true);
        java.lang.String str81 = python3Target74.getVersion();
        org.antlr.v4.tool.Grammar grammar82 = null;
        int[] intArray83 = new int[] {};
        java.lang.String[] strArray84 = python3Target74.getTokenTypesAsTargetLabels(grammar82, intArray83);
        java.lang.String[] strArray85 = python3Target70.getTokenTypesAsTargetLabels(grammar73, intArray83);
        java.lang.String[] strArray86 = python3Target64.getTokenTypesAsTargetLabels(grammar69, intArray83);
        java.lang.String[] strArray87 = python3Target58.getTokenTypesAsTargetLabels(grammar63, intArray83);
        java.lang.String[] strArray88 = python3Target41.getTokenTypesAsTargetLabels(grammar57, intArray83);
        java.lang.String[] strArray89 = python3Target11.getTokenTypesAsTargetLabels(grammar40, intArray83);
        java.lang.String[] strArray90 = python3Target1.getTokenTypesAsTargetLabels(grammar10, intArray83);
        java.lang.String str92 = python3Target1.encodeIntAsCharEscape((int) (short) 10);
        org.antlr.v4.tool.ast.GrammarAST grammarAST93 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str94 = python3Target1.getLoopLabel(grammarAST93);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "DContext" + "'", str4, "DContext");
        org.junit.Assert.assertNotNull(sTGroup5);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\"\"" + "'", str9, "\"\"");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "4.5.2.1" + "'", str16, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "\"\"" + "'", str20, "\"\"");
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "d" + "'", str36, "d");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "" + "'", str37, "");
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNull(sTGroup43);
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "" + "'", str51, "");
        org.junit.Assert.assertNotNull(strSet52);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "\"12\"" + "'", str54, "\"12\"");
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 29 + "'", int55 == 29);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(strSet60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNull(str62);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "\"\"\"\"\"\"" + "'", str66, "\"\"\"\"\"\"");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "\"\"\"\"\"\"" + "'", str72, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "4.5.2.1" + "'", str76, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "\"\"" + "'", str80, "\"\"");
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "4.5.2.1" + "'", str81, "4.5.2.1");
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[]");
        org.junit.Assert.assertNotNull(strArray84);
        org.junit.Assert.assertNotNull(strArray85);
        org.junit.Assert.assertNotNull(strArray86);
        org.junit.Assert.assertNotNull(strArray87);
        org.junit.Assert.assertNotNull(strArray88);
        org.junit.Assert.assertNotNull(strArray89);
        org.junit.Assert.assertNotNull(strArray90);
        org.junit.Assert.assertEquals("'" + str92 + "' != '" + "\\n" + "'", str92, "\\n");
    }

    @Test
    public void test1399() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1399");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        java.lang.String str2 = python3Target0.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = python3Target0.getCodeGenerator();
        org.stringtemplate.v4.STGroup sTGroup4 = null;
        python3Target0.templates = sTGroup4;
        org.stringtemplate.v4.STGroup sTGroup6 = python3Target0.templates;
        java.lang.String[] strArray7 = python3Target0.targetCharValueEscape;
        java.util.Set<java.lang.String> strSet8 = python3Target0.badWords;
        java.util.Set<java.lang.String> strSet9 = python3Target0.getBadWords();
        java.lang.String str11 = python3Target0.getTargetStringLiteralFromString("\"\\\\0\"");
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "4.5.2.1" + "'", str2, "4.5.2.1");
        org.junit.Assert.assertNull(codeGenerator3);
        org.junit.Assert.assertNull(sTGroup6);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertNotNull(strSet9);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "\"\"\\\\0\"\"" + "'", str11, "\"\"\\\\0\"\"");
    }

    @Test
    public void test1400() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1400");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.lang.String str3 = python3Target1.getTargetStringLiteralFromString("");
        int int4 = python3Target1.getSerializedATNSegmentLimit();
        boolean boolean5 = python3Target1.wantsBaseVisitor();
        org.stringtemplate.v4.STGroup sTGroup6 = python3Target1.loadTemplates();
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = python3Target1.gen;
        boolean boolean8 = python3Target1.wantsBaseListener();
        java.lang.String str10 = python3Target1.getImplicitSetLabel("Hi!Context");
        org.antlr.v4.tool.ast.GrammarAST grammarAST11 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean12 = python3Target1.grammarSymbolCausesIssueInGeneratedCode(grammarAST11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "\"\"" + "'", str3, "\"\"");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 29 + "'", int4 == 29);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(sTGroup6);
        org.junit.Assert.assertNull(codeGenerator7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "_tsetHi!Context" + "'", str10, "_tsetHi!Context");
    }

    @Test
    public void test1401() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1401");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        java.lang.String str2 = python3Target0.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = null;
        java.lang.String str6 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator3, "", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = null;
        python3Target0.gen = codeGenerator7;
        java.lang.String[] strArray16 = new java.lang.String[] { "\"\"\"\"", "\\12", "\"\"", "4.5.2.1", "", "\"\"\"\"", "\"\"" };
        java.util.LinkedHashSet<java.lang.String> strSet17 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet17, strArray16);
        python3Target0.badWords = strSet17;
        org.antlr.v4.codegen.CodeGenerator codeGenerator20 = python3Target0.gen;
        java.lang.String str21 = python3Target0.getVersion();
        int int22 = python3Target0.getSerializedATNSegmentLimit();
        java.lang.String str23 = python3Target0.getLanguage();
        java.lang.String str24 = python3Target0.getLanguage();
        int int25 = python3Target0.getSerializedATNSegmentLimit();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "4.5.2.1" + "'", str2, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\"\"" + "'", str6, "\"\"");
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNull(codeGenerator20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "4.5.2.1" + "'", str21, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 29 + "'", int22 == 29);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 29 + "'", int25 == 29);
    }

    @Test
    public void test1402() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1402");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.lang.String str2 = python3Target1.getLanguage();
        org.antlr.v4.codegen.target.Python3Target python3Target3 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean4 = python3Target3.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup5 = python3Target3.templates;
        java.lang.String[] strArray8 = new java.lang.String[] { "hi!", "hi!" };
        python3Target3.targetCharValueEscape = strArray8;
        java.lang.String str11 = python3Target3.getTargetStringLiteralFromString("\"\"");
        org.stringtemplate.v4.STGroup sTGroup12 = null;
        python3Target3.templates = sTGroup12;
        java.lang.String[] strArray14 = python3Target3.targetCharValueEscape;
        int int15 = python3Target3.getInlineTestSetWordSize();
        org.antlr.v4.codegen.CodeGenerator codeGenerator16 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target17 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator16);
        java.lang.String str19 = python3Target17.getTargetStringLiteralFromString("");
        int int20 = python3Target17.getSerializedATNSegmentLimit();
        boolean boolean21 = python3Target17.wantsBaseVisitor();
        org.stringtemplate.v4.STGroup sTGroup22 = python3Target17.loadTemplates();
        org.antlr.v4.codegen.CodeGenerator codeGenerator23 = python3Target17.gen;
        org.antlr.v4.codegen.target.Python3Target python3Target24 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean25 = python3Target24.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup26 = python3Target24.templates;
        org.antlr.v4.tool.Grammar grammar27 = null;
        org.stringtemplate.v4.ST sT28 = null;
        python3Target24.genRecognizerHeaderFile(grammar27, sT28, "");
        python3Target24.language = "Python3";
        int int33 = python3Target24.getSerializedATNSegmentLimit();
        org.stringtemplate.v4.STGroup sTGroup34 = python3Target24.loadTemplates();
        python3Target17.templates = sTGroup34;
        java.lang.String str36 = python3Target17.getVersion();
        java.util.Set<java.lang.String> strSet37 = python3Target17.getBadWords();
        python3Target3.badWords = strSet37;
        java.lang.String[] strArray39 = org.antlr.v4.codegen.target.Python3Target.python3Keywords;
        org.antlr.v4.codegen.target.Python3Target.python3Keywords = strArray39;
        python3Target3.targetCharValueEscape = strArray39;
        org.antlr.v4.codegen.target.Python3Target.python3Keywords = strArray39;
        python3Target1.targetCharValueEscape = strArray39;
        org.antlr.v4.codegen.target.Python3Target.python3Keywords = strArray39;
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "Python3" + "'", str2, "Python3");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(sTGroup5);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "\"\"\"\"" + "'", str11, "\"\"\"\"");
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 64 + "'", int15 == 64);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "\"\"" + "'", str19, "\"\"");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 29 + "'", int20 == 29);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(sTGroup22);
        org.junit.Assert.assertNull(codeGenerator23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNull(sTGroup26);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 29 + "'", int33 == 29);
        org.junit.Assert.assertNotNull(sTGroup34);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "4.5.2.1" + "'", str36, "4.5.2.1");
        org.junit.Assert.assertNotNull(strSet37);
        org.junit.Assert.assertNotNull(strArray39);
    }

    @Test
    public void test1403() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1403");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        java.lang.String str2 = python3Target0.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = null;
        java.lang.String str6 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator3, "", true);
        java.lang.String str7 = python3Target0.getVersion();
        boolean boolean8 = python3Target0.templatesExist();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str10 = python3Target0.getImplicitSetLabel("\"\\\"4.5.2.1\\\"\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "4.5.2.1" + "'", str2, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\"\"" + "'", str6, "\"\"");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "4.5.2.1" + "'", str7, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test1404() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1404");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        java.lang.String str2 = python3Target0.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = python3Target0.getCodeGenerator();
        org.stringtemplate.v4.STGroup sTGroup4 = null;
        python3Target0.templates = sTGroup4;
        org.stringtemplate.v4.STGroup sTGroup6 = python3Target0.templates;
        java.lang.String[] strArray7 = python3Target0.targetCharValueEscape;
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = null;
        java.lang.String str11 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator8, "\\\"4.5.2.1\\\"", true);
        org.antlr.v4.tool.Grammar grammar12 = null;
        org.stringtemplate.v4.ST sT13 = null;
        python3Target0.genRecognizerHeaderFile(grammar12, sT13, "_tset_12");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str17 = python3Target0.getListLabel("\"\\\"4.5.2.1\\\"\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "4.5.2.1" + "'", str2, "4.5.2.1");
        org.junit.Assert.assertNull(codeGenerator3);
        org.junit.Assert.assertNull(sTGroup6);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "\"\\\"4.5.2.1\\\"\"" + "'", str11, "\"\\\"4.5.2.1\\\"\"");
    }

    @Test
    public void test1405() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1405");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!", "hi!" };
        python3Target0.targetCharValueEscape = strArray5;
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = null;
        java.lang.String str10 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator7, "", false);
        java.util.Set<java.lang.String> strSet11 = python3Target0.badWords;
        java.lang.String str13 = python3Target0.getTargetStringLiteralFromString("12");
        boolean boolean14 = python3Target0.wantsBaseVisitor();
        java.lang.String str15 = python3Target0.language;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str17 = python3Target0.getListLabel("\"_tset12\"Context");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNotNull(strSet11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "\"12\"" + "'", str13, "\"12\"");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(str15);
    }

    @Test
    public void test1406() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1406");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        org.antlr.v4.tool.Grammar grammar3 = null;
        org.stringtemplate.v4.ST sT4 = null;
        python3Target0.genRecognizerHeaderFile(grammar3, sT4, "");
        python3Target0.language = "Python3";
        java.util.Set<java.lang.String> strSet9 = null;
        python3Target0.badWords = strSet9;
        org.stringtemplate.v4.STGroup sTGroup11 = python3Target0.templates;
        org.antlr.v4.codegen.CodeGenerator codeGenerator12 = null;
        java.lang.String str15 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator12, "\"\\\"\\\"\\\"\\\\\\\"\\\\\\\"hi!\\\\\\\"\\\\\\\"\\\"\\\"\\\"\"", true);
        boolean boolean16 = python3Target0.supportsOverloadedMethods();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertNull(sTGroup11);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "\"\\\"\\\"\\\"\\\\\\\"\\\\\\\"hi!\\\\\\\"\\\\\\\"\\\"\\\"\\\"\"" + "'", str15, "\"\\\"\\\"\\\"\\\\\\\"\\\\\\\"hi!\\\\\\\"\\\\\\\"\\\"\\\"\\\"\"");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    }

    @Test
    public void test1407() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1407");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        java.lang.String str2 = python3Target0.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = null;
        java.lang.String str6 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator3, "", true);
        java.lang.String str7 = python3Target0.getVersion();
        org.antlr.v4.tool.Grammar grammar8 = null;
        int[] intArray9 = new int[] {};
        java.lang.String[] strArray10 = python3Target0.getTokenTypesAsTargetLabels(grammar8, intArray9);
        java.lang.String[] strArray11 = python3Target0.targetCharValueEscape;
        java.util.Set<java.lang.String> strSet12 = python3Target0.badWords;
        python3Target0.addBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator14 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target15 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator14);
        java.util.Set<java.lang.String> strSet16 = python3Target15.getBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator17 = null;
        python3Target15.gen = codeGenerator17;
        org.antlr.v4.tool.Grammar grammar19 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target20 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean21 = python3Target20.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup22 = python3Target20.templates;
        org.antlr.v4.tool.Grammar grammar23 = null;
        org.stringtemplate.v4.ST sT24 = null;
        python3Target20.genRecognizerHeaderFile(grammar23, sT24, "");
        boolean boolean27 = python3Target20.supportsOverloadedMethods();
        python3Target20.language = "\"\\12\"";
        org.antlr.v4.tool.Grammar grammar30 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator31 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target32 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator31);
        java.util.Set<java.lang.String> strSet33 = python3Target32.getBadWords();
        java.lang.String str35 = python3Target32.getAltLabelContextStructName("d");
        java.lang.String str37 = python3Target32.getTargetStringLiteralFromString("\"\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator38 = python3Target32.getCodeGenerator();
        org.antlr.v4.tool.Grammar grammar39 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator40 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target41 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator40);
        java.util.Set<java.lang.String> strSet42 = python3Target41.getBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator43 = null;
        python3Target41.gen = codeGenerator43;
        java.lang.String str46 = python3Target41.getAltLabelContextStructName("hi!");
        java.lang.String str49 = python3Target41.getTargetStringLiteralFromString("\"hi!\"", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator50 = null;
        python3Target41.gen = codeGenerator50;
        org.antlr.v4.tool.Grammar grammar52 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target53 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray54 = python3Target53.targetCharValueEscape;
        org.stringtemplate.v4.STGroup sTGroup55 = python3Target53.templates;
        int int56 = python3Target53.getInlineTestSetWordSize();
        org.antlr.v4.codegen.CodeGenerator codeGenerator57 = python3Target53.gen;
        org.antlr.v4.tool.Grammar grammar58 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target59 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str61 = python3Target59.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.tool.Grammar grammar62 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target63 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean64 = python3Target63.supportsOverloadedMethods();
        java.lang.String str65 = python3Target63.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator66 = null;
        java.lang.String str69 = python3Target63.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator66, "", true);
        java.lang.String str70 = python3Target63.getVersion();
        org.antlr.v4.tool.Grammar grammar71 = null;
        int[] intArray72 = new int[] {};
        java.lang.String[] strArray73 = python3Target63.getTokenTypesAsTargetLabels(grammar71, intArray72);
        java.lang.String[] strArray74 = python3Target59.getTokenTypesAsTargetLabels(grammar62, intArray72);
        java.lang.String[] strArray75 = python3Target53.getTokenTypesAsTargetLabels(grammar58, intArray72);
        java.lang.String[] strArray76 = python3Target41.getTokenTypesAsTargetLabels(grammar52, intArray72);
        java.lang.String[] strArray77 = python3Target32.getTokenTypesAsTargetLabels(grammar39, intArray72);
        java.lang.String[] strArray78 = python3Target20.getTokenTypesAsTargetLabels(grammar30, intArray72);
        java.lang.String[] strArray79 = python3Target15.getTokenTypesAsTargetLabels(grammar19, intArray72);
        python3Target0.targetCharValueEscape = strArray79;
        org.antlr.v4.codegen.CodeGenerator codeGenerator81 = null;
        java.lang.String str84 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator81, "\\nContext", false);
        boolean boolean85 = python3Target0.supportsOverloadedMethods();
        java.lang.String[] strArray86 = python3Target0.targetCharValueEscape;
        org.stringtemplate.v4.STGroup sTGroup87 = python3Target0.templates;
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "4.5.2.1" + "'", str2, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\"\"" + "'", str6, "\"\"");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "4.5.2.1" + "'", str7, "4.5.2.1");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[]");
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(sTGroup22);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(strSet33);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "DContext" + "'", str35, "DContext");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "\"\\\"\\\"\"" + "'", str37, "\"\\\"\\\"\"");
        org.junit.Assert.assertNull(codeGenerator38);
        org.junit.Assert.assertNotNull(strSet42);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "Hi!Context" + "'", str46, "Hi!Context");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "\"\\\"hi!\\\"\"" + "'", str49, "\"\\\"hi!\\\"\"");
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertNull(sTGroup55);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 64 + "'", int56 == 64);
        org.junit.Assert.assertNull(codeGenerator57);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "\"\"\"\"\"\"" + "'", str61, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "4.5.2.1" + "'", str65, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "\"\"" + "'", str69, "\"\"");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "4.5.2.1" + "'", str70, "4.5.2.1");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[]");
        org.junit.Assert.assertNotNull(strArray73);
        org.junit.Assert.assertNotNull(strArray74);
        org.junit.Assert.assertNotNull(strArray75);
        org.junit.Assert.assertNotNull(strArray76);
        org.junit.Assert.assertNotNull(strArray77);
        org.junit.Assert.assertNotNull(strArray78);
        org.junit.Assert.assertNotNull(strArray79);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "nContex" + "'", str84, "nContex");
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertNotNull(strArray86);
        org.junit.Assert.assertNull(sTGroup87);
    }

    @Test
    public void test1408() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1408");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!", "hi!" };
        python3Target0.targetCharValueEscape = strArray5;
        java.lang.String[] strArray8 = new java.lang.String[] { "hi!" };
        org.antlr.v4.codegen.target.Python3Target.python3Keywords = strArray8;
        python3Target0.targetCharValueEscape = strArray8;
        org.antlr.v4.codegen.target.Python3Target python3Target11 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean12 = python3Target11.supportsOverloadedMethods();
        java.lang.String str13 = python3Target11.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator14 = null;
        java.lang.String str17 = python3Target11.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator14, "", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator18 = null;
        python3Target11.gen = codeGenerator18;
        java.lang.String[] strArray27 = new java.lang.String[] { "\"\"\"\"", "\\12", "\"\"", "4.5.2.1", "", "\"\"\"\"", "\"\"" };
        java.util.LinkedHashSet<java.lang.String> strSet28 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet28, strArray27);
        python3Target11.badWords = strSet28;
        python3Target0.badWords = strSet28;
        java.lang.String[] strArray32 = python3Target0.targetCharValueEscape;
        org.antlr.v4.tool.ast.GrammarAST grammarAST33 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean34 = python3Target0.grammarSymbolCausesIssueInGeneratedCode(grammarAST33);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "4.5.2.1" + "'", str13, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "\"\"" + "'", str17, "\"\"");
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(strArray32);
    }

    @Test
    public void test1409() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1409");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        java.lang.String str2 = python3Target0.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = null;
        java.lang.String str6 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator3, "", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = null;
        python3Target0.gen = codeGenerator7;
        java.lang.String[] strArray16 = new java.lang.String[] { "\"\"\"\"", "\\12", "\"\"", "4.5.2.1", "", "\"\"\"\"", "\"\"" };
        java.util.LinkedHashSet<java.lang.String> strSet17 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet17, strArray16);
        python3Target0.badWords = strSet17;
        org.antlr.v4.tool.Grammar grammar20 = null;
        org.stringtemplate.v4.ST sT21 = null;
        python3Target0.genRecognizerHeaderFile(grammar20, sT21, "\"\"");
        java.lang.String str25 = python3Target0.encodeIntAsCharEscape((int) (byte) 10);
        java.lang.String str26 = python3Target0.language;
        java.util.Set<java.lang.String> strSet27 = python3Target0.getBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator28 = null;
        java.lang.String str31 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator28, "", false);
        org.antlr.v4.codegen.model.RuleFunction ruleFunction32 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str33 = python3Target0.getRuleFunctionContextStructName(ruleFunction32);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "4.5.2.1" + "'", str2, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\"\"" + "'", str6, "\"\"");
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "\\12" + "'", str25, "\\12");
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(strSet27);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "" + "'", str31, "");
    }

    @Test
    public void test1410() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1410");
        org.antlr.v4.codegen.target.Python3Target.PythonStringRenderer pythonStringRenderer0 = new org.antlr.v4.codegen.target.Python3Target.PythonStringRenderer();
        java.lang.Object obj1 = null;
        java.util.Locale locale3 = null;
        java.lang.String str4 = pythonStringRenderer0.toString(obj1, "\"\"\"\"\"\"", locale3);
        org.antlr.v4.codegen.target.Python3Target python3Target5 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean6 = python3Target5.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup7 = python3Target5.templates;
        org.antlr.v4.tool.Grammar grammar8 = null;
        org.stringtemplate.v4.ST sT9 = null;
        python3Target5.genRecognizerHeaderFile(grammar8, sT9, "");
        org.antlr.v4.codegen.target.Python3Target python3Target12 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray13 = python3Target12.targetCharValueEscape;
        python3Target5.targetCharValueEscape = strArray13;
        python3Target5.addBadWords();
        int int16 = python3Target5.getInlineTestSetWordSize();
        java.lang.String[] strArray17 = python3Target5.targetCharValueEscape;
        java.util.Locale locale19 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str20 = pythonStringRenderer0.toString((java.lang.Object) python3Target5, "\"\"hi!\"\"", locale19);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: org.antlr.v4.codegen.target.Python3Target cannot be cast to java.lang.String");
        } catch (java.lang.ClassCastException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "\"\"\"\"\"\"" + "'", str4, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(sTGroup7);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 64 + "'", int16 == 64);
        org.junit.Assert.assertNotNull(strArray17);
    }

    @Test
    public void test1411() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1411");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.lang.String str3 = python3Target1.getTargetStringLiteralFromString("");
        int int4 = python3Target1.getSerializedATNSegmentLimit();
        boolean boolean5 = python3Target1.wantsBaseVisitor();
        org.stringtemplate.v4.STGroup sTGroup6 = python3Target1.loadTemplates();
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = python3Target1.gen;
        org.antlr.v4.codegen.target.Python3Target python3Target8 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean9 = python3Target8.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup10 = python3Target8.templates;
        org.antlr.v4.tool.Grammar grammar11 = null;
        org.stringtemplate.v4.ST sT12 = null;
        python3Target8.genRecognizerHeaderFile(grammar11, sT12, "");
        python3Target8.language = "Python3";
        int int17 = python3Target8.getSerializedATNSegmentLimit();
        org.stringtemplate.v4.STGroup sTGroup18 = python3Target8.loadTemplates();
        python3Target1.templates = sTGroup18;
        org.antlr.v4.codegen.CodeGenerator codeGenerator20 = null;
        python3Target1.gen = codeGenerator20;
        boolean boolean22 = python3Target1.wantsBaseVisitor();
        org.antlr.v4.tool.Grammar grammar23 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator24 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target25 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator24);
        java.util.Set<java.lang.String> strSet26 = python3Target25.getBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator27 = null;
        python3Target25.gen = codeGenerator27;
        java.lang.String str30 = python3Target25.getAltLabelContextStructName("hi!");
        java.lang.String str33 = python3Target25.getTargetStringLiteralFromString("\"hi!\"", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator34 = null;
        python3Target25.gen = codeGenerator34;
        org.antlr.v4.tool.Grammar grammar36 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target37 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray38 = python3Target37.targetCharValueEscape;
        org.stringtemplate.v4.STGroup sTGroup39 = python3Target37.templates;
        int int40 = python3Target37.getInlineTestSetWordSize();
        org.antlr.v4.codegen.CodeGenerator codeGenerator41 = python3Target37.gen;
        org.antlr.v4.tool.Grammar grammar42 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target43 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str45 = python3Target43.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.tool.Grammar grammar46 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target47 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean48 = python3Target47.supportsOverloadedMethods();
        java.lang.String str49 = python3Target47.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator50 = null;
        java.lang.String str53 = python3Target47.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator50, "", true);
        java.lang.String str54 = python3Target47.getVersion();
        org.antlr.v4.tool.Grammar grammar55 = null;
        int[] intArray56 = new int[] {};
        java.lang.String[] strArray57 = python3Target47.getTokenTypesAsTargetLabels(grammar55, intArray56);
        java.lang.String[] strArray58 = python3Target43.getTokenTypesAsTargetLabels(grammar46, intArray56);
        java.lang.String[] strArray59 = python3Target37.getTokenTypesAsTargetLabels(grammar42, intArray56);
        java.lang.String[] strArray60 = python3Target25.getTokenTypesAsTargetLabels(grammar36, intArray56);
        java.lang.String str62 = python3Target25.getAltLabelContextStructName("\"Python3\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator63 = python3Target25.gen;
        org.antlr.v4.tool.Grammar grammar64 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target65 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean66 = python3Target65.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup67 = python3Target65.templates;
        java.lang.String[] strArray70 = new java.lang.String[] { "hi!", "hi!" };
        python3Target65.targetCharValueEscape = strArray70;
        org.antlr.v4.codegen.CodeGenerator codeGenerator72 = null;
        java.lang.String str75 = python3Target65.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator72, "", false);
        org.antlr.v4.tool.Grammar grammar76 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target77 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str79 = python3Target77.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.tool.Grammar grammar80 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target81 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean82 = python3Target81.supportsOverloadedMethods();
        java.lang.String str83 = python3Target81.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator84 = null;
        java.lang.String str87 = python3Target81.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator84, "", true);
        java.lang.String str88 = python3Target81.getVersion();
        org.antlr.v4.tool.Grammar grammar89 = null;
        int[] intArray90 = new int[] {};
        java.lang.String[] strArray91 = python3Target81.getTokenTypesAsTargetLabels(grammar89, intArray90);
        java.lang.String[] strArray92 = python3Target77.getTokenTypesAsTargetLabels(grammar80, intArray90);
        java.lang.String[] strArray93 = python3Target65.getTokenTypesAsTargetLabels(grammar76, intArray90);
        java.lang.String[] strArray94 = python3Target25.getTokenTypesAsTargetLabels(grammar64, intArray90);
        java.lang.String[] strArray95 = python3Target1.getTokenTypesAsTargetLabels(grammar23, intArray90);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str97 = python3Target1.getElementName("");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "\"\"" + "'", str3, "\"\"");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 29 + "'", int4 == 29);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(sTGroup6);
        org.junit.Assert.assertNull(codeGenerator7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(sTGroup10);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 29 + "'", int17 == 29);
        org.junit.Assert.assertNotNull(sTGroup18);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(strSet26);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "Hi!Context" + "'", str30, "Hi!Context");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "\"\\\"hi!\\\"\"" + "'", str33, "\"\\\"hi!\\\"\"");
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertNull(sTGroup39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 64 + "'", int40 == 64);
        org.junit.Assert.assertNull(codeGenerator41);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "\"\"\"\"\"\"" + "'", str45, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "4.5.2.1" + "'", str49, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "\"\"" + "'", str53, "\"\"");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "4.5.2.1" + "'", str54, "4.5.2.1");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[]");
        org.junit.Assert.assertNotNull(strArray57);
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertNotNull(strArray59);
        org.junit.Assert.assertNotNull(strArray60);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "\"Python3\"Context" + "'", str62, "\"Python3\"Context");
        org.junit.Assert.assertNull(codeGenerator63);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNull(sTGroup67);
        org.junit.Assert.assertNotNull(strArray70);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "" + "'", str75, "");
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "\"\"\"\"\"\"" + "'", str79, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "4.5.2.1" + "'", str83, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "\"\"" + "'", str87, "\"\"");
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "4.5.2.1" + "'", str88, "4.5.2.1");
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[]");
        org.junit.Assert.assertNotNull(strArray91);
        org.junit.Assert.assertNotNull(strArray92);
        org.junit.Assert.assertNotNull(strArray93);
        org.junit.Assert.assertNotNull(strArray94);
        org.junit.Assert.assertNotNull(strArray95);
    }

    @Test
    public void test1412() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1412");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        org.antlr.v4.tool.Grammar grammar3 = null;
        org.stringtemplate.v4.ST sT4 = null;
        python3Target0.genRecognizerHeaderFile(grammar3, sT4, "");
        python3Target0.language = "Python3";
        int int9 = python3Target0.getSerializedATNSegmentLimit();
        java.lang.String str11 = python3Target0.getListLabel("_tsetPython3");
        boolean boolean12 = python3Target0.wantsBaseVisitor();
        org.antlr.v4.tool.ast.GrammarAST grammarAST13 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean14 = python3Target0.grammarSymbolCausesIssueInGeneratedCode(grammarAST13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 29 + "'", int9 == 29);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "_tsetPython3" + "'", str11, "_tsetPython3");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test1413() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1413");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python3Target1.getBadWords();
        org.antlr.v4.codegen.target.Python3Target python3Target3 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str5 = python3Target3.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.codegen.target.Python3Target python3Target6 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean7 = python3Target6.supportsOverloadedMethods();
        java.util.Set<java.lang.String> strSet8 = python3Target6.badWords;
        python3Target3.badWords = strSet8;
        python3Target1.badWords = strSet8;
        java.util.Set<java.lang.String> strSet11 = python3Target1.badWords;
        org.antlr.v4.codegen.CodeGenerator codeGenerator12 = python3Target1.getCodeGenerator();
        java.lang.String str14 = python3Target1.getImplicitSetLabel("12");
        org.antlr.v4.tool.ast.GrammarAST grammarAST15 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str16 = python3Target1.getLoopLabel(grammarAST15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "\"\"\"\"\"\"" + "'", str5, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertNotNull(strSet11);
        org.junit.Assert.assertNull(codeGenerator12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "_tset12" + "'", str14, "_tset12");
    }

    @Test
    public void test1414() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1414");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python3Target1.getBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = null;
        python3Target1.gen = codeGenerator3;
        java.lang.String str6 = python3Target1.getAltLabelContextStructName("hi!");
        java.lang.String str9 = python3Target1.getTargetStringLiteralFromString("\"hi!\"", true);
        java.lang.String str11 = python3Target1.getAltLabelContextStructName("\"\"\"\"\"\"\"\"");
        boolean boolean12 = python3Target1.wantsBaseListener();
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Hi!Context" + "'", str6, "Hi!Context");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\"\\\"hi!\\\"\"" + "'", str9, "\"\\\"hi!\\\"\"");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "\"\"\"\"\"\"\"\"Context" + "'", str11, "\"\"\"\"\"\"\"\"Context");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test1415() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1415");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python3Target1.getBadWords();
        org.antlr.v4.tool.ast.GrammarAST grammarAST3 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str4 = python3Target1.getLoopLabel(grammarAST3);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet2);
    }

    @Test
    public void test1416() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1416");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        org.antlr.v4.tool.Grammar grammar3 = null;
        org.stringtemplate.v4.ST sT4 = null;
        python3Target0.genRecognizerHeaderFile(grammar3, sT4, "");
        org.antlr.v4.codegen.target.Python3Target python3Target7 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray8 = python3Target7.targetCharValueEscape;
        python3Target0.targetCharValueEscape = strArray8;
        boolean boolean10 = python3Target0.supportsOverloadedMethods();
        java.lang.String str12 = python3Target0.encodeIntAsCharEscape((int) (short) 1);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str14 = python3Target0.getImplicitSetLabel("\"\\\"\\\"\\\\1\\\"\\\"\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "\\1" + "'", str12, "\\1");
    }

    @Test
    public void test1417() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1417");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str2 = python3Target0.getTargetStringLiteralFromString("\"\"\"\"");
        java.lang.String str4 = python3Target0.getTargetStringLiteralFromString("");
        int int5 = python3Target0.getSerializedATNSegmentLimit();
        org.antlr.v4.codegen.target.Python3Target python3Target6 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray7 = python3Target6.targetCharValueEscape;
        org.stringtemplate.v4.STGroup sTGroup8 = python3Target6.templates;
        int int9 = python3Target6.getInlineTestSetWordSize();
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = python3Target6.gen;
        org.antlr.v4.tool.Grammar grammar11 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target12 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str14 = python3Target12.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.tool.Grammar grammar15 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target16 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean17 = python3Target16.supportsOverloadedMethods();
        java.lang.String str18 = python3Target16.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator19 = null;
        java.lang.String str22 = python3Target16.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator19, "", true);
        java.lang.String str23 = python3Target16.getVersion();
        org.antlr.v4.tool.Grammar grammar24 = null;
        int[] intArray25 = new int[] {};
        java.lang.String[] strArray26 = python3Target16.getTokenTypesAsTargetLabels(grammar24, intArray25);
        java.lang.String[] strArray27 = python3Target12.getTokenTypesAsTargetLabels(grammar15, intArray25);
        java.lang.String[] strArray28 = python3Target6.getTokenTypesAsTargetLabels(grammar11, intArray25);
        python3Target0.targetCharValueEscape = strArray28;
        boolean boolean30 = python3Target0.wantsBaseListener();
        org.antlr.v4.codegen.CodeGenerator codeGenerator31 = python3Target0.getCodeGenerator();
        python3Target0.addBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator33 = null;
        python3Target0.gen = codeGenerator33;
        java.lang.String str35 = python3Target0.language;
        org.antlr.v4.tool.Grammar grammar36 = null;
        org.stringtemplate.v4.ST sT37 = null;
        // The following exception was thrown during execution in test generation
        try {
            python3Target0.genFile(grammar36, sT37, "\"\\\"\\\"@\\\"\\\"\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "\"\"\"\"\"\"" + "'", str2, "\"\"\"\"\"\"");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "\"\"" + "'", str4, "\"\"");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 29 + "'", int5 == 29);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNull(sTGroup8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 64 + "'", int9 == 64);
        org.junit.Assert.assertNull(codeGenerator10);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "\"\"\"\"\"\"" + "'", str14, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "4.5.2.1" + "'", str18, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "\"\"" + "'", str22, "\"\"");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "4.5.2.1" + "'", str23, "4.5.2.1");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[]");
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNull(codeGenerator31);
        org.junit.Assert.assertNull(str35);
    }

    @Test
    public void test1418() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1418");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray1 = python3Target0.targetCharValueEscape;
        java.lang.String str2 = python3Target0.language;
        int int3 = python3Target0.getSerializedATNSegmentLimit();
        org.antlr.v4.codegen.CodeGenerator codeGenerator4 = python3Target0.getCodeGenerator();
        org.antlr.v4.codegen.CodeGenerator codeGenerator5 = null;
        java.lang.String str8 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator5, "_tset\"\\\"\\\"hi!\\\"\\\"\"", true);
        java.lang.String str9 = python3Target0.language;
        java.util.Set<java.lang.String> strSet10 = python3Target0.getBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator11 = python3Target0.getCodeGenerator();
        org.antlr.v4.codegen.CodeGenerator codeGenerator12 = null;
        python3Target0.gen = codeGenerator12;
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 29 + "'", int3 == 29);
        org.junit.Assert.assertNull(codeGenerator4);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\"tset\\\"\\\"\\\"hi!\\\"\\\"\"" + "'", str8, "\"tset\\\"\\\"\\\"hi!\\\"\\\"\"");
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(strSet10);
        org.junit.Assert.assertNull(codeGenerator11);
    }

    @Test
    public void test1419() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1419");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        org.antlr.v4.tool.Grammar grammar3 = null;
        org.stringtemplate.v4.ST sT4 = null;
        python3Target0.genRecognizerHeaderFile(grammar3, sT4, "");
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = python3Target0.getCodeGenerator();
        boolean boolean8 = python3Target0.supportsOverloadedMethods();
        org.antlr.v4.codegen.CodeGenerator codeGenerator9 = python3Target0.gen;
        python3Target0.language = "\"\\\"\\\"\\\\0\\\"\\\"\"";
        org.antlr.v4.codegen.target.Python3Target python3Target12 = new org.antlr.v4.codegen.target.Python3Target();
        python3Target12.language = "";
        org.antlr.v4.codegen.target.Python3Target python3Target15 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean16 = python3Target15.supportsOverloadedMethods();
        java.lang.String str17 = python3Target15.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator18 = null;
        java.lang.String str21 = python3Target15.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator18, "", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator22 = null;
        python3Target15.gen = codeGenerator22;
        java.lang.String[] strArray31 = new java.lang.String[] { "\"\"\"\"", "\\12", "\"\"", "4.5.2.1", "", "\"\"\"\"", "\"\"" };
        java.util.LinkedHashSet<java.lang.String> strSet32 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet32, strArray31);
        python3Target15.badWords = strSet32;
        python3Target12.badWords = strSet32;
        java.lang.String str37 = python3Target12.encodeIntAsCharEscape((int) (byte) 100);
        boolean boolean38 = python3Target12.templatesExist();
        java.util.Set<java.lang.String> strSet39 = python3Target12.getBadWords();
        java.lang.String[] strArray40 = python3Target12.targetCharValueEscape;
        python3Target0.targetCharValueEscape = strArray40;
        org.antlr.v4.tool.ast.GrammarAST grammarAST42 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean43 = python3Target0.grammarSymbolCausesIssueInGeneratedCode(grammarAST42);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertNull(codeGenerator7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(codeGenerator9);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "4.5.2.1" + "'", str17, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "\"\"" + "'", str21, "\"\"");
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "d" + "'", str37, "d");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(strSet39);
        org.junit.Assert.assertNotNull(strArray40);
    }

    @Test
    public void test1420() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1420");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.lang.String str3 = python3Target1.getTargetStringLiteralFromString("");
        int int4 = python3Target1.getSerializedATNSegmentLimit();
        boolean boolean5 = python3Target1.wantsBaseVisitor();
        org.stringtemplate.v4.STGroup sTGroup6 = python3Target1.loadTemplates();
        java.lang.String str7 = python3Target1.getLanguage();
        java.lang.String str9 = python3Target1.getTargetStringLiteralFromString("\"\"\\0\"\"");
        org.stringtemplate.v4.STGroup sTGroup10 = python3Target1.loadTemplates();
        boolean boolean11 = python3Target1.wantsBaseVisitor();
        java.lang.String str12 = python3Target1.getVersion();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "\"\"" + "'", str3, "\"\"");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 29 + "'", int4 == 29);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(sTGroup6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Python3" + "'", str7, "Python3");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\"\\\"\\\"\\\\0\\\"\\\"\"" + "'", str9, "\"\\\"\\\"\\\\0\\\"\\\"\"");
        org.junit.Assert.assertNotNull(sTGroup10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "4.5.2.1" + "'", str12, "4.5.2.1");
    }

    @Test
    public void test1421() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1421");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.lang.String str3 = python3Target1.getTargetStringLiteralFromString("");
        int int4 = python3Target1.getSerializedATNSegmentLimit();
        int int5 = python3Target1.getInlineTestSetWordSize();
        org.antlr.v4.tool.Grammar grammar6 = null;
        org.stringtemplate.v4.ST sT7 = null;
        python3Target1.genRecognizerHeaderFile(grammar6, sT7, "@");
        java.util.Set<java.lang.String> strSet10 = python3Target1.getBadWords();
        java.lang.String str12 = python3Target1.getTargetStringLiteralFromString("nContex");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "\"\"" + "'", str3, "\"\"");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 29 + "'", int4 == 29);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 64 + "'", int5 == 64);
        org.junit.Assert.assertNotNull(strSet10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "\"nContex\"" + "'", str12, "\"nContex\"");
    }

    @Test
    public void test1422() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1422");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        java.lang.String str2 = python3Target0.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = python3Target0.getCodeGenerator();
        org.stringtemplate.v4.STGroup sTGroup4 = null;
        python3Target0.templates = sTGroup4;
        org.stringtemplate.v4.STGroup sTGroup6 = python3Target0.templates;
        java.lang.String[] strArray7 = python3Target0.targetCharValueEscape;
        java.util.Set<java.lang.String> strSet8 = python3Target0.badWords;
        java.util.Set<java.lang.String> strSet9 = python3Target0.getBadWords();
        python3Target0.addBadWords();
        org.stringtemplate.v4.STGroup sTGroup11 = python3Target0.templates;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str13 = python3Target0.getElementName("_tset_12");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "4.5.2.1" + "'", str2, "4.5.2.1");
        org.junit.Assert.assertNull(codeGenerator3);
        org.junit.Assert.assertNull(sTGroup6);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertNotNull(strSet9);
        org.junit.Assert.assertNull(sTGroup11);
    }

    @Test
    public void test1423() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1423");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        org.antlr.v4.tool.Grammar grammar3 = null;
        org.stringtemplate.v4.ST sT4 = null;
        python3Target0.genRecognizerHeaderFile(grammar3, sT4, "");
        python3Target0.language = "Python3";
        int int9 = python3Target0.getSerializedATNSegmentLimit();
        org.stringtemplate.v4.STGroup sTGroup10 = python3Target0.loadTemplates();
        python3Target0.addBadWords();
        java.lang.String str13 = python3Target0.getTargetStringLiteralFromString("\\35");
        java.lang.String str16 = python3Target0.getTargetStringLiteralFromString("@", true);
        org.antlr.v4.codegen.target.Python3Target python3Target17 = new org.antlr.v4.codegen.target.Python3Target();
        python3Target17.language = "";
        org.antlr.v4.codegen.target.Python3Target python3Target20 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean21 = python3Target20.supportsOverloadedMethods();
        java.lang.String str22 = python3Target20.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator23 = null;
        java.lang.String str26 = python3Target20.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator23, "", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator27 = null;
        python3Target20.gen = codeGenerator27;
        java.lang.String[] strArray36 = new java.lang.String[] { "\"\"\"\"", "\\12", "\"\"", "4.5.2.1", "", "\"\"\"\"", "\"\"" };
        java.util.LinkedHashSet<java.lang.String> strSet37 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet37, strArray36);
        python3Target20.badWords = strSet37;
        python3Target17.badWords = strSet37;
        java.lang.String str42 = python3Target17.encodeIntAsCharEscape((int) (byte) 100);
        boolean boolean43 = python3Target17.templatesExist();
        org.antlr.v4.codegen.target.Python3Target python3Target44 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str46 = python3Target44.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator47 = null;
        python3Target44.gen = codeGenerator47;
        org.antlr.v4.tool.Grammar grammar49 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target50 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str52 = python3Target50.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.tool.Grammar grammar53 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target54 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean55 = python3Target54.supportsOverloadedMethods();
        java.lang.String str56 = python3Target54.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator57 = null;
        java.lang.String str60 = python3Target54.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator57, "", true);
        java.lang.String str61 = python3Target54.getVersion();
        org.antlr.v4.tool.Grammar grammar62 = null;
        int[] intArray63 = new int[] {};
        java.lang.String[] strArray64 = python3Target54.getTokenTypesAsTargetLabels(grammar62, intArray63);
        java.lang.String[] strArray65 = python3Target50.getTokenTypesAsTargetLabels(grammar53, intArray63);
        java.lang.String[] strArray66 = python3Target44.getTokenTypesAsTargetLabels(grammar49, intArray63);
        python3Target17.targetCharValueEscape = strArray66;
        python3Target0.targetCharValueEscape = strArray66;
        java.util.Set<java.lang.String> strSet69 = python3Target0.getBadWords();
        python3Target0.addBadWords();
        org.antlr.v4.tool.ast.GrammarAST grammarAST71 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean72 = python3Target0.grammarSymbolCausesIssueInGeneratedCode(grammarAST71);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 29 + "'", int9 == 29);
        org.junit.Assert.assertNotNull(sTGroup10);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "\"\\35\"" + "'", str13, "\"\\35\"");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "\"@\"" + "'", str16, "\"@\"");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "4.5.2.1" + "'", str22, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "\"\"" + "'", str26, "\"\"");
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "d" + "'", str42, "d");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "\"\"\"\"\"\"" + "'", str46, "\"\"\"\"\"\"");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "\"\"\"\"\"\"" + "'", str52, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "4.5.2.1" + "'", str56, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "\"\"" + "'", str60, "\"\"");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "4.5.2.1" + "'", str61, "4.5.2.1");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[]");
        org.junit.Assert.assertNotNull(strArray64);
        org.junit.Assert.assertNotNull(strArray65);
        org.junit.Assert.assertNotNull(strArray66);
        org.junit.Assert.assertNotNull(strSet69);
    }

    @Test
    public void test1424() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1424");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python3Target1.getBadWords();
        org.antlr.v4.codegen.target.Python3Target python3Target3 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str5 = python3Target3.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.codegen.target.Python3Target python3Target6 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean7 = python3Target6.supportsOverloadedMethods();
        java.util.Set<java.lang.String> strSet8 = python3Target6.badWords;
        python3Target3.badWords = strSet8;
        python3Target1.badWords = strSet8;
        java.util.Set<java.lang.String> strSet11 = python3Target1.badWords;
        org.antlr.v4.codegen.target.Python3Target python3Target12 = new org.antlr.v4.codegen.target.Python3Target();
        python3Target12.language = "";
        org.antlr.v4.codegen.target.Python3Target python3Target15 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean16 = python3Target15.supportsOverloadedMethods();
        java.lang.String str17 = python3Target15.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator18 = null;
        java.lang.String str21 = python3Target15.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator18, "", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator22 = null;
        python3Target15.gen = codeGenerator22;
        java.lang.String[] strArray31 = new java.lang.String[] { "\"\"\"\"", "\\12", "\"\"", "4.5.2.1", "", "\"\"\"\"", "\"\"" };
        java.util.LinkedHashSet<java.lang.String> strSet32 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet32, strArray31);
        python3Target15.badWords = strSet32;
        python3Target12.badWords = strSet32;
        python3Target1.badWords = strSet32;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str38 = python3Target1.getElementName("\\\"_tsetPython3\\\"Context");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "\"\"\"\"\"\"" + "'", str5, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertNotNull(strSet11);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "4.5.2.1" + "'", str17, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "\"\"" + "'", str21, "\"\"");
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
    }

    @Test
    public void test1425() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1425");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python3Target1.getBadWords();
        java.lang.String str4 = python3Target1.getAltLabelContextStructName("d");
        org.stringtemplate.v4.STGroup sTGroup5 = python3Target1.getTemplates();
        boolean boolean6 = python3Target1.supportsOverloadedMethods();
        boolean boolean7 = python3Target1.supportsOverloadedMethods();
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target9 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator8);
        java.lang.String str11 = python3Target9.getTargetStringLiteralFromString("");
        int int12 = python3Target9.getSerializedATNSegmentLimit();
        int int13 = python3Target9.getInlineTestSetWordSize();
        org.antlr.v4.tool.Grammar grammar14 = null;
        org.stringtemplate.v4.ST sT15 = null;
        python3Target9.genRecognizerHeaderFile(grammar14, sT15, "@");
        boolean boolean18 = python3Target9.templatesExist();
        org.stringtemplate.v4.STGroup sTGroup19 = python3Target9.loadTemplates();
        python3Target1.templates = sTGroup19;
        org.antlr.v4.tool.Rule rule21 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str22 = python3Target1.getRuleFunctionContextStructName(rule21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "DContext" + "'", str4, "DContext");
        org.junit.Assert.assertNotNull(sTGroup5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "\"\"" + "'", str11, "\"\"");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 29 + "'", int12 == 29);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 64 + "'", int13 == 64);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(sTGroup19);
    }

    @Test
    public void test1426() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1426");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        org.antlr.v4.tool.Grammar grammar3 = null;
        org.stringtemplate.v4.ST sT4 = null;
        python3Target0.genRecognizerHeaderFile(grammar3, sT4, "");
        python3Target0.language = "Python3";
        int int9 = python3Target0.getSerializedATNSegmentLimit();
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = python3Target0.gen;
        org.stringtemplate.v4.STGroup sTGroup11 = python3Target0.loadTemplates();
        java.lang.String str12 = python3Target0.language;
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 29 + "'", int9 == 29);
        org.junit.Assert.assertNull(codeGenerator10);
        org.junit.Assert.assertNotNull(sTGroup11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Python3" + "'", str12, "Python3");
    }

    @Test
    public void test1427() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1427");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!", "hi!" };
        python3Target0.targetCharValueEscape = strArray5;
        java.lang.String str8 = python3Target0.getTargetStringLiteralFromString("\"\"");
        java.lang.String str10 = python3Target0.getTargetStringLiteralFromString("\"\"");
        boolean boolean11 = python3Target0.wantsBaseVisitor();
        org.antlr.v4.tool.Grammar grammar12 = null;
        org.stringtemplate.v4.ST sT13 = null;
        python3Target0.genRecognizerHeaderFile(grammar12, sT13, "");
        java.lang.String str16 = python3Target0.getVersion();
        org.stringtemplate.v4.STGroup sTGroup17 = python3Target0.templates;
        org.antlr.v4.tool.Rule rule18 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str19 = python3Target0.getRuleFunctionContextStructName(rule18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\"\"\"\"" + "'", str8, "\"\"\"\"");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\"\"\"\"" + "'", str10, "\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "4.5.2.1" + "'", str16, "4.5.2.1");
        org.junit.Assert.assertNull(sTGroup17);
    }

    @Test
    public void test1428() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1428");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        java.lang.String str2 = python3Target0.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = null;
        java.lang.String str6 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator3, "", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = null;
        python3Target0.gen = codeGenerator7;
        java.lang.String[] strArray16 = new java.lang.String[] { "\"\"\"\"", "\\12", "\"\"", "4.5.2.1", "", "\"\"\"\"", "\"\"" };
        java.util.LinkedHashSet<java.lang.String> strSet17 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet17, strArray16);
        python3Target0.badWords = strSet17;
        boolean boolean20 = python3Target0.templatesExist();
        org.antlr.v4.codegen.CodeGenerator codeGenerator21 = null;
        python3Target0.gen = codeGenerator21;
        java.util.Set<java.lang.String> strSet23 = python3Target0.getBadWords();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str25 = python3Target0.getImplicitRuleLabel("12");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "4.5.2.1" + "'", str2, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\"\"" + "'", str6, "\"\"");
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(strSet23);
    }

    @Test
    public void test1429() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1429");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray1 = python3Target0.targetCharValueEscape;
        java.lang.String str2 = python3Target0.language;
        int int3 = python3Target0.getSerializedATNSegmentLimit();
        org.antlr.v4.codegen.CodeGenerator codeGenerator4 = null;
        python3Target0.gen = codeGenerator4;
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target7 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator6);
        java.util.Set<java.lang.String> strSet8 = python3Target7.getBadWords();
        java.lang.String str10 = python3Target7.getAltLabelContextStructName("d");
        org.stringtemplate.v4.STGroup sTGroup11 = python3Target7.getTemplates();
        python3Target0.templates = sTGroup11;
        java.util.Set<java.lang.String> strSet13 = python3Target0.badWords;
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 29 + "'", int3 == 29);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "DContext" + "'", str10, "DContext");
        org.junit.Assert.assertNotNull(sTGroup11);
        org.junit.Assert.assertNotNull(strSet13);
    }

    @Test
    public void test1430() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1430");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        org.antlr.v4.tool.Grammar grammar3 = null;
        org.stringtemplate.v4.ST sT4 = null;
        python3Target0.genRecognizerHeaderFile(grammar3, sT4, "");
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = python3Target0.getCodeGenerator();
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = null;
        java.lang.String str11 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator8, "12", true);
        java.lang.String str12 = python3Target0.getLanguage();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str14 = python3Target0.encodeIntAsCharEscape((int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot encode the specified value: -1");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertNull(codeGenerator7);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "\"\"" + "'", str11, "\"\"");
        org.junit.Assert.assertNull(str12);
    }

    @Test
    public void test1431() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1431");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!", "hi!" };
        python3Target0.targetCharValueEscape = strArray5;
        java.lang.String str8 = python3Target0.getTargetStringLiteralFromString("\"\"");
        java.lang.String str9 = python3Target0.getLanguage();
        org.antlr.v4.codegen.target.Python3Target python3Target10 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray11 = python3Target10.targetCharValueEscape;
        org.stringtemplate.v4.STGroup sTGroup12 = python3Target10.templates;
        int int13 = python3Target10.getInlineTestSetWordSize();
        org.antlr.v4.codegen.CodeGenerator codeGenerator14 = python3Target10.gen;
        org.antlr.v4.tool.Grammar grammar15 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target16 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str18 = python3Target16.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.tool.Grammar grammar19 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target20 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean21 = python3Target20.supportsOverloadedMethods();
        java.lang.String str22 = python3Target20.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator23 = null;
        java.lang.String str26 = python3Target20.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator23, "", true);
        java.lang.String str27 = python3Target20.getVersion();
        org.antlr.v4.tool.Grammar grammar28 = null;
        int[] intArray29 = new int[] {};
        java.lang.String[] strArray30 = python3Target20.getTokenTypesAsTargetLabels(grammar28, intArray29);
        java.lang.String[] strArray31 = python3Target16.getTokenTypesAsTargetLabels(grammar19, intArray29);
        java.lang.String[] strArray32 = python3Target10.getTokenTypesAsTargetLabels(grammar15, intArray29);
        python3Target0.targetCharValueEscape = strArray32;
        org.stringtemplate.v4.STGroup sTGroup34 = python3Target0.templates;
        python3Target0.language = "\"\\\"4.5.2.1\"";
        java.lang.String str38 = python3Target0.getTargetStringLiteralFromString("\"__tset\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"ContextContextContext\"");
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\"\"\"\"" + "'", str8, "\"\"\"\"");
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNull(sTGroup12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 64 + "'", int13 == 64);
        org.junit.Assert.assertNull(codeGenerator14);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "\"\"\"\"\"\"" + "'", str18, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "4.5.2.1" + "'", str22, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "\"\"" + "'", str26, "\"\"");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "4.5.2.1" + "'", str27, "4.5.2.1");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[]");
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertNull(sTGroup34);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "\"\"__tset\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"ContextContextContext\"\"" + "'", str38, "\"\"__tset\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"ContextContextContext\"\"");
    }

    @Test
    public void test1432() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1432");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray1 = python3Target0.targetCharValueEscape;
        java.lang.String str2 = python3Target0.language;
        int int3 = python3Target0.getSerializedATNSegmentLimit();
        java.lang.String str6 = python3Target0.getTargetStringLiteralFromString("\"\"\"\"\"\"", false);
        java.lang.String[] strArray7 = python3Target0.targetCharValueEscape;
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = python3Target0.gen;
        org.antlr.v4.tool.ast.GrammarAST grammarAST9 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str10 = python3Target0.getLoopLabel(grammarAST9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 29 + "'", int3 == 29);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\"\"\"\"\"\"" + "'", str6, "\"\"\"\"\"\"");
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNull(codeGenerator8);
    }

    @Test
    public void test1433() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1433");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        org.antlr.v4.tool.Grammar grammar3 = null;
        org.stringtemplate.v4.ST sT4 = null;
        python3Target0.genRecognizerHeaderFile(grammar3, sT4, "");
        python3Target0.language = "Python3";
        int int9 = python3Target0.getSerializedATNSegmentLimit();
        java.lang.String str11 = python3Target0.getListLabel("_tsetPython3");
        org.stringtemplate.v4.STGroup sTGroup12 = python3Target0.loadTemplates();
        org.antlr.v4.codegen.CodeGenerator codeGenerator13 = python3Target0.getCodeGenerator();
        org.antlr.v4.tool.Grammar grammar14 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target15 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray16 = python3Target15.targetCharValueEscape;
        python3Target15.addBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator18 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target19 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator18);
        java.lang.String str21 = python3Target19.getTargetStringLiteralFromString("");
        int int22 = python3Target19.getSerializedATNSegmentLimit();
        boolean boolean23 = python3Target19.wantsBaseVisitor();
        org.stringtemplate.v4.STGroup sTGroup24 = python3Target19.loadTemplates();
        python3Target15.templates = sTGroup24;
        org.antlr.v4.tool.Grammar grammar26 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target27 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray28 = python3Target27.targetCharValueEscape;
        org.stringtemplate.v4.STGroup sTGroup29 = python3Target27.templates;
        int int30 = python3Target27.getInlineTestSetWordSize();
        org.antlr.v4.codegen.CodeGenerator codeGenerator31 = python3Target27.gen;
        org.antlr.v4.tool.Grammar grammar32 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target33 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str35 = python3Target33.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.tool.Grammar grammar36 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target37 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean38 = python3Target37.supportsOverloadedMethods();
        java.lang.String str39 = python3Target37.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator40 = null;
        java.lang.String str43 = python3Target37.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator40, "", true);
        java.lang.String str44 = python3Target37.getVersion();
        org.antlr.v4.tool.Grammar grammar45 = null;
        int[] intArray46 = new int[] {};
        java.lang.String[] strArray47 = python3Target37.getTokenTypesAsTargetLabels(grammar45, intArray46);
        java.lang.String[] strArray48 = python3Target33.getTokenTypesAsTargetLabels(grammar36, intArray46);
        java.lang.String[] strArray49 = python3Target27.getTokenTypesAsTargetLabels(grammar32, intArray46);
        java.lang.String[] strArray50 = python3Target15.getTokenTypesAsTargetLabels(grammar26, intArray46);
        java.lang.String[] strArray51 = python3Target0.getTokenTypesAsTargetLabels(grammar14, intArray46);
        org.antlr.v4.codegen.target.Python3Target.python3Keywords = strArray51;
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 29 + "'", int9 == 29);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "_tsetPython3" + "'", str11, "_tsetPython3");
        org.junit.Assert.assertNotNull(sTGroup12);
        org.junit.Assert.assertNull(codeGenerator13);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "\"\"" + "'", str21, "\"\"");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 29 + "'", int22 == 29);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(sTGroup24);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertNull(sTGroup29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 64 + "'", int30 == 64);
        org.junit.Assert.assertNull(codeGenerator31);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "\"\"\"\"\"\"" + "'", str35, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "4.5.2.1" + "'", str39, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "\"\"" + "'", str43, "\"\"");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "4.5.2.1" + "'", str44, "4.5.2.1");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[]");
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertNotNull(strArray49);
        org.junit.Assert.assertNotNull(strArray50);
        org.junit.Assert.assertNotNull(strArray51);
    }

    @Test
    public void test1434() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1434");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!", "hi!" };
        python3Target0.targetCharValueEscape = strArray5;
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = null;
        java.lang.String str10 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator7, "", false);
        int int11 = python3Target0.getSerializedATNSegmentLimit();
        java.lang.String str12 = python3Target0.getVersion();
        java.lang.String str14 = python3Target0.getTargetStringLiteralFromString("4.5.2.1");
        org.antlr.v4.codegen.CodeGenerator codeGenerator15 = python3Target0.gen;
        java.lang.String str16 = python3Target0.getLanguage();
        boolean boolean17 = python3Target0.supportsOverloadedMethods();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 29 + "'", int11 == 29);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "4.5.2.1" + "'", str12, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "\"4.5.2.1\"" + "'", str14, "\"4.5.2.1\"");
        org.junit.Assert.assertNull(codeGenerator15);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    }

    @Test
    public void test1435() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1435");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        org.antlr.v4.tool.Grammar grammar3 = null;
        org.stringtemplate.v4.ST sT4 = null;
        python3Target0.genRecognizerHeaderFile(grammar3, sT4, "");
        python3Target0.language = "Python3";
        java.util.Set<java.lang.String> strSet9 = null;
        python3Target0.badWords = strSet9;
        org.antlr.v4.codegen.CodeGenerator codeGenerator11 = null;
        java.lang.String str14 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator11, "\"Hi!Context\"", false);
        java.lang.String str16 = python3Target0.getListLabel("Python3");
        java.lang.String str18 = python3Target0.getTargetStringLiteralFromString("\\0");
        org.antlr.v4.tool.Grammar grammar19 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target20 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str22 = python3Target20.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.tool.Grammar grammar23 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target24 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean25 = python3Target24.supportsOverloadedMethods();
        java.lang.String str26 = python3Target24.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator27 = null;
        java.lang.String str30 = python3Target24.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator27, "", true);
        java.lang.String str31 = python3Target24.getVersion();
        org.antlr.v4.tool.Grammar grammar32 = null;
        int[] intArray33 = new int[] {};
        java.lang.String[] strArray34 = python3Target24.getTokenTypesAsTargetLabels(grammar32, intArray33);
        java.lang.String[] strArray35 = python3Target20.getTokenTypesAsTargetLabels(grammar23, intArray33);
        java.lang.String[] strArray36 = python3Target0.getTokenTypesAsTargetLabels(grammar19, intArray33);
        java.lang.String str38 = python3Target0.getImplicitSetLabel("\"\\\"Python3\\\"\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator39 = python3Target0.gen;
        org.antlr.v4.codegen.CodeGenerator codeGenerator40 = null;
        java.lang.String str43 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator40, "\\\"\\\"\\\"\\\"\\\"\\\"Context", false);
        java.lang.String str45 = python3Target0.getListLabel("\"d\"");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str47 = python3Target0.getImplicitTokenLabel("\"\\\"\\\\\\\"\\\\\\\"hi!\\\\\\\"\\\\\\\"\\\"\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Hi!Context" + "'", str14, "Hi!Context");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Python3" + "'", str16, "Python3");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "\"\\0\"" + "'", str18, "\"\\0\"");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "\"\"\"\"\"\"" + "'", str22, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "4.5.2.1" + "'", str26, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "\"\"" + "'", str30, "\"\"");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "4.5.2.1" + "'", str31, "4.5.2.1");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[]");
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "_tset\"\\\"Python3\\\"\"" + "'", str38, "_tset\"\\\"Python3\\\"\"");
        org.junit.Assert.assertNull(codeGenerator39);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "\\\"\\\"\\\"\\\"\\\"\\\"Contex" + "'", str43, "\\\"\\\"\\\"\\\"\\\"\\\"Contex");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "\"d\"" + "'", str45, "\"d\"");
    }

    @Test
    public void test1436() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1436");
        java.lang.String str1 = org.stringtemplate.v4.StringRenderer.escapeHTML("\"_\\\"\\\\\\\"\\\\\\\"\\\"\"");
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "\"_\\\"\\\\\\\"\\\\\\\"\\\"\"" + "'", str1, "\"_\\\"\\\\\\\"\\\\\\\"\\\"\"");
    }

    @Test
    public void test1437() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1437");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        java.lang.String str2 = python3Target0.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = null;
        java.lang.String str6 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator3, "", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = null;
        python3Target0.gen = codeGenerator7;
        java.lang.String[] strArray16 = new java.lang.String[] { "\"\"\"\"", "\\12", "\"\"", "4.5.2.1", "", "\"\"\"\"", "\"\"" };
        java.util.LinkedHashSet<java.lang.String> strSet17 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet17, strArray16);
        python3Target0.badWords = strSet17;
        org.antlr.v4.codegen.CodeGenerator codeGenerator20 = python3Target0.gen;
        java.lang.String str21 = python3Target0.getVersion();
        int int22 = python3Target0.getSerializedATNSegmentLimit();
        java.lang.String str23 = python3Target0.getLanguage();
        java.lang.String str24 = python3Target0.getLanguage();
        // The following exception was thrown during execution in test generation
        try {
            org.stringtemplate.v4.STGroup sTGroup25 = python3Target0.getTemplates();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "4.5.2.1" + "'", str2, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\"\"" + "'", str6, "\"\"");
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNull(codeGenerator20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "4.5.2.1" + "'", str21, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 29 + "'", int22 == 29);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNull(str24);
    }

    @Test
    public void test1438() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1438");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python3Target1.getBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = null;
        python3Target1.gen = codeGenerator3;
        org.antlr.v4.codegen.CodeGenerator codeGenerator5 = null;
        java.lang.String str8 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator5, "\"12\"", true);
        java.lang.String str9 = python3Target1.language;
        java.lang.String str11 = python3Target1.getImplicitRuleLabel("\"\"\"DContext\"\"Context\"");
        int int12 = python3Target1.getSerializedATNSegmentLimit();
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\"12\"" + "'", str8, "\"12\"");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Python3" + "'", str9, "Python3");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "_\"\"\"DContext\"\"Context\"" + "'", str11, "_\"\"\"DContext\"\"Context\"");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 29 + "'", int12 == 29);
    }

    @Test
    public void test1439() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1439");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        java.lang.String str2 = python3Target0.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = null;
        java.lang.String str6 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator3, "", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = null;
        python3Target0.gen = codeGenerator7;
        java.lang.String[] strArray16 = new java.lang.String[] { "\"\"\"\"", "\\12", "\"\"", "4.5.2.1", "", "\"\"\"\"", "\"\"" };
        java.util.LinkedHashSet<java.lang.String> strSet17 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet17, strArray16);
        python3Target0.badWords = strSet17;
        boolean boolean20 = python3Target0.templatesExist();
        org.antlr.v4.codegen.CodeGenerator codeGenerator21 = null;
        python3Target0.gen = codeGenerator21;
        java.lang.String str23 = python3Target0.language;
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "4.5.2.1" + "'", str2, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\"\"" + "'", str6, "\"\"");
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(str23);
    }

    @Test
    public void test1440() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1440");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.lang.String str3 = python3Target1.getTargetStringLiteralFromString("");
        int int4 = python3Target1.getSerializedATNSegmentLimit();
        boolean boolean5 = python3Target1.wantsBaseVisitor();
        java.lang.String str6 = python3Target1.getVersion();
        java.lang.String str8 = python3Target1.encodeIntAsCharEscape(29);
        org.antlr.v4.codegen.CodeGenerator codeGenerator9 = python3Target1.getCodeGenerator();
        org.antlr.v4.tool.Rule rule10 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str11 = python3Target1.getRuleFunctionContextStructName(rule10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "\"\"" + "'", str3, "\"\"");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 29 + "'", int4 == 29);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "4.5.2.1" + "'", str6, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\\35" + "'", str8, "\\35");
        org.junit.Assert.assertNull(codeGenerator9);
    }

    @Test
    public void test1441() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1441");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.lang.String str3 = python3Target1.getTargetStringLiteralFromString("");
        int int4 = python3Target1.getSerializedATNSegmentLimit();
        boolean boolean5 = python3Target1.wantsBaseVisitor();
        org.stringtemplate.v4.STGroup sTGroup6 = python3Target1.loadTemplates();
        java.lang.String str7 = python3Target1.getLanguage();
        boolean boolean8 = python3Target1.wantsBaseVisitor();
        java.lang.String str10 = python3Target1.getImplicitSetLabel("tset\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"ContextContextConte");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "\"\"" + "'", str3, "\"\"");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 29 + "'", int4 == 29);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(sTGroup6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Python3" + "'", str7, "Python3");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "_tsettset\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"ContextContextConte" + "'", str10, "_tsettset\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"ContextContextConte");
    }

    @Test
    public void test1442() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1442");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        java.lang.String str2 = python3Target0.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = null;
        java.lang.String str6 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator3, "", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = null;
        python3Target0.gen = codeGenerator7;
        java.lang.String[] strArray16 = new java.lang.String[] { "\"\"\"\"", "\\12", "\"\"", "4.5.2.1", "", "\"\"\"\"", "\"\"" };
        java.util.LinkedHashSet<java.lang.String> strSet17 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet17, strArray16);
        python3Target0.badWords = strSet17;
        org.antlr.v4.codegen.CodeGenerator codeGenerator20 = python3Target0.gen;
        java.lang.String str21 = python3Target0.getVersion();
        int int22 = python3Target0.getSerializedATNSegmentLimit();
        java.lang.String str23 = python3Target0.getLanguage();
        java.lang.String str25 = python3Target0.encodeIntAsCharEscape((int) '#');
        org.antlr.v4.tool.ast.GrammarAST grammarAST26 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean27 = python3Target0.visibleGrammarSymbolCausesIssueInGeneratedCode(grammarAST26);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "4.5.2.1" + "'", str2, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\"\"" + "'", str6, "\"\"");
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNull(codeGenerator20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "4.5.2.1" + "'", str21, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 29 + "'", int22 == 29);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "#" + "'", str25, "#");
    }

    @Test
    public void test1443() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1443");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!", "hi!" };
        python3Target0.targetCharValueEscape = strArray5;
        java.lang.String str8 = python3Target0.getTargetStringLiteralFromString("\"\"");
        java.lang.String str10 = python3Target0.getTargetStringLiteralFromString("\"\"");
        java.lang.String str11 = python3Target0.getLanguage();
        int int12 = python3Target0.getInlineTestSetWordSize();
        org.stringtemplate.v4.STGroup sTGroup13 = python3Target0.templates;
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\"\"\"\"" + "'", str8, "\"\"\"\"");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\"\"\"\"" + "'", str10, "\"\"\"\"");
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 64 + "'", int12 == 64);
        org.junit.Assert.assertNull(sTGroup13);
    }

    @Test
    public void test1444() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1444");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        org.antlr.v4.tool.Grammar grammar3 = null;
        org.stringtemplate.v4.ST sT4 = null;
        python3Target0.genRecognizerHeaderFile(grammar3, sT4, "");
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = python3Target0.getCodeGenerator();
        java.util.Set<java.lang.String> strSet8 = python3Target0.badWords;
        boolean boolean9 = python3Target0.templatesExist();
        java.lang.String str12 = python3Target0.getTargetStringLiteralFromString("\"\\12\"", false);
        java.lang.String str15 = python3Target0.getTargetStringLiteralFromString("", false);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str17 = python3Target0.getElementName("\"\\\"\\\\0\\\"\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertNull(codeGenerator7);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "\"\\12\"" + "'", str12, "\"\\12\"");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
    }

    @Test
    public void test1445() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1445");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        java.lang.String str2 = python3Target0.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = python3Target0.getCodeGenerator();
        org.stringtemplate.v4.STGroup sTGroup4 = null;
        python3Target0.templates = sTGroup4;
        org.stringtemplate.v4.STGroup sTGroup6 = python3Target0.templates;
        java.lang.String[] strArray7 = python3Target0.targetCharValueEscape;
        java.util.Set<java.lang.String> strSet8 = python3Target0.badWords;
        java.util.Set<java.lang.String> strSet9 = python3Target0.getBadWords();
        boolean boolean10 = python3Target0.wantsBaseVisitor();
        org.antlr.v4.tool.Rule rule11 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str12 = python3Target0.getRuleFunctionContextStructName(rule11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "4.5.2.1" + "'", str2, "4.5.2.1");
        org.junit.Assert.assertNull(codeGenerator3);
        org.junit.Assert.assertNull(sTGroup6);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertNotNull(strSet9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test1446() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1446");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.lang.String str3 = python3Target1.getTargetStringLiteralFromString("");
        python3Target1.language = "";
        java.lang.String str6 = python3Target1.getVersion();
        boolean boolean7 = python3Target1.wantsBaseListener();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str9 = python3Target1.getElementName("_#");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "\"\"" + "'", str3, "\"\"");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "4.5.2.1" + "'", str6, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    public void test1447() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1447");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!", "hi!" };
        python3Target0.targetCharValueEscape = strArray5;
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = null;
        java.lang.String str10 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator7, "", false);
        java.util.Set<java.lang.String> strSet11 = python3Target0.badWords;
        java.lang.String str13 = python3Target0.getTargetStringLiteralFromString("12");
        int int14 = python3Target0.getSerializedATNSegmentLimit();
        java.util.Set<java.lang.String> strSet15 = python3Target0.badWords;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str17 = python3Target0.getListLabel("\"\\12\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNotNull(strSet11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "\"12\"" + "'", str13, "\"12\"");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 29 + "'", int14 == 29);
        org.junit.Assert.assertNotNull(strSet15);
    }

    @Test
    public void test1448() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1448");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python3Target1.getBadWords();
        org.antlr.v4.codegen.target.Python3Target python3Target3 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str5 = python3Target3.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.codegen.target.Python3Target python3Target6 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean7 = python3Target6.supportsOverloadedMethods();
        java.util.Set<java.lang.String> strSet8 = python3Target6.badWords;
        python3Target3.badWords = strSet8;
        python3Target1.badWords = strSet8;
        java.util.Set<java.lang.String> strSet11 = python3Target1.badWords;
        org.antlr.v4.codegen.target.Python3Target python3Target12 = new org.antlr.v4.codegen.target.Python3Target();
        python3Target12.language = "";
        org.antlr.v4.codegen.target.Python3Target python3Target15 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean16 = python3Target15.supportsOverloadedMethods();
        java.lang.String str17 = python3Target15.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator18 = null;
        java.lang.String str21 = python3Target15.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator18, "", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator22 = null;
        python3Target15.gen = codeGenerator22;
        java.lang.String[] strArray31 = new java.lang.String[] { "\"\"\"\"", "\\12", "\"\"", "4.5.2.1", "", "\"\"\"\"", "\"\"" };
        java.util.LinkedHashSet<java.lang.String> strSet32 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet32, strArray31);
        python3Target15.badWords = strSet32;
        python3Target12.badWords = strSet32;
        python3Target1.badWords = strSet32;
        java.lang.String str38 = python3Target1.getImplicitRuleLabel("\"_tset12\"Context");
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "\"\"\"\"\"\"" + "'", str5, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertNotNull(strSet11);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "4.5.2.1" + "'", str17, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "\"\"" + "'", str21, "\"\"");
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "_\"_tset12\"Context" + "'", str38, "_\"_tset12\"Context");
    }

    @Test
    public void test1449() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1449");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.lang.String str3 = python3Target1.getTargetStringLiteralFromString("");
        int int4 = python3Target1.getSerializedATNSegmentLimit();
        boolean boolean5 = python3Target1.wantsBaseVisitor();
        org.stringtemplate.v4.STGroup sTGroup6 = python3Target1.loadTemplates();
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = python3Target1.gen;
        boolean boolean8 = python3Target1.wantsBaseListener();
        python3Target1.language = "\\35";
        java.lang.String str12 = python3Target1.encodeIntAsCharEscape(29);
        int int13 = python3Target1.getSerializedATNSegmentLimit();
        org.antlr.v4.codegen.CodeGenerator codeGenerator14 = null;
        java.lang.String str17 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator14, "\"\"\"\"\"\"Context", true);
        java.lang.String str18 = python3Target1.getVersion();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str20 = python3Target1.getElementName("_tset_tset_12");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "\"\"" + "'", str3, "\"\"");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 29 + "'", int4 == 29);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(sTGroup6);
        org.junit.Assert.assertNull(codeGenerator7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "\\35" + "'", str12, "\\35");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 29 + "'", int13 == 29);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "\"\\\"\\\"\\\"\\\"\\\"Contex\"" + "'", str17, "\"\\\"\\\"\\\"\\\"\\\"Contex\"");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "4.5.2.1" + "'", str18, "4.5.2.1");
    }

    @Test
    public void test1450() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1450");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        python3Target0.language = "";
        org.antlr.v4.codegen.target.Python3Target python3Target3 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean4 = python3Target3.supportsOverloadedMethods();
        java.lang.String str5 = python3Target3.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = null;
        java.lang.String str9 = python3Target3.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator6, "", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = null;
        python3Target3.gen = codeGenerator10;
        java.lang.String[] strArray19 = new java.lang.String[] { "\"\"\"\"", "\\12", "\"\"", "4.5.2.1", "", "\"\"\"\"", "\"\"" };
        java.util.LinkedHashSet<java.lang.String> strSet20 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet20, strArray19);
        python3Target3.badWords = strSet20;
        python3Target0.badWords = strSet20;
        java.lang.String str25 = python3Target0.encodeIntAsCharEscape((int) (byte) 100);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str27 = python3Target0.getImplicitSetLabel("_tset\\12");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "4.5.2.1" + "'", str5, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\"\"" + "'", str9, "\"\"");
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "d" + "'", str25, "d");
    }

    @Test
    public void test1451() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1451");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        org.antlr.v4.tool.Grammar grammar3 = null;
        org.stringtemplate.v4.ST sT4 = null;
        python3Target0.genRecognizerHeaderFile(grammar3, sT4, "");
        python3Target0.language = "Python3";
        java.util.Set<java.lang.String> strSet9 = null;
        python3Target0.badWords = strSet9;
        org.antlr.v4.codegen.CodeGenerator codeGenerator11 = null;
        java.lang.String str14 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator11, "\"Hi!Context\"", false);
        org.antlr.v4.tool.Grammar grammar15 = null;
        org.stringtemplate.v4.ST sT16 = null;
        python3Target0.genRecognizerHeaderFile(grammar15, sT16, "\"\"");
        org.antlr.v4.tool.ast.GrammarAST grammarAST19 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean20 = python3Target0.visibleGrammarSymbolCausesIssueInGeneratedCode(grammarAST19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Hi!Context" + "'", str14, "Hi!Context");
    }

    @Test
    public void test1452() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1452");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray1 = python3Target0.targetCharValueEscape;
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = null;
        java.lang.String str6 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator3, "\"\\12\"", false);
        int int7 = python3Target0.getSerializedATNSegmentLimit();
        boolean boolean8 = python3Target0.templatesExist();
        java.lang.String str9 = python3Target0.getLanguage();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str11 = python3Target0.getListLabel("\"@\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "12" + "'", str6, "12");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 29 + "'", int7 == 29);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(str9);
    }

    @Test
    public void test1453() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1453");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!", "hi!" };
        python3Target0.targetCharValueEscape = strArray5;
        java.lang.String str8 = python3Target0.getTargetStringLiteralFromString("\"\"");
        java.lang.String str10 = python3Target0.getTargetStringLiteralFromString("\"\"");
        boolean boolean11 = python3Target0.wantsBaseVisitor();
        org.antlr.v4.tool.Grammar grammar12 = null;
        org.stringtemplate.v4.ST sT13 = null;
        python3Target0.genRecognizerHeaderFile(grammar12, sT13, "");
        org.antlr.v4.tool.Rule rule16 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str17 = python3Target0.getRuleFunctionContextStructName(rule16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\"\"\"\"" + "'", str8, "\"\"\"\"");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\"\"\"\"" + "'", str10, "\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test1454() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1454");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        java.lang.String str2 = python3Target0.getVersion();
        org.antlr.v4.codegen.target.Python3Target python3Target3 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean4 = python3Target3.supportsOverloadedMethods();
        python3Target3.language = "\"\"\"\"";
        org.antlr.v4.codegen.target.Python3Target python3Target7 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray8 = python3Target7.targetCharValueEscape;
        org.stringtemplate.v4.STGroup sTGroup9 = python3Target7.templates;
        int int10 = python3Target7.getInlineTestSetWordSize();
        org.antlr.v4.codegen.CodeGenerator codeGenerator11 = python3Target7.gen;
        org.antlr.v4.tool.Grammar grammar12 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target13 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str15 = python3Target13.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.tool.Grammar grammar16 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target17 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean18 = python3Target17.supportsOverloadedMethods();
        java.lang.String str19 = python3Target17.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator20 = null;
        java.lang.String str23 = python3Target17.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator20, "", true);
        java.lang.String str24 = python3Target17.getVersion();
        org.antlr.v4.tool.Grammar grammar25 = null;
        int[] intArray26 = new int[] {};
        java.lang.String[] strArray27 = python3Target17.getTokenTypesAsTargetLabels(grammar25, intArray26);
        java.lang.String[] strArray28 = python3Target13.getTokenTypesAsTargetLabels(grammar16, intArray26);
        java.lang.String[] strArray29 = python3Target7.getTokenTypesAsTargetLabels(grammar12, intArray26);
        java.lang.String[] strArray52 = new java.lang.String[] { "\"\\\"\\\"\"", "DContext", "", "hi!", "d", "\"\"\"\"\"\"", "\"\"\"\"\"\"", "_tsetPython3", "\"hi!\"", "\"hi!\"", "Hi!Context", "\"\"\"\"\"\"", "\"hi!\"", "12", "\"4.5.2.1\"", "DContext", "Hi!Context", "Python3", "\"hi!\"", "", "\"\"", "\\\"4.5.2.1\\\"" };
        java.util.LinkedHashSet<java.lang.String> strSet53 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet53, strArray52);
        python3Target7.badWords = strSet53;
        org.antlr.v4.codegen.target.Python3Target python3Target56 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean57 = python3Target56.supportsOverloadedMethods();
        java.lang.String str58 = python3Target56.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator59 = null;
        java.lang.String str62 = python3Target56.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator59, "", true);
        java.lang.String str63 = python3Target56.getVersion();
        org.antlr.v4.codegen.target.Python3Target python3Target64 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str66 = python3Target64.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.tool.Grammar grammar67 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target68 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean69 = python3Target68.supportsOverloadedMethods();
        java.lang.String str70 = python3Target68.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator71 = null;
        java.lang.String str74 = python3Target68.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator71, "", true);
        java.lang.String str75 = python3Target68.getVersion();
        org.antlr.v4.tool.Grammar grammar76 = null;
        int[] intArray77 = new int[] {};
        java.lang.String[] strArray78 = python3Target68.getTokenTypesAsTargetLabels(grammar76, intArray77);
        java.lang.String[] strArray79 = python3Target64.getTokenTypesAsTargetLabels(grammar67, intArray77);
        java.lang.String[] strArray80 = python3Target64.targetCharValueEscape;
        python3Target56.targetCharValueEscape = strArray80;
        python3Target7.targetCharValueEscape = strArray80;
        python3Target3.targetCharValueEscape = strArray80;
        python3Target0.targetCharValueEscape = strArray80;
        python3Target0.addBadWords();
        int int86 = python3Target0.getSerializedATNSegmentLimit();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str88 = python3Target0.getListLabel("__\"\\\"\\\"4.5.2.1\\\"\\\"\"Context");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "4.5.2.1" + "'", str2, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNull(sTGroup9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 64 + "'", int10 == 64);
        org.junit.Assert.assertNull(codeGenerator11);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "\"\"\"\"\"\"" + "'", str15, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "4.5.2.1" + "'", str19, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "\"\"" + "'", str23, "\"\"");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "4.5.2.1" + "'", str24, "4.5.2.1");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[]");
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertNotNull(strArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "4.5.2.1" + "'", str58, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "\"\"" + "'", str62, "\"\"");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "4.5.2.1" + "'", str63, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "\"\"\"\"\"\"" + "'", str66, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "4.5.2.1" + "'", str70, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "\"\"" + "'", str74, "\"\"");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "4.5.2.1" + "'", str75, "4.5.2.1");
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[]");
        org.junit.Assert.assertNotNull(strArray78);
        org.junit.Assert.assertNotNull(strArray79);
        org.junit.Assert.assertNotNull(strArray80);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + 29 + "'", int86 == 29);
    }

    @Test
    public void test1455() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1455");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!", "hi!" };
        python3Target0.targetCharValueEscape = strArray5;
        java.lang.String str8 = python3Target0.getTargetStringLiteralFromString("\"\"");
        java.lang.String str9 = python3Target0.getLanguage();
        org.antlr.v4.codegen.target.Python3Target python3Target10 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray11 = python3Target10.targetCharValueEscape;
        org.stringtemplate.v4.STGroup sTGroup12 = python3Target10.templates;
        int int13 = python3Target10.getInlineTestSetWordSize();
        org.antlr.v4.codegen.CodeGenerator codeGenerator14 = python3Target10.gen;
        org.antlr.v4.tool.Grammar grammar15 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target16 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str18 = python3Target16.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.tool.Grammar grammar19 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target20 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean21 = python3Target20.supportsOverloadedMethods();
        java.lang.String str22 = python3Target20.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator23 = null;
        java.lang.String str26 = python3Target20.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator23, "", true);
        java.lang.String str27 = python3Target20.getVersion();
        org.antlr.v4.tool.Grammar grammar28 = null;
        int[] intArray29 = new int[] {};
        java.lang.String[] strArray30 = python3Target20.getTokenTypesAsTargetLabels(grammar28, intArray29);
        java.lang.String[] strArray31 = python3Target16.getTokenTypesAsTargetLabels(grammar19, intArray29);
        java.lang.String[] strArray32 = python3Target10.getTokenTypesAsTargetLabels(grammar15, intArray29);
        python3Target0.targetCharValueEscape = strArray32;
        org.antlr.v4.codegen.CodeGenerator codeGenerator34 = null;
        java.lang.String str37 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator34, "\"12\"", false);
        boolean boolean38 = python3Target0.wantsBaseListener();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str40 = python3Target0.getListLabel("_tset\"\\\"Python3\\\"\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\"\"\"\"" + "'", str8, "\"\"\"\"");
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNull(sTGroup12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 64 + "'", int13 == 64);
        org.junit.Assert.assertNull(codeGenerator14);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "\"\"\"\"\"\"" + "'", str18, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "4.5.2.1" + "'", str22, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "\"\"" + "'", str26, "\"\"");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "4.5.2.1" + "'", str27, "4.5.2.1");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[]");
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "12" + "'", str37, "12");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
    }

    @Test
    public void test1456() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1456");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!", "hi!" };
        python3Target0.targetCharValueEscape = strArray5;
        java.lang.String str8 = python3Target0.getTargetStringLiteralFromString("\"\"");
        java.lang.String str10 = python3Target0.getTargetStringLiteralFromString("\"\"");
        java.lang.String str11 = python3Target0.getLanguage();
        boolean boolean12 = python3Target0.wantsBaseListener();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\"\"\"\"" + "'", str8, "\"\"\"\"");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\"\"\"\"" + "'", str10, "\"\"\"\"");
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test1457() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1457");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        org.antlr.v4.codegen.CodeGenerator codeGenerator1 = python3Target0.getCodeGenerator();
        java.lang.String str3 = python3Target0.getTargetStringLiteralFromString("\\35");
        org.antlr.v4.codegen.CodeGenerator codeGenerator4 = null;
        python3Target0.gen = codeGenerator4;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str7 = python3Target0.getListLabel("");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(codeGenerator1);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "\"\\35\"" + "'", str3, "\"\\35\"");
    }

    @Test
    public void test1458() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1458");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        python3Target0.language = "";
        org.antlr.v4.codegen.target.Python3Target python3Target3 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean4 = python3Target3.supportsOverloadedMethods();
        java.lang.String str5 = python3Target3.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = null;
        java.lang.String str9 = python3Target3.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator6, "", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = null;
        python3Target3.gen = codeGenerator10;
        java.lang.String[] strArray19 = new java.lang.String[] { "\"\"\"\"", "\\12", "\"\"", "4.5.2.1", "", "\"\"\"\"", "\"\"" };
        java.util.LinkedHashSet<java.lang.String> strSet20 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet20, strArray19);
        python3Target3.badWords = strSet20;
        python3Target0.badWords = strSet20;
        java.lang.String str25 = python3Target0.encodeIntAsCharEscape((int) (byte) 100);
        java.lang.String str26 = python3Target0.getLanguage();
        java.lang.String str28 = python3Target0.getTargetStringLiteralFromString("\"\\0\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator29 = null;
        python3Target0.gen = codeGenerator29;
        org.antlr.v4.codegen.CodeGenerator codeGenerator31 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target32 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator31);
        java.lang.String str33 = python3Target32.getLanguage();
        java.lang.String str35 = python3Target32.getImplicitSetLabel("Python3");
        org.antlr.v4.codegen.CodeGenerator codeGenerator36 = null;
        java.lang.String str39 = python3Target32.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator36, "\"\"\"\"", true);
        org.stringtemplate.v4.STGroup sTGroup40 = python3Target32.loadTemplates();
        python3Target0.templates = sTGroup40;
        java.lang.Class<?> wildcardClass42 = python3Target0.getClass();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "4.5.2.1" + "'", str5, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\"\"" + "'", str9, "\"\"");
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "d" + "'", str25, "d");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "\"\"\\0\"\"" + "'", str28, "\"\"\\0\"\"");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "Python3" + "'", str33, "Python3");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "_tsetPython3" + "'", str35, "_tsetPython3");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "\"\\\"\\\"\"" + "'", str39, "\"\\\"\\\"\"");
        org.junit.Assert.assertNotNull(sTGroup40);
        org.junit.Assert.assertNotNull(wildcardClass42);
    }

    @Test
    public void test1459() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1459");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        java.lang.String str2 = python3Target0.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = null;
        java.lang.String str6 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator3, "", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = null;
        python3Target0.gen = codeGenerator7;
        java.lang.String[] strArray16 = new java.lang.String[] { "\"\"\"\"", "\\12", "\"\"", "4.5.2.1", "", "\"\"\"\"", "\"\"" };
        java.util.LinkedHashSet<java.lang.String> strSet17 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet17, strArray16);
        python3Target0.badWords = strSet17;
        org.antlr.v4.codegen.CodeGenerator codeGenerator20 = python3Target0.gen;
        java.lang.String str21 = python3Target0.getVersion();
        int int22 = python3Target0.getSerializedATNSegmentLimit();
        java.util.Set<java.lang.String> strSet23 = python3Target0.getBadWords();
        org.antlr.v4.tool.Grammar grammar24 = null;
        org.stringtemplate.v4.ST sT25 = null;
        python3Target0.genRecognizerHeaderFile(grammar24, sT25, "\"DContext\"");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str29 = python3Target0.getListLabel("\"\"\"DContext\"\"Context\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "4.5.2.1" + "'", str2, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\"\"" + "'", str6, "\"\"");
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNull(codeGenerator20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "4.5.2.1" + "'", str21, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 29 + "'", int22 == 29);
        org.junit.Assert.assertNotNull(strSet23);
    }

    @Test
    public void test1460() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1460");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        java.lang.String str2 = python3Target0.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = python3Target0.getCodeGenerator();
        org.antlr.v4.tool.Grammar grammar4 = null;
        org.stringtemplate.v4.ST sT5 = null;
        python3Target0.genRecognizerHeaderFile(grammar4, sT5, "_tsetPython3");
        java.util.Set<java.lang.String> strSet8 = python3Target0.badWords;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str10 = python3Target0.getImplicitSetLabel("\"\\\"\\\"hi!\\\"\\\"\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "4.5.2.1" + "'", str2, "4.5.2.1");
        org.junit.Assert.assertNull(codeGenerator3);
        org.junit.Assert.assertNotNull(strSet8);
    }

    @Test
    public void test1461() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1461");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray1 = python3Target0.targetCharValueEscape;
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        int int3 = python3Target0.getInlineTestSetWordSize();
        boolean boolean4 = python3Target0.supportsOverloadedMethods();
        java.lang.String str6 = python3Target0.encodeIntAsCharEscape(64);
        java.lang.String str8 = python3Target0.encodeIntAsCharEscape((int) (short) 1);
        org.antlr.v4.codegen.CodeGenerator codeGenerator9 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target10 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator9);
        java.util.Set<java.lang.String> strSet11 = python3Target10.getBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator12 = null;
        python3Target10.gen = codeGenerator12;
        java.lang.String str15 = python3Target10.getAltLabelContextStructName("hi!");
        java.lang.String str18 = python3Target10.getTargetStringLiteralFromString("\"hi!\"", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator19 = null;
        python3Target10.gen = codeGenerator19;
        org.antlr.v4.tool.Grammar grammar21 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target22 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray23 = python3Target22.targetCharValueEscape;
        org.stringtemplate.v4.STGroup sTGroup24 = python3Target22.templates;
        int int25 = python3Target22.getInlineTestSetWordSize();
        org.antlr.v4.codegen.CodeGenerator codeGenerator26 = python3Target22.gen;
        org.antlr.v4.tool.Grammar grammar27 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target28 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str30 = python3Target28.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.tool.Grammar grammar31 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target32 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean33 = python3Target32.supportsOverloadedMethods();
        java.lang.String str34 = python3Target32.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator35 = null;
        java.lang.String str38 = python3Target32.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator35, "", true);
        java.lang.String str39 = python3Target32.getVersion();
        org.antlr.v4.tool.Grammar grammar40 = null;
        int[] intArray41 = new int[] {};
        java.lang.String[] strArray42 = python3Target32.getTokenTypesAsTargetLabels(grammar40, intArray41);
        java.lang.String[] strArray43 = python3Target28.getTokenTypesAsTargetLabels(grammar31, intArray41);
        java.lang.String[] strArray44 = python3Target22.getTokenTypesAsTargetLabels(grammar27, intArray41);
        java.lang.String[] strArray45 = python3Target10.getTokenTypesAsTargetLabels(grammar21, intArray41);
        java.lang.String[] strArray46 = python3Target10.targetCharValueEscape;
        java.lang.String str48 = python3Target10.getImplicitRuleLabel("#");
        org.antlr.v4.codegen.target.Python3Target python3Target49 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean50 = python3Target49.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup51 = python3Target49.templates;
        org.antlr.v4.tool.Grammar grammar52 = null;
        org.stringtemplate.v4.ST sT53 = null;
        python3Target49.genRecognizerHeaderFile(grammar52, sT53, "");
        python3Target49.language = "Python3";
        java.util.Set<java.lang.String> strSet58 = null;
        python3Target49.badWords = strSet58;
        boolean boolean60 = python3Target49.wantsBaseVisitor();
        org.antlr.v4.codegen.target.Python3Target python3Target61 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean62 = python3Target61.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup63 = python3Target61.templates;
        java.lang.String[] strArray66 = new java.lang.String[] { "hi!", "hi!" };
        python3Target61.targetCharValueEscape = strArray66;
        org.antlr.v4.codegen.CodeGenerator codeGenerator68 = null;
        java.lang.String str71 = python3Target61.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator68, "", false);
        java.util.Set<java.lang.String> strSet72 = python3Target61.badWords;
        java.util.Set<java.lang.String> strSet73 = python3Target61.badWords;
        python3Target49.badWords = strSet73;
        python3Target10.badWords = strSet73;
        python3Target0.badWords = strSet73;
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 64 + "'", int3 == 64);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "@" + "'", str6, "@");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\\1" + "'", str8, "\\1");
        org.junit.Assert.assertNotNull(strSet11);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Hi!Context" + "'", str15, "Hi!Context");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "\"\\\"hi!\\\"\"" + "'", str18, "\"\\\"hi!\\\"\"");
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertNull(sTGroup24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 64 + "'", int25 == 64);
        org.junit.Assert.assertNull(codeGenerator26);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "\"\"\"\"\"\"" + "'", str30, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "4.5.2.1" + "'", str34, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "\"\"" + "'", str38, "\"\"");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "4.5.2.1" + "'", str39, "4.5.2.1");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[]");
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "_#" + "'", str48, "_#");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNull(sTGroup51);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNull(sTGroup63);
        org.junit.Assert.assertNotNull(strArray66);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "" + "'", str71, "");
        org.junit.Assert.assertNotNull(strSet72);
        org.junit.Assert.assertNotNull(strSet73);
    }

    @Test
    public void test1462() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1462");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.lang.String str2 = python3Target1.getVersion();
        int int3 = python3Target1.getSerializedATNSegmentLimit();
        java.lang.String str4 = python3Target1.getVersion();
        boolean boolean5 = python3Target1.wantsBaseListener();
        python3Target1.addBadWords();
        org.antlr.v4.tool.Grammar grammar7 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target9 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator8);
        java.util.Set<java.lang.String> strSet10 = python3Target9.getBadWords();
        org.antlr.v4.codegen.target.Python3Target python3Target11 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str13 = python3Target11.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.codegen.target.Python3Target python3Target14 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean15 = python3Target14.supportsOverloadedMethods();
        java.util.Set<java.lang.String> strSet16 = python3Target14.badWords;
        python3Target11.badWords = strSet16;
        python3Target9.badWords = strSet16;
        java.util.Set<java.lang.String> strSet19 = python3Target9.badWords;
        org.antlr.v4.codegen.CodeGenerator codeGenerator20 = python3Target9.getCodeGenerator();
        org.antlr.v4.tool.Grammar grammar21 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target22 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean23 = python3Target22.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup24 = python3Target22.templates;
        org.antlr.v4.tool.Grammar grammar25 = null;
        org.stringtemplate.v4.ST sT26 = null;
        python3Target22.genRecognizerHeaderFile(grammar25, sT26, "");
        python3Target22.language = "Python3";
        java.util.Set<java.lang.String> strSet31 = null;
        python3Target22.badWords = strSet31;
        org.antlr.v4.codegen.CodeGenerator codeGenerator33 = null;
        java.lang.String str36 = python3Target22.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator33, "\"Hi!Context\"", false);
        java.lang.String str38 = python3Target22.getListLabel("Python3");
        java.lang.String str40 = python3Target22.getTargetStringLiteralFromString("\\0");
        org.antlr.v4.tool.Grammar grammar41 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target42 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str44 = python3Target42.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.tool.Grammar grammar45 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target46 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean47 = python3Target46.supportsOverloadedMethods();
        java.lang.String str48 = python3Target46.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator49 = null;
        java.lang.String str52 = python3Target46.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator49, "", true);
        java.lang.String str53 = python3Target46.getVersion();
        org.antlr.v4.tool.Grammar grammar54 = null;
        int[] intArray55 = new int[] {};
        java.lang.String[] strArray56 = python3Target46.getTokenTypesAsTargetLabels(grammar54, intArray55);
        java.lang.String[] strArray57 = python3Target42.getTokenTypesAsTargetLabels(grammar45, intArray55);
        java.lang.String[] strArray58 = python3Target22.getTokenTypesAsTargetLabels(grammar41, intArray55);
        java.lang.String[] strArray59 = python3Target9.getTokenTypesAsTargetLabels(grammar21, intArray55);
        java.lang.String[] strArray60 = python3Target1.getTokenTypesAsTargetLabels(grammar7, intArray55);
        boolean boolean61 = python3Target1.wantsBaseVisitor();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "4.5.2.1" + "'", str2, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 29 + "'", int3 == 29);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "4.5.2.1" + "'", str4, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(strSet10);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "\"\"\"\"\"\"" + "'", str13, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertNotNull(strSet19);
        org.junit.Assert.assertNull(codeGenerator20);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNull(sTGroup24);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "Hi!Context" + "'", str36, "Hi!Context");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "Python3" + "'", str38, "Python3");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "\"\\0\"" + "'", str40, "\"\\0\"");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "\"\"\"\"\"\"" + "'", str44, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "4.5.2.1" + "'", str48, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "\"\"" + "'", str52, "\"\"");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "4.5.2.1" + "'", str53, "4.5.2.1");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[]");
        org.junit.Assert.assertNotNull(strArray56);
        org.junit.Assert.assertNotNull(strArray57);
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertNotNull(strArray59);
        org.junit.Assert.assertNotNull(strArray60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
    }

    @Test
    public void test1463() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1463");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!", "hi!" };
        python3Target0.targetCharValueEscape = strArray5;
        java.lang.String str8 = python3Target0.getTargetStringLiteralFromString("\"\"");
        java.lang.String str9 = python3Target0.getLanguage();
        org.antlr.v4.codegen.target.Python3Target python3Target10 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean11 = python3Target10.supportsOverloadedMethods();
        java.lang.String str12 = python3Target10.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator13 = null;
        java.lang.String str16 = python3Target10.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator13, "", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator17 = null;
        python3Target10.gen = codeGenerator17;
        java.lang.String[] strArray26 = new java.lang.String[] { "\"\"\"\"", "\\12", "\"\"", "4.5.2.1", "", "\"\"\"\"", "\"\"" };
        java.util.LinkedHashSet<java.lang.String> strSet27 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet27, strArray26);
        python3Target10.badWords = strSet27;
        org.antlr.v4.codegen.CodeGenerator codeGenerator30 = python3Target10.gen;
        java.lang.String str33 = python3Target10.getTargetStringLiteralFromString("\\12", true);
        java.util.Set<java.lang.String> strSet34 = python3Target10.badWords;
        java.lang.String str35 = python3Target10.language;
        java.util.Set<java.lang.String> strSet36 = python3Target10.getBadWords();
        python3Target0.badWords = strSet36;
        java.lang.String[] strArray38 = python3Target0.targetCharValueEscape;
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\"\"\"\"" + "'", str8, "\"\"\"\"");
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "4.5.2.1" + "'", str12, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "\"\"" + "'", str16, "\"\"");
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNull(codeGenerator30);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "\"\\12\"" + "'", str33, "\"\\12\"");
        org.junit.Assert.assertNotNull(strSet34);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNotNull(strSet36);
        org.junit.Assert.assertNotNull(strArray38);
    }

    @Test
    public void test1464() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1464");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python3Target1.getBadWords();
        java.lang.String str4 = python3Target1.getAltLabelContextStructName("d");
        org.stringtemplate.v4.STGroup sTGroup5 = python3Target1.getTemplates();
        boolean boolean6 = python3Target1.supportsOverloadedMethods();
        boolean boolean7 = python3Target1.supportsOverloadedMethods();
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target9 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator8);
        java.lang.String str11 = python3Target9.getTargetStringLiteralFromString("");
        int int12 = python3Target9.getSerializedATNSegmentLimit();
        int int13 = python3Target9.getInlineTestSetWordSize();
        org.antlr.v4.tool.Grammar grammar14 = null;
        org.stringtemplate.v4.ST sT15 = null;
        python3Target9.genRecognizerHeaderFile(grammar14, sT15, "@");
        boolean boolean18 = python3Target9.templatesExist();
        org.stringtemplate.v4.STGroup sTGroup19 = python3Target9.loadTemplates();
        python3Target1.templates = sTGroup19;
        java.lang.String str22 = python3Target1.getImplicitSetLabel("\"\"_tset12\"\"Context");
        java.lang.String[] strArray23 = python3Target1.targetCharValueEscape;
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "DContext" + "'", str4, "DContext");
        org.junit.Assert.assertNotNull(sTGroup5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "\"\"" + "'", str11, "\"\"");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 29 + "'", int12 == 29);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 64 + "'", int13 == 64);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(sTGroup19);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "_tset\"\"_tset12\"\"Context" + "'", str22, "_tset\"\"_tset12\"\"Context");
        org.junit.Assert.assertNotNull(strArray23);
    }

    @Test
    public void test1465() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1465");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.lang.String str2 = python3Target1.getVersion();
        int int3 = python3Target1.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet4 = python3Target1.getBadWords();
        java.lang.String str7 = python3Target1.getTargetStringLiteralFromString("\"\"DContext\"\"", false);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "4.5.2.1" + "'", str2, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 64 + "'", int3 == 64);
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "\\\"\\\"DContext\\\"\\\"" + "'", str7, "\\\"\\\"DContext\\\"\\\"");
    }

    @Test
    public void test1466() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1466");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        org.antlr.v4.tool.Grammar grammar3 = null;
        org.stringtemplate.v4.ST sT4 = null;
        python3Target0.genRecognizerHeaderFile(grammar3, sT4, "");
        python3Target0.language = "Python3";
        int int9 = python3Target0.getSerializedATNSegmentLimit();
        java.lang.String str11 = python3Target0.getListLabel("_tsetPython3");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str13 = python3Target0.getImplicitTokenLabel("\"\\12\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 29 + "'", int9 == 29);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "_tsetPython3" + "'", str11, "_tsetPython3");
    }

    @Test
    public void test1467() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1467");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        org.antlr.v4.tool.Grammar grammar3 = null;
        org.stringtemplate.v4.ST sT4 = null;
        python3Target0.genRecognizerHeaderFile(grammar3, sT4, "");
        boolean boolean7 = python3Target0.supportsOverloadedMethods();
        python3Target0.language = "\"\\12\"";
        boolean boolean10 = python3Target0.wantsBaseVisitor();
        org.antlr.v4.tool.Grammar grammar11 = null;
        org.stringtemplate.v4.ST sT12 = null;
        // The following exception was thrown during execution in test generation
        try {
            python3Target0.genFile(grammar11, sT12, "\"\"\\\"\\\"\\\"\\\\\\\"\\\\\\\"hi!\\\\\\\"\\\\\\\"\\\"\\\"\\\"\"\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test1468() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1468");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        java.lang.String str2 = python3Target0.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = null;
        java.lang.String str6 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator3, "", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = null;
        python3Target0.gen = codeGenerator7;
        int int9 = python3Target0.getSerializedATNSegmentLimit();
        java.lang.String str11 = python3Target0.getTargetStringLiteralFromString("\\1");
        java.lang.String str12 = python3Target0.language;
        org.antlr.v4.tool.Grammar grammar13 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator14 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target15 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator14);
        java.util.Set<java.lang.String> strSet16 = python3Target15.getBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator17 = null;
        python3Target15.gen = codeGenerator17;
        java.lang.String str20 = python3Target15.getAltLabelContextStructName("hi!");
        org.antlr.v4.tool.Grammar grammar21 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target22 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean23 = python3Target22.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup24 = python3Target22.templates;
        java.lang.String[] strArray27 = new java.lang.String[] { "hi!", "hi!" };
        python3Target22.targetCharValueEscape = strArray27;
        java.lang.String[] strArray30 = new java.lang.String[] { "hi!" };
        org.antlr.v4.codegen.target.Python3Target.python3Keywords = strArray30;
        python3Target22.targetCharValueEscape = strArray30;
        org.antlr.v4.tool.Grammar grammar33 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target34 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str36 = python3Target34.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator37 = null;
        python3Target34.gen = codeGenerator37;
        org.antlr.v4.tool.Grammar grammar39 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target40 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str42 = python3Target40.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.tool.Grammar grammar43 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target44 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean45 = python3Target44.supportsOverloadedMethods();
        java.lang.String str46 = python3Target44.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator47 = null;
        java.lang.String str50 = python3Target44.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator47, "", true);
        java.lang.String str51 = python3Target44.getVersion();
        org.antlr.v4.tool.Grammar grammar52 = null;
        int[] intArray53 = new int[] {};
        java.lang.String[] strArray54 = python3Target44.getTokenTypesAsTargetLabels(grammar52, intArray53);
        java.lang.String[] strArray55 = python3Target40.getTokenTypesAsTargetLabels(grammar43, intArray53);
        java.lang.String[] strArray56 = python3Target34.getTokenTypesAsTargetLabels(grammar39, intArray53);
        java.lang.String[] strArray57 = python3Target22.getTokenTypesAsTargetLabels(grammar33, intArray53);
        java.lang.String[] strArray58 = python3Target15.getTokenTypesAsTargetLabels(grammar21, intArray53);
        java.lang.String[] strArray59 = python3Target0.getTokenTypesAsTargetLabels(grammar13, intArray53);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str61 = python3Target0.getListLabel("_#");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "4.5.2.1" + "'", str2, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\"\"" + "'", str6, "\"\"");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 29 + "'", int9 == 29);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "\"\\1\"" + "'", str11, "\"\\1\"");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "Hi!Context" + "'", str20, "Hi!Context");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNull(sTGroup24);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "\"\"\"\"\"\"" + "'", str36, "\"\"\"\"\"\"");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "\"\"\"\"\"\"" + "'", str42, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "4.5.2.1" + "'", str46, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "\"\"" + "'", str50, "\"\"");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "4.5.2.1" + "'", str51, "4.5.2.1");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[]");
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertNotNull(strArray55);
        org.junit.Assert.assertNotNull(strArray56);
        org.junit.Assert.assertNotNull(strArray57);
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertNotNull(strArray59);
    }

    @Test
    public void test1469() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1469");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        java.lang.String str2 = python3Target0.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = null;
        java.lang.String str6 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator3, "", true);
        java.lang.String str7 = python3Target0.getVersion();
        org.antlr.v4.tool.Grammar grammar8 = null;
        int[] intArray9 = new int[] {};
        java.lang.String[] strArray10 = python3Target0.getTokenTypesAsTargetLabels(grammar8, intArray9);
        java.lang.String[] strArray11 = python3Target0.targetCharValueEscape;
        org.antlr.v4.tool.Grammar grammar12 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str14 = python3Target0.getTokenTypeAsTargetLabel(grammar12, (int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "4.5.2.1" + "'", str2, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\"\"" + "'", str6, "\"\"");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "4.5.2.1" + "'", str7, "4.5.2.1");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[]");
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(strArray11);
    }

    @Test
    public void test1470() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1470");
        org.antlr.v4.codegen.target.Python3Target.PythonStringRenderer pythonStringRenderer0 = new org.antlr.v4.codegen.target.Python3Target.PythonStringRenderer();
        java.lang.Object obj1 = null;
        java.util.Locale locale3 = null;
        java.lang.String str4 = pythonStringRenderer0.toString(obj1, "\"\"\"\"\"\"", locale3);
        org.antlr.v4.codegen.target.Python3Target python3Target5 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean6 = python3Target5.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup7 = python3Target5.templates;
        org.antlr.v4.tool.Grammar grammar8 = null;
        org.stringtemplate.v4.ST sT9 = null;
        python3Target5.genRecognizerHeaderFile(grammar8, sT9, "");
        org.antlr.v4.codegen.CodeGenerator codeGenerator12 = python3Target5.getCodeGenerator();
        java.util.Set<java.lang.String> strSet13 = python3Target5.badWords;
        boolean boolean14 = python3Target5.templatesExist();
        boolean boolean15 = python3Target5.templatesExist();
        java.util.Locale locale17 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str18 = pythonStringRenderer0.toString((java.lang.Object) python3Target5, "\"_tset_tset_12\"", locale17);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: org.antlr.v4.codegen.target.Python3Target cannot be cast to java.lang.String");
        } catch (java.lang.ClassCastException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "\"\"\"\"\"\"" + "'", str4, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(sTGroup7);
        org.junit.Assert.assertNull(codeGenerator12);
        org.junit.Assert.assertNotNull(strSet13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test1471() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1471");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!", "hi!" };
        python3Target0.targetCharValueEscape = strArray5;
        java.lang.String str8 = python3Target0.getTargetStringLiteralFromString("\"\"");
        java.lang.String str10 = python3Target0.getTargetStringLiteralFromString("\"hi!\"");
        java.lang.String str11 = python3Target0.language;
        org.antlr.v4.tool.ast.GrammarAST grammarAST12 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str13 = python3Target0.getLoopLabel(grammarAST12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\"\"\"\"" + "'", str8, "\"\"\"\"");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\"\"hi!\"\"" + "'", str10, "\"\"hi!\"\"");
        org.junit.Assert.assertNull(str11);
    }

    @Test
    public void test1472() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1472");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.lang.String str2 = python3Target1.getLanguage();
        java.lang.String str4 = python3Target1.getImplicitSetLabel("Python3");
        org.antlr.v4.codegen.CodeGenerator codeGenerator5 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target6 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator5);
        java.util.Set<java.lang.String> strSet7 = python3Target6.getBadWords();
        python3Target1.badWords = strSet7;
        java.lang.String str10 = python3Target1.getListLabel("\"hi!\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator11 = null;
        java.lang.String str14 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator11, "", false);
        java.util.Set<java.lang.String> strSet15 = python3Target1.getBadWords();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "Python3" + "'", str2, "Python3");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "_tsetPython3" + "'", str4, "_tsetPython3");
        org.junit.Assert.assertNotNull(strSet7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\"hi!\"" + "'", str10, "\"hi!\"");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertNotNull(strSet15);
    }

    @Test
    public void test1473() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1473");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python3Target1.getBadWords();
        java.lang.String str4 = python3Target1.getAltLabelContextStructName("d");
        java.lang.String str5 = python3Target1.getLanguage();
        java.lang.String str6 = python3Target1.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = null;
        java.lang.String str10 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator7, "\"_tsetPython3\"", true);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str12 = python3Target1.getElementListName("\"1\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "DContext" + "'", str4, "DContext");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Python3" + "'", str5, "Python3");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "4.5.2.1" + "'", str6, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\"_tsetPython3\"" + "'", str10, "\"_tsetPython3\"");
    }

    @Test
    public void test1474() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1474");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        python3Target0.language = "";
        org.antlr.v4.codegen.target.Python3Target python3Target3 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean4 = python3Target3.supportsOverloadedMethods();
        java.lang.String str5 = python3Target3.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = null;
        java.lang.String str9 = python3Target3.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator6, "", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = null;
        python3Target3.gen = codeGenerator10;
        java.lang.String[] strArray19 = new java.lang.String[] { "\"\"\"\"", "\\12", "\"\"", "4.5.2.1", "", "\"\"\"\"", "\"\"" };
        java.util.LinkedHashSet<java.lang.String> strSet20 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet20, strArray19);
        python3Target3.badWords = strSet20;
        python3Target0.badWords = strSet20;
        java.lang.String str25 = python3Target0.encodeIntAsCharEscape((int) (byte) 100);
        java.lang.String str26 = python3Target0.getLanguage();
        java.lang.String[] strArray27 = new java.lang.String[] {};
        python3Target0.targetCharValueEscape = strArray27;
        java.lang.String str31 = python3Target0.getTargetStringLiteralFromString("", true);
        java.lang.Class<?> wildcardClass32 = python3Target0.getClass();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "4.5.2.1" + "'", str5, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\"\"" + "'", str9, "\"\"");
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "d" + "'", str25, "d");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "\"\"" + "'", str31, "\"\"");
        org.junit.Assert.assertNotNull(wildcardClass32);
    }

    @Test
    public void test1475() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1475");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        python3Target0.language = "4.5.2.1";
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = python3Target0.getCodeGenerator();
        org.antlr.v4.codegen.CodeGenerator codeGenerator4 = python3Target0.gen;
        org.antlr.v4.codegen.CodeGenerator codeGenerator5 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target6 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator5);
        java.lang.String str8 = python3Target6.getTargetStringLiteralFromString("");
        int int9 = python3Target6.getSerializedATNSegmentLimit();
        boolean boolean10 = python3Target6.wantsBaseVisitor();
        org.stringtemplate.v4.STGroup sTGroup11 = python3Target6.loadTemplates();
        python3Target0.templates = sTGroup11;
        java.lang.String str13 = python3Target0.language;
        org.antlr.v4.codegen.CodeGenerator codeGenerator14 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target15 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator14);
        java.util.Set<java.lang.String> strSet16 = python3Target15.getBadWords();
        java.lang.String str18 = python3Target15.getAltLabelContextStructName("d");
        org.stringtemplate.v4.STGroup sTGroup19 = python3Target15.getTemplates();
        python3Target0.templates = sTGroup19;
        org.antlr.v4.tool.ast.GrammarAST grammarAST21 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean22 = python3Target0.grammarSymbolCausesIssueInGeneratedCode(grammarAST21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(codeGenerator3);
        org.junit.Assert.assertNull(codeGenerator4);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\"\"" + "'", str8, "\"\"");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 29 + "'", int9 == 29);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(sTGroup11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "4.5.2.1" + "'", str13, "4.5.2.1");
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "DContext" + "'", str18, "DContext");
        org.junit.Assert.assertNotNull(sTGroup19);
    }

    @Test
    public void test1476() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1476");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!", "hi!" };
        python3Target0.targetCharValueEscape = strArray5;
        java.lang.String str8 = python3Target0.getTargetStringLiteralFromString("\"\"");
        org.stringtemplate.v4.STGroup sTGroup9 = null;
        python3Target0.templates = sTGroup9;
        java.lang.String[] strArray11 = python3Target0.targetCharValueEscape;
        int int12 = python3Target0.getInlineTestSetWordSize();
        java.lang.String[] strArray13 = new java.lang.String[] {};
        python3Target0.targetCharValueEscape = strArray13;
        int int15 = python3Target0.getInlineTestSetWordSize();
        org.antlr.v4.tool.Grammar grammar16 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str18 = python3Target0.getTokenTypeAsTargetLabel(grammar16, (int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\"\"\"\"" + "'", str8, "\"\"\"\"");
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 64 + "'", int12 == 64);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 64 + "'", int15 == 64);
    }

    @Test
    public void test1477() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1477");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.lang.String str2 = python3Target1.getLanguage();
        java.lang.String str4 = python3Target1.getImplicitSetLabel("Python3");
        org.antlr.v4.codegen.CodeGenerator codeGenerator5 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target6 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator5);
        java.util.Set<java.lang.String> strSet7 = python3Target6.getBadWords();
        python3Target1.badWords = strSet7;
        java.lang.String str10 = python3Target1.getListLabel("\"hi!\"");
        org.antlr.v4.tool.Grammar grammar11 = null;
        org.stringtemplate.v4.ST sT12 = null;
        // The following exception was thrown during execution in test generation
        try {
            python3Target1.genListenerFile(grammar11, sT12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "Python3" + "'", str2, "Python3");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "_tsetPython3" + "'", str4, "_tsetPython3");
        org.junit.Assert.assertNotNull(strSet7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\"hi!\"" + "'", str10, "\"hi!\"");
    }

    @Test
    public void test1478() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1478");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python3Target1.getBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = null;
        python3Target1.gen = codeGenerator3;
        java.lang.String str6 = python3Target1.getAltLabelContextStructName("hi!");
        java.lang.String str9 = python3Target1.getTargetStringLiteralFromString("\"hi!\"", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = null;
        python3Target1.gen = codeGenerator10;
        org.antlr.v4.tool.Grammar grammar12 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target13 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray14 = python3Target13.targetCharValueEscape;
        org.stringtemplate.v4.STGroup sTGroup15 = python3Target13.templates;
        int int16 = python3Target13.getInlineTestSetWordSize();
        org.antlr.v4.codegen.CodeGenerator codeGenerator17 = python3Target13.gen;
        org.antlr.v4.tool.Grammar grammar18 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target19 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str21 = python3Target19.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.tool.Grammar grammar22 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target23 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean24 = python3Target23.supportsOverloadedMethods();
        java.lang.String str25 = python3Target23.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator26 = null;
        java.lang.String str29 = python3Target23.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator26, "", true);
        java.lang.String str30 = python3Target23.getVersion();
        org.antlr.v4.tool.Grammar grammar31 = null;
        int[] intArray32 = new int[] {};
        java.lang.String[] strArray33 = python3Target23.getTokenTypesAsTargetLabels(grammar31, intArray32);
        java.lang.String[] strArray34 = python3Target19.getTokenTypesAsTargetLabels(grammar22, intArray32);
        java.lang.String[] strArray35 = python3Target13.getTokenTypesAsTargetLabels(grammar18, intArray32);
        java.lang.String[] strArray36 = python3Target1.getTokenTypesAsTargetLabels(grammar12, intArray32);
        org.antlr.v4.codegen.CodeGenerator codeGenerator37 = null;
        python3Target1.gen = codeGenerator37;
        org.antlr.v4.codegen.CodeGenerator codeGenerator39 = python3Target1.gen;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str41 = python3Target1.getElementName("\"\"\\\\0\"\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Hi!Context" + "'", str6, "Hi!Context");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\"\\\"hi!\\\"\"" + "'", str9, "\"\\\"hi!\\\"\"");
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertNull(sTGroup15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 64 + "'", int16 == 64);
        org.junit.Assert.assertNull(codeGenerator17);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "\"\"\"\"\"\"" + "'", str21, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "4.5.2.1" + "'", str25, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "\"\"" + "'", str29, "\"\"");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "4.5.2.1" + "'", str30, "4.5.2.1");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[]");
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertNull(codeGenerator39);
    }

    @Test
    public void test1479() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1479");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        java.util.Set<java.lang.String> strSet2 = python3Target0.badWords;
        int int3 = python3Target0.getSerializedATNSegmentLimit();
        java.lang.String str4 = python3Target0.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator5 = null;
        java.lang.String str8 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator5, "\\35", false);
        java.lang.String str9 = python3Target0.getVersion();
        org.antlr.v4.tool.ast.GrammarAST grammarAST10 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str11 = python3Target0.getLoopLabel(grammarAST10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 29 + "'", int3 == 29);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "3" + "'", str8, "3");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "4.5.2.1" + "'", str9, "4.5.2.1");
    }

    @Test
    public void test1480() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1480");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        org.antlr.v4.tool.Grammar grammar3 = null;
        org.stringtemplate.v4.ST sT4 = null;
        python3Target0.genRecognizerHeaderFile(grammar3, sT4, "");
        python3Target0.language = "Python3";
        java.util.Set<java.lang.String> strSet9 = null;
        python3Target0.badWords = strSet9;
        org.antlr.v4.codegen.CodeGenerator codeGenerator11 = null;
        java.lang.String str14 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator11, "\"Hi!Context\"", false);
        java.lang.String str16 = python3Target0.getListLabel("Python3");
        java.lang.String str18 = python3Target0.getImplicitSetLabel("_12");
        java.lang.String str20 = python3Target0.getImplicitSetLabel("\"\"\"\"\"\"\"\"ContextContextContext");
        java.lang.String[] strArray21 = python3Target0.targetCharValueEscape;
        int int22 = python3Target0.getInlineTestSetWordSize();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Hi!Context" + "'", str14, "Hi!Context");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Python3" + "'", str16, "Python3");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "_tset_12" + "'", str18, "_tset_12");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "_tset\"\"\"\"\"\"\"\"ContextContextContext" + "'", str20, "_tset\"\"\"\"\"\"\"\"ContextContextContext");
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 64 + "'", int22 == 64);
    }

    @Test
    public void test1481() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1481");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.antlr.v4.codegen.CodeGenerator codeGenerator2 = null;
        python3Target0.gen = codeGenerator2;
        org.antlr.v4.tool.Grammar grammar4 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str6 = python3Target0.getTokenTypeAsTargetLabel(grammar4, (int) (short) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
    }

    @Test
    public void test1482() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1482");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.lang.String str3 = python3Target1.getTargetStringLiteralFromString("");
        int int4 = python3Target1.getSerializedATNSegmentLimit();
        boolean boolean5 = python3Target1.wantsBaseVisitor();
        java.lang.String str6 = python3Target1.getVersion();
        org.stringtemplate.v4.STGroup sTGroup7 = python3Target1.getTemplates();
        python3Target1.addBadWords();
        python3Target1.addBadWords();
        org.antlr.v4.codegen.target.Python3Target python3Target10 = new org.antlr.v4.codegen.target.Python3Target();
        python3Target10.language = "4.5.2.1";
        org.antlr.v4.codegen.CodeGenerator codeGenerator13 = python3Target10.getCodeGenerator();
        org.antlr.v4.codegen.CodeGenerator codeGenerator14 = python3Target10.gen;
        java.util.Set<java.lang.String> strSet15 = python3Target10.badWords;
        python3Target1.badWords = strSet15;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str18 = python3Target1.getElementListName("\"\"\\\"\\\"\"\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "\"\"" + "'", str3, "\"\"");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 29 + "'", int4 == 29);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "4.5.2.1" + "'", str6, "4.5.2.1");
        org.junit.Assert.assertNotNull(sTGroup7);
        org.junit.Assert.assertNull(codeGenerator13);
        org.junit.Assert.assertNull(codeGenerator14);
        org.junit.Assert.assertNotNull(strSet15);
    }

    @Test
    public void test1483() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1483");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python3Target1.getBadWords();
        org.antlr.v4.codegen.target.Python3Target python3Target3 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str5 = python3Target3.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.codegen.target.Python3Target python3Target6 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean7 = python3Target6.supportsOverloadedMethods();
        java.util.Set<java.lang.String> strSet8 = python3Target6.badWords;
        python3Target3.badWords = strSet8;
        python3Target1.badWords = strSet8;
        java.util.Set<java.lang.String> strSet11 = python3Target1.badWords;
        org.antlr.v4.codegen.CodeGenerator codeGenerator12 = python3Target1.getCodeGenerator();
        java.lang.String str14 = python3Target1.getTargetStringLiteralFromString("@");
        org.antlr.v4.codegen.CodeGenerator codeGenerator15 = python3Target1.gen;
        org.antlr.v4.codegen.CodeGenerator codeGenerator16 = python3Target1.gen;
        boolean boolean17 = python3Target1.supportsOverloadedMethods();
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "\"\"\"\"\"\"" + "'", str5, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertNotNull(strSet11);
        org.junit.Assert.assertNull(codeGenerator12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "\"@\"" + "'", str14, "\"@\"");
        org.junit.Assert.assertNull(codeGenerator15);
        org.junit.Assert.assertNull(codeGenerator16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    }

    @Test
    public void test1484() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1484");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.lang.String str3 = python3Target1.getTargetStringLiteralFromString("");
        int int4 = python3Target1.getSerializedATNSegmentLimit();
        boolean boolean5 = python3Target1.wantsBaseVisitor();
        org.stringtemplate.v4.STGroup sTGroup6 = python3Target1.loadTemplates();
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = python3Target1.gen;
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = python3Target1.getCodeGenerator();
        python3Target1.addBadWords();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "\"\"" + "'", str3, "\"\"");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 29 + "'", int4 == 29);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(sTGroup6);
        org.junit.Assert.assertNull(codeGenerator7);
        org.junit.Assert.assertNull(codeGenerator8);
    }

    @Test
    public void test1485() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1485");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        python3Target0.language = "";
        org.antlr.v4.codegen.target.Python3Target python3Target3 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean4 = python3Target3.supportsOverloadedMethods();
        java.lang.String str5 = python3Target3.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = null;
        java.lang.String str9 = python3Target3.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator6, "", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = null;
        python3Target3.gen = codeGenerator10;
        java.lang.String[] strArray19 = new java.lang.String[] { "\"\"\"\"", "\\12", "\"\"", "4.5.2.1", "", "\"\"\"\"", "\"\"" };
        java.util.LinkedHashSet<java.lang.String> strSet20 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet20, strArray19);
        python3Target3.badWords = strSet20;
        python3Target0.badWords = strSet20;
        java.lang.String str25 = python3Target0.encodeIntAsCharEscape((int) (byte) 100);
        java.lang.String str26 = python3Target0.getLanguage();
        java.lang.String str28 = python3Target0.getTargetStringLiteralFromString("\"\\0\"");
        org.antlr.v4.codegen.target.Python3Target python3Target29 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean30 = python3Target29.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup31 = python3Target29.templates;
        org.antlr.v4.tool.Grammar grammar32 = null;
        org.stringtemplate.v4.ST sT33 = null;
        python3Target29.genRecognizerHeaderFile(grammar32, sT33, "");
        python3Target29.language = "Python3";
        java.util.Set<java.lang.String> strSet38 = null;
        python3Target29.badWords = strSet38;
        boolean boolean40 = python3Target29.wantsBaseVisitor();
        java.lang.String str42 = python3Target29.getImplicitSetLabel("Python3");
        int int43 = python3Target29.getInlineTestSetWordSize();
        java.lang.String str44 = python3Target29.language;
        java.lang.String str45 = python3Target29.getLanguage();
        int int46 = python3Target29.getInlineTestSetWordSize();
        java.lang.String str48 = python3Target29.getImplicitRuleLabel("\"\\\"\\\"4.5.2.1\\\"\\\"\"");
        java.lang.String str50 = python3Target29.getImplicitSetLabel("_tset_12");
        org.stringtemplate.v4.STGroup sTGroup51 = python3Target29.templates;
        python3Target0.templates = sTGroup51;
        org.antlr.v4.tool.Grammar grammar53 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target54 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean55 = python3Target54.supportsOverloadedMethods();
        java.lang.String str56 = python3Target54.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator57 = null;
        java.lang.String str60 = python3Target54.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator57, "", true);
        java.lang.String str61 = python3Target54.getVersion();
        org.antlr.v4.tool.Grammar grammar62 = null;
        int[] intArray63 = new int[] {};
        java.lang.String[] strArray64 = python3Target54.getTokenTypesAsTargetLabels(grammar62, intArray63);
        java.lang.String[] strArray65 = python3Target0.getTokenTypesAsTargetLabels(grammar53, intArray63);
        java.lang.String str66 = python3Target0.getLanguage();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "4.5.2.1" + "'", str5, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\"\"" + "'", str9, "\"\"");
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "d" + "'", str25, "d");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "\"\"\\0\"\"" + "'", str28, "\"\"\\0\"\"");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNull(sTGroup31);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "_tsetPython3" + "'", str42, "_tsetPython3");
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 64 + "'", int43 == 64);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "Python3" + "'", str44, "Python3");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "Python3" + "'", str45, "Python3");
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 64 + "'", int46 == 64);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "_\"\\\"\\\"4.5.2.1\\\"\\\"\"" + "'", str48, "_\"\\\"\\\"4.5.2.1\\\"\\\"\"");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "_tset_tset_12" + "'", str50, "_tset_tset_12");
        org.junit.Assert.assertNotNull(sTGroup51);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "4.5.2.1" + "'", str56, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "\"\"" + "'", str60, "\"\"");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "4.5.2.1" + "'", str61, "4.5.2.1");
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[]");
        org.junit.Assert.assertNotNull(strArray64);
        org.junit.Assert.assertNotNull(strArray65);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "" + "'", str66, "");
    }

    @Test
    public void test1486() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1486");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.lang.String str3 = python3Target1.getTargetStringLiteralFromString("");
        int int4 = python3Target1.getSerializedATNSegmentLimit();
        boolean boolean5 = python3Target1.wantsBaseListener();
        python3Target1.language = "\"\"@\"\"";
        java.lang.String str10 = python3Target1.getTargetStringLiteralFromString("_\"\"\\\"\\\"hi!\\\"\\\"\"\"Context", false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "\"\"" + "'", str3, "\"\"");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 29 + "'", int4 == 29);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "_\\\"\\\"\\\\\\\"\\\\\\\"hi!\\\\\\\"\\\\\\\"\\\"\\\"Context" + "'", str10, "_\\\"\\\"\\\\\\\"\\\\\\\"hi!\\\\\\\"\\\\\\\"\\\"\\\"Context");
    }

    @Test
    public void test1487() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1487");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str2 = python3Target0.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.tool.Grammar grammar3 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target4 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean5 = python3Target4.supportsOverloadedMethods();
        java.lang.String str6 = python3Target4.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = null;
        java.lang.String str10 = python3Target4.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator7, "", true);
        java.lang.String str11 = python3Target4.getVersion();
        org.antlr.v4.tool.Grammar grammar12 = null;
        int[] intArray13 = new int[] {};
        java.lang.String[] strArray14 = python3Target4.getTokenTypesAsTargetLabels(grammar12, intArray13);
        java.lang.String[] strArray15 = python3Target0.getTokenTypesAsTargetLabels(grammar3, intArray13);
        java.lang.String[] strArray16 = python3Target0.targetCharValueEscape;
        org.antlr.v4.codegen.target.Python3Target python3Target17 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray18 = python3Target17.targetCharValueEscape;
        org.stringtemplate.v4.STGroup sTGroup19 = python3Target17.templates;
        org.antlr.v4.codegen.CodeGenerator codeGenerator20 = null;
        java.lang.String str23 = python3Target17.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator20, "\"\\12\"", false);
        int int24 = python3Target17.getInlineTestSetWordSize();
        org.antlr.v4.codegen.CodeGenerator codeGenerator25 = python3Target17.getCodeGenerator();
        org.antlr.v4.tool.Grammar grammar26 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator27 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target28 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator27);
        java.lang.String str29 = python3Target28.getVersion();
        int int30 = python3Target28.getSerializedATNSegmentLimit();
        java.lang.String str31 = python3Target28.getVersion();
        boolean boolean32 = python3Target28.wantsBaseListener();
        python3Target28.addBadWords();
        org.antlr.v4.tool.Grammar grammar34 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator35 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target36 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator35);
        java.util.Set<java.lang.String> strSet37 = python3Target36.getBadWords();
        org.antlr.v4.codegen.target.Python3Target python3Target38 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str40 = python3Target38.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.codegen.target.Python3Target python3Target41 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean42 = python3Target41.supportsOverloadedMethods();
        java.util.Set<java.lang.String> strSet43 = python3Target41.badWords;
        python3Target38.badWords = strSet43;
        python3Target36.badWords = strSet43;
        java.util.Set<java.lang.String> strSet46 = python3Target36.badWords;
        org.antlr.v4.codegen.CodeGenerator codeGenerator47 = python3Target36.getCodeGenerator();
        org.antlr.v4.tool.Grammar grammar48 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target49 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean50 = python3Target49.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup51 = python3Target49.templates;
        org.antlr.v4.tool.Grammar grammar52 = null;
        org.stringtemplate.v4.ST sT53 = null;
        python3Target49.genRecognizerHeaderFile(grammar52, sT53, "");
        python3Target49.language = "Python3";
        java.util.Set<java.lang.String> strSet58 = null;
        python3Target49.badWords = strSet58;
        org.antlr.v4.codegen.CodeGenerator codeGenerator60 = null;
        java.lang.String str63 = python3Target49.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator60, "\"Hi!Context\"", false);
        java.lang.String str65 = python3Target49.getListLabel("Python3");
        java.lang.String str67 = python3Target49.getTargetStringLiteralFromString("\\0");
        org.antlr.v4.tool.Grammar grammar68 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target69 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str71 = python3Target69.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.tool.Grammar grammar72 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target73 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean74 = python3Target73.supportsOverloadedMethods();
        java.lang.String str75 = python3Target73.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator76 = null;
        java.lang.String str79 = python3Target73.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator76, "", true);
        java.lang.String str80 = python3Target73.getVersion();
        org.antlr.v4.tool.Grammar grammar81 = null;
        int[] intArray82 = new int[] {};
        java.lang.String[] strArray83 = python3Target73.getTokenTypesAsTargetLabels(grammar81, intArray82);
        java.lang.String[] strArray84 = python3Target69.getTokenTypesAsTargetLabels(grammar72, intArray82);
        java.lang.String[] strArray85 = python3Target49.getTokenTypesAsTargetLabels(grammar68, intArray82);
        java.lang.String[] strArray86 = python3Target36.getTokenTypesAsTargetLabels(grammar48, intArray82);
        java.lang.String[] strArray87 = python3Target28.getTokenTypesAsTargetLabels(grammar34, intArray82);
        java.lang.String[] strArray88 = python3Target17.getTokenTypesAsTargetLabels(grammar26, intArray82);
        python3Target0.targetCharValueEscape = strArray88;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str91 = python3Target0.getElementListName("\"_\"\\1\"\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "\"\"\"\"\"\"" + "'", str2, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "4.5.2.1" + "'", str6, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\"\"" + "'", str10, "\"\"");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "4.5.2.1" + "'", str11, "4.5.2.1");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[]");
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertNull(sTGroup19);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "12" + "'", str23, "12");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 64 + "'", int24 == 64);
        org.junit.Assert.assertNull(codeGenerator25);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "4.5.2.1" + "'", str29, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 29 + "'", int30 == 29);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "4.5.2.1" + "'", str31, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(strSet37);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "\"\"\"\"\"\"" + "'", str40, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(strSet43);
        org.junit.Assert.assertNotNull(strSet46);
        org.junit.Assert.assertNull(codeGenerator47);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNull(sTGroup51);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "Hi!Context" + "'", str63, "Hi!Context");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "Python3" + "'", str65, "Python3");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "\"\\0\"" + "'", str67, "\"\\0\"");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "\"\"\"\"\"\"" + "'", str71, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "4.5.2.1" + "'", str75, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "\"\"" + "'", str79, "\"\"");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "4.5.2.1" + "'", str80, "4.5.2.1");
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[]");
        org.junit.Assert.assertNotNull(strArray83);
        org.junit.Assert.assertNotNull(strArray84);
        org.junit.Assert.assertNotNull(strArray85);
        org.junit.Assert.assertNotNull(strArray86);
        org.junit.Assert.assertNotNull(strArray87);
        org.junit.Assert.assertNotNull(strArray88);
    }

    @Test
    public void test1488() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1488");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python3Target1.getBadWords();
        java.lang.String str4 = python3Target1.getAltLabelContextStructName("d");
        org.stringtemplate.v4.STGroup sTGroup5 = python3Target1.getTemplates();
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = null;
        java.lang.String str9 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator6, "", true);
        java.lang.String str11 = python3Target1.getImplicitSetLabel("\"\\0\"");
        java.lang.String str13 = python3Target1.getListLabel("\"Python3\"");
        org.stringtemplate.v4.STGroup sTGroup14 = null;
        python3Target1.templates = sTGroup14;
        java.lang.String str17 = python3Target1.getAltLabelContextStructName("\"\"\\1\"\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator18 = null;
        python3Target1.gen = codeGenerator18;
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "DContext" + "'", str4, "DContext");
        org.junit.Assert.assertNotNull(sTGroup5);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\"\"" + "'", str9, "\"\"");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "_tset\"\\0\"" + "'", str11, "_tset\"\\0\"");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "\"Python3\"" + "'", str13, "\"Python3\"");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "\"\"\\1\"\"Context" + "'", str17, "\"\"\\1\"\"Context");
    }

    @Test
    public void test1489() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1489");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        org.antlr.v4.tool.Grammar grammar3 = null;
        org.stringtemplate.v4.ST sT4 = null;
        python3Target0.genRecognizerHeaderFile(grammar3, sT4, "");
        python3Target0.language = "Python3";
        java.util.Set<java.lang.String> strSet9 = null;
        python3Target0.badWords = strSet9;
        boolean boolean11 = python3Target0.wantsBaseVisitor();
        java.lang.String str13 = python3Target0.getImplicitSetLabel("Python3");
        org.antlr.v4.codegen.target.Python3Target python3Target14 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean15 = python3Target14.supportsOverloadedMethods();
        java.lang.String str16 = python3Target14.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator17 = python3Target14.getCodeGenerator();
        org.stringtemplate.v4.STGroup sTGroup18 = null;
        python3Target14.templates = sTGroup18;
        org.stringtemplate.v4.STGroup sTGroup20 = python3Target14.templates;
        java.lang.String[] strArray21 = python3Target14.targetCharValueEscape;
        java.lang.String str24 = python3Target14.getTargetStringLiteralFromString("\"12\"", false);
        org.antlr.v4.codegen.target.Python3Target python3Target25 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean26 = python3Target25.supportsOverloadedMethods();
        java.lang.String str27 = python3Target25.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator28 = python3Target25.getCodeGenerator();
        org.stringtemplate.v4.STGroup sTGroup29 = null;
        python3Target25.templates = sTGroup29;
        org.stringtemplate.v4.STGroup sTGroup31 = python3Target25.templates;
        java.lang.String[] strArray32 = python3Target25.targetCharValueEscape;
        java.util.Set<java.lang.String> strSet33 = python3Target25.badWords;
        java.util.Set<java.lang.String> strSet34 = python3Target25.getBadWords();
        python3Target14.badWords = strSet34;
        python3Target0.badWords = strSet34;
        java.lang.String str37 = python3Target0.getLanguage();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str39 = python3Target0.getElementListName("\"_\"\\1\"\"Context");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "_tsetPython3" + "'", str13, "_tsetPython3");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "4.5.2.1" + "'", str16, "4.5.2.1");
        org.junit.Assert.assertNull(codeGenerator17);
        org.junit.Assert.assertNull(sTGroup20);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "\"12\"" + "'", str24, "\"12\"");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "4.5.2.1" + "'", str27, "4.5.2.1");
        org.junit.Assert.assertNull(codeGenerator28);
        org.junit.Assert.assertNull(sTGroup31);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertNotNull(strSet33);
        org.junit.Assert.assertNotNull(strSet34);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "Python3" + "'", str37, "Python3");
    }

    @Test
    public void test1490() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1490");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.lang.String str3 = python3Target1.getTargetStringLiteralFromString("");
        int int4 = python3Target1.getSerializedATNSegmentLimit();
        boolean boolean5 = python3Target1.wantsBaseVisitor();
        org.stringtemplate.v4.STGroup sTGroup6 = python3Target1.templates;
        org.antlr.v4.codegen.model.RuleFunction ruleFunction7 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str8 = python3Target1.getRuleFunctionContextStructName(ruleFunction7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "\"\"" + "'", str3, "\"\"");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 29 + "'", int4 == 29);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(sTGroup6);
    }

    @Test
    public void test1491() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1491");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        org.antlr.v4.tool.Grammar grammar3 = null;
        org.stringtemplate.v4.ST sT4 = null;
        python3Target0.genRecognizerHeaderFile(grammar3, sT4, "");
        org.antlr.v4.codegen.target.Python3Target python3Target7 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray8 = python3Target7.targetCharValueEscape;
        python3Target0.targetCharValueEscape = strArray8;
        boolean boolean10 = python3Target0.supportsOverloadedMethods();
        boolean boolean11 = python3Target0.wantsBaseListener();
        org.antlr.v4.tool.ast.GrammarAST grammarAST12 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean13 = python3Target0.visibleGrammarSymbolCausesIssueInGeneratedCode(grammarAST12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test1492() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1492");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        java.lang.String str2 = python3Target0.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = python3Target0.getCodeGenerator();
        org.stringtemplate.v4.STGroup sTGroup4 = null;
        python3Target0.templates = sTGroup4;
        org.stringtemplate.v4.STGroup sTGroup6 = python3Target0.templates;
        java.lang.String[] strArray7 = python3Target0.targetCharValueEscape;
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = null;
        java.lang.String str11 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator8, "\\\"4.5.2.1\\\"", true);
        java.lang.String str14 = python3Target0.getTargetStringLiteralFromString("", true);
        java.lang.String str15 = python3Target0.getLanguage();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "4.5.2.1" + "'", str2, "4.5.2.1");
        org.junit.Assert.assertNull(codeGenerator3);
        org.junit.Assert.assertNull(sTGroup6);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "\"\\\"4.5.2.1\\\"\"" + "'", str11, "\"\\\"4.5.2.1\\\"\"");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "\"\"" + "'", str14, "\"\"");
        org.junit.Assert.assertNull(str15);
    }

    @Test
    public void test1493() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1493");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!", "hi!" };
        python3Target0.targetCharValueEscape = strArray5;
        java.lang.String str8 = python3Target0.getTargetStringLiteralFromString("\"\"");
        java.lang.String str9 = python3Target0.getLanguage();
        java.util.Set<java.lang.String> strSet10 = python3Target0.getBadWords();
        org.antlr.v4.codegen.target.Python3Target python3Target11 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean12 = python3Target11.supportsOverloadedMethods();
        java.lang.String str13 = python3Target11.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator14 = null;
        java.lang.String str17 = python3Target11.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator14, "", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator18 = null;
        python3Target11.gen = codeGenerator18;
        java.lang.String[] strArray27 = new java.lang.String[] { "\"\"\"\"", "\\12", "\"\"", "4.5.2.1", "", "\"\"\"\"", "\"\"" };
        java.util.LinkedHashSet<java.lang.String> strSet28 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet28, strArray27);
        python3Target11.badWords = strSet28;
        boolean boolean31 = python3Target11.templatesExist();
        org.antlr.v4.codegen.CodeGenerator codeGenerator32 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target33 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator32);
        java.lang.String str35 = python3Target33.getTargetStringLiteralFromString("");
        int int36 = python3Target33.getSerializedATNSegmentLimit();
        boolean boolean37 = python3Target33.wantsBaseVisitor();
        org.stringtemplate.v4.STGroup sTGroup38 = python3Target33.loadTemplates();
        python3Target11.templates = sTGroup38;
        python3Target0.templates = sTGroup38;
        java.lang.String str42 = python3Target0.getImplicitRuleLabel("_tset12");
        java.lang.String str44 = python3Target0.getImplicitSetLabel("\\64");
        java.lang.String str45 = python3Target0.language;
        int int46 = python3Target0.getSerializedATNSegmentLimit();
        org.antlr.v4.tool.ast.GrammarAST grammarAST47 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean48 = python3Target0.grammarSymbolCausesIssueInGeneratedCode(grammarAST47);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\"\"\"\"" + "'", str8, "\"\"\"\"");
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(strSet10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "4.5.2.1" + "'", str13, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "\"\"" + "'", str17, "\"\"");
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "\"\"" + "'", str35, "\"\"");
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 29 + "'", int36 == 29);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(sTGroup38);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "__tset12" + "'", str42, "__tset12");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "_tset\\64" + "'", str44, "_tset\\64");
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 29 + "'", int46 == 29);
    }

    @Test
    public void test1494() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1494");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str2 = python3Target0.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.tool.Grammar grammar3 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target4 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean5 = python3Target4.supportsOverloadedMethods();
        java.lang.String str6 = python3Target4.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = null;
        java.lang.String str10 = python3Target4.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator7, "", true);
        java.lang.String str11 = python3Target4.getVersion();
        org.antlr.v4.tool.Grammar grammar12 = null;
        int[] intArray13 = new int[] {};
        java.lang.String[] strArray14 = python3Target4.getTokenTypesAsTargetLabels(grammar12, intArray13);
        java.lang.String[] strArray15 = python3Target0.getTokenTypesAsTargetLabels(grammar3, intArray13);
        java.lang.String[] strArray16 = python3Target0.targetCharValueEscape;
        java.lang.String str18 = python3Target0.getTargetStringLiteralFromString("\"\"\"\"\"\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator19 = null;
        java.lang.String str22 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator19, "nContex", false);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "\"\"\"\"\"\"" + "'", str2, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "4.5.2.1" + "'", str6, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\"\"" + "'", str10, "\"\"");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "4.5.2.1" + "'", str11, "4.5.2.1");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[]");
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "\"\"\"\"\"\"\"\"" + "'", str18, "\"\"\"\"\"\"\"\"");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "Conte" + "'", str22, "Conte");
    }

    @Test
    public void test1495() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1495");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        python3Target0.language = "4.5.2.1";
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = python3Target0.getCodeGenerator();
        org.antlr.v4.codegen.CodeGenerator codeGenerator4 = python3Target0.gen;
        org.antlr.v4.codegen.CodeGenerator codeGenerator5 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target6 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator5);
        java.lang.String str8 = python3Target6.getTargetStringLiteralFromString("");
        int int9 = python3Target6.getSerializedATNSegmentLimit();
        boolean boolean10 = python3Target6.wantsBaseVisitor();
        org.stringtemplate.v4.STGroup sTGroup11 = python3Target6.loadTemplates();
        python3Target0.templates = sTGroup11;
        java.lang.String str13 = python3Target0.language;
        java.lang.String[] strArray14 = python3Target0.targetCharValueEscape;
        boolean boolean15 = python3Target0.wantsBaseListener();
        org.antlr.v4.tool.ast.GrammarAST grammarAST16 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str17 = python3Target0.getLoopCounter(grammarAST16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(codeGenerator3);
        org.junit.Assert.assertNull(codeGenerator4);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\"\"" + "'", str8, "\"\"");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 29 + "'", int9 == 29);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(sTGroup11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "4.5.2.1" + "'", str13, "4.5.2.1");
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test1496() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1496");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray1 = python3Target0.targetCharValueEscape;
        org.stringtemplate.v4.STGroup sTGroup2 = python3Target0.templates;
        int int3 = python3Target0.getInlineTestSetWordSize();
        int int4 = python3Target0.getSerializedATNSegmentLimit();
        org.stringtemplate.v4.STGroup sTGroup5 = python3Target0.templates;
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target7 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator6);
        java.lang.String str9 = python3Target7.getTargetStringLiteralFromString("");
        int int10 = python3Target7.getSerializedATNSegmentLimit();
        boolean boolean11 = python3Target7.wantsBaseVisitor();
        org.stringtemplate.v4.STGroup sTGroup12 = python3Target7.loadTemplates();
        org.antlr.v4.codegen.CodeGenerator codeGenerator13 = python3Target7.gen;
        boolean boolean14 = python3Target7.wantsBaseListener();
        python3Target7.language = "\\35";
        java.lang.String str18 = python3Target7.encodeIntAsCharEscape(29);
        int int19 = python3Target7.getSerializedATNSegmentLimit();
        org.antlr.v4.codegen.CodeGenerator codeGenerator20 = null;
        java.lang.String str23 = python3Target7.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator20, "\"\"\"\"\"\"Context", true);
        boolean boolean24 = python3Target7.templatesExist();
        java.util.Set<java.lang.String> strSet25 = python3Target7.getBadWords();
        python3Target0.badWords = strSet25;
        java.lang.String str27 = python3Target0.getVersion();
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertNull(sTGroup2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 64 + "'", int3 == 64);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 29 + "'", int4 == 29);
        org.junit.Assert.assertNull(sTGroup5);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\"\"" + "'", str9, "\"\"");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 29 + "'", int10 == 29);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(sTGroup12);
        org.junit.Assert.assertNull(codeGenerator13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "\\35" + "'", str18, "\\35");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 29 + "'", int19 == 29);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "\"\\\"\\\"\\\"\\\"\\\"Contex\"" + "'", str23, "\"\\\"\\\"\\\"\\\"\\\"Contex\"");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(strSet25);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "4.5.2.1" + "'", str27, "4.5.2.1");
    }

    @Test
    public void test1497() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1497");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean1 = python3Target0.supportsOverloadedMethods();
        java.util.Set<java.lang.String> strSet2 = python3Target0.badWords;
        int int3 = python3Target0.getSerializedATNSegmentLimit();
        java.lang.String str4 = python3Target0.getLanguage();
        boolean boolean5 = python3Target0.wantsBaseListener();
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = null;
        java.lang.String str9 = python3Target0.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator6, "\\\"\\\\\\\"\\\\\\\"hi!\\\\\\\"\\\\\\\"\\\"", true);
        java.lang.String str10 = python3Target0.getLanguage();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str12 = python3Target0.getElementListName("12");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 29 + "'", int3 == 29);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\"\\\"\\\\\\\"\\\\\\\"hi!\\\\\\\"\\\\\\\"\\\"\"" + "'", str9, "\"\\\"\\\\\\\"\\\\\\\"hi!\\\\\\\"\\\\\\\"\\\"\"");
        org.junit.Assert.assertNull(str10);
    }

    @Test
    public void test1498() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1498");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str2 = python3Target0.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.codegen.target.Python3Target python3Target3 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean4 = python3Target3.supportsOverloadedMethods();
        java.util.Set<java.lang.String> strSet5 = python3Target3.badWords;
        python3Target0.badWords = strSet5;
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = null;
        python3Target0.gen = codeGenerator7;
        org.antlr.v4.codegen.CodeGenerator codeGenerator9 = python3Target0.getCodeGenerator();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str11 = python3Target0.getElementListName("\"\\12\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "\"\"\"\"\"\"" + "'", str2, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNull(codeGenerator9);
    }

    @Test
    public void test1499() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1499");
        org.antlr.v4.codegen.target.Python3Target python3Target0 = new org.antlr.v4.codegen.target.Python3Target();
        python3Target0.language = "";
        org.antlr.v4.codegen.target.Python3Target python3Target3 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean4 = python3Target3.supportsOverloadedMethods();
        java.lang.String str5 = python3Target3.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = null;
        java.lang.String str9 = python3Target3.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator6, "", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = null;
        python3Target3.gen = codeGenerator10;
        java.lang.String[] strArray19 = new java.lang.String[] { "\"\"\"\"", "\\12", "\"\"", "4.5.2.1", "", "\"\"\"\"", "\"\"" };
        java.util.LinkedHashSet<java.lang.String> strSet20 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet20, strArray19);
        python3Target3.badWords = strSet20;
        python3Target0.badWords = strSet20;
        org.antlr.v4.tool.Grammar grammar24 = null;
        org.stringtemplate.v4.ST sT25 = null;
        python3Target0.genRecognizerHeaderFile(grammar24, sT25, "\"@\"");
        boolean boolean28 = python3Target0.wantsBaseVisitor();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "4.5.2.1" + "'", str5, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\"\"" + "'", str9, "\"\"");
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
    }

    @Test
    public void test1500() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1500");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target1 = new org.antlr.v4.codegen.target.Python3Target(codeGenerator0);
        java.util.Set<java.lang.String> strSet2 = python3Target1.getBadWords();
        java.lang.String str4 = python3Target1.getAltLabelContextStructName("d");
        org.stringtemplate.v4.STGroup sTGroup5 = python3Target1.getTemplates();
        boolean boolean6 = python3Target1.supportsOverloadedMethods();
        org.stringtemplate.v4.STGroup sTGroup7 = python3Target1.getTemplates();
        python3Target1.language = "\"\"";
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = null;
        java.lang.String str13 = python3Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator10, "\\\"4.5.2.1\\\"", false);
        org.antlr.v4.codegen.CodeGenerator codeGenerator14 = python3Target1.gen;
        java.lang.String str16 = python3Target1.getListLabel("_tset12");
        org.antlr.v4.codegen.target.Python3Target python3Target17 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String[] strArray18 = python3Target17.targetCharValueEscape;
        org.stringtemplate.v4.STGroup sTGroup19 = python3Target17.templates;
        int int20 = python3Target17.getInlineTestSetWordSize();
        org.antlr.v4.codegen.CodeGenerator codeGenerator21 = python3Target17.gen;
        org.antlr.v4.tool.Grammar grammar22 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target23 = new org.antlr.v4.codegen.target.Python3Target();
        java.lang.String str25 = python3Target23.getTargetStringLiteralFromString("\"\"\"\"");
        org.antlr.v4.tool.Grammar grammar26 = null;
        org.antlr.v4.codegen.target.Python3Target python3Target27 = new org.antlr.v4.codegen.target.Python3Target();
        boolean boolean28 = python3Target27.supportsOverloadedMethods();
        java.lang.String str29 = python3Target27.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator30 = null;
        java.lang.String str33 = python3Target27.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator30, "", true);
        java.lang.String str34 = python3Target27.getVersion();
        org.antlr.v4.tool.Grammar grammar35 = null;
        int[] intArray36 = new int[] {};
        java.lang.String[] strArray37 = python3Target27.getTokenTypesAsTargetLabels(grammar35, intArray36);
        java.lang.String[] strArray38 = python3Target23.getTokenTypesAsTargetLabels(grammar26, intArray36);
        java.lang.String[] strArray39 = python3Target17.getTokenTypesAsTargetLabels(grammar22, intArray36);
        java.lang.String[] strArray40 = python3Target17.targetCharValueEscape;
        org.antlr.v4.codegen.target.Python3Target.python3Keywords = strArray40;
        python3Target1.targetCharValueEscape = strArray40;
        python3Target1.addBadWords();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str45 = python3Target1.getElementName("\"\"\"hi!\"\"\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "DContext" + "'", str4, "DContext");
        org.junit.Assert.assertNotNull(sTGroup5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(sTGroup7);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "\\\"4.5.2.1\\\"" + "'", str13, "\\\"4.5.2.1\\\"");
        org.junit.Assert.assertNull(codeGenerator14);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "_tset12" + "'", str16, "_tset12");
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertNull(sTGroup19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 64 + "'", int20 == 64);
        org.junit.Assert.assertNull(codeGenerator21);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "\"\"\"\"\"\"" + "'", str25, "\"\"\"\"\"\"");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "4.5.2.1" + "'", str29, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "\"\"" + "'", str33, "\"\"");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "4.5.2.1" + "'", str34, "4.5.2.1");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[]");
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertNotNull(strArray40);
    }
}

